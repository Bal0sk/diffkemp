//===--------------- ResultsCache.h - Parsing result cache ----------------===//
//
//       SimpLL - Program simplifier for analysis of semantic difference      //
//
// This file is published under Apache 2.0 license. See LICENSE for details.
// Author: Tomas Glozar, tglozar@gmail.com
//===----------------------------------------------------------------------===//
///
/// \file
/// This file declares a class that is used for retreiving information about
/// already compared functions from cache files generated by DiffKemp.
///
//===----------------------------------------------------------------------===//

#ifndef DIFFKEMP_SIMPLL_CACHE_H
#define DIFFKEMP_SIMPLL_CACHE_H

#include <llvm/ADT/StringMap.h>
#include <llvm/IR/Function.h>
#include <llvm/Support/MemoryBuffer.h>
#include <set>

using namespace llvm;

/// This class dynamically looks up function pairs in cache files.
/// Only files that are/were needed are opened and parsed.
/// Note: a cache file corresponds to every C source file pair.
class ResultsCache {
  private:
    /// The directory where the cache files reside.
    std::string cacheDirectory;
    /// Map to store the representation of the cache file for each source file.
    StringMap<std::set<std::pair<std::string, std::string>>> cacheMap;
    /// Parses a cache file and loads it into the cache map.
    void importFileToCacheMap(std::string filename);

  public:
    ResultsCache(std::string cacheDirectory) : cacheDirectory(cacheDirectory){};
    /// Find the information whether the function pair is cached in the
    /// corresponding file.
    bool isFunctionPairCached(const Function *FunL, const Function *FunR);
};

#endif // DIFFKEMP_SIMPLL_CACHE_H
