; ModuleID = 'tests/regression/kernel_modules/ivtv/ivtv_new.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm "\09.section \22___kcrctab+ivtv_ext_init\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_ext_init\09"
module asm "\09.long\09__crc_ivtv_ext_init\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_set_irq_mask\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_set_irq_mask\09"
module asm "\09.long\09__crc_ivtv_set_irq_mask\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_api\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_api\09"
module asm "\09.long\09__crc_ivtv_api\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_vapi\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_vapi\09"
module asm "\09.long\09__crc_ivtv_vapi\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_vapi_result\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_vapi_result\09"
module asm "\09.long\09__crc_ivtv_vapi_result\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_clear_irq_mask\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_clear_irq_mask\09"
module asm "\09.long\09__crc_ivtv_clear_irq_mask\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_debug\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_debug\09"
module asm "\09.long\09__crc_ivtv_debug\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_fw_debug\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_fw_debug\09"
module asm "\09.long\09__crc_ivtv_fw_debug\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_reset_ir_gpio\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_reset_ir_gpio\09"
module asm "\09.long\09__crc_ivtv_reset_ir_gpio\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_udma_setup\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_udma_setup\09"
module asm "\09.long\09__crc_ivtv_udma_setup\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_udma_unmap\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_udma_unmap\09"
module asm "\09.long\09__crc_ivtv_udma_unmap\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_udma_alloc\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_udma_alloc\09"
module asm "\09.long\09__crc_ivtv_udma_alloc\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_udma_prepare\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_udma_prepare\09"
module asm "\09.long\09__crc_ivtv_udma_prepare\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_init_on_first_open\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_init_on_first_open\09"
module asm "\09.long\09__crc_ivtv_init_on_first_open\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_firmware_check\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_firmware_check\09"
module asm "\09.long\09__crc_ivtv_firmware_check\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_claim_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_claim_stream\09"
module asm "\09.long\09__crc_ivtv_claim_stream\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_release_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_release_stream\09"
module asm "\09.long\09__crc_ivtv_release_stream\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_start_v4l2_encode_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_start_v4l2_encode_stream\09"
module asm "\09.long\09__crc_ivtv_start_v4l2_encode_stream\09"
module asm "\09.previous\09\09\09\09\09"
module asm "\09.section \22___kcrctab+ivtv_stop_v4l2_encode_stream\22, \22a\22\09"
module asm "\09.weak\09__crc_ivtv_stop_v4l2_encode_stream\09"
module asm "\09.long\09__crc_ivtv_stop_v4l2_encode_stream\09"
module asm "\09.previous\09\09\09\09\09"

%struct.ivtv_card = type { i32, i8*, i8*, i32, i32, i32, i32, i32, i32, [6 x %struct.ivtv_card_video_input], [3 x %struct.ivtv_card_audio_input], %struct.ivtv_card_audio_input, i32, %struct.ivtv_card_output*, i8, i8, %struct.ivtv_gpio_init, %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_init, %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_init, [3 x %struct.load_weight], %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_pci_info* }
%struct.ivtv_card_video_input = type { i8, i8, i16 }
%struct.ivtv_card_audio_input = type { i8, i32, i16 }
%struct.ivtv_card_output = type { [32 x i8], i16 }
%struct.ivtv_gpio_audio_mode = type { i16, i16, i16, i16, i16, i16 }
%struct.ivtv_gpio_video_input = type { i16, i16, i16, i16 }
%struct.ivtv_gpio_init = type { i16, i16 }
%struct.load_weight = type { i64, i32 }
%struct.ivtv_card_tuner_i2c = type { [2 x i16], [2 x i16], [4 x i16] }
%struct.ivtv_card_pci_info = type { i16, i16, i16 }
%struct.cx2341x_handler.547 = type { i32, i32, i16, i16, i16, i32, %struct.v4l2_ctrl_handler, i8*, i32 (i8*, i32, i32, i32, i32*)*, %struct.cx2341x_handler_ops.549*, %struct.v4l2_ctrl*, %struct.anon.87, %struct.anon.88, %struct.anon.89, %struct.anon.88, %struct.anon.91, %struct.anon.88, %struct.anon.88, %struct.anon.94 }
%struct.v4l2_ctrl_handler = type { %struct.mutex, %struct.mutex*, %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl_ref**, void (%struct.v4l2_ctrl*, i8*)*, i8*, i16, i32 }
%struct.mutex = type { %union.anon.3, %struct.spinlock, %struct.qspinlock, %struct.list_head, i8*, %struct.lockdep_map }
%union.anon.3 = type { i64 }
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.qspinlock, i32, i32, i8*, %struct.lockdep_map }
%struct.qspinlock = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.lockdep_map = type { %struct.lock_class_key*, [2 x %struct.lock_class*], i8*, i32, i64 }
%struct.lock_class_key = type { [8 x %struct.lockdep_subclass_key] }
%struct.lockdep_subclass_key = type { i8 }
%struct.lock_class = type { %struct.hlist_node, %struct.list_head, %struct.lockdep_subclass_key*, i32, i32, i64, [13 x %struct.stack_trace], %struct.list_head, %struct.list_head, i32, i64, i8*, i32, [4 x i64], [4 x i64] }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.stack_trace = type { i32, i32, i64*, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.v4l2_ctrl_ref = type { %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl_helper* }
%struct.v4l2_ctrl_helper = type opaque
%struct.cx2341x_handler_ops.549 = type { {}*, {}*, {}*, {}* }
%struct.v4l2_ctrl = type { %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl**, i32, i24, %struct.v4l2_ctrl_ops*, %struct.v4l2_ctrl_type_ops*, i32, i8*, i32, i64, i64, i64, i32, i32, [4 x i32], i32, %union.anon.3, %union.anon.59, i64, i8*, i32, %struct.atomic_t, %union.v4l2_ctrl_ptr, %union.v4l2_ctrl_ptr }
%struct.v4l2_ctrl_ops = type { i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)* }
%struct.v4l2_ctrl_type_ops = type { i1 (%struct.v4l2_ctrl*, i32, i32*, i32*)*, void (%struct.v4l2_ctrl*, i32, i32*)*, void (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*, i32, i32*)* }
%union.anon.59 = type { i8** }
%union.v4l2_ctrl_ptr = type { i32* }
%struct.anon.87 = type { %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl* }
%struct.anon.89 = type { %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl* }
%struct.anon.91 = type { %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl* }
%struct.anon.88 = type { %struct.v4l2_ctrl*, %struct.v4l2_ctrl* }
%struct.anon.94 = type { %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl* }
%struct.ivtv.1060 = type { %struct.pci_dev*, %struct.ivtv_card*, i8*, %struct.ivtv_card_tuner_i2c*, i8, i8, i8, i8, i32, i32, i64, %struct.v4l2_subdev*, %struct.v4l2_subdev*, %struct.v4l2_subdev*, i64, i8*, i8*, i8*, %struct.ivtv_options, %struct.v4l2_device, %struct.cx2341x_handler, %struct.anon.88, %struct.anon.88, %struct.v4l2_ctrl_handler, %struct.v4l2_subdev, i16, i64, i8, i8, i8, i8, i32, i32, i32, i32, i64, i64, i8, i8, %struct.spinlock, %struct.mutex, [9 x i32], [9 x %struct.ivtv_stream.1071], %struct.atomic_t, %struct.atomic_t, %struct.snd_ivtv_card*, void (%struct.snd_ivtv_card*, i8*, i64)*, %struct.work_struct, i32, i32, %struct.kthread_worker, %struct.task_struct*, %struct.kthread_work, %struct.spinlock, i32, i32, i32, i32, i32, %struct.ivtv_user_dma, %struct.timer_list, i32, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data, [256 x %struct.ivtv_api_cache], %struct.i2c_adapter, %struct.i2c_algo_bit_data, %struct.i2c_client, i32, %struct.mutex, %struct.IR_i2c_init_data, i32, i32, i32, i32, [400 x %struct.v4l2_enc_idx_entry], i32, i32, i32, i8, i64, i64, [3 x i32], i64, i32, %struct.vbi_info, %struct.yuv_playback_info, i64, i32, i32, i32, i8, i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.osd_info*, void (%struct.ivtv.1060*)* }
%struct.pci_dev = type <{ %struct.list_head, %struct.pci_bus*, %struct.pci_bus*, i8*, %struct.proc_dir_entry*, %struct.pci_slot*, i32, i16, i16, i16, i16, i32, i8, i8, i16, i8, i8, i8, i8, i8, i8, i16, [4 x i8], i64*, %struct.pci_driver*, i64, %struct.device_dma_parameters, i32, i8, [3 x i8], i32, i32, %struct.pcie_link_state*, i32, [4 x i8], %struct.device, i32, i32, [17 x %struct.resource], i8, i32, i8, i16, %struct.atomic_t, [16 x i32], [4 x i8], %struct.hlist_head, %struct.bin_attribute*, i32, [4 x i8], [17 x %struct.bin_attribute*], [17 x %struct.bin_attribute*], i8, i8, [6 x i8], %struct.attribute_group**, %struct.pci_vpd*, %union.anon.52, i16, i8, i8, %struct.atomic_t, i64, i64, i8* }>
%struct.pci_bus = type { %struct.list_head, %struct.pci_bus*, %struct.list_head, %struct.list_head, %struct.pci_dev*, %struct.list_head, [4 x %struct.resource*], %struct.list_head, %struct.resource, %struct.pci_ops*, %struct.msi_controller*, i8*, %struct.proc_dir_entry*, i8, i8, i8, i8, [48 x i8], i16, i16, %struct.device*, %struct.device, %struct.bin_attribute*, %struct.bin_attribute*, i8 }
%struct.resource = type { i64, i64, i8*, i64, i64, %struct.resource*, %struct.resource*, %struct.resource* }
%struct.pci_ops = type { i32 (%struct.pci_bus*)*, void (%struct.pci_bus*)*, i8* (%struct.pci_bus*, i32, i32)*, i32 (%struct.pci_bus*, i32, i32, i32, i32*)*, i32 (%struct.pci_bus*, i32, i32, i32, i32)* }
%struct.msi_controller = type opaque
%struct.proc_dir_entry = type opaque
%struct.pci_slot = type { %struct.pci_bus*, %struct.list_head, %struct.hotplug_slot*, i8, %struct.kobject }
%struct.hotplug_slot = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, %struct.delayed_work, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [32 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16, i8, %struct.lock_class_key*, %struct.lock_class_key }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon, i8*, i16, i16, i32, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)*, %struct.lock_class_key }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, %union.anon.3, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, i8*, %struct.list_head, %struct.list_head, %struct.address_space* }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.0, %struct.list_head, %struct.list_head, %union.anon.50 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%struct.lockref = type { %union.anon.47 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*, i32)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, i8*, %struct.xattr_handler**, %struct.fscrypt_operations*, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, [32 x i8], [16 x i8], i8*, i32, i32, i32, %struct.mutex, i8*, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %union.anon.3, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, [32 x i8], %struct.list_lru, [40 x i8], %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [36 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [16 x i8] }
%struct.file_system_type = type { i8*, i32, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.module = type { i32, %struct.list_head, [56 x i8], %struct.module_kobject, %struct.module_attribute*, i8*, i8*, %struct.kobject*, %struct.kernel_symbol*, i32*, i32, %struct.mutex, %struct.kernel_param*, i32, i32, %struct.kernel_symbol*, i32*, %struct.kernel_symbol*, i32*, i32, i32, %struct.kernel_symbol*, i32*, i8, i8, %struct.kernel_symbol*, i32*, i32, i32, %struct.exception_table_entry*, i32 ()*, [56 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i64, i32, %struct.list_head, %struct.bug_entry*, %struct.mod_kallsyms*, %struct.mod_kallsyms, %struct.module_sect_attrs*, %struct.module_notes_attrs*, i8*, i8*, i32, i32, %struct.tracepoint**, i32, i8**, %struct.trace_event_call**, i32, %struct.trace_enum_map**, i32, i32, i64*, i8, i8, %struct.klp_modinfo*, %struct.list_head, %struct.list_head, void ()*, %struct.atomic_t, void ()**, i32, [36 x i8] }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.completion = type { i32, %struct.__wait_queue_head }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.51 }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%union.anon.51 = type { i8* }
%struct.kernel_symbol = type { i64, i8* }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.module_layout = type { i8*, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { %struct.module*, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.mod_arch_specific = type {}
%struct.bug_entry = type { i32, i32, i16, i16 }
%struct.mod_kallsyms = type { %struct.elf64_sym*, i32, i8* }
%struct.elf64_sym = type { i32, i8, i8, i16, i64, i64 }
%struct.module_sect_attrs = type opaque
%struct.module_notes_attrs = type opaque
%struct.tracepoint = type { i8*, %struct.qspinlock, i32 ()*, void ()*, %struct.tracepoint_func* }
%struct.tracepoint_func = type { i8*, i8*, i32 }
%struct.trace_event_call = type opaque
%struct.trace_enum_map = type opaque
%struct.klp_modinfo = type { %struct.elf64_hdr, %struct.elf64_shdr*, i8*, i32 }
%struct.elf64_hdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.elf64_shdr = type { i32, i32, i64, i64, i64, i64, i32, i32, i64, i64 }
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, %struct.dquot** (%struct.inode*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.atomic_t, %struct.__wait_queue_head, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %struct.qspinlock, i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.page = type { i64, %union.anon.6, %union.anon.3, %union.anon.3, %union.anon.0, %union.anon.3, %struct.mem_cgroup* }
%union.anon.6 = type { %struct.address_space* }
%struct.mem_cgroup = type opaque
%struct.shrink_control = type { i32, i64, i32, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.atomic_t*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %union.anon.3, %struct.list_head, %struct.raw_spinlock, %struct.qspinlock, %struct.task_struct*, %struct.lockdep_map }
%struct.xattr_handler = type opaque
%struct.fscrypt_operations = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i32, %struct.hd_struct*, i32, i32, %struct.gendisk*, %struct.request_queue*, %struct.backing_dev_info*, %struct.list_head, i64, i32, %struct.mutex }
%struct.hd_struct = type opaque
%struct.gendisk = type opaque
%struct.request_queue = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.mutex, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.__wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rw_semaphore, %struct.rcuwait, i32 }
%struct.rcu_sync = type { i32, i32, %struct.__wait_queue_head, i32, %struct.callback_head, i32 }
%struct.rcuwait = type { %struct.task_struct* }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i32, i64, i64, %struct.list_head, %union.anon.3* }
%struct.workqueue_struct = type opaque
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node*, %struct.list_head }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, %struct.list_lru_memcg*, [24 x i8] }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.list_lru_memcg = type { [0 x %struct.list_lru_one*] }
%union.anon.0 = type { %struct.list_head }
%union.anon.50 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.atomic_t, %struct.atomic_t, i32, %struct.posix_acl*, %struct.posix_acl*, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i8*, i64, %struct.atomic_t, i32, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.spinlock, i16, i32, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.bdi_writeback*, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.2, i64, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.file_operations*, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.46, i32, i32, %struct.hlist_head, %struct.fscrypt_info*, i8* }
%struct.posix_acl = type opaque
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16, i32*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.iattr = type { i32, i16, %struct.atomic_t, %struct.atomic_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.atomic_t, %struct.atomic_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64 }
%struct.fiemap_extent_info = type { i32, i32, i32, %struct.fiemap_extent* }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.timespec = type { i64, i64 }
%struct.bdi_writeback = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.radix_tree_root, %struct.spinlock, %struct.atomic_t, %struct.rb_root, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, %struct.spinlock, i32, %struct.list_head, i8* }
%struct.radix_tree_root = type { i32, %struct.radix_tree_node* }
%struct.radix_tree_node = type { i8, i8, i8, i8, %struct.radix_tree_node*, %struct.radix_tree_root*, %union.anon.0, [64 x i8*], [3 x [1 x i64]] }
%struct.rb_root = type { %struct.rb_node* }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32 }
%struct.iov_iter = type { i32, i64, i64, %union.anon.32, %union.anon.3 }
%union.anon.32 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%struct.swap_info_struct = type opaque
%union.anon.46 = type { %struct.pipe_inode_info* }
%struct.pipe_inode_info = type { %struct.mutex, %struct.__wait_queue_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.page*, %struct.fasync_struct*, %struct.fasync_struct*, %struct.pipe_buffer*, %struct.user_struct* }
%struct.fasync_struct = type { %struct.spinlock, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.pipe_buffer = type { %struct.page*, i32, i32, %struct.pipe_buf_operations*, i32, i64 }
%struct.pipe_buf_operations = type { i32, i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, i32 (%struct.pipe_inode_info*, %struct.pipe_buffer*)*, void (%struct.pipe_inode_info*, %struct.pipe_buffer*)* }
%struct.user_struct = type { %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.3, i64, i64, i64, %union.anon.3, %struct.key*, %struct.key*, %struct.hlist_node, %struct.atomic_t, %union.anon.3 }
%struct.key = type { %struct.atomic_t, i32, %union.anon.98, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.3, i64, %struct.atomic_t, %struct.atomic_t, i32, i16, i16, i64, %union.anon.100, %union.anon.102, i32 (%struct.key*, %struct.key_type*, %union.key_payload*)* }
%union.anon.98 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.100 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { %struct.key_type*, i8*, i64 }
%struct.key_type = type opaque
%union.anon.102 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.fscrypt_info = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, %struct.file*, i64, i64)*, i64 (%struct.file*, i64, i64, %struct.file*, i64)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, i64 }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %union.anon.3, i64, %struct.timerqueue_node, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.mempolicy*, %struct.vm_userfaultfd_ctx }
%struct.mm_struct = type { %struct.vm_area_struct*, %struct.rb_root, i32, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %union.anon.3*, %struct.atomic_t, %struct.atomic_t, %union.anon.3, %union.anon.3, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [46 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.cpumask*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.task_struct*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_mm*, %struct.cpumask, i64, i64, i32, i8, %struct.uprobes_state, %union.anon.3, %struct.work_struct }
%struct.mm_rss_stat = type { [4 x %union.anon.3] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16, i8* }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_mm = type opaque
%struct.cpumask = type { [128 x i64] }
%struct.uprobes_state = type { %struct.xol_area* }
%struct.xol_area = type opaque
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.mempolicy = type opaque
%struct.vm_userfaultfd_ctx = type { %struct.userfaultfd_ctx* }
%struct.userfaultfd_ctx = type opaque
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, i8*, i32, i8, i32, i32, %struct.pid*, %struct.__wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.44 }
%struct.pid = type { %struct.atomic_t, i32, [3 x %struct.hlist_head], %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace*, %struct.hlist_node }
%struct.pid_namespace = type opaque
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i32 (%struct.file_lock*, %struct.file_lock*)*, i64 (%struct.file_lock*)*, i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)* }
%union.anon.44 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.rwlock_t = type { %struct.qrwlock, i32, i32, i8*, %struct.lockdep_map }
%struct.qrwlock = type { %struct.atomic_t, %struct.qspinlock }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, i8*, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, i8*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %struct.callback_head }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.atomic_t] }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, %struct.mempolicy*)*, %struct.mempolicy* (%struct.vm_area_struct*, i64)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %union.anon.3*, %union.anon.3*, %union.anon.3, %struct.page*, %struct.mem_cgroup*, %struct.page*, %union.anon.3*, %struct.spinlock*, %struct.page* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.qspinlock }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.pci_driver = type { %struct.list_head, i8*, %struct.pci_device_id*, i32 (%struct.pci_dev*, %struct.pci_device_id*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*)*, i32 (%struct.pci_dev*, i32)*, %struct.pci_error_handlers*, %struct.device_driver, %struct.__wait_queue_head }
%struct.pci_device_id = type { i32, i32, i32, i32, i32, i32, i64 }
%struct.pci_error_handlers = type { i32 (%struct.pci_dev*, i32)*, i32 (%struct.pci_dev*)*, i32 (%struct.pci_dev*)*, void (%struct.pci_dev*, i1)*, void (%struct.pci_dev*)* }
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.dev_pm_ops*, %struct.driver_private* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.device_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.driver_private = type opaque
%struct.device_dma_parameters = type { i32, i64 }
%struct.pcie_link_state = type opaque
%struct.device = type { %struct.device*, %struct.device_private*, %struct.kobject, i8*, %struct.device_type*, %struct.mutex, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.dev_pin_info*, %struct.list_head, i32, %struct.dma_map_ops*, i64*, i64, i64, %struct.device_dma_parameters*, %struct.list_head, %struct.dma_coherent_mem*, %struct.cma*, %union.anon.51, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.klist_node, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.iommu_fwspec*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.atomic_t*, %struct.atomic_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.atomic_t, i16, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.timer_list, i64, %struct.work_struct, %struct.__wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.wakeup_source = type { i8*, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type { %struct.list_head, i8*, %struct.irq_domain_ops*, i8*, i32, %struct.fwnode_handle*, i32, %struct.irq_domain_chip_generic*, %struct.irq_domain*, i64, i32, i32, %struct.radix_tree_root, [0 x i32] }
%struct.irq_domain_ops = type { i32 (%struct.irq_domain*, %struct.device_node*, i32)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i32)*, i32 (%struct.irq_domain*, i32, i64)*, void (%struct.irq_domain*, i32)*, i32 (%struct.irq_domain*, %struct.device_node*, i32*, i32, i64*, i32*)*, i32 (%struct.irq_domain*, i32, i32, i8*)*, void (%struct.irq_domain*, i32, i32)*, void (%struct.irq_domain*, %struct.irq_data*)*, void (%struct.irq_domain*, %struct.irq_data*)*, i32 (%struct.irq_domain*, %struct.irq_fwspec*, i64*, i32*)* }
%struct.irq_fwspec = type { %struct.fwnode_handle*, i32, [16 x i32] }
%struct.irq_data = type { i32, i32, i64, %struct.irq_common_data*, %struct.irq_chip*, %struct.irq_domain*, %struct.irq_data*, i8* }
%struct.irq_common_data = type { i32, i32, i8*, %struct.msi_desc*, %struct.cpumask* }
%struct.msi_desc = type opaque
%struct.irq_chip = type { %struct.device*, i8*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, i32 (%struct.irq_data*, %struct.cpumask*, i1)*, i32 (%struct.irq_data*)*, i32 (%struct.irq_data*, i32)*, i32 (%struct.irq_data*, i32)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.seq_file*)*, i32 (%struct.irq_data*)*, void (%struct.irq_data*)*, void (%struct.irq_data*, %struct.msi_msg*)*, void (%struct.irq_data*, %struct.msi_msg*)*, i32 (%struct.irq_data*, i32, i8*)*, i32 (%struct.irq_data*, i32, i1)*, i32 (%struct.irq_data*, i8*)*, void (%struct.irq_data*, i32)*, void (%struct.irq_data*, %struct.cpumask*)*, i64 }
%struct.msi_msg = type opaque
%struct.irq_domain_chip_generic = type { i32, i32, i32, i32, i32, [0 x %struct.irq_chip_generic*] }
%struct.irq_chip_generic = type { %struct.raw_spinlock, i8*, i32 (i8*)*, void (i32, i8*)*, void (%struct.irq_chip_generic*)*, void (%struct.irq_chip_generic*)*, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i64, i64, %struct.irq_domain*, %struct.list_head, [0 x %struct.irq_chip_type] }
%struct.irq_chip_type = type { %struct.irq_chip, %struct.task_io_accounting, void (%struct.irq_desc*)*, i32, i32, i32* }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.irq_desc = type { %struct.irq_common_data, %struct.irq_data, i32*, {}*, %struct.irqaction*, i32, i32, i32, i32, i32, i64, i32, %struct.atomic_t, i32, %struct.raw_spinlock, %struct.cpumask*, %struct.cpumask*, %struct.cpumask*, %struct.irq_affinity_notify*, %struct.cpumask*, i64, %struct.atomic_t, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.proc_dir_entry*, %struct.callback_head, %struct.kobject, i32, %struct.module*, i8*, [3392 x i8] }
%struct.irqaction = type { i32 (i32, i8*)*, i8*, i8*, %struct.irqaction*, i32 (i32, i8*)*, %struct.task_struct*, %struct.irqaction*, i32, i32, i64, i64, i8*, %struct.proc_dir_entry*, [4000 x i8] }
%struct.irq_affinity_notify = type { i32, %struct.kref, %struct.work_struct, void (%struct.irq_affinity_notify*, %struct.cpumask*)*, void (%struct.kref*)* }
%struct.dev_pin_info = type { %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.dma_map_ops = type { i8* (%struct.device*, i64, i64*, i32, i64)*, void (%struct.device*, i64, i8*, i64, i64)*, i32 (%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64)*, i32 (%struct.device*, %struct.sg_table*, i8*, i64, i64, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i64 (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i64, i32, i32, i64, i32 }
%struct.dma_coherent_mem = type opaque
%struct.cma = type opaque
%struct.device_node = type { i8*, i8*, i32, i8*, %struct.fwnode_handle, %struct.property*, %struct.property*, %struct.device_node*, %struct.device_node*, %struct.device_node*, %struct.kobject, i64, i8* }
%struct.fwnode_handle = type { i32, %struct.fwnode_handle* }
%struct.property = type { i8*, i32, i8*, %struct.property*, i64, i32, %struct.bin_attribute }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.class = type { i8*, %struct.module*, %struct.class_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.class_attribute = type { %struct.attribute, i64 (%struct.class*, %struct.class_attribute*, i8*)*, i64 (%struct.class*, %struct.class_attribute*, i8*, i64)* }
%struct.iommu_group = type opaque
%struct.iommu_fwspec = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.pci_vpd = type opaque
%union.anon.52 = type { %struct.pci_sriov* }
%struct.pci_sriov = type opaque
%struct.ivtv_options = type { [9 x i32], i32, i32, i32, i32, i32 }
%struct.v4l2_device = type { %struct.device*, %struct.media_device*, %struct.list_head, %struct.spinlock, [36 x i8], void (%struct.v4l2_subdev*, i32, i8*)*, %struct.v4l2_ctrl_handler*, %struct.v4l2_prio_state, %struct.kref, void (%struct.v4l2_device*)* }
%struct.media_device = type { %struct.device*, %struct.media_devnode*, [32 x i8], [32 x i8], [40 x i8], [32 x i8], i32, i32, i64, i32, %struct.ida, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.media_graph, i8*, i32 (%struct.media_entity*, %struct.media_pipeline*)*, void (%struct.media_entity*)*, %struct.media_device_ops* }
%struct.media_devnode = type { %struct.media_device*, %struct.media_file_operations*, %struct.device, %struct.cdev, %struct.device*, i32, i64, void (%struct.media_devnode*)* }
%struct.media_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.ida = type { %struct.radix_tree_root }
%struct.media_graph = type { [16 x %struct.anon.53], %struct.media_entity_enum, i32 }
%struct.anon.53 = type { %struct.media_entity*, %struct.list_head* }
%struct.media_entity = type { %struct.media_gobj, i8*, i32, i32, i64, i16, i16, i16, i32, %struct.media_pad*, %struct.list_head, %struct.media_entity_operations*, i32, i32, %struct.media_pipeline*, %union.anon.25 }
%struct.media_gobj = type { %struct.media_device*, i32, %struct.list_head }
%struct.media_pad = type { %struct.media_gobj, %struct.media_entity*, i16, i64 }
%struct.media_entity_operations = type { i32 (%struct.media_entity*, %struct.media_pad*, %struct.media_pad*, i32)*, i32 (%struct.media_link*)* }
%struct.media_link = type { %struct.media_gobj, %struct.list_head, %union.anon.54, %union.anon.54, %struct.media_link*, i64, i8 }
%union.anon.54 = type { %struct.media_gobj* }
%struct.media_pipeline = type { i32, %struct.media_graph }
%union.anon.25 = type { %struct.anon.26 }
%struct.anon.26 = type { i32, i32 }
%struct.media_entity_enum = type { i64*, i32 }
%struct.media_device_ops = type { i32 (%struct.media_link*, i32, i32)* }
%struct.v4l2_prio_state = type { [4 x %struct.atomic_t] }
%struct.cx2341x_handler = type { i32, i32, i16, i16, i16, i32, %struct.v4l2_ctrl_handler, i8*, i32 (i8*, i32, i32, i32, i32*)*, %struct.cx2341x_handler_ops*, %struct.v4l2_ctrl*, %struct.anon.87, %struct.anon.88, %struct.anon.89, %struct.anon.88, %struct.anon.91, %struct.anon.88, %struct.anon.88, %struct.anon.94 }
%struct.cx2341x_handler_ops = type { i32 (%struct.cx2341x_handler*, i32)*, i32 (%struct.cx2341x_handler*, i32)*, i32 (%struct.cx2341x_handler*, i32)*, i32 (%struct.cx2341x_handler*, i32)* }
%struct.v4l2_subdev = type { %struct.media_entity, %struct.list_head, %struct.module*, i8, i32, %struct.v4l2_device*, %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_internal_ops*, %struct.v4l2_ctrl_handler*, [32 x i8], i32, i8*, i8*, %struct.video_device*, %struct.device*, %struct.device_node*, %struct.list_head, %struct.v4l2_async_subdev*, %struct.v4l2_async_notifier*, %struct.v4l2_subdev_platform_data* }
%struct.v4l2_subdev_ops = type { %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_ir_ops*, %struct.v4l2_subdev_sensor_ops*, %struct.v4l2_subdev_pad_ops* }
%struct.v4l2_subdev_core_ops = type { i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i64, %struct.v4l2_subdev_io_pin_config*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i64 (%struct.v4l2_subdev*, i32, i8*)*, i64 (%struct.v4l2_subdev*, i32, i64)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i8*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)* }
%struct.v4l2_subdev_io_pin_config = type { i32, i8, i8, i8, i8 }
%struct.v4l2_dbg_register = type { %struct.v4l2_dbg_match, i32, i64, i64 }
%struct.v4l2_dbg_match = type { i32, %union.anon.61 }
%union.anon.61 = type { i32, [28 x i8] }
%struct.v4l2_fh = type { %struct.list_head, %struct.video_device*, %struct.v4l2_ctrl_handler*, i32, %struct.__wait_queue_head, %struct.list_head, %struct.list_head, i32, i32, %struct.v4l2_m2m_ctx* }
%struct.v4l2_m2m_ctx = type opaque
%struct.v4l2_event_subscription = type { i32, i32, i32, [5 x i32] }
%struct.v4l2_subdev_tuner_ops = type { i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency_band*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)* }
%struct.v4l2_frequency = type { i32, i32, i32, [8 x i32] }
%struct.v4l2_frequency_band = type { i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.v4l2_tuner = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.v4l2_modulator = type { i32, [32 x i8], i32, i32, i32, i32, i32, [3 x i32] }
%struct.tuner_setup = type { i16, i32, i32, i8*, i32 (i8*, i32, i32, i32)* }
%struct.v4l2_priv_tun_config = type { i32, i8* }
%struct.v4l2_subdev_audio_ops = type { i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32)* }
%struct.v4l2_subdev_video_ops = type { i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, i8*, i32*)* }
%struct.v4l2_streamparm = type { i32, %union.anon.77 }
%union.anon.77 = type { %struct.v4l2_captureparm, [160 x i8] }
%struct.v4l2_captureparm = type { i32, i32, %struct.anon.26, i32, i32, [4 x i32] }
%struct.v4l2_subdev_frame_interval = type { i32, %struct.anon.26, [9 x i32] }
%struct.v4l2_dv_timings = type { i32, %union.anon.80 }
%union.anon.80 = type { [32 x i32] }
%struct.v4l2_subdev_vbi_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* }
%struct.v4l2_decode_vbi_line = type { i32, i8*, i32, i32 }
%struct.v4l2_sliced_vbi_data = type { i32, i32, i32, i32, [48 x i8] }
%struct.v4l2_sliced_vbi_cap = type { i16, [2 x [24 x i16]], i32, [3 x i32] }
%struct.v4l2_vbi_format = type { i32, i32, i32, i32, [2 x i32], [2 x i32], i32, [2 x i32] }
%struct.v4l2_sliced_vbi_format = type { i16, [2 x [24 x i16]], i32, [2 x i32] }
%struct.v4l2_subdev_ir_ops = type { i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)* }
%struct.v4l2_subdev_ir_parameters = type { i32, i32, i8, i8, i8, i8, i32, i32, i32, i8, i8, i32, i32, i32, i32 }
%struct.v4l2_subdev_sensor_ops = type { i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32*)* }
%struct.v4l2_subdev_pad_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_mbus_code_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_size_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_interval_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.media_link*, %struct.v4l2_subdev_format*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)* }
%struct.v4l2_subdev_pad_config = type { %struct.v4l2_mbus_framefmt, %struct.v4l2_rect, %struct.v4l2_rect }
%struct.v4l2_mbus_framefmt = type { i32, i32, i32, i32, i32, i16, i16, i16, [11 x i16] }
%struct.v4l2_subdev_mbus_code_enum = type { i32, i32, i32, i32, [8 x i32] }
%struct.v4l2_subdev_frame_size_enum = type { i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32] }
%struct.v4l2_subdev_frame_interval_enum = type { i32, i32, i32, i32, i32, %struct.anon.26, i32, [8 x i32] }
%struct.v4l2_subdev_format = type { i32, i32, %struct.v4l2_mbus_framefmt, [8 x i32] }
%struct.v4l2_subdev_selection = type { i32, i32, i32, i32, %struct.v4l2_rect, [8 x i32] }
%struct.v4l2_edid = type { i32, i32, i32, [5 x i32], i8* }
%struct.v4l2_dv_timings_cap = type { i32, i32, [2 x i32], %union.anon.81 }
%union.anon.81 = type { %struct.v4l2_bt_timings_cap, [24 x i8] }
%struct.v4l2_bt_timings_cap = type { i32, i32, i32, i32, i64, i64, i32, i32, [16 x i32] }
%struct.v4l2_enum_dv_timings = type { i32, i32, [2 x i32], %struct.v4l2_dv_timings }
%struct.v4l2_mbus_frame_desc = type { [4 x %struct.v4l2_mbus_frame_desc_entry], i16 }
%struct.v4l2_mbus_frame_desc_entry = type { i16, i32, i32 }
%struct.v4l2_subdev_internal_ops = type { i32 (%struct.v4l2_subdev*)*, void (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)* }
%struct.v4l2_subdev_fh = type { %struct.v4l2_fh, %struct.v4l2_subdev_pad_config* }
%struct.video_device = type { %struct.media_entity, %struct.media_intf_devnode*, %struct.media_pipeline, %struct.v4l2_file_operations*, i32, %struct.device, %struct.cdev*, %struct.v4l2_device*, %struct.device*, %struct.v4l2_ctrl_handler*, %struct.vb2_queue*, %struct.v4l2_prio_state*, [32 x i8], i32, i32, i32, i16, i64, i32, %struct.spinlock, %struct.list_head, i32, i64, void (%struct.video_device*)*, %struct.v4l2_ioctl_ops*, [3 x i64], [3 x i64], %struct.mutex* }
%struct.media_intf_devnode = type { %struct.media_interface, i32, i32 }
%struct.media_interface = type { %struct.media_gobj, %struct.list_head, i32, i32 }
%struct.v4l2_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.vb2_queue = type opaque
%struct.v4l2_ioctl_ops = type { i32 (%struct.file*, i8*, %struct.v4l2_capability*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, i64)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, %struct.v4l2_input*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_output*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)*, i32 (%struct.file*, i8*, %struct.v4l2_query_ext_ctrl*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency_band*)*, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.file*, i8*)*, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i64 (%struct.file*, i8*, i1, i32, i8*)* }
%struct.v4l2_capability = type { [16 x i8], [32 x i8], [32 x i8], i32, i32, i32, [3 x i32] }
%struct.v4l2_fmtdesc = type { i32, i32, i32, [32 x i8], i32, [4 x i32] }
%struct.v4l2_format = type { i32, %union.anon.62 }
%union.anon.62 = type { %struct.v4l2_window, [144 x i8] }
%struct.v4l2_window = type { %struct.v4l2_rect, i32, i32, %struct.v4l2_clip*, i32, i8*, i8 }
%struct.v4l2_clip = type { %struct.v4l2_rect, %struct.v4l2_clip* }
%struct.v4l2_requestbuffers = type { i32, i32, i32, [2 x i32] }
%struct.v4l2_exportbuffer = type { i32, i32, i32, i32, i32, [11 x i32] }
%struct.v4l2_create_buffers = type { i32, i32, i32, %struct.v4l2_format, [8 x i32] }
%struct.v4l2_buffer = type { i32, i32, i32, i32, i32, %struct.timespec, %struct.v4l2_timecode, i32, i32, %union.anon.3, i32, i32, i32 }
%struct.v4l2_timecode = type { i32, i32, i8, i8, i8, i8, [4 x i8] }
%struct.v4l2_framebuffer = type { i32, i32, i8*, %struct.qc_info }
%struct.v4l2_input = type { i32, [32 x i8], i32, i32, i32, i64, i32, i32, [3 x i32] }
%struct.v4l2_output = type { i32, [32 x i8], i32, i32, i32, i64, i32, [3 x i32] }
%struct.v4l2_queryctrl = type { i32, i32, [32 x i8], i32, i32, i32, i32, i32, [2 x i32] }
%struct.v4l2_query_ext_ctrl = type { i32, i32, [32 x i8], i64, i64, i64, i64, i32, i32, i32, i32, [4 x i32], [32 x i32] }
%struct.v4l2_ext_controls = type { %struct.atomic_t, i32, i32, [2 x i32], %struct.v4l2_ext_control* }
%struct.v4l2_ext_control = type <{ i32, i32, [1 x i32], %union.anon.3 }>
%struct.v4l2_querymenu = type <{ i32, i32, %union.anon.70, i32 }>
%union.anon.70 = type { i64, [24 x i8] }
%struct.v4l2_audio = type { i32, [32 x i8], i32, i32, [2 x i32] }
%struct.v4l2_cropcap = type { i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.anon.26 }
%struct.v4l2_crop = type { i32, %struct.v4l2_rect }
%struct.v4l2_selection = type { i32, i32, i32, %struct.v4l2_rect, [9 x i32] }
%struct.v4l2_jpegcompression = type { i32, i32, i32, [60 x i8], i32, [60 x i8], i32 }
%struct.v4l2_enc_idx = type { i32, i32, [4 x i32], [64 x %struct.v4l2_enc_idx_entry] }
%struct.v4l2_enc_idx_entry = type { i64, i64, i32, i32, [2 x i32] }
%struct.v4l2_encoder_cmd = type { i32, i32, %union.anon.71 }
%union.anon.71 = type { %struct.anon.72 }
%struct.anon.72 = type { [8 x i32] }
%struct.v4l2_decoder_cmd = type { i32, i32, %union.anon.73 }
%union.anon.73 = type { %union.anon.3, [56 x i8] }
%struct.v4l2_hw_freq_seek = type { i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.v4l2_dbg_chip_info = type { %struct.v4l2_dbg_match, [32 x i8], i32, [32 x i32] }
%struct.v4l2_frmsizeenum = type { i32, i32, i32, %union.anon.78, [2 x i32] }
%union.anon.78 = type { %struct.v4l2_frmsize_stepwise }
%struct.v4l2_frmsize_stepwise = type { i32, i32, i32, i32, i32, i32 }
%struct.v4l2_frmivalenum = type { i32, i32, i32, i32, i32, %union.anon.79, [2 x i32] }
%union.anon.79 = type { %struct.v4l2_frmival_stepwise }
%struct.v4l2_frmival_stepwise = type { %struct.anon.26, %struct.anon.26, %struct.anon.26 }
%struct.v4l2_async_subdev = type { i32, %union.anon.82, %struct.list_head }
%union.anon.82 = type { %struct.anon.86 }
%struct.anon.86 = type { i1 (%struct.device*, %struct.v4l2_async_subdev*)*, i8* }
%struct.v4l2_async_notifier = type { i32, %struct.v4l2_async_subdev**, %struct.v4l2_device*, %struct.list_head, %struct.list_head, %struct.list_head, i32 (%struct.v4l2_async_notifier*, %struct.v4l2_subdev*, %struct.v4l2_async_subdev*)*, i32 (%struct.v4l2_async_notifier*)*, void (%struct.v4l2_async_notifier*, %struct.v4l2_subdev*, %struct.v4l2_async_subdev*)* }
%struct.v4l2_subdev_platform_data = type { %struct.regulator_bulk_data*, i32, i8* }
%struct.regulator_bulk_data = type opaque
%struct.ivtv_stream.1071 = type { %struct.video_device, %struct.ivtv.1060*, i8*, i32, i32, %struct.v4l2_fh*, %struct.spinlock, i64, i32, i32, i32, i64, i32, i32, i64, i32, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, i16, %struct.exception_table_entry*, %struct.exception_table_entry*, %struct.exception_table_entry*, i64, i32, i32, i32, %struct.scatterlist* }
%struct.ivtv_queue = type { %struct.list_head, i32, i32, i32 }
%struct.snd_ivtv_card = type opaque
%struct.work_struct = type { %union.anon.3, %struct.list_head, void (%struct.work_struct*)*, %struct.lockdep_map }
%struct.kthread_worker = type { i32, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.kthread_work* }
%struct.task_struct = type { %union.anon.3, i64, i8*, %struct.atomic_t, i32, i32, %struct.llist_node, i32, i32, i32, i64, %struct.task_struct*, i32, i32, i32, i32, i32, i32, %struct.sched_class*, [16 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.task_group*, %struct.sched_dl_entity, %struct.hlist_head, i32, i32, i32, %struct.cpumask, i64, i8, %struct.list_head, i32, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, [3 x %struct.pid_link], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.task_cputime, [3 x %struct.list_head], %struct.cred*, %struct.cred*, %struct.cred*, [16 x i8], %struct.nameidata*, %struct.sysv_sem, %union.anon.0, i64, %struct.fs_struct*, %struct.files_struct*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.audit_context*, %struct.atomic_t, i32, %struct.seccomp, i32, i32, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root, %struct.rb_node*, %struct.rt_mutex_waiter*, %struct.mutex_waiter*, i32, i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, i32, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, i64, %struct.siginfo*, %struct.task_io_accounting, i64, i64, i64, %struct.nodemask_t, %struct.seqcount, i32, i32, %struct.css_set*, %struct.list_head, i32, %struct.robust_list_head*, %struct.compat_robust_list_head*, %struct.list_head, %struct.futex_pi_state*, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.mempolicy*, i16, i16, i32, i32, i32, i32, i64, i64, i64, i64, %struct.callback_head, %struct.list_head, %struct.numa_group*, i64*, i64, [3 x i64], i64, %struct.tlbflush_unmap_batch, %struct.callback_head, %struct.pipe_inode_info*, %struct.page_frag, %struct.task_delay_info*, i32, i32, i32, i64, i32, [32 x %struct.latency_record], i64, i64, i32, i32, %struct.ftrace_ret_stack*, i64, %struct.atomic_t, %struct.atomic_t, i64, i64, i32, i32, i8*, %struct.kcov*, %struct.mem_cgroup*, i32, i32, i32, %struct.uprobe_task*, i32, i32, i64, i32, %struct.task_struct*, %struct.atomic_t, %struct.thread_struct }
%struct.llist_node = type { %struct.llist_node* }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics, i32, %struct.sched_entity*, %struct.cfs_rq*, %struct.cfs_rq*, [32 x i8], %struct.sched_avg, [24 x i8] }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.cfs_rq = type opaque
%struct.sched_avg = type { i64, i64, i32, i32, i64, i64 }
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity*, %struct.sched_rt_entity*, %struct.rt_rq*, %struct.rt_rq* }
%struct.rt_rq = type opaque
%struct.task_group = type opaque
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, %struct.hrtimer }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.timerqueue_head, i64 ()*, i64, [16 x i8] }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, %struct.seqcount, %struct.hrtimer*, i32, i32, i32, i8, i8, i8, i64, %struct.hrtimer*, i32, i32, i32, i32, [8 x i8], [4 x %struct.hrtimer_clock_base] }
%struct.timerqueue_head = type { %struct.rb_root, %struct.timerqueue_node* }
%struct.sched_info = type { i64, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.vmacache = type { i32, [4 x %struct.vm_area_struct*] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.8 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid_link = type { %struct.hlist_node, %struct.pid* }
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.task_cputime = type { i64, i64, i64 }
%struct.nameidata = type opaque
%struct.sysv_sem = type { %struct.sem_undo_list* }
%struct.sem_undo_list = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.atomic_t, %struct.atomic_t, i32, %struct.list_head, %struct.__wait_queue_head, %struct.task_struct*, %struct.sigpending, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.timespec], %struct.thread_group_cputimer, %struct.task_cputime, [3 x %struct.list_head], %struct.pid*, %struct.pid*, i32, %struct.tty_struct*, %struct.autogroup*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.timespec], %struct.pacct_struct, %struct.taskstats*, i32, %struct.tty_audit_buf*, i8, i16, i16, %struct.mm_struct*, %struct.mutex }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic, i8, i8 }
%struct.task_cputime_atomic = type { %union.anon.3, %union.anon.3, %union.anon.3 }
%struct.tty_struct = type opaque
%struct.autogroup = type opaque
%struct.seqlock_t = type { %struct.seqcount, %struct.spinlock }
%struct.pacct_struct = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.taskstats = type opaque
%struct.tty_audit_buf = type opaque
%struct.sighand_struct = type { %struct.atomic_t, [64 x %struct.k_sigaction], %struct.spinlock, %struct.__wait_queue_head }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.audit_context = type opaque
%struct.seccomp = type { i32, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rt_mutex_waiter = type opaque
%struct.mutex_waiter = type { %struct.list_head, %struct.task_struct*, %struct.ww_acquire_ctx*, i8* }
%struct.ww_acquire_ctx = type opaque
%struct.held_lock = type { i64, i64, %struct.lockdep_map*, %struct.lockdep_map*, i64, i64, i32, i32 }
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type opaque
%struct.siginfo = type { i32, i32, i32, %union.anon.12 }
%union.anon.12 = type { %struct.anon.16, [80 x i8] }
%struct.anon.16 = type { i32, i32, i32, i64, i64 }
%struct.nodemask_t = type { [16 x i64] }
%struct.css_set = type opaque
%struct.robust_list_head = type opaque
%struct.compat_robust_list_head = type opaque
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.numa_group = type opaque
%struct.tlbflush_unmap_batch = type { %struct.cpumask, i8, i8 }
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.task_delay_info = type opaque
%struct.latency_record = type { [12 x i64], i32, i64, i64 }
%struct.ftrace_ret_stack = type opaque
%struct.kcov = type opaque
%struct.uprobe_task = type { i32, %union.anon.22, %struct.uprobe*, i64, %struct.return_instance*, i32 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { %struct.arch_uprobe_task, i64 }
%struct.arch_uprobe_task = type { i64, i32, i32 }
%struct.uprobe = type opaque
%struct.return_instance = type { %struct.uprobe*, i64, i64, i64, i8, %struct.return_instance* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i64, i16, i16, i16, i16, i32, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, i64*, i64, i32, %union.anon.3, i8, [15 x i8], %struct.fpu }
%struct.desc_struct = type { %union.anon.25 }
%struct.perf_event = type opaque
%struct.fpu = type { i32, i8, i8, [58 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.28, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.31 }
%union.anon.28 = type { %struct.timespec }
%union.anon.31 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.kthread_work = type { %struct.list_head, void (%struct.kthread_work*)*, %struct.kthread_worker*, i32 }
%struct.ivtv_user_dma = type { %struct.mutex, i32, [704 x %struct.page*], [704 x %struct.page*], [704 x %struct.exception_table_entry], i64, i32, [704 x %struct.scatterlist] }
%struct.timer_list = type { %struct.hlist_node, i64, void (i64)*, i64, i32, %struct.lockdep_map }
%struct.__wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.ivtv_mailbox_data = type { %struct.ivtv_mailbox*, i64, i8 }
%struct.ivtv_mailbox = type { i32, i32, i32, i32, [16 x i32] }
%struct.ivtv_api_cache = type { i64, [16 x i32] }
%struct.i2c_adapter = type { %struct.module*, i32, %struct.i2c_algorithm*, i8*, %struct.i2c_lock_operations*, %struct.rt_mutex, %struct.rt_mutex, i32, i32, %struct.device, i32, [48 x i8], %struct.completion, %struct.mutex, %struct.list_head, %struct.i2c_bus_recovery_info*, %struct.i2c_adapter_quirks*, %struct.irq_domain* }
%struct.i2c_algorithm = type { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)*, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)*, i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_client*)*, i32 (%struct.i2c_client*)* }
%struct.i2c_msg = type { i16, i16, i16, i8* }
%union.i2c_smbus_data = type { i16, [32 x i8] }
%struct.i2c_lock_operations = type { void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*, i32)*, void (%struct.i2c_adapter*, i32)* }
%struct.rt_mutex = type { %struct.raw_spinlock, %struct.rb_root, %struct.rb_node*, %struct.task_struct*, i32, i8*, i8*, i32, i8* }
%struct.i2c_bus_recovery_info = type { i32 (%struct.i2c_adapter*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*, i32)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, i32, i32 }
%struct.i2c_adapter_quirks = type { i64, i32, i16, i16, i16, i16 }
%struct.i2c_algo_bit_data = type { i8*, void (i8*, i32)*, void (i8*, i32)*, i32 (i8*)*, i32 (i8*)*, i32 (%struct.i2c_adapter*)*, void (%struct.i2c_adapter*)*, i32, i32 }
%struct.i2c_client = type { i16, i16, [20 x i8], %struct.i2c_adapter*, %struct.device, i32, %struct.list_head, i32 (%struct.i2c_client*, i32, i8*)* }
%struct.IR_i2c_init_data = type { i8*, i8*, i64, i32, i32 (%struct.IR_i2c*, i32*, i32*, i8*)*, i32, %struct.rc_dev* }
%struct.IR_i2c = type { i8*, %struct.i2c_client*, %struct.rc_dev*, i8, i32, %struct.delayed_work, [32 x i8], [32 x i8], {}* }
%struct.rc_dev = type { %struct.device, %struct.atomic_t, i8, [5 x %struct.attribute_group*], i8*, i8*, %struct.ivtv_gpio_video_input, i8*, i8*, %struct.rc_map, %struct.mutex, i32, %struct.ir_raw_event_ctrl*, %struct.input_dev*, i32, i8, i8, i64, i64, i64, i32, %struct.anon.26, %struct.anon.26, i32, i32, i8*, %struct.spinlock, i8, i64, %struct.timer_list, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32 (%struct.rc_dev*, i64*)*, i32 (%struct.rc_dev*)*, void (%struct.rc_dev*)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32, i32)*, i32 (%struct.rc_dev*, i32*, i32)*, void (%struct.rc_dev*, i1)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, i32)*, i32 (%struct.rc_dev*, %struct.anon.26*)*, i32 (%struct.rc_dev*, %struct.anon.26*)*, i32 (%struct.rc_dev*, i32)* }
%struct.rc_map = type { %struct.anon.26*, i32, i32, i32, i32, i8*, %struct.spinlock }
%struct.ir_raw_event_ctrl = type opaque
%struct.input_dev = type { i8*, i8*, i8*, %struct.ivtv_gpio_video_input, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.v4l2_frmsize_stepwise*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ivtv_gpio_init, %struct.ivtv_gpio_init, %union.anon.97 }
%union.anon.97 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.ivtv_gpio_video_input, i32, i16* }
%struct.input_mt = type opaque
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.vbi_info = type { i32, i8, i8, i32, i8, i8, [2 x i32], i32, i32, i32, i32, i32, i32, i32, %struct.v4l2_format, %struct.v4l2_sliced_vbi_format*, i32, i32, [256 x %struct.vbi_cc], i32, i8, i32, i8, %struct.vbi_vps, [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data], [32 x i8*], [32 x i32], %struct.ivtv_buffer, i32 }
%struct.vbi_cc = type { [2 x i8], [2 x i8] }
%struct.vbi_vps = type { [5 x i8] }
%struct.ivtv_buffer = type { %struct.list_head, i64, i16, i16, i8*, i32, i32 }
%struct.yuv_playback_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, %struct.atomic_t, i32, i32, i8, [8 x %struct.yuv_frame_info], %struct.yuv_frame_info, %struct.yuv_frame_info, i8*, i64, i32, i8, i8, %struct.v4l2_rect, i32, i32, i8 }
%struct.yuv_frame_info = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.v4l2_rect = type { i32, i32, i32, i32 }
%struct.osd_info = type opaque
%struct.kparam_array = type { i32, i32, i32*, %struct.kernel_param_ops*, i8* }
%struct.xc2028_ctrl = type { i8*, i32, i32, i32, i8, i32, i8 }
%struct.v4l2_subscribed_event_ops = type { i32 (%struct.v4l2_subscribed_event*, i32)*, void (%struct.v4l2_subscribed_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }
%struct.v4l2_subscribed_event = type { %struct.list_head, i32, i32, i32, %struct.v4l2_fh*, %struct.list_head, %struct.v4l2_subscribed_event_ops*, i32, i32, i32, [0 x %struct.v4l2_kevent] }
%struct.v4l2_kevent = type { %struct.list_head, %struct.v4l2_subscribed_event*, %struct.v4l2_event }
%struct.v4l2_event = type { i32, %union.anon.108, i32, i32, %struct.timespec, i32, [8 x i32] }
%union.anon.108 = type { %struct.v4l2_event_ctrl, [24 x i8] }
%struct.v4l2_event_ctrl = type { i32, i32, %union.anon.3, i32, i32, i32, i32, i32 }
%struct.anon.106 = type { i8*, i32, i32, i32, i32, i32, %struct.v4l2_file_operations* }
%struct.pv_irq_ops = type { %union.anon.51, %union.anon.51, %union.anon.51, %union.anon.51, void ()*, void ()*, void ()* }
%struct.ivtv = type { %struct.pci_dev*, %struct.ivtv_card*, i8*, %struct.ivtv_card_tuner_i2c*, i8, i8, i8, i8, i32, i32, i64, %struct.v4l2_subdev*, %struct.v4l2_subdev*, %struct.v4l2_subdev*, i64, i8*, i8*, i8*, %struct.ivtv_options, %struct.v4l2_device, %struct.cx2341x_handler, %struct.anon.88, %struct.anon.88, %struct.v4l2_ctrl_handler, %struct.v4l2_subdev, i16, i64, i8, i8, i8, i8, i32, i32, i32, i32, i64, i64, i8, i8, %struct.spinlock, %struct.mutex, [9 x i32], [9 x %struct.ivtv_stream], %struct.atomic_t, %struct.atomic_t, %struct.snd_ivtv_card*, void (%struct.snd_ivtv_card*, i8*, i64)*, %struct.work_struct, i32, i32, %struct.kthread_worker, %struct.task_struct*, %struct.kthread_work, %struct.spinlock, i32, i32, i32, i32, i32, %struct.ivtv_user_dma, %struct.timer_list, i32, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data, [256 x %struct.ivtv_api_cache], %struct.i2c_adapter, %struct.i2c_algo_bit_data, %struct.i2c_client, i32, %struct.mutex, %struct.IR_i2c_init_data, i32, i32, i32, i32, [400 x %struct.v4l2_enc_idx_entry], i32, i32, i32, i8, i64, i64, [3 x i32], i64, i32, %struct.vbi_info, %struct.yuv_playback_info, i64, i32, i32, i32, i8, i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.osd_info*, {}* }
%struct.ivtv_stream = type { %struct.video_device, %struct.ivtv*, i8*, i32, i32, %struct.v4l2_fh*, %struct.spinlock, i64, i32, i32, i32, i64, i32, i32, i64, i32, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, i16, %struct.exception_table_entry*, %struct.exception_table_entry*, %struct.exception_table_entry*, i64, i32, i32, i32, %struct.scatterlist* }
%struct.ivtv.9 = type { %struct.pci_dev*, %struct.ivtv_card*, i8*, %struct.ivtv_card_tuner_i2c*, i8, i8, i8, i8, i32, i32, i64, %struct.v4l2_subdev*, %struct.v4l2_subdev*, %struct.v4l2_subdev*, i64, i8*, i8*, i8*, %struct.ivtv_options, %struct.v4l2_device, %struct.cx2341x_handler, %struct.anon.88, %struct.anon.88, %struct.v4l2_ctrl_handler, %struct.v4l2_subdev, i16, i64, i8, i8, i8, i8, i32, i32, i32, i32, i64, i64, i8, i8, %struct.spinlock, %struct.mutex, [9 x i32], [9 x %struct.ivtv_stream.18], %struct.atomic_t, %struct.atomic_t, %struct.snd_ivtv_card*, void (%struct.snd_ivtv_card*, i8*, i64)*, %struct.work_struct, i32, i32, %struct.kthread_worker, %struct.task_struct*, %struct.kthread_work, %struct.spinlock, i32, i32, i32, i32, i32, %struct.ivtv_user_dma, %struct.timer_list, i32, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data, [256 x %struct.ivtv_api_cache], %struct.i2c_adapter, %struct.i2c_algo_bit_data, %struct.i2c_client, i32, %struct.mutex, %struct.IR_i2c_init_data, i32, i32, i32, i32, [400 x %struct.v4l2_enc_idx_entry], i32, i32, i32, i8, i64, i64, [3 x i32], i64, i32, %struct.vbi_info, %struct.yuv_playback_info, i64, i32, i32, i32, i8, i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.osd_info*, void (%struct.ivtv.9*)* }
%struct.ivtv_stream.18 = type { %struct.video_device, %struct.ivtv.9*, i8*, i32, i32, %struct.v4l2_fh*, %struct.spinlock, i64, i32, i32, i32, i64, i32, i32, i64, i32, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, i16, %struct.exception_table_entry*, %struct.exception_table_entry*, %struct.exception_table_entry*, i64, i32, i32, i32, %struct.scatterlist* }
%struct.ivtv.572 = type { %struct.pci_dev*, %struct.ivtv_card*, i8*, %struct.ivtv_card_tuner_i2c*, i8, i8, i8, i8, i32, i32, i64, %struct.v4l2_subdev*, %struct.v4l2_subdev*, %struct.v4l2_subdev*, i64, i8*, i8*, i8*, %struct.ivtv_options, %struct.v4l2_device, %struct.cx2341x_handler.547, %struct.anon.88, %struct.anon.88, %struct.v4l2_ctrl_handler, %struct.v4l2_subdev, i16, i64, i8, i8, i8, i8, i32, i32, i32, i32, i64, i64, i8, i8, %struct.spinlock, %struct.mutex, [9 x i32], [9 x %struct.ivtv_stream.579], %struct.atomic_t, %struct.atomic_t, %struct.snd_ivtv_card*, void (%struct.snd_ivtv_card*, i8*, i64)*, %struct.work_struct, i32, i32, %struct.kthread_worker, %struct.task_struct*, %struct.kthread_work, %struct.spinlock, i32, i32, i32, i32, i32, %struct.ivtv_user_dma, %struct.timer_list, i32, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data, [256 x %struct.ivtv_api_cache], %struct.i2c_adapter, %struct.i2c_algo_bit_data, %struct.i2c_client, i32, %struct.mutex, %struct.IR_i2c_init_data, i32, i32, i32, i32, [400 x %struct.v4l2_enc_idx_entry], i32, i32, i32, i8, i64, i64, [3 x i32], i64, i32, %struct.vbi_info, %struct.yuv_playback_info, i64, i32, i32, i32, i8, i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.osd_info*, void (%struct.ivtv.572*)* }
%struct.ivtv_stream.579 = type { %struct.video_device, %struct.ivtv.572*, i8*, i32, i32, %struct.v4l2_fh*, %struct.spinlock, i64, i32, i32, i32, i64, i32, i32, i64, i32, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, i16, %struct.exception_table_entry*, %struct.exception_table_entry*, %struct.exception_table_entry*, i64, i32, i32, i32, %struct.scatterlist* }
%struct.ivtv_open_id = type { %struct.v4l2_fh, i32, i32, %struct.ivtv.1060* }
%struct.__wait_queue = type { i32, i8*, i32 (%struct.__wait_queue*, i32, i32, i8*)*, %struct.list_head }
%struct.tveeprom = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i8], [6 x i8] }
%union.anon.107 = type { %struct.list_head* }
%struct.firmware = type { i64, i8*, %struct.page**, i8* }
%struct.i2c_board_info = type { [20 x i8], i16, i16, i8*, %union.anon.51*, %struct.device_node*, %struct.fwnode_handle*, %struct.property_entry*, i32 }
%struct.property_entry = type { i8*, i64, i8, i8, %union.anon.104 }
%union.anon.104 = type { %union.anon.51 }
%struct.ivtv_open_id.4300 = type { %struct.v4l2_fh, i32, i32, %struct.ivtv* }
%struct.v4l2_pix_format = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, i32, i32 }
%struct.ivtv_dma_frame = type { i32, i32, i8*, i8*, %struct.v4l2_rect, %struct.v4l2_rect, i32, i32 }
%struct.video_event = type { i32, i64, %union.anon.110 }
%union.anon.110 = type { %struct.exception_table_entry }
%struct.kthread_work.4631 = type { %struct.list_head, {}*, %struct.kthread_worker.4632*, i32 }
%struct.kthread_worker.4632 = type { i32, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.kthread_work.4631* }
%struct.ivtv.4633 = type { %struct.pci_dev*, %struct.ivtv_card*, i8*, %struct.ivtv_card_tuner_i2c*, i8, i8, i8, i8, i32, i32, i64, %struct.v4l2_subdev*, %struct.v4l2_subdev*, %struct.v4l2_subdev*, i64, i8*, i8*, i8*, %struct.ivtv_options, %struct.v4l2_device, %struct.cx2341x_handler, %struct.anon.88, %struct.anon.88, %struct.v4l2_ctrl_handler, %struct.v4l2_subdev, i16, i64, i8, i8, i8, i8, i32, i32, i32, i32, i64, i64, i8, i8, %struct.spinlock, %struct.mutex, [9 x i32], [9 x %struct.ivtv_stream.4642], %struct.atomic_t, %struct.atomic_t, %struct.snd_ivtv_card*, void (%struct.snd_ivtv_card*, i8*, i64)*, %struct.work_struct, i32, i32, %struct.kthread_worker.4632, %struct.task_struct*, %struct.kthread_work.4631, %struct.spinlock, i32, i32, i32, i32, i32, %struct.ivtv_user_dma, %struct.timer_list, i32, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.__wait_queue_head, %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data, [256 x %struct.ivtv_api_cache], %struct.i2c_adapter, %struct.i2c_algo_bit_data, %struct.i2c_client, i32, %struct.mutex, %struct.IR_i2c_init_data, i32, i32, i32, i32, [400 x %struct.v4l2_enc_idx_entry], i32, i32, i32, i8, i64, i64, [3 x i32], i64, i32, %struct.vbi_info, %struct.yuv_playback_info, i64, i32, i32, i32, i8, i32, %struct.v4l2_rect, %struct.v4l2_rect, %struct.osd_info*, void (%struct.ivtv.4633*)* }
%struct.ivtv_stream.4642 = type { %struct.video_device, %struct.ivtv.4633*, i8*, i32, i32, %struct.v4l2_fh*, %struct.spinlock, i64, i32, i32, i32, i64, i32, i32, i64, i32, %struct.__wait_queue_head, i32, i32, i32, i32, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, %struct.ivtv_queue, i16, %struct.exception_table_entry*, %struct.exception_table_entry*, %struct.exception_table_entry*, i64, i32, i32, i32, %struct.scatterlist* }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct.ivtv_dma_page_info = type { i64, i64, i64, i32, i32, i32 }
%struct.anon.40 = type { %struct.qspinlock, %struct.atomic_t }

@ivtv_card_list = internal global [31 x %struct.ivtv_card*] [%struct.ivtv_card* @ivtv_card_pvr250, %struct.ivtv_card* @ivtv_card_pvr350, %struct.ivtv_card* @ivtv_card_pvr150, %struct.ivtv_card* @ivtv_card_m179, %struct.ivtv_card* @ivtv_card_mpg600, %struct.ivtv_card* @ivtv_card_mpg160, %struct.ivtv_card* @ivtv_card_pg600, %struct.ivtv_card* @ivtv_card_avc2410, %struct.ivtv_card* @ivtv_card_avc2010, %struct.ivtv_card* @ivtv_card_tg5000tv, %struct.ivtv_card* @ivtv_card_va2000, %struct.ivtv_card* @ivtv_card_cx23416gyc, %struct.ivtv_card* @ivtv_card_gv_mvprx, %struct.ivtv_card* @ivtv_card_gv_mvprx2e, %struct.ivtv_card* @ivtv_card_gotview_pci_dvd, %struct.ivtv_card* @ivtv_card_gotview_pci_dvd2, %struct.ivtv_card* @ivtv_card_yuan_mpc622, %struct.ivtv_card* @ivtv_card_dctmvtvp1, %struct.ivtv_card* @ivtv_card_pg600v2, %struct.ivtv_card* @ivtv_card_club3d, %struct.ivtv_card* @ivtv_card_avertv_mce116, %struct.ivtv_card* @ivtv_card_asus_falcon2, %struct.ivtv_card* @ivtv_card_aver_pvr150, %struct.ivtv_card* @ivtv_card_aver_ezmaker, %struct.ivtv_card* @ivtv_card_aver_m104, %struct.ivtv_card* @ivtv_card_buffalo, %struct.ivtv_card* @ivtv_card_aver_ultra1500mce, %struct.ivtv_card* @ivtv_card_kikyou, %struct.ivtv_card* @ivtv_card_pvr350_v1, %struct.ivtv_card* @ivtv_card_cx23416gyc_nogr, %struct.ivtv_card* @ivtv_card_cx23416gyc_nogrycs], align 16
@ivtv_card_pvr250 = internal constant %struct.ivtv_card { i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 8, i32 8, i32 0, i32 154, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 0 }, %struct.ivtv_card_video_input { i8 3, i8 2, i16 7 }, %struct.ivtv_card_video_input { i8 5, i8 2, i16 1 }, %struct.ivtv_card_video_input { i8 6, i8 1, i16 5 }], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 2236960, i16 0 }, %struct.ivtv_card_audio_input { i8 3, i32 2236962, i16 0 }], %struct.ivtv_card_audio_input { i8 1, i32 2236961, i16 0 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@ivtv_card_pvr350 = internal constant %struct.ivtv_card { i32 1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i8* null, i32 16974547, i32 2, i32 8, i32 8, i32 0, i32 393374, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 0 }, %struct.ivtv_card_video_input { i8 3, i8 2, i16 7 }, %struct.ivtv_card_video_input { i8 5, i8 2, i16 1 }, %struct.ivtv_card_video_input { i8 6, i8 1, i16 5 }], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 2236960, i16 0 }, %struct.ivtv_card_audio_input { i8 3, i32 2236962, i16 0 }], %struct.ivtv_card_audio_input { i8 1, i32 2236961, i16 0 }, i32 6, %struct.ivtv_card_output* getelementptr inbounds ([6 x %struct.ivtv_card_output], [6 x %struct.ivtv_card_output]* @ivtv_pvr350_outputs, i32 0, i32 0), i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@ivtv_card_pvr150 = internal constant %struct.ivtv_card { i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.11, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 32, i32 1966257, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 7 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1296 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input { i8 3, i8 2, i16 1568 }, %struct.ivtv_card_video_input { i8 5, i8 2, i16 4 }, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 8, i16 2 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 2 }, %struct.ivtv_card_audio_input { i8 3, i32 0, i16 4 }], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 8 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 7937, i16 9971 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@ivtv_card_m179 = internal constant %struct.ivtv_card { i32 3, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.12, i32 0, i32 0), i8* null, i32 16973905, i32 256, i32 32768, i32 32768, i32 0, i32 33040, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -7296, i16 -32112 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 -32704, i16 -32768, i16 0, i16 0 }, %struct.ivtv_gpio_init { i16 8192, i16 8192 }, %struct.ivtv_gpio_audio_mode { i16 17152, i16 16384, i16 512, i16 512, i16 256, i16 0 }, %struct.ivtv_gpio_video_input { i16 24, i16 0, i16 8, i16 16 }, %struct.ivtv_gpio_init { i16 16384, i16 0 }, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 2 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_m179, i32 0, i32 0) }, align 8
@ivtv_card_mpg600 = internal constant %struct.ivtv_card { i32 4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 32768, i32 32768, i32 0, i32 32786, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 12416, i16 4 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 12288, i16 0, i16 8192, i16 0 }, %struct.ivtv_gpio_init { i16 1, i16 1 }, %struct.ivtv_gpio_audio_mode { i16 14, i16 6, i16 4, i16 4, i16 0, i16 8 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init { i16 2304, i16 256 }, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 24 }, %struct.load_weight { i64 16777215, i32 53 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_mpg600, i32 0, i32 0) }, align 8
@ivtv_card_mpg160 = internal constant %struct.ivtv_card { i32 5, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.14, i32 0, i32 0), i8* null, i32 16973905, i32 256, i32 32768, i32 32768, i32 0, i32 33040, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 28800, i16 16396 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 12288, i16 0, i16 8192, i16 0 }, %struct.ivtv_gpio_init { i16 1, i16 1 }, %struct.ivtv_gpio_audio_mode { i16 14, i16 6, i16 4, i16 4, i16 0, i16 8 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init { i16 2304, i16 256 }, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 24 }, %struct.load_weight { i64 16777215, i32 53 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_mpg160, i32 0, i32 0) }, align 8
@ivtv_card_pg600 = internal constant %struct.ivtv_card { i32 6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 24 }, %struct.load_weight { i64 16777215, i32 53 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_pg600, i32 0, i32 0) }, align 8
@ivtv_card_avc2410 = internal constant %struct.ivtv_card { i32 7, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.16, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 8, i32 8, i32 64, i32 2097242, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 2236960, i16 2 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight { i64 16769023, i32 43 }, %struct.load_weight { i64 8192, i32 53 }], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_avc2410, i32 0, i32 0) }, align 8
@ivtv_card_avc2010 = internal constant %struct.ivtv_card { i32 8, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.17, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 64, i32 64, i32 0, i32 66, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 2, i8 0, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 0, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 2, i32 2, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* null, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_avc2010, i32 0, i32 0) }, align 8
@ivtv_card_tg5000tv = internal constant %struct.ivtv_card { i32 9, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.18, i32 0, i32 0), i8* null, i32 16973905, i32 34560, i32 32768, i32 32768, i32 0, i32 34576, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 6 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 8 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 8 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 32, i8 0, %struct.ivtv_gpio_init { i16 -8064, i16 -32768 }, %struct.ivtv_gpio_video_input { i16 48, i16 0, i16 16, i16 32 }, %struct.ivtv_gpio_video_input { i16 -32640, i16 -32768, i16 128, i16 0 }, %struct.ivtv_gpio_init { i16 24576, i16 24576 }, %struct.ivtv_gpio_audio_mode { i16 17152, i16 16384, i16 512, i16 768, i16 0, i16 512 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 53 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_tg5000tv, i32 0, i32 0) }, align 8
@ivtv_card_va2000 = internal constant %struct.ivtv_card { i32 10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.19, i32 0, i32 0), i8* null, i32 16973905, i32 1026, i32 8, i32 8, i32 0, i32 1050, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 6 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 53 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_va2000, i32 0, i32 0) }, align 8
@ivtv_card_cx23416gyc = internal constant %struct.ivtv_card { i32 11, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.20, i32 0, i32 0), i8* null, i32 16973905, i32 36352, i32 2048, i32 2048, i32 0, i32 36368, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 137 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 9 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 2, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 32, i8 0, %struct.ivtv_gpio_init { i16 -1920, i16 -30720 }, %struct.ivtv_gpio_video_input { i16 32, i16 0, i16 32, i16 32 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input { i16 -16384, i16 0, i16 16384, i16 -32768 }, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight { i64 16777215, i32 43 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([4 x %struct.ivtv_card_pci_info], [4 x %struct.ivtv_card_pci_info]* @ivtv_pci_cx23416gyc, i32 0, i32 0) }, align 8
@ivtv_card_gv_mvprx = internal constant %struct.ivtv_card { i32 12, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.21, i32 0, i32 0), i8* null, i32 16973905, i32 1538, i32 32768, i32 4096, i32 0, i32 46610, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 6 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 7 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 8 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -15615, i16 512 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 -1, i16 512, i16 768, i16 0 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 46 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([4 x %struct.ivtv_card_pci_info], [4 x %struct.ivtv_card_pci_info]* @ivtv_pci_gv_mvprx, i32 0, i32 0) }, align 8
@ivtv_card_gv_mvprx2e = internal constant %struct.ivtv_card { i32 13, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 32768, i32 4096, i32 0, i32 45074, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -15615, i16 512 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 -1, i16 512, i16 768, i16 0 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 46 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_gv_mvprx2e, i32 0, i32 0) }, align 8
@ivtv_card_gotview_pci_dvd = internal constant %struct.ivtv_card { i32 14, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.23, i32 0, i32 0), i8* null, i32 16973905, i32 2048, i32 2048, i32 2048, i32 0, i32 2064, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 1 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 2, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -4096, i16 -24576 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_gotview_pci_dvd, i32 0, i32 0) }, align 8
@ivtv_card_gotview_pci_dvd2 = internal constant %struct.ivtv_card { i32 15, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.24, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 32768, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 1 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 2 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 2048, i16 0 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 2048, i16 0, i16 0, i16 2048 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_gotview_pci_dvd2, i32 0, i32 0) }, align 8
@ivtv_card_yuan_mpc622 = internal constant %struct.ivtv_card { i32 16, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 255, i16 2 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 54 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_tda8290, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_yuan_mpc622, i32 0, i32 0) }, align 8
@ivtv_card_dctmvtvp1 = internal constant %struct.ivtv_card { i32 17, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.26, i32 0, i32 0), i8* null, i32 16973905, i32 34306, i32 32768, i32 32768, i32 0, i32 34322, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 6 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 8 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 8 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -8064, i16 -32768 }, %struct.ivtv_gpio_video_input { i16 48, i16 0, i16 16, i16 32 }, %struct.ivtv_gpio_video_input { i16 -32640, i16 -32768, i16 128, i16 0 }, %struct.ivtv_gpio_init { i16 24576, i16 24576 }, %struct.ivtv_gpio_audio_mode { i16 17152, i16 16384, i16 512, i16 768, i16 0, i16 512 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 53 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_dctmvtvp1, i32 0, i32 0) }, align 8
@ivtv_card_pg600v2 = internal constant %struct.ivtv_card { i32 18, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 12, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 71 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_pg600v2, i32 0, i32 0) }, align 8
@ivtv_card_club3d = internal constant %struct.ivtv_card { i32 19, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.28, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 3 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 12, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 71 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_club3d, i32 0, i32 0) }, align 8
@ivtv_card_avertv_mce116 = internal constant %struct.ivtv_card { i32 20, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.29, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 69649, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 1 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 10, %struct.ivtv_gpio_init { i16 -8192, i16 16384 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 71 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_avertv_mce116, i32 0, i32 0) }, align 8
@ivtv_card_asus_falcon2 = internal constant %struct.ivtv_card { i32 21, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.30, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 16384, i32 16401, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 2, i16 2 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 1285 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 257 }], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 43 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([4 x %struct.ivtv_card_pci_info], [4 x %struct.ivtv_card_pci_info]* @ivtv_pci_asus_falcon2, i32 0, i32 0) }, align 8
@ivtv_card_aver_pvr150 = internal constant %struct.ivtv_card { i32 22, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.31, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 32768, i32 36881, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 1 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 2 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -16384, i16 0 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 -16384, i16 0, i16 16384, i16 -32768 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 81 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_radio, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_aver_pvr150, i32 0, i32 0) }, align 8
@ivtv_card_aver_ezmaker = internal constant %struct.ivtv_card { i32 23, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.32, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 4097, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 2, i8 0, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 0, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 16384, i16 16384 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* null, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_aver_ezmaker, i32 0, i32 0) }, align 8
@ivtv_card_aver_m104 = internal constant %struct.ivtv_card { i32 24, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.34, i32 0, i32 0), i32 0, i32 1, i32 1, i32 1, i32 0, i32 4113, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 2, i8 0, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 0, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 2, i32 0, i16 1 }, %struct.ivtv_card_audio_input zeroinitializer, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 2 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 10, %struct.ivtv_gpio_init { i16 -8192, i16 16384 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 71 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_aver_m104, i32 0, i32 0) }, align 8
@ivtv_card_buffalo = internal constant %struct.ivtv_card { i32 25, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.35, i32 0, i32 0), i8* null, i32 16973905, i32 1, i32 1, i32 1, i32 0, i32 17, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1072 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 12, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 71 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_buffalo, i32 0, i32 0) }, align 8
@ivtv_card_aver_ultra1500mce = internal constant %struct.ivtv_card { i32 26, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.37, i32 0, i32 0), i32 16973905, i32 1, i32 1, i32 1, i32 32768, i32 36881, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 2 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 1840 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 5, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 1 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input { i8 1, i32 0, i16 2 }, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -16384, i16 0 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 -16384, i16 0, i16 16384, i16 -32768 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 46848, i32 43 }, %struct.load_weight { i64 16711935, i32 79 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([3 x %struct.ivtv_card_pci_info], [3 x %struct.ivtv_card_pci_info]* @ivtv_pci_aver_ultra1500mce, i32 0, i32 0) }, align 8
@ivtv_card_kikyou = internal constant %struct.ivtv_card { i32 27, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.38, i32 0, i32 0), i8* null, i32 16973905, i32 2, i32 32768, i32 32768, i32 0, i32 32786, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 1 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 1 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 7 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 0, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 1, i16 0 }, %struct.ivtv_card_audio_input { i8 3, i32 1, i16 0 }], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 993, i16 800 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input { i16 96, i16 32, i16 0, i16 96 }, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode { i16 128, i16 0, i16 0, i16 128, i16 0, i16 128 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16777215, i32 84 }, %struct.load_weight zeroinitializer, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* getelementptr inbounds ([2 x %struct.ivtv_card_pci_info], [2 x %struct.ivtv_card_pci_info]* @ivtv_pci_kikyou, i32 0, i32 0) }, align 8
@ivtv_card_pvr350_v1 = internal constant %struct.ivtv_card { i32 28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39, i32 0, i32 0), i8* null, i32 16974547, i32 256, i32 8, i32 8, i32 0, i32 412, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 4 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 0 }, %struct.ivtv_card_video_input { i8 3, i8 2, i16 7 }, %struct.ivtv_card_video_input { i8 5, i8 2, i16 1 }, %struct.ivtv_card_video_input { i8 6, i8 1, i16 5 }], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 2236966, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 2236960, i16 0 }, %struct.ivtv_card_audio_input { i8 3, i32 2236962, i16 0 }], %struct.ivtv_card_audio_input { i8 1, i32 2236961, i16 0 }, i32 6, %struct.ivtv_card_output* getelementptr inbounds ([6 x %struct.ivtv_card_output], [6 x %struct.ivtv_card_output]* @ivtv_pvr350_outputs, i32 0, i32 0), i8 0, i8 0, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] zeroinitializer, %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@ivtv_card_cx23416gyc_nogr = internal constant %struct.ivtv_card { i32 29, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.40, i32 0, i32 0), i8* null, i32 16973905, i32 35840, i32 2048, i32 2048, i32 0, i32 35856, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 132 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 0 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 2, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -1920, i16 -30720 }, %struct.ivtv_gpio_video_input { i16 32, i16 0, i16 32, i16 32 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input { i16 -16384, i16 0, i16 16384, i16 -32768 }, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight { i64 16777215, i32 43 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@ivtv_card_cx23416gyc_nogrycs = internal constant %struct.ivtv_card { i32 30, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.41, i32 0, i32 0), i8* null, i32 16973905, i32 34816, i32 2048, i32 2048, i32 0, i32 34832, [6 x %struct.ivtv_card_video_input] [%struct.ivtv_card_video_input { i8 1, i8 0, i16 132 }, %struct.ivtv_card_video_input { i8 2, i8 1, i16 6 }, %struct.ivtv_card_video_input { i8 4, i8 1, i16 0 }, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer, %struct.ivtv_card_video_input zeroinitializer], [3 x %struct.ivtv_card_audio_input] [%struct.ivtv_card_audio_input { i8 1, i32 2, i16 0 }, %struct.ivtv_card_audio_input { i8 2, i32 0, i16 0 }, %struct.ivtv_card_audio_input zeroinitializer], %struct.ivtv_card_audio_input zeroinitializer, i32 0, %struct.ivtv_card_output* null, i8 0, i8 0, %struct.ivtv_gpio_init { i16 -1920, i16 -30720 }, %struct.ivtv_gpio_video_input { i16 32, i16 0, i16 32, i16 32 }, %struct.ivtv_gpio_video_input zeroinitializer, %struct.ivtv_gpio_init zeroinitializer, %struct.ivtv_gpio_audio_mode zeroinitializer, %struct.ivtv_gpio_video_input { i16 -16384, i16 0, i16 16384, i16 -32768 }, %struct.ivtv_gpio_init zeroinitializer, [3 x %struct.load_weight] [%struct.load_weight { i64 16711935, i32 38 }, %struct.load_weight { i64 16777215, i32 43 }, %struct.load_weight zeroinitializer], %struct.ivtv_card_tuner_i2c* @ivtv_i2c_std, %struct.ivtv_card_pci_info* null }, align 8
@.str.41 = private unnamed_addr constant [58 x i8] c"Yuan MPG600GR, Kuroutoshikou CX23416GYC-STVLP (no GR/YCS)\00", align 1
@ivtv_i2c_std = internal global %struct.ivtv_card_tuner_i2c { [2 x i16] [i16 -2, i16 0], [2 x i16] [i16 67, i16 -2], [4 x i16] [i16 97, i16 96, i16 -2, i16 0] }, align 2
@.str.40 = private unnamed_addr constant [54 x i8] c"Yuan MPG600GR, Kuroutoshikou CX23416GYC-STVLP (no GR)\00", align 1
@.str.39 = private unnamed_addr constant [29 x i8] c"Hauppauge WinTV PVR-350 (V1)\00", align 1
@ivtv_pvr350_outputs = internal global [6 x %struct.ivtv_card_output] [%struct.ivtv_card_output { [32 x i8] c"S-Video + Composite\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 0 }, %struct.ivtv_card_output { [32 x i8] c"Composite\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 1 }, %struct.ivtv_card_output { [32 x i8] c"S-Video\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 2 }, %struct.ivtv_card_output { [32 x i8] c"RGB\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 3 }, %struct.ivtv_card_output { [32 x i8] c"YUV C\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 4 }, %struct.ivtv_card_output { [32 x i8] c"YUV V\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i16 5 }], align 16
@.str.38 = private unnamed_addr constant [35 x i8] c"Sony VAIO Giga Pocket (ENX Kikyou)\00", align 1
@ivtv_pci_kikyou = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4173, i16 -32451 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.36 = private unnamed_addr constant [55 x i8] c"AVerMedia UltraTV 1500 MCE / AVerTV M113 Philips Tuner\00", align 1
@.str.37 = private unnamed_addr constant [59 x i8] c"For non-NTSC tuners, use the pal= or secam= module options\00", align 1
@ivtv_pci_aver_ultra1500mce = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16359 }, %struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16357 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.35 = private unnamed_addr constant [20 x i8] c"Buffalo PC-MV5L/PCI\00", align 1
@ivtv_pci_buffalo = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4436, i16 1323 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.33 = private unnamed_addr constant [15 x i8] c"AVerMedia M104\00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Not yet supported!\0A\00", align 1
@ivtv_pci_aver_m104 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16074 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.32 = private unnamed_addr constant [29 x i8] c"AVerMedia EZMaker PCI Deluxe\00", align 1
@ivtv_pci_aver_ezmaker = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16321 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.31 = private unnamed_addr constant [61 x i8] c"AVerMedia PVR-150 Plus / AVerTV M113 Partsnic (Daewoo) Tuner\00", align 1
@ivtv_i2c_radio = internal global %struct.ivtv_card_tuner_i2c { [2 x i16] [i16 96, i16 -2], [2 x i16] [i16 67, i16 -2], [4 x i16] [i16 97, i16 -2, i16 0, i16 0] }, align 2
@ivtv_pci_aver_pvr150 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16332 }, %struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16331 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.30 = private unnamed_addr constant [13 x i8] c"ASUS Falcon2\00", align 1
@ivtv_pci_asus_falcon2 = internal constant [4 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4163, i16 19302 }, %struct.ivtv_card_pci_info { i16 22, i16 4163, i16 17966 }, %struct.ivtv_card_pci_info { i16 22, i16 4163, i16 19246 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.29 = private unnamed_addr constant [20 x i8] c"AVerTV MCE 116 Plus\00", align 1
@ivtv_pci_avertv_mce116 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -15303 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.28 = private unnamed_addr constant [18 x i8] c"Club3D ZAP-TV1x01\00", align 1
@ivtv_pci_club3d = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -85, i16 1536 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.27 = private unnamed_addr constant [35 x i8] c"Yuan PG600-2, GotView PCI DVD Lite\00", align 1
@ivtv_pci_pg600v2 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -85, i16 1536 }, %struct.ivtv_card_pci_info { i16 22, i16 -83, i16 1536 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.26 = private unnamed_addr constant [25 x i8] c"Digital Cowboy DCT-MTVP1\00", align 1
@ivtv_pci_dctmvtvp1 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16385 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.25 = private unnamed_addr constant [12 x i8] c"Yuan MPC622\00", align 1
@ivtv_i2c_tda8290 = internal global %struct.ivtv_card_tuner_i2c { [2 x i16] [i16 -2, i16 0], [2 x i16] [i16 -2, i16 0], [4 x i16] [i16 75, i16 -2, i16 0, i16 0] }, align 2
@ivtv_pci_yuan_mpc622 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -255, i16 -9832 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.24 = private unnamed_addr constant [24 x i8] c"GotView PCI DVD2 Deluxe\00", align 1
@ivtv_pci_gotview_pci_dvd2 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -84, i16 1536 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.23 = private unnamed_addr constant [16 x i8] c"GotView PCI DVD\00", align 1
@ivtv_pci_gotview_pci_dvd = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4779, i16 1536 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.22 = private unnamed_addr constant [21 x i8] c"I/O Data GV-MVP/RX2E\00", align 1
@ivtv_pci_gv_mvprx2e = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4348, i16 -12251 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.21 = private unnamed_addr constant [45 x i8] c"I/O Data GV-MVP/RX, GV-MVP/RX2W (dual tuner)\00", align 1
@ivtv_pci_gv_mvprx = internal constant [4 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4348, i16 -12258 }, %struct.ivtv_card_pci_info { i16 22, i16 4348, i16 -12232 }, %struct.ivtv_card_pci_info { i16 22, i16 4348, i16 -12231 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.20 = private unnamed_addr constant [46 x i8] c"Yuan MPG600GR, Kuroutoshikou CX23416GYC-STVLP\00", align 1
@ivtv_pci_cx23416gyc = internal constant [4 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4779, i16 1536 }, %struct.ivtv_card_pci_info { i16 22, i16 -1109, i16 1536 }, %struct.ivtv_card_pci_info { i16 22, i16 4436, i16 1315 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.19 = private unnamed_addr constant [21 x i8] c"AOpen VA2000MAX-SNT6\00", align 1
@ivtv_pci_va2000 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 0, i16 -161 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.18 = private unnamed_addr constant [24 x i8] c"Nagase Transgear 5000TV\00", align 1
@ivtv_pci_tg5000tv = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 5217, i16 -16385 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.17 = private unnamed_addr constant [25 x i8] c"Adaptec VideOh! AVC-2010\00", align 1
@ivtv_pci_avc2010 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -28667, i16 146 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.16 = private unnamed_addr constant [25 x i8] c"Adaptec VideOh! AVC-2410\00", align 1
@ivtv_pci_avc2410 = internal constant [2 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -28667, i16 147 }, %struct.ivtv_card_pci_info zeroinitializer], align 2
@.str.15 = private unnamed_addr constant [28 x i8] c"Yuan PG600, Diamond PVR-550\00", align 1
@ivtv_pci_pg600 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 -110, i16 112 }, %struct.ivtv_card_pci_info { i16 22, i16 -85, i16 1536 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.14 = private unnamed_addr constant [62 x i8] c"YUAN MPG160, Kuroutoshikou ITVC15-STVLP, I/O Data GV-M2TV/PCI\00", align 1
@ivtv_pci_mpg160 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 2051, i16 4779, i16 0 }, %struct.ivtv_card_pci_info { i16 2051, i16 4348, i16 16544 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.13 = private unnamed_addr constant [40 x i8] c"Yuan MPG600, Kuroutoshikou ITVC16-STVLP\00", align 1
@ivtv_pci_mpg600 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 22, i16 4779, i16 -13 }, %struct.ivtv_card_pci_info { i16 22, i16 4779, i16 -1 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.12 = private unnamed_addr constant [15 x i8] c"AVerMedia M179\00", align 1
@ivtv_pci_m179 = internal constant [3 x %struct.ivtv_card_pci_info] [%struct.ivtv_card_pci_info { i16 2051, i16 5217, i16 -23601 }, %struct.ivtv_card_pci_info { i16 2051, i16 5217, i16 -23602 }, %struct.ivtv_card_pci_info zeroinitializer], align 16
@.str.11 = private unnamed_addr constant [24 x i8] c"Hauppauge WinTV PVR-150\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Hauppauge WinTV PVR-350\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"Hauppauge WinTV PVR-250\00", align 1
@ivtv_get_input.input_strs = internal constant [6 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i32 0, i32 0)], align 16
@.str = private unnamed_addr constant [8 x i8] c"Tuner 1\00", align 1
@.str.1 = private unnamed_addr constant [10 x i8] c"S-Video 1\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"S-Video 2\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Composite 1\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"Composite 2\00", align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"Composite 3\00", align 1
@ivtv_get_audio_input.input_strs = internal constant [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i32 0, i32 0)], align 16
@.str.6 = private unnamed_addr constant [10 x i8] c"Line In 1\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"Line In 2\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"A/V Audio Out\00", align 1
@ivtv_cxhdl_ops = constant { i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)* } { i32 (%struct.cx2341x_handler.547*, i32)* @ivtv_s_audio_sampling_freq, i32 (%struct.cx2341x_handler.547*, i32)* @ivtv_s_audio_mode, i32 (%struct.cx2341x_handler.547*, i32)* @ivtv_s_video_encoding, i32 (%struct.cx2341x_handler.547*, i32)* @ivtv_s_stream_vbi_fmt }, align 8
@ivtv_s_audio_sampling_freq.freqs = internal constant [3 x i32] [i32 44100, i32 48000, i32 32000], align 4
@ivtv_hdl_out_ops = constant %struct.v4l2_ctrl_ops { i32 (%struct.v4l2_ctrl*)* @ivtv_g_volatile_ctrl, i32 (%struct.v4l2_ctrl*)* null, i32 (%struct.v4l2_ctrl*)* @ivtv_s_ctrl }, align 8
@.str.42 = private unnamed_addr constant [46 x i8] c"\016%s:  warn: GET_TIMING: couldn't read clock\0A\00", align 1
@ivtv_ext_init = common global i32 (%struct.ivtv.1060*)* null, align 8
@ivtv_debug = common global i32 0, align 4
@ivtv_fw_debug = common global i32 0, align 4
@ivtv_first_minor = common global i32 0, align 4
@llvm.used = appending global [92 x i8*] [i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_ext_init to i8*), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_tuner to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_tunertype20, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_radio to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_radiotype21, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_cardtype to i8*), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_cardtypetype22, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } }* @__param_pal to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_paltype23, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } }* @__param_secam to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_secamtype24, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } }* @__param_ntsc to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_ntsctype25, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_debug to i8*), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__UNIQUE_ID_debugtype26, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_fw_debug to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_fw_debugtype27, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ivtv_pci_latency to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_ivtv_pci_latencytype28, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ivtv_yuv_mode to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_ivtv_yuv_modetype29, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ivtv_yuv_threshold to i8*), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @__UNIQUE_ID_ivtv_yuv_thresholdtype30, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_ivtv_first_minor to i8*), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_ivtv_first_minortype31, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_enc_mpg_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_enc_mpg_bufferstype32, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_enc_yuv_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_enc_yuv_bufferstype33, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_enc_vbi_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_enc_vbi_bufferstype34, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_enc_pcm_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_enc_pcm_bufferstype35, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dec_mpg_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_dec_mpg_bufferstype36, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dec_yuv_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_dec_yuv_bufferstype37, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_dec_vbi_buffers to i8*), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__UNIQUE_ID_dec_vbi_bufferstype38, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_tunertype to i8*), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__UNIQUE_ID_tunertypetype39, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_newi2c to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_newi2ctype40, i32 0, i32 0), i8* bitcast ({ i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } }* @__param_i2c_clock_period to i8*), i8* getelementptr inbounds ([39 x i8], [39 x i8]* @__UNIQUE_ID_i2c_clock_periodtype41, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_tuner42, i32 0, i32 0), i8* getelementptr inbounds ([100 x i8], [100 x i8]* @__UNIQUE_ID_radio43, i32 0, i32 0), i8* getelementptr inbounds ([1058 x i8], [1058 x i8]* @__UNIQUE_ID_cardtype44, i32 0, i32 0), i8* getelementptr inbounds ([52 x i8], [52 x i8]* @__UNIQUE_ID_pal45, i32 0, i32 0), i8* getelementptr inbounds ([46 x i8], [46 x i8]* @__UNIQUE_ID_secam46, i32 0, i32 0), i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__UNIQUE_ID_ntsc47, i32 0, i32 0), i8* getelementptr inbounds ([162 x i8], [162 x i8]* @__UNIQUE_ID_tunertype48, i32 0, i32 0), i8* getelementptr inbounds ([290 x i8], [290 x i8]* @__UNIQUE_ID_debug49, i32 0, i32 0), i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__UNIQUE_ID_fw_debug50, i32 0, i32 0), i8* getelementptr inbounds ([94 x i8], [94 x i8]* @__UNIQUE_ID_ivtv_pci_latency51, i32 0, i32 0), i8* getelementptr inbounds ([126 x i8], [126 x i8]* @__UNIQUE_ID_ivtv_yuv_mode52, i32 0, i32 0), i8* getelementptr inbounds ([143 x i8], [143 x i8]* @__UNIQUE_ID_ivtv_yuv_threshold53, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_enc_mpg_buffers54, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_enc_yuv_buffers55, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_enc_vbi_buffers56, i32 0, i32 0), i8* getelementptr inbounds ([65 x i8], [65 x i8]* @__UNIQUE_ID_enc_pcm_buffers57, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_dec_mpg_buffers58, i32 0, i32 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @__UNIQUE_ID_dec_yuv_buffers59, i32 0, i32 0), i8* getelementptr inbounds ([64 x i8], [64 x i8]* @__UNIQUE_ID_dec_vbi_buffers60, i32 0, i32 0), i8* getelementptr inbounds ([103 x i8], [103 x i8]* @__UNIQUE_ID_newi2c61, i32 0, i32 0), i8* getelementptr inbounds ([146 x i8], [146 x i8]* @__UNIQUE_ID_i2c_clock_period62, i32 0, i32 0), i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__UNIQUE_ID_ivtv_first_minor63, i32 0, i32 0), i8* getelementptr inbounds ([49 x i8], [49 x i8]* @__UNIQUE_ID_author64, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_description65, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__UNIQUE_ID_license66, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__UNIQUE_ID_version67, i32 0, i32 0), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_set_irq_mask to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_api to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_vapi to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_vapi_result to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_clear_irq_mask to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_debug to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_fw_debug to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_reset_ir_gpio to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_udma_setup to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_udma_unmap to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_udma_alloc to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_udma_prepare to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_init_on_first_open to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_firmware_check to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_claim_stream to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_release_stream to i8*), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_firmware16, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__UNIQUE_ID_firmware17, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__UNIQUE_ID_firmware18, i32 0, i32 0), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_start_v4l2_encode_stream to i8*), i8* bitcast (%struct.kernel_symbol* @__ksymtab_ivtv_stop_v4l2_encode_stream to i8*)], section "llvm.metadata"
@__ksymtab_ivtv_ext_init = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv.1060*)** @ivtv_ext_init to i64), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__kstrtab_ivtv_ext_init, i32 0, i32 0) }, section "___ksymtab+ivtv_ext_init", align 8
@__param_tuner = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.246, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_tuner } }, section "__param", align 8
@__UNIQUE_ID_tunertype20 = internal constant [28 x i8] c"parmtype=tuner:array of int\00", section ".modinfo", align 1
@__param_radio = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_radio, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_radio } }, section "__param", align 8
@__UNIQUE_ID_radiotype21 = internal constant [28 x i8] c"parmtype=radio:array of int\00", section ".modinfo", align 1
@__param_cardtype = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__param_str_cardtype, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_cardtype } }, section "__param", align 8
@__UNIQUE_ID_cardtypetype22 = internal constant [31 x i8] c"parmtype=cardtype:array of int\00", section ".modinfo", align 1
@__param_pal = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } } { i8* getelementptr inbounds ([4 x i8], [4 x i8]* @__param_str_pal, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_string, i16 420, i8 -1, i8 0, { %struct.v4l2_priv_tun_config* } { %struct.v4l2_priv_tun_config* @__param_string_pal } }, section "__param", align 8
@__UNIQUE_ID_paltype23 = internal constant [20 x i8] c"parmtype=pal:string\00", section ".modinfo", align 1
@__param_secam = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } } { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_secam, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_string, i16 420, i8 -1, i8 0, { %struct.v4l2_priv_tun_config* } { %struct.v4l2_priv_tun_config* @__param_string_secam } }, section "__param", align 8
@__UNIQUE_ID_secamtype24 = internal constant [22 x i8] c"parmtype=secam:string\00", section ".modinfo", align 1
@__param_ntsc = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.v4l2_priv_tun_config* } } { i8* getelementptr inbounds ([5 x i8], [5 x i8]* @__param_str_ntsc, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_string, i16 420, i8 -1, i8 0, { %struct.v4l2_priv_tun_config* } { %struct.v4l2_priv_tun_config* @__param_string_ntsc } }, section "__param", align 8
@__UNIQUE_ID_ntsctype25 = internal constant [21 x i8] c"parmtype=ntsc:string\00", section ".modinfo", align 1
@__param_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_debug, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_debug to i8*) } }, section "__param", align 8
@__UNIQUE_ID_debugtype26 = internal constant [19 x i8] c"parmtype=debug:int\00", section ".modinfo", align 1
@__param_fw_debug = internal constant %struct.kernel_param { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__param_str_fw_debug, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_fw_debug to i8*) } }, section "__param", align 8
@__UNIQUE_ID_fw_debugtype27 = internal constant [22 x i8] c"parmtype=fw_debug:int\00", section ".modinfo", align 1
@__param_ivtv_pci_latency = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_ivtv_pci_latency, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_pci_latency to i8*) } }, section "__param", align 8
@__UNIQUE_ID_ivtv_pci_latencytype28 = internal constant [30 x i8] c"parmtype=ivtv_pci_latency:int\00", section ".modinfo", align 1
@__param_ivtv_yuv_mode = internal constant %struct.kernel_param { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__param_str_ivtv_yuv_mode, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_yuv_mode to i8*) } }, section "__param", align 8
@__UNIQUE_ID_ivtv_yuv_modetype29 = internal constant [27 x i8] c"parmtype=ivtv_yuv_mode:int\00", section ".modinfo", align 1
@__param_ivtv_yuv_threshold = internal constant %struct.kernel_param { i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__param_str_ivtv_yuv_threshold, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_yuv_threshold to i8*) } }, section "__param", align 8
@__UNIQUE_ID_ivtv_yuv_thresholdtype30 = internal constant [32 x i8] c"parmtype=ivtv_yuv_threshold:int\00", section ".modinfo", align 1
@__param_ivtv_first_minor = internal constant %struct.kernel_param { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_ivtv_first_minor, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @ivtv_first_minor to i8*) } }, section "__param", align 8
@__UNIQUE_ID_ivtv_first_minortype31 = internal constant [30 x i8] c"parmtype=ivtv_first_minor:int\00", section ".modinfo", align 1
@__param_enc_mpg_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_enc_mpg_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @enc_mpg_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_enc_mpg_bufferstype32 = internal constant [29 x i8] c"parmtype=enc_mpg_buffers:int\00", section ".modinfo", align 1
@__param_enc_yuv_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_enc_yuv_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @enc_yuv_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_enc_yuv_bufferstype33 = internal constant [29 x i8] c"parmtype=enc_yuv_buffers:int\00", section ".modinfo", align 1
@__param_enc_vbi_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_enc_vbi_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @enc_vbi_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_enc_vbi_bufferstype34 = internal constant [29 x i8] c"parmtype=enc_vbi_buffers:int\00", section ".modinfo", align 1
@__param_enc_pcm_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_enc_pcm_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @enc_pcm_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_enc_pcm_bufferstype35 = internal constant [29 x i8] c"parmtype=enc_pcm_buffers:int\00", section ".modinfo", align 1
@__param_dec_mpg_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_dec_mpg_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @dec_mpg_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_dec_mpg_bufferstype36 = internal constant [29 x i8] c"parmtype=dec_mpg_buffers:int\00", section ".modinfo", align 1
@__param_dec_yuv_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_dec_yuv_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @dec_yuv_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_dec_yuv_bufferstype37 = internal constant [29 x i8] c"parmtype=dec_yuv_buffers:int\00", section ".modinfo", align 1
@__param_dec_vbi_buffers = internal constant %struct.kernel_param { i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__param_str_dec_vbi_buffers, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @dec_vbi_buffers to i8*) } }, section "__param", align 8
@__UNIQUE_ID_dec_vbi_bufferstype38 = internal constant [29 x i8] c"parmtype=dec_vbi_buffers:int\00", section ".modinfo", align 1
@__param_tunertype = internal constant %struct.kernel_param { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__param_str_tunertype, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @tunertype to i8*) } }, section "__param", align 8
@__UNIQUE_ID_tunertypetype39 = internal constant [23 x i8] c"parmtype=tunertype:int\00", section ".modinfo", align 1
@__param_newi2c = internal constant %struct.kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__param_str_newi2c, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_int, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @newi2c to i8*) } }, section "__param", align 8
@__UNIQUE_ID_newi2ctype40 = internal constant [20 x i8] c"parmtype=newi2c:int\00", section ".modinfo", align 1
@__param_i2c_clock_period = internal constant { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, { %struct.kparam_array* } } { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__param_str_i2c_clock_period, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_array_ops, i16 420, i8 -1, i8 0, { %struct.kparam_array* } { %struct.kparam_array* @__param_arr_i2c_clock_period } }, section "__param", align 8
@__UNIQUE_ID_i2c_clock_periodtype41 = internal constant [39 x i8] c"parmtype=i2c_clock_period:array of int\00", section ".modinfo", align 1
@__UNIQUE_ID_tuner42 = internal constant [59 x i8] c"parm=tuner:Tuner type selection,\0A\09\09\09see tuner.h for values\00", section ".modinfo", align 1
@__UNIQUE_ID_radio43 = internal constant [100 x i8] c"parm=radio:Enable or disable the radio. Use only if autodetection\0A\09\09\09fails. 0 = disable, 1 = enable\00", section ".modinfo", align 1
@__UNIQUE_ID_cardtype44 = internal constant [1058 x i8] c"parm=cardtype:Only use this option if your card is not detected properly.\0A\09\09Specify card type:\0A\09\09\09 1 = WinTV PVR 250\0A\09\09\09 2 = WinTV PVR 350\0A\09\09\09 3 = WinTV PVR-150 or PVR-500\0A\09\09\09 4 = AVerMedia M179\0A\09\09\09 5 = YUAN MPG600/Kuroutoshikou iTVC16-STVLP\0A\09\09\09 6 = YUAN MPG160/Kuroutoshikou iTVC15-STVLP\0A\09\09\09 7 = YUAN PG600/DIAMONDMM PVR-550 (CX Falcon 2)\0A\09\09\09 8 = Adaptec AVC-2410\0A\09\09\09 9 = Adaptec AVC-2010\0A\09\09\0910 = NAGASE TRANSGEAR 5000TV\0A\09\09\0911 = AOpen VA2000MAX-STN6\0A\09\09\0912 = YUAN MPG600GR/Kuroutoshikou CX23416GYC-STVLP\0A\09\09\0913 = I/O Data GV-MVP/RX\0A\09\09\0914 = I/O Data GV-MVP/RX2E\0A\09\09\0915 = GOTVIEW PCI DVD\0A\09\09\0916 = GOTVIEW PCI DVD2 Deluxe\0A\09\09\0917 = Yuan MPC622\0A\09\09\0918 = Digital Cowboy DCT-MTVP1\0A\09\09\0919 = Yuan PG600V2/GotView PCI DVD Lite\0A\09\09\0920 = Club3D ZAP-TV1x01\0A\09\09\0921 = AverTV MCE 116 Plus\0A\09\09\0922 = ASUS Falcon2\0A\09\09\0923 = AverMedia PVR-150 Plus\0A\09\09\0924 = AverMedia EZMaker PCI Deluxe\0A\09\09\0925 = AverMedia M104 (not yet working)\0A\09\09\0926 = Buffalo PC-MV5L/PCI\0A\09\09\0927 = AVerMedia UltraTV 1500 MCE\0A\09\09\0928 = Sony VAIO Giga Pocket (ENX Kikyou)\0A\09\09\09 0 = Autodetect (default)\0A\09\09\09-1 = Ignore this card\0A\09\09\00", section ".modinfo", align 1
@__UNIQUE_ID_pal45 = internal constant [52 x i8] c"parm=pal:Set PAL standard: BGH, DK, I, M, N, Nc, 60\00", section ".modinfo", align 1
@__UNIQUE_ID_secam46 = internal constant [46 x i8] c"parm=secam:Set SECAM standard: BGH, DK, L, LC\00", section ".modinfo", align 1
@__UNIQUE_ID_ntsc47 = internal constant [59 x i8] c"parm=ntsc:Set NTSC standard: M, J (Japan), K (South Korea)\00", section ".modinfo", align 1
@__UNIQUE_ID_tunertype48 = internal constant [162 x i8] c"parm=tunertype:Specify tuner type:\0A\09\09\09 0 = tuner for PAL-B/G/H/D/K/I, SECAM-B/G/H/D/K/L/Lc\0A\09\09\09 1 = tuner for NTSC-M/J/K, PAL-M/N/Nc\0A\09\09\09-1 = Autodetect (default)\0A\00", section ".modinfo", align 1
@__UNIQUE_ID_debug49 = internal constant [290 x i8] c"parm=debug:Debug level (bitmask). Default: 0\0A\09\09\09   1/0x0001: warning\0A\09\09\09   2/0x0002: info\0A\09\09\09   4/0x0004: mailbox\0A\09\09\09   8/0x0008: ioctl\0A\09\09\09  16/0x0010: file\0A\09\09\09  32/0x0020: dma\0A\09\09\09  64/0x0040: irq\0A\09\09\09 128/0x0080: decoder\0A\09\09\09 256/0x0100: yuv\0A\09\09\09 512/0x0200: i2c\0A\09\09\091024/0x0400: high volume\0A\00", section ".modinfo", align 1
@__UNIQUE_ID_fw_debug50 = internal constant [72 x i8] c"parm=fw_debug:Enable code for debugging firmware problems.  Default: 0\0A\00", section ".modinfo", align 1
@__UNIQUE_ID_ivtv_pci_latency51 = internal constant [94 x i8] c"parm=ivtv_pci_latency:Change the PCI latency to 64 if lower: 0 = No, 1 = Yes,\0A\09\09\09Default: Yes\00", section ".modinfo", align 1
@__UNIQUE_ID_ivtv_yuv_mode52 = internal constant [126 x i8] c"parm=ivtv_yuv_mode:Specify the yuv playback mode:\0A\09\09\090 = interlaced\0A\09\09\091 = progressive\0A\09\09\092 = auto\0A\09\09\09Default: 0 (interlaced)\00", section ".modinfo", align 1
@__UNIQUE_ID_ivtv_yuv_threshold53 = internal constant [143 x i8] c"parm=ivtv_yuv_threshold:If ivtv_yuv_mode is 2 (auto) then playback content as\0A\09\09progressive if src height <= ivtv_yuvthreshold\0A\09\09\09Default: 480\00", section ".modinfo", align 1
@__UNIQUE_ID_enc_mpg_buffers54 = internal constant [63 x i8] c"parm=enc_mpg_buffers:Encoder MPG Buffers (in MB)\0A\09\09\09Default: 4\00", section ".modinfo", align 1
@__UNIQUE_ID_enc_yuv_buffers55 = internal constant [63 x i8] c"parm=enc_yuv_buffers:Encoder YUV Buffers (in MB)\0A\09\09\09Default: 2\00", section ".modinfo", align 1
@__UNIQUE_ID_enc_vbi_buffers56 = internal constant [63 x i8] c"parm=enc_vbi_buffers:Encoder VBI Buffers (in MB)\0A\09\09\09Default: 1\00", section ".modinfo", align 1
@__UNIQUE_ID_enc_pcm_buffers57 = internal constant [65 x i8] c"parm=enc_pcm_buffers:Encoder PCM buffers (in kB)\0A\09\09\09Default: 320\00", section ".modinfo", align 1
@__UNIQUE_ID_dec_mpg_buffers58 = internal constant [63 x i8] c"parm=dec_mpg_buffers:Decoder MPG buffers (in MB)\0A\09\09\09Default: 1\00", section ".modinfo", align 1
@__UNIQUE_ID_dec_yuv_buffers59 = internal constant [63 x i8] c"parm=dec_yuv_buffers:Decoder YUV buffers (in MB)\0A\09\09\09Default: 1\00", section ".modinfo", align 1
@__UNIQUE_ID_dec_vbi_buffers60 = internal constant [64 x i8] c"parm=dec_vbi_buffers:Decoder VBI buffers (in kB)\0A\09\09\09Default: 64\00", section ".modinfo", align 1
@__UNIQUE_ID_newi2c61 = internal constant [103 x i8] c"parm=newi2c:Use new I2C implementation\0A\09\09\09-1 is autodetect, 0 is off, 1 is on\0A\09\09\09Default is autodetect\00", section ".modinfo", align 1
@__UNIQUE_ID_i2c_clock_period62 = internal constant [146 x i8] c"parm=i2c_clock_period:Period of SCL for the I2C bus controlled by the CX23415/6\0A\09\09\09Min: 10 usec (100 kHz), Max: 4500 usec (222 Hz)\0A\09\09\09Default: 20\00", section ".modinfo", align 1
@__UNIQUE_ID_ivtv_first_minor63 = internal constant [68 x i8] c"parm=ivtv_first_minor:Set device node number assigned to first card\00", section ".modinfo", align 1
@__UNIQUE_ID_author64 = internal constant [49 x i8] c"author=Kevin Thayer, Chris Kennedy, Hans Verkuil\00", section ".modinfo", align 1
@__UNIQUE_ID_description65 = internal constant [35 x i8] c"description=CX23415/CX23416 driver\00", section ".modinfo", align 1
@__UNIQUE_ID_license66 = internal constant [12 x i8] c"license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_version67 = internal constant [14 x i8] c"version=1.4.3\00", section ".modinfo", align 1
@__ksymtab_ivtv_set_irq_mask = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv.1060*, i32)* @ivtv_set_irq_mask to i64), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__kstrtab_ivtv_set_irq_mask, i32 0, i32 0) }, section "___ksymtab+ivtv_set_irq_mask", align 8
@__ksymtab_ivtv_api = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv.1060*, i32, i32, i32*)* @ivtv_api to i64), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @__kstrtab_ivtv_api, i32 0, i32 0) }, section "___ksymtab+ivtv_api", align 8
@__ksymtab_ivtv_vapi = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i64), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @__kstrtab_ivtv_vapi, i32 0, i32 0) }, section "___ksymtab+ivtv_vapi", align 8
@__ksymtab_ivtv_vapi_result = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv.1060*, i32*, i32, i32, ...)* @ivtv_vapi_result to i64), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__kstrtab_ivtv_vapi_result, i32 0, i32 0) }, section "___ksymtab+ivtv_vapi_result", align 8
@__ksymtab_ivtv_clear_irq_mask = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv.1060*, i32)* @ivtv_clear_irq_mask to i64), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__kstrtab_ivtv_clear_irq_mask, i32 0, i32 0) }, section "___ksymtab+ivtv_clear_irq_mask", align 8
@__ksymtab_ivtv_debug = internal constant %struct.kernel_symbol { i64 ptrtoint (i32* @ivtv_debug to i64), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @__kstrtab_ivtv_debug, i32 0, i32 0) }, section "___ksymtab+ivtv_debug", align 8
@__ksymtab_ivtv_fw_debug = internal constant %struct.kernel_symbol { i64 ptrtoint (i32* @ivtv_fw_debug to i64), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__kstrtab_ivtv_fw_debug, i32 0, i32 0) }, section "___ksymtab+ivtv_fw_debug", align 8
@__ksymtab_ivtv_reset_ir_gpio = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv*)* @ivtv_reset_ir_gpio to i64), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__kstrtab_ivtv_reset_ir_gpio, i32 0, i32 0) }, section "___ksymtab+ivtv_reset_ir_gpio", align 8
@__ksymtab_ivtv_udma_setup = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv*, i64, i8*, i32)* @ivtv_udma_setup to i64), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__kstrtab_ivtv_udma_setup, i32 0, i32 0) }, section "___ksymtab+ivtv_udma_setup", align 8
@__ksymtab_ivtv_udma_unmap = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv*)* @ivtv_udma_unmap to i64), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__kstrtab_ivtv_udma_unmap, i32 0, i32 0) }, section "___ksymtab+ivtv_udma_unmap", align 8
@__ksymtab_ivtv_udma_alloc = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv*)* @ivtv_udma_alloc to i64), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__kstrtab_ivtv_udma_alloc, i32 0, i32 0) }, section "___ksymtab+ivtv_udma_alloc", align 8
@__ksymtab_ivtv_udma_prepare = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv*)* @ivtv_udma_prepare to i64), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__kstrtab_ivtv_udma_prepare, i32 0, i32 0) }, section "___ksymtab+ivtv_udma_prepare", align 8
@__ksymtab_ivtv_init_on_first_open = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv.1060*)* @ivtv_init_on_first_open to i64), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__kstrtab_ivtv_init_on_first_open, i32 0, i32 0) }, section "___ksymtab+ivtv_init_on_first_open", align 8
@__ksymtab_ivtv_firmware_check = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv*, i8*)* @ivtv_firmware_check to i64), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__kstrtab_ivtv_firmware_check, i32 0, i32 0) }, section "___ksymtab+ivtv_firmware_check", align 8
@__kstrtab_ivtv_firmware_check = internal constant [20 x i8] c"ivtv_firmware_check\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_init_on_first_open = internal constant [24 x i8] c"ivtv_init_on_first_open\00", section "__ksymtab_strings", align 1
@.str.46 = private unnamed_addr constant [30 x i8] c"\014%s: Retry loading firmware\0A\00", align 1
@.str.1.48 = private unnamed_addr constant [41 x i8] c"\016%s:  info: Getting firmware version..\0A\00", align 1
@__kstrtab_ivtv_udma_prepare = internal constant [18 x i8] c"ivtv_udma_prepare\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_udma_alloc = internal constant [16 x i8] c"ivtv_udma_alloc\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_udma_unmap = internal constant [16 x i8] c"ivtv_udma_unmap\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_udma_setup = internal constant [16 x i8] c"ivtv_udma_setup\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_reset_ir_gpio = internal constant [19 x i8] c"ivtv_reset_ir_gpio\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_fw_debug = internal constant [14 x i8] c"ivtv_fw_debug\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_debug = internal constant [11 x i8] c"ivtv_debug\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_clear_irq_mask = internal constant [20 x i8] c"ivtv_clear_irq_mask\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_vapi_result = internal constant [17 x i8] c"ivtv_vapi_result\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_vapi = internal constant [10 x i8] c"ivtv_vapi\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_api = internal constant [9 x i8] c"ivtv_api\00", section "__ksymtab_strings", align 1
@__kstrtab_ivtv_set_irq_mask = internal constant [18 x i8] c"ivtv_set_irq_mask\00", section "__ksymtab_strings", align 1
@__param_str_i2c_clock_period = internal constant [17 x i8] c"i2c_clock_period\00", align 16
@__this_module = external global %struct.module, align 64
@param_array_ops = external constant %struct.kernel_param_ops, align 8
@__param_arr_i2c_clock_period = internal constant %struct.kparam_array { i32 32, i32 4, i32* @i2c_clock_period_c, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([32 x i32]* @i2c_clock_period to i8*) }, align 8
@i2c_clock_period_c = internal global i32 1, align 4
@param_ops_int = external constant %struct.kernel_param_ops, align 8
@i2c_clock_period = internal global [32 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@__param_str_newi2c = internal constant [7 x i8] c"newi2c\00", align 1
@newi2c = internal global i32 -1, align 4
@__param_str_tunertype = internal constant [10 x i8] c"tunertype\00", align 1
@tunertype = internal global i32 -1, align 4
@__param_str_dec_vbi_buffers = internal constant [16 x i8] c"dec_vbi_buffers\00", align 16
@dec_vbi_buffers = internal global i32 64, align 4
@__param_str_dec_yuv_buffers = internal constant [16 x i8] c"dec_yuv_buffers\00", align 16
@dec_yuv_buffers = internal global i32 1, align 4
@__param_str_dec_mpg_buffers = internal constant [16 x i8] c"dec_mpg_buffers\00", align 16
@dec_mpg_buffers = internal global i32 1, align 4
@__param_str_enc_pcm_buffers = internal constant [16 x i8] c"enc_pcm_buffers\00", align 16
@enc_pcm_buffers = internal global i32 320, align 4
@__param_str_enc_vbi_buffers = internal constant [16 x i8] c"enc_vbi_buffers\00", align 16
@enc_vbi_buffers = internal global i32 1, align 4
@__param_str_enc_yuv_buffers = internal constant [16 x i8] c"enc_yuv_buffers\00", align 16
@enc_yuv_buffers = internal global i32 2, align 4
@__param_str_enc_mpg_buffers = internal constant [16 x i8] c"enc_mpg_buffers\00", align 16
@enc_mpg_buffers = internal global i32 4, align 4
@__param_str_ivtv_first_minor = internal constant [17 x i8] c"ivtv_first_minor\00", align 16
@__param_str_ivtv_yuv_threshold = internal constant [19 x i8] c"ivtv_yuv_threshold\00", align 16
@ivtv_yuv_threshold = internal global i32 -1, align 4
@__param_str_ivtv_yuv_mode = internal constant [14 x i8] c"ivtv_yuv_mode\00", align 1
@ivtv_yuv_mode = internal global i32 0, align 4
@__param_str_ivtv_pci_latency = internal constant [17 x i8] c"ivtv_pci_latency\00", align 16
@ivtv_pci_latency = internal global i32 1, align 4
@__param_str_fw_debug = internal constant [9 x i8] c"fw_debug\00", align 1
@__param_str_debug = internal constant [6 x i8] c"debug\00", align 1
@__param_str_ntsc = internal constant [5 x i8] c"ntsc\00", align 1
@param_ops_string = external constant %struct.kernel_param_ops, align 8
@__param_string_ntsc = internal constant %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @ntsc, i32 0, i32 0) }, align 8
@ntsc = internal global [2 x i8] c"-\00", align 1
@__param_str_secam = internal constant [6 x i8] c"secam\00", align 1
@__param_string_secam = internal constant %struct.v4l2_priv_tun_config { i32 3, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @secam, i32 0, i32 0) }, align 8
@secam = internal global [3 x i8] c"--\00", align 1
@__param_str_pal = internal constant [4 x i8] c"pal\00", align 1
@__param_string_pal = internal constant %struct.v4l2_priv_tun_config { i32 4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @pal, i32 0, i32 0) }, align 8
@pal = internal global [4 x i8] c"---\00", align 1
@__param_str_cardtype = internal constant [9 x i8] c"cardtype\00", align 1
@__param_arr_cardtype = internal constant %struct.kparam_array { i32 32, i32 4, i32* @cardtype_c, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([32 x i32]* @cardtype to i8*) }, align 8
@cardtype_c = internal global i32 1, align 4
@cardtype = internal global [32 x i32] zeroinitializer, align 16
@__param_str_radio = internal constant [6 x i8] c"radio\00", align 1
@__param_arr_radio = internal constant %struct.kparam_array { i32 32, i32 4, i32* @radio_c, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([32 x i32]* @radio to i8*) }, align 8
@radio_c = internal global i32 1, align 4
@radio = internal global [32 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@__param_arr_tuner = internal constant %struct.kparam_array { i32 32, i32 4, i32* @tuner_c, %struct.kernel_param_ops* @param_ops_int, i8* bitcast ([32 x i32]* @tuner to i8*) }, align 8
@tuner_c = internal global i32 1, align 4
@tuner = internal global [32 x i32] [i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1, i32 -1], align 16
@__kstrtab_ivtv_ext_init = internal constant [14 x i8] c"ivtv_ext_init\00", section "__ksymtab_strings", align 1
@current_task = external global %struct.task_struct*, align 8
@ivtv_pci_tbl = internal global [3 x %struct.pci_device_id] [%struct.pci_device_id { i32 17476, i32 2051, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id { i32 17476, i32 22, i32 -1, i32 -1, i32 0, i32 0, i64 0 }, %struct.pci_device_id zeroinitializer], align 16
@.str.2.49 = private unnamed_addr constant [42 x i8] c"\016ivtv: Start initialization, version %s\0A\00", align 1
@.str.4.51 = private unnamed_addr constant [60 x i8] c"\013ivtv: Exiting, ivtv_first_minor must be between 0 and %d\0A\00", align 1
@.str.5.52 = private unnamed_addr constant [46 x i8] c"\016ivtv: Debug value must be >= 0 and <= 2047\0A\00", align 1
@ivtv_pci_driver = internal global %struct.pci_driver { %struct.list_head zeroinitializer, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.398, i32 0, i32 0), %struct.pci_device_id* getelementptr inbounds ([3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @ivtv_pci_tbl, i32 0, i32 0), i32 (%struct.pci_dev*, %struct.pci_device_id*)* @ivtv_probe, void (%struct.pci_dev*)* @ivtv_remove, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*, i32)* null, i32 (%struct.pci_dev*)* null, i32 (%struct.pci_dev*)* null, void (%struct.pci_dev*)* null, i32 (%struct.pci_dev*, i32)* null, %struct.pci_error_handlers* null, %struct.device_driver zeroinitializer, %struct.__wait_queue_head zeroinitializer }, align 8
@.str.7.54 = private unnamed_addr constant [34 x i8] c"\013ivtv: Error detecting PCI card\0A\00", align 1
@.str.8.55 = private unnamed_addr constant [28 x i8] c"\016ivtv: End initialization\0A\00", align 1
@.str.103 = private unnamed_addr constant [28 x i8] c"\016%s:  info: Removing card\0A\00", align 1
@.str.104 = private unnamed_addr constant [35 x i8] c"\016%s:  info: Stopping all streams\0A\00", align 1
@.str.105 = private unnamed_addr constant [32 x i8] c"\016%s:  info: Stopping decoding\0A\00", align 1
@iomem_resource = external global %struct.resource, align 8
@.str.106 = private unnamed_addr constant [20 x i8] c"\016ivtv: Removed %s\0A\00", align 1
@.str.100 = private unnamed_addr constant [32 x i8] c"\016%s:  info: releasing reg_mem\0A\00", align 1
@.str.101 = private unnamed_addr constant [32 x i8] c"\016%s:  info: releasing dec_mem\0A\00", align 1
@.str.102 = private unnamed_addr constant [32 x i8] c"\016%s:  info: releasing enc_mem\0A\00", align 1
@ivtv_instance = internal global %struct.atomic_t zeroinitializer, align 4
@.str.9.58 = private unnamed_addr constant [28 x i8] c"\016%s: Initializing card %d\0A\00", align 1
@.str.10.59 = private unnamed_addr constant [32 x i8] c"\016%s:  info: base addr: 0x%llx\0A\00", align 1
@.str.11.60 = private unnamed_addr constant [54 x i8] c"\016%s:  info: attempting ioremap at 0x%llx len 0x%08x\0A\00", align 1
@.str.12.61 = private unnamed_addr constant [72 x i8] c"\013%s: ioremap failed. Can't get a window into CX23415/6 encoder memory\0A\00", align 1
@.str.13.62 = private unnamed_addr constant [94 x i8] c"\013%s: Each capture card with a CX23415/6 needs 8 MB of vmalloc address space for this window\0A\00", align 1
@.str.14.63 = private unnamed_addr constant [56 x i8] c"\013%s: Check the output of 'grep Vmalloc /proc/meminfo'\0A\00", align 1
@.str.15.64 = private unnamed_addr constant [89 x i8] c"\013%s: Use the vmalloc= kernel command line option to set VmallocTotal to a larger value\0A\00", align 1
@.str.16.65 = private unnamed_addr constant [70 x i8] c"\013%s: ioremap failed. Can't get a window into CX23415 decoder memory\0A\00", align 1
@.str.17.66 = private unnamed_addr constant [92 x i8] c"\013%s: Each capture card with a CX23415 needs 8 MB of vmalloc address space for this window\0A\00", align 1
@.str.18.67 = private unnamed_addr constant [72 x i8] c"\013%s: ioremap failed. Can't get a window into CX23415/6 register space\0A\00", align 1
@.str.19.68 = private unnamed_addr constant [95 x i8] c"\013%s: Each capture card with a CX23415/6 needs 64 kB of vmalloc address space for this window\0A\00", align 1
@.str.20.69 = private unnamed_addr constant [32 x i8] c"\016%s:  info: activating i2c...\0A\00", align 1
@.str.21.70 = private unnamed_addr constant [32 x i8] c"\013%s: Could not initialize i2c\0A\00", align 1
@.str.22.71 = private unnamed_addr constant [9 x i8] c"\016%s: %s\00", align 1
@ivtv_probe.ctrl = internal global %struct.xc2028_ctrl { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.23.77, i32 0, i32 0), i32 64, i32 0, i32 0, i8 0, i32 0, i8 0 }, align 8
@.str.24.72 = private unnamed_addr constant [33 x i8] c"\013%s: Failed to register irq %d\0A\00", align 1
@.str.25.73 = private unnamed_addr constant [35 x i8] c"\013%s: Error %d setting up streams\0A\00", align 1
@.str.26.74 = private unnamed_addr constant [36 x i8] c"\013%s: Error %d registering devices\0A\00", align 1
@.str.27.75 = private unnamed_addr constant [28 x i8] c"\016%s: Initialized card: %s\0A\00", align 1
@.str.28.76 = private unnamed_addr constant [34 x i8] c"\013%s: Error %d on initialization\0A\00", align 1
@.str.98 = private unnamed_addr constant [26 x i8] c"(&dev->request_module_wk)\00", align 1
@request_modules.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@system_wq = external global %struct.workqueue_struct*, align 8
@.str.99 = private unnamed_addr constant [10 x i8] c"ivtv-alsa\00", align 1
@.str.23.77 = private unnamed_addr constant [14 x i8] c"xc3028-v27.fw\00", align 1
@.str.84 = private unnamed_addr constant [22 x i8] c"\013%s: Invalid EEPROM\0A\00", align 1
@.str.85 = private unnamed_addr constant [47 x i8] c"\013%s: Unknown model %d, defaulting to PVR-150\0A\00", align 1
@.str.86 = private unnamed_addr constant [14 x i8] c"WinTV PVR 500\00", align 1
@ivtv_process_eeprom.ivtv_i2c_radio = internal constant %struct.ivtv_card_tuner_i2c { [2 x i16] [i16 96, i16 -2], [2 x i16] [i16 67, i16 -2], [4 x i16] [i16 97, i16 -2, i16 0, i16 0] }, align 2
@.str.87 = private unnamed_addr constant [24 x i8] c"WinTV PVR 500 (unit #1)\00", align 1
@.str.88 = private unnamed_addr constant [24 x i8] c"WinTV PVR 500 (unit #2)\00", align 1
@.str.89 = private unnamed_addr constant [65 x i8] c"\016%s: Correcting tveeprom data: no radio present on second unit\0A\00", align 1
@.str.90 = private unnamed_addr constant [23 x i8] c"\016%s: Autodetected %s\0A\00", align 1
@.str.91 = private unnamed_addr constant [41 x i8] c"\013%s: tveeprom cannot autodetect tuner!\0A\00", align 1
@.str.92 = private unnamed_addr constant [45 x i8] c"\016%s: Reopen i2c bus for IR-blaster support\0A\00", align 1
@.str.93 = private unnamed_addr constant [33 x i8] c"\016%s:  info: PAL tuner detected\0A\00", align 1
@.str.94 = private unnamed_addr constant [34 x i8] c"\016%s:  info: NTSC tuner detected\0A\00", align 1
@.str.95 = private unnamed_addr constant [35 x i8] c"\016%s:  info: SECAM tuner detected\0A\00", align 1
@.str.96 = private unnamed_addr constant [44 x i8] c"\016%s: No tuner detected, default to NTSC-M\0A\00", align 1
@.str.70 = private unnamed_addr constant [34 x i8] c"\016%s:  info: Enabling pci device\0A\00", align 1
@.str.71 = private unnamed_addr constant [28 x i8] c"\013%s: Can't enable device!\0A\00", align 1
@.str.72 = private unnamed_addr constant [34 x i8] c"\013%s: No suitable DMA available.\0A\00", align 1
@.str.73 = private unnamed_addr constant [13 x i8] c"ivtv encoder\00", align 1
@.str.74 = private unnamed_addr constant [45 x i8] c"\013%s: Cannot request encoder memory region.\0A\00", align 1
@.str.75 = private unnamed_addr constant [15 x i8] c"ivtv registers\00", align 1
@.str.76 = private unnamed_addr constant [46 x i8] c"\013%s: Cannot request register memory region.\0A\00", align 1
@.str.77 = private unnamed_addr constant [13 x i8] c"ivtv decoder\00", align 1
@.str.78 = private unnamed_addr constant [45 x i8] c"\013%s: Cannot request decoder memory region.\0A\00", align 1
@.str.79 = private unnamed_addr constant [49 x i8] c"\016%s:  info: Attempting to enable Bus Mastering\0A\00", align 1
@.str.80 = private unnamed_addr constant [36 x i8] c"\013%s: Bus Mastering is not enabled\0A\00", align 1
@.str.81 = private unnamed_addr constant [37 x i8] c"\016%s:  info: Bus Mastering Enabled.\0A\00", align 1
@.str.82 = private unnamed_addr constant [62 x i8] c"\016%s: Unreasonably low latency timer, setting to 64 (was %d)\0A\00", align 1
@.str.83 = private unnamed_addr constant [80 x i8] c"\016%s:  info: %d (rev %d) at %02x:%02x.%x, irq: %d, latency: %d, memory: 0x%llx\0A\00", align 1
@dma_ops = external global %struct.dma_map_ops*, align 8
@ivtv_init_struct1.param = private unnamed_addr constant %struct.atomic_t { i32 99 }, align 4
@.str.47 = private unnamed_addr constant [21 x i8] c"&itv->serialize_lock\00", align 1
@ivtv_init_struct1.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"&itv->i2c_bus_lock\00", align 1
@ivtv_init_struct1.__key.48 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.51 = private unnamed_addr constant [16 x i8] c"&itv->udma.lock\00", align 1
@ivtv_init_struct1.__key.50 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.53 = private unnamed_addr constant [21 x i8] c"&(&itv->lock)->rlock\00", align 1
@ivtv_init_struct1.__key.52 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.55 = private unnamed_addr constant [29 x i8] c"&(&itv->dma_reg_lock)->rlock\00", align 1
@ivtv_init_struct1.__key.54 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.57 = private unnamed_addr constant [25 x i8] c"(&itv->irq_worker)->lock\00", align 1
@ivtv_init_struct1.__key.56 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.59 = private unnamed_addr constant [34 x i8] c"\013%s: Could not create ivtv task\0A\00", align 1
@.str.61 = private unnamed_addr constant [16 x i8] c"&itv->eos_waitq\00", align 1
@ivtv_init_struct1.__key.60 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.63 = private unnamed_addr constant [18 x i8] c"&itv->event_waitq\00", align 1
@ivtv_init_struct1.__key.62 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"&itv->vsync_waitq\00", align 1
@ivtv_init_struct1.__key.64 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.67 = private unnamed_addr constant [16 x i8] c"&itv->dma_waitq\00", align 1
@ivtv_init_struct1.__key.66 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.69 = private unnamed_addr constant [18 x i8] c"(&itv->dma_timer)\00", align 1
@ivtv_init_struct1.__key.68 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.29.78 = private unnamed_addr constant [59 x i8] c"\014%s: Invalid tunertype argument, will autodetect instead\0A\00", align 1
@.str.30.79 = private unnamed_addr constant [8 x i8] c"cx23415\00", align 1
@.str.31.80 = private unnamed_addr constant [8 x i8] c"cx23416\00", align 1
@.str.32.81 = private unnamed_addr constant [44 x i8] c"\016%s: Ignore card (detected %s based chip)\0A\00", align 1
@.str.33.82 = private unnamed_addr constant [55 x i8] c"\016%s: User specified %s card (detected %s based chip)\0A\00", align 1
@.str.34.83 = private unnamed_addr constant [62 x i8] c"\013%s: Unknown user specified type, trying to autodetect card\0A\00", align 1
@.str.35.84 = private unnamed_addr constant [46 x i8] c"\016%s: Autodetected Hauppauge card (%s based)\0A\00", align 1
@.str.36.85 = private unnamed_addr constant [39 x i8] c"\016%s: Autodetected %s card (%s based)\0A\00", align 1
@.str.37.86 = private unnamed_addr constant [48 x i8] c"\013%s: Unknown card: vendor/device: [%04x:%04x]\0A\00", align 1
@.str.38.87 = private unnamed_addr constant [58 x i8] c"\013%s:               subsystem vendor/device: [%04x:%04x]\0A\00", align 1
@.str.39.88 = private unnamed_addr constant [30 x i8] c"\013%s:               %s based\0A\00", align 1
@.str.40.89 = private unnamed_addr constant [29 x i8] c"\013%s: Defaulting to %s card\0A\00", align 1
@.str.41.90 = private unnamed_addr constant [86 x i8] c"\013%s: Please mail the vendor/device and subsystem vendor/device IDs and what kind of\0A\00", align 1
@.str.42.91 = private unnamed_addr constant [72 x i8] c"\013%s: card you have to the ivtv-devel mailinglist (www.ivtvdriver.org)\0A\00", align 1
@.str.43 = private unnamed_addr constant [58 x i8] c"\013%s: Prefix your subject line with [UNKNOWN IVTV CARD].\0A\00", align 1
@.str.44 = private unnamed_addr constant [36 x i8] c"\014%s: pal= argument not recognised\0A\00", align 1
@.str.45 = private unnamed_addr constant [38 x i8] c"\014%s: secam= argument not recognised\0A\00", align 1
@.str.46.92 = private unnamed_addr constant [37 x i8] c"\014%s: ntsc= argument not recognised\0A\00", align 1
@__ksymtab_ivtv_claim_stream = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv_open_id*, i32)* @ivtv_claim_stream to i64), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @__kstrtab_ivtv_claim_stream, i32 0, i32 0) }, section "___ksymtab+ivtv_claim_stream", align 8
@__ksymtab_ivtv_release_stream = internal constant %struct.kernel_symbol { i64 ptrtoint (void (%struct.ivtv_stream.1071*)* @ivtv_release_stream to i64), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__kstrtab_ivtv_release_stream, i32 0, i32 0) }, section "___ksymtab+ivtv_release_stream", align 8
@__kstrtab_ivtv_release_stream = internal constant [20 x i8] c"ivtv_release_stream\00", section "__ksymtab_strings", align 1
@.str.2.96 = private unnamed_addr constant [44 x i8] c"\016%s:  warn: Release stream %s not in use!\0A\00", align 1
@__kstrtab_ivtv_claim_stream = internal constant [18 x i8] c"ivtv_claim_stream\00", section "__ksymtab_strings", align 1
@.str.107 = private unnamed_addr constant [29 x i8] c"\016%s:  info: Start Read VBI\0A\00", align 1
@.str.1.108 = private unnamed_addr constant [32 x i8] c"\016%s:  info: Stream %d is busy\0A\00", align 1
@.str.3.110 = private unnamed_addr constant [39 x i8] c"\016%s:  warn: VBI capture start failed\0A\00", align 1
@.str.4.111 = private unnamed_addr constant [36 x i8] c"\016%s:  info: VBI insertion started\0A\00", align 1
@.str.5.112 = private unnamed_addr constant [54 x i8] c"\016%s:  warn: Failed to start capturing for stream %s\0A\00", align 1
@.str.6.113 = private unnamed_addr constant [37 x i8] c"\016%s:  file: read %zd bytes from %s\0A\00", align 1
@.str.18.114 = private unnamed_addr constant [40 x i8] c"\016%s:  file: read %zd from %s, got %zd\0A\00", align 1
@.str.19.116 = private unnamed_addr constant [52 x i8] c"\016%s:  warn: Stream %s not initialized before read\0A\00", align 1
@.str.25.117 = private unnamed_addr constant [51 x i8] c"\016%s:  warn: copy %zd bytes to user failed for %s\0A\00", align 1
@jiffies = external global i64, align 8
@.str.20.122 = private unnamed_addr constant [21 x i8] c"\016%s:  info: EOS %s\0A\00", align 1
@.str.21.124 = private unnamed_addr constant [30 x i8] c"\016%s:  info: User stopped %s\0A\00", align 1
@.str.23.129 = private unnamed_addr constant [63 x i8] c"\016%s:  info: dualwatch: change stereo flag from 0x%x to 0x%x.\0A\00", align 1
@.str.24.130 = private unnamed_addr constant [53 x i8] c"\016%s:  info: dualwatch: changing stereo flag failed\0A\00", align 1
@.str.22.132 = private unnamed_addr constant [43 x i8] c"\016%s:  warn: Invalid PGM index %d (>= %d)\0A\00", align 1
@ivtv_update_pgm_info.mapping = internal constant [8 x i32] [i32 -1, i32 0, i32 1, i32 -1, i32 2, i32 -1, i32 -1, i32 -1], align 16
@.str.7.134 = private unnamed_addr constant [51 x i8] c"\016%s:  warn: start decode, stream already claimed\0A\00", align 1
@.str.28.135 = private unnamed_addr constant [36 x i8] c"\016%s:  file: write %zd bytes to %s\0A\00", align 1
@.str.29.136 = private unnamed_addr constant [44 x i8] c"\016%s:  warn: Failed start decode stream %s\0A\00", align 1
@.str.30.137 = private unnamed_addr constant [40 x i8] c"\016%s:  file: Wrote %d bytes to %s (%d)\0A\00", align 1
@.str.31.138 = private unnamed_addr constant [34 x i8] c"\016%s:  info: User interrupted %s\0A\00", align 1
@.str.8.139 = private unnamed_addr constant [27 x i8] c"\016%s:  file: Decoder poll\0A\00", align 1
@.str.9.140 = private unnamed_addr constant [50 x i8] c"\016%s:  info: Could not start capture for %s (%d)\0A\00", align 1
@.str.10.141 = private unnamed_addr constant [43 x i8] c"\016%s:  file: Encoder poll started capture\0A\00", align 1
@.str.11.142 = private unnamed_addr constant [27 x i8] c"\016%s:  file: Encoder poll\0A\00", align 1
@.str.12.143 = private unnamed_addr constant [28 x i8] c"\016%s:  file: close() of %s\0A\00", align 1
@.str.13.144 = private unnamed_addr constant [37 x i8] c"\016%s:  info: close stopping capture\0A\00", align 1
@.str.14.145 = private unnamed_addr constant [50 x i8] c"\016%s:  info: close stopping embedded VBI capture\0A\00", align 1
@.str.15.146 = private unnamed_addr constant [23 x i8] c"\016%s:  file: close %s\0A\00", align 1
@.str.32.147 = private unnamed_addr constant [36 x i8] c"\016%s:  info: close stopping decode\0A\00", align 1
@.str.17.148 = private unnamed_addr constant [21 x i8] c"\016%s:  info: Unmute\0A\00", align 1
@.str.16.149 = private unnamed_addr constant [19 x i8] c"\016%s:  info: Mute\0A\00", align 1
@.str.33.150 = private unnamed_addr constant [22 x i8] c"\016%s:  file: open %s\0A\00", align 1
@.str.34.151 = private unnamed_addr constant [41 x i8] c"\013%s: Failed to initialize on device %s\0A\00", align 1
@.str.35.152 = private unnamed_addr constant [54 x i8] c"\014%s: Opening %s with dead firmware lockout disabled\0A\00", align 1
@.str.36.153 = private unnamed_addr constant [48 x i8] c"\014%s: Selected firmware errors will be ignored\0A\00", align 1
@.str.37.154 = private unnamed_addr constant [21 x i8] c"ivtv_serialized_open\00", align 1
@.str.38.155 = private unnamed_addr constant [99 x i8] c"\013%s: Tried to open YUV output device but need to send data to mpeg decoder before it can be used\0A\00", align 1
@.str.39.157 = private unnamed_addr constant [33 x i8] c"\016%s:  warn: nomem on v4l2 open\0A\00", align 1
@__UNIQUE_ID_firmware16 = internal constant [28 x i8] c"firmware=v4l-cx2341x-enc.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware17 = internal constant [28 x i8] c"firmware=v4l-cx2341x-dec.fw\00", section ".modinfo", align 1
@__UNIQUE_ID_firmware18 = internal constant [30 x i8] c"firmware=v4l-cx2341x-init.mpg\00", section ".modinfo", align 1
@.str.163 = private unnamed_addr constant [43 x i8] c"\016%s:  info: Preparing for firmware halt.\0A\00", align 1
@.str.1.164 = private unnamed_addr constant [27 x i8] c"\016%s:  info: Stopping VDM\0A\00", align 1
@.str.2.166 = private unnamed_addr constant [26 x i8] c"\016%s:  info: Stopping AO\0A\00", align 1
@.str.3.167 = private unnamed_addr constant [30 x i8] c"\016%s:  info: pinging (?) APU\0A\00", align 1
@.str.4.168 = private unnamed_addr constant [27 x i8] c"\016%s:  info: Stopping VPU\0A\00", align 1
@.str.5.169 = private unnamed_addr constant [34 x i8] c"\016%s:  info: Resetting Hw Blocks\0A\00", align 1
@.str.6.170 = private unnamed_addr constant [27 x i8] c"\016%s:  info: Stopping SPU\0A\00", align 1
@.str.7.171 = private unnamed_addr constant [44 x i8] c"\016%s:  info: init Encoder SDRAM pre-charge\0A\00", align 1
@.str.8.172 = private unnamed_addr constant [48 x i8] c"\016%s:  info: init Encoder SDRAM refresh to 1us\0A\00", align 1
@.str.9.173 = private unnamed_addr constant [44 x i8] c"\016%s:  info: init Decoder SDRAM pre-charge\0A\00", align 1
@.str.10.174 = private unnamed_addr constant [48 x i8] c"\016%s:  info: init Decoder SDRAM refresh to 1us\0A\00", align 1
@.str.11.175 = private unnamed_addr constant [32 x i8] c"\016%s:  info: Sleeping for %dms\0A\00", align 1
@.str.12.178 = private unnamed_addr constant [32 x i8] c"\016%s: Encoder revision: 0x%08x\0A\00", align 1
@.str.13.179 = private unnamed_addr constant [51 x i8] c"\014%s: Recommended firmware version is 0x02060039.\0A\00", align 1
@.str.14.180 = private unnamed_addr constant [32 x i8] c"\016%s: Decoder revision: 0x%08x\0A\00", align 1
@.str.15.183 = private unnamed_addr constant [40 x i8] c"\016%s:  warn: Error %d loading firmware\0A\00", align 1
@.str.16.185 = private unnamed_addr constant [33 x i8] c"\013%s: Encoder mailbox not found\0A\00", align 1
@.str.17.186 = private unnamed_addr constant [30 x i8] c"\013%s: Encoder firmware dead!\0A\00", align 1
@.str.18.187 = private unnamed_addr constant [33 x i8] c"\013%s: Decoder mailbox not found\0A\00", align 1
@.str.19.188 = private unnamed_addr constant [30 x i8] c"\013%s: Decoder firmware dead!\0A\00", align 1
@.str.31.189 = private unnamed_addr constant [36 x i8] c"\016%s:  info: Loading encoder image\0A\00", align 1
@.str.32.190 = private unnamed_addr constant [19 x i8] c"v4l-cx2341x-enc.fw\00", align 1
@.str.33.191 = private unnamed_addr constant [46 x i8] c"\016%s:  warn: failed loading encoder firmware\0A\00", align 1
@.str.34.192 = private unnamed_addr constant [36 x i8] c"\016%s:  info: Loading decoder image\0A\00", align 1
@.str.35.193 = private unnamed_addr constant [19 x i8] c"v4l-cx2341x-dec.fw\00", align 1
@.str.36.194 = private unnamed_addr constant [46 x i8] c"\016%s:  warn: failed loading decoder firmware\0A\00", align 1
@.str.37.195 = private unnamed_addr constant [66 x i8] c"\016%s: Retry: file loaded was not %s (expected size %ld, got %zu)\0A\00", align 1
@.str.38.196 = private unnamed_addr constant [38 x i8] c"\016%s: Loaded %s firmware (%zu bytes)\0A\00", align 1
@.str.39.197 = private unnamed_addr constant [54 x i8] c"\013%s: Unable to open firmware %s (must be %ld bytes)\0A\00", align 1
@.str.40.198 = private unnamed_addr constant [67 x i8] c"\013%s: Did you put the firmware in the hotplug firmware directory?\0A\00", align 1
@.str.20.201 = private unnamed_addr constant [59 x i8] c"\013%s: ivtv_init_mpeg_decoder failed to set decoder source\0A\00", align 1
@.str.21.202 = private unnamed_addr constant [55 x i8] c"\013%s: ivtv_init_mpeg_decoder failed to start playback\0A\00", align 1
@.str.22.203 = private unnamed_addr constant [21 x i8] c"v4l-cx2341x-init.mpg\00", align 1
@.str.23.204 = private unnamed_addr constant [65 x i8] c"\016%s:  warn: failed to read mpeg decoder initialisation file %s\0A\00", align 1
@.str.24.207 = private unnamed_addr constant [29 x i8] c"\014%s: Encoder has died : %s\0A\00", align 1
@.str.25.210 = private unnamed_addr constant [40 x i8] c"\014%s: Audio has died (Encoder OK) : %s\0A\00", align 1
@.str.26.211 = private unnamed_addr constant [37 x i8] c"\014%s: Audio has died (Decoder) : %s\0A\00", align 1
@.str.27.212 = private unnamed_addr constant [29 x i8] c"\014%s: Decoder has died : %s\0A\00", align 1
@.str.28.213 = private unnamed_addr constant [59 x i8] c"\016%s: Detected in %s that firmware had failed - Reloading\0A\00", align 1
@.str.29.214 = private unnamed_addr constant [29 x i8] c"\016%s: Firmware restart okay\0A\00", align 1
@.str.30.215 = private unnamed_addr constant [31 x i8] c"\016%s: Firmware restart failed\0A\00", align 1
@.str.219 = private unnamed_addr constant [34 x i8] c"\016%s:  info: Resetting PVR150 IR\0A\00", align 1
@.str.1.225 = private unnamed_addr constant [30 x i8] c"\016%s:  info: Resetting tuner\0A\00", align 1
@.str.2.228 = private unnamed_addr constant [47 x i8] c"\016%s:  info: GPIO initial dir: %08x out: %08x\0A\00", align 1
@subdev_ops = internal constant %struct.v4l2_subdev_ops { %struct.v4l2_subdev_core_ops* @subdev_core_ops, %struct.v4l2_subdev_tuner_ops* @subdev_tuner_ops, %struct.v4l2_subdev_audio_ops* @subdev_audio_ops, %struct.v4l2_subdev_video_ops* @subdev_video_ops, %struct.v4l2_subdev_vbi_ops* null, %struct.v4l2_subdev_ir_ops* null, %struct.v4l2_subdev_sensor_ops* null, %struct.v4l2_subdev_pad_ops* null }, align 8
@.str.3.229 = private unnamed_addr constant [8 x i8] c"%s-gpio\00", align 1
@ivtv_gpio_init._key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.4.230 = private unnamed_addr constant [38 x i8] c"ivtv_gpio:359:(&itv->hdl_gpio)->_lock\00", align 1
@gpio_ctrl_ops = internal constant %struct.v4l2_ctrl_ops { i32 (%struct.v4l2_ctrl*)* null, i32 (%struct.v4l2_ctrl*)* null, i32 (%struct.v4l2_ctrl*)* @subdev_s_ctrl }, align 8
@subdev_core_ops = internal constant %struct.v4l2_subdev_core_ops { i32 (%struct.v4l2_subdev*)* @subdev_log_status, i32 (%struct.v4l2_subdev*, i64, %struct.v4l2_subdev_io_pin_config*)* null, i32 (%struct.v4l2_subdev*, i32)* null, i32 (%struct.v4l2_subdev*)* null, i32 (%struct.v4l2_subdev*, i32)* null, i32 (%struct.v4l2_subdev*, i32)* null, i64 (%struct.v4l2_subdev*, i32, i8*)* null, i64 (%struct.v4l2_subdev*, i32, i64)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)* null, i32 (%struct.v4l2_subdev*, i32)* null, i32 (%struct.v4l2_subdev*, i32, i8*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)* null }, align 8
@subdev_tuner_ops = internal constant %struct.v4l2_subdev_tuner_ops { i32 (%struct.v4l2_subdev*)* @subdev_s_radio, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency_band*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)* @subdev_g_tuner, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)* @subdev_s_tuner, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)* null, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)* null }, align 8
@subdev_audio_ops = internal constant %struct.v4l2_subdev_audio_ops { i32 (%struct.v4l2_subdev*, i32)* @subdev_s_clock_freq, i32 (%struct.v4l2_subdev*, i32)* null, i32 (%struct.v4l2_subdev*, i32, i32, i32)* @subdev_s_audio_routing, i32 (%struct.v4l2_subdev*, i32)* null }, align 8
@subdev_video_ops = internal constant %struct.v4l2_subdev_video_ops { i32 (%struct.v4l2_subdev*, i32, i32, i32)* @subdev_s_video_routing, i32 (%struct.v4l2_subdev*, i32, i32)* null, i32 (%struct.v4l2_subdev*, i64*)* null, i32 (%struct.v4l2_subdev*, i64)* null, i32 (%struct.v4l2_subdev*, i64)* null, i32 (%struct.v4l2_subdev*, i64*)* null, i32 (%struct.v4l2_subdev*, i64*)* null, i32 (%struct.v4l2_subdev*, i64*)* null, i32 (%struct.v4l2_subdev*, i64*)* null, i32 (%struct.v4l2_subdev*, i32*)* null, i32 (%struct.v4l2_subdev*, i32)* null, i32 (%struct.v4l2_subdev*, %struct.anon.26*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)* null, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)* null, i32 (%struct.v4l2_subdev*, %struct.anon.26*)* null, i32 (%struct.v4l2_subdev*, %struct.anon.26*)* null, i32 (%struct.v4l2_subdev*, i8*, i32*)* null }, align 8
@.str.5.231 = private unnamed_addr constant [52 x i8] c"\016%s: GPIO status: DIR=0x%04x OUT=0x%04x IN=0x%04x\0A\00", align 1
@.str.234 = private unnamed_addr constant [9 x i8] c"ir_video\00", align 1
@ivtv_i2c_new_ir_legacy.addr_list = internal constant [3 x i16] [i16 26, i16 24, i16 -2], align 2
@hw_devicenames = internal constant [22 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6.242, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.243, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8.244, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9.245, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10.246, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11.247, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.12.248, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.249, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.250, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15.251, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.252, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.253, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.18.254, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.19.255, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20.256, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.21.257, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.22.258, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.23.259, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0)], align 16
@hw_addrs = internal constant [22 x i8] c"D!D@\00\1B\11\00!\12\5C!\1A[H\00@\1A\18pqk", align 16
@.str.1.237 = private unnamed_addr constant [20 x i8] c"cx25840\00\00\00\00\00\00\00\00\00\00\00\00\00", align 1
@.str.24.238 = private unnamed_addr constant [21 x i8] c"rc-avermedia-cardbus\00", align 1
@.str.25.239 = private unnamed_addr constant [22 x i8] c"AVerMedia AVerTV card\00", align 1
@.str.26.240 = private unnamed_addr constant [13 x i8] c"rc-hauppauge\00", align 1
@.str.27.241 = private unnamed_addr constant [9 x i8] c"rc-empty\00", align 1
@.str.6.242 = private unnamed_addr constant [8 x i8] c"cx25840\00", align 1
@.str.7.243 = private unnamed_addr constant [8 x i8] c"saa7115\00", align 1
@.str.8.244 = private unnamed_addr constant [13 x i8] c"saa7127_auto\00", align 1
@.str.9.245 = private unnamed_addr constant [8 x i8] c"msp3400\00", align 1
@.str.10.246 = private constant [6 x i8] c"tuner\00", align 1
@.str.11.247 = private unnamed_addr constant [7 x i8] c"wm8775\00", align 1
@.str.12.248 = private unnamed_addr constant [9 x i8] c"cs53l32a\00", align 1
@.str.13.249 = private unnamed_addr constant [9 x i8] c"tveeprom\00", align 1
@.str.14.250 = private unnamed_addr constant [8 x i8] c"saa7114\00", align 1
@.str.15.251 = private unnamed_addr constant [10 x i8] c"upd64031a\00", align 1
@.str.16.252 = private unnamed_addr constant [9 x i8] c"upd64083\00", align 1
@.str.17.253 = private unnamed_addr constant [8 x i8] c"saa717x\00", align 1
@.str.18.254 = private unnamed_addr constant [7 x i8] c"wm8739\00", align 1
@.str.19.255 = private unnamed_addr constant [9 x i8] c"vp27smpx\00", align 1
@.str.20.256 = private unnamed_addr constant [7 x i8] c"m52790\00", align 1
@.str.21.257 = private unnamed_addr constant [5 x i8] c"gpio\00", align 1
@.str.22.258 = private unnamed_addr constant [19 x i8] c"ir_tx_z8f0811_haup\00", align 1
@.str.23.259 = private unnamed_addr constant [19 x i8] c"ir_rx_z8f0811_haup\00", align 1
@.str.2.266 = private unnamed_addr constant [22 x i8] c"\016%s:  i2c: i2c init\0A\00", align 1
@ivtv_i2c_adap_hw_template = internal global %struct.i2c_adapter { %struct.module* @__this_module, i32 0, %struct.i2c_algorithm* @ivtv_algo, i8* null, %struct.i2c_lock_operations* null, %struct.rt_mutex zeroinitializer, %struct.rt_mutex zeroinitializer, i32 0, i32 0, %struct.device zeroinitializer, i32 0, [48 x i8] c"ivtv i2c driver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.completion zeroinitializer, %struct.mutex zeroinitializer, %struct.list_head zeroinitializer, %struct.i2c_bus_recovery_info* null, %struct.i2c_adapter_quirks* null, %struct.irq_domain* null }, align 8
@ivtv_i2c_adap_template = internal global %struct.i2c_adapter { %struct.module* @__this_module, i32 0, %struct.i2c_algorithm* null, i8* null, %struct.i2c_lock_operations* null, %struct.rt_mutex zeroinitializer, %struct.rt_mutex zeroinitializer, i32 0, i32 0, %struct.device zeroinitializer, i32 0, [48 x i8] c"ivtv i2c driver\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", %struct.completion zeroinitializer, %struct.mutex zeroinitializer, %struct.list_head zeroinitializer, %struct.i2c_bus_recovery_info* null, %struct.i2c_adapter_quirks* null, %struct.irq_domain* null }, align 8
@ivtv_i2c_algo_template = internal constant %struct.i2c_algo_bit_data { i8* null, void (i8*, i32)* @ivtv_setsda_old, void (i8*, i32)* @ivtv_setscl_old, i32 (i8*)* @ivtv_getsda_old, i32 (i8*)* @ivtv_getscl_old, i32 (%struct.i2c_adapter*)* null, void (%struct.i2c_adapter*)* null, i32 10, i32 500 }, align 8
@.str.3.267 = private unnamed_addr constant [5 x i8] c" #%d\00", align 1
@ivtv_i2c_client_template = internal global %struct.i2c_client { i16 0, i16 0, [20 x i8] c"ivtv internal\00\00\00\00\00\00\00", %struct.i2c_adapter* null, %struct.device zeroinitializer, i32 0, %struct.list_head zeroinitializer, i32 (%struct.i2c_client*, i32, i8*)* null }, align 8
@.str.4.268 = private unnamed_addr constant [38 x i8] c"\016%s:  i2c: setting scl and sda to 1\0A\00", align 1
@ivtv_algo = internal constant %struct.i2c_algorithm { i32 (%struct.i2c_adapter*, %struct.i2c_msg*, i32)* @ivtv_xfer, i32 (%struct.i2c_adapter*, i16, i16, i8, i8, i32, %union.i2c_smbus_data*)* null, i32 (%struct.i2c_adapter*)* @ivtv_functionality, i32 (%struct.i2c_client*)* null, i32 (%struct.i2c_client*)* null }, align 8
@.str.46.274 = private unnamed_addr constant [36 x i8] c"\016%s:  i2c: i2c write to %x failed\0A\00", align 1
@.str.42.275 = private unnamed_addr constant [39 x i8] c"\016%s:  i2c: SCL not low when stopping\0A\00", align 1
@.str.43.276 = private unnamed_addr constant [38 x i8] c"\016%s:  i2c: SCL could not be set low\0A\00", align 1
@.str.44.277 = private unnamed_addr constant [39 x i8] c"\016%s:  i2c: SCL could not be set high\0A\00", align 1
@.str.45.278 = private unnamed_addr constant [27 x i8] c"\016%s:  i2c: resetting I2C\0A\00", align 1
@.str.32.279 = private unnamed_addr constant [22 x i8] c"\016%s:  i2c: write %x\0A\00", align 1
@.str.33.280 = private unnamed_addr constant [35 x i8] c"\016%s:  i2c: Error setting SCL low\0A\00", align 1
@.str.34.281 = private unnamed_addr constant [31 x i8] c"\016%s:  i2c: Error setting SDA\0A\00", align 1
@.str.35.282 = private unnamed_addr constant [37 x i8] c"\016%s:  i2c: Slave not ready for bit\0A\00", align 1
@.str.36.283 = private unnamed_addr constant [42 x i8] c"\016%s:  i2c: SCL was high starting an ack\0A\00", align 1
@.str.37.284 = private unnamed_addr constant [51 x i8] c"\016%s:  i2c: Could not set SCL low starting an ack\0A\00", align 1
@.str.38.285 = private unnamed_addr constant [31 x i8] c"\016%s:  i2c: Slave did not ack\0A\00", align 1
@.str.39.286 = private unnamed_addr constant [45 x i8] c"\016%s:  i2c: Failed to set SCL low after ACK\0A\00", align 1
@.str.29.287 = private unnamed_addr constant [34 x i8] c"\016%s:  i2c: SDA was low at start\0A\00", align 1
@.str.30.288 = private unnamed_addr constant [27 x i8] c"\016%s:  i2c: SDA stuck low\0A\00", align 1
@.str.31.289 = private unnamed_addr constant [36 x i8] c"\016%s:  i2c: SCL stuck low at start\0A\00", align 1
@.str.28.290 = private unnamed_addr constant [37 x i8] c"\016%s:  i2c: i2c read from %x failed\0A\00", align 1
@.str.40.291 = private unnamed_addr constant [36 x i8] c"\016%s:  i2c: Error setting SCL high\0A\00", align 1
@.str.41.292 = private unnamed_addr constant [21 x i8] c"\016%s:  i2c: read %x\0A\00", align 1
@.str.5.296 = private unnamed_addr constant [22 x i8] c"\016%s:  i2c: i2c exit\0A\00", align 1
@.str.309 = private unnamed_addr constant [80 x i8] c"\016%s:  info: Setting Speed to 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x 0x%08x\0A\00", align 1
@.str.1.318 = private unnamed_addr constant [30 x i8] c"\016%s:  info: Input unchanged\0A\00", align 1
@.str.2.319 = private unnamed_addr constant [43 x i8] c"\016%s:  info: Changing input from %d to %d\0A\00", align 1
@.str.3.322 = private unnamed_addr constant [43 x i8] c"\016%s:  info: v4l2 ioctl: set frequency %d\0A\00", align 1
@.str.4.329 = private unnamed_addr constant [45 x i8] c"\014%s: Mode change failed to sync to decoder\0A\00", align 1
@ivtv_ioctl_ops = internal constant %struct.v4l2_ioctl_ops { i32 (%struct.file*, i8*, %struct.v4l2_capability*)* @ivtv_querycap, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* @ivtv_enum_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* @ivtv_enum_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_vid_out_overlay, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_sliced_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_g_fmt_sliced_vbi_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_vid_out_overlay, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_sliced_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_s_fmt_sliced_vbi_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_vid_out_overlay, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_sliced_vbi_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @ivtv_try_fmt_sliced_vbi_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)* null, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* null, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* null, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)* null, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* null, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)* null, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* null, i32 (%struct.file*, i8*, i32)* @ivtv_overlay, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)* @ivtv_g_fbuf, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)* @ivtv_s_fbuf, i32 (%struct.file*, i8*, i32)* null, i32 (%struct.file*, i8*, i32)* null, i32 (%struct.file*, i8*, i64*)* @ivtv_g_std, i32 (%struct.file*, i8*, i64)* @ivtv_s_std, i32 (%struct.file*, i8*, i64*)* null, i32 (%struct.file*, i8*, %struct.v4l2_input*)* @ivtv_enum_input, i32 (%struct.file*, i8*, i32*)* @ivtv_g_input, i32 (%struct.file*, i8*, i32)* @ivtv_s_input, i32 (%struct.file*, i8*, %struct.v4l2_output*)* @ivtv_enum_output, i32 (%struct.file*, i8*, i32*)* @ivtv_g_output, i32 (%struct.file*, i8*, i32)* @ivtv_s_output, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)* null, i32 (%struct.file*, i8*, %struct.v4l2_query_ext_ctrl*)* null, i32 (%struct.file*, i8*, %struct.anon.26*)* null, i32 (%struct.file*, i8*, %struct.anon.26*)* null, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* null, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* null, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* null, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_enumaudio, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_g_audio, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_s_audio, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_enumaudout, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_g_audout, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* @ivtv_s_audout, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)* null, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)* null, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)* @ivtv_cropcap, i32 (%struct.file*, i8*, %struct.v4l2_crop*)* null, i32 (%struct.file*, i8*, %struct.v4l2_crop*)* null, i32 (%struct.file*, i8*, %struct.v4l2_selection*)* @ivtv_g_selection, i32 (%struct.file*, i8*, %struct.v4l2_selection*)* @ivtv_s_selection, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)* null, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)* null, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)* @ivtv_g_enc_index, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)* @ivtv_encoder_cmd, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)* @ivtv_try_encoder_cmd, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)* @ivtv_decoder_cmd, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)* @ivtv_try_decoder_cmd, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)* null, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)* null, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)* @ivtv_g_tuner, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)* @ivtv_s_tuner, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)* @ivtv_g_frequency, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)* @ivtv_s_frequency, i32 (%struct.file*, i8*, %struct.v4l2_frequency_band*)* null, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)* @ivtv_g_sliced_vbi_cap, i32 (%struct.file*, i8*)* @ivtv_log_status, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)* @ivtv_g_register, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)* @ivtv_s_register, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)* null, i32 (%struct.file*, i8*, %struct.v4l2_edid*)* null, i32 (%struct.file*, i8*, %struct.v4l2_edid*)* null, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)* @ivtv_subscribe_event, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)* @v4l2_event_unsubscribe, i64 (%struct.file*, i8*, i1, i32, i8*)* @ivtv_default }, align 8
@.str.60 = private unnamed_addr constant [34 x i8] c"\016%s:  ioctl: IVTV_IOC_DMA_FRAME\0A\00", align 1
@.str.61.330 = private unnamed_addr constant [41 x i8] c"\016%s:  ioctl: IVTV_IOC_PASSTHROUGH_MODE\0A\00", align 1
@.str.62 = private unnamed_addr constant [14 x i8] c"VIDEO_GET_PTS\00", align 1
@.str.63.331 = private unnamed_addr constant [22 x i8] c"VIDEO_GET_FRAME_COUNT\00", align 1
@.str.64 = private unnamed_addr constant [11 x i8] c"VIDEO_PLAY\00", align 1
@.str.65.332 = private unnamed_addr constant [11 x i8] c"VIDEO_STOP\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"VIDEO_FREEZE\00", align 1
@.str.67.333 = private unnamed_addr constant [15 x i8] c"VIDEO_CONTINUE\00", align 1
@.str.68 = private unnamed_addr constant [18 x i8] c"VIDEO_TRY_COMMAND\00", align 1
@.str.69.334 = private unnamed_addr constant [14 x i8] c"VIDEO_COMMAND\00", align 1
@.str.70.335 = private unnamed_addr constant [16 x i8] c"VIDEO_GET_EVENT\00", align 1
@.str.71.338 = private unnamed_addr constant [42 x i8] c"\016%s:  info: User stopped wait for event\0A\00", align 1
@.str.72.339 = private unnamed_addr constant [20 x i8] c"VIDEO_SELECT_SOURCE\00", align 1
@.str.73.340 = private unnamed_addr constant [15 x i8] c"AUDIO_SET_MUTE\00", align 1
@.str.74.341 = private unnamed_addr constant [21 x i8] c"AUDIO_CHANNEL_SELECT\00", align 1
@.str.75.343 = private unnamed_addr constant [31 x i8] c"AUDIO_BILINGUAL_CHANNEL_SELECT\00", align 1
@warn_deprecated_ioctl.__print_once = internal global i8 0, section ".data..read_mostly", align 1
@.str.76.346 = private unnamed_addr constant [87 x i8] c"\014ivtv: warning: the %s ioctl is deprecated. Don't use it, as it will be removed soon\0A\00", align 1
@v4l2_ctrl_sub_ev_ops = external constant %struct.v4l2_subscribed_event_ops, align 8
@.str.19.348 = private unnamed_addr constant [28 x i8] c"\016%s: Version: %s Card: %s\0A\00", align 1
@.str.20.349 = private unnamed_addr constant [6 x i8] c"1.4.3\00", align 1
@.str.21.350 = private unnamed_addr constant [24 x i8] c"\016%s: Video Input:  %s\0A\00", align 1
@.str.23.351 = private unnamed_addr constant [13 x i8] c" (Bilingual)\00", align 1
@.str.22.353 = private unnamed_addr constant [26 x i8] c"\016%s: Audio Input:  %s%s\0A\00", align 1
@.str.49.354 = private unnamed_addr constant [24 x i8] c"\016%s: Video Output: %s\0A\00", align 1
@ivtv_log_status.output_modes = internal constant [5 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.376, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.26.380, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.27.381, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28.382, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29.383, i32 0, i32 0)], align 16
@.str.50 = private unnamed_addr constant [24 x i8] c"\016%s: Output Mode:  %s\0A\00", align 1
@.str.52 = private unnamed_addr constant [3 x i8] c"On\00", align 1
@.str.53.355 = private unnamed_addr constant [4 x i8] c"Off\00", align 1
@ivtv_log_status.alpha_mode = internal constant [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25.376, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.30.377, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31.378, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.32.379, i32 0, i32 0)], align 16
@ivtv_log_status.pixel_format = internal constant [16 x i8*] [i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.33.361, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34.362, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35.363, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.36.364, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.37.365, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38.366, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39.367, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.368, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.41.369, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.42.370, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43.371, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.44.372, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.45.373, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.46.374, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47.375, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.48, i32 0, i32 0)], align 16
@.str.51.356 = private unnamed_addr constant [53 x i8] c"\016%s: Overlay:      %s, Alpha: %s, Pixel Format: %s\0A\00", align 1
@.str.55.357 = private unnamed_addr constant [6 x i8] c"Radio\00", align 1
@.str.56 = private unnamed_addr constant [3 x i8] c"TV\00", align 1
@.str.54 = private unnamed_addr constant [18 x i8] c"\016%s: Tuner:  %s\0A\00", align 1
@.str.57.358 = private unnamed_addr constant [32 x i8] c"\016%s: Status flags:    0x%08lx\0A\00", align 1
@.str.58.359 = private unnamed_addr constant [69 x i8] c"\016%s: Stream %s: status 0x%04lx, %d%% of %d KiB (%d buffers) in use\0A\00", align 1
@.str.59.360 = private unnamed_addr constant [37 x i8] c"\016%s: Read MPG/VBI: %lld/%lld bytes\0A\00", align 1
@.str.33.361 = private unnamed_addr constant [13 x i8] c"ARGB Indexed\00", align 1
@.str.34.362 = private unnamed_addr constant [10 x i8] c"RGB 5:6:5\00", align 1
@.str.35.363 = private unnamed_addr constant [13 x i8] c"ARGB 1:5:5:5\00", align 1
@.str.36.364 = private unnamed_addr constant [13 x i8] c"ARGB 1:4:4:4\00", align 1
@.str.37.365 = private unnamed_addr constant [13 x i8] c"ARGB 8:8:8:8\00", align 1
@.str.38.366 = private unnamed_addr constant [2 x i8] c"5\00", align 1
@.str.39.367 = private unnamed_addr constant [2 x i8] c"6\00", align 1
@.str.40.368 = private unnamed_addr constant [2 x i8] c"7\00", align 1
@.str.41.369 = private unnamed_addr constant [13 x i8] c"AYUV Indexed\00", align 1
@.str.42.370 = private unnamed_addr constant [10 x i8] c"YUV 5:6:5\00", align 1
@.str.43.371 = private unnamed_addr constant [13 x i8] c"AYUV 1:5:5:5\00", align 1
@.str.44.372 = private unnamed_addr constant [13 x i8] c"AYUV 1:4:4:4\00", align 1
@.str.45.373 = private unnamed_addr constant [13 x i8] c"AYUV 8:8:8:8\00", align 1
@.str.46.374 = private unnamed_addr constant [3 x i8] c"13\00", align 1
@.str.47.375 = private unnamed_addr constant [3 x i8] c"14\00", align 1
@.str.48 = private unnamed_addr constant [3 x i8] c"15\00", align 1
@.str.25.376 = private unnamed_addr constant [5 x i8] c"None\00", align 1
@.str.30.377 = private unnamed_addr constant [7 x i8] c"Global\00", align 1
@.str.31.378 = private unnamed_addr constant [6 x i8] c"Local\00", align 1
@.str.32.379 = private unnamed_addr constant [17 x i8] c"Global and Local\00", align 1
@.str.26.380 = private unnamed_addr constant [15 x i8] c"MPEG Streaming\00", align 1
@.str.27.381 = private unnamed_addr constant [14 x i8] c"YUV Streaming\00", align 1
@.str.28.382 = private unnamed_addr constant [11 x i8] c"YUV Frames\00", align 1
@.str.29.383 = private unnamed_addr constant [12 x i8] c"Passthrough\00", align 1
@.str.17.384 = private unnamed_addr constant [17 x i8] c"ivtv Radio Tuner\00", align 1
@.str.18.385 = private unnamed_addr constant [14 x i8] c"ivtv TV Tuner\00", align 1
@.str.16.386 = private unnamed_addr constant [41 x i8] c"\016%s:  ioctl: VIDIOC_TRY_DECODER_CMD %d\0A\00", align 1
@.str.15.387 = private unnamed_addr constant [37 x i8] c"\016%s:  ioctl: VIDIOC_DECODER_CMD %d\0A\00", align 1
@.str.10.388 = private unnamed_addr constant [34 x i8] c"\016%s:  ioctl: V4L2_ENC_CMD_START\0A\00", align 1
@.str.11.389 = private unnamed_addr constant [33 x i8] c"\016%s:  ioctl: V4L2_ENC_CMD_STOP\0A\00", align 1
@.str.12.390 = private unnamed_addr constant [34 x i8] c"\016%s:  ioctl: V4L2_ENC_CMD_PAUSE\0A\00", align 1
@.str.13.391 = private unnamed_addr constant [35 x i8] c"\016%s:  ioctl: V4L2_ENC_CMD_RESUME\0A\00", align 1
@.str.14.392 = private unnamed_addr constant [30 x i8] c"\016%s:  ioctl: Unknown cmd %d\0A\00", align 1
@ivtv_g_selection.r = private unnamed_addr constant %struct.v4l2_rect { i32 0, i32 0, i32 720, i32 0 }, align 4
@.str.8.394 = private unnamed_addr constant [31 x i8] c"\016%s:  info: Output unchanged\0A\00", align 1
@.str.9.395 = private unnamed_addr constant [44 x i8] c"\016%s:  info: Changing output from %d to %d\0A\00", align 1
@.str.7.396 = private unnamed_addr constant [42 x i8] c"\016%s:  info: Switching standard to %llx.\0A\00", align 1
@ivtv_g_fbuf.pixel_format = internal global [16 x i32] [i32 944521552, i32 1346520914, i32 1329743698, i32 875836498, i32 876758866, i32 0, i32 0, i32 0, i32 944521552, i32 1347835225, i32 1331058009, i32 875836505, i32 878073177, i32 0, i32 0, i32 0], align 16
@ivtv_enum_fmt_vid_out.mpeg = internal constant %struct.v4l2_fmtdesc { i32 0, i32 2, i32 1, [32 x i8] c"MPEG\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 1195724877, [4 x i32] zeroinitializer }, align 4
@ivtv_enum_fmt_vid_out.hm12 = internal constant %struct.v4l2_fmtdesc { i32 0, i32 2, i32 0, [32 x i8] c"HM12 (YUV 4:2:0)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 842091848, [4 x i32] zeroinitializer }, align 4
@ivtv_enum_fmt_vid_cap.mpeg = internal constant %struct.v4l2_fmtdesc { i32 0, i32 1, i32 1, [32 x i8] c"MPEG\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 1195724877, [4 x i32] zeroinitializer }, align 4
@ivtv_enum_fmt_vid_cap.hm12 = internal constant %struct.v4l2_fmtdesc { i32 0, i32 1, i32 0, [32 x i8] c"HM12 (YUV 4:2:0)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", i32 842091848, [4 x i32] zeroinitializer }, align 4
@.str.5.398 = private unnamed_addr constant [5 x i8] c"ivtv\00", align 1
@.str.6.399 = private unnamed_addr constant [7 x i8] c"PCI:%s\00", align 1
@.str.8.405 = private unnamed_addr constant [35 x i8] c"\016%s:  dma: ivtv_pio_work_handler\0A\00", align 1
@.str.9.407 = private unnamed_addr constant [28 x i8] c"\016%s:  dma: Process PIO %s\0A\00", align 1
@.str.410 = private unnamed_addr constant [43 x i8] c"\016%s:  dma: DEC PREPARE DMA %s: %08x %08x\0A\00", align 1
@.str.11.414 = private unnamed_addr constant [30 x i8] c"\016%s:  dma: start DMA for %s\0A\00", align 1
@.str.1.423 = private unnamed_addr constant [39 x i8] c"\016%s:  yuv: VSync interrupt missed %d\0A\00", align 1
@.str.2.425 = private unnamed_addr constant [51 x i8] c"\016%s:  irq: ======= valid IRQ bits: 0x%08x ======\0A\00", align 1
@.str.3.426 = private unnamed_addr constant [30 x i8] c"\016%s:  irq: DEC DMA COMPLETE\0A\00", align 1
@.str.4.427 = private unnamed_addr constant [21 x i8] c"\016%s:  irq: ENC EOS\0A\00", align 1
@.str.5.428 = private unnamed_addr constant [21 x i8] c"\016%s:  irq: VIM RST\0A\00", align 1
@.str.6.429 = private unnamed_addr constant [34 x i8] c"\016%s:  info: Stereo mode changed\0A\00", align 1
@.str.19.430 = private unnamed_addr constant [4 x i8] c"DMA\00", align 1
@.str.18.431 = private unnamed_addr constant [4 x i8] c"PIO\00", align 1
@.str.36.432 = private unnamed_addr constant [29 x i8] c"\016%s:  dma: start %s for %s\0A\00", align 1
@.str.37.434 = private unnamed_addr constant [32 x i8] c"\016%s:  dma: include DMA for %s\0A\00", align 1
@ivtv_irq_vsync.evtop = internal constant { i32, [4 x i8], { %struct.lockdep_subclass_key, [63 x i8] }, i32, i32, %struct.timespec, i32, [8 x i32] } { i32 1, [4 x i8] undef, { %struct.lockdep_subclass_key, [63 x i8] } { %struct.lockdep_subclass_key { i8 2 }, [63 x i8] undef }, i32 0, i32 0, %struct.timespec zeroinitializer, i32 0, [8 x i32] zeroinitializer }, align 8
@ivtv_irq_vsync.evbottom = internal constant { i32, [4 x i8], { %struct.lockdep_subclass_key, [63 x i8] }, i32, i32, %struct.timespec, i32, [8 x i32] } { i32 1, [4 x i8] undef, { %struct.lockdep_subclass_key, [63 x i8] } { %struct.lockdep_subclass_key { i8 3 }, [63 x i8] undef }, i32 0, i32 0, %struct.timespec zeroinitializer, i32 0, [8 x i32] zeroinitializer }, align 8
@.str.35.439 = private unnamed_addr constant [41 x i8] c"\016%s:  irq: DEC DATA REQ %s: %d %08x %u\0A\00", align 1
@.str.34.440 = private unnamed_addr constant [30 x i8] c"\016%s:  irq: DEC VBI REINSERT\0A\00", align 1
@.str.26.441 = private unnamed_addr constant [36 x i8] c"\016%s:  warn: Stream %s not started\0A\00", align 1
@.str.27.442 = private unnamed_addr constant [33 x i8] c"\016%s:  warn: Stream %s not open\0A\00", align 1
@.str.28.443 = private unnamed_addr constant [30 x i8] c"\016%s:  info: VBI offset == 0\0A\00", align 1
@.str.29.444 = private unnamed_addr constant [43 x i8] c"\016%s:  dma: %s %s: 0x%08x bytes at 0x%08x\0A\00", align 1
@.str.30.445 = private unnamed_addr constant [58 x i8] c"\016%s:  warn: Cannot obtain %d bytes for %s data transfer\0A\00", align 1
@.str.31.446 = private unnamed_addr constant [54 x i8] c"\014%s: All %s stream buffers are full. Dropping data.\0A\00", align 1
@.str.32.447 = private unnamed_addr constant [58 x i8] c"\014%s: Cause: the application is not reading fast enough.\0A\00", align 1
@.str.33.448 = private unnamed_addr constant [31 x i8] c"\016%s:  irq: ENC START VBI CAP\0A\00", align 1
@.str.24.449 = private unnamed_addr constant [41 x i8] c"\016%s:  irq: ENC START CAP %d: %08x %08x\0A\00", align 1
@.str.25.450 = private unnamed_addr constant [44 x i8] c"\016%s:  warn: Unknown input: %08x %08x %08x\0A\00", align 1
@ivtv_stream_map = internal constant [4 x i32] [i32 0, i32 1, i32 3, i32 2], align 16
@.str.23.451 = private unnamed_addr constant [42 x i8] c"\016%s:  warn: DMA ERROR %08x %08x %08x %d\0A\00", align 1
@.str.22.452 = private unnamed_addr constant [33 x i8] c"\016%s:  irq: ENC PIO COMPLETE %s\0A\00", align 1
@.str.17.453 = private unnamed_addr constant [34 x i8] c"\016%s:  dma: %s %s completed (%x)\0A\00", align 1
@.str.20.454 = private unnamed_addr constant [75 x i8] c"\016%s:  warn: %s: Couldn't find start of buffer within the first 256 bytes\0A\00", align 1
@.str.21.455 = private unnamed_addr constant [34 x i8] c"\016%s:  warn: %s: offset %d -> %d\0A\00", align 1
@.str.15.456 = private unnamed_addr constant [41 x i8] c"\016%s:  irq: ENC DMA COMPLETE %x %d (%d)\0A\00", align 1
@.str.16.457 = private unnamed_addr constant [70 x i8] c"\016%s:  warn: ENC DMA ERROR %x (offset %08x, xfer %d of %d, retry %d)\0A\00", align 1
@.str.12.458 = private unnamed_addr constant [26 x i8] c"\016%s:  irq: DEC DMA READ\0A\00", align 1
@.str.13.459 = private unnamed_addr constant [57 x i8] c"\016%s:  warn: DEC DMA ERROR %x (xfer %d of %d, retry %d)\0A\00", align 1
@.str.14.460 = private unnamed_addr constant [34 x i8] c"\016%s:  dma: DEC DATA READ %s: %d\0A\00", align 1
@.str.7.463 = private unnamed_addr constant [27 x i8] c"\013%s: DMA TIMEOUT %08x %d\0A\00", align 1
@.str.467 = private unnamed_addr constant [28 x i8] c"\013%s: No mailbox allocated\0A\00", align 1
@api_info = internal constant [256 x %struct.v4l2_priv_tun_config] [%struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8.480, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.9.481, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.10.482, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11.483, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.12.484, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13.485, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14.486, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15.487, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 40, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.16.488, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.17.489, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.18.490, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19.491, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20.492, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.21.493, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.22.494, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.23.495, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.24.496, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.25.497, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.26.498, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.27.499, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.28.500, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.29.501, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.30.502, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.31.503, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32.504, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33.505, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.34.506, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35.507, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.36.508, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.37.509, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.38.510, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.39.511, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40.512, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.41.513, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.42.514, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.43.515, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.44.516, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45.517, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46.518, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.47.519, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.48.520, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.49.521, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.50.522, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 66, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.51.523, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.52.524, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.53.525, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.54.526, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.55.527, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56.528, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.57.529, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.58.530, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.59.531, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.60.532, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.61.533, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.62.534, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.63.535, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.64.536, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.65.537, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.66.538, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.67.539, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.68.540, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.69.541, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.70.542, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.71.543, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.72.544, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.73.545, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.74.546, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.75.547, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.76.548, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.77.549, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.78.550, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 40, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.79.551, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.80.552, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.81.553, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.82.554, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 48, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.83.555, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.84.556, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.85.557, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.86.558, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.87.559, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.88.560, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.89.561, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.90.562, i32 0, i32 0) }, %struct.v4l2_priv_tun_config { i32 6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.91.563, i32 0, i32 0) }, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer, %struct.v4l2_priv_tun_config zeroinitializer], align 16
@.str.1.468 = private unnamed_addr constant [48 x i8] c"\013%s: Invalid MB call: cmd = 0x%02x, args = %d\0A\00", align 1
@.str.2.469 = private unnamed_addr constant [24 x i8] c"\016%s:  mb: MB Call: %s\0A\00", align 1
@.str.3.472 = private unnamed_addr constant [43 x i8] c"\016%s:  warn: %s: mailbox %d not free %08x\0A\00", align 1
@.str.4.473 = private unnamed_addr constant [46 x i8] c"\014%s: Could not find free DMA mailbox for %s\0A\00", align 1
@.str.5.474 = private unnamed_addr constant [41 x i8] c"\016%s:  warn: No free mailbox found (%s)\0A\00", align 1
@.str.6.475 = private unnamed_addr constant [40 x i8] c"\016%s:  warn: Could not get result (%s)\0A\00", align 1
@.str.7.477 = private unnamed_addr constant [33 x i8] c"\016%s:  warn: %s took %u jiffies\0A\00", align 1
@.str.92.478 = private unnamed_addr constant [59 x i8] c"\016%s:  warn: Clearing mailbox %d: cmd 0x%08x flags 0x%08x\0A\00", align 1
@.str.8.480 = private unnamed_addr constant [20 x i8] c"CX2341X_DEC_PING_FW\00", align 1
@.str.9.481 = private unnamed_addr constant [27 x i8] c"CX2341X_DEC_START_PLAYBACK\00", align 1
@.str.10.482 = private unnamed_addr constant [26 x i8] c"CX2341X_DEC_STOP_PLAYBACK\00", align 1
@.str.11.483 = private unnamed_addr constant [31 x i8] c"CX2341X_DEC_SET_PLAYBACK_SPEED\00", align 1
@.str.12.484 = private unnamed_addr constant [23 x i8] c"CX2341X_DEC_STEP_VIDEO\00", align 1
@.str.13.485 = private unnamed_addr constant [31 x i8] c"CX2341X_DEC_SET_DMA_BLOCK_SIZE\00", align 1
@.str.14.486 = private unnamed_addr constant [26 x i8] c"CX2341X_DEC_GET_XFER_INFO\00", align 1
@.str.15.487 = private unnamed_addr constant [27 x i8] c"CX2341X_DEC_GET_DMA_STATUS\00", align 1
@.str.16.488 = private unnamed_addr constant [32 x i8] c"CX2341X_DEC_SCHED_DMA_FROM_HOST\00", align 1
@.str.17.489 = private unnamed_addr constant [27 x i8] c"CX2341X_DEC_PAUSE_PLAYBACK\00", align 1
@.str.18.490 = private unnamed_addr constant [20 x i8] c"CX2341X_DEC_HALT_FW\00", align 1
@.str.19.491 = private unnamed_addr constant [25 x i8] c"CX2341X_DEC_SET_STANDARD\00", align 1
@.str.20.492 = private unnamed_addr constant [24 x i8] c"CX2341X_DEC_GET_VERSION\00", align 1
@.str.21.493 = private unnamed_addr constant [29 x i8] c"CX2341X_DEC_SET_STREAM_INPUT\00", align 1
@.str.22.494 = private unnamed_addr constant [28 x i8] c"CX2341X_DEC_GET_TIMING_INFO\00", align 1
@.str.23.495 = private unnamed_addr constant [27 x i8] c"CX2341X_DEC_SET_AUDIO_MODE\00", align 1
@.str.24.496 = private unnamed_addr constant [35 x i8] c"CX2341X_DEC_SET_EVENT_NOTIFICATION\00", align 1
@.str.25.497 = private unnamed_addr constant [32 x i8] c"CX2341X_DEC_SET_DISPLAY_BUFFERS\00", align 1
@.str.26.498 = private unnamed_addr constant [24 x i8] c"CX2341X_DEC_EXTRACT_VBI\00", align 1
@.str.27.499 = private unnamed_addr constant [31 x i8] c"CX2341X_DEC_SET_DECODER_SOURCE\00", align 1
@.str.28.500 = private unnamed_addr constant [29 x i8] c"CX2341X_DEC_SET_PREBUFFERING\00", align 1
@.str.29.501 = private unnamed_addr constant [28 x i8] c"CX2341X_OSD_GET_FRAMEBUFFER\00", align 1
@.str.30.502 = private unnamed_addr constant [29 x i8] c"CX2341X_OSD_GET_PIXEL_FORMAT\00", align 1
@.str.31.503 = private unnamed_addr constant [29 x i8] c"CX2341X_OSD_SET_PIXEL_FORMAT\00", align 1
@.str.32.504 = private unnamed_addr constant [22 x i8] c"CX2341X_OSD_GET_STATE\00", align 1
@.str.33.505 = private unnamed_addr constant [22 x i8] c"CX2341X_OSD_SET_STATE\00", align 1
@.str.34.506 = private unnamed_addr constant [27 x i8] c"CX2341X_OSD_GET_OSD_COORDS\00", align 1
@.str.35.507 = private unnamed_addr constant [27 x i8] c"CX2341X_OSD_SET_OSD_COORDS\00", align 1
@.str.36.508 = private unnamed_addr constant [30 x i8] c"CX2341X_OSD_GET_SCREEN_COORDS\00", align 1
@.str.37.509 = private unnamed_addr constant [30 x i8] c"CX2341X_OSD_SET_SCREEN_COORDS\00", align 1
@.str.38.510 = private unnamed_addr constant [29 x i8] c"CX2341X_OSD_GET_GLOBAL_ALPHA\00", align 1
@.str.39.511 = private unnamed_addr constant [29 x i8] c"CX2341X_OSD_SET_GLOBAL_ALPHA\00", align 1
@.str.40.512 = private unnamed_addr constant [29 x i8] c"CX2341X_OSD_SET_BLEND_COORDS\00", align 1
@.str.41.513 = private unnamed_addr constant [30 x i8] c"CX2341X_OSD_GET_FLICKER_STATE\00", align 1
@.str.42.514 = private unnamed_addr constant [30 x i8] c"CX2341X_OSD_SET_FLICKER_STATE\00", align 1
@.str.43.515 = private unnamed_addr constant [21 x i8] c"CX2341X_OSD_BLT_COPY\00", align 1
@.str.44.516 = private unnamed_addr constant [21 x i8] c"CX2341X_OSD_BLT_FILL\00", align 1
@.str.45.517 = private unnamed_addr constant [21 x i8] c"CX2341X_OSD_BLT_TEXT\00", align 1
@.str.46.518 = private unnamed_addr constant [35 x i8] c"CX2341X_OSD_SET_FRAMEBUFFER_WINDOW\00", align 1
@.str.47.519 = private unnamed_addr constant [27 x i8] c"CX2341X_OSD_SET_CHROMA_KEY\00", align 1
@.str.48.520 = private unnamed_addr constant [36 x i8] c"CX2341X_OSD_GET_ALPHA_CONTENT_INDEX\00", align 1
@.str.49.521 = private unnamed_addr constant [36 x i8] c"CX2341X_OSD_SET_ALPHA_CONTENT_INDEX\00", align 1
@.str.50.522 = private unnamed_addr constant [20 x i8] c"CX2341X_ENC_PING_FW\00", align 1
@.str.51.523 = private unnamed_addr constant [26 x i8] c"CX2341X_ENC_START_CAPTURE\00", align 1
@.str.52.524 = private unnamed_addr constant [25 x i8] c"CX2341X_ENC_STOP_CAPTURE\00", align 1
@.str.53.525 = private unnamed_addr constant [25 x i8] c"CX2341X_ENC_SET_AUDIO_ID\00", align 1
@.str.54.526 = private unnamed_addr constant [25 x i8] c"CX2341X_ENC_SET_VIDEO_ID\00", align 1
@.str.55.527 = private unnamed_addr constant [23 x i8] c"CX2341X_ENC_SET_PCR_ID\00", align 1
@.str.56.528 = private unnamed_addr constant [27 x i8] c"CX2341X_ENC_SET_FRAME_RATE\00", align 1
@.str.57.529 = private unnamed_addr constant [27 x i8] c"CX2341X_ENC_SET_FRAME_SIZE\00", align 1
@.str.58.530 = private unnamed_addr constant [25 x i8] c"CX2341X_ENC_SET_BIT_RATE\00", align 1
@.str.59.531 = private unnamed_addr constant [31 x i8] c"CX2341X_ENC_SET_GOP_PROPERTIES\00", align 1
@.str.60.532 = private unnamed_addr constant [29 x i8] c"CX2341X_ENC_SET_ASPECT_RATIO\00", align 1
@.str.61.533 = private unnamed_addr constant [32 x i8] c"CX2341X_ENC_SET_DNR_FILTER_MODE\00", align 1
@.str.62.534 = private unnamed_addr constant [33 x i8] c"CX2341X_ENC_SET_DNR_FILTER_PROPS\00", align 1
@.str.63.535 = private unnamed_addr constant [30 x i8] c"CX2341X_ENC_SET_CORING_LEVELS\00", align 1
@.str.64.536 = private unnamed_addr constant [36 x i8] c"CX2341X_ENC_SET_SPATIAL_FILTER_TYPE\00", align 1
@.str.65.537 = private unnamed_addr constant [5 x i8] c"0xb1\00", align 1
@.str.66.538 = private unnamed_addr constant [25 x i8] c"CX2341X_ENC_SET_VBI_LINE\00", align 1
@.str.67.539 = private unnamed_addr constant [28 x i8] c"CX2341X_ENC_SET_STREAM_TYPE\00", align 1
@.str.68.540 = private unnamed_addr constant [28 x i8] c"CX2341X_ENC_SET_OUTPUT_PORT\00", align 1
@.str.69.541 = private unnamed_addr constant [33 x i8] c"CX2341X_ENC_SET_AUDIO_PROPERTIES\00", align 1
@.str.70.542 = private unnamed_addr constant [20 x i8] c"CX2341X_ENC_HALT_FW\00", align 1
@.str.71.543 = private unnamed_addr constant [24 x i8] c"CX2341X_ENC_GET_VERSION\00", align 1
@.str.72.544 = private unnamed_addr constant [28 x i8] c"CX2341X_ENC_SET_GOP_CLOSURE\00", align 1
@.str.73.545 = private unnamed_addr constant [24 x i8] c"CX2341X_ENC_GET_SEQ_END\00", align 1
@.str.74.546 = private unnamed_addr constant [31 x i8] c"CX2341X_ENC_SET_PGM_INDEX_INFO\00", align 1
@.str.75.547 = private unnamed_addr constant [27 x i8] c"CX2341X_ENC_SET_VBI_CONFIG\00", align 1
@.str.76.548 = private unnamed_addr constant [31 x i8] c"CX2341X_ENC_SET_DMA_BLOCK_SIZE\00", align 1
@.str.77.549 = private unnamed_addr constant [36 x i8] c"CX2341X_ENC_GET_PREV_DMA_INFO_MB_10\00", align 1
@.str.78.550 = private unnamed_addr constant [35 x i8] c"CX2341X_ENC_GET_PREV_DMA_INFO_MB_9\00", align 1
@.str.79.551 = private unnamed_addr constant [30 x i8] c"CX2341X_ENC_SCHED_DMA_TO_HOST\00", align 1
@.str.80.552 = private unnamed_addr constant [29 x i8] c"CX2341X_ENC_INITIALIZE_INPUT\00", align 1
@.str.81.553 = private unnamed_addr constant [32 x i8] c"CX2341X_ENC_SET_FRAME_DROP_RATE\00", align 1
@.str.82.554 = private unnamed_addr constant [26 x i8] c"CX2341X_ENC_PAUSE_ENCODER\00", align 1
@.str.83.555 = private unnamed_addr constant [26 x i8] c"CX2341X_ENC_REFRESH_INPUT\00", align 1
@.str.84.556 = private unnamed_addr constant [26 x i8] c"CX2341X_ENC_SET_COPYRIGHT\00", align 1
@.str.85.557 = private unnamed_addr constant [35 x i8] c"CX2341X_ENC_SET_EVENT_NOTIFICATION\00", align 1
@.str.86.558 = private unnamed_addr constant [32 x i8] c"CX2341X_ENC_SET_NUM_VSYNC_LINES\00", align 1
@.str.87.559 = private unnamed_addr constant [28 x i8] c"CX2341X_ENC_SET_PLACEHOLDER\00", align 1
@.str.88.560 = private unnamed_addr constant [23 x i8] c"CX2341X_ENC_MUTE_VIDEO\00", align 1
@.str.89.561 = private unnamed_addr constant [23 x i8] c"CX2341X_ENC_MUTE_AUDIO\00", align 1
@.str.90.562 = private unnamed_addr constant [31 x i8] c"CX2341X_ENC_SET_VERT_CROP_LINE\00", align 1
@.str.91.563 = private unnamed_addr constant [17 x i8] c"CX2341X_ENC_MISC\00", align 1
@.str.1.598 = private unnamed_addr constant [5 x i8] c"DMA \00", align 1
@.str.2.599 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.600 = private unnamed_addr constant [65 x i8] c"\016%s:  info: Allocate %s%s stream: %d x %d buffers (%dkB total)\0A\00", align 1
@.str.3.602 = private unnamed_addr constant [51 x i8] c"\013%s: Could not allocate sg_pending for %s stream\0A\00", align 1
@.str.4.603 = private unnamed_addr constant [54 x i8] c"\013%s: Could not allocate sg_processing for %s stream\0A\00", align 1
@.str.5.604 = private unnamed_addr constant [47 x i8] c"\013%s: Could not allocate sg_dma for %s stream\0A\00", align 1
@.str.6.608 = private unnamed_addr constant [47 x i8] c"\013%s: Couldn't allocate buffers for %s stream\0A\00", align 1
@vmemmap_base = external global i64, align 8
@__ksymtab_ivtv_start_v4l2_encode_stream = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv_stream.1071*)* @ivtv_start_v4l2_encode_stream to i64), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @__kstrtab_ivtv_start_v4l2_encode_stream, i32 0, i32 0) }, section "___ksymtab+ivtv_start_v4l2_encode_stream", align 8
@__ksymtab_ivtv_stop_v4l2_encode_stream = internal constant %struct.kernel_symbol { i64 ptrtoint (i32 (%struct.ivtv_stream.1071*, i32)* @ivtv_stop_v4l2_encode_stream to i64), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @__kstrtab_ivtv_stop_v4l2_encode_stream, i32 0, i32 0) }, section "___ksymtab+ivtv_stop_v4l2_encode_stream", align 8
@__kstrtab_ivtv_stop_v4l2_encode_stream = internal constant [29 x i8] c"ivtv_stop_v4l2_encode_stream\00", section "__ksymtab_strings", align 1
@.str.5.621 = private unnamed_addr constant [27 x i8] c"\016%s:  info: Stop Capture\0A\00", align 1
@.str.6.625 = private unnamed_addr constant [63 x i8] c"\016%s:  warn: %s: EOS interrupt not received! stopping anyway.\0A\00", align 1
@.str.7.626 = private unnamed_addr constant [33 x i8] c"\016%s:  warn: %s: waited %lu ms.\0A\00", align 1
@.str.8.627 = private unnamed_addr constant [44 x i8] c"\016%s:  info: %s: EOS took %lu ms to occur.\0A\00", align 1
@__kstrtab_ivtv_start_v4l2_encode_stream = internal constant [30 x i8] c"ivtv_start_v4l2_encode_stream\00", section "__ksymtab_strings", align 1
@.str.634 = private unnamed_addr constant [38 x i8] c"\016%s:  info: Start encoder stream %s\0A\00", align 1
@.str.1.637 = private unnamed_addr constant [51 x i8] c"\016%s:  info: PGM Index at 0x%08x with %d elements\0A\00", align 1
@.str.2.639 = private unnamed_addr constant [38 x i8] c"\016%s:  warn: Error starting capture!\0A\00", align 1
@.str.28.641 = private unnamed_addr constant [71 x i8] c"\016%s:  info: Setup VBI API header 0x%08x pkts %d buffs %d ln %d sz %d\0A\00", align 1
@.str.29.642 = private unnamed_addr constant [54 x i8] c"\016%s:  info: Setup VBI start 0x%08x frames %d fpi %d\0A\00", align 1
@.str.10.643 = private unnamed_addr constant [50 x i8] c"\016%s:  info: ivtv ioctl: Select passthrough mode\0A\00", align 1
@.str.30.644 = private unnamed_addr constant [52 x i8] c"\016%s:  info: Setting some initial decoder settings\0A\00", align 1
@.str.31.645 = private unnamed_addr constant [61 x i8] c"\016%s:  info: Decoder VBI RE-Insert start 0x%08x size 0x%08x\0A\00", align 1
@.str.32.646 = private unnamed_addr constant [48 x i8] c"\016%s:  info: Setup DEC YUV Stream data[0] = %d\0A\00", align 1
@.str.33.647 = private unnamed_addr constant [49 x i8] c"\016%s:  warn: Couldn't initialize decoder source\0A\00", align 1
@.str.34.648 = private unnamed_addr constant [30 x i8] c"ivtv_setup_v4l2_decode_stream\00", align 1
@ivtv_stream_info = internal global [9 x %struct.anon.106] [%struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.13.658, i32 0, i32 0), i32 0, i32 0, i32 2, i32 0, i32 16973825, %struct.v4l2_file_operations* @ivtv_v4l2_enc_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.14.659, i32 0, i32 0), i32 0, i32 32, i32 2, i32 0, i32 16973825, %struct.v4l2_file_operations* @ivtv_v4l2_enc_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.660, i32 0, i32 0), i32 1, i32 0, i32 2, i32 0, i32 16973904, %struct.v4l2_file_operations* @ivtv_v4l2_enc_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.16.661, i32 0, i32 0), i32 0, i32 24, i32 2, i32 0, i32 16973824, %struct.v4l2_file_operations* @ivtv_v4l2_enc_fops }, %struct.anon.106 { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.17.662, i32 0, i32 0), i32 2, i32 0, i32 3, i32 1, i32 327680, %struct.v4l2_file_operations* @ivtv_v4l2_radio_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18.663, i32 0, i32 0), i32 0, i32 16, i32 1, i32 0, i32 16908802, %struct.v4l2_file_operations* @ivtv_v4l2_dec_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.19.664, i32 0, i32 0), i32 1, i32 8, i32 3, i32 1, i32 16777280, %struct.v4l2_file_operations* @ivtv_v4l2_enc_fops }, %struct.anon.106 { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.20.665, i32 0, i32 0), i32 1, i32 16, i32 3, i32 1, i32 16908416, %struct.v4l2_file_operations* @ivtv_v4l2_dec_fops }, %struct.anon.106 { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.21.666, i32 0, i32 0), i32 0, i32 48, i32 1, i32 0, i32 16908802, %struct.v4l2_file_operations* @ivtv_v4l2_dec_fops }], align 16
@.str.11.653 = private unnamed_addr constant [26 x i8] c"\016%s: Disabled %s device\0A\00", align 1
@.str.12.654 = private unnamed_addr constant [6 x i8] c"%s %s\00", align 1
@.str.22.656 = private unnamed_addr constant [20 x i8] c"&(&s->qlock)->rlock\00", align 1
@ivtv_stream_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.24.657 = private unnamed_addr constant [10 x i8] c"&s->waitq\00", align 1
@ivtv_stream_init.__key.23 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.13.658 = private unnamed_addr constant [12 x i8] c"encoder MPG\00", align 1
@ivtv_v4l2_enc_fops = internal constant %struct.v4l2_file_operations { %struct.module* @__this_module, i64 (%struct.file*, i8*, i64, i64*)* @ivtv_v4l2_read, i64 (%struct.file*, i8*, i64, i64*)* @ivtv_v4l2_write, i32 (%struct.file*, %struct.poll_table_struct*)* @ivtv_v4l2_enc_poll, i64 (%struct.file*, i32, i64)* @video_ioctl2, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i32 (%struct.file*)* @ivtv_v4l2_open, i32 (%struct.file*)* @ivtv_v4l2_close }, align 8
@.str.14.659 = private unnamed_addr constant [12 x i8] c"encoder YUV\00", align 1
@.str.15.660 = private unnamed_addr constant [12 x i8] c"encoder VBI\00", align 1
@.str.16.661 = private unnamed_addr constant [12 x i8] c"encoder PCM\00", align 1
@.str.17.662 = private unnamed_addr constant [14 x i8] c"encoder radio\00", align 1
@ivtv_v4l2_radio_fops = internal constant %struct.v4l2_file_operations { %struct.module* @__this_module, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.file*, i8*, i64, i64*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @ivtv_v4l2_enc_poll, i64 (%struct.file*, i32, i64)* @video_ioctl2, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i32 (%struct.file*)* @ivtv_v4l2_open, i32 (%struct.file*)* @ivtv_v4l2_close }, align 8
@.str.18.663 = private unnamed_addr constant [12 x i8] c"decoder MPG\00", align 1
@ivtv_v4l2_dec_fops = internal constant %struct.v4l2_file_operations { %struct.module* @__this_module, i64 (%struct.file*, i8*, i64, i64*)* @ivtv_v4l2_read, i64 (%struct.file*, i8*, i64, i64*)* @ivtv_v4l2_write, i32 (%struct.file*, %struct.poll_table_struct*)* @ivtv_v4l2_dec_poll, i64 (%struct.file*, i32, i64)* @video_ioctl2, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i32 (%struct.file*)* @ivtv_v4l2_open, i32 (%struct.file*)* @ivtv_v4l2_close }, align 8
@.str.19.664 = private unnamed_addr constant [12 x i8] c"decoder VBI\00", align 1
@.str.20.665 = private unnamed_addr constant [13 x i8] c"decoder VOUT\00", align 1
@.str.21.666 = private unnamed_addr constant [12 x i8] c"decoder YUV\00", align 1
@.str.25.669 = private unnamed_addr constant [68 x i8] c"\013%s: Couldn't register v4l2 device for %s (device node number %d)\0A\00", align 1
@.str.26.671 = private unnamed_addr constant [43 x i8] c"\016%s: Registered device %s for %s (%d kB)\0A\00", align 1
@.str.27.672 = private unnamed_addr constant [35 x i8] c"\016%s: Registered device %s for %s\0A\00", align 1
@.str.3.678 = private unnamed_addr constant [56 x i8] c"\016%s:  info: Starting decode stream %s (gop_offset %d)\0A\00", align 1
@.str.4.680 = private unnamed_addr constant [37 x i8] c"\016%s:  irq: IRQ Mask is now: 0x%08x\0A\00", align 1
@.str.9.685 = private unnamed_addr constant [45 x i8] c"\016%s:  info: Stop Decode at %llu, flags: %x\0A\00", align 1
@ivtv_stop_v4l2_decode_stream.ev = internal constant %struct.v4l2_event { i32 2, %union.anon.108 zeroinitializer, i32 0, i32 0, %struct.timespec zeroinitializer, i32 0, [8 x i32] zeroinitializer }, align 8
@pv_irq_ops = external global %struct.pv_irq_ops, align 8
@.str.6.687 = private unnamed_addr constant [34 x i8] c"./arch/x86/include/asm/paravirt.h\00", align 1
@__preempt_count = external global i32, align 4
@.str.7.689 = private unnamed_addr constant [26 x i8] c"./include/linux/uaccess.h\00", align 1
@page_offset_base = external global i64, align 8
@.str.703 = private unnamed_addr constant [42 x i8] c"\016%s:  dma: ivtv_udma_setup, dst: 0x%08x\0A\00", align 1
@.str.1.704 = private unnamed_addr constant [70 x i8] c"\016%s:  warn: ivtv_udma_setup: SG_length %d page_count %d still full?\0A\00", align 1
@.str.2.705 = private unnamed_addr constant [75 x i8] c"\016%s:  warn: ivtv_udma_setup: Error %d page_count from %d bytes %d offset\0A\00", align 1
@.str.3.706 = private unnamed_addr constant [66 x i8] c"\016%s:  warn: failed to map user pages, returned %d instead of %d\0A\00", align 1
@__tracepoint_page_ref_mod_and_test = external global %struct.tracepoint, align 8
@.str.4.715 = private unnamed_addr constant [34 x i8] c"\016%s:  info: ivtv_unmap_user_dma\0A\00", align 1
@.str.5.722 = private unnamed_addr constant [24 x i8] c"\016%s:  dma: start UDMA\0A\00", align 1
@.str.736 = private unnamed_addr constant [33 x i8] c"./arch/x86/include/asm/uaccess.h\00", align 1
@.str.1.739 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.3.744 = private unnamed_addr constant [5 x i8] c"itv0\00", align 1
@.str.2.745 = private unnamed_addr constant [5 x i8] c"ITV0\00", align 1
@copy_vbi_data.mpeg_hdr_data = internal constant [32 x i8] c"\00\00\01\BAD\00\0Cf$\01\01\D1\D3\FA\FF\FF\00\00\01\BD\00\1A\84\80\07!\00]c\A7\FF\FF", align 16
@ivtv_vbi_work_handler.cc = private unnamed_addr constant %struct.vbi_cc { [2 x i8] c"\80\80", [2 x i8] c"\80\80" }, align 1
@yuv_offset = constant [8 x i32] [i32 1738240, i32 2360320, i32 2982400, i32 3604480, i32 167936, i32 790016, i32 7013376, i32 7635456], align 16
@.str.761 = private unnamed_addr constant [47 x i8] c"\014%s: YUV filter table not found in firmware.\0A\00", align 1
@.str.1.764 = private unnamed_addr constant [47 x i8] c"\016%s:  yuv: Update yuv registers for frame %d\0A\00", align 1
@.str.12.766 = private unnamed_addr constant [70 x i8] c"\016%s:  warn: Adjust to height %d src_h %d dst_h %d src_y %d dst_y %d\0A\00", align 1
@.str.14.767 = private unnamed_addr constant [11 x i8] c"Interlaced\00", align 1
@.str.15.768 = private unnamed_addr constant [12 x i8] c"Progressive\00", align 1
@.str.13.769 = private unnamed_addr constant [32 x i8] c"\016%s:  yuv: Scaling mode Y: %s\0A\00", align 1
@.str.16.770 = private unnamed_addr constant [33 x i8] c"\016%s:  yuv: Scaling mode UV: %s\0A\00", align 1
@.str.17.771 = private unnamed_addr constant [31 x i8] c"\016%s:  warn: Source video: %s\0A\00", align 1
@.str.18.772 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2934 %08x->%08x 0x293c %08x->%08x\0A\00", align 1
@.str.19.773 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2944 %08x->%08x 0x294c %08x->%08x\0A\00", align 1
@.str.20.774 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2930 %08x->%08x 0x2938 %08x->%08x\0A\00", align 1
@.str.21.775 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2928 %08x->%08x 0x292c %08x->%08x\0A\00", align 1
@.str.22.776 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2920 %08x->%08x 0x2924 %08x->%08x\0A\00", align 1
@.str.23.777 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2918 %08x->%08x 0x291C %08x->%08x\0A\00", align 1
@.str.24.778 = private unnamed_addr constant [42 x i8] c"\016%s:  yuv: Update reg 0x296c %08x->%08x\0A\00", align 1
@.str.25.779 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2940 %08x->%08x 0x2948 %08x->%08x\0A\00", align 1
@.str.26.780 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2950 %08x->%08x 0x2954 %08x->%08x\0A\00", align 1
@.str.27.781 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2958 %08x->%08x 0x295C %08x->%08x\0A\00", align 1
@.str.28.782 = private unnamed_addr constant [43 x i8] c"\016%s:  yuv: Update reg 0x2960 %08x->%08x \0A\00", align 1
@.str.29.783 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2964 %08x->%08x 0x2968 %08x->%08x\0A\00", align 1
@.str.30.784 = private unnamed_addr constant [42 x i8] c"\016%s:  yuv: Update reg 0x289c %08x->%08x\0A\00", align 1
@.str.44.785 = private unnamed_addr constant [28 x i8] c"\016%s:  yuv: h_filter -> %d\0A\00", align 1
@.str.45.786 = private unnamed_addr constant [30 x i8] c"\016%s:  yuv: v_filter_1 -> %d\0A\00", align 1
@.str.46.787 = private unnamed_addr constant [30 x i8] c"\016%s:  yuv: v_filter_2 -> %d\0A\00", align 1
@.str.3.788 = private unnamed_addr constant [69 x i8] c"\016%s:  warn: Adjust to width %d src_w %d dst_w %d src_x %d dst_x %d\0A\00", align 1
@.str.4.789 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2834 %08x->%08x 0x2838 %08x->%08x\0A\00", align 1
@.str.5.790 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x283c %08x->%08x 0x2844 %08x->%08x\0A\00", align 1
@.str.6.791 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x2840 %08x->%08x 0x2848 %08x->%08x\0A\00", align 1
@.str.7.792 = private unnamed_addr constant [43 x i8] c"\016%s:  yuv: Update reg 0x2854 %08x->%08x \0A\00", align 1
@.str.8.793 = private unnamed_addr constant [60 x i8] c"\016%s:  yuv: Update reg 0x285c %08x->%08x 0x2864 %08x->%08x\0A\00", align 1
@.str.9.794 = private unnamed_addr constant [42 x i8] c"\016%s:  yuv: Update reg 0x2874 %08x->%08x\0A\00", align 1
@.str.10.795 = private unnamed_addr constant [42 x i8] c"\016%s:  yuv: Update reg 0x2870 %08x->%08x\0A\00", align 1
@.str.11.796 = private unnamed_addr constant [42 x i8] c"\016%s:  yuv: Update reg 0x2890 %08x->%08x\0A\00", align 1
@.str.35.803 = private unnamed_addr constant [48 x i8] c"\016%s:  yuv: Requesting reg update for frame %d\0A\00", align 1
@.str.31.805 = private unnamed_addr constant [27 x i8] c"\016%s:  yuv: ivtv_yuv_init\0A\00", align 1
@.str.32.806 = private unnamed_addr constant [83 x i8] c"\016%s:  warn: Clipping yuv output - fb size (%d) exceeds video standard limit (%d)\0A\00", align 1
@.str.33.809 = private unnamed_addr constant [53 x i8] c"\016%s:  warn: Failed to allocate yuv blanking buffer\0A\00", align 1
@.str.34.815 = private unnamed_addr constant [30 x i8] c"./include/linux/dma-mapping.h\00", align 1
@.str.36.825 = private unnamed_addr constant [36 x i8] c"\016%s:  info: User stopped YUV UDMA\0A\00", align 1
@.str.37.830 = private unnamed_addr constant [68 x i8] c"\016%s:  warn: prep_user_dma: SG_length %d page_count %d still full?\0A\00", align 1
@.str.38.831 = private unnamed_addr constant [68 x i8] c"\016%s:  warn: failed to map uv user pages, returned %d expecting %d\0A\00", align 1
@.str.39.833 = private unnamed_addr constant [67 x i8] c"\016%s:  warn: failed to map y user pages, returned %d expecting %d\0A\00", align 1
@.str.40.834 = private unnamed_addr constant [78 x i8] c"\016%s:  warn: could not allocate bounce buffers for highmem userspace buffers\0A\00", align 1
@.str.43.843 = private unnamed_addr constant [30 x i8] c"./include/linux/scatterlist.h\00", align 1
@.str.41.849 = private unnamed_addr constant [42 x i8] c"VM_BUG_ON_PAGE(page_ref_count(page) == 0)\00", align 1
@.str.42.850 = private unnamed_addr constant [21 x i8] c"./include/linux/mm.h\00", align 1
@.str.2.859 = private unnamed_addr constant [28 x i8] c"\016%s:  yuv: ivtv_yuv_close\0A\00", align 1

@__mod_pci__ivtv_pci_tbl_device_table = alias [3 x %struct.pci_device_id], [3 x %struct.pci_device_id]* @ivtv_pci_tbl
@init_module = alias i32 (), i32 ()* @module_start
@cleanup_module = alias void (), void ()* @module_cleanup

; Function Attrs: nounwind uwtable
define void @ivtv_audio_set_io(%struct.ivtv* %itv) #0 {
entry:
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call = call zeroext i1 @constant_test_bit(i64 5, i64* %i_flags)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %radio_input = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 11
  br label %if.end

if.else:                                          ; preds = %entry
  %audio_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 10
  %audio_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 32
  %1 = load i32, i32* %audio_input, align 8, !tbaa !66
  %idxprom = zext i32 %1 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.ivtv_card_audio_input], [3 x %struct.ivtv_card_audio_input]* %audio_inputs, i64 0, i64 %idxprom
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %in.0 = phi %struct.ivtv_card_audio_input* [ %radio_input, %if.then ], [ %arrayidx, %if.else ]
  %muxer_input = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %in.0, i32 0, i32 2
  %2 = load i16, i16* %muxer_input, align 4, !tbaa !67
  %conv = zext i16 %2 to i32
  %card4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card4, align 8, !tbaa !2
  %hw_muxer = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 7
  %4 = load i32, i32* %hw_muxer, align 8, !tbaa !69
  %and = and i32 %4, 16384
  %tobool = icmp ne i32 %and, 0
  %. = select i1 %tobool, i32 49344, i32 0
  %sd_muxer = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 13
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_muxer, align 8, !tbaa !78
  %tobool7 = icmp ne %struct.v4l2_subdev* %5, null
  br i1 %tobool7, label %cond.false9, label %cond.end24

cond.false9:                                      ; preds = %if.end
  %sd_muxer10 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 13
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_muxer10, align 8, !tbaa !78
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %audio = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 2
  %8 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio, align 8, !tbaa !80
  %tobool11 = icmp ne %struct.v4l2_subdev_audio_ops* %8, null
  br i1 %tobool11, label %land.lhs.true, label %cond.end24

land.lhs.true:                                    ; preds = %cond.false9
  %sd_muxer12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 13
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_muxer12, align 8, !tbaa !78
  %ops13 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops13, align 8, !tbaa !79
  %audio14 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 2
  %11 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio14, align 8, !tbaa !80
  %s_routing = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %11, i32 0, i32 2
  %12 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing, align 8, !tbaa !82
  %tobool15 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %12, null
  br i1 %tobool15, label %cond.true16, label %cond.end24

cond.true16:                                      ; preds = %land.lhs.true
  %sd_muxer17 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 13
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_muxer17, align 8, !tbaa !78
  %ops18 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %13, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops18, align 8, !tbaa !79
  %audio19 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 2
  %15 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio19, align 8, !tbaa !80
  %s_routing20 = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %15, i32 0, i32 2
  %16 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing20, align 8, !tbaa !82
  %sd_muxer21 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 13
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_muxer21, align 8, !tbaa !78
  %call22 = call i32 %16(%struct.v4l2_subdev* %17, i32 %conv, i32 %., i32 0)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.true16, %land.lhs.true, %cond.false9, %if.end
  %cond25 = phi i32 [ -19, %if.end ], [ %call22, %cond.true16 ], [ -515, %land.lhs.true ], [ -515, %cond.false9 ]
  %audio_input26 = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %in.0, i32 0, i32 1
  %18 = load i32, i32* %audio_input26, align 4, !tbaa !84
  %card27 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %19 = load %struct.ivtv_card*, %struct.ivtv_card** %card27, align 8, !tbaa !2
  %hw_audio = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %19, i32 0, i32 5
  %20 = load i32, i32* %hw_audio, align 8, !tbaa !85
  %and28 = and i32 %20, 8
  %tobool29 = icmp ne i32 %and28, 0
  %.1 = select i1 %tobool29, i32 68, i32 0
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %cond.end24
  %list59.sink = phi %struct.list_head* [ %list59, %for.inc ], [ %subdevs, %cond.end24 ]
  %next60 = getelementptr inbounds %struct.list_head, %struct.list_head* %list59.sink, i32 0, i32 0
  %21 = load %struct.list_head*, %struct.list_head** %next60, align 8, !tbaa !86
  %22 = bitcast %struct.list_head* %21 to i8*
  %add.ptr62 = getelementptr inbounds i8, i8* %22, i64 -128
  %23 = bitcast i8* %add.ptr62 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 1
  %v4l2_dev33 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs34 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev33, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs34
  br i1 %cmp, label %for.body, label %do.end64

for.body:                                         ; preds = %for.cond
  %card36 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %24 = load %struct.ivtv_card*, %struct.ivtv_card** %card36, align 8, !tbaa !2
  %hw_audio37 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %24, i32 0, i32 5
  %25 = load i32, i32* %hw_audio37, align 8, !tbaa !85
  %tobool38 = icmp ne i32 %25, 0
  br i1 %tobool38, label %lor.lhs.false, label %land.lhs.true43

lor.lhs.false:                                    ; preds = %for.body
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 10
  %26 = load i32, i32* %grp_id, align 8, !tbaa !87
  %card39 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %27 = load %struct.ivtv_card*, %struct.ivtv_card** %card39, align 8, !tbaa !2
  %hw_audio40 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %27, i32 0, i32 5
  %28 = load i32, i32* %hw_audio40, align 8, !tbaa !85
  %and41 = and i32 %26, %28
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %land.lhs.true43, label %for.inc

land.lhs.true43:                                  ; preds = %lor.lhs.false, %for.body
  %ops44 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 6
  %29 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops44, align 8, !tbaa !79
  %audio45 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %29, i32 0, i32 2
  %30 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio45, align 8, !tbaa !80
  %tobool46 = icmp ne %struct.v4l2_subdev_audio_ops* %30, null
  br i1 %tobool46, label %land.lhs.true47, label %for.inc

land.lhs.true47:                                  ; preds = %land.lhs.true43
  %ops48 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 6
  %31 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops48, align 8, !tbaa !79
  %audio49 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %31, i32 0, i32 2
  %32 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio49, align 8, !tbaa !80
  %s_routing50 = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %32, i32 0, i32 2
  %33 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing50, align 8, !tbaa !82
  %tobool51 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %33, null
  br i1 %tobool51, label %if.then52, label %for.inc

if.then52:                                        ; preds = %land.lhs.true47
  %ops53 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 6
  %34 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops53, align 8, !tbaa !79
  %audio54 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %34, i32 0, i32 2
  %35 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio54, align 8, !tbaa !80
  %s_routing55 = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %35, i32 0, i32 2
  %36 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing55, align 8, !tbaa !82
  %call56 = call i32 %36(%struct.v4l2_subdev* %23, i32 %18, i32 %.1, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then52, %land.lhs.true47, %land.lhs.true43, %lor.lhs.false
  %list59 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 1
  br label %for.cond

do.end64:                                         ; preds = %for.cond
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define void @ivtv_video_set_io(%struct.ivtv* %itv) #0 {
entry:
  %active_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 33
  %0 = load i32, i32* %active_input, align 4, !tbaa !89
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 11
  %1 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool = icmp ne %struct.v4l2_subdev* %1, null
  br i1 %tobool, label %cond.false, label %cond.end14

cond.false:                                       ; preds = %entry
  %sd_video1 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 11
  %2 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video1, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %2, i32 0, i32 6
  %3 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %3, i32 0, i32 3
  %4 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool2 = icmp ne %struct.v4l2_subdev_video_ops* %4, null
  br i1 %tobool2, label %land.lhs.true, label %cond.end14

land.lhs.true:                                    ; preds = %cond.false
  %sd_video3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video3, align 8, !tbaa !90
  %ops4 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %6 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops4, align 8, !tbaa !79
  %video5 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %6, i32 0, i32 3
  %7 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video5, align 8, !tbaa !91
  %s_routing = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %7, i32 0, i32 0
  %8 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing, align 8, !tbaa !92
  %tobool6 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %8, null
  br i1 %tobool6, label %cond.true7, label %cond.end14

cond.true7:                                       ; preds = %land.lhs.true
  %sd_video8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video8, align 8, !tbaa !90
  %ops9 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops9, align 8, !tbaa !79
  %video10 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 3
  %11 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video10, align 8, !tbaa !91
  %s_routing11 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %11, i32 0, i32 0
  %12 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing11, align 8, !tbaa !92
  %sd_video12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video12, align 8, !tbaa !90
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %14 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %14, i32 0, i32 9
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs, i64 0, i64 %idxprom
  %video_input = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx, i32 0, i32 2
  %15 = load i16, i16* %video_input, align 2, !tbaa !94
  %conv = zext i16 %15 to i32
  %call = call i32 %12(%struct.v4l2_subdev* %13, i32 %conv, i32 0, i32 0)
  br label %cond.end14

cond.end14:                                       ; preds = %cond.true7, %land.lhs.true, %cond.false, %entry
  %cond15 = phi i32 [ -19, %entry ], [ %call, %cond.true7 ], [ -515, %land.lhs.true ], [ -515, %cond.false ]
  %card16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %16 = load %struct.ivtv_card*, %struct.ivtv_card** %card16, align 8, !tbaa !2
  %video_inputs17 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %16, i32 0, i32 9
  %idxprom18 = sext i32 %0 to i64
  %arrayidx19 = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs17, i64 0, i64 %idxprom18
  %video_type = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx19, i32 0, i32 0
  %17 = load i8, i8* %video_type, align 4, !tbaa !96
  %conv20 = zext i8 %17 to i32
  %cmp = icmp eq i32 %conv20, 1
  %cmp22 = icmp ult i32 %conv20, 4
  %. = select i1 %cmp22, i32 2, i32 1
  %input.1 = select i1 %cmp, i32 0, i32 %.
  %card27 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %18 = load %struct.ivtv_card*, %struct.ivtv_card** %card27, align 8, !tbaa !2
  %hw_video = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %18, i32 0, i32 4
  %19 = load i32, i32* %hw_video, align 4, !tbaa !97
  %and = and i32 %19, 32768
  %tobool28 = icmp ne i32 %and, 0
  br i1 %tobool28, label %do.body30, label %if.end59

do.body30:                                        ; preds = %cond.end14
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body30
  %list53.sink = phi %struct.list_head* [ %list53, %for.inc ], [ %subdevs, %do.body30 ]
  %next54 = getelementptr inbounds %struct.list_head, %struct.list_head* %list53.sink, i32 0, i32 0
  %20 = load %struct.list_head*, %struct.list_head** %next54, align 8, !tbaa !86
  %21 = bitcast %struct.list_head* %20 to i8*
  %add.ptr56 = getelementptr inbounds i8, i8* %21, i64 -128
  %22 = bitcast i8* %add.ptr56 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  %v4l2_dev31 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs32 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev31, i32 0, i32 2
  %cmp33 = icmp ne %struct.list_head* %list, %subdevs32
  br i1 %cmp33, label %for.body, label %if.end59

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 10
  %23 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and35 = and i32 %23, 32768
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true37, label %for.inc

land.lhs.true37:                                  ; preds = %for.body
  %ops38 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %24 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops38, align 8, !tbaa !79
  %video39 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %24, i32 0, i32 3
  %25 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video39, align 8, !tbaa !91
  %tobool40 = icmp ne %struct.v4l2_subdev_video_ops* %25, null
  br i1 %tobool40, label %land.lhs.true41, label %for.inc

land.lhs.true41:                                  ; preds = %land.lhs.true37
  %ops42 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %26 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops42, align 8, !tbaa !79
  %video43 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %26, i32 0, i32 3
  %27 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video43, align 8, !tbaa !91
  %s_routing44 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %27, i32 0, i32 0
  %28 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing44, align 8, !tbaa !92
  %tobool45 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %28, null
  br i1 %tobool45, label %if.then46, label %for.inc

if.then46:                                        ; preds = %land.lhs.true41
  %ops47 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %29 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops47, align 8, !tbaa !79
  %video48 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %29, i32 0, i32 3
  %30 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video48, align 8, !tbaa !91
  %s_routing49 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %30, i32 0, i32 0
  %31 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing49, align 8, !tbaa !92
  %call50 = call i32 %31(%struct.v4l2_subdev* %22, i32 %input.1, i32 0, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then46, %land.lhs.true41, %land.lhs.true37, %for.body
  %list53 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  br label %for.cond

if.end59:                                         ; preds = %for.cond, %cond.end14
  %card60 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %32 = load %struct.ivtv_card*, %struct.ivtv_card** %card60, align 8, !tbaa !2
  %hw_video61 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %32, i32 0, i32 4
  %33 = load i32, i32* %hw_video61, align 4, !tbaa !97
  %and62 = and i32 %33, 512
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %if.end119

if.then64:                                        ; preds = %if.end59
  %cmp65 = icmp eq i32 %conv20, 1
  %cmp67 = icmp uge i32 %conv20, 4
  %or.cond = or i1 %cmp65, %cmp67
  %input.2 = select i1 %or.cond, i32 8, i32 1
  %card72 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %34 = load %struct.ivtv_card*, %struct.ivtv_card** %card72, align 8, !tbaa !2
  %gr_config = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %34, i32 0, i32 14
  %35 = load i8, i8* %gr_config, align 8, !tbaa !98
  %conv73 = zext i8 %35 to i32
  %or = or i32 %input.2, %conv73
  %v4l2_dev78 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs79 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev78, i32 0, i32 2
  br label %for.cond83

for.cond83:                                       ; preds = %for.inc108, %if.then64
  %list110.sink = phi %struct.list_head* [ %list110, %for.inc108 ], [ %subdevs79, %if.then64 ]
  %next111 = getelementptr inbounds %struct.list_head, %struct.list_head* %list110.sink, i32 0, i32 0
  %36 = load %struct.list_head*, %struct.list_head** %next111, align 8, !tbaa !86
  %37 = bitcast %struct.list_head* %36 to i8*
  %add.ptr113 = getelementptr inbounds i8, i8* %37, i64 -128
  %38 = bitcast i8* %add.ptr113 to %struct.v4l2_subdev*
  %list84 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 1
  %v4l2_dev85 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs86 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev85, i32 0, i32 2
  %cmp87 = icmp ne %struct.list_head* %list84, %subdevs86
  br i1 %cmp87, label %for.body89, label %if.end119

for.body89:                                       ; preds = %for.cond83
  %grp_id90 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 10
  %39 = load i32, i32* %grp_id90, align 8, !tbaa !87
  %and91 = and i32 %39, 512
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %land.lhs.true93, label %for.inc108

land.lhs.true93:                                  ; preds = %for.body89
  %ops94 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 6
  %40 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops94, align 8, !tbaa !79
  %video95 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %40, i32 0, i32 3
  %41 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video95, align 8, !tbaa !91
  %tobool96 = icmp ne %struct.v4l2_subdev_video_ops* %41, null
  br i1 %tobool96, label %land.lhs.true97, label %for.inc108

land.lhs.true97:                                  ; preds = %land.lhs.true93
  %ops98 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 6
  %42 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops98, align 8, !tbaa !79
  %video99 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %42, i32 0, i32 3
  %43 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video99, align 8, !tbaa !91
  %s_routing100 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %43, i32 0, i32 0
  %44 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing100, align 8, !tbaa !92
  %tobool101 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %44, null
  br i1 %tobool101, label %if.then102, label %for.inc108

if.then102:                                       ; preds = %land.lhs.true97
  %ops103 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 6
  %45 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops103, align 8, !tbaa !79
  %video104 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %45, i32 0, i32 3
  %46 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video104, align 8, !tbaa !91
  %s_routing105 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %46, i32 0, i32 0
  %47 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing105, align 8, !tbaa !92
  %call106 = call i32 %47(%struct.v4l2_subdev* %38, i32 %or, i32 0, i32 0)
  br label %for.inc108

for.inc108:                                       ; preds = %if.then102, %land.lhs.true97, %land.lhs.true93, %for.body89
  %list110 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %38, i32 0, i32 1
  br label %for.cond83

if.end119:                                        ; preds = %for.cond83, %if.end59
  %card120 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %48 = load %struct.ivtv_card*, %struct.ivtv_card** %card120, align 8, !tbaa !2
  %hw_video121 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %48, i32 0, i32 4
  %49 = load i32, i32* %hw_video121, align 4, !tbaa !97
  %and122 = and i32 %49, 1024
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.then124, label %if.end195

if.then124:                                       ; preds = %if.end119
  %cmp125 = icmp ugt i32 %conv20, 1
  %cmp128 = icmp ult i32 %conv20, 4
  %or.cond3 = and i1 %cmp125, %cmp128
  br i1 %or.cond3, label %if.then130, label %if.else132

if.then130:                                       ; preds = %if.then124
  %or131 = or i32 0, 3
  br label %do.body152

if.else132:                                       ; preds = %if.then124
  %card133 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %50 = load %struct.ivtv_card*, %struct.ivtv_card** %card133, align 8, !tbaa !2
  %hw_video134 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %50, i32 0, i32 4
  %51 = load i32, i32* %hw_video134, align 4, !tbaa !97
  %and135 = and i32 %51, 512
  %tobool136 = icmp ne i32 %and135, 0
  br i1 %tobool136, label %if.then137, label %do.body152

if.then137:                                       ; preds = %if.else132
  %cmp138 = icmp eq i32 %conv20, 1
  br i1 %cmp138, label %if.then145, label %lor.lhs.false140

lor.lhs.false140:                                 ; preds = %if.then137
  %card141 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %52 = load %struct.ivtv_card*, %struct.ivtv_card** %card141, align 8, !tbaa !2
  %type142 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %52, i32 0, i32 0
  %53 = load i32, i32* %type142, align 8, !tbaa !99
  %cmp143 = icmp eq i32 %53, 11
  br i1 %cmp143, label %if.then145, label %do.body152

if.then145:                                       ; preds = %lor.lhs.false140, %if.then137
  %or146 = or i32 0, 4
  br label %do.body152

do.body152:                                       ; preds = %if.then145, %lor.lhs.false140, %if.else132, %if.then130
  %input.5 = phi i32 [ %or131, %if.then130 ], [ 0, %if.else132 ], [ %or146, %if.then145 ], [ 0, %lor.lhs.false140 ]
  %v4l2_dev154 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs155 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev154, i32 0, i32 2
  br label %for.cond159

for.cond159:                                      ; preds = %for.inc184, %do.body152
  %list186.sink = phi %struct.list_head* [ %list186, %for.inc184 ], [ %subdevs155, %do.body152 ]
  %next187 = getelementptr inbounds %struct.list_head, %struct.list_head* %list186.sink, i32 0, i32 0
  %54 = load %struct.list_head*, %struct.list_head** %next187, align 8, !tbaa !86
  %55 = bitcast %struct.list_head* %54 to i8*
  %add.ptr189 = getelementptr inbounds i8, i8* %55, i64 -128
  %56 = bitcast i8* %add.ptr189 to %struct.v4l2_subdev*
  %list160 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 1
  %v4l2_dev161 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs162 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev161, i32 0, i32 2
  %cmp163 = icmp ne %struct.list_head* %list160, %subdevs162
  br i1 %cmp163, label %for.body165, label %if.end195

for.body165:                                      ; preds = %for.cond159
  %grp_id166 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 10
  %57 = load i32, i32* %grp_id166, align 8, !tbaa !87
  %and167 = and i32 %57, 1024
  %tobool168 = icmp ne i32 %and167, 0
  br i1 %tobool168, label %land.lhs.true169, label %for.inc184

land.lhs.true169:                                 ; preds = %for.body165
  %ops170 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 6
  %58 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops170, align 8, !tbaa !79
  %video171 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %58, i32 0, i32 3
  %59 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video171, align 8, !tbaa !91
  %tobool172 = icmp ne %struct.v4l2_subdev_video_ops* %59, null
  br i1 %tobool172, label %land.lhs.true173, label %for.inc184

land.lhs.true173:                                 ; preds = %land.lhs.true169
  %ops174 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 6
  %60 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops174, align 8, !tbaa !79
  %video175 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %60, i32 0, i32 3
  %61 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video175, align 8, !tbaa !91
  %s_routing176 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %61, i32 0, i32 0
  %62 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing176, align 8, !tbaa !92
  %tobool177 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %62, null
  br i1 %tobool177, label %if.then178, label %for.inc184

if.then178:                                       ; preds = %land.lhs.true173
  %ops179 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 6
  %63 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops179, align 8, !tbaa !79
  %video180 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %63, i32 0, i32 3
  %64 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video180, align 8, !tbaa !91
  %s_routing181 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %64, i32 0, i32 0
  %65 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing181, align 8, !tbaa !92
  %call182 = call i32 %65(%struct.v4l2_subdev* %56, i32 %input.5, i32 0, i32 0)
  br label %for.inc184

for.inc184:                                       ; preds = %if.then178, %land.lhs.true173, %land.lhs.true169, %for.body165
  %list186 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 1
  br label %for.cond159

if.end195:                                        ; preds = %for.cond159, %if.end119
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.ivtv_card* @ivtv_get_card(i16 zeroext %index) #0 {
entry:
  %conv = zext i16 %index to i64
  %cmp = icmp uge i64 %conv, 31
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %idxprom = zext i16 %index to i64
  %arrayidx = getelementptr inbounds [31 x %struct.ivtv_card*], [31 x %struct.ivtv_card*]* @ivtv_card_list, i64 0, i64 %idxprom
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %arrayidx, align 8, !tbaa !86
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi %struct.ivtv_card* [ %0, %if.end ], [ null, %entry ]
  ret %struct.ivtv_card* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_get_input(%struct.ivtv.9* %itv, i16 zeroext %index, %struct.v4l2_input* %input) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 9
  %arraydecay = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs, i32 0, i32 0
  %conv = zext i16 %index to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arraydecay, i64 %idx.ext
  %conv1 = zext i16 %index to i32
  %nof_inputs = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 6
  %1 = load i8, i8* %nof_inputs, align 2, !tbaa !100
  %conv2 = zext i8 %1 to i32
  %cmp = icmp sge i32 %conv1, %conv2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %index to i32
  %index5 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 0
  store i32 %conv4, i32* %index5, align 8, !tbaa !101
  %name = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 1
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %video_type = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %add.ptr, i32 0, i32 0
  %2 = load i8, i8* %video_type, align 2, !tbaa !96
  %conv7 = zext i8 %2 to i32
  %sub = sub nsw i32 %conv7, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [6 x i8*], [6 x i8*]* @ivtv_get_input.input_strs, i64 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %call = call i64 @strlcpy(i8* %arraydecay6, i8* %3, i64 32)
  %video_type8 = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %add.ptr, i32 0, i32 0
  %4 = load i8, i8* %video_type8, align 2, !tbaa !96
  %conv9 = zext i8 %4 to i32
  %cmp10 = icmp eq i32 %conv9, 1
  %5 = zext i1 %cmp10 to i64
  %cond = select i1 %cmp10, i32 1, i32 2
  %type = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 2
  store i32 %cond, i32* %type, align 4, !tbaa !103
  %nof_audio_inputs = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 7
  %6 = load i8, i8* %nof_audio_inputs, align 1, !tbaa !104
  %conv12 = zext i8 %6 to i32
  %shl = shl i32 1, %conv12
  %sub13 = sub nsw i32 %shl, 1
  %audioset = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 3
  store i32 %sub13, i32* %audioset, align 8, !tbaa !105
  %type14 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 2
  %7 = load i32, i32* %type14, align 4, !tbaa !103
  %cmp15 = icmp eq i32 %7, 1
  br i1 %cmp15, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %tuner_std = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 10
  %8 = load i64, i64* %tuner_std, align 8, !tbaa !106
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end
  %cond17 = phi i64 [ %8, %cond.true ], [ 16777215, %if.end ]
  %std = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 5
  store i64 %cond17, i64* %std, align 8, !tbaa !107
  br label %cleanup

cleanup:                                          ; preds = %cond.end, %entry
  %retval.0 = phi i32 [ 0, %cond.end ], [ -22, %entry ]
  ret i32 %retval.0
}

declare i64 @strlcpy(i8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_get_output(%struct.ivtv.9* %itv, i16 zeroext %index, %struct.v4l2_output* %output) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 13
  %1 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs, align 8, !tbaa !108
  %conv = zext i16 %index to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %1, i64 %idx.ext
  %conv1 = zext i16 %index to i32
  %card2 = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card2, align 8, !tbaa !2
  %nof_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 12
  %3 = load i32, i32* %nof_outputs, align 8, !tbaa !109
  %cmp = icmp sge i32 %conv1, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %index to i32
  %index5 = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %output, i32 0, i32 0
  store i32 %conv4, i32* %index5, align 8, !tbaa !110
  %name = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %output, i32 0, i32 1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %add.ptr, i32 0, i32 0
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %name6, i32 0, i32 0
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay7, i64 32)
  %type = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %output, i32 0, i32 2
  store i32 2, i32* %type, align 4, !tbaa !112
  %audioset = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %output, i32 0, i32 3
  store i32 1, i32* %audioset, align 8, !tbaa !113
  %std = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %output, i32 0, i32 5
  store i64 16777215, i64* %std, align 8, !tbaa !114
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_get_audio_input(%struct.ivtv.9* %itv, i16 zeroext %index, %struct.v4l2_audio* %audio) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %audio_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 10
  %arraydecay = getelementptr inbounds [3 x %struct.ivtv_card_audio_input], [3 x %struct.ivtv_card_audio_input]* %audio_inputs, i32 0, i32 0
  %conv = zext i16 %index to i32
  %idx.ext = sext i32 %conv to i64
  %add.ptr = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %arraydecay, i64 %idx.ext
  %1 = bitcast %struct.v4l2_audio* %audio to i8*
  %call = call i8* @__memset(i8* %1, i32 0, i64 52)
  %conv1 = zext i16 %index to i32
  %nof_audio_inputs = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 7
  %2 = load i8, i8* %nof_audio_inputs, align 1, !tbaa !104
  %conv2 = zext i8 %2 to i32
  %cmp = icmp sge i32 %conv1, %conv2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %audio, i32 0, i32 1
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %audio_type = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %add.ptr, i32 0, i32 0
  %3 = load i8, i8* %audio_type, align 4, !tbaa !115
  %conv5 = zext i8 %3 to i32
  %sub = sub nsw i32 %conv5, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx = getelementptr inbounds [3 x i8*], [3 x i8*]* @ivtv_get_audio_input.input_strs, i64 0, i64 %idxprom
  %4 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %4, i64 32)
  %conv7 = zext i16 %index to i32
  %index8 = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %audio, i32 0, i32 0
  store i32 %conv7, i32* %index8, align 4, !tbaa !116
  %capability = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %audio, i32 0, i32 2
  store i32 1, i32* %capability, align 4, !tbaa !118
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

declare i8* @__memset(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_get_audio_output(%struct.ivtv.9* %itv, i16 zeroext %index, %struct.v4l2_audio* %aud_output) #0 {
entry:
  %0 = bitcast %struct.v4l2_audio* %aud_output to i8*
  %call = call i8* @__memset(i8* %0, i32 0, i64 52)
  %card = getelementptr inbounds %struct.ivtv.9, %struct.ivtv.9* %itv, i32 0, i32 1
  %1 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %1, i32 0, i32 13
  %2 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs, align 8, !tbaa !108
  %cmp = icmp eq %struct.ivtv_card_output* %2, null
  %conv = zext i16 %index to i32
  %cmp1 = icmp ne i32 %conv, 0
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %return, label %if.end

if.end:                                           ; preds = %entry
  %name = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %aud_output, i32 0, i32 1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %call3 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i32 0, i32 0), i64 32)
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_audio_sampling_freq(%struct.cx2341x_handler.547* %cxhdl, i32 %idx) #0 {
entry:
  %0 = bitcast %struct.cx2341x_handler.547* %cxhdl to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -360
  %1 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %conv = zext i32 %idx to i64
  %cmp = icmp ult i64 %conv, 3
  br i1 %cmp, label %do.body2, label %if.end24

do.body2:                                         ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body2
  %list18.sink = phi %struct.list_head* [ %list18, %for.inc ], [ %subdevs, %do.body2 ]
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %list18.sink, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next19, align 8, !tbaa !86
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr21 = getelementptr inbounds i8, i8* %3, i64 -128
  %4 = bitcast i8* %add.ptr21 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 1
  %v4l2_dev6 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 19
  %subdevs7 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev6, i32 0, i32 2
  %cmp8 = icmp ne %struct.list_head* %list, %subdevs7
  br i1 %cmp8, label %for.body, label %if.end24

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 6
  %5 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %audio = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %5, i32 0, i32 2
  %6 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio, align 8, !tbaa !80
  %tobool = icmp ne %struct.v4l2_subdev_audio_ops* %6, null
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops10 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops10, align 8, !tbaa !79
  %audio11 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 2
  %8 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio11, align 8, !tbaa !80
  %s_clock_freq = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %8, i32 0, i32 0
  %9 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_clock_freq, align 8, !tbaa !119
  %tobool12 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %9, null
  br i1 %tobool12, label %if.then13, label %for.inc

if.then13:                                        ; preds = %land.lhs.true
  %ops14 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops14, align 8, !tbaa !79
  %audio15 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 2
  %11 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio15, align 8, !tbaa !80
  %s_clock_freq16 = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %11, i32 0, i32 0
  %12 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_clock_freq16, align 8, !tbaa !119
  %idxprom = zext i32 %idx to i64
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* @ivtv_s_audio_sampling_freq.freqs, i64 0, i64 %idxprom
  %13 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %call = call i32 %12(%struct.v4l2_subdev* %4, i32 %13)
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %land.lhs.true, %for.body
  %list18 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 1
  br label %for.cond

if.end24:                                         ; preds = %for.cond, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_audio_mode(%struct.cx2341x_handler.547* %cxhdl, i32 %val) #0 {
entry:
  %0 = bitcast %struct.cx2341x_handler.547* %cxhdl to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -360
  %1 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %dualwatch_stereo_mode = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 88
  store i32 %val, i32* %dualwatch_stereo_mode, align 8, !tbaa !121
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_video_encoding(%struct.cx2341x_handler.547* %cxhdl, i32 %val) #0 {
entry:
  %format = alloca %struct.v4l2_subdev_format, align 4
  %0 = bitcast %struct.cx2341x_handler.547* %cxhdl to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -360
  %1 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %cmp = icmp eq i32 %val, 0
  %conv = zext i1 %cmp to i32
  %2 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* %2) #8
  %3 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 88, i32 4, i1 false)
  %4 = bitcast i8* %3 to %struct.v4l2_subdev_format*
  %5 = getelementptr %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %4, i32 0, i32 0
  store i32 1, i32* %5
  %width = getelementptr inbounds %struct.cx2341x_handler.547, %struct.cx2341x_handler.547* %cxhdl, i32 0, i32 2
  %6 = load i16, i16* %width, align 8, !tbaa !122
  %conv1 = zext i16 %6 to i32
  %tobool = icmp ne i32 %conv, 0
  %7 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 2, i32 1
  %div = sdiv i32 %conv1, %cond
  %format2 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %width3 = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format2, i32 0, i32 0
  store i32 %div, i32* %width3, align 4, !tbaa !123
  %height = getelementptr inbounds %struct.cx2341x_handler.547, %struct.cx2341x_handler.547* %cxhdl, i32 0, i32 3
  %8 = load i16, i16* %height, align 2, !tbaa !126
  %conv4 = zext i16 %8 to i32
  %format5 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %height6 = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format5, i32 0, i32 1
  store i32 %conv4, i32* %height6, align 4, !tbaa !127
  %format7 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %code = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format7, i32 0, i32 2
  store i32 1, i32* %code, align 4, !tbaa !128
  %sd_video = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool8 = icmp ne %struct.v4l2_subdev* %9, null
  br i1 %tobool8, label %cond.false, label %cond.end23

cond.false:                                       ; preds = %entry
  %sd_video9 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 11
  %10 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video9, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %pad = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 7
  %12 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad, align 8, !tbaa !129
  %tobool10 = icmp ne %struct.v4l2_subdev_pad_ops* %12, null
  br i1 %tobool10, label %land.lhs.true, label %cond.end23

land.lhs.true:                                    ; preds = %cond.false
  %sd_video11 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video11, align 8, !tbaa !90
  %ops12 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %13, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops12, align 8, !tbaa !79
  %pad13 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 7
  %15 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad13, align 8, !tbaa !129
  %set_fmt = getelementptr inbounds %struct.v4l2_subdev_pad_ops, %struct.v4l2_subdev_pad_ops* %15, i32 0, i32 5
  %16 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)** %set_fmt, align 8, !tbaa !130
  %tobool14 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)* %16, null
  br i1 %tobool14, label %cond.true15, label %cond.end23

cond.true15:                                      ; preds = %land.lhs.true
  %sd_video16 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 11
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video16, align 8, !tbaa !90
  %ops17 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 6
  %18 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops17, align 8, !tbaa !79
  %pad18 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %18, i32 0, i32 7
  %19 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad18, align 8, !tbaa !129
  %set_fmt19 = getelementptr inbounds %struct.v4l2_subdev_pad_ops, %struct.v4l2_subdev_pad_ops* %19, i32 0, i32 5
  %20 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)** %set_fmt19, align 8, !tbaa !130
  %sd_video20 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 11
  %21 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video20, align 8, !tbaa !90
  %call = call i32 %20(%struct.v4l2_subdev* %21, %struct.v4l2_subdev_pad_config* null, %struct.v4l2_subdev_format* %format)
  br label %cond.end23

cond.end23:                                       ; preds = %cond.true15, %land.lhs.true, %cond.false, %entry
  %cond24 = phi i32 [ -19, %entry ], [ %call, %cond.true15 ], [ -515, %land.lhs.true ], [ -515, %cond.false ]
  %22 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* %22) #8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_stream_vbi_fmt(%struct.cx2341x_handler.547* %cxhdl, i32 %fmt) #0 {
entry:
  %0 = bitcast %struct.cx2341x_handler.547* %cxhdl to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -360
  %1 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %tobool = icmp ne i32 %fmt, 0
  br i1 %tobool, label %land.lhs.true, label %if.end20

land.lhs.true:                                    ; preds = %entry
  %vbi = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_mpeg_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 26
  %arrayidx = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data, i64 0, i64 0
  %2 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %cmp = icmp eq i8* %2, null
  br i1 %cmp, label %if.then, label %if.end20

if.then:                                          ; preds = %land.lhs.true
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ]
  %cmp1 = icmp slt i32 %i.0, 32
  br i1 %cmp1, label %for.body, label %LeafBlock

for.body:                                         ; preds = %for.cond
  %call = call i8* @kmalloc(i64 2049, i32 20971712)
  %vbi2 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_mpeg_data3 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi2, i32 0, i32 26
  %idxprom = sext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data3, i64 0, i64 %idxprom
  store i8* %call, i8** %arrayidx4, align 8, !tbaa !86
  %vbi5 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_mpeg_data6 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi5, i32 0, i32 26
  %idxprom7 = sext i32 %i.0 to i64
  %arrayidx8 = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data6, i64 0, i64 %idxprom7
  %3 = load i8*, i8** %arrayidx8, align 8, !tbaa !86
  %cmp9 = icmp eq i8* %3, null
  br i1 %cmp9, label %if.then10, label %for.inc

if.then10:                                        ; preds = %for.body
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.then10
  %i.1 = phi i32 [ %i.0, %if.then10 ], [ %dec, %while.body ]
  %dec = add nsw i32 %i.1, -1
  %cmp11 = icmp sge i32 %dec, 0
  br i1 %cmp11, label %while.body, label %LeafBlock

while.body:                                       ; preds = %while.cond
  %vbi12 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_mpeg_data13 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi12, i32 0, i32 26
  %idxprom14 = sext i32 %dec to i64
  %arrayidx15 = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data13, i64 0, i64 %idxprom14
  %4 = load i8*, i8** %arrayidx15, align 8, !tbaa !86
  call void @kfree(i8* %4)
  %vbi16 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_mpeg_data17 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi16, i32 0, i32 26
  %idxprom18 = sext i32 %dec to i64
  %arrayidx19 = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data17, i64 0, i64 %idxprom18
  store i8* null, i8** %arrayidx19, align 8, !tbaa !86
  br label %while.cond

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

LeafBlock:                                        ; preds = %while.cond, %for.cond
  %cleanup.dest.slot.0 = phi i32 [ 1, %while.cond ], [ 0, %for.cond ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end20, label %cleanup44

if.end20:                                         ; preds = %LeafBlock, %land.lhs.true, %entry
  %vbi21 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %insert_mpeg = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi21, i32 0, i32 16
  store i32 %fmt, i32* %insert_mpeg, align 8, !tbaa !132
  %vbi22 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %insert_mpeg23 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi22, i32 0, i32 16
  %5 = load i32, i32* %insert_mpeg23, align 8, !tbaa !132
  %cmp24 = icmp eq i32 %5, 0
  br i1 %cmp24, label %cleanup44, label %if.end26

if.end26:                                         ; preds = %if.end20
  %vbi27 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi27, i32 0, i32 15
  %6 = load %struct.v4l2_sliced_vbi_format*, %struct.v4l2_sliced_vbi_format** %sliced_in, align 8, !tbaa !133
  %call28 = call zeroext i16 @ivtv_get_service_set(%struct.v4l2_sliced_vbi_format* %6)
  %conv = zext i16 %call28 to i32
  %cmp29 = icmp eq i32 %conv, 0
  br i1 %cmp29, label %if.then31, label %cleanup44

if.then31:                                        ; preds = %if.end26
  %is_60hz = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 28
  %7 = load i8, i8* %is_60hz, align 1, !tbaa !134
  %tobool32 = icmp ne i8 %7, 0
  %vbi34 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_in35 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi34, i32 0, i32 15
  %8 = load %struct.v4l2_sliced_vbi_format*, %struct.v4l2_sliced_vbi_format** %sliced_in35, align 8, !tbaa !133
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %8, i32 0, i32 0
  %.sink = select i1 %tobool32, i16 4096, i16 16384
  store i16 %.sink, i16* %service_set, align 4, !tbaa !135
  %vbi40 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 89
  %sliced_in41 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi40, i32 0, i32 15
  %9 = load %struct.v4l2_sliced_vbi_format*, %struct.v4l2_sliced_vbi_format** %sliced_in41, align 8, !tbaa !133
  %is_50hz = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %1, i32 0, i32 27
  %10 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv42 = zext i8 %10 to i32
  call void @ivtv_expand_service_set(%struct.v4l2_sliced_vbi_format* %9, i32 %conv42)
  br label %cleanup44

cleanup44:                                        ; preds = %if.then31, %if.end26, %if.end20, %LeafBlock
  %retval.1 = phi i32 [ 0, %if.end20 ], [ 0, %if.then31 ], [ 0, %if.end26 ], [ -12, %LeafBlock ]
  ret i32 %retval.1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc(i64 %size, i32 %flags) #1 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare void @kfree(i8*) #2

declare noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #3

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_volatile_ctrl(%struct.v4l2_ctrl* %ctrl) #0 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %1 = bitcast %struct.v4l2_ctrl_handler* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -384
  %2 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %id = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 8
  %3 = load i32, i32* %id, align 8, !tbaa !140
  %SwitchLeaf = icmp eq i32 %3, 10029535
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %entry
  %4 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 21
  %ctrl_pts = getelementptr inbounds %struct.anon.88, %struct.anon.88* %4, i32 0, i32 0
  %5 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_pts, align 8, !tbaa !141
  %p_new = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %5, i32 0, i32 24
  %p_s64 = bitcast %union.v4l2_ctrl_ptr* %p_new to i64**
  %6 = load i64*, i64** %p_s64, align 8, !tbaa !142
  %7 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 21
  %ctrl_frame = getelementptr inbounds %struct.anon.88, %struct.anon.88* %7, i32 0, i32 1
  %8 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_frame, align 8, !tbaa !143
  %p_new1 = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %8, i32 0, i32 24
  %p_s642 = bitcast %union.v4l2_ctrl_ptr* %p_new1 to i64**
  %9 = load i64*, i64** %p_s642, align 8, !tbaa !142
  %call = call i32 @ivtv_g_pts_frame(%struct.ivtv.572* %2, i64* %6, i64* %9)
  br label %cleanup

cleanup:                                          ; preds = %sw.bb, %entry
  %retval.0 = phi i32 [ %call, %sw.bb ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_ctrl(%struct.v4l2_ctrl* %ctrl) #0 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %1 = bitcast %struct.v4l2_ctrl_handler* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -384
  %2 = bitcast i8* %add.ptr to %struct.ivtv.572*
  %id = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 8
  %3 = load i32, i32* %id, align 8, !tbaa !140
  %SwitchLeaf = icmp eq i32 %3, 10029424
  br i1 %SwitchLeaf, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %entry
  %4 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 22
  %ctrl_audio_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %4, i32 0, i32 0
  %5 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_audio_playback, align 8, !tbaa !144
  %val = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %5, i32 0, i32 22
  %6 = load i32, i32* %val, align 8, !tbaa !145
  %sub = sub nsw i32 %6, 1
  %conv = trunc i32 %sub to i8
  %audio_stereo_mode = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 37
  store i8 %conv, i8* %audio_stereo_mode, align 8, !tbaa !146
  %7 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 22
  %ctrl_audio_multilingual_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %7, i32 0, i32 1
  %8 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_audio_multilingual_playback, align 8, !tbaa !147
  %val1 = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %8, i32 0, i32 22
  %9 = load i32, i32* %val1, align 8, !tbaa !145
  %sub2 = sub nsw i32 %9, 1
  %conv3 = trunc i32 %sub2 to i8
  %audio_bilingual_mode = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 38
  store i8 %conv3, i8* %audio_bilingual_mode, align 1, !tbaa !148
  %audio_bilingual_mode4 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 38
  %10 = load i8, i8* %audio_bilingual_mode4, align 1, !tbaa !148
  %conv5 = zext i8 %10 to i32
  %audio_stereo_mode6 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %2, i32 0, i32 37
  %11 = load i8, i8* %audio_stereo_mode6, align 8, !tbaa !146
  %conv7 = zext i8 %11 to i32
  %call = call i32 (%struct.ivtv.572*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv.572*, i32, i32, ...)*)(%struct.ivtv.572* %2, i32 22, i32 2, i32 %conv5, i32 %conv7)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_g_pts_frame(%struct.ivtv.572* %itv, i64* %pts, i64* %frame) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %i_flags = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 26
  %call = call zeroext i1 @constant_test_bit.1(i64 14, i64* %i_flags)
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %last_dec_timing = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 86
  %arrayidx = getelementptr inbounds [3 x i32], [3 x i32]* %last_dec_timing, i64 0, i64 2
  %1 = load i32, i32* %arrayidx, align 8, !tbaa !120
  %conv = zext i32 %1 to i64
  %shl = shl i64 %conv, 32
  %last_dec_timing3 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 86
  %arrayidx4 = getelementptr inbounds [3 x i32], [3 x i32]* %last_dec_timing3, i64 0, i64 1
  %2 = load i32, i32* %arrayidx4, align 4, !tbaa !120
  %conv5 = zext i32 %2 to i64
  %or = or i64 %shl, %conv5
  store i64 %or, i64* %pts, align 8, !tbaa !149
  %last_dec_timing6 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 86
  %arrayidx7 = getelementptr inbounds [3 x i32], [3 x i32]* %last_dec_timing6, i64 0, i64 0
  %3 = load i32, i32* %arrayidx7, align 8, !tbaa !120
  %conv8 = zext i32 %3 to i64
  store i64 %conv8, i64* %frame, align 8, !tbaa !149
  br label %cleanup

if.end:                                           ; preds = %entry
  store i64 0, i64* %pts, align 8, !tbaa !149
  store i64 0, i64* %frame, align 8, !tbaa !149
  %decoding = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 44
  %call9 = call i32 @atomic_read(%struct.atomic_t* %decoding)
  %tobool = icmp ne i32 %call9, 0
  br i1 %tobool, label %if.then10, label %cleanup

if.then10:                                        ; preds = %if.end
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call11 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32, i32, i32*)* @ivtv_api to i32 (%struct.ivtv.572*, i32, i32, i32*)*)(%struct.ivtv.572* %itv, i32 21, i32 5, i32* %arraydecay)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %do.body, label %if.end19

do.body:                                          ; preds = %if.then10
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %4
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.then15, label %cleanup

if.then15:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay16 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.42, i32 0, i32 0), i8* %arraydecay16)
  br label %cleanup

if.end19:                                         ; preds = %if.then10
  %last_dec_timing20 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 86
  %arraydecay21 = getelementptr inbounds [3 x i32], [3 x i32]* %last_dec_timing20, i32 0, i32 0
  %5 = bitcast i32* %arraydecay21 to i8*
  %arraydecay22 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %6 = bitcast i32* %arraydecay22 to i8*
  %call23 = call i8* @__memcpy(i8* %5, i8* %6, i64 12)
  %i_flags24 = getelementptr inbounds %struct.ivtv.572, %struct.ivtv.572* %itv, i32 0, i32 26
  call void @set_bit(i64 14, i64* %i_flags24)
  %arrayidx25 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %7 = load i32, i32* %arrayidx25, align 8, !tbaa !120
  %conv26 = zext i32 %7 to i64
  %shl27 = shl i64 %conv26, 32
  %arrayidx28 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %8 = load i32, i32* %arrayidx28, align 4, !tbaa !120
  %conv29 = zext i32 %8 to i64
  %or30 = or i64 %shl27, %conv29
  store i64 %or30, i64* %pts, align 8, !tbaa !149
  %arrayidx31 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %9 = load i32, i32* %arrayidx31, align 16, !tbaa !120
  %conv32 = zext i32 %9 to i64
  store i64 %conv32, i64* %frame, align 8, !tbaa !149
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then15, %do.body, %if.end, %if.then
  %retval.0 = phi i32 [ 0, %if.then ], [ -5, %if.then15 ], [ -5, %do.body ], [ 0, %if.end19 ], [ 0, %if.end ]
  %10 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %10) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.1(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

declare i32 @printk(i8*, ...) #2

declare i8* @__memcpy(i8*, i8*, i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !150
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !152
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !153
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #3

; Function Attrs: nounwind uwtable
define i32 @ivtv_init_on_first_open(%struct.ivtv.1060* %itv) #0 {
entry:
  %vf = alloca %struct.v4l2_frequency, align 4
  %fh = alloca %struct.ivtv_open_id, align 8
  %0 = bitcast %struct.v4l2_frequency* %vf to i8*
  call void @llvm.lifetime.start.p0i8(i64 44, i8* %0) #8
  %1 = bitcast %struct.ivtv_open_id* %fh to i8*
  call void @llvm.lifetime.start.p0i8(i64 192, i8* %1) #8
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %fh, i32 0, i32 3
  store %struct.ivtv.1060* %itv, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %fh, i32 0, i32 1
  store i32 0, i32* %type, align 8, !tbaa !157
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call = call zeroext i1 @constant_test_bit.45(i64 22, i64* %i_flags)
  br i1 %call, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %i_flags4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call5 = call zeroext i1 @test_and_set_bit(i64 21, i64* %i_flags4)
  br i1 %call5, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.end
  br label %while.cond

while.cond:                                       ; preds = %if.end15, %if.end7
  %fw_retry_count.0 = phi i32 [ 3, %if.end7 ], [ %dec, %if.end15 ]
  %dec = add nsw i32 %fw_retry_count.0, -1
  %cmp = icmp sgt i32 %dec, 0
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call8 = call i32 bitcast (i32 (%struct.ivtv*)* @ivtv_firmware_init to i32 (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  %cmp9 = icmp eq i32 %call8, 0
  br i1 %cmp9, label %while.end, label %if.end11

if.end11:                                         ; preds = %while.body
  %cmp12 = icmp sgt i32 %dec, 1
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.end11
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46, i32 0, i32 0), i8* %arraydecay)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.end11
  br label %while.cond

while.end:                                        ; preds = %while.body, %while.cond
  %cmp16 = icmp eq i32 %dec, 0
  br i1 %cmp16, label %if.then17, label %do.body

if.then17:                                        ; preds = %while.end
  %i_flags18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @set_bit.47(i64 22, i64* %i_flags18)
  br label %cleanup

do.body:                                          ; preds = %while.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then20, label %do.end

if.then20:                                        ; preds = %do.body
  %v4l2_dev21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name22 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev21, i32 0, i32 4
  %arraydecay23 = getelementptr inbounds [36 x i8], [36 x i8]* %name22, i32 0, i32 0
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.1.48, i32 0, i32 0), i8* %arraydecay23)
  br label %do.end

do.end:                                           ; preds = %if.then20, %do.body
  call void bitcast (void (%struct.ivtv*)* @ivtv_firmware_versions to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %hw_all = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 8
  %4 = load i32, i32* %hw_all, align 4, !tbaa !158
  %and26 = and i32 %4, 1
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.then28, label %if.end48

if.then28:                                        ; preds = %do.end
  %sd_video = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool29 = icmp ne %struct.v4l2_subdev* %5, null
  br i1 %tobool29, label %cond.false31, label %if.end48

cond.false31:                                     ; preds = %if.then28
  %sd_video32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video32, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %core = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 0
  %8 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core, align 8, !tbaa !159
  %tobool33 = icmp ne %struct.v4l2_subdev_core_ops* %8, null
  br i1 %tobool33, label %land.lhs.true, label %if.end48

land.lhs.true:                                    ; preds = %cond.false31
  %sd_video34 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video34, align 8, !tbaa !90
  %ops35 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops35, align 8, !tbaa !79
  %core36 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 0
  %11 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core36, align 8, !tbaa !159
  %load_fw = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %11, i32 0, i32 3
  %12 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %load_fw, align 8, !tbaa !160
  %tobool37 = icmp ne i32 (%struct.v4l2_subdev*)* %12, null
  br i1 %tobool37, label %cond.true38, label %if.end48

cond.true38:                                      ; preds = %land.lhs.true
  %sd_video39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video39, align 8, !tbaa !90
  %ops40 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %13, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops40, align 8, !tbaa !79
  %core41 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 0
  %15 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core41, align 8, !tbaa !159
  %load_fw42 = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %15, i32 0, i32 3
  %16 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %load_fw42, align 8, !tbaa !160
  %sd_video43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video43, align 8, !tbaa !90
  %call44 = call i32 %16(%struct.v4l2_subdev* %17)
  br label %if.end48

if.end48:                                         ; preds = %cond.true38, %land.lhs.true, %cond.false31, %if.then28, %do.end
  %tuner = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 0
  store i32 0, i32* %tuner, align 4, !tbaa !162
  %type49 = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 1
  store i32 2, i32* %type49, align 4, !tbaa !164
  %frequency = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 2
  store i32 6400, i32* %frequency, align 4, !tbaa !165
  %std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %18 = load i64, i64* %std, align 8, !tbaa !166
  %cmp50 = icmp eq i64 %18, 8192
  br i1 %cmp50, label %if.end59.sink.split, label %if.else

if.else:                                          ; preds = %if.end48
  %std53 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %19 = load i64, i64* %std53, align 8, !tbaa !166
  %and54 = and i64 %19, 4096
  %tobool55 = icmp ne i64 %and54, 0
  br i1 %tobool55, label %if.end59.sink.split, label %if.end59

if.end59.sink.split:                              ; preds = %if.else, %if.end48
  %.sink = phi i32 [ 1076, %if.else ], [ 1460, %if.end48 ]
  %frequency57 = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 2
  store i32 %.sink, i32* %frequency57, align 4, !tbaa !165
  br label %if.end59

if.end59:                                         ; preds = %if.end59.sink.split, %if.else
  %active_input = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 33
  %20 = load i32, i32* %active_input, align 4, !tbaa !89
  %active_input60 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 33
  %21 = load i32, i32* %active_input60, align 4, !tbaa !89
  %inc = add i32 %21, 1
  store i32 %inc, i32* %active_input60, align 4, !tbaa !89
  %22 = bitcast %struct.ivtv_open_id* %fh to i8*
  %call61 = call i32 @ivtv_s_input(%struct.file* undef, i8* %22, i32 %20)
  %std62 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %23 = load i64, i64* %std62, align 8, !tbaa !166
  %inc63 = add i64 %23, 1
  store i64 %inc63, i64* %std62, align 8, !tbaa !166
  %std64 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %24 = load i64, i64* %std64, align 8, !tbaa !166
  %std_out = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 36
  store i64 %24, i64* %std_out, align 8, !tbaa !167
  %25 = bitcast %struct.ivtv_open_id* %fh to i8*
  %call65 = call i32 @ivtv_s_frequency(%struct.file* undef, i8* %25, %struct.v4l2_frequency* %vf)
  %card66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %26 = load %struct.ivtv_card*, %struct.ivtv_card** %card66, align 8, !tbaa !2
  %v4l2_capabilities = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %26, i32 0, i32 3
  %27 = load i32, i32* %v4l2_capabilities, align 8, !tbaa !168
  %and67 = and i32 %27, 2
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %do.body71, label %if.end100

do.body71:                                        ; preds = %if.end59
  %v4l2_dev72 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev72, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body71
  %list92.sink = phi %struct.list_head* [ %list92, %for.inc ], [ %subdevs, %do.body71 ]
  %next93 = getelementptr inbounds %struct.list_head, %struct.list_head* %list92.sink, i32 0, i32 0
  %28 = load %struct.list_head*, %struct.list_head** %next93, align 8, !tbaa !86
  %29 = bitcast %struct.list_head* %28 to i8*
  %add.ptr95 = getelementptr inbounds i8, i8* %29, i64 -128
  %30 = bitcast i8* %add.ptr95 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 1
  %v4l2_dev73 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs74 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev73, i32 0, i32 2
  %cmp75 = icmp ne %struct.list_head* %list, %subdevs74
  br i1 %cmp75, label %for.body, label %do.end99

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 10
  %31 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and76 = and i32 %31, 4
  %tobool77 = icmp ne i32 %and76, 0
  br i1 %tobool77, label %land.lhs.true78, label %for.inc

land.lhs.true78:                                  ; preds = %for.body
  %ops79 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 6
  %32 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops79, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %32, i32 0, i32 3
  %33 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool80 = icmp ne %struct.v4l2_subdev_video_ops* %33, null
  br i1 %tobool80, label %land.lhs.true81, label %for.inc

land.lhs.true81:                                  ; preds = %land.lhs.true78
  %ops82 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 6
  %34 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops82, align 8, !tbaa !79
  %video83 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %34, i32 0, i32 3
  %35 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video83, align 8, !tbaa !91
  %s_stream = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %35, i32 0, i32 10
  %36 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream, align 8, !tbaa !169
  %tobool84 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %36, null
  br i1 %tobool84, label %if.then85, label %for.inc

if.then85:                                        ; preds = %land.lhs.true81
  %ops86 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 6
  %37 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops86, align 8, !tbaa !79
  %video87 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %37, i32 0, i32 3
  %38 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video87, align 8, !tbaa !91
  %s_stream88 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %38, i32 0, i32 10
  %39 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream88, align 8, !tbaa !169
  %call89 = call i32 %39(%struct.v4l2_subdev* %30, i32 1)
  br label %for.inc

for.inc:                                          ; preds = %if.then85, %land.lhs.true81, %land.lhs.true78, %for.body
  %list92 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 1
  br label %for.cond

do.end99:                                         ; preds = %for.cond
  call void bitcast (void (%struct.ivtv*)* @ivtv_init_mpeg_decoder to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  br label %if.end100

if.end100:                                        ; preds = %do.end99, %if.end59
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  %40 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool101 = icmp ne i8 %40, 0
  br i1 %tobool101, label %if.end110, label %do.body103

do.body103:                                       ; preds = %if.end100
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %41 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr104 = getelementptr i8, i8* %41, i64 16
  call void @writel(i32 3, i8* %add.ptr104)
  %reg_mem105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %42 = load i8*, i8** %reg_mem105, align 8, !tbaa !171
  %add.ptr106 = getelementptr i8, i8* %42, i64 16
  call void @readl(i8* %add.ptr106)
  br label %if.end110

if.end110:                                        ; preds = %do.body103, %if.end100
  %tuner_std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 10
  %43 = load i64, i64* %tuner_std, align 8, !tbaa !106
  call void bitcast (void (%struct.ivtv*, i64)* @ivtv_s_std_enc to void (%struct.ivtv.1060*, i64)*)(%struct.ivtv.1060* %itv, i64 %43)
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %44 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and111 = and i32 %44, 2
  %tobool112 = icmp ne i32 %and111, 0
  br i1 %tobool112, label %if.then113, label %if.else115

if.then113:                                       ; preds = %if.end110
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %itv, i32 168100864)
  call void bitcast (void (%struct.ivtv*)* @ivtv_set_osd_alpha to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  %tuner_std114 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 10
  %45 = load i64, i64* %tuner_std114, align 8, !tbaa !106
  call void bitcast (void (%struct.ivtv*, i64)* @ivtv_s_std_dec to void (%struct.ivtv.1060*, i64)*)(%struct.ivtv.1060* %itv, i64 %45)
  br label %if.end116

if.else115:                                       ; preds = %if.end110
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %itv, i32 168099840)
  br label %if.end116

if.end116:                                        ; preds = %if.else115, %if.then113
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %call117 = call i32 @cx2341x_handler_setup(%struct.cx2341x_handler* %cxhdl)
  br label %cleanup

cleanup:                                          ; preds = %if.end116, %if.then17, %if.end, %entry
  %retval.0 = phi i32 [ -6, %if.then17 ], [ 0, %if.end116 ], [ -6, %entry ], [ 0, %if.end ]
  %46 = bitcast %struct.ivtv_open_id* %fh to i8*
  call void @llvm.lifetime.end.p0i8(i64 192, i8* %46) #8
  %47 = bitcast %struct.v4l2_frequency* %vf to i8*
  call void @llvm.lifetime.end.p0i8(i64 44, i8* %47) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.45(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !173
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.47(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !176
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !177
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @readl(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !178
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_clear_irq_mask(%struct.ivtv.1060* %itv, i32 %mask) #0 {
entry:
  %neg = xor i32 %mask, -1
  %irqmask = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 48
  %0 = load i32, i32* %irqmask, align 8, !tbaa !179
  %and = and i32 %0, %neg
  store i32 %and, i32* %irqmask, align 8, !tbaa !179
  %irqmask1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 48
  %1 = load i32, i32* %irqmask1, align 8, !tbaa !179
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %2, i64 72
  call void @writel(i32 %1, i8* %add.ptr)
  %reg_mem2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem2, align 8, !tbaa !171
  %add.ptr3 = getelementptr i8, i8* %3, i64 72
  call void @readl(i8* %add.ptr3)
  ret void
}

declare i32 @cx2341x_handler_setup(%struct.cx2341x_handler*) #2

; Function Attrs: nounwind uwtable
define void @ivtv_set_irq_mask(%struct.ivtv.1060* %itv, i32 %mask) #0 {
entry:
  %irqmask = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 48
  %0 = load i32, i32* %irqmask, align 8, !tbaa !179
  %or = or i32 %0, %mask
  store i32 %or, i32* %irqmask, align 8, !tbaa !179
  %irqmask1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 48
  %1 = load i32, i32* %irqmask1, align 8, !tbaa !179
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %2, i64 72
  call void @writel(i32 %1, i8* %add.ptr)
  %reg_mem2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem2, align 8, !tbaa !171
  %add.ptr3 = getelementptr i8, i8* %3, i64 72
  call void @readl(i8* %add.ptr3)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_set_output_mode(%struct.ivtv.1060* %itv, i32 %mode) #0 {
entry:
  %lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 39
  call void @spin_lock(%struct.spinlock* %lock)
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  %0 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %output_mode1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  store i32 %mode, i32* %output_mode1, align 4, !tbaa !180
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %old_mode.0 = phi i32 [ %mode, %if.then ], [ %0, %entry ]
  %lock2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 39
  call void @spin_unlock(%struct.spinlock* %lock2)
  ret i32 %old_mode.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_lock(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_lock(%struct.raw_spinlock* %rlock)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_unlock(%struct.raw_spinlock* %rlock)
  ret void
}

declare void @_raw_spin_unlock(%struct.raw_spinlock*) #2 section ".spinlock.text"

declare void @_raw_spin_lock(%struct.raw_spinlock*) #2 section ".spinlock.text"

; Function Attrs: nounwind uwtable
define %struct.ivtv_stream.1071* @ivtv_get_output_stream(%struct.ivtv.1060* %itv) #0 {
entry:
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  %0 = load i32, i32* %output_mode, align 4, !tbaa !180
  %Pivot = icmp slt i32 %0, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %SwitchLeaf2 = icmp eq i32 %0, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %return

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %0, 1
  br i1 %SwitchLeaf, label %sw.bb, label %return

sw.bb:                                            ; preds = %LeafBlock
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 5
  br label %return

sw.bb1:                                           ; preds = %LeafBlock1
  %streams2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %arrayidx3 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams2, i64 0, i64 8
  br label %return

return:                                           ; preds = %sw.bb1, %sw.bb, %LeafBlock, %LeafBlock1
  %retval.0 = phi %struct.ivtv_stream.1071* [ %arrayidx, %sw.bb ], [ %arrayidx3, %sw.bb1 ], [ null, %LeafBlock ], [ null, %LeafBlock1 ]
  ret %struct.ivtv_stream.1071* %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_waitq(%struct.__wait_queue_head* %waitq) #0 {
entry:
  %wait = alloca %struct.__wait_queue, align 8
  %0 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current()
  %1 = bitcast %struct.task_struct* %call to i8*
  store i8* %1, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list1 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list1, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list2 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list2, %struct.list_head** %prev, align 8, !tbaa !186
  call void @prepare_to_wait(%struct.__wait_queue_head* %waitq, %struct.__wait_queue* %wait, i32 1)
  call void @schedule()
  call void @finish_wait(%struct.__wait_queue_head* %waitq, %struct.__wait_queue* %wait)
  %call3 = call %struct.task_struct* @get_current()
  %call4 = call i32 @signal_pending(%struct.task_struct* %call3)
  %tobool = icmp ne i32 %call4, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 -4, i32 0
  %3 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %3) #8
  ret i32 %cond
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !187
  ret %struct.task_struct* %0
}

declare i32 @autoremove_wake_function(%struct.__wait_queue*, i32, i32, i8*) #2

declare void @prepare_to_wait(%struct.__wait_queue_head*, %struct.__wait_queue*, i32) #2

declare void @schedule() #2

declare void @finish_wait(%struct.__wait_queue_head*, %struct.__wait_queue*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @signal_pending(%struct.task_struct* %p) #4 {
entry:
  %call = call i32 @test_tsk_thread_flag(%struct.task_struct* %p, i32 2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %conv2 = trunc i64 %expval to i32
  ret i32 %conv2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_tsk_thread_flag(%struct.task_struct* %tsk, i32 %flag) #4 {
entry:
  %call = call %union.anon.3* @task_thread_info(%struct.task_struct* %tsk)
  %call1 = call i32 @test_ti_thread_flag(%union.anon.3* %call, i32 %flag)
  ret i32 %call1
}

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #5

; Function Attrs: inlinehint nounwind uwtable
define internal %union.anon.3* @task_thread_info(%struct.task_struct* %task) #4 {
entry:
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %task, i32 0, i32 0
  ret %union.anon.3* %thread_info
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_ti_thread_flag(%union.anon.3* %ti, i32 %flag) #4 {
entry:
  %conv = sext i32 %flag to i64
  %flags = getelementptr inbounds %union.anon.3, %union.anon.3* %ti, i32 0, i32 0
  %call = call zeroext i1 @variable_test_bit(i64 %conv, i64* %flags)
  %conv1 = zext i1 %call to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @variable_test_bit(i64 %nr, i64* %addr) #1 {
entry:
  %oldbit = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %oldbit) #8
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %oldbit, i64* %addr, i64 %nr) #8, !srcloc !188
  %0 = load i8, i8* %oldbit, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %oldbit) #8
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_msleep_timeout(i32 %msecs, i32 %intr) #0 {
entry:
  %__ret = alloca i64, align 8
  %call = call i64 @msecs_to_jiffies(i32 %msecs)
  %conv = trunc i64 %call to i32
  br label %do.body

do.body:                                          ; preds = %do.cond18, %entry
  %timeout.0 = phi i32 [ %conv, %entry ], [ %conv11, %do.cond18 ]
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.2, %do.cond18 ]
  br label %__here

__here:                                           ; preds = %do.body
  %call2 = call %struct.task_struct* @get_current()
  %task_state_change = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call2, i32 0, i32 208
  store i64 ptrtoint (i8* blockaddress(@ivtv_msleep_timeout, %__here) to i64), i64* %task_state_change, align 32, !tbaa !189
  %0 = bitcast i64* %__ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %tobool = icmp ne i32 %intr, 0
  %1 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 2
  %conv4 = sext i32 %cond to i64
  store volatile i64 %conv4, i64* %__ret, align 8, !tbaa !88
  %2 = load volatile i64, i64* %__ret, align 8, !tbaa !88
  %call5 = call %struct.task_struct* @get_current()
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call5, i32 0, i32 1
  %3 = call i64 asm sideeffect "xchgq ${0:q}, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64* %state, i64 %2, i64* %state) #8, !srcloc !224
  store volatile i64 %3, i64* %__ret, align 8, !tbaa !88
  %4 = load volatile i64, i64* %__ret, align 8, !tbaa !88
  %5 = bitcast i64* %__ret to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %conv9 = sext i32 %timeout.0 to i64
  %call10 = call i64 @schedule_timeout(i64 %conv9)
  %conv11 = trunc i64 %call10 to i32
  %tobool12 = icmp ne i32 %intr, 0
  br i1 %tobool12, label %if.then, label %do.cond18

if.then:                                          ; preds = %__here
  %call13 = call %struct.task_struct* @get_current()
  %call14 = call i32 @signal_pending(%struct.task_struct* %call13)
  %tobool15 = icmp ne i32 %call14, 0
  %. = select i1 %tobool15, i32 1, i32 0
  %call14.retval.0 = select i1 %tobool15, i32 %call14, i32 %retval.0
  %SwitchLeaf = icmp eq i32 %., 0
  br i1 %SwitchLeaf, label %do.cond18, label %cleanup21

do.cond18:                                        ; preds = %if.then, %__here
  %retval.2 = phi i32 [ %retval.0, %__here ], [ %call14.retval.0, %if.then ]
  %tobool19 = icmp ne i32 %conv11, 0
  br i1 %tobool19, label %do.body, label %cleanup21

cleanup21:                                        ; preds = %do.cond18, %if.then
  %retval.3 = phi i32 [ 0, %do.cond18 ], [ %call14.retval.0, %if.then ]
  ret i32 %retval.3
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

declare i64 @schedule_timeout(i64) #2

declare i64 @__msecs_to_jiffies(i32) #2

; Function Attrs: nounwind uwtable
define void @ivtv_read_eeprom(%struct.ivtv.1060* %itv, %struct.tveeprom* %tv) #0 {
entry:
  %eedata = alloca [256 x i8], align 16
  %0 = bitcast [256 x i8]* %eedata to i8*
  call void @llvm.lifetime.start.p0i8(i64 256, i8* %0) #8
  %i2c_client = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 71
  %addr = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %i2c_client, i32 0, i32 1
  store i16 80, i16* %addr, align 2, !tbaa !225
  %i2c_client1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 71
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %eedata, i32 0, i32 0
  %call = call i32 @tveeprom_read(%struct.i2c_client* %i2c_client1, i8* %arraydecay, i32 256)
  %i2c_client2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 71
  %arraydecay3 = getelementptr inbounds [256 x i8], [256 x i8]* %eedata, i32 0, i32 0
  call void @tveeprom_hauppauge_analog(%struct.i2c_client* %i2c_client2, %struct.tveeprom* %tv, i8* %arraydecay3)
  %1 = bitcast [256 x i8]* %eedata to i8*
  call void @llvm.lifetime.end.p0i8(i64 256, i8* %1) #8
  ret void
}

declare i32 @tveeprom_read(%struct.i2c_client*, i8*, i32) #2

declare void @tveeprom_hauppauge_analog(%struct.i2c_client*, %struct.tveeprom*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @module_start() #6 section ".init.text" {
entry:
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2.49, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.349, i32 0, i32 0))
  %0 = load i32, i32* @ivtv_first_minor, align 4, !tbaa !120
  %cmp = icmp slt i32 %0, 0
  %1 = load i32, i32* @ivtv_first_minor, align 4
  %cmp1 = icmp sge i32 %1, 32
  %or.cond = or i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.51, i32 0, i32 0), i32 31)
  br label %return

if.end:                                           ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %cmp3 = icmp slt i32 %2, 0
  %3 = load i32, i32* @ivtv_debug, align 4
  %cmp5 = icmp sgt i32 %3, 2047
  %or.cond1 = or i1 %cmp3, %cmp5
  br i1 %or.cond1, label %if.then6, label %if.end8

if.then6:                                         ; preds = %if.end
  store i32 0, i32* @ivtv_debug, align 4, !tbaa !120
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5.52, i32 0, i32 0))
  br label %if.end8

if.end8:                                          ; preds = %if.then6, %if.end
  %call9 = call i32 @__pci_register_driver(%struct.pci_driver* @ivtv_pci_driver, %struct.module* @__this_module, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.398, i32 0, i32 0))
  %tobool = icmp ne i32 %call9, 0
  br i1 %tobool, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end8
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.7.54, i32 0, i32 0))
  br label %return

if.end12:                                         ; preds = %if.end8
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8.55, i32 0, i32 0))
  br label %return

return:                                           ; preds = %if.end12, %if.then10, %if.then
  %retval.0 = phi i32 [ -1, %if.then ], [ -19, %if.then10 ], [ 0, %if.end12 ]
  ret i32 %retval.0
}

declare i32 @__pci_register_driver(%struct.pci_driver*, %struct.module*, i8*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_probe(%struct.pci_dev* %pdev, %struct.pci_device_id* %pci_id) #0 {
entry:
  %setup = alloca %struct.tuner_setup, align 8
  %cfg = alloca %struct.v4l2_priv_tun_config, align 8
  %call = call i8* @kzalloc(i64 117352, i32 17301536)
  %0 = bitcast i8* %call to %struct.ivtv.1060*
  %cmp = icmp eq %struct.ivtv.1060* %0, null
  br i1 %cmp, label %cleanup582, label %if.end

if.end:                                           ; preds = %entry
  %pdev2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  store %struct.pci_dev* %pdev, %struct.pci_dev** %pdev2, align 8, !tbaa !226
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %call3 = call i32 @v4l2_device_set_name(%struct.v4l2_device* %v4l2_dev, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.398, i32 0, i32 0), %struct.atomic_t* @ivtv_instance)
  %conv = trunc i32 %call3 to i16
  %instance = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 25
  store i16 %conv, i16* %instance, align 8, !tbaa !227
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 35
  %v4l2_dev4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %call5 = call i32 @v4l2_device_register(%struct.device* %dev, %struct.v4l2_device* %v4l2_dev4)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %1 = bitcast %struct.ivtv.1060* %0 to i8*
  call void @kfree(i8* %1)
  br label %cleanup582

if.end7:                                          ; preds = %if.end
  %v4l2_dev8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev8, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %instance9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 25
  %2 = load i16, i16* %instance9, align 8, !tbaa !227
  %conv10 = zext i16 %2 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9.58, i32 0, i32 0), i8* %arraydecay, i32 %conv10)
  call void @ivtv_process_options(%struct.ivtv.1060* %0)
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %cardtype = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 1
  %3 = load i32, i32* %cardtype, align 4, !tbaa !228
  %cmp12 = icmp eq i32 %3, -1
  br i1 %cmp12, label %err, label %if.end15

if.end15:                                         ; preds = %if.end7
  %call16 = call i32 @ivtv_init_struct1(%struct.ivtv.1060* %0)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %err, label %if.end19

if.end19:                                         ; preds = %if.end15
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %call20 = call i32 @cx2341x_handler_init(%struct.cx2341x_handler* %cxhdl, i32 50)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %err, label %if.end23

if.end23:                                         ; preds = %if.end19
  %cxhdl24 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %hdl = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl24, i32 0, i32 6
  %v4l2_dev25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %ctrl_handler = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev25, i32 0, i32 6
  store %struct.v4l2_ctrl_handler* %hdl, %struct.v4l2_ctrl_handler** %ctrl_handler, align 8, !tbaa !229
  %cxhdl26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %ops = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl26, i32 0, i32 9
  store %struct.cx2341x_handler_ops* bitcast ({ i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)*, i32 (%struct.cx2341x_handler.547*, i32)* }* @ivtv_cxhdl_ops to %struct.cx2341x_handler_ops*), %struct.cx2341x_handler_ops** %ops, align 8, !tbaa !230
  %4 = bitcast %struct.ivtv.1060* %0 to i8*
  %cxhdl27 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %priv = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl27, i32 0, i32 7
  store i8* %4, i8** %priv, align 8, !tbaa !231
  %cxhdl28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %func = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl28, i32 0, i32 8
  store i32 (i8*, i32, i32, i32, i32*)* @ivtv_api_func, i32 (i8*, i32, i32, i32, i32*)** %func, align 8, !tbaa !232
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %5
  %tobool29 = icmp ne i32 %and, 0
  br i1 %tobool29, label %if.then30, label %do.end

if.then30:                                        ; preds = %if.end23
  %v4l2_dev31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name32 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev31, i32 0, i32 4
  %arraydecay33 = getelementptr inbounds [36 x i8], [36 x i8]* %name32, i32 0, i32 0
  %base_addr = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %6 = load i64, i64* %base_addr, align 8, !tbaa !233
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.10.59, i32 0, i32 0), i8* %arraydecay33, i64 %6)
  br label %do.end

do.end:                                           ; preds = %if.then30, %if.end23
  %call36 = call i32 @ivtv_setup_pci(%struct.ivtv.1060* %0, %struct.pci_dev* %pdev)
  switch i32 %call36, label %do.body45 [
    i32 -5, label %free_worker
    i32 -6, label %free_mem
  ]

do.body45:                                        ; preds = %do.end
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and46 = and i32 2, %7
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %do.end56

if.then48:                                        ; preds = %do.body45
  %v4l2_dev49 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name50 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev49, i32 0, i32 4
  %arraydecay51 = getelementptr inbounds [36 x i8], [36 x i8]* %name50, i32 0, i32 0
  %base_addr52 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %8 = load i64, i64* %base_addr52, align 8, !tbaa !233
  %add = add i64 %8, 0
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11.60, i32 0, i32 0), i8* %arraydecay51, i64 %add, i32 8388608)
  br label %do.end56

do.end56:                                         ; preds = %if.then48, %do.body45
  %base_addr57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %9 = load i64, i64* %base_addr57, align 8, !tbaa !233
  %add58 = add i64 %9, 0
  %call59 = call i8* @ioremap_nocache(i64 %add58, i64 8388608)
  %enc_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 15
  store i8* %call59, i8** %enc_mem, align 8, !tbaa !234
  %enc_mem60 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 15
  %10 = load i8*, i8** %enc_mem60, align 8, !tbaa !234
  %tobool61 = icmp ne i8* %10, null
  br i1 %tobool61, label %if.end79, label %if.then62

if.then62:                                        ; preds = %do.end56
  %v4l2_dev63 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name64 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev63, i32 0, i32 4
  %arraydecay65 = getelementptr inbounds [36 x i8], [36 x i8]* %name64, i32 0, i32 0
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.12.61, i32 0, i32 0), i8* %arraydecay65)
  %v4l2_dev67 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name68 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev67, i32 0, i32 4
  %arraydecay69 = getelementptr inbounds [36 x i8], [36 x i8]* %name68, i32 0, i32 0
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([94 x i8], [94 x i8]* @.str.13.62, i32 0, i32 0), i8* %arraydecay69)
  %v4l2_dev71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name72 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev71, i32 0, i32 4
  %arraydecay73 = getelementptr inbounds [36 x i8], [36 x i8]* %name72, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.63, i32 0, i32 0), i8* %arraydecay73)
  %v4l2_dev75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name76 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev75, i32 0, i32 4
  %arraydecay77 = getelementptr inbounds [36 x i8], [36 x i8]* %name76, i32 0, i32 0
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.15.64, i32 0, i32 0), i8* %arraydecay77)
  br label %free_mem

if.end79:                                         ; preds = %do.end56
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 4
  %11 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool80 = icmp ne i8 %11, 0
  br i1 %tobool80, label %do.body82, label %if.else

do.body82:                                        ; preds = %if.end79
  %12 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and83 = and i32 2, %12
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.then85, label %do.end94

if.then85:                                        ; preds = %do.body82
  %v4l2_dev86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name87 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev86, i32 0, i32 4
  %arraydecay88 = getelementptr inbounds [36 x i8], [36 x i8]* %name87, i32 0, i32 0
  %base_addr89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %13 = load i64, i64* %base_addr89, align 8, !tbaa !233
  %add90 = add i64 %13, 16777216
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11.60, i32 0, i32 0), i8* %arraydecay88, i64 %add90, i32 8388608)
  br label %do.end94

do.end94:                                         ; preds = %if.then85, %do.body82
  %base_addr95 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %14 = load i64, i64* %base_addr95, align 8, !tbaa !233
  %add96 = add i64 %14, 16777216
  %call97 = call i8* @ioremap_nocache(i64 %add96, i64 8388608)
  %dec_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 16
  store i8* %call97, i8** %dec_mem, align 8, !tbaa !235
  %dec_mem98 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 16
  %15 = load i8*, i8** %dec_mem98, align 8, !tbaa !235
  %tobool99 = icmp ne i8* %15, null
  br i1 %tobool99, label %do.body121, label %if.then100

if.then100:                                       ; preds = %do.end94
  %v4l2_dev101 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name102 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev101, i32 0, i32 4
  %arraydecay103 = getelementptr inbounds [36 x i8], [36 x i8]* %name102, i32 0, i32 0
  %call104 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16.65, i32 0, i32 0), i8* %arraydecay103)
  %v4l2_dev105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name106 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev105, i32 0, i32 4
  %arraydecay107 = getelementptr inbounds [36 x i8], [36 x i8]* %name106, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.17.66, i32 0, i32 0), i8* %arraydecay107)
  %v4l2_dev109 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name110 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev109, i32 0, i32 4
  %arraydecay111 = getelementptr inbounds [36 x i8], [36 x i8]* %name110, i32 0, i32 0
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.63, i32 0, i32 0), i8* %arraydecay111)
  %v4l2_dev113 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name114 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev113, i32 0, i32 4
  %arraydecay115 = getelementptr inbounds [36 x i8], [36 x i8]* %name114, i32 0, i32 0
  %call116 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.15.64, i32 0, i32 0), i8* %arraydecay115)
  br label %free_mem

if.else:                                          ; preds = %if.end79
  %enc_mem118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 15
  %16 = load i8*, i8** %enc_mem118, align 8, !tbaa !234
  %dec_mem119 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 16
  store i8* %16, i8** %dec_mem119, align 8, !tbaa !235
  br label %do.body121

do.body121:                                       ; preds = %if.else, %do.end94
  %17 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and122 = and i32 2, %17
  %tobool123 = icmp ne i32 %and122, 0
  br i1 %tobool123, label %if.then124, label %do.end133

if.then124:                                       ; preds = %do.body121
  %v4l2_dev125 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name126 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev125, i32 0, i32 4
  %arraydecay127 = getelementptr inbounds [36 x i8], [36 x i8]* %name126, i32 0, i32 0
  %base_addr128 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %18 = load i64, i64* %base_addr128, align 8, !tbaa !233
  %add129 = add i64 %18, 33554432
  %call130 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.11.60, i32 0, i32 0), i8* %arraydecay127, i64 %add129, i32 65536)
  br label %do.end133

do.end133:                                        ; preds = %if.then124, %do.body121
  %base_addr134 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %19 = load i64, i64* %base_addr134, align 8, !tbaa !233
  %add135 = add i64 %19, 33554432
  %call136 = call i8* @ioremap_nocache(i64 %add135, i64 65536)
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  store i8* %call136, i8** %reg_mem, align 8, !tbaa !171
  %reg_mem137 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  %20 = load i8*, i8** %reg_mem137, align 8, !tbaa !171
  %tobool138 = icmp ne i8* %20, null
  br i1 %tobool138, label %if.end156, label %if.then139

if.then139:                                       ; preds = %do.end133
  %v4l2_dev140 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name141 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev140, i32 0, i32 4
  %arraydecay142 = getelementptr inbounds [36 x i8], [36 x i8]* %name141, i32 0, i32 0
  %call143 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.18.67, i32 0, i32 0), i8* %arraydecay142)
  %v4l2_dev144 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name145 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev144, i32 0, i32 4
  %arraydecay146 = getelementptr inbounds [36 x i8], [36 x i8]* %name145, i32 0, i32 0
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([95 x i8], [95 x i8]* @.str.19.68, i32 0, i32 0), i8* %arraydecay146)
  %v4l2_dev148 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name149 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev148, i32 0, i32 4
  %arraydecay150 = getelementptr inbounds [36 x i8], [36 x i8]* %name149, i32 0, i32 0
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.14.63, i32 0, i32 0), i8* %arraydecay150)
  %v4l2_dev152 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name153 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev152, i32 0, i32 4
  %arraydecay154 = getelementptr inbounds [36 x i8], [36 x i8]* %name153, i32 0, i32 0
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([89 x i8], [89 x i8]* @.str.15.64, i32 0, i32 0), i8* %arraydecay154)
  br label %free_io

if.end156:                                        ; preds = %do.end133
  %call157 = call i32 bitcast (i32 (%struct.ivtv*)* @ivtv_gpio_init to i32 (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %0)
  %tobool158 = icmp ne i32 %call157, 0
  br i1 %tobool158, label %free_io, label %do.body161

do.body161:                                       ; preds = %if.end156
  %21 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and162 = and i32 2, %21
  %tobool163 = icmp ne i32 %and162, 0
  br i1 %tobool163, label %if.then164, label %do.end171

if.then164:                                       ; preds = %do.body161
  %v4l2_dev165 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name166 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev165, i32 0, i32 4
  %arraydecay167 = getelementptr inbounds [36 x i8], [36 x i8]* %name166, i32 0, i32 0
  %call168 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.20.69, i32 0, i32 0), i8* %arraydecay167)
  br label %do.end171

do.end171:                                        ; preds = %if.then164, %do.body161
  %call172 = call i32 @init_ivtv_i2c(%struct.ivtv.1060* %0)
  %tobool173 = icmp ne i32 %call172, 0
  br i1 %tobool173, label %if.then174, label %if.end179

if.then174:                                       ; preds = %do.end171
  %v4l2_dev175 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name176 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev175, i32 0, i32 4
  %arraydecay177 = getelementptr inbounds [36 x i8], [36 x i8]* %name176, i32 0, i32 0
  %call178 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.21.70, i32 0, i32 0), i8* %arraydecay177)
  br label %free_io

if.end179:                                        ; preds = %do.end171
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %22 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %hw_all = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %22, i32 0, i32 8
  %23 = load i32, i32* %hw_all, align 4, !tbaa !158
  %and180 = and i32 %23, 128
  %tobool181 = icmp ne i32 %and180, 0
  br i1 %tobool181, label %if.then182, label %if.end183

if.then182:                                       ; preds = %if.end179
  call void @ivtv_process_eeprom(%struct.ivtv.1060* %0)
  br label %if.end183

if.end183:                                        ; preds = %if.then182, %if.end179
  %card184 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %24 = load %struct.ivtv_card*, %struct.ivtv_card** %card184, align 8, !tbaa !2
  %comment = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %24, i32 0, i32 2
  %25 = load i8*, i8** %comment, align 8, !tbaa !236
  %tobool185 = icmp ne i8* %25, null
  br i1 %tobool185, label %if.then186, label %if.end193

if.then186:                                       ; preds = %if.end183
  %v4l2_dev187 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name188 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev187, i32 0, i32 4
  %arraydecay189 = getelementptr inbounds [36 x i8], [36 x i8]* %name188, i32 0, i32 0
  %card190 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %26 = load %struct.ivtv_card*, %struct.ivtv_card** %card190, align 8, !tbaa !2
  %comment191 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %26, i32 0, i32 2
  %27 = load i8*, i8** %comment191, align 8, !tbaa !236
  %call192 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22.71, i32 0, i32 0), i8* %arraydecay189, i8* %27)
  br label %if.end193

if.end193:                                        ; preds = %if.then186, %if.end183
  %card194 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %28 = load %struct.ivtv_card*, %struct.ivtv_card** %card194, align 8, !tbaa !2
  %v4l2_capabilities = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %28, i32 0, i32 3
  %29 = load i32, i32* %v4l2_capabilities, align 8, !tbaa !168
  %cmp195 = icmp eq i32 %29, 0
  br i1 %cmp195, label %free_i2c, label %if.end198

if.end198:                                        ; preds = %if.end193
  %std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %30 = load i64, i64* %std, align 8, !tbaa !166
  %cmp199 = icmp eq i64 %30, 0
  br i1 %cmp199, label %if.then201, label %if.end203

if.then201:                                       ; preds = %if.end198
  %std202 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  store i64 4096, i64* %std202, align 8, !tbaa !166
  br label %if.end203

if.end203:                                        ; preds = %if.then201, %if.end198
  %options204 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options204, i32 0, i32 2
  %31 = load i32, i32* %tuner, align 8, !tbaa !237
  %cmp205 = icmp eq i32 %31, -1
  br i1 %cmp205, label %if.then207, label %if.end225

if.then207:                                       ; preds = %if.end203
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then207
  %i.0 = phi i32 [ 0, %if.then207 ], [ %inc, %for.inc ]
  %cmp208 = icmp slt i32 %i.0, 3
  br i1 %cmp208, label %for.body, label %if.end225

for.body:                                         ; preds = %for.cond
  %std210 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %32 = load i64, i64* %std210, align 8, !tbaa !166
  %card211 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %33 = load %struct.ivtv_card*, %struct.ivtv_card** %card211, align 8, !tbaa !2
  %tuners = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %33, i32 0, i32 23
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.load_weight], [3 x %struct.load_weight]* %tuners, i64 0, i64 %idxprom
  %std212 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %arrayidx, i32 0, i32 0
  %34 = load i64, i64* %std212, align 8, !tbaa !238
  %and213 = and i64 %32, %34
  %cmp214 = icmp eq i64 %and213, 0
  br i1 %cmp214, label %for.inc, label %if.end217

if.end217:                                        ; preds = %for.body
  %card218 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %35 = load %struct.ivtv_card*, %struct.ivtv_card** %card218, align 8, !tbaa !2
  %tuners219 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %35, i32 0, i32 23
  %idxprom220 = sext i32 %i.0 to i64
  %arrayidx221 = getelementptr inbounds [3 x %struct.load_weight], [3 x %struct.load_weight]* %tuners219, i64 0, i64 %idxprom220
  %tuner222 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %arrayidx221, i32 0, i32 1
  %36 = load i32, i32* %tuner222, align 8, !tbaa !240
  %options223 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner224 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options223, i32 0, i32 2
  store i32 %36, i32* %tuner224, align 8, !tbaa !237
  br label %if.end225

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

if.end225:                                        ; preds = %if.end217, %for.cond, %if.end203
  %options226 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner227 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options226, i32 0, i32 2
  %37 = load i32, i32* %tuner227, align 8, !tbaa !237
  %cmp228 = icmp eq i32 %37, -1
  br i1 %cmp228, label %land.lhs.true, label %if.end267

land.lhs.true:                                    ; preds = %if.end225
  %card230 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %38 = load %struct.ivtv_card*, %struct.ivtv_card** %card230, align 8, !tbaa !2
  %tuners231 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %38, i32 0, i32 23
  %arrayidx232 = getelementptr inbounds [3 x %struct.load_weight], [3 x %struct.load_weight]* %tuners231, i64 0, i64 0
  %std233 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %arrayidx232, i32 0, i32 0
  %39 = load i64, i64* %std233, align 8, !tbaa !238
  %tobool234 = icmp ne i64 %39, 0
  br i1 %tobool234, label %if.then235, label %if.end267

if.then235:                                       ; preds = %land.lhs.true
  %card236 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %40 = load %struct.ivtv_card*, %struct.ivtv_card** %card236, align 8, !tbaa !2
  %tuners237 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %40, i32 0, i32 23
  %arrayidx238 = getelementptr inbounds [3 x %struct.load_weight], [3 x %struct.load_weight]* %tuners237, i64 0, i64 0
  %std239 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %arrayidx238, i32 0, i32 0
  %41 = load i64, i64* %std239, align 8, !tbaa !238
  %std240 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  store i64 %41, i64* %std240, align 8, !tbaa !166
  %std241 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %42 = load i64, i64* %std241, align 8, !tbaa !166
  %and242 = and i64 %42, 255
  %tobool243 = icmp ne i64 %and242, 0
  %std245 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  br i1 %tobool243, label %if.then244, label %if.else246

if.then244:                                       ; preds = %if.then235
  store i64 15, i64* %std245, align 8, !tbaa !166
  br label %if.end260

if.else246:                                       ; preds = %if.then235
  %43 = load i64, i64* %std245, align 8, !tbaa !166
  %and248 = and i64 %43, 45056
  %tobool249 = icmp ne i64 %and248, 0
  %std251 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  br i1 %tobool249, label %if.then250, label %if.else252

if.then250:                                       ; preds = %if.else246
  store i64 4096, i64* %std251, align 8, !tbaa !166
  br label %if.end260

if.else252:                                       ; preds = %if.else246
  %44 = load i64, i64* %std251, align 8, !tbaa !166
  %and254 = and i64 %44, 16711680
  %tobool255 = icmp ne i64 %and254, 0
  br i1 %tobool255, label %if.then256, label %if.end260

if.then256:                                       ; preds = %if.else252
  %std257 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  store i64 4194304, i64* %std257, align 8, !tbaa !166
  br label %if.end260

if.end260:                                        ; preds = %if.then256, %if.else252, %if.then250, %if.then244
  %card261 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %45 = load %struct.ivtv_card*, %struct.ivtv_card** %card261, align 8, !tbaa !2
  %tuners262 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %45, i32 0, i32 23
  %arrayidx263 = getelementptr inbounds [3 x %struct.load_weight], [3 x %struct.load_weight]* %tuners262, i64 0, i64 0
  %tuner264 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %arrayidx263, i32 0, i32 1
  %46 = load i32, i32* %tuner264, align 8, !tbaa !240
  %options265 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner266 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options265, i32 0, i32 2
  store i32 %46, i32* %tuner266, align 8, !tbaa !237
  br label %if.end267

if.end267:                                        ; preds = %if.end260, %land.lhs.true, %if.end225
  %options268 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %radio = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options268, i32 0, i32 3
  %47 = load i32, i32* %radio, align 4, !tbaa !241
  %cmp269 = icmp eq i32 %47, -1
  br i1 %cmp269, label %if.then271, label %if.end278

if.then271:                                       ; preds = %if.end267
  %card272 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 1
  %48 = load %struct.ivtv_card*, %struct.ivtv_card** %card272, align 8, !tbaa !2
  %radio_input = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %48, i32 0, i32 11
  %audio_type = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %radio_input, i32 0, i32 0
  %49 = load i8, i8* %audio_type, align 4, !tbaa !242
  %conv273 = zext i8 %49 to i32
  %cmp274 = icmp ne i32 %conv273, 0
  %conv275 = zext i1 %cmp274 to i32
  %options276 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %radio277 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options276, i32 0, i32 3
  store i32 %conv275, i32* %radio277, align 4, !tbaa !241
  br label %if.end278

if.end278:                                        ; preds = %if.then271, %if.end267
  call void @ivtv_init_struct2(%struct.ivtv.1060* %0)
  call void @ivtv_load_and_init_modules(%struct.ivtv.1060* %0)
  %std279 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %50 = load i64, i64* %std279, align 8, !tbaa !166
  %and280 = and i64 %50, 63744
  %tobool281 = icmp ne i64 %and280, 0
  br i1 %tobool281, label %if.then282, label %if.else283

if.then282:                                       ; preds = %if.end278
  %is_60hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 28
  store i8 1, i8* %is_60hz, align 1, !tbaa !134
  %is_out_60hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 30
  store i8 1, i8* %is_out_60hz, align 1, !tbaa !243
  br label %if.end284

if.else283:                                       ; preds = %if.end278
  %is_50hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 27
  store i8 1, i8* %is_50hz, align 8, !tbaa !137
  %is_out_50hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 29
  store i8 1, i8* %is_out_50hz, align 2, !tbaa !244
  br label %if.end284

if.end284:                                        ; preds = %if.else283, %if.then282
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %osd_full_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 47
  store i32 720, i32* %osd_full_w, align 4, !tbaa !245
  %is_out_50hz285 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 29
  %51 = load i8, i8* %is_out_50hz285, align 2, !tbaa !244
  %conv286 = zext i8 %51 to i32
  %tobool287 = icmp ne i32 %conv286, 0
  %52 = zext i1 %tobool287 to i64
  %cond = select i1 %tobool287, i32 576, i32 480
  %yuv_info288 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %osd_full_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info288, i32 0, i32 48
  store i32 %cond, i32* %osd_full_h, align 8, !tbaa !246
  %yuv_info289 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %osd_full_w290 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info289, i32 0, i32 47
  %53 = load i32, i32* %osd_full_w290, align 4, !tbaa !245
  %yuv_info291 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %v4l2_src_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info291, i32 0, i32 67
  store i32 %53, i32* %v4l2_src_w, align 8, !tbaa !247
  %yuv_info292 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %osd_full_h293 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info292, i32 0, i32 48
  %54 = load i32, i32* %osd_full_h293, align 8, !tbaa !246
  %yuv_info294 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 90
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info294, i32 0, i32 68
  store i32 %54, i32* %v4l2_src_h, align 4, !tbaa !248
  %cxhdl295 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %is_50hz296 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 27
  %55 = load i8, i8* %is_50hz296, align 8, !tbaa !137
  %conv297 = zext i8 %55 to i32
  call void @cx2341x_handler_set_50hz(%struct.cx2341x_handler* %cxhdl295, i32 %conv297)
  %stream_buf_size = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx298 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size, i64 0, i64 0
  store i32 32768, i32* %arrayidx298, align 8, !tbaa !120
  %stream_buf_size299 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx300 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size299, i64 0, i64 3
  store i32 4608, i32* %arrayidx300, align 4, !tbaa !120
  %stream_buf_size301 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx302 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size301, i64 0, i64 5
  store i32 65536, i32* %arrayidx302, align 4, !tbaa !120
  %stream_buf_size303 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx304 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size303, i64 0, i64 8
  store i32 65536, i32* %arrayidx304, align 8, !tbaa !120
  %stream_buf_size305 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx306 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size305, i64 0, i64 1
  store i32 32768, i32* %arrayidx306, align 4, !tbaa !120
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %raw_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 8
  store i32 1456, i32* %raw_size, align 4, !tbaa !249
  %vbi307 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %raw_size308 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi307, i32 0, i32 8
  %56 = load i32, i32* %raw_size308, align 4, !tbaa !249
  %is_60hz309 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 28
  %57 = load i8, i8* %is_60hz309, align 1, !tbaa !134
  %conv310 = zext i8 %57 to i32
  %tobool311 = icmp ne i32 %conv310, 0
  %58 = zext i1 %tobool311 to i64
  %cond312 = select i1 %tobool311, i32 24, i32 36
  %mul = mul i32 %56, %cond312
  %div = udiv i32 %mul, 2
  %stream_buf_size313 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx314 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size313, i64 0, i64 2
  store i32 %div, i32* %arrayidx314, align 8, !tbaa !120
  %stream_buf_size315 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 41
  %arrayidx316 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size315, i64 0, i64 6
  store i32 2304, i32* %arrayidx316, align 8, !tbaa !120
  %options317 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %radio318 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options317, i32 0, i32 3
  %59 = load i32, i32* %radio318, align 4, !tbaa !241
  %cmp319 = icmp sgt i32 %59, 0
  br i1 %cmp319, label %if.then321, label %if.end322

if.then321:                                       ; preds = %if.end284
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 8
  %60 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %or = or i32 %60, 262144
  store i32 %or, i32* %v4l2_cap, align 4, !tbaa !172
  br label %if.end322

if.end322:                                        ; preds = %if.then321, %if.end284
  %options323 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner324 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options323, i32 0, i32 2
  %61 = load i32, i32* %tuner324, align 8, !tbaa !237
  %cmp325 = icmp sgt i32 %61, -1
  br i1 %cmp325, label %if.then327, label %if.end424

if.then327:                                       ; preds = %if.end322
  %62 = bitcast %struct.tuner_setup* %setup to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %62) #8
  %addr = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 0
  store i16 255, i16* %addr, align 8, !tbaa !250
  %options328 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner329 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options328, i32 0, i32 2
  %63 = load i32, i32* %tuner329, align 8, !tbaa !237
  %type = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 1
  store i32 %63, i32* %type, align 4, !tbaa !252
  %mode_mask = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 2
  store i32 4, i32* %mode_mask, align 8, !tbaa !253
  %options330 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %radio331 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options330, i32 0, i32 3
  %64 = load i32, i32* %radio331, align 4, !tbaa !241
  %cmp332 = icmp sgt i32 %64, 0
  br i1 %cmp332, label %if.then334, label %if.end337

if.then334:                                       ; preds = %if.then327
  %mode_mask335 = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 2
  %65 = load i32, i32* %mode_mask335, align 8, !tbaa !253
  %or336 = or i32 %65, 2
  store i32 %or336, i32* %mode_mask335, align 8, !tbaa !253
  br label %if.end337

if.end337:                                        ; preds = %if.then334, %if.then327
  %type338 = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 1
  %66 = load i32, i32* %type338, align 4, !tbaa !252
  %cmp339 = icmp eq i32 %66, 71
  %67 = zext i1 %cmp339 to i64
  %cond341 = select i1 %cmp339, i32 (i8*, i32, i32, i32)* @ivtv_reset_tuner_gpio, i32 (i8*, i32, i32, i32)* null
  %tuner_callback = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 4
  store i32 (i8*, i32, i32, i32)* %cond341, i32 (i8*, i32, i32, i32)** %tuner_callback, align 8, !tbaa !254
  %v4l2_dev344 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev344, i32 0, i32 2
  br label %for.cond345

for.cond345:                                      ; preds = %for.inc364, %if.end337
  %list366.sink = phi %struct.list_head* [ %list366, %for.inc364 ], [ %subdevs, %if.end337 ]
  %next367 = getelementptr inbounds %struct.list_head, %struct.list_head* %list366.sink, i32 0, i32 0
  %68 = load %struct.list_head*, %struct.list_head** %next367, align 8, !tbaa !86
  %69 = bitcast %struct.list_head* %68 to i8*
  %add.ptr369 = getelementptr inbounds i8, i8* %69, i64 -128
  %70 = bitcast i8* %add.ptr369 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %70, i32 0, i32 1
  %v4l2_dev346 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs347 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev346, i32 0, i32 2
  %cmp348 = icmp ne %struct.list_head* %list, %subdevs347
  br i1 %cmp348, label %for.body350, label %do.end374

for.body350:                                      ; preds = %for.cond345
  %ops351 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %70, i32 0, i32 6
  %71 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops351, align 8, !tbaa !79
  %tuner352 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %71, i32 0, i32 1
  %72 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner352, align 8, !tbaa !255
  %tobool353 = icmp ne %struct.v4l2_subdev_tuner_ops* %72, null
  br i1 %tobool353, label %land.lhs.true354, label %for.inc364

land.lhs.true354:                                 ; preds = %for.body350
  %ops355 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %70, i32 0, i32 6
  %73 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops355, align 8, !tbaa !79
  %tuner356 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %73, i32 0, i32 1
  %74 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner356, align 8, !tbaa !255
  %s_type_addr = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %74, i32 0, i32 8
  %75 = load i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)** %s_type_addr, align 8, !tbaa !256
  %tobool357 = icmp ne i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)* %75, null
  br i1 %tobool357, label %if.then358, label %for.inc364

if.then358:                                       ; preds = %land.lhs.true354
  %ops359 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %70, i32 0, i32 6
  %76 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops359, align 8, !tbaa !79
  %tuner360 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %76, i32 0, i32 1
  %77 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner360, align 8, !tbaa !255
  %s_type_addr361 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %77, i32 0, i32 8
  %78 = load i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)** %s_type_addr361, align 8, !tbaa !256
  %call362 = call i32 %78(%struct.v4l2_subdev* %70, %struct.tuner_setup* %setup)
  br label %for.inc364

for.inc364:                                       ; preds = %if.then358, %land.lhs.true354, %for.body350
  %list366 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %70, i32 0, i32 1
  br label %for.cond345

do.end374:                                        ; preds = %for.cond345
  %type375 = getelementptr inbounds %struct.tuner_setup, %struct.tuner_setup* %setup, i32 0, i32 1
  %79 = load i32, i32* %type375, align 4, !tbaa !252
  %cmp376 = icmp eq i32 %79, 71
  br i1 %cmp376, label %if.then378, label %if.end423

if.then378:                                       ; preds = %do.end374
  %80 = bitcast %struct.v4l2_priv_tun_config* %cfg to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %80) #8
  %tuner379 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %cfg, i32 0, i32 0
  %options380 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 18
  %tuner381 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options380, i32 0, i32 2
  %81 = load i32, i32* %tuner381, align 8, !tbaa !237
  store i32 %81, i32* %tuner379, align 8, !tbaa !258
  %priv382 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %cfg, i32 0, i32 1
  store i8* bitcast (%struct.xc2028_ctrl* @ivtv_probe.ctrl to i8*), i8** %priv382, align 8, !tbaa !260
  %v4l2_dev387 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs388 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev387, i32 0, i32 2
  br label %for.cond392

for.cond392:                                      ; preds = %for.inc412, %if.then378
  %list414.sink = phi %struct.list_head* [ %list414, %for.inc412 ], [ %subdevs388, %if.then378 ]
  %next415 = getelementptr inbounds %struct.list_head, %struct.list_head* %list414.sink, i32 0, i32 0
  %82 = load %struct.list_head*, %struct.list_head** %next415, align 8, !tbaa !86
  %83 = bitcast %struct.list_head* %82 to i8*
  %add.ptr417 = getelementptr inbounds i8, i8* %83, i64 -128
  %84 = bitcast i8* %add.ptr417 to %struct.v4l2_subdev*
  %list393 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %84, i32 0, i32 1
  %v4l2_dev394 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs395 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev394, i32 0, i32 2
  %cmp396 = icmp ne %struct.list_head* %list393, %subdevs395
  br i1 %cmp396, label %for.body398, label %do.end422

for.body398:                                      ; preds = %for.cond392
  %ops399 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %84, i32 0, i32 6
  %85 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops399, align 8, !tbaa !79
  %tuner400 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %85, i32 0, i32 1
  %86 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner400, align 8, !tbaa !255
  %tobool401 = icmp ne %struct.v4l2_subdev_tuner_ops* %86, null
  br i1 %tobool401, label %land.lhs.true402, label %for.inc412

land.lhs.true402:                                 ; preds = %for.body398
  %ops403 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %84, i32 0, i32 6
  %87 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops403, align 8, !tbaa !79
  %tuner404 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %87, i32 0, i32 1
  %88 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner404, align 8, !tbaa !255
  %s_config = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %88, i32 0, i32 9
  %89 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)** %s_config, align 8, !tbaa !261
  %tobool405 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)* %89, null
  br i1 %tobool405, label %if.then406, label %for.inc412

if.then406:                                       ; preds = %land.lhs.true402
  %ops407 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %84, i32 0, i32 6
  %90 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops407, align 8, !tbaa !79
  %tuner408 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %90, i32 0, i32 1
  %91 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner408, align 8, !tbaa !255
  %s_config409 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %91, i32 0, i32 9
  %92 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)** %s_config409, align 8, !tbaa !261
  %call410 = call i32 %92(%struct.v4l2_subdev* %84, %struct.v4l2_priv_tun_config* %cfg)
  br label %for.inc412

for.inc412:                                       ; preds = %if.then406, %land.lhs.true402, %for.body398
  %list414 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %84, i32 0, i32 1
  br label %for.cond392

do.end422:                                        ; preds = %for.cond392
  %93 = bitcast %struct.v4l2_priv_tun_config* %cfg to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %93) #8
  br label %if.end423

if.end423:                                        ; preds = %do.end422, %do.end374
  %94 = bitcast %struct.tuner_setup* %setup to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %94) #8
  br label %if.end424

if.end424:                                        ; preds = %if.end423, %if.end322
  %std425 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %95 = load i64, i64* %std425, align 8, !tbaa !166
  %tuner_std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 10
  store i64 %95, i64* %tuner_std, align 8, !tbaa !106
  %v4l2_cap426 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 8
  %96 = load i32, i32* %v4l2_cap426, align 4, !tbaa !172
  %and427 = and i32 %96, 2
  %tobool428 = icmp ne i32 %and427, 0
  br i1 %tobool428, label %if.then429, label %if.end526

if.then429:                                       ; preds = %if.end424
  %v4l2_dev431 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %ctrl_handler432 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev431, i32 0, i32 6
  %97 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %ctrl_handler432, align 8, !tbaa !229
  %call433 = call %struct.v4l2_ctrl* @v4l2_ctrl_new_std(%struct.v4l2_ctrl_handler* %97, %struct.v4l2_ctrl_ops* @ivtv_hdl_out_ops, i32 10029535, i64 0, i64 0, i64 0, i64 0)
  %98 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 21
  %ctrl_pts = getelementptr inbounds %struct.anon.88, %struct.anon.88* %98, i32 0, i32 0
  store %struct.v4l2_ctrl* %call433, %struct.v4l2_ctrl** %ctrl_pts, align 8, !tbaa !141
  %call434 = call %struct.v4l2_ctrl* @v4l2_ctrl_new_std(%struct.v4l2_ctrl_handler* %97, %struct.v4l2_ctrl_ops* @ivtv_hdl_out_ops, i32 10029536, i64 0, i64 0, i64 0, i64 0)
  %99 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 21
  %ctrl_frame = getelementptr inbounds %struct.anon.88, %struct.anon.88* %99, i32 0, i32 1
  store %struct.v4l2_ctrl* %call434, %struct.v4l2_ctrl** %ctrl_frame, align 8, !tbaa !143
  %call435 = call %struct.v4l2_ctrl* @v4l2_ctrl_new_std_menu(%struct.v4l2_ctrl_handler* %97, %struct.v4l2_ctrl_ops* @ivtv_hdl_out_ops, i32 10029424, i8 zeroext 5, i64 1, i8 zeroext 1)
  %100 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 22
  %ctrl_audio_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %100, i32 0, i32 0
  store %struct.v4l2_ctrl* %call435, %struct.v4l2_ctrl** %ctrl_audio_playback, align 8, !tbaa !144
  %call436 = call %struct.v4l2_ctrl* @v4l2_ctrl_new_std_menu(%struct.v4l2_ctrl_handler* %97, %struct.v4l2_ctrl_ops* @ivtv_hdl_out_ops, i32 10029425, i8 zeroext 5, i64 1, i8 zeroext 2)
  %101 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 22
  %ctrl_audio_multilingual_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %101, i32 0, i32 1
  store %struct.v4l2_ctrl* %call436, %struct.v4l2_ctrl** %ctrl_audio_multilingual_playback, align 8, !tbaa !147
  %error = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %97, i32 0, i32 9
  %102 = load i32, i32* %error, align 4, !tbaa !262
  %tobool437 = icmp ne i32 %102, 0
  br i1 %tobool437, label %if.then438, label %if.end440

if.then438:                                       ; preds = %if.then429
  %error439 = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %97, i32 0, i32 9
  %103 = load i32, i32* %error439, align 4, !tbaa !262
  br label %NodeBlock

if.end440:                                        ; preds = %if.then429
  %104 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 21
  %ctrl_pts441 = getelementptr inbounds %struct.anon.88, %struct.anon.88* %104, i32 0, i32 0
  call void @v4l2_ctrl_cluster(i32 2, %struct.v4l2_ctrl** %ctrl_pts441)
  %105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 22
  %ctrl_audio_playback442 = getelementptr inbounds %struct.anon.88, %struct.anon.88* %105, i32 0, i32 0
  call void @v4l2_ctrl_cluster(i32 2, %struct.v4l2_ctrl** %ctrl_audio_playback442)
  %v4l2_dev447 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs448 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev447, i32 0, i32 2
  br label %for.cond452

for.cond452:                                      ; preds = %for.inc472, %if.end440
  %list474.sink = phi %struct.list_head* [ %list474, %for.inc472 ], [ %subdevs448, %if.end440 ]
  %next475 = getelementptr inbounds %struct.list_head, %struct.list_head* %list474.sink, i32 0, i32 0
  %106 = load %struct.list_head*, %struct.list_head** %next475, align 8, !tbaa !86
  %107 = bitcast %struct.list_head* %106 to i8*
  %add.ptr477 = getelementptr inbounds i8, i8* %107, i64 -128
  %108 = bitcast i8* %add.ptr477 to %struct.v4l2_subdev*
  %list453 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %108, i32 0, i32 1
  %v4l2_dev454 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs455 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev454, i32 0, i32 2
  %cmp456 = icmp ne %struct.list_head* %list453, %subdevs455
  br i1 %cmp456, label %for.body458, label %do.body485

for.body458:                                      ; preds = %for.cond452
  %ops459 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %108, i32 0, i32 6
  %109 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops459, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %109, i32 0, i32 3
  %110 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool460 = icmp ne %struct.v4l2_subdev_video_ops* %110, null
  br i1 %tobool460, label %land.lhs.true461, label %for.inc472

land.lhs.true461:                                 ; preds = %for.body458
  %ops462 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %108, i32 0, i32 6
  %111 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops462, align 8, !tbaa !79
  %video463 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %111, i32 0, i32 3
  %112 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video463, align 8, !tbaa !91
  %s_std_output = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %112, i32 0, i32 4
  %113 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std_output, align 8, !tbaa !263
  %tobool464 = icmp ne i32 (%struct.v4l2_subdev*, i64)* %113, null
  br i1 %tobool464, label %if.then465, label %for.inc472

if.then465:                                       ; preds = %land.lhs.true461
  %ops466 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %108, i32 0, i32 6
  %114 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops466, align 8, !tbaa !79
  %video467 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %114, i32 0, i32 3
  %115 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video467, align 8, !tbaa !91
  %s_std_output468 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %115, i32 0, i32 4
  %116 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std_output468, align 8, !tbaa !263
  %std469 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 35
  %117 = load i64, i64* %std469, align 8, !tbaa !166
  %call470 = call i32 %116(%struct.v4l2_subdev* %108, i64 %117)
  br label %for.inc472

for.inc472:                                       ; preds = %if.then465, %land.lhs.true461, %for.body458
  %list474 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %108, i32 0, i32 1
  br label %for.cond452

do.body485:                                       ; preds = %for.cond452
  %v4l2_dev487 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs488 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev487, i32 0, i32 2
  br label %for.cond492

for.cond492:                                      ; preds = %for.inc515, %do.body485
  %list517.sink = phi %struct.list_head* [ %list517, %for.inc515 ], [ %subdevs488, %do.body485 ]
  %next518 = getelementptr inbounds %struct.list_head, %struct.list_head* %list517.sink, i32 0, i32 0
  %118 = load %struct.list_head*, %struct.list_head** %next518, align 8, !tbaa !86
  %119 = bitcast %struct.list_head* %118 to i8*
  %add.ptr520 = getelementptr inbounds i8, i8* %119, i64 -128
  %120 = bitcast i8* %add.ptr520 to %struct.v4l2_subdev*
  %list493 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 1
  %v4l2_dev494 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %subdevs495 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev494, i32 0, i32 2
  %cmp496 = icmp ne %struct.list_head* %list493, %subdevs495
  br i1 %cmp496, label %for.body498, label %NodeBlock

for.body498:                                      ; preds = %for.cond492
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 10
  %121 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and499 = and i32 %121, 4
  %tobool500 = icmp ne i32 %and499, 0
  br i1 %tobool500, label %land.lhs.true501, label %for.inc515

land.lhs.true501:                                 ; preds = %for.body498
  %ops502 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 6
  %122 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops502, align 8, !tbaa !79
  %video503 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %122, i32 0, i32 3
  %123 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video503, align 8, !tbaa !91
  %tobool504 = icmp ne %struct.v4l2_subdev_video_ops* %123, null
  br i1 %tobool504, label %land.lhs.true505, label %for.inc515

land.lhs.true505:                                 ; preds = %land.lhs.true501
  %ops506 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 6
  %124 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops506, align 8, !tbaa !79
  %video507 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %124, i32 0, i32 3
  %125 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video507, align 8, !tbaa !91
  %s_stream = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %125, i32 0, i32 10
  %126 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream, align 8, !tbaa !169
  %tobool508 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %126, null
  br i1 %tobool508, label %if.then509, label %for.inc515

if.then509:                                       ; preds = %land.lhs.true505
  %ops510 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 6
  %127 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops510, align 8, !tbaa !79
  %video511 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %127, i32 0, i32 3
  %128 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video511, align 8, !tbaa !91
  %s_stream512 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %128, i32 0, i32 10
  %129 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream512, align 8, !tbaa !169
  %call513 = call i32 %129(%struct.v4l2_subdev* %120, i32 0)
  br label %for.inc515

for.inc515:                                       ; preds = %if.then509, %land.lhs.true505, %land.lhs.true501, %for.body498
  %list517 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %120, i32 0, i32 1
  br label %for.cond492

NodeBlock:                                        ; preds = %for.cond492, %if.then438
  %cleanup.dest.slot.0 = phi i32 [ 16, %if.then438 ], [ 0, %for.cond492 ]
  %retval1.0 = phi i32 [ %103, %if.then438 ], [ %call157, %for.cond492 ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 16
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest.slot.0, 16
  br i1 %SwitchLeaf2, label %free_i2c, label %cleanup582

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end526, label %cleanup582

if.end526:                                        ; preds = %LeafBlock, %if.end424
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 -1)
  %pdev527 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %130 = load %struct.pci_dev*, %struct.pci_dev** %pdev527, align 8, !tbaa !226
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %130, i32 0, i32 37
  %131 = load i32, i32* %irq, align 4, !tbaa !264
  %v4l2_dev528 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name529 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev528, i32 0, i32 4
  %arraydecay530 = getelementptr inbounds [36 x i8], [36 x i8]* %name529, i32 0, i32 0
  %132 = bitcast %struct.ivtv.1060* %0 to i8*
  %call531 = call i32 @request_irq(i32 %131, i32 (i32, i8*)* @ivtv_irq_handler, i64 128, i8* %arraydecay530, i8* %132)
  %tobool532 = icmp ne i32 %call531, 0
  br i1 %tobool532, label %if.then533, label %if.end538

if.then533:                                       ; preds = %if.end526
  %v4l2_dev534 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name535 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev534, i32 0, i32 4
  %arraydecay536 = getelementptr inbounds [36 x i8], [36 x i8]* %name535, i32 0, i32 0
  %call537 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.24.72, i32 0, i32 0), i8* %arraydecay536, i32 %call531)
  br label %free_i2c

if.end538:                                        ; preds = %if.end526
  %call539 = call i32 @ivtv_streams_setup(%struct.ivtv.1060* %0)
  %tobool540 = icmp ne i32 %call539, 0
  br i1 %tobool540, label %if.then541, label %if.end546

if.then541:                                       ; preds = %if.end538
  %v4l2_dev542 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name543 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev542, i32 0, i32 4
  %arraydecay544 = getelementptr inbounds [36 x i8], [36 x i8]* %name543, i32 0, i32 0
  %call545 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.25.73, i32 0, i32 0), i8* %arraydecay544, i32 %call539)
  br label %free_irq

if.end546:                                        ; preds = %if.end538
  %call547 = call i32 @ivtv_streams_register(%struct.ivtv.1060* %0)
  %tobool548 = icmp ne i32 %call547, 0
  %v4l2_dev550 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name551 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev550, i32 0, i32 4
  %arraydecay552 = getelementptr inbounds [36 x i8], [36 x i8]* %name551, i32 0, i32 0
  br i1 %tobool548, label %if.then549, label %if.end554

if.then549:                                       ; preds = %if.end546
  %call553 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26.74, i32 0, i32 0), i8* %arraydecay552, i32 %call547)
  call void @ivtv_streams_cleanup(%struct.ivtv.1060* %0)
  br label %free_irq

if.end554:                                        ; preds = %if.end546
  %card_name = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 2
  %133 = load i8*, i8** %card_name, align 8, !tbaa !267
  %call558 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27.75, i32 0, i32 0), i8* %arraydecay552, i8* %133)
  call void @request_modules(%struct.ivtv.1060* %0)
  br label %cleanup582

free_irq:                                         ; preds = %if.then549, %if.then541
  %retval1.1 = phi i32 [ %call539, %if.then541 ], [ %call547, %if.then549 ]
  %pdev559 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %134 = load %struct.pci_dev*, %struct.pci_dev** %pdev559, align 8, !tbaa !226
  %irq560 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %134, i32 0, i32 37
  %135 = load i32, i32* %irq560, align 4, !tbaa !264
  %136 = bitcast %struct.ivtv.1060* %0 to i8*
  call void @free_irq(i32 %135, i8* %136)
  br label %free_i2c

free_i2c:                                         ; preds = %free_irq, %if.then533, %LeafBlock1, %if.end193
  %retval1.2 = phi i32 [ %call531, %if.then533 ], [ %retval1.1, %free_irq ], [ %retval1.0, %LeafBlock1 ], [ -19, %if.end193 ]
  %cxhdl561 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  %hdl562 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl561, i32 0, i32 6
  call void @v4l2_ctrl_handler_free(%struct.v4l2_ctrl_handler* %hdl562)
  call void @exit_ivtv_i2c(%struct.ivtv.1060* %0)
  br label %free_io

free_io:                                          ; preds = %free_i2c, %if.then174, %if.end156, %if.then139
  %retval1.3 = phi i32 [ %call157, %if.then174 ], [ %retval1.2, %free_i2c ], [ -12, %if.then139 ], [ %call157, %if.end156 ]
  call void @ivtv_iounmap(%struct.ivtv.1060* %0)
  br label %free_mem

free_mem:                                         ; preds = %free_io, %if.then100, %if.then62, %do.end
  %retval1.4 = phi i32 [ %retval1.3, %free_io ], [ -12, %if.then100 ], [ -12, %if.then62 ], [ %call36, %do.end ]
  %base_addr563 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %137 = load i64, i64* %base_addr563, align 8, !tbaa !233
  call void @__release_region(%struct.resource* @iomem_resource, i64 %137, i64 8388608)
  %base_addr564 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %138 = load i64, i64* %base_addr564, align 8, !tbaa !233
  %add565 = add i64 %138, 33554432
  call void @__release_region(%struct.resource* @iomem_resource, i64 %add565, i64 65536)
  %has_cx23415566 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 4
  %139 = load i8, i8* %has_cx23415566, align 8, !tbaa !170
  %tobool567 = icmp ne i8 %139, 0
  br i1 %tobool567, label %if.then568, label %free_worker

if.then568:                                       ; preds = %free_mem
  %base_addr569 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 14
  %140 = load i64, i64* %base_addr569, align 8, !tbaa !233
  %add570 = add i64 %140, 16777216
  call void @__release_region(%struct.resource* @iomem_resource, i64 %add570, i64 8388608)
  br label %free_worker

free_worker:                                      ; preds = %if.then568, %free_mem, %do.end
  %retval1.5 = phi i32 [ %call36, %do.end ], [ %retval1.4, %if.then568 ], [ %retval1.4, %free_mem ]
  %irq_worker_task = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 51
  %141 = load %struct.task_struct*, %struct.task_struct** %irq_worker_task, align 8, !tbaa !268
  %call572 = call i32 @kthread_stop(%struct.task_struct* %141)
  br label %err

err:                                              ; preds = %free_worker, %if.end19, %if.end15, %if.end7
  %retval1.6 = phi i32 [ %retval1.5, %free_worker ], [ -19, %if.end7 ], [ -12, %if.end15 ], [ %call20, %if.end19 ]
  %cmp573 = icmp eq i32 %retval1.6, 0
  %.retval1.6 = select i1 %cmp573, i32 -19, i32 %retval1.6
  %v4l2_dev577 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name578 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev577, i32 0, i32 4
  %arraydecay579 = getelementptr inbounds [36 x i8], [36 x i8]* %name578, i32 0, i32 0
  %call580 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.28.76, i32 0, i32 0), i8* %arraydecay579, i32 %.retval1.6)
  %v4l2_dev581 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  call void @v4l2_device_unregister(%struct.v4l2_device* %v4l2_dev581)
  %142 = bitcast %struct.ivtv.1060* %0 to i8*
  call void @kfree(i8* %142)
  br label %cleanup582

cleanup582:                                       ; preds = %err, %if.end554, %LeafBlock, %LeafBlock1, %if.then6, %entry
  %retval.0 = phi i32 [ %call5, %if.then6 ], [ %.retval1.6, %err ], [ 0, %if.end554 ], [ -12, %entry ], [ undef, %LeafBlock1 ], [ undef, %LeafBlock ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_remove(%struct.pci_dev* %pdev) #0 {
entry:
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 35
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  %0 = bitcast i8* %call to %struct.v4l2_device*
  %call1 = call %struct.ivtv.1060* @to_ivtv(%struct.v4l2_device* %0)
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev2, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.103, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  call void @flush_request_modules(%struct.ivtv.1060* %call1)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 26
  %call4 = call zeroext i1 @constant_test_bit.45(i64 21, i64* %i_flags)
  br i1 %call4, label %do.body8, label %if.end78

do.body8:                                         ; preds = %do.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and9 = and i32 2, %2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %do.end18

if.then11:                                        ; preds = %do.body8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.104, i32 0, i32 0), i8* %arraydecay14)
  br label %do.end18

do.end18:                                         ; preds = %if.then11, %do.body8
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 43
  %call19 = call i32 @atomic_read.56(%struct.atomic_t* %capturing)
  %cmp = icmp sgt i32 %call19, 0
  br i1 %cmp, label %if.then20, label %do.body22

if.then20:                                        ; preds = %do.end18
  call void @ivtv_stop_all_captures(%struct.ivtv.1060* %call1)
  br label %do.body22

do.body22:                                        ; preds = %if.then20, %do.end18
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and23 = and i32 2, %3
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then25, label %do.end32

if.then25:                                        ; preds = %do.body22
  %v4l2_dev26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  %name27 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev26, i32 0, i32 4
  %arraydecay28 = getelementptr inbounds [36 x i8], [36 x i8]* %name27, i32 0, i32 0
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.105, i32 0, i32 0), i8* %arraydecay28)
  br label %do.end32

do.end32:                                         ; preds = %if.then25, %do.body22
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 8
  %4 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and33 = and i32 %4, 2
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %do.body37, label %if.end64

do.body37:                                        ; preds = %do.end32
  %v4l2_dev38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev38, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body37
  %list56.sink = phi %struct.list_head* [ %list56, %for.inc ], [ %subdevs, %do.body37 ]
  %next57 = getelementptr inbounds %struct.list_head, %struct.list_head* %list56.sink, i32 0, i32 0
  %5 = load %struct.list_head*, %struct.list_head** %next57, align 8, !tbaa !86
  %6 = bitcast %struct.list_head* %5 to i8*
  %add.ptr59 = getelementptr inbounds i8, i8* %6, i64 -128
  %7 = bitcast i8* %add.ptr59 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 1
  %v4l2_dev39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  %subdevs40 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev39, i32 0, i32 2
  %cmp41 = icmp ne %struct.list_head* %list, %subdevs40
  br i1 %cmp41, label %for.body, label %if.end64

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 10
  %8 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and42 = and i32 %8, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 3
  %10 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool44 = icmp ne %struct.v4l2_subdev_video_ops* %10, null
  br i1 %tobool44, label %land.lhs.true45, label %for.inc

land.lhs.true45:                                  ; preds = %land.lhs.true
  %ops46 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops46, align 8, !tbaa !79
  %video47 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 3
  %12 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video47, align 8, !tbaa !91
  %s_stream = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %12, i32 0, i32 10
  %13 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream, align 8, !tbaa !169
  %tobool48 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %13, null
  br i1 %tobool48, label %if.then49, label %for.inc

if.then49:                                        ; preds = %land.lhs.true45
  %ops50 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops50, align 8, !tbaa !79
  %video51 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 3
  %15 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video51, align 8, !tbaa !91
  %s_stream52 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %15, i32 0, i32 10
  %16 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream52, align 8, !tbaa !169
  %call53 = call i32 %16(%struct.v4l2_subdev* %7, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then49, %land.lhs.true45, %land.lhs.true, %for.body
  %list56 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 1
  br label %for.cond

if.end64:                                         ; preds = %for.cond, %do.end32
  %decoding = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 44
  %call65 = call i32 @atomic_read.56(%struct.atomic_t* %decoding)
  %cmp66 = icmp sgt i32 %call65, 0
  br i1 %cmp66, label %cond.true68, label %if.end77

cond.true68:                                      ; preds = %if.end64
  %i_flags69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 26
  %call70 = call zeroext i1 @constant_test_bit.45(i64 7, i64* %i_flags69)
  %. = select i1 %call70, i32 8, i32 5
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 42
  %idxprom = sext i32 %. to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %call76 = call i32 @ivtv_stop_v4l2_decode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 3, i64 0)
  br label %if.end77

if.end77:                                         ; preds = %cond.true68, %if.end64
  call void bitcast (void (%struct.ivtv*)* @ivtv_halt_firmware to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %call1)
  br label %if.end78

if.end78:                                         ; preds = %if.end77, %do.end
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %call1, i32 -1)
  %dma_timer = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 60
  %call79 = call i32 @del_timer_sync(%struct.timer_list* %dma_timer)
  %irq_worker = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 50
  call void @kthread_flush_worker(%struct.kthread_worker* %irq_worker)
  %irq_worker_task = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 51
  %17 = load %struct.task_struct*, %struct.task_struct** %irq_worker_task, align 8, !tbaa !268
  %call80 = call i32 @kthread_stop(%struct.task_struct* %17)
  call void @ivtv_streams_cleanup(%struct.ivtv.1060* %call1)
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_free to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %call1)
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 20
  %hdl = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 6
  call void @v4l2_ctrl_handler_free(%struct.v4l2_ctrl_handler* %hdl)
  call void @exit_ivtv_i2c(%struct.ivtv.1060* %call1)
  %pdev81 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 0
  %18 = load %struct.pci_dev*, %struct.pci_dev** %pdev81, align 8, !tbaa !226
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %18, i32 0, i32 37
  %19 = load i32, i32* %irq, align 4, !tbaa !264
  %20 = bitcast %struct.ivtv.1060* %call1 to i8*
  call void @free_irq(i32 %19, i8* %20)
  call void @ivtv_iounmap(%struct.ivtv.1060* %call1)
  %base_addr = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 14
  %21 = load i64, i64* %base_addr, align 8, !tbaa !233
  call void @__release_region(%struct.resource* @iomem_resource, i64 %21, i64 8388608)
  %base_addr82 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 14
  %22 = load i64, i64* %base_addr82, align 8, !tbaa !233
  %add = add i64 %22, 33554432
  call void @__release_region(%struct.resource* @iomem_resource, i64 %add, i64 65536)
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 4
  %23 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool83 = icmp ne i8 %23, 0
  br i1 %tobool83, label %if.then84, label %if.end87

if.then84:                                        ; preds = %if.end78
  %base_addr85 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 14
  %24 = load i64, i64* %base_addr85, align 8, !tbaa !233
  %add86 = add i64 %24, 16777216
  call void @__release_region(%struct.resource* @iomem_resource, i64 %add86, i64 8388608)
  br label %if.end87

if.end87:                                         ; preds = %if.then84, %if.end78
  %pdev88 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 0
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev88, align 8, !tbaa !226
  call void @pci_disable_device(%struct.pci_dev* %25)
  br label %for.cond89

for.cond89:                                       ; preds = %for.body91, %if.end87
  %i.0 = phi i32 [ 0, %if.end87 ], [ %inc, %for.body91 ]
  %cmp90 = icmp slt i32 %i.0, 32
  br i1 %cmp90, label %for.body91, label %for.end95

for.body91:                                       ; preds = %for.cond89
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 89
  %sliced_mpeg_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 26
  %idxprom92 = sext i32 %i.0 to i64
  %arrayidx93 = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data, i64 0, i64 %idxprom92
  %26 = load i8*, i8** %arrayidx93, align 8, !tbaa !86
  call void @kfree(i8* %26)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond89

for.end95:                                        ; preds = %for.cond89
  %card_name = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 2
  %27 = load i8*, i8** %card_name, align 8, !tbaa !267
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.106, i32 0, i32 0), i8* %27)
  %v4l2_dev97 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 19
  call void @v4l2_device_unregister(%struct.v4l2_device* %v4l2_dev97)
  %28 = bitcast %struct.ivtv.1060* %call1 to i8*
  call void @kfree(i8* %28)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_get_drvdata(%struct.device* %dev) #4 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  %0 = load i8*, i8** %driver_data, align 8, !tbaa !269
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ivtv.1060* @to_ivtv(%struct.v4l2_device* %v4l2_dev) #4 {
entry:
  %0 = bitcast %struct.v4l2_device* %v4l2_dev to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -168
  %1 = bitcast i8* %add.ptr to %struct.ivtv.1060*
  ret %struct.ivtv.1060* %1
}

; Function Attrs: nounwind uwtable
define internal void @flush_request_modules(%struct.ivtv.1060* %dev) #0 {
entry:
  %request_module_wk = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  %call = call zeroext i1 @flush_work(%struct.work_struct* %request_module_wk)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.56(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.57(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

declare i32 @del_timer_sync(%struct.timer_list*) #2

declare void @kthread_flush_worker(%struct.kthread_worker*) #2

declare i32 @kthread_stop(%struct.task_struct*) #2

declare void @v4l2_ctrl_handler_free(%struct.v4l2_ctrl_handler*) #2

declare void @free_irq(i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_iounmap(%struct.ivtv.1060* %itv) #0 {
entry:
  %cmp = icmp eq %struct.ivtv.1060* %itv, null
  br i1 %cmp, label %if.end40, label %if.end

if.end:                                           ; preds = %entry
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %cmp1 = icmp ne i8* %0, null
  br i1 %cmp1, label %do.body, label %if.end7

do.body:                                          ; preds = %if.end
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %do.end

if.then3:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.100, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then3, %do.body
  %reg_mem5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  call void @iounmap(i8* %2)
  %reg_mem6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  store i8* null, i8** %reg_mem6, align 8, !tbaa !171
  br label %if.end7

if.end7:                                          ; preds = %do.end, %if.end
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  %3 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %conv = zext i8 %3 to i32
  %tobool8 = icmp ne i32 %conv, 0
  br i1 %tobool8, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %if.end7
  %dec_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %4 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %cmp9 = icmp ne i8* %4, null
  br i1 %cmp9, label %do.body12, label %if.end23

do.body12:                                        ; preds = %land.lhs.true
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and13 = and i32 2, %5
  %tobool14 = icmp ne i32 %and13, 0
  br i1 %tobool14, label %if.then15, label %do.end21

if.then15:                                        ; preds = %do.body12
  %v4l2_dev16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name17 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev16, i32 0, i32 4
  %arraydecay18 = getelementptr inbounds [36 x i8], [36 x i8]* %name17, i32 0, i32 0
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.101, i32 0, i32 0), i8* %arraydecay18)
  br label %do.end21

do.end21:                                         ; preds = %if.then15, %do.body12
  %dec_mem22 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %6 = load i8*, i8** %dec_mem22, align 8, !tbaa !235
  call void @iounmap(i8* %6)
  br label %if.end23

if.end23:                                         ; preds = %do.end21, %land.lhs.true, %if.end7
  %dec_mem24 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  store i8* null, i8** %dec_mem24, align 8, !tbaa !235
  %enc_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %7 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %cmp25 = icmp ne i8* %7, null
  br i1 %cmp25, label %do.body28, label %if.end40

do.body28:                                        ; preds = %if.end23
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and29 = and i32 2, %8
  %tobool30 = icmp ne i32 %and29, 0
  br i1 %tobool30, label %if.then31, label %do.end37

if.then31:                                        ; preds = %do.body28
  %v4l2_dev32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name33 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev32, i32 0, i32 4
  %arraydecay34 = getelementptr inbounds [36 x i8], [36 x i8]* %name33, i32 0, i32 0
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.102, i32 0, i32 0), i8* %arraydecay34)
  br label %do.end37

do.end37:                                         ; preds = %if.then31, %do.body28
  %enc_mem38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %9 = load i8*, i8** %enc_mem38, align 8, !tbaa !234
  call void @iounmap(i8* %9)
  %enc_mem39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  store i8* null, i8** %enc_mem39, align 8, !tbaa !234
  br label %if.end40

if.end40:                                         ; preds = %do.end37, %if.end23, %entry
  ret void
}

declare void @__release_region(%struct.resource*, i64, i64) #2

declare void @pci_disable_device(%struct.pci_dev*) #2

declare void @v4l2_device_unregister(%struct.v4l2_device*) #2

declare void @iounmap(i8*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.57(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !270
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !271
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

declare zeroext i1 @flush_work(%struct.work_struct*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc(i64 %size, i32 %flags) #4 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.93(i64 %size, i32 %or)
  ret i8* %call
}

declare i32 @v4l2_device_set_name(%struct.v4l2_device*, i8*, %struct.atomic_t*) #2

declare i32 @v4l2_device_register(%struct.device*, %struct.v4l2_device*) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_process_options(%struct.ivtv.1060* %itv) #0 {
entry:
  %0 = load i32, i32* @enc_mpg_buffers, align 4, !tbaa !120
  %mul = mul nsw i32 %0, 1024
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 0
  %arrayidx = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes, i64 0, i64 0
  store i32 %mul, i32* %arrayidx, align 8, !tbaa !120
  %1 = load i32, i32* @enc_yuv_buffers, align 4, !tbaa !120
  %mul1 = mul nsw i32 %1, 1024
  %options2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes3 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options2, i32 0, i32 0
  %arrayidx4 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes3, i64 0, i64 1
  store i32 %mul1, i32* %arrayidx4, align 4, !tbaa !120
  %2 = load i32, i32* @enc_vbi_buffers, align 4, !tbaa !120
  %mul5 = mul nsw i32 %2, 1024
  %options6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes7 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes7, i64 0, i64 2
  store i32 %mul5, i32* %arrayidx8, align 8, !tbaa !120
  %3 = load i32, i32* @enc_pcm_buffers, align 4, !tbaa !120
  %options9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes10 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options9, i32 0, i32 0
  %arrayidx11 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes10, i64 0, i64 3
  store i32 %3, i32* %arrayidx11, align 4, !tbaa !120
  %4 = load i32, i32* @dec_mpg_buffers, align 4, !tbaa !120
  %mul12 = mul nsw i32 %4, 1024
  %options13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes14 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options13, i32 0, i32 0
  %arrayidx15 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes14, i64 0, i64 5
  store i32 %mul12, i32* %arrayidx15, align 4, !tbaa !120
  %5 = load i32, i32* @dec_yuv_buffers, align 4, !tbaa !120
  %mul16 = mul nsw i32 %5, 1024
  %options17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes18 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options17, i32 0, i32 0
  %arrayidx19 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes18, i64 0, i64 8
  store i32 %mul16, i32* %arrayidx19, align 8, !tbaa !120
  %6 = load i32, i32* @dec_vbi_buffers, align 4, !tbaa !120
  %options20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes21 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options20, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes21, i64 0, i64 6
  store i32 %6, i32* %arrayidx22, align 8, !tbaa !120
  %instance = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %7 = load i16, i16* %instance, align 8, !tbaa !227
  %idxprom = zext i16 %7 to i64
  %arrayidx23 = getelementptr inbounds [32 x i32], [32 x i32]* @cardtype, i64 0, i64 %idxprom
  %8 = load i32, i32* %arrayidx23, align 4, !tbaa !120
  %options24 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %cardtype = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options24, i32 0, i32 1
  store i32 %8, i32* %cardtype, align 4, !tbaa !228
  %instance25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %9 = load i16, i16* %instance25, align 8, !tbaa !227
  %idxprom26 = zext i16 %9 to i64
  %arrayidx27 = getelementptr inbounds [32 x i32], [32 x i32]* @tuner, i64 0, i64 %idxprom26
  %10 = load i32, i32* %arrayidx27, align 4, !tbaa !120
  %options28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %tuner = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options28, i32 0, i32 2
  store i32 %10, i32* %tuner, align 8, !tbaa !237
  %instance29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %11 = load i16, i16* %instance29, align 8, !tbaa !227
  %idxprom30 = zext i16 %11 to i64
  %arrayidx31 = getelementptr inbounds [32 x i32], [32 x i32]* @radio, i64 0, i64 %idxprom30
  %12 = load i32, i32* %arrayidx31, align 4, !tbaa !120
  %options32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %radio = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options32, i32 0, i32 3
  store i32 %12, i32* %radio, align 4, !tbaa !241
  %instance33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %13 = load i16, i16* %instance33, align 8, !tbaa !227
  %idxprom34 = zext i16 %13 to i64
  %arrayidx35 = getelementptr inbounds [32 x i32], [32 x i32]* @i2c_clock_period, i64 0, i64 %idxprom34
  %14 = load i32, i32* %arrayidx35, align 4, !tbaa !120
  %options36 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options36, i32 0, i32 5
  store i32 %14, i32* %i2c_clock_period, align 4, !tbaa !272
  %options37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period38 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options37, i32 0, i32 5
  %15 = load i32, i32* %i2c_clock_period38, align 4, !tbaa !272
  %cmp = icmp eq i32 %15, -1
  %options39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period40 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options39, i32 0, i32 5
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 20, i32* %i2c_clock_period40, align 4, !tbaa !272
  br label %if.end55

if.else:                                          ; preds = %entry
  %16 = load i32, i32* %i2c_clock_period40, align 4, !tbaa !272
  %cmp43 = icmp slt i32 %16, 10
  %options45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period46 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options45, i32 0, i32 5
  br i1 %cmp43, label %if.then44, label %if.else47

if.then44:                                        ; preds = %if.else
  store i32 10, i32* %i2c_clock_period46, align 4, !tbaa !272
  br label %if.end55

if.else47:                                        ; preds = %if.else
  %17 = load i32, i32* %i2c_clock_period46, align 4, !tbaa !272
  %cmp50 = icmp sgt i32 %17, 4500
  br i1 %cmp50, label %if.then51, label %if.end55

if.then51:                                        ; preds = %if.else47
  %options52 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period53 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options52, i32 0, i32 5
  store i32 4500, i32* %i2c_clock_period53, align 4, !tbaa !272
  br label %if.end55

if.end55:                                         ; preds = %if.then51, %if.else47, %if.then44, %if.then
  %18 = load i32, i32* @newi2c, align 4, !tbaa !120
  %options56 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options56, i32 0, i32 4
  store i32 %18, i32* %newi2c, align 8, !tbaa !273
  %19 = load i32, i32* @tunertype, align 4, !tbaa !120
  %cmp57 = icmp slt i32 %19, -1
  %20 = load i32, i32* @tunertype, align 4
  %cmp58 = icmp sgt i32 %20, 1
  %or.cond = or i1 %cmp57, %cmp58
  br i1 %or.cond, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end55
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.29.78, i32 0, i32 0), i8* %arraydecay)
  store i32 -1, i32* @tunertype, align 4, !tbaa !120
  br label %if.end60

if.end60:                                         ; preds = %if.then59, %if.end55
  %call61 = call i64 @ivtv_parse_std(%struct.ivtv.1060* %itv)
  %std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  store i64 %call61, i64* %std, align 8, !tbaa !166
  %std62 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %21 = load i64, i64* %std62, align 8, !tbaa !166
  %cmp63 = icmp eq i64 %21, 0
  %22 = load i32, i32* @tunertype, align 4
  %cmp64 = icmp sge i32 %22, 0
  %or.cond1 = and i1 %cmp63, %cmp64
  br i1 %or.cond1, label %if.then65, label %if.end67

if.then65:                                        ; preds = %if.end60
  %23 = load i32, i32* @tunertype, align 4, !tbaa !120
  %tobool = icmp ne i32 %23, 0
  %24 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i64 46848, i64 16730367
  %std66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  store i64 %cond, i64* %std66, align 8, !tbaa !166
  br label %if.end67

if.end67:                                         ; preds = %if.then65, %if.end60
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %25 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %25, i32 0, i32 8
  %26 = load i16, i16* %device, align 2, !tbaa !274
  %conv = zext i16 %26 to i32
  %cmp68 = icmp eq i32 %conv, 2051
  %conv69 = zext i1 %cmp68 to i32
  %conv70 = trunc i32 %conv69 to i8
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  store i8 %conv70, i8* %has_cx23415, align 8, !tbaa !170
  %has_cx2341571 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  %27 = load i8, i8* %has_cx2341571, align 8, !tbaa !170
  %conv72 = zext i8 %27 to i32
  %tobool73 = icmp ne i32 %conv72, 0
  %28 = zext i1 %tobool73 to i64
  %cond74 = select i1 %tobool73, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.30.79, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.31.80, i32 0, i32 0)
  %options75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %cardtype76 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options75, i32 0, i32 1
  %29 = load i32, i32* %cardtype76, align 4, !tbaa !228
  %cmp77 = icmp eq i32 %29, -1
  br i1 %cmp77, label %if.then79, label %if.end84

if.then79:                                        ; preds = %if.end67
  %v4l2_dev80 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name81 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev80, i32 0, i32 4
  %arraydecay82 = getelementptr inbounds [36 x i8], [36 x i8]* %name81, i32 0, i32 0
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.32.81, i32 0, i32 0), i8* %arraydecay82, i8* %cond74)
  br label %cleanup.cont

if.end84:                                         ; preds = %if.end67
  %options85 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %cardtype86 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options85, i32 0, i32 1
  %30 = load i32, i32* %cardtype86, align 4, !tbaa !228
  %sub = sub nsw i32 %30, 1
  %conv87 = trunc i32 %sub to i16
  %call88 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext %conv87)
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call88, %struct.ivtv_card** %card, align 8, !tbaa !2
  %tobool89 = icmp ne %struct.ivtv_card* %call88, null
  br i1 %tobool89, label %if.then90, label %if.else97

if.then90:                                        ; preds = %if.end84
  %v4l2_dev91 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name92 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev91, i32 0, i32 4
  %arraydecay93 = getelementptr inbounds [36 x i8], [36 x i8]* %name92, i32 0, i32 0
  %card94 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %31 = load %struct.ivtv_card*, %struct.ivtv_card** %card94, align 8, !tbaa !2
  %name95 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %31, i32 0, i32 1
  %32 = load i8*, i8** %name95, align 8, !tbaa !275
  %call96 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.33.82, i32 0, i32 0), i8* %arraydecay93, i8* %32, i8* %cond74)
  br label %if.end108

if.else97:                                        ; preds = %if.end84
  %options98 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %cardtype99 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options98, i32 0, i32 1
  %33 = load i32, i32* %cardtype99, align 4, !tbaa !228
  %cmp100 = icmp ne i32 %33, 0
  br i1 %cmp100, label %if.then102, label %if.end108

if.then102:                                       ; preds = %if.else97
  %v4l2_dev103 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name104 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev103, i32 0, i32 4
  %arraydecay105 = getelementptr inbounds [36 x i8], [36 x i8]* %name104, i32 0, i32 0
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.34.83, i32 0, i32 0), i8* %arraydecay105)
  br label %if.end108

if.end108:                                        ; preds = %if.then102, %if.else97, %if.then90
  %card109 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %34 = load %struct.ivtv_card*, %struct.ivtv_card** %card109, align 8, !tbaa !2
  %cmp110 = icmp eq %struct.ivtv_card* %34, null
  br i1 %cmp110, label %if.then112, label %if.end142

if.then112:                                       ; preds = %if.end108
  %pdev113 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev113, align 8, !tbaa !226
  %subsystem_vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %35, i32 0, i32 9
  %36 = load i16, i16* %subsystem_vendor, align 8, !tbaa !276
  %conv114 = zext i16 %36 to i32
  %cmp115 = icmp eq i32 %conv114, 112
  br i1 %cmp115, label %if.then129, label %lor.lhs.false117

lor.lhs.false117:                                 ; preds = %if.then112
  %pdev118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %37 = load %struct.pci_dev*, %struct.pci_dev** %pdev118, align 8, !tbaa !226
  %subsystem_vendor119 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %37, i32 0, i32 9
  %38 = load i16, i16* %subsystem_vendor119, align 8, !tbaa !276
  %conv120 = zext i16 %38 to i32
  %cmp121 = icmp eq i32 %conv120, 624
  br i1 %cmp121, label %if.then129, label %lor.lhs.false123

lor.lhs.false123:                                 ; preds = %lor.lhs.false117
  %pdev124 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %39 = load %struct.pci_dev*, %struct.pci_dev** %pdev124, align 8, !tbaa !226
  %subsystem_vendor125 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %39, i32 0, i32 9
  %40 = load i16, i16* %subsystem_vendor125, align 8, !tbaa !276
  %conv126 = zext i16 %40 to i32
  %cmp127 = icmp eq i32 %conv126, 16496
  br i1 %cmp127, label %if.then129, label %if.end142

if.then129:                                       ; preds = %lor.lhs.false123, %lor.lhs.false117, %if.then112
  %has_cx23415130 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  %41 = load i8, i8* %has_cx23415130, align 8, !tbaa !170
  %conv131 = zext i8 %41 to i32
  %tobool132 = icmp ne i32 %conv131, 0
  %42 = zext i1 %tobool132 to i64
  %cond133 = select i1 %tobool132, i32 1, i32 2
  %conv134 = trunc i32 %cond133 to i16
  %call135 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext %conv134)
  %card136 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call135, %struct.ivtv_card** %card136, align 8, !tbaa !2
  %v4l2_dev137 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name138 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev137, i32 0, i32 4
  %arraydecay139 = getelementptr inbounds [36 x i8], [36 x i8]* %name138, i32 0, i32 0
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.35.84, i32 0, i32 0), i8* %arraydecay139, i8* %cond74)
  br label %if.end142

if.end142:                                        ; preds = %if.then129, %lor.lhs.false123, %if.end108
  %card143 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %43 = load %struct.ivtv_card*, %struct.ivtv_card** %card143, align 8, !tbaa !2
  %cmp144 = icmp eq %struct.ivtv_card* %43, null
  br i1 %cmp144, label %if.then146, label %done

if.then146:                                       ; preds = %if.end142
  br label %for.cond

for.cond:                                         ; preds = %for.inc208, %if.then146
  %i.0 = phi i32 [ 0, %if.then146 ], [ %inc209, %for.inc208 ]
  %conv147 = trunc i32 %i.0 to i16
  %call148 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext %conv147)
  %card149 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call148, %struct.ivtv_card** %card149, align 8, !tbaa !2
  %tobool150 = icmp ne %struct.ivtv_card* %call148, null
  br i1 %tobool150, label %for.body, label %done

for.body:                                         ; preds = %for.cond
  %card151 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %44 = load %struct.ivtv_card*, %struct.ivtv_card** %card151, align 8, !tbaa !2
  %pci_list = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %44, i32 0, i32 25
  %45 = load %struct.ivtv_card_pci_info*, %struct.ivtv_card_pci_info** %pci_list, align 8, !tbaa !277
  %cmp152 = icmp eq %struct.ivtv_card_pci_info* %45, null
  br i1 %cmp152, label %for.inc208, label %if.end155

if.end155:                                        ; preds = %for.body
  br label %for.cond156

for.cond156:                                      ; preds = %for.inc, %if.end155
  %j.0 = phi i32 [ 0, %if.end155 ], [ %inc, %for.inc ]
  %card157 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %46 = load %struct.ivtv_card*, %struct.ivtv_card** %card157, align 8, !tbaa !2
  %pci_list158 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %46, i32 0, i32 25
  %47 = load %struct.ivtv_card_pci_info*, %struct.ivtv_card_pci_info** %pci_list158, align 8, !tbaa !277
  %idxprom159 = sext i32 %j.0 to i64
  %arrayidx160 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %47, i64 %idxprom159
  %device161 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %arrayidx160, i32 0, i32 0
  %48 = load i16, i16* %device161, align 2, !tbaa !278
  %tobool162 = icmp ne i16 %48, 0
  br i1 %tobool162, label %for.body163, label %for.inc208

for.body163:                                      ; preds = %for.cond156
  %pdev164 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %49 = load %struct.pci_dev*, %struct.pci_dev** %pdev164, align 8, !tbaa !226
  %device165 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %49, i32 0, i32 8
  %50 = load i16, i16* %device165, align 2, !tbaa !274
  %conv166 = zext i16 %50 to i32
  %card167 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %51 = load %struct.ivtv_card*, %struct.ivtv_card** %card167, align 8, !tbaa !2
  %pci_list168 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %51, i32 0, i32 25
  %52 = load %struct.ivtv_card_pci_info*, %struct.ivtv_card_pci_info** %pci_list168, align 8, !tbaa !277
  %idxprom169 = sext i32 %j.0 to i64
  %arrayidx170 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %52, i64 %idxprom169
  %device171 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %arrayidx170, i32 0, i32 0
  %53 = load i16, i16* %device171, align 2, !tbaa !278
  %conv172 = zext i16 %53 to i32
  %cmp173 = icmp ne i32 %conv166, %conv172
  br i1 %cmp173, label %for.inc, label %if.end176

if.end176:                                        ; preds = %for.body163
  %pdev177 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %54 = load %struct.pci_dev*, %struct.pci_dev** %pdev177, align 8, !tbaa !226
  %subsystem_vendor178 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %54, i32 0, i32 9
  %55 = load i16, i16* %subsystem_vendor178, align 8, !tbaa !276
  %conv179 = zext i16 %55 to i32
  %card180 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %56 = load %struct.ivtv_card*, %struct.ivtv_card** %card180, align 8, !tbaa !2
  %pci_list181 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %56, i32 0, i32 25
  %57 = load %struct.ivtv_card_pci_info*, %struct.ivtv_card_pci_info** %pci_list181, align 8, !tbaa !277
  %idxprom182 = sext i32 %j.0 to i64
  %arrayidx183 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %57, i64 %idxprom182
  %subsystem_vendor184 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %arrayidx183, i32 0, i32 1
  %58 = load i16, i16* %subsystem_vendor184, align 2, !tbaa !280
  %conv185 = zext i16 %58 to i32
  %cmp186 = icmp ne i32 %conv179, %conv185
  br i1 %cmp186, label %for.inc, label %if.end189

if.end189:                                        ; preds = %if.end176
  %pdev190 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %59 = load %struct.pci_dev*, %struct.pci_dev** %pdev190, align 8, !tbaa !226
  %subsystem_device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %59, i32 0, i32 10
  %60 = load i16, i16* %subsystem_device, align 2, !tbaa !281
  %conv191 = zext i16 %60 to i32
  %card192 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %61 = load %struct.ivtv_card*, %struct.ivtv_card** %card192, align 8, !tbaa !2
  %pci_list193 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %61, i32 0, i32 25
  %62 = load %struct.ivtv_card_pci_info*, %struct.ivtv_card_pci_info** %pci_list193, align 8, !tbaa !277
  %idxprom194 = sext i32 %j.0 to i64
  %arrayidx195 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %62, i64 %idxprom194
  %subsystem_device196 = getelementptr inbounds %struct.ivtv_card_pci_info, %struct.ivtv_card_pci_info* %arrayidx195, i32 0, i32 2
  %63 = load i16, i16* %subsystem_device196, align 2, !tbaa !282
  %conv197 = zext i16 %63 to i32
  %cmp198 = icmp ne i32 %conv191, %conv197
  br i1 %cmp198, label %for.inc, label %if.end201

if.end201:                                        ; preds = %if.end189
  %v4l2_dev202 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name203 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev202, i32 0, i32 4
  %arraydecay204 = getelementptr inbounds [36 x i8], [36 x i8]* %name203, i32 0, i32 0
  %card205 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %64 = load %struct.ivtv_card*, %struct.ivtv_card** %card205, align 8, !tbaa !2
  %name206 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %64, i32 0, i32 1
  %65 = load i8*, i8** %name206, align 8, !tbaa !275
  %call207 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.36.85, i32 0, i32 0), i8* %arraydecay204, i8* %65, i8* %cond74)
  br label %done

for.inc:                                          ; preds = %if.end189, %if.end176, %for.body163
  %inc = add nsw i32 %j.0, 1
  br label %for.cond156

for.inc208:                                       ; preds = %for.cond156, %for.body
  %inc209 = add nsw i32 %i.0, 1
  br label %for.cond

done:                                             ; preds = %if.end201, %for.cond, %if.end142
  %card212 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %66 = load %struct.ivtv_card*, %struct.ivtv_card** %card212, align 8, !tbaa !2
  %cmp213 = icmp eq %struct.ivtv_card* %66, null
  br i1 %cmp213, label %if.then215, label %if.end259

if.then215:                                       ; preds = %done
  %call216 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext 2)
  %card217 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call216, %struct.ivtv_card** %card217, align 8, !tbaa !2
  %v4l2_dev218 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name219 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev218, i32 0, i32 4
  %arraydecay220 = getelementptr inbounds [36 x i8], [36 x i8]* %name219, i32 0, i32 0
  %pdev221 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %67 = load %struct.pci_dev*, %struct.pci_dev** %pdev221, align 8, !tbaa !226
  %vendor = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %67, i32 0, i32 7
  %68 = load i16, i16* %vendor, align 4, !tbaa !283
  %conv222 = zext i16 %68 to i32
  %pdev223 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %69 = load %struct.pci_dev*, %struct.pci_dev** %pdev223, align 8, !tbaa !226
  %device224 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %69, i32 0, i32 8
  %70 = load i16, i16* %device224, align 2, !tbaa !274
  %conv225 = zext i16 %70 to i32
  %call226 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.37.86, i32 0, i32 0), i8* %arraydecay220, i32 %conv222, i32 %conv225)
  %v4l2_dev227 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name228 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev227, i32 0, i32 4
  %arraydecay229 = getelementptr inbounds [36 x i8], [36 x i8]* %name228, i32 0, i32 0
  %pdev230 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %71 = load %struct.pci_dev*, %struct.pci_dev** %pdev230, align 8, !tbaa !226
  %subsystem_vendor231 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %71, i32 0, i32 9
  %72 = load i16, i16* %subsystem_vendor231, align 8, !tbaa !276
  %conv232 = zext i16 %72 to i32
  %pdev233 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %73 = load %struct.pci_dev*, %struct.pci_dev** %pdev233, align 8, !tbaa !226
  %subsystem_device234 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %73, i32 0, i32 10
  %74 = load i16, i16* %subsystem_device234, align 2, !tbaa !281
  %conv235 = zext i16 %74 to i32
  %call236 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.38.87, i32 0, i32 0), i8* %arraydecay229, i32 %conv232, i32 %conv235)
  %v4l2_dev237 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name238 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev237, i32 0, i32 4
  %arraydecay239 = getelementptr inbounds [36 x i8], [36 x i8]* %name238, i32 0, i32 0
  %call240 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.39.88, i32 0, i32 0), i8* %arraydecay239, i8* %cond74)
  %v4l2_dev241 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name242 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev241, i32 0, i32 4
  %arraydecay243 = getelementptr inbounds [36 x i8], [36 x i8]* %name242, i32 0, i32 0
  %card244 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %75 = load %struct.ivtv_card*, %struct.ivtv_card** %card244, align 8, !tbaa !2
  %name245 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %75, i32 0, i32 1
  %76 = load i8*, i8** %name245, align 8, !tbaa !275
  %call246 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.40.89, i32 0, i32 0), i8* %arraydecay243, i8* %76)
  %v4l2_dev247 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name248 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev247, i32 0, i32 4
  %arraydecay249 = getelementptr inbounds [36 x i8], [36 x i8]* %name248, i32 0, i32 0
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.41.90, i32 0, i32 0), i8* %arraydecay249)
  %v4l2_dev251 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name252 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev251, i32 0, i32 4
  %arraydecay253 = getelementptr inbounds [36 x i8], [36 x i8]* %name252, i32 0, i32 0
  %call254 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.42.91, i32 0, i32 0), i8* %arraydecay253)
  %v4l2_dev255 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name256 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev255, i32 0, i32 4
  %arraydecay257 = getelementptr inbounds [36 x i8], [36 x i8]* %name256, i32 0, i32 0
  %call258 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.43, i32 0, i32 0), i8* %arraydecay257)
  br label %if.end259

if.end259:                                        ; preds = %if.then215, %done
  %card260 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %77 = load %struct.ivtv_card*, %struct.ivtv_card** %card260, align 8, !tbaa !2
  %v4l2_capabilities = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %77, i32 0, i32 3
  %78 = load i32, i32* %v4l2_capabilities, align 8, !tbaa !168
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  store i32 %78, i32* %v4l2_cap, align 4, !tbaa !172
  %card261 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %79 = load %struct.ivtv_card*, %struct.ivtv_card** %card261, align 8, !tbaa !2
  %name262 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %79, i32 0, i32 1
  %80 = load i8*, i8** %name262, align 8, !tbaa !275
  %card_name = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  store i8* %80, i8** %card_name, align 8, !tbaa !267
  %card263 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %81 = load %struct.ivtv_card*, %struct.ivtv_card** %card263, align 8, !tbaa !2
  %i2c = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %81, i32 0, i32 24
  %82 = load %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_tuner_i2c** %i2c, align 8, !tbaa !284
  %card_i2c = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  store %struct.ivtv_card_tuner_i2c* %82, %struct.ivtv_card_tuner_i2c** %card_i2c, align 8, !tbaa !285
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end259, %if.then79
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then79 ], [ 0, %if.end259 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_init_struct1(%struct.ivtv.1060* %itv) #0 {
entry:
  %param = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %param to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast %struct.atomic_t* %param to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast (%struct.atomic_t* @ivtv_init_struct1.param to i8*), i64 4, i32 4, i1 false)
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %2 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %resource = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %2, i32 0, i32 38
  %arrayidx = getelementptr inbounds [17 x %struct.resource], [17 x %struct.resource]* %resource, i64 0, i64 0
  %start = getelementptr inbounds %struct.resource, %struct.resource* %arrayidx, i32 0, i32 0
  %3 = load i64, i64* %start, align 8, !tbaa !286
  %base_addr = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  store i64 %3, i64* %base_addr, align 8, !tbaa !233
  %enc_mbox = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 66
  %max_mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox, i32 0, i32 2
  store i8 2, i8* %max_mbox, align 8, !tbaa !288
  %dec_mbox = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 67
  %max_mbox1 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox, i32 0, i32 2
  store i8 1, i8* %max_mbox1, align 8, !tbaa !289
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @__mutex_init(%struct.mutex* %serialize_lock, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.47, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key)
  %i2c_bus_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 73
  call void @__mutex_init(%struct.mutex* %i2c_bus_lock, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.49, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.48)
  %udma = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %lock = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 0
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.51, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.50)
  %lock9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 39
  call void @spinlock_check(%struct.spinlock* %lock9)
  %lock11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 39
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock11, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.53, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.52)
  %dma_reg_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 53
  call void @spinlock_check(%struct.spinlock* %dma_reg_lock)
  %dma_reg_lock19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 53
  %5 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %dma_reg_lock19, i32 0, i32 0
  %rlock20 = bitcast %union.anon.1* %5 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock20, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.55, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.54)
  %irq_worker = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 50
  call void @__kthread_init_worker(%struct.kthread_worker* %irq_worker, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.57, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.56)
  %irq_worker28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 50
  %6 = bitcast %struct.kthread_worker* %irq_worker28 to i8*
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call29 = call %struct.task_struct* (i32 (i8*)*, i8*, i32, i8*, ...) @kthread_create_on_node(i32 (i8*)* @kthread_worker_fn, i8* %6, i32 -1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.58, i32 0, i32 0), i8* %arraydecay)
  %7 = bitcast %struct.task_struct* %call29 to i8*
  %call30 = call zeroext i1 @IS_ERR(i8* %7)
  br i1 %call30, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %call31 = call i32 @wake_up_process(%struct.task_struct* %call29)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %irq_worker_task = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 51
  store %struct.task_struct* %call29, %struct.task_struct** %irq_worker_task, align 8, !tbaa !268
  %irq_worker_task32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 51
  %8 = load %struct.task_struct*, %struct.task_struct** %irq_worker_task32, align 8, !tbaa !268
  %9 = bitcast %struct.task_struct* %8 to i8*
  %call33 = call zeroext i1 @IS_ERR(i8* %9)
  br i1 %call33, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.end
  %v4l2_dev35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name36 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev35, i32 0, i32 4
  %arraydecay37 = getelementptr inbounds [36 x i8], [36 x i8]* %name36, i32 0, i32 0
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.59, i32 0, i32 0), i8* %arraydecay37)
  br label %cleanup

if.end39:                                         ; preds = %if.end
  %irq_worker_task40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 51
  %10 = load %struct.task_struct*, %struct.task_struct** %irq_worker_task40, align 8, !tbaa !268
  %call41 = call i32 @sched_setscheduler(%struct.task_struct* %10, i32 1, %struct.atomic_t* %param)
  %irq_work = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 52
  %11 = bitcast %struct.kthread_work* %irq_work to i8*
  %call43 = call i8* @__memset(i8* %11, i32 0, i64 40)
  %irq_work44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 52
  %node = getelementptr inbounds %struct.kthread_work, %struct.kthread_work* %irq_work44, i32 0, i32 0
  call void @INIT_LIST_HEAD(%struct.list_head* %node)
  %irq_work45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 52
  %func = getelementptr inbounds %struct.kthread_work, %struct.kthread_work* %irq_work45, i32 0, i32 1
  store void (%struct.kthread_work*)* bitcast (void (%struct.kthread_work.4631*)* @ivtv_irq_work_handler to void (%struct.kthread_work*)*), void (%struct.kthread_work*)** %func, align 8, !tbaa !290
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %port = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 1
  store i32 0, i32* %port, align 4, !tbaa !291
  %cxhdl48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %capabilities = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl48, i32 0, i32 0
  store i32 1, i32* %capabilities, align 8, !tbaa !292
  %eos_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 63
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %eos_waitq, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.61, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.60)
  %event_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 64
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %event_waitq, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.62)
  %vsync_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 65
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %vsync_waitq, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.64)
  %dma_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 62
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %dma_waitq, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.67, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.66)
  %dma_timer = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 60
  call void @init_timer_key(%struct.timer_list* %dma_timer, i32 0, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.69, i32 0, i32 0), %struct.lock_class_key* @ivtv_init_struct1.__key.68)
  %dma_timer64 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 60
  %function = getelementptr inbounds %struct.timer_list, %struct.timer_list* %dma_timer64, i32 0, i32 2
  store void (i64)* @ivtv_unfinished_dma, void (i64)** %function, align 8, !tbaa !293
  %12 = ptrtoint %struct.ivtv.1060* %itv to i64
  %dma_timer65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 60
  %data = getelementptr inbounds %struct.timer_list, %struct.timer_list* %dma_timer65, i32 0, i32 3
  store i64 %12, i64* %data, align 8, !tbaa !294
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 54
  store i32 -1, i32* %cur_dma_stream, align 8, !tbaa !295
  %cur_pio_stream = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 55
  store i32 -1, i32* %cur_pio_stream, align 4, !tbaa !296
  %speed = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 82
  store i32 1000, i32* %speed, align 8, !tbaa !297
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  store i32 4, i32* %type, align 8, !tbaa !298
  %vbi66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in67 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi66, i32 0, i32 14
  %fmt = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in67, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt to %struct.v4l2_sliced_vbi_format*
  %vbi68 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi68, i32 0, i32 15
  store %struct.v4l2_sliced_vbi_format* %sliced, %struct.v4l2_sliced_vbi_format** %sliced_in, align 8, !tbaa !133
  %udma69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma69, i32 0, i32 7
  %arraydecay70 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  call void @sg_init_table(%struct.scatterlist* %arraydecay70, i32 704)
  %osd_global_alpha_state = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 92
  store i32 1, i32* %osd_global_alpha_state, align 8, !tbaa !299
  %osd_global_alpha = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 95
  store i8 -1, i8* %osd_global_alpha, align 4, !tbaa !300
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  call void @atomic_set(%struct.atomic_t* %next_dma_frame, i32 -1)
  %13 = load i32, i32* @ivtv_yuv_mode, align 4, !tbaa !120
  %yuv_info71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %lace_mode = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info71, i32 0, i32 50
  store i32 %13, i32* %lace_mode, align 8, !tbaa !301
  %14 = load i32, i32* @ivtv_yuv_threshold, align 4, !tbaa !120
  %yuv_info72 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %lace_threshold = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info72, i32 0, i32 51
  store i32 %14, i32* %lace_threshold, align 4, !tbaa !302
  %yuv_info73 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %max_frames_buffered = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info73, i32 0, i32 65
  store i8 3, i8* %max_frames_buffered, align 1, !tbaa !303
  %yuv_info74 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info74, i32 0, i32 40
  store i8 1, i8* %track_osd, align 8, !tbaa !304
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.then34
  %retval.0 = phi i32 [ -1, %if.then34 ], [ 0, %if.end39 ]
  %15 = bitcast %struct.atomic_t* %param to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %15) #8
  ret i32 %retval.0
}

declare i32 @cx2341x_handler_init(%struct.cx2341x_handler*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_setup_pci(%struct.ivtv.1060* %itv, %struct.pci_dev* %pdev) #0 {
entry:
  %cmd = alloca i16, align 2
  %pci_latency = alloca i8, align 1
  %0 = bitcast i16* %cmd to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %0) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %pci_latency) #8
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.70, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call1 = call i32 @pci_enable_device(%struct.pci_dev* %pdev)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then3, label %if.end8

if.then3:                                         ; preds = %do.end
  %v4l2_dev4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name5 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev4, i32 0, i32 4
  %arraydecay6 = getelementptr inbounds [36 x i8], [36 x i8]* %name5, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.71, i32 0, i32 0), i8* %arraydecay6)
  br label %cleanup

if.end8:                                          ; preds = %do.end
  %call9 = call i32 @pci_set_dma_mask(%struct.pci_dev* %pdev, i64 4294967295)
  %tobool10 = icmp ne i32 %call9, 0
  br i1 %tobool10, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.72, i32 0, i32 0), i8* %arraydecay14)
  br label %cleanup

if.end16:                                         ; preds = %if.end8
  %base_addr = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %2 = load i64, i64* %base_addr, align 8, !tbaa !233
  %call17 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %2, i64 8388608, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i32 0, i32 0), i32 0)
  %tobool18 = icmp ne %struct.resource* %call17, null
  br i1 %tobool18, label %if.end24, label %if.then19

if.then19:                                        ; preds = %if.end16
  %v4l2_dev20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name21 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev20, i32 0, i32 4
  %arraydecay22 = getelementptr inbounds [36 x i8], [36 x i8]* %name21, i32 0, i32 0
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.74, i32 0, i32 0), i8* %arraydecay22)
  br label %cleanup

if.end24:                                         ; preds = %if.end16
  %base_addr25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %3 = load i64, i64* %base_addr25, align 8, !tbaa !233
  %add = add i64 %3, 33554432
  %call26 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %add, i64 65536, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.75, i32 0, i32 0), i32 0)
  %tobool27 = icmp ne %struct.resource* %call26, null
  br i1 %tobool27, label %if.end34, label %if.then28

if.then28:                                        ; preds = %if.end24
  %v4l2_dev29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name30 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev29, i32 0, i32 4
  %arraydecay31 = getelementptr inbounds [36 x i8], [36 x i8]* %name30, i32 0, i32 0
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.76, i32 0, i32 0), i8* %arraydecay31)
  %base_addr33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %4 = load i64, i64* %base_addr33, align 8, !tbaa !233
  call void @__release_region(%struct.resource* @iomem_resource, i64 %4, i64 8388608)
  br label %cleanup

if.end34:                                         ; preds = %if.end24
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 4
  %5 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %conv = zext i8 %5 to i32
  %tobool35 = icmp ne i32 %conv, 0
  br i1 %tobool35, label %land.lhs.true, label %if.end48

land.lhs.true:                                    ; preds = %if.end34
  %base_addr36 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %6 = load i64, i64* %base_addr36, align 8, !tbaa !233
  %add37 = add i64 %6, 16777216
  %call38 = call %struct.resource* @__request_region(%struct.resource* @iomem_resource, i64 %add37, i64 8388608, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.77, i32 0, i32 0), i32 0)
  %tobool39 = icmp ne %struct.resource* %call38, null
  br i1 %tobool39, label %if.end48, label %if.then40

if.then40:                                        ; preds = %land.lhs.true
  %v4l2_dev41 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name42 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev41, i32 0, i32 4
  %arraydecay43 = getelementptr inbounds [36 x i8], [36 x i8]* %name42, i32 0, i32 0
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.78, i32 0, i32 0), i8* %arraydecay43)
  %base_addr45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %7 = load i64, i64* %base_addr45, align 8, !tbaa !233
  call void @__release_region(%struct.resource* @iomem_resource, i64 %7, i64 8388608)
  %base_addr46 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %8 = load i64, i64* %base_addr46, align 8, !tbaa !233
  %add47 = add i64 %8, 33554432
  call void @__release_region(%struct.resource* @iomem_resource, i64 %add47, i64 65536)
  br label %cleanup

if.end48:                                         ; preds = %land.lhs.true, %if.end34
  call void @pci_read_config_word(%struct.pci_dev* %pdev, i32 4, i16* %cmd)
  %9 = load i16, i16* %cmd, align 2, !tbaa !151
  %conv50 = zext i16 %9 to i32
  %and51 = and i32 %conv50, 4
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %do.body76, label %do.body54

do.body54:                                        ; preds = %if.end48
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and55 = and i32 2, %10
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %do.end64

if.then57:                                        ; preds = %do.body54
  %v4l2_dev58 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name59 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev58, i32 0, i32 4
  %arraydecay60 = getelementptr inbounds [36 x i8], [36 x i8]* %name59, i32 0, i32 0
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.79, i32 0, i32 0), i8* %arraydecay60)
  br label %do.end64

do.end64:                                         ; preds = %if.then57, %do.body54
  call void @pci_set_master(%struct.pci_dev* %pdev)
  call void @pci_read_config_word(%struct.pci_dev* %pdev, i32 4, i16* %cmd)
  %11 = load i16, i16* %cmd, align 2, !tbaa !151
  %conv66 = zext i16 %11 to i32
  %and67 = and i32 %conv66, 4
  %tobool68 = icmp ne i32 %and67, 0
  br i1 %tobool68, label %do.body76, label %if.then69

if.then69:                                        ; preds = %do.end64
  %v4l2_dev70 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name71 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev70, i32 0, i32 4
  %arraydecay72 = getelementptr inbounds [36 x i8], [36 x i8]* %name71, i32 0, i32 0
  %call73 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.80, i32 0, i32 0), i8* %arraydecay72)
  br label %cleanup

do.body76:                                        ; preds = %do.end64, %if.end48
  %12 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and77 = and i32 2, %12
  %tobool78 = icmp ne i32 %and77, 0
  br i1 %tobool78, label %if.then79, label %do.end86

if.then79:                                        ; preds = %do.body76
  %v4l2_dev80 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name81 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev80, i32 0, i32 4
  %arraydecay82 = getelementptr inbounds [36 x i8], [36 x i8]* %name81, i32 0, i32 0
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.81, i32 0, i32 0), i8* %arraydecay82)
  br label %do.end86

do.end86:                                         ; preds = %if.then79, %do.body76
  call void @pci_read_config_byte(%struct.pci_dev* %pdev, i32 13, i8* %pci_latency)
  %13 = load i8, i8* %pci_latency, align 1, !tbaa !142
  %conv88 = zext i8 %13 to i32
  %cmp = icmp slt i32 %conv88, 64
  %14 = load i32, i32* @ivtv_pci_latency, align 4
  %tobool91 = icmp ne i32 %14, 0
  %or.cond = and i1 %cmp, %tobool91
  br i1 %or.cond, label %if.then92, label %if.end100

if.then92:                                        ; preds = %do.end86
  %v4l2_dev93 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name94 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev93, i32 0, i32 4
  %arraydecay95 = getelementptr inbounds [36 x i8], [36 x i8]* %name94, i32 0, i32 0
  %15 = load i8, i8* %pci_latency, align 1, !tbaa !142
  %conv96 = zext i8 %15 to i32
  %call97 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.82, i32 0, i32 0), i8* %arraydecay95, i32 %conv96)
  call void @pci_write_config_byte(%struct.pci_dev* %pdev, i32 13, i8 zeroext 64)
  call void @pci_read_config_byte(%struct.pci_dev* %pdev, i32 13, i8* %pci_latency)
  br label %if.end100

if.end100:                                        ; preds = %if.then92, %do.end86
  call void @pci_write_config_dword(%struct.pci_dev* %pdev, i32 64, i32 65535)
  %16 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and103 = and i32 2, %16
  %tobool104 = icmp ne i32 %and103, 0
  br i1 %tobool104, label %if.then105, label %cleanup

if.then105:                                       ; preds = %if.end100
  %v4l2_dev106 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name107 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev106, i32 0, i32 4
  %arraydecay108 = getelementptr inbounds [36 x i8], [36 x i8]* %name107, i32 0, i32 0
  %device = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 8
  %17 = load i16, i16* %device, align 2, !tbaa !274
  %conv109 = zext i16 %17 to i32
  %revision = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 12
  %18 = load i8, i8* %revision, align 8, !tbaa !305
  %conv110 = zext i8 %18 to i32
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 1
  %19 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !tbaa !306
  %number = getelementptr inbounds %struct.pci_bus, %struct.pci_bus* %19, i32 0, i32 13
  %20 = load i8, i8* %number, align 8, !tbaa !307
  %conv111 = zext i8 %20 to i32
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 6
  %21 = load i32, i32* %devfn, align 8, !tbaa !309
  %shr = lshr i32 %21, 3
  %and112 = and i32 %shr, 31
  %devfn113 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 6
  %22 = load i32, i32* %devfn113, align 8, !tbaa !309
  %and114 = and i32 %22, 7
  %irq = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 37
  %23 = load i32, i32* %irq, align 4, !tbaa !264
  %24 = load i8, i8* %pci_latency, align 1, !tbaa !142
  %conv115 = zext i8 %24 to i32
  %base_addr116 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 14
  %25 = load i64, i64* %base_addr116, align 8, !tbaa !233
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.83, i32 0, i32 0), i8* %arraydecay108, i32 %conv109, i32 %conv110, i32 %conv111, i32 %and112, i32 %and114, i32 %23, i32 %conv115, i64 %25)
  br label %cleanup

cleanup:                                          ; preds = %if.then105, %if.end100, %if.then69, %if.then40, %if.then28, %if.then19, %if.then11, %if.then3
  %retval.0 = phi i32 [ -5, %if.then3 ], [ -5, %if.then11 ], [ -6, %if.then69 ], [ -5, %if.then40 ], [ -5, %if.then28 ], [ -5, %if.then19 ], [ 0, %if.then105 ], [ 0, %if.end100 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %pci_latency) #8
  %26 = bitcast i16* %cmd to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %26) #8
  ret i32 %retval.0
}

declare i8* @ioremap_nocache(i64, i64) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_process_eeprom(%struct.ivtv.1060* %itv) #0 {
entry:
  %tv = alloca %struct.tveeprom, align 4
  %0 = bitcast %struct.tveeprom* %tv to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %0) #8
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 6
  %2 = load i32, i32* %devfn, align 8, !tbaa !309
  %shr = lshr i32 %2, 3
  %and = and i32 %shr, 31
  call void @ivtv_read_eeprom(%struct.ivtv.1060* %itv, %struct.tveeprom* %tv)
  %model = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 11
  %3 = load i32, i32* %model, align 4, !tbaa !310
  %Pivot = icmp slt i32 %3, 30012
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %.off = add i32 %3, -30012
  %SwitchLeaf2 = icmp ule i32 %.off, 27
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.caserange25

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %3, 0
  br i1 %SwitchLeaf, label %sw.bb27, label %sw.caserange25

sw.caserange4:                                    ; preds = %sw.caserange6
  %4 = sub i32 %3, 48000
  %inbounds5 = icmp ule i32 %4, 99
  %5 = sub i32 %3, 48400
  %inbounds = icmp ule i32 %5, 199
  %or.cond = or i1 %inbounds5, %inbounds
  br i1 %or.cond, label %sw.epilog, label %sw.default

sw.caserange6:                                    ; preds = %sw.caserange14
  %6 = sub i32 %3, 32000
  %inbounds7 = icmp ule i32 %6, 999
  br i1 %inbounds7, label %sw.epilog, label %sw.caserange4

sw.caserange14:                                   ; preds = %sw.caserange23
  %7 = sub i32 %3, 48100
  %inbounds15 = icmp ule i32 %7, 299
  %8 = sub i32 %3, 48600
  %inbounds13 = icmp ule i32 %8, 399
  %or.cond17 = or i1 %inbounds15, %inbounds13
  br i1 %or.cond17, label %sw.epilog, label %sw.caserange6

sw.caserange23:                                   ; preds = %sw.caserange25
  %9 = sub i32 %3, 25000
  %inbounds24 = icmp ule i32 %9, 999
  %10 = sub i32 %3, 26000
  %inbounds22 = icmp ule i32 %10, 999
  %or.cond18 = or i1 %inbounds24, %inbounds22
  br i1 %or.cond18, label %sw.epilog, label %sw.caserange14

sw.caserange25:                                   ; preds = %LeafBlock, %LeafBlock1
  %11 = sub i32 %3, 23000
  %inbounds26 = icmp ule i32 %11, 999
  br i1 %inbounds26, label %sw.epilog, label %sw.caserange23

sw.bb27:                                          ; preds = %LeafBlock
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.84, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

sw.default:                                       ; preds = %sw.caserange4
  %v4l2_dev29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name30 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev29, i32 0, i32 4
  %arraydecay31 = getelementptr inbounds [36 x i8], [36 x i8]* %name30, i32 0, i32 0
  %model32 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 11
  %12 = load i32, i32* %model32, align 4, !tbaa !310
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.85, i32 0, i32 0), i8* %arraydecay31, i32 %12)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.caserange25, %sw.caserange23, %sw.caserange14, %sw.caserange6, %sw.caserange4, %LeafBlock1
  %.sink = phi i16 [ 2, %sw.default ], [ 1, %sw.caserange14 ], [ 2, %sw.caserange23 ], [ 2, %sw.caserange25 ], [ 0, %sw.caserange4 ], [ 0, %LeafBlock1 ], [ 0, %sw.caserange6 ]
  %call34 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext %.sink)
  %card35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call34, %struct.ivtv_card** %card35, align 8, !tbaa !2
  %model36 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 11
  %13 = load i32, i32* %model36, align 4, !tbaa !310
  %SwitchLeaf5 = icmp eq i32 %13, 48254
  br i1 %SwitchLeaf5, label %sw.bb37, label %sw.epilog41

sw.bb37:                                          ; preds = %sw.epilog
  %call38 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext 28)
  %card39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call38, %struct.ivtv_card** %card39, align 8, !tbaa !2
  br label %sw.epilog41

sw.epilog41:                                      ; preds = %sw.bb37, %sw.epilog
  %card42 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %14 = load %struct.ivtv_card*, %struct.ivtv_card** %card42, align 8, !tbaa !2
  %v4l2_capabilities = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %14, i32 0, i32 3
  %15 = load i32, i32* %v4l2_capabilities, align 8, !tbaa !168
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  store i32 %15, i32* %v4l2_cap, align 4, !tbaa !172
  %card43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %16 = load %struct.ivtv_card*, %struct.ivtv_card** %card43, align 8, !tbaa !2
  %name44 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %16, i32 0, i32 1
  %17 = load i8*, i8** %name44, align 8, !tbaa !275
  %card_name = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  store i8* %17, i8** %card_name, align 8, !tbaa !267
  %card45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %18 = load %struct.ivtv_card*, %struct.ivtv_card** %card45, align 8, !tbaa !2
  %i2c = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %18, i32 0, i32 24
  %19 = load %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_tuner_i2c** %i2c, align 8, !tbaa !284
  %card_i2c = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  store %struct.ivtv_card_tuner_i2c* %19, %struct.ivtv_card_tuner_i2c** %card_i2c, align 8, !tbaa !285
  %model46 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 11
  %20 = load i32, i32* %model46, align 4, !tbaa !310
  %div = udiv i32 %20, 1000
  %cmp = icmp eq i32 %div, 23
  br i1 %cmp, label %if.then, label %if.end62

if.then:                                          ; preds = %sw.epilog41
  %card_name47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.86, i32 0, i32 0), i8** %card_name47, align 8, !tbaa !267
  %card_i2c48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  store %struct.ivtv_card_tuner_i2c* @ivtv_process_eeprom.ivtv_i2c_radio, %struct.ivtv_card_tuner_i2c** %card_i2c48, align 8, !tbaa !285
  %and.off = add i32 %and, -8
  %switch = icmp ult i32 %and.off, 2
  br i1 %switch, label %if.then51, label %if.end62

if.then51:                                        ; preds = %if.then
  %and52 = and i32 %and, 1
  %cmp53 = icmp eq i32 %and52, 0
  %conv = zext i1 %cmp53 to i32
  %tobool = icmp ne i32 %conv, 0
  %21 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.87, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.88, i32 0, i32 0)
  %card_name54 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  store i8* %cond, i8** %card_name54, align 8, !tbaa !267
  %tobool55 = icmp ne i32 %conv, 0
  br i1 %tobool55, label %if.end62, label %if.then56

if.then56:                                        ; preds = %if.then51
  %v4l2_dev57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name58 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev57, i32 0, i32 4
  %arraydecay59 = getelementptr inbounds [36 x i8], [36 x i8]* %name58, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.89, i32 0, i32 0), i8* %arraydecay59)
  %has_radio = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 0
  store i32 0, i32* %has_radio, align 4, !tbaa !312
  br label %if.end62

if.end62:                                         ; preds = %if.then56, %if.then51, %if.then, %sw.epilog41
  %v4l2_dev63 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name64 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev63, i32 0, i32 4
  %arraydecay65 = getelementptr inbounds [36 x i8], [36 x i8]* %name64, i32 0, i32 0
  %card_name66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  %22 = load i8*, i8** %card_name66, align 8, !tbaa !267
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.90, i32 0, i32 0), i8* %arraydecay65, i8* %22)
  %tuner_hauppauge_model = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 5
  %23 = load i32, i32* %tuner_hauppauge_model, align 4, !tbaa !313
  %Pivot16 = icmp slt i32 %23, 99
  br i1 %Pivot16, label %LeafBlock7, label %NodeBlock13

NodeBlock13:                                      ; preds = %if.end62
  %Pivot14 = icmp slt i32 %23, 112
  br i1 %Pivot14, label %LeafBlock9, label %LeafBlock11

LeafBlock11:                                      ; preds = %NodeBlock13
  %SwitchLeaf12 = icmp eq i32 %23, 112
  br i1 %SwitchLeaf12, label %sw.bb68, label %sw.epilog70

LeafBlock9:                                       ; preds = %NodeBlock13
  %SwitchLeaf10 = icmp eq i32 %23, 99
  br i1 %SwitchLeaf10, label %sw.bb68, label %sw.epilog70

LeafBlock7:                                       ; preds = %if.end62
  %SwitchLeaf8 = icmp eq i32 %23, 85
  br i1 %SwitchLeaf8, label %sw.bb68, label %sw.epilog70

sw.bb68:                                          ; preds = %LeafBlock7, %LeafBlock9, %LeafBlock11
  %pvr150_workaround = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 5
  store i8 1, i8* %pvr150_workaround, align 1, !tbaa !314
  br label %sw.epilog70

sw.epilog70:                                      ; preds = %sw.bb68, %LeafBlock7, %LeafBlock9, %LeafBlock11
  %tuner_type = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 3
  %24 = load i32, i32* %tuner_type, align 4, !tbaa !315
  %cmp71 = icmp eq i32 %24, 4
  br i1 %cmp71, label %if.then73, label %if.end78

if.then73:                                        ; preds = %sw.epilog70
  %v4l2_dev74 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name75 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev74, i32 0, i32 4
  %arraydecay76 = getelementptr inbounds [36 x i8], [36 x i8]* %name75, i32 0, i32 0
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.91, i32 0, i32 0), i8* %arraydecay76)
  br label %if.end78

if.end78:                                         ; preds = %if.then73, %sw.epilog70
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %tuner = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 2
  %25 = load i32, i32* %tuner, align 8, !tbaa !237
  %cmp79 = icmp eq i32 %25, -1
  br i1 %cmp79, label %if.then81, label %if.end85

if.then81:                                        ; preds = %if.end78
  %tuner_type82 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 3
  %26 = load i32, i32* %tuner_type82, align 4, !tbaa !315
  %options83 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %tuner84 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options83, i32 0, i32 2
  store i32 %26, i32* %tuner84, align 8, !tbaa !237
  br label %if.end85

if.end85:                                         ; preds = %if.then81, %if.end78
  %options86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %radio = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options86, i32 0, i32 3
  %27 = load i32, i32* %radio, align 4, !tbaa !241
  %cmp87 = icmp eq i32 %27, -1
  br i1 %cmp87, label %if.then89, label %if.end95

if.then89:                                        ; preds = %if.end85
  %has_radio90 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 0
  %28 = load i32, i32* %has_radio90, align 4, !tbaa !312
  %cmp91 = icmp ne i32 %28, 0
  %conv92 = zext i1 %cmp91 to i32
  %options93 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %radio94 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options93, i32 0, i32 3
  store i32 %conv92, i32* %radio94, align 4, !tbaa !241
  br label %if.end95

if.end95:                                         ; preds = %if.then89, %if.end85
  %options96 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options96, i32 0, i32 4
  %29 = load i32, i32* %newi2c, align 8, !tbaa !273
  %cmp97 = icmp eq i32 %29, -1
  br i1 %cmp97, label %land.lhs.true, label %if.end117

land.lhs.true:                                    ; preds = %if.end95
  %has_ir = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 1
  %30 = load i32, i32* %has_ir, align 4, !tbaa !316
  %tobool99 = icmp ne i32 %30, 0
  br i1 %tobool99, label %if.then100, label %if.end117

if.then100:                                       ; preds = %land.lhs.true
  %has_ir101 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 1
  %31 = load i32, i32* %has_ir101, align 4, !tbaa !316
  %and102 = and i32 %31, 4
  %tobool103 = icmp ne i32 %and102, 0
  %32 = zext i1 %tobool103 to i64
  %cond104 = select i1 %tobool103, i32 1, i32 0
  %options105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c106 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options105, i32 0, i32 4
  store i32 %cond104, i32* %newi2c106, align 8, !tbaa !273
  %options107 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c108 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options107, i32 0, i32 4
  %33 = load i32, i32* %newi2c108, align 8, !tbaa !273
  %tobool109 = icmp ne i32 %33, 0
  br i1 %tobool109, label %if.then110, label %if.end117

if.then110:                                       ; preds = %if.then100
  %v4l2_dev111 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name112 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev111, i32 0, i32 4
  %arraydecay113 = getelementptr inbounds [36 x i8], [36 x i8]* %name112, i32 0, i32 0
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.92, i32 0, i32 0), i8* %arraydecay113)
  call void @exit_ivtv_i2c(%struct.ivtv.1060* %itv)
  %call115 = call i32 @init_ivtv_i2c(%struct.ivtv.1060* %itv)
  br label %if.end117

if.end117:                                        ; preds = %if.then110, %if.then100, %land.lhs.true, %if.end95
  %std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %34 = load i64, i64* %std, align 8, !tbaa !166
  %cmp118 = icmp ne i64 %34, 0
  br i1 %cmp118, label %cleanup, label %if.end121

if.end121:                                        ; preds = %if.end117
  %tuner_formats = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 4
  %35 = load i32, i32* %tuner_formats, align 4, !tbaa !317
  %conv122 = zext i32 %35 to i64
  %and123 = and i64 %conv122, 255
  %tobool124 = icmp ne i64 %and123, 0
  br i1 %tobool124, label %do.body, label %if.else

do.body:                                          ; preds = %if.end121
  %36 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and126 = and i32 2, %36
  %tobool127 = icmp ne i32 %and126, 0
  br i1 %tobool127, label %if.then128, label %if.end181

if.then128:                                       ; preds = %do.body
  %v4l2_dev129 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name130 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev129, i32 0, i32 4
  %arraydecay131 = getelementptr inbounds [36 x i8], [36 x i8]* %name130, i32 0, i32 0
  %call132 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.93, i32 0, i32 0), i8* %arraydecay131)
  br label %if.end181

if.else:                                          ; preds = %if.end121
  %tuner_formats135 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 4
  %37 = load i32, i32* %tuner_formats135, align 4, !tbaa !317
  %conv136 = zext i32 %37 to i64
  %and137 = and i64 %conv136, 45056
  %tobool138 = icmp ne i64 %and137, 0
  br i1 %tobool138, label %do.body140, label %if.else153

do.body140:                                       ; preds = %if.else
  %38 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and141 = and i32 2, %38
  %tobool142 = icmp ne i32 %and141, 0
  br i1 %tobool142, label %if.then143, label %if.end181

if.then143:                                       ; preds = %do.body140
  %v4l2_dev144 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name145 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev144, i32 0, i32 4
  %arraydecay146 = getelementptr inbounds [36 x i8], [36 x i8]* %name145, i32 0, i32 0
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.94, i32 0, i32 0), i8* %arraydecay146)
  br label %if.end181

if.else153:                                       ; preds = %if.else
  %tuner_formats154 = getelementptr inbounds %struct.tveeprom, %struct.tveeprom* %tv, i32 0, i32 4
  %39 = load i32, i32* %tuner_formats154, align 4, !tbaa !317
  %conv155 = zext i32 %39 to i64
  %and156 = and i64 %conv155, 16711680
  %tobool157 = icmp ne i64 %and156, 0
  br i1 %tobool157, label %do.body159, label %if.else172

do.body159:                                       ; preds = %if.else153
  %40 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and160 = and i32 2, %40
  %tobool161 = icmp ne i32 %and160, 0
  br i1 %tobool161, label %if.then162, label %if.end181

if.then162:                                       ; preds = %do.body159
  %v4l2_dev163 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name164 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev163, i32 0, i32 4
  %arraydecay165 = getelementptr inbounds [36 x i8], [36 x i8]* %name164, i32 0, i32 0
  %call166 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.95, i32 0, i32 0), i8* %arraydecay165)
  br label %if.end181

if.else172:                                       ; preds = %if.else153
  %v4l2_dev173 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name174 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev173, i32 0, i32 4
  %arraydecay175 = getelementptr inbounds [36 x i8], [36 x i8]* %name174, i32 0, i32 0
  %call176 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.96, i32 0, i32 0), i8* %arraydecay175)
  br label %if.end181

if.end181:                                        ; preds = %if.else172, %if.then162, %do.body159, %if.then143, %do.body140, %if.then128, %do.body
  %.sink20.sink.sink = phi i64 [ 15, %if.then128 ], [ 15, %do.body ], [ 4096, %if.then143 ], [ 4096, %do.body140 ], [ 4096, %if.else172 ], [ 4194304, %if.then162 ], [ 4194304, %do.body159 ]
  %std177 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 35
  %41 = load i64, i64* %std177, align 8, !tbaa !166
  %or178 = or i64 %41, %.sink20.sink.sink
  store i64 %or178, i64* %std177, align 8, !tbaa !166
  br label %cleanup

cleanup:                                          ; preds = %if.end181, %if.end117, %sw.bb27
  %cleanup.dest.slot.0 = phi i32 [ 1, %sw.bb27 ], [ 0, %if.end181 ], [ 1, %if.end117 ]
  %42 = bitcast %struct.tveeprom* %tv to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %42) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_init_struct2(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 6
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 9
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs, i64 0, i64 %idxprom
  %video_type = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx, i32 0, i32 0
  %1 = load i8, i8* %video_type, align 4, !tbaa !96
  %conv = zext i8 %1 to i32
  %cmp1 = icmp eq i32 %conv, 0
  br i1 %cmp1, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %conv3 = trunc i32 %i.0 to i8
  %nof_inputs = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 6
  store i8 %conv3, i8* %nof_inputs, align 2, !tbaa !100
  br label %for.cond4

for.cond4:                                        ; preds = %for.inc16, %for.end
  %i.1 = phi i32 [ 0, %for.end ], [ %inc17, %for.inc16 ]
  %cmp5 = icmp slt i32 %i.1, 3
  br i1 %cmp5, label %for.body7, label %for.end18

for.body7:                                        ; preds = %for.cond4
  %card8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card8, align 8, !tbaa !2
  %audio_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 10
  %idxprom9 = sext i32 %i.1 to i64
  %arrayidx10 = getelementptr inbounds [3 x %struct.ivtv_card_audio_input], [3 x %struct.ivtv_card_audio_input]* %audio_inputs, i64 0, i64 %idxprom9
  %audio_type = getelementptr inbounds %struct.ivtv_card_audio_input, %struct.ivtv_card_audio_input* %arrayidx10, i32 0, i32 0
  %3 = load i8, i8* %audio_type, align 4, !tbaa !115
  %conv11 = zext i8 %3 to i32
  %cmp12 = icmp eq i32 %conv11, 0
  br i1 %cmp12, label %for.end18, label %for.inc16

for.inc16:                                        ; preds = %for.body7
  %inc17 = add nsw i32 %i.1, 1
  br label %for.cond4

for.end18:                                        ; preds = %for.body7, %for.cond4
  %conv19 = trunc i32 %i.1 to i8
  %nof_audio_inputs = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 7
  store i8 %conv19, i8* %nof_audio_inputs, align 1, !tbaa !104
  %card20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card20, align 8, !tbaa !2
  %hw_all = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 8
  %5 = load i32, i32* %hw_all, align 4, !tbaa !158
  %and = and i32 %5, 1
  %tobool = icmp ne i32 %and, 0
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 9
  %.sink = select i1 %tobool, i32 288, i32 64
  store i32 %.sink, i32* %sliced_size, align 8, !tbaa !318
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc41, %for.end18
  %i.2 = phi i32 [ 0, %for.end18 ], [ %inc42, %for.inc41 ]
  %nof_inputs26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 6
  %6 = load i8, i8* %nof_inputs26, align 2, !tbaa !100
  %conv27 = zext i8 %6 to i32
  %cmp28 = icmp slt i32 %i.2, %conv27
  br i1 %cmp28, label %for.body30, label %for.end43

for.body30:                                       ; preds = %for.cond25
  %card31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %7 = load %struct.ivtv_card*, %struct.ivtv_card** %card31, align 8, !tbaa !2
  %video_inputs32 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %7, i32 0, i32 9
  %idxprom33 = sext i32 %i.2 to i64
  %arrayidx34 = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs32, i64 0, i64 %idxprom33
  %video_type35 = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx34, i32 0, i32 0
  %8 = load i8, i8* %video_type35, align 4, !tbaa !96
  %conv36 = zext i8 %8 to i32
  %cmp37 = icmp eq i32 %conv36, 1
  br i1 %cmp37, label %for.end43, label %for.inc41

for.inc41:                                        ; preds = %for.body30
  %inc42 = add nsw i32 %i.2, 1
  br label %for.cond25

for.end43:                                        ; preds = %for.body30, %for.cond25
  %nof_inputs44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 6
  %9 = load i8, i8* %nof_inputs44, align 2, !tbaa !100
  %conv45 = zext i8 %9 to i32
  %cmp46 = icmp sge i32 %i.2, %conv45
  %.i.2 = select i1 %cmp46, i32 0, i32 %i.2
  %active_input = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 33
  store i32 %.i.2, i32* %active_input, align 4, !tbaa !89
  %card50 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %10 = load %struct.ivtv_card*, %struct.ivtv_card** %card50, align 8, !tbaa !2
  %video_inputs51 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %10, i32 0, i32 9
  %idxprom52 = sext i32 %.i.2 to i64
  %arrayidx53 = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs51, i64 0, i64 %idxprom52
  %audio_index = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx53, i32 0, i32 1
  %11 = load i8, i8* %audio_index, align 1, !tbaa !319
  %conv54 = zext i8 %11 to i32
  %audio_input = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 32
  store i32 %conv54, i32* %audio_input, align 8, !tbaa !66
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_load_and_init_modules(%struct.ivtv.1060* %itv) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %hw_all = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 8
  %1 = load i32, i32* %hw_all, align 4, !tbaa !158
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %LeafBlock ]
  %cmp = icmp ult i32 %i.0, 32
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %shl = shl i32 1, %i.0
  %and = and i32 %shl, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %LeafBlock

if.end:                                           ; preds = %for.body
  switch i32 %shl, label %if.end4 [
    i32 32768, label %if.then3
    i32 128, label %if.then3
  ]

if.then3:                                         ; preds = %if.end, %if.end
  %hw_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %2 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %or = or i32 %2, %shl
  store i32 %or, i32* %hw_flags, align 8, !tbaa !320
  br label %LeafBlock

if.end4:                                          ; preds = %if.end
  %call = call i32 @ivtv_i2c_register(%struct.ivtv.1060* %itv, i32 %i.0)
  %cmp5 = icmp eq i32 %call, 0
  br i1 %cmp5, label %if.then6, label %LeafBlock

if.then6:                                         ; preds = %if.end4
  %hw_flags7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %3 = load i32, i32* %hw_flags7, align 8, !tbaa !320
  %or8 = or i32 %3, %shl
  store i32 %or8, i32* %hw_flags7, align 8, !tbaa !320
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then6, %if.end4, %if.then3, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.then3 ], [ 4, %for.body ], [ 0, %if.then6 ], [ 0, %if.end4 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %hw_flags10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %4 = load i32, i32* %hw_flags10, align 8, !tbaa !320
  %and11 = and i32 %4, 4128768
  %cmp12 = icmp eq i32 %and11, 0
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %for.end
  %call14 = call %struct.i2c_client* @ivtv_i2c_new_ir_legacy(%struct.ivtv.1060* %itv)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %for.end
  %card16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %5 = load %struct.ivtv_card*, %struct.ivtv_card** %card16, align 8, !tbaa !2
  %hw_all17 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %5, i32 0, i32 8
  %6 = load i32, i32* %hw_all17, align 4, !tbaa !158
  %and18 = and i32 %6, 1
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.end42, label %if.else

if.else:                                          ; preds = %if.end15
  %card22 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %7 = load %struct.ivtv_card*, %struct.ivtv_card** %card22, align 8, !tbaa !2
  %hw_all23 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %7, i32 0, i32 8
  %8 = load i32, i32* %hw_all23, align 4, !tbaa !158
  %and24 = and i32 %8, 2048
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.end42, label %if.else29

if.else29:                                        ; preds = %if.else
  %card30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %9 = load %struct.ivtv_card*, %struct.ivtv_card** %card30, align 8, !tbaa !2
  %hw_all31 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %9, i32 0, i32 8
  %10 = load i32, i32* %hw_all31, align 4, !tbaa !158
  %and32 = and i32 %10, 256
  %tobool33 = icmp ne i32 %and32, 0
  %.sink = select i1 %tobool33, i32 256, i32 2
  br label %if.end42

if.end42:                                         ; preds = %if.else29, %if.else, %if.end15
  %.sink.sink.sink = phi i32 [ 1, %if.end15 ], [ %.sink, %if.else29 ], [ 2048, %if.else ]
  %call38 = call %struct.v4l2_subdev* @ivtv_find_hw(%struct.ivtv.1060* %itv, i32 %.sink.sink.sink)
  %sd_video39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  store %struct.v4l2_subdev* %call38, %struct.v4l2_subdev** %sd_video39, align 8, !tbaa !90
  %card43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %11 = load %struct.ivtv_card*, %struct.ivtv_card** %card43, align 8, !tbaa !2
  %hw_audio_ctrl = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %11, i32 0, i32 6
  %12 = load i32, i32* %hw_audio_ctrl, align 4, !tbaa !321
  %call44 = call %struct.v4l2_subdev* @ivtv_find_hw(%struct.ivtv.1060* %itv, i32 %12)
  %sd_audio = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 12
  store %struct.v4l2_subdev* %call44, %struct.v4l2_subdev** %sd_audio, align 8, !tbaa !322
  %card45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %13 = load %struct.ivtv_card*, %struct.ivtv_card** %card45, align 8, !tbaa !2
  %hw_muxer = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %13, i32 0, i32 7
  %14 = load i32, i32* %hw_muxer, align 8, !tbaa !69
  %call46 = call %struct.v4l2_subdev* @ivtv_find_hw(%struct.ivtv.1060* %itv, i32 %14)
  %sd_muxer = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 13
  store %struct.v4l2_subdev* %call46, %struct.v4l2_subdev** %sd_muxer, align 8, !tbaa !78
  %hw_flags47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %15 = load i32, i32* %hw_flags47, align 8, !tbaa !320
  %card48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %16 = load %struct.ivtv_card*, %struct.ivtv_card** %card48, align 8, !tbaa !2
  %type = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %16, i32 0, i32 0
  %17 = load i32, i32* %type, align 8, !tbaa !99
  %cmp49 = icmp eq i32 %17, 11
  br i1 %cmp49, label %if.then50, label %if.else64

if.then50:                                        ; preds = %if.end42
  %and51 = and i32 %15, 1536
  %cmp52 = icmp eq i32 %and51, 0
  br i1 %cmp52, label %if.then53, label %if.else56

if.then53:                                        ; preds = %if.then50
  %call54 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext 30)
  %card55 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call54, %struct.ivtv_card** %card55, align 8, !tbaa !2
  br label %if.end92

if.else56:                                        ; preds = %if.then50
  %and57 = and i32 %15, 512
  %cmp58 = icmp eq i32 %and57, 0
  br i1 %cmp58, label %if.then59, label %if.end92

if.then59:                                        ; preds = %if.else56
  %call60 = call %struct.ivtv_card* @ivtv_get_card(i16 zeroext 29)
  %card61 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  store %struct.ivtv_card* %call60, %struct.ivtv_card** %card61, align 8, !tbaa !2
  br label %if.end92

if.else64:                                        ; preds = %if.end42
  %card65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %18 = load %struct.ivtv_card*, %struct.ivtv_card** %card65, align 8, !tbaa !2
  %type66 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %18, i32 0, i32 0
  %19 = load i32, i32* %type66, align 8, !tbaa !99
  %cmp67 = icmp eq i32 %19, 12
  br i1 %cmp67, label %if.then72, label %lor.lhs.false68

lor.lhs.false68:                                  ; preds = %if.else64
  %card69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 1
  %20 = load %struct.ivtv_card*, %struct.ivtv_card** %card69, align 8, !tbaa !2
  %type70 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %20, i32 0, i32 0
  %21 = load i32, i32* %type70, align 8, !tbaa !99
  %cmp71 = icmp eq i32 %21, 13
  br i1 %cmp71, label %if.then72, label %if.end92

if.then72:                                        ; preds = %lor.lhs.false68, %if.else64
  %sd_video73 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %22 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video73, align 8, !tbaa !90
  %tobool74 = icmp ne %struct.v4l2_subdev* %22, null
  br i1 %tobool74, label %cond.false, label %if.end92

cond.false:                                       ; preds = %if.then72
  %sd_video75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %23 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video75, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %23, i32 0, i32 6
  %24 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %24, i32 0, i32 3
  %25 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool76 = icmp ne %struct.v4l2_subdev_video_ops* %25, null
  br i1 %tobool76, label %land.lhs.true, label %if.end92

land.lhs.true:                                    ; preds = %cond.false
  %sd_video77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %26 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video77, align 8, !tbaa !90
  %ops78 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %26, i32 0, i32 6
  %27 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops78, align 8, !tbaa !79
  %video79 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %27, i32 0, i32 3
  %28 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video79, align 8, !tbaa !91
  %s_crystal_freq = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %28, i32 0, i32 1
  %29 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq, align 8, !tbaa !323
  %tobool80 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32)* %29, null
  br i1 %tobool80, label %cond.true81, label %if.end92

cond.true81:                                      ; preds = %land.lhs.true
  %sd_video82 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %30 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video82, align 8, !tbaa !90
  %ops83 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 6
  %31 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops83, align 8, !tbaa !79
  %video84 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %31, i32 0, i32 3
  %32 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video84, align 8, !tbaa !91
  %s_crystal_freq85 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %32, i32 0, i32 1
  %33 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq85, align 8, !tbaa !323
  %sd_video86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %34 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video86, align 8, !tbaa !90
  %call87 = call i32 %33(%struct.v4l2_subdev* %34, i32 24576000, i32 1)
  br label %if.end92

if.end92:                                         ; preds = %cond.true81, %land.lhs.true, %cond.false, %if.then72, %lor.lhs.false68, %if.then59, %if.else56, %if.then53
  %and93 = and i32 %15, 1
  %tobool94 = icmp ne i32 %and93, 0
  br i1 %tobool94, label %if.then95, label %if.end101

if.then95:                                        ; preds = %if.end92
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 0
  store i32 1444, i32* %raw_decoder_line_size, align 8, !tbaa !324
  %vbi96 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_odd_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi96, i32 0, i32 1
  store i8 32, i8* %raw_decoder_sav_odd_field, align 4, !tbaa !325
  %vbi97 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_even_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi97, i32 0, i32 2
  store i8 96, i8* %raw_decoder_sav_even_field, align 1, !tbaa !326
  %vbi98 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi98, i32 0, i32 3
  store i32 272, i32* %sliced_decoder_line_size, align 8, !tbaa !327
  %vbi99 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_odd_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi99, i32 0, i32 4
  store i8 -80, i8* %sliced_decoder_sav_odd_field, align 4, !tbaa !328
  %vbi100 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_even_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi100, i32 0, i32 5
  store i8 -16, i8* %sliced_decoder_sav_even_field, align 1, !tbaa !329
  br label %if.end101

if.end101:                                        ; preds = %if.then95, %if.end92
  %and102 = and i32 %15, 258
  %tobool103 = icmp ne i32 %and102, 0
  br i1 %tobool103, label %if.then104, label %if.end130

if.then104:                                       ; preds = %if.end101
  %hw_flags105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %35 = load i32, i32* %hw_flags105, align 8, !tbaa !320
  %and106 = and i32 %35, -259
  store i32 %and106, i32* %hw_flags105, align 8, !tbaa !320
  %sd_video107 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %36 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video107, align 8, !tbaa !90
  %name = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %36, i32 0, i32 9
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %call108 = call i8* @strstr(i8* %arraydecay, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.250, i32 0, i32 0))
  %tobool109 = icmp ne i8* %call108, null
  %hw_flags111 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %37 = load i32, i32* %hw_flags111, align 8, !tbaa !320
  br i1 %tobool109, label %if.then110, label %if.else114

if.then110:                                       ; preds = %if.then104
  %or112 = or i32 %37, 256
  store i32 %or112, i32* %hw_flags111, align 8, !tbaa !320
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %38 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and113 = and i32 %38, -81
  store i32 %and113, i32* %v4l2_cap, align 4, !tbaa !172
  br label %if.end117

if.else114:                                       ; preds = %if.then104
  %or116 = or i32 %37, 2
  store i32 %or116, i32* %hw_flags111, align 8, !tbaa !320
  br label %if.end117

if.end117:                                        ; preds = %if.else114, %if.then110
  %vbi118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_line_size119 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi118, i32 0, i32 0
  store i32 1443, i32* %raw_decoder_line_size119, align 8, !tbaa !324
  %vbi120 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_odd_field121 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi120, i32 0, i32 1
  store i8 37, i8* %raw_decoder_sav_odd_field121, align 4, !tbaa !325
  %vbi122 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_even_field123 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi122, i32 0, i32 2
  store i8 98, i8* %raw_decoder_sav_even_field123, align 1, !tbaa !326
  %vbi124 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_line_size125 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi124, i32 0, i32 3
  store i32 51, i32* %sliced_decoder_line_size125, align 8, !tbaa !327
  %vbi126 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_odd_field127 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi126, i32 0, i32 4
  store i8 -85, i8* %sliced_decoder_sav_odd_field127, align 4, !tbaa !328
  %vbi128 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_even_field129 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi128, i32 0, i32 5
  store i8 -20, i8* %sliced_decoder_sav_even_field129, align 1, !tbaa !329
  br label %if.end130

if.end130:                                        ; preds = %if.end117, %if.end101
  %and131 = and i32 %15, 2048
  %tobool132 = icmp ne i32 %and131, 0
  br i1 %tobool132, label %if.then133, label %if.end146

if.then133:                                       ; preds = %if.end130
  %vbi134 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_line_size135 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi134, i32 0, i32 0
  store i32 1443, i32* %raw_decoder_line_size135, align 8, !tbaa !324
  %vbi136 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_odd_field137 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi136, i32 0, i32 1
  store i8 37, i8* %raw_decoder_sav_odd_field137, align 4, !tbaa !325
  %vbi138 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_even_field139 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi138, i32 0, i32 2
  store i8 98, i8* %raw_decoder_sav_even_field139, align 1, !tbaa !326
  %vbi140 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_line_size141 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi140, i32 0, i32 3
  store i32 51, i32* %sliced_decoder_line_size141, align 8, !tbaa !327
  %vbi142 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_odd_field143 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi142, i32 0, i32 4
  store i8 -85, i8* %sliced_decoder_sav_odd_field143, align 4, !tbaa !328
  %vbi144 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_even_field145 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi144, i32 0, i32 5
  store i8 -20, i8* %sliced_decoder_sav_even_field145, align 1, !tbaa !329
  br label %if.end146

if.end146:                                        ; preds = %if.then133, %if.end130
  ret void
}

declare void @cx2341x_handler_set_50hz(%struct.cx2341x_handler*, i32) #2

declare %struct.v4l2_ctrl* @v4l2_ctrl_new_std(%struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_ops*, i32, i64, i64, i64, i64) #2

declare %struct.v4l2_ctrl* @v4l2_ctrl_new_std_menu(%struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_ops*, i32, i8 zeroext, i64, i8 zeroext) #2

declare void @v4l2_ctrl_cluster(i32, %struct.v4l2_ctrl**) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @request_irq(i32 %irq, i32 (i32, i8*)* %handler, i64 %flags, i8* %name, i8* %dev) #4 {
entry:
  %call = call i32 @request_threaded_irq(i32 %irq, i32 (i32, i8*)* %handler, i32 (i32, i8*)* null, i64 %flags, i8* %name, i8* %dev)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @request_modules(%struct.ivtv.1060* %dev) #0 {
entry:
  %.compoundliteral = alloca %union.anon.3, align 8
  %request_module_wk = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  call void @__init_work(%struct.work_struct* %request_module_wk, i32 0)
  %request_module_wk1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  %data = getelementptr inbounds %struct.work_struct, %struct.work_struct* %request_module_wk1, i32 0, i32 0
  %counter = getelementptr inbounds %union.anon.3, %union.anon.3* %.compoundliteral, i32 0, i32 0
  store i64 137438953408, i64* %counter, align 8, !tbaa !330
  %0 = bitcast %union.anon.3* %data to i8*
  %1 = bitcast %union.anon.3* %.compoundliteral to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 8, i32 8, i1 false), !tbaa.struct !331
  %request_module_wk2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  %lockdep_map = getelementptr inbounds %struct.work_struct, %struct.work_struct* %request_module_wk2, i32 0, i32 3
  call void @lockdep_init_map(%struct.lockdep_map* %lockdep_map, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.98, i32 0, i32 0), %struct.lock_class_key* @request_modules.__key, i32 0)
  %request_module_wk3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  %entry4 = getelementptr inbounds %struct.work_struct, %struct.work_struct* %request_module_wk3, i32 0, i32 1
  call void @INIT_LIST_HEAD(%struct.list_head* %entry4)
  %request_module_wk5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  %func = getelementptr inbounds %struct.work_struct, %struct.work_struct* %request_module_wk5, i32 0, i32 2
  store void (%struct.work_struct*)* @request_module_async, void (%struct.work_struct*)** %func, align 8, !tbaa !332
  %request_module_wk6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %dev, i32 0, i32 47
  call void @schedule_work(%struct.work_struct* %request_module_wk6)
  ret void
}

declare void @__init_work(%struct.work_struct*, i32) #2

declare void @lockdep_init_map(%struct.lockdep_map*, i8*, %struct.lock_class_key*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  store %struct.list_head* %list, %struct.list_head** %__val, align 8, !tbaa !142
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size(i8* %1, i8* %arraydecay, i32 8)
  %__val1 = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val1, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !186
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @request_module_async(%struct.work_struct* %work) #0 {
entry:
  %0 = bitcast %struct.work_struct* %work to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -25584
  %1 = bitcast i8* %add.ptr to %struct.ivtv.1060*
  %call = call i32 (i1, i8*, ...) @__request_module(i1 zeroext true, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.99, i32 0, i32 0))
  %2 = load i32 (%struct.ivtv.1060*)*, i32 (%struct.ivtv.1060*)** @ivtv_ext_init, align 8, !tbaa !86
  %cmp = icmp ne i32 (%struct.ivtv.1060*)* %2, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %3 = load i32 (%struct.ivtv.1060*)*, i32 (%struct.ivtv.1060*)** @ivtv_ext_init, align 8, !tbaa !86
  %call1 = call i32 %3(%struct.ivtv.1060* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @schedule_work(%struct.work_struct* %work) #4 {
entry:
  %0 = load %struct.workqueue_struct*, %struct.workqueue_struct** @system_wq, align 8, !tbaa !86
  call void @queue_work(%struct.workqueue_struct* %0, %struct.work_struct* %work)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @queue_work(%struct.workqueue_struct* %wq, %struct.work_struct* %work) #4 {
entry:
  %call = call zeroext i1 @queue_work_on(i32 8192, %struct.workqueue_struct* %wq, %struct.work_struct* %work)
  ret void
}

declare zeroext i1 @queue_work_on(i32, %struct.workqueue_struct*, %struct.work_struct*) #2

declare i32 @__request_module(i1 zeroext, i8*, ...) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load i8, i8* %res, align 1, !tbaa !142
  store volatile i8 %0, i8* %p, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !333
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !334
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

declare i32 @request_threaded_irq(i32, i32 (i32, i8*)*, i32 (i32, i8*)*, i64, i8*, i8*) #2

declare i8* @strstr(i8*, i8*) #2

declare i32 @pci_enable_device(%struct.pci_dev*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pci_set_dma_mask(%struct.pci_dev* %dev, i64 %mask) #4 {
entry:
  %dev1 = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 35
  %call = call i32 @dma_set_mask(%struct.device* %dev1, i64 %mask)
  ret i32 %call
}

declare %struct.resource* @__request_region(%struct.resource*, i64, i64, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_read_config_word(%struct.pci_dev* %dev, i32 %where, i16* %val) #4 {
entry:
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 1
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !tbaa !306
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 6
  %1 = load i32, i32* %devfn, align 8, !tbaa !309
  %call = call i32 @pci_bus_read_config_word(%struct.pci_bus* %0, i32 %1, i32 %where, i16* %val)
  ret void
}

declare void @pci_set_master(%struct.pci_dev*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_read_config_byte(%struct.pci_dev* %dev, i32 %where, i8* %val) #4 {
entry:
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 1
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !tbaa !306
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 6
  %1 = load i32, i32* %devfn, align 8, !tbaa !309
  %call = call i32 @pci_bus_read_config_byte(%struct.pci_bus* %0, i32 %1, i32 %where, i8* %val)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_write_config_byte(%struct.pci_dev* %dev, i32 %where, i8 zeroext %val) #4 {
entry:
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 1
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !tbaa !306
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 6
  %1 = load i32, i32* %devfn, align 8, !tbaa !309
  %call = call i32 @pci_bus_write_config_byte(%struct.pci_bus* %0, i32 %1, i32 %where, i8 zeroext %val)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_write_config_dword(%struct.pci_dev* %dev, i32 %where, i32 %val) #4 {
entry:
  %bus = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 1
  %0 = load %struct.pci_bus*, %struct.pci_bus** %bus, align 8, !tbaa !306
  %devfn = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %dev, i32 0, i32 6
  %1 = load i32, i32* %devfn, align 8, !tbaa !309
  %call = call i32 @pci_bus_write_config_dword(%struct.pci_bus* %0, i32 %1, i32 %where, i32 %val)
  ret void
}

declare i32 @pci_bus_write_config_dword(%struct.pci_bus*, i32, i32, i32) #2

declare i32 @pci_bus_write_config_byte(%struct.pci_bus*, i32, i32, i8 zeroext) #2

declare i32 @pci_bus_read_config_byte(%struct.pci_bus*, i32, i32, i8*) #2

declare i32 @pci_bus_read_config_word(%struct.pci_bus*, i32, i32, i16*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dma_set_mask(%struct.device* %dev, i64 %mask) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops(%struct.device* %dev)
  %set_dma_mask = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 16
  %0 = load i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)** %set_dma_mask, align 8, !tbaa !335
  %tobool = icmp ne i32 (%struct.device*, i64)* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %set_dma_mask1 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 16
  %1 = load i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)** %set_dma_mask1, align 8, !tbaa !335
  %call2 = call i32 %1(%struct.device* %dev, i64 %mask)
  br label %cleanup

if.end:                                           ; preds = %entry
  %dma_mask = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 18
  %2 = load i64*, i64** %dma_mask, align 8, !tbaa !337
  %tobool3 = icmp ne i64* %2, null
  br i1 %tobool3, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.end
  %call4 = call i32 @dma_supported(%struct.device* %dev, i64 %mask)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end7, label %cleanup

if.end7:                                          ; preds = %lor.lhs.false
  %dma_mask8 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 18
  %3 = load i64*, i64** %dma_mask8, align 8, !tbaa !337
  store i64 %mask, i64* %3, align 8, !tbaa !149
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %lor.lhs.false, %if.end, %if.then
  %retval.0 = phi i32 [ %call2, %if.then ], [ 0, %if.end7 ], [ -5, %lor.lhs.false ], [ -5, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_dma_ops(%struct.device* %dev) #4 {
entry:
  %magicptr = ptrtoint %struct.device* %dev to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %dma_ops = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops, align 8, !tbaa !338
  %tobool1 = icmp ne %struct.dma_map_ops* %0, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %dma_ops2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %1 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops2, align 8, !tbaa !338
  br label %return

if.end:                                           ; preds = %land.lhs.true
  %tobool3 = icmp ne %struct.device* %dev, null
  br i1 %tobool3, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !tbaa !339
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end, %entry
  %cond = phi %struct.bus_type* [ %2, %cond.true ], [ null, %entry ], [ null, %if.end ]
  %call = call %struct.dma_map_ops* @get_arch_dma_ops()
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.dma_map_ops* [ %1, %if.then ], [ %call, %cond.end ]
  ret %struct.dma_map_ops* %retval.0
}

declare i32 @dma_supported(%struct.device*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_arch_dma_ops() #4 {
entry:
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !tbaa !86
  ret %struct.dma_map_ops* %0
}

declare void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spinlock_check(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret void
}

declare void @__raw_spin_lock_init(%struct.raw_spinlock*, i8*, %struct.lock_class_key*) #2

declare void @__kthread_init_worker(%struct.kthread_worker*, i8*, %struct.lock_class_key*) #2

declare i32 @kthread_worker_fn(i8*) #2

declare %struct.task_struct* @kthread_create_on_node(i32 (i8*)*, i8*, i32, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @IS_ERR(i8* %ptr) #4 {
entry:
  %0 = ptrtoint i8* %ptr to i64
  %1 = inttoptr i64 %0 to i8*
  %2 = ptrtoint i8* %1 to i64
  %cmp = icmp uge i64 %2, -4095
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  ret i1 %tobool
}

declare i32 @wake_up_process(%struct.task_struct*) #2

declare i32 @sched_setscheduler(%struct.task_struct*, i32, %struct.atomic_t*) #2

declare void @__init_waitqueue_head(%struct.__wait_queue_head*, i8*, %struct.lock_class_key*) #2

declare void @init_timer_key(%struct.timer_list*, i32, i8*, %struct.lock_class_key*) #2

declare void @sg_init_table(%struct.scatterlist*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_set(%struct.atomic_t* %v, i32 %i) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %__val = bitcast %struct.atomic_t* %__u to i32*
  store i32 %i, i32* %__val, align 4, !tbaa !142
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size(i8* %1, i8* %arraydecay, i32 4)
  %__val1 = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val1, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_parse_std(%struct.ivtv.1060* %itv) #0 {
LeafBlock:
  br label %sw.epilog

lor.lhs.false:                                    ; No predecessors!
  %0 = load i8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @pal, i64 0, i64 1), align 1, !tbaa !142
  %conv5 = sext i8 %0 to i32
  %cmp6 = icmp eq i32 %conv5, 67
  %. = select i1 %cmp6, i64 1024, i64 512
  br label %UnifiedReturnBlock

sw.epilog:                                        ; preds = %LeafBlock
  %1 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @secam, i64 0, i64 0), align 1, !tbaa !142
  %conv11 = sext i8 %1 to i32
  %Pivot90 = icmp slt i32 %conv11, 76
  br i1 %Pivot90, label %NodeBlock66, label %NodeBlock87

NodeBlock87:                                      ; preds = %sw.epilog
  %Pivot88 = icmp slt i32 %conv11, 103
  br i1 %Pivot88, label %NodeBlock76, label %NodeBlock85

NodeBlock85:                                      ; preds = %NodeBlock87
  %Pivot86 = icmp slt i32 %conv11, 107
  br i1 %Pivot86, label %LeafBlock78, label %NodeBlock83

NodeBlock83:                                      ; preds = %NodeBlock85
  %Pivot84 = icmp slt i32 %conv11, 108
  br i1 %Pivot84, label %return, label %LeafBlock81

LeafBlock81:                                      ; preds = %NodeBlock83
  %SwitchLeaf82 = icmp eq i32 %conv11, 108
  br i1 %SwitchLeaf82, label %sw.bb14, label %sw.default24

LeafBlock78:                                      ; preds = %NodeBlock85
  %conv11.off79 = add i32 %conv11, -103
  %SwitchLeaf80 = icmp ule i32 %conv11.off79, 1
  br i1 %SwitchLeaf80, label %return, label %sw.default24

NodeBlock76:                                      ; preds = %NodeBlock87
  %Pivot77 = icmp slt i32 %conv11, 98
  br i1 %Pivot77, label %LeafBlock68, label %NodeBlock74

NodeBlock74:                                      ; preds = %NodeBlock76
  %Pivot75 = icmp slt i32 %conv11, 100
  br i1 %Pivot75, label %LeafBlock70, label %LeafBlock72

LeafBlock72:                                      ; preds = %NodeBlock74
  %SwitchLeaf73 = icmp eq i32 %conv11, 100
  br i1 %SwitchLeaf73, label %return, label %sw.default24

LeafBlock70:                                      ; preds = %NodeBlock74
  %SwitchLeaf71 = icmp eq i32 %conv11, 98
  br i1 %SwitchLeaf71, label %return, label %sw.default24

LeafBlock68:                                      ; preds = %NodeBlock76
  %SwitchLeaf69 = icmp eq i32 %conv11, 76
  br i1 %SwitchLeaf69, label %sw.bb14, label %sw.default24

NodeBlock66:                                      ; preds = %sw.epilog
  %Pivot67 = icmp slt i32 %conv11, 68
  br i1 %Pivot67, label %NodeBlock56, label %NodeBlock64

NodeBlock64:                                      ; preds = %NodeBlock66
  %Pivot65 = icmp slt i32 %conv11, 71
  br i1 %Pivot65, label %LeafBlock58, label %NodeBlock62

NodeBlock62:                                      ; preds = %NodeBlock64
  %Pivot63 = icmp slt i32 %conv11, 75
  br i1 %Pivot63, label %LeafBlock60, label %return

LeafBlock60:                                      ; preds = %NodeBlock62
  %conv11.off = add i32 %conv11, -71
  %SwitchLeaf61 = icmp ule i32 %conv11.off, 1
  br i1 %SwitchLeaf61, label %return, label %sw.default24

LeafBlock58:                                      ; preds = %NodeBlock64
  %SwitchLeaf59 = icmp eq i32 %conv11, 68
  br i1 %SwitchLeaf59, label %return, label %sw.default24

NodeBlock56:                                      ; preds = %NodeBlock66
  %Pivot57 = icmp slt i32 %conv11, 66
  br i1 %Pivot57, label %LeafBlock52, label %LeafBlock54

LeafBlock54:                                      ; preds = %NodeBlock56
  %SwitchLeaf55 = icmp eq i32 %conv11, 66
  br i1 %SwitchLeaf55, label %return, label %sw.default24

LeafBlock52:                                      ; preds = %NodeBlock56
  %SwitchLeaf53 = icmp eq i32 %conv11, 45
  br i1 %SwitchLeaf53, label %sw.epilog29, label %sw.default24

sw.bb14:                                          ; preds = %LeafBlock68, %LeafBlock81
  store i32 0, i32* @tunertype, align 4, !tbaa !120
  %2 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @secam, i64 0, i64 1), align 1, !tbaa !142
  %conv15 = sext i8 %2 to i32
  %cmp16 = icmp eq i32 %conv15, 67
  br i1 %cmp16, label %return, label %lor.lhs.false18

lor.lhs.false18:                                  ; preds = %sw.bb14
  %3 = load i8, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @secam, i64 0, i64 1), align 1, !tbaa !142
  %conv19 = sext i8 %3 to i32
  %cmp20 = icmp eq i32 %conv19, 99
  %.114 = select i1 %cmp20, i64 8388608, i64 4194304
  br label %return

sw.default24:                                     ; preds = %LeafBlock52, %LeafBlock54, %LeafBlock58, %LeafBlock60, %LeafBlock68, %LeafBlock70, %LeafBlock72, %LeafBlock78, %LeafBlock81
  br label %return

sw.epilog29:                                      ; preds = %LeafBlock52
  %4 = load i8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @ntsc, i64 0, i64 0), align 1, !tbaa !142
  %conv30 = sext i8 %4 to i32
  %Pivot113 = icmp slt i32 %conv30, 77
  br i1 %Pivot113, label %NodeBlock98, label %NodeBlock110

NodeBlock110:                                     ; preds = %sw.epilog29
  %Pivot111 = icmp slt i32 %conv30, 107
  br i1 %Pivot111, label %NodeBlock102, label %NodeBlock108

NodeBlock108:                                     ; preds = %NodeBlock110
  %Pivot109 = icmp slt i32 %conv30, 109
  br i1 %Pivot109, label %LeafBlock104, label %LeafBlock106

LeafBlock106:                                     ; preds = %NodeBlock108
  %SwitchLeaf107 = icmp eq i32 %conv30, 109
  br i1 %SwitchLeaf107, label %sw.bb31, label %sw.default34

LeafBlock104:                                     ; preds = %NodeBlock108
  %SwitchLeaf105 = icmp eq i32 %conv30, 107
  br i1 %SwitchLeaf105, label %sw.bb33, label %sw.default34

NodeBlock102:                                     ; preds = %NodeBlock110
  %Pivot103 = icmp slt i32 %conv30, 106
  br i1 %Pivot103, label %LeafBlock100, label %sw.bb32

LeafBlock100:                                     ; preds = %NodeBlock102
  %SwitchLeaf101 = icmp eq i32 %conv30, 77
  br i1 %SwitchLeaf101, label %sw.bb31, label %sw.default34

NodeBlock98:                                      ; preds = %sw.epilog29
  %Pivot99 = icmp slt i32 %conv30, 74
  br i1 %Pivot99, label %LeafBlock92, label %NodeBlock96

NodeBlock96:                                      ; preds = %NodeBlock98
  %Pivot97 = icmp slt i32 %conv30, 75
  br i1 %Pivot97, label %sw.bb32, label %LeafBlock94

LeafBlock94:                                      ; preds = %NodeBlock96
  %SwitchLeaf95 = icmp eq i32 %conv30, 75
  br i1 %SwitchLeaf95, label %sw.bb33, label %sw.default34

LeafBlock92:                                      ; preds = %NodeBlock98
  %SwitchLeaf93 = icmp eq i32 %conv30, 45
  br i1 %SwitchLeaf93, label %return, label %sw.default34

sw.bb31:                                          ; preds = %LeafBlock100, %LeafBlock106
  store i32 1, i32* @tunertype, align 4, !tbaa !120
  br label %return

sw.bb32:                                          ; preds = %NodeBlock96, %NodeBlock102
  store i32 1, i32* @tunertype, align 4, !tbaa !120
  br label %return

sw.bb33:                                          ; preds = %LeafBlock94, %LeafBlock104
  store i32 1, i32* @tunertype, align 4, !tbaa !120
  br label %return

sw.default34:                                     ; preds = %LeafBlock92, %LeafBlock94, %LeafBlock100, %LeafBlock104, %LeafBlock106
  %v4l2_dev35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name36 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev35, i32 0, i32 4
  %arraydecay37 = getelementptr inbounds [36 x i8], [36 x i8]* %name36, i32 0, i32 0
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.46.92, i32 0, i32 0), i8* %arraydecay37)
  br label %return

return:                                           ; preds = %NodeBlock83, %LeafBlock72, %NodeBlock62, %LeafBlock58, %LeafBlock78, %LeafBlock70, %LeafBlock60, %LeafBlock54, %sw.default24, %sw.default34, %sw.bb33, %sw.bb32, %sw.bb31, %LeafBlock92, %lor.lhs.false18, %sw.bb14
  %retval.0 = phi i64 [ 0, %sw.default34 ], [ 8192, %sw.bb32 ], [ 32768, %sw.bb33 ], [ 4096, %sw.bb31 ], [ 0, %sw.default24 ], [ 8388608, %sw.bb14 ], [ 0, %LeafBlock92 ], [ %.114, %lor.lhs.false18 ], [ 851968, %LeafBlock54 ], [ 851968, %LeafBlock60 ], [ 851968, %LeafBlock70 ], [ 851968, %LeafBlock78 ], [ 3276800, %LeafBlock58 ], [ 3276800, %NodeBlock62 ], [ 3276800, %LeafBlock72 ], [ 3276800, %NodeBlock83 ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %return, %lor.lhs.false
  %UnifiedRetVal = phi i64 [ %., %lor.lhs.false ], [ %retval.0, %return ]
  ret i64 %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.93(i64 %size, i32 %flags) #1 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal void @module_cleanup() #6 section ".exit.text" {
entry:
  call void @pci_unregister_driver(%struct.pci_driver* @ivtv_pci_driver)
  ret void
}

declare void @pci_unregister_driver(%struct.pci_driver*) #2

; Function Attrs: nounwind uwtable
define void @ivtv_release_stream(%struct.ivtv_stream.1071* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %fh = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 5
  store %struct.v4l2_fh* null, %struct.v4l2_fh** %fh, align 8, !tbaa !347
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %1 = load i32, i32* %type, align 8, !tbaa !348
  %cmp = icmp eq i32 %1, 6
  br i1 %cmp, label %cond.true, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %type2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %2 = load i32, i32* %type2, align 8, !tbaa !348
  %cmp3 = icmp eq i32 %2, 2
  br i1 %cmp3, label %cond.true, label %if.end

cond.true:                                        ; preds = %lor.lhs.false, %entry
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call = call zeroext i1 @constant_test_bit.95(i64 5, i64* %s_flags)
  br i1 %call, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %cond.true, %lor.lhs.false
  %s_flags6 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call7 = call zeroext i1 @test_and_clear_bit(i64 3, i64* %s_flags6)
  br i1 %call7, label %if.end13, label %do.body

do.body:                                          ; preds = %if.end
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then9, label %cleanup.cont

if.then9:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name10 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %4 = load i8*, i8** %name10, align 8, !tbaa !349
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.96, i32 0, i32 0), i8* %arraydecay, i8* %4)
  br label %cleanup.cont

if.end13:                                         ; preds = %if.end
  call void @ivtv_flush_queues(%struct.ivtv_stream.1071* %s)
  %type14 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %5 = load i32, i32* %type14, align 8, !tbaa !348
  %cmp15 = icmp eq i32 %5, 6
  br i1 %cmp15, label %if.then16, label %if.end17

if.then16:                                        ; preds = %if.end13
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 524288)
  br label %if.end17

if.end17:                                         ; preds = %if.then16, %if.end13
  %type18 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %6 = load i32, i32* %type18, align 8, !tbaa !348
  %cmp19 = icmp eq i32 %6, 5
  br i1 %cmp19, label %if.end28, label %if.else

if.else:                                          ; preds = %if.end17
  %type21 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %7 = load i32, i32* %type21, align 8, !tbaa !348
  %cmp22 = icmp eq i32 %7, 0
  br i1 %cmp22, label %if.end28, label %cleanup.cont

if.end28:                                         ; preds = %if.else, %if.end17
  %.sink = phi i64 [ 2, %if.else ], [ 6, %if.end17 ]
  %streams24 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %arrayidx25 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams24, i64 0, i64 %.sink
  %s_flags29 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx25, i32 0, i32 7
  %call30 = call zeroext i1 @test_and_clear_bit(i64 5, i64* %s_flags29)
  br i1 %call30, label %if.end32, label %cleanup.cont

if.end32:                                         ; preds = %if.end28
  %fh33 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx25, i32 0, i32 5
  %8 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh33, align 8, !tbaa !347
  %tobool34 = icmp ne %struct.v4l2_fh* %8, null
  br i1 %tobool34, label %cleanup.cont, label %if.end36

if.end36:                                         ; preds = %if.end32
  %type37 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx25, i32 0, i32 3
  %9 = load i32, i32* %type37, align 8, !tbaa !348
  %cmp38 = icmp eq i32 %9, 6
  br i1 %cmp38, label %if.then39, label %if.end40

if.then39:                                        ; preds = %if.end36
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 524288)
  br label %if.end40

if.end40:                                         ; preds = %if.then39, %if.end36
  %s_flags41 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx25, i32 0, i32 7
  call void @clear_bit(i64 3, i64* %s_flags41)
  call void @ivtv_flush_queues(%struct.ivtv_stream.1071* %arrayidx25)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end40, %if.end32, %if.end28, %if.else, %if.then9, %do.body, %cond.true
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end40 ], [ 1, %cond.true ], [ 1, %if.then9 ], [ 1, %do.body ], [ 1, %if.else ], [ 1, %if.end28 ], [ 1, %if.end32 ]
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.95(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !350
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !351
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_claim_stream(%struct.ivtv_open_id* %id, i32 %type) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 3
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %idxprom = sext i32 %type to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call = call zeroext i1 @test_and_set_bit.97(i64 3, i64* %s_flags)
  br i1 %call, label %if.then, label %if.end26

if.then:                                          ; preds = %entry
  %fh = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  %1 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !347
  %fh2 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 0
  %cmp = icmp eq %struct.v4l2_fh* %1, %fh2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %fh4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  %2 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh4, align 8, !tbaa !347
  %cmp5 = icmp eq %struct.v4l2_fh* %2, null
  br i1 %cmp5, label %land.lhs.true, label %do.body15

land.lhs.true:                                    ; preds = %if.end
  switch i32 %type, label %do.body15 [
    i32 6, label %if.then8
    i32 2, label %if.then8
  ]

if.then8:                                         ; preds = %land.lhs.true, %land.lhs.true
  %fh9 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 0
  %fh10 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  store %struct.v4l2_fh* %fh9, %struct.v4l2_fh** %fh10, align 8, !tbaa !347
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then11, label %cleanup

if.then11:                                        ; preds = %if.then8
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.107, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

do.body15:                                        ; preds = %land.lhs.true, %if.end
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 2, %4
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %cleanup

if.then18:                                        ; preds = %do.body15
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.1.108, i32 0, i32 0), i8* %arraydecay21, i32 %type)
  br label %cleanup

if.end26:                                         ; preds = %entry
  %fh27 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 0
  %fh28 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  store %struct.v4l2_fh* %fh27, %struct.v4l2_fh** %fh28, align 8, !tbaa !347
  switch i32 %type, label %cleanup [
    i32 6, label %if.then30
    i32 5, label %if.end43
    i32 0, label %land.lhs.true35
  ]

if.then30:                                        ; preds = %if.end26
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %0, i32 524288)
  br label %cleanup

land.lhs.true35:                                  ; preds = %if.end26
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %insert_mpeg = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 16
  %5 = load i32, i32* %insert_mpeg, align 8, !tbaa !132
  %tobool36 = icmp ne i32 %5, 0
  br i1 %tobool36, label %land.lhs.true37, label %cleanup

land.lhs.true37:                                  ; preds = %land.lhs.true35
  %call38 = call i32 @ivtv_raw_vbi(%struct.ivtv.1060* %0)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %cleanup, label %if.end43

if.end43:                                         ; preds = %land.lhs.true37, %if.end26
  %vbi_type.0 = phi i32 [ 6, %if.end26 ], [ 2, %land.lhs.true37 ]
  %streams44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %idxprom45 = sext i32 %vbi_type.0 to i64
  %arrayidx46 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams44, i64 0, i64 %idxprom45
  %s_flags47 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx46, i32 0, i32 7
  %call48 = call zeroext i1 @test_and_set_bit.97(i64 3, i64* %s_flags47)
  %call48.not = xor i1 %call48, true
  %cmp50 = icmp eq i32 %vbi_type.0, 6
  %or.cond = and i1 %call48.not, %cmp50
  br i1 %or.cond, label %if.then51, label %if.end53

if.then51:                                        ; preds = %if.end43
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %0, i32 524288)
  br label %if.end53

if.end53:                                         ; preds = %if.then51, %if.end43
  %s_flags54 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx46, i32 0, i32 7
  call void @set_bit.109(i64 5, i64* %s_flags54)
  br label %cleanup

cleanup:                                          ; preds = %if.end53, %land.lhs.true37, %land.lhs.true35, %if.then30, %if.end26, %if.then18, %do.body15, %if.then11, %if.then8, %if.then
  %retval.0 = phi i32 [ 0, %if.end53 ], [ 0, %if.then ], [ 0, %if.then11 ], [ 0, %if.then8 ], [ -16, %if.then18 ], [ -16, %do.body15 ], [ 0, %if.end26 ], [ 0, %if.then30 ], [ 0, %land.lhs.true37 ], [ 0, %land.lhs.true35 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit.97(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !352
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_raw_vbi(%struct.ivtv.1060* %itv) #4 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !298
  %cmp = icmp eq i32 %0, 4
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.109(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !353
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_start_capture(%struct.ivtv_open_id* %id) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 3
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %1 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %type2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %2 = load i32, i32* %type2, align 8, !tbaa !348
  %cmp = icmp eq i32 %2, 4
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %type3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %3 = load i32, i32* %type3, align 8, !tbaa !348
  %cmp4 = icmp eq i32 %3, 5
  br i1 %cmp4, label %cleanup, label %lor.lhs.false5

lor.lhs.false5:                                   ; preds = %lor.lhs.false
  %type6 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %4 = load i32, i32* %type6, align 8, !tbaa !348
  %cmp7 = icmp eq i32 %4, 8
  br i1 %cmp7, label %cleanup, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false5
  %type9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %5 = load i32, i32* %type9, align 8, !tbaa !348
  %cmp10 = icmp eq i32 %5, 7
  br i1 %cmp10, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false8
  %type11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %6 = load i32, i32* %type11, align 8, !tbaa !348
  %call = call i32 @ivtv_claim_stream(%struct.ivtv_open_id* %id, i32 %6)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.end
  %type14 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %7 = load i32, i32* %type14, align 8, !tbaa !348
  %cmp15 = icmp eq i32 %7, 6
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  br i1 %cmp15, label %if.then16, label %cond.true

if.then16:                                        ; preds = %if.end13
  call void @set_bit.109(i64 8, i64* %s_flags)
  br label %cleanup

cond.true:                                        ; preds = %if.end13
  %call19 = call zeroext i1 @constant_test_bit.95(i64 7, i64* %s_flags)
  br i1 %call19, label %if.then25, label %lor.lhs.false22

lor.lhs.false22:                                  ; preds = %cond.true
  %s_flags23 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call24 = call zeroext i1 @test_and_set_bit.97(i64 4, i64* %s_flags23)
  br i1 %call24, label %if.then25, label %if.end27

if.then25:                                        ; preds = %lor.lhs.false22, %cond.true
  %s_flags26 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @set_bit.109(i64 8, i64* %s_flags26)
  br label %cleanup

if.end27:                                         ; preds = %lor.lhs.false22
  %streams28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %arrayidx29 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams28, i64 0, i64 2
  %type30 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %8 = load i32, i32* %type30, align 8, !tbaa !348
  %cmp31 = icmp eq i32 %8, 0
  br i1 %cmp31, label %cond.true32, label %if.end63

cond.true32:                                      ; preds = %if.end27
  %s_flags33 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx29, i32 0, i32 7
  %call34 = call zeroext i1 @constant_test_bit.95(i64 5, i64* %s_flags33)
  br i1 %call34, label %land.lhs.true38, label %if.end63

land.lhs.true38:                                  ; preds = %cond.true32
  %s_flags39 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx29, i32 0, i32 7
  %call40 = call zeroext i1 @test_and_set_bit.97(i64 4, i64* %s_flags39)
  br i1 %call40, label %if.end63, label %if.then41

if.then41:                                        ; preds = %land.lhs.true38
  %call42 = call i32 @ivtv_start_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx29)
  %tobool43 = icmp ne i32 %call42, 0
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  br i1 %tobool43, label %do.body, label %do.body52

do.body:                                          ; preds = %if.then41
  %and = and i32 1, %9
  %tobool45 = icmp ne i32 %and, 0
  br i1 %tobool45, label %if.then46, label %do.end

if.then46:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.3.110, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then46, %do.body
  %s_flags49 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx29, i32 0, i32 7
  call void @clear_bit(i64 4, i64* %s_flags49)
  %s_flags50 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 4, i64* %s_flags50)
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %arrayidx)
  br label %cleanup

do.body52:                                        ; preds = %if.then41
  %and53 = and i32 2, %9
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %if.then55, label %if.end63

if.then55:                                        ; preds = %do.body52
  %v4l2_dev56 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name57 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev56, i32 0, i32 4
  %arraydecay58 = getelementptr inbounds [36 x i8], [36 x i8]* %name57, i32 0, i32 0
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.4.111, i32 0, i32 0), i8* %arraydecay58)
  br label %if.end63

if.end63:                                         ; preds = %if.then55, %do.body52, %land.lhs.true38, %cond.true32, %if.end27
  %call64 = call i32 @ivtv_start_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx)
  %tobool65 = icmp ne i32 %call64, 0
  br i1 %tobool65, label %do.body73, label %if.then66

if.then66:                                        ; preds = %if.end63
  %s_flags67 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @set_bit.109(i64 8, i64* %s_flags67)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  %call68 = call zeroext i1 @test_and_clear_bit(i64 13, i64* %i_flags)
  br i1 %call68, label %if.then69, label %cleanup

if.then69:                                        ; preds = %if.then66
  %call70 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 210, i32 1, i32 1)
  br label %cleanup

do.body73:                                        ; preds = %if.end63
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and74 = and i32 1, %10
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.then76, label %do.end84

if.then76:                                        ; preds = %do.body73
  %v4l2_dev77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name78 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev77, i32 0, i32 4
  %arraydecay79 = getelementptr inbounds [36 x i8], [36 x i8]* %name78, i32 0, i32 0
  %name80 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %11 = load i8*, i8** %name80, align 8, !tbaa !349
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.5.112, i32 0, i32 0), i8* %arraydecay79, i8* %11)
  br label %do.end84

do.end84:                                         ; preds = %if.then76, %do.body73
  %type85 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %12 = load i32, i32* %type85, align 8, !tbaa !348
  %cmp86 = icmp eq i32 %12, 0
  br i1 %cmp86, label %cond.true88, label %if.end97

cond.true88:                                      ; preds = %do.end84
  %s_flags89 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx29, i32 0, i32 7
  %call90 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags89)
  br i1 %call90, label %if.then94, label %if.end97

if.then94:                                        ; preds = %cond.true88
  %call95 = call i32 @ivtv_stop_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx29, i32 0)
  %s_flags96 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx29, i32 0, i32 7
  call void @clear_bit(i64 4, i64* %s_flags96)
  br label %if.end97

if.end97:                                         ; preds = %if.then94, %cond.true88, %do.end84
  %s_flags98 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 4, i64* %s_flags98)
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %arrayidx)
  br label %cleanup

cleanup:                                          ; preds = %if.end97, %if.then69, %if.then66, %do.end, %if.then25, %if.then16, %if.end, %lor.lhs.false8, %lor.lhs.false5, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.then16 ], [ 0, %if.then25 ], [ -5, %if.end97 ], [ -5, %do.end ], [ -22, %lor.lhs.false8 ], [ -22, %lor.lhs.false5 ], [ -22, %lor.lhs.false ], [ -22, %entry ], [ -16, %if.end ], [ 0, %if.then69 ], [ 0, %if.then66 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i64 @ivtv_v4l2_read(%struct.file* %filp, i8* %buf, i64 %count, i64* %pos) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 %5, 1024
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %6 = load i8*, i8** %name4, align 8, !tbaa !349
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6.113, i32 0, i32 0), i8* %arraydecay, i64 %count, i8* %6)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  %call6 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %serialize_lock, i32 0)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %cleanup, label %if.end9

if.end9:                                          ; preds = %do.end
  %call10 = call i32 @ivtv_start_capture(%struct.ivtv_open_id* %call)
  %conv = sext i32 %call10 to i64
  %tobool11 = icmp ne i64 %conv, 0
  br i1 %tobool11, label %if.end15, label %if.then12

if.then12:                                        ; preds = %if.end9
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 6
  %7 = load i32, i32* %f_flags, align 8, !tbaa !361
  %and13 = and i32 %7, 2048
  %call14 = call i64 @ivtv_read_pos(%struct.ivtv_stream.1071* %arrayidx, i8* %buf, i64 %count, i64* %pos, i32 %and13)
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %if.end9
  %rc.0 = phi i64 [ %conv, %if.end9 ], [ %call14, %if.then12 ]
  %serialize_lock16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock16)
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %do.end
  %retval.0 = phi i64 [ %rc.0, %if.end15 ], [ -512, %do.end ]
  ret i64 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %fh) #4 {
entry:
  %0 = bitcast %struct.v4l2_fh* %fh to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.ivtv_open_id*
  ret %struct.ivtv_open_id* %1
}

declare i32 @mutex_lock_interruptible_nested(%struct.mutex*, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_read_pos(%struct.ivtv_stream.1071* %s, i8* %ubuf, i64 %count, i64* %pos, i32 %non_block) #0 {
entry:
  %tobool = icmp ne i64 %count, 0
  br i1 %tobool, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call = call i64 @ivtv_read(%struct.ivtv_stream.1071* %s, i8* %ubuf, i64 %count, i32 %non_block)
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi i64 [ %call, %cond.true ], [ 0, %entry ]
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %1
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %cond.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and3 = and i32 %2, 1024
  %tobool4 = icmp ne i32 %and3, 0
  br i1 %tobool4, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name5 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %3 = load i8*, i8** %name5, align 8, !tbaa !349
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.18.114, i32 0, i32 0), i8* %arraydecay, i64 %count, i8* %3, i64 %cond)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %cond.end
  %cmp = icmp sgt i64 %cond, 0
  br i1 %cmp, label %if.then7, label %if.end8

if.then7:                                         ; preds = %do.end
  %add.ptr = getelementptr inbounds i64, i64* %pos, i64 %cond
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %do.end
  ret i64 %cond
}

declare void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_read(%struct.ivtv_stream.1071* %s, i8* %ubuf, i64 %tot_count, i32 %non_block) #0 {
entry:
  %rc = alloca i32, align 4
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 43
  %call = call i32 @atomic_read.115(%struct.atomic_t* %capturing)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %entry
  %fh = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 5
  %1 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !347
  %cmp2 = icmp eq %struct.v4l2_fh* %1, null
  br i1 %cmp2, label %do.body, label %if.end6

do.body:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %cleanup60

if.then3:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %3 = load i8*, i8** %name4, align 8, !tbaa !349
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.19.116, i32 0, i32 0), i8* %arraydecay, i8* %3)
  br label %cleanup60

if.end6:                                          ; preds = %land.lhs.true, %entry
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %4 = load i32, i32* %type, align 8, !tbaa !348
  %cmp7 = icmp eq i32 %4, 6
  br i1 %cmp7, label %if.then13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %type8 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %5 = load i32, i32* %type8, align 8, !tbaa !348
  %cmp9 = icmp eq i32 %5, 2
  br i1 %cmp9, label %land.lhs.true10, label %if.end14

land.lhs.true10:                                  ; preds = %lor.lhs.false
  %call11 = call i32 @ivtv_raw_vbi(%struct.ivtv.1060* %0)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.end14, label %if.then13

if.then13:                                        ; preds = %land.lhs.true10, %if.end6
  br label %if.end14

if.end14:                                         ; preds = %if.then13, %land.lhs.true10, %lor.lhs.false
  %single_frame.0 = phi i32 [ 1, %if.then13 ], [ 0, %land.lhs.true10 ], [ 0, %lor.lhs.false ]
  br label %for.cond

for.cond:                                         ; preds = %cleanup.cont, %if.end14
  %tot_written.0 = phi i64 [ 0, %if.end14 ], [ %tot_written.1, %cleanup.cont ]
  %retval.0 = phi i64 [ undef, %if.end14 ], [ %retval.1, %cleanup.cont ]
  %6 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %6) #8
  %call15 = call %struct.ivtv_buffer* @ivtv_get_buffer(%struct.ivtv_stream.1071* %s, i32 %non_block, i32* %rc)
  %cmp16 = icmp eq %struct.ivtv_buffer* %call15, null
  br i1 %cmp16, label %if.then17, label %if.end25

if.then17:                                        ; preds = %for.cond
  %tobool18 = icmp ne i64 %tot_written.0, 0
  br i1 %tobool18, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.then17
  %7 = load i32, i32* %rc, align 4, !tbaa !120
  %cmp21 = icmp eq i32 %7, 0
  br i1 %cmp21, label %if.then22, label %if.end24

if.then22:                                        ; preds = %if.end20
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit(i64 7, i64* %s_flags)
  %s_flags23 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit(i64 8, i64* %s_flags23)
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %s)
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %if.end20
  %8 = load i32, i32* %rc, align 4, !tbaa !120
  %conv = sext i32 %8 to i64
  br label %cleanup

if.end25:                                         ; preds = %for.cond
  %add.ptr = getelementptr inbounds i8, i8* %ubuf, i64 %tot_written.0
  %sub = sub i64 %tot_count, %tot_written.0
  %call26 = call i64 @ivtv_copy_buf_to_user(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %call15, i8* %add.ptr, i64 %sub)
  %conv27 = trunc i64 %call26 to i32
  store i32 %conv27, i32* %rc, align 4, !tbaa !120
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %sliced_mpeg_buf = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 28
  %cmp28 = icmp ne %struct.ivtv_buffer* %call15, %sliced_mpeg_buf
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call15, i32 0, i32 6
  %9 = load i32, i32* %readpos, align 4, !tbaa !362
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call15, i32 0, i32 5
  %10 = load i32, i32* %bytesused, align 8, !tbaa !363
  %cmp31 = icmp eq i32 %9, %10
  br i1 %cmp28, label %if.then30, label %if.else

if.then30:                                        ; preds = %if.end25
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 23
  %cond = select i1 %cmp31, %struct.ivtv_queue* %q_free, %struct.ivtv_queue* %q_io
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %call15, %struct.ivtv_queue* %cond)
  br label %if.end45

if.else:                                          ; preds = %if.end25
  br i1 %cmp31, label %if.then37, label %if.end45

if.then37:                                        ; preds = %if.else
  %vbi38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %inserted_frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi38, i32 0, i32 29
  %11 = load i32, i32* %inserted_frame, align 8, !tbaa !364
  %rem = urem i32 %11, 32
  %vbi39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %sliced_mpeg_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi39, i32 0, i32 27
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [32 x i32], [32 x i32]* %sliced_mpeg_size, i64 0, i64 %idxprom
  store i32 0, i32* %arrayidx, align 4, !tbaa !120
  %vbi40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %inserted_frame41 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi40, i32 0, i32 29
  %12 = load i32, i32* %inserted_frame41, align 8, !tbaa !364
  %inc = add i32 %12, 1
  store i32 %inc, i32* %inserted_frame41, align 8, !tbaa !364
  %bytesused42 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call15, i32 0, i32 5
  %13 = load i32, i32* %bytesused42, align 8, !tbaa !363
  %conv43 = zext i32 %13 to i64
  %vbi_data_inserted = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 85
  %14 = load i64, i64* %vbi_data_inserted, align 8, !tbaa !365
  %add = add i64 %14, %conv43
  store i64 %add, i64* %vbi_data_inserted, align 8, !tbaa !365
  br label %if.end45

if.end45:                                         ; preds = %if.then37, %if.else, %if.then30
  %15 = load i32, i32* %rc, align 4, !tbaa !120
  %cmp46 = icmp slt i32 %15, 0
  %16 = load i32, i32* %rc, align 4, !tbaa !120
  %conv49 = sext i32 %16 to i64
  br i1 %cmp46, label %cleanup, label %if.end50

if.end50:                                         ; preds = %if.end45
  %add52 = add i64 %tot_written.0, %conv49
  %cmp53 = icmp eq i64 %add52, %tot_count
  %tobool56 = icmp ne i32 %single_frame.0, 0
  %or.cond = or i1 %cmp53, %tobool56
  %. = select i1 %or.cond, i32 4, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end50, %if.end45, %if.end24, %if.then17
  %tot_written.1 = phi i64 [ %tot_written.0, %if.end24 ], [ %tot_written.0, %if.then17 ], [ %tot_written.0, %if.end45 ], [ %add52, %if.end50 ]
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.end24 ], [ 4, %if.then17 ], [ 1, %if.end45 ], [ %., %if.end50 ]
  %retval.1 = phi i64 [ %conv, %if.end24 ], [ %retval.0, %if.then17 ], [ %conv49, %if.end45 ], [ %retval.0, %if.end50 ]
  %17 = bitcast i32* %rc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #8
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 4
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %cleanup
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest.slot.0, 4
  br i1 %SwitchLeaf2, label %cleanup60, label %NewDefault

LeafBlock:                                        ; preds = %cleanup
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %cleanup.cont, label %NewDefault

cleanup.cont:                                     ; preds = %LeafBlock
  br label %for.cond

NewDefault:                                       ; preds = %LeafBlock, %LeafBlock1
  br label %cleanup60

cleanup60:                                        ; preds = %NewDefault, %LeafBlock1, %if.then3, %do.body
  %retval.2 = phi i64 [ %retval.1, %NewDefault ], [ -5, %if.then3 ], [ -5, %do.body ], [ %tot_written.1, %LeafBlock1 ]
  ret i64 %retval.2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.115(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.133(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal %struct.ivtv_buffer* @ivtv_get_buffer(%struct.ivtv_stream.1071* %s, i32 %non_block, i32* %err) #0 {
entry:
  %wait = alloca %struct.__wait_queue, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %__dummy5 = alloca i64, align 8
  %__dummy26 = alloca i64, align 8
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 2
  %1 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %1) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current.120()
  %2 = bitcast %struct.task_struct* %call to i8*
  store i8* %2, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list2 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list2, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list3 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list3, %struct.list_head** %prev, align 8, !tbaa !186
  store i32 0, i32* %err, align 4, !tbaa !120
  br label %while.cond

while.cond:                                       ; preds = %if.end118, %entry
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %3 = load i32, i32* %type, align 8, !tbaa !348
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %if.then, label %if.end42

if.then:                                          ; preds = %while.cond
  call void @ivtv_update_pgm_info(%struct.ivtv.1060* %0)
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #8
  %cmp4 = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp4 to i32
  %6 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #8
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #8
  %tobool = icmp ne i32 1, 0
  br i1 %tobool, label %land.lhs.true, label %cond.true

land.lhs.true:                                    ; preds = %if.then
  %8 = bitcast i64* %__dummy5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #8
  %9 = bitcast i64* %__dummy26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %9) #8
  %cmp7 = icmp eq i64* %__dummy5, %__dummy26
  %conv8 = zext i1 %cmp7 to i32
  %10 = bitcast i64* %__dummy26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %11 = bitcast i64* %__dummy5 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %11) #8
  %dualwatch_jiffies = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 87
  %12 = load i64, i64* %dualwatch_jiffies, align 8, !tbaa !366
  %call12 = call i64 @msecs_to_jiffies.121(i32 1000)
  %add = add i64 %12, %call12
  %13 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub = sub i64 %add, %13
  %cmp13 = icmp slt i64 %sub, 0
  br i1 %cmp13, label %if.then15, label %cond.true

if.then15:                                        ; preds = %land.lhs.true
  %14 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %dualwatch_jiffies16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 87
  store i64 %14, i64* %dualwatch_jiffies16, align 8, !tbaa !366
  call void @ivtv_dualwatch(%struct.ivtv.1060* %0)
  br label %cond.true

cond.true:                                        ; preds = %if.then15, %land.lhs.true, %if.then
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call17 = call zeroext i1 @constant_test_bit.95(i64 5, i64* %s_flags)
  br i1 %call17, label %cond.true23, label %if.end37

cond.true23:                                      ; preds = %cond.true
  %s_flags24 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call25 = call zeroext i1 @constant_test_bit.95(i64 8, i64* %s_flags24)
  br i1 %call25, label %if.end37, label %if.then31

if.then31:                                        ; preds = %cond.true23
  br label %while.cond32

while.cond32:                                     ; preds = %while.body35, %if.then31
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %call33 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q_full)
  %tobool34 = icmp ne %struct.ivtv_buffer* %call33, null
  br i1 %tobool34, label %while.body35, label %if.end37

while.body35:                                     ; preds = %while.cond32
  %dma_pts = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 14
  %15 = load i64, i64* %dma_pts, align 8, !tbaa !367
  %type36 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %16 = load i32, i32* %type36, align 8, !tbaa !348
  call void @ivtv_process_vbi_data(%struct.ivtv.1060* %0, %struct.ivtv_buffer* %call33, i64 %15, i32 %16)
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %call33, %struct.ivtv_queue* %q_free)
  br label %while.cond32

if.end37:                                         ; preds = %while.cond32, %cond.true23, %cond.true
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %sliced_mpeg_buf = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 28
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %sliced_mpeg_buf, i32 0, i32 6
  %17 = load i32, i32* %readpos, align 4, !tbaa !362
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %sliced_mpeg_buf, i32 0, i32 5
  %18 = load i32, i32* %bytesused, align 8, !tbaa !363
  %cmp38 = icmp ne i32 %17, %18
  br i1 %cmp38, label %cleanup, label %if.end42

if.end42:                                         ; preds = %if.end37, %while.cond
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 23
  %call43 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_io)
  %tobool44 = icmp ne %struct.ivtv_buffer* %call43, null
  br i1 %tobool44, label %cleanup, label %if.end46

if.end46:                                         ; preds = %if.end42
  %q_full47 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 22
  %call48 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_full47)
  %tobool49 = icmp ne %struct.ivtv_buffer* %call48, null
  br i1 %tobool49, label %if.then50, label %if.end72

if.then50:                                        ; preds = %if.end46
  %b_flags = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call48, i32 0, i32 2
  %19 = load i16, i16* %b_flags, align 8, !tbaa !368
  %conv51 = zext i16 %19 to i32
  %and = and i32 %conv51, 1
  %cmp52 = icmp eq i32 %and, 0
  br i1 %cmp52, label %cleanup, label %if.end55

if.end55:                                         ; preds = %if.then50
  %b_flags56 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call48, i32 0, i32 2
  %20 = load i16, i16* %b_flags56, align 8, !tbaa !368
  %conv57 = zext i16 %20 to i32
  %and58 = and i32 %conv57, -2
  %conv59 = trunc i32 %and58 to i16
  store i16 %conv59, i16* %b_flags56, align 8, !tbaa !368
  %type60 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %21 = load i32, i32* %type60, align 8, !tbaa !348
  %cmp61 = icmp eq i32 %21, 0
  br i1 %cmp61, label %if.then63, label %if.else

if.then63:                                        ; preds = %if.end55
  call void @ivtv_buf_swap(%struct.ivtv_buffer* %call48)
  br label %cleanup

if.else:                                          ; preds = %if.end55
  %type64 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %22 = load i32, i32* %type64, align 8, !tbaa !348
  %cmp65 = icmp ne i32 %22, 6
  br i1 %cmp65, label %if.then67, label %cleanup

if.then67:                                        ; preds = %if.else
  %dma_pts68 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 14
  %23 = load i64, i64* %dma_pts68, align 8, !tbaa !367
  %type69 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %24 = load i32, i32* %type69, align 8, !tbaa !348
  call void @ivtv_process_vbi_data(%struct.ivtv.1060* %0, %struct.ivtv_buffer* %call48, i64 %23, i32 %24)
  br label %cleanup

if.end72:                                         ; preds = %if.end46
  %type73 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %25 = load i32, i32* %type73, align 8, !tbaa !348
  %cmp74 = icmp ne i32 %25, 6
  br i1 %cmp74, label %cond.true77, label %if.end92

cond.true77:                                      ; preds = %if.end72
  %s_flags78 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call79 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags78)
  br i1 %call79, label %if.end92, label %do.body

do.body:                                          ; preds = %cond.true77
  %26 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and86 = and i32 2, %26
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %cleanup

if.then88:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name89 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %27 = load i8*, i8** %name89, align 8, !tbaa !349
  %call90 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.20.122, i32 0, i32 0), i8* %arraydecay, i8* %27)
  br label %cleanup

if.end92:                                         ; preds = %cond.true77, %if.end72
  %tobool93 = icmp ne i32 %non_block, 0
  br i1 %tobool93, label %if.then94, label %if.end95

if.then94:                                        ; preds = %if.end92
  store i32 -11, i32* %err, align 4, !tbaa !120
  br label %cleanup

if.end95:                                         ; preds = %if.end92
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 16
  call void @prepare_to_wait(%struct.__wait_queue_head* %waitq, %struct.__wait_queue* %wait, i32 1)
  %q_full96 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 22
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full96, i32 0, i32 1
  %28 = load i32, i32* %buffers, align 8, !tbaa !369
  %tobool97 = icmp ne i32 %28, 0
  br i1 %tobool97, label %if.end99, label %if.then98

if.then98:                                        ; preds = %if.end95
  call void @schedule()
  br label %if.end99

if.end99:                                         ; preds = %if.then98, %if.end95
  %waitq100 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 16
  call void @finish_wait(%struct.__wait_queue_head* %waitq100, %struct.__wait_queue* %wait)
  %serialize_lock101 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock101, i32 0)
  %call102 = call %struct.task_struct* @get_current.120()
  %call103 = call i32 @signal_pending.123(%struct.task_struct* %call102)
  %tobool104 = icmp ne i32 %call103, 0
  br i1 %tobool104, label %do.body106, label %if.end118

do.body106:                                       ; preds = %if.end99
  %29 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and107 = and i32 2, %29
  %tobool108 = icmp ne i32 %and107, 0
  br i1 %tobool108, label %if.then109, label %do.end117

if.then109:                                       ; preds = %do.body106
  %v4l2_dev110 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name111 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev110, i32 0, i32 4
  %arraydecay112 = getelementptr inbounds [36 x i8], [36 x i8]* %name111, i32 0, i32 0
  %name113 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %30 = load i8*, i8** %name113, align 8, !tbaa !349
  %call114 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21.124, i32 0, i32 0), i8* %arraydecay112, i8* %30)
  br label %do.end117

do.end117:                                        ; preds = %if.then109, %do.body106
  store i32 -4, i32* %err, align 4, !tbaa !120
  br label %cleanup

if.end118:                                        ; preds = %if.end99
  br label %while.cond

cleanup:                                          ; preds = %do.end117, %if.then94, %if.then88, %do.body, %if.then67, %if.else, %if.then63, %if.then50, %if.end42, %if.end37
  %retval.0 = phi %struct.ivtv_buffer* [ null, %if.then94 ], [ null, %do.end117 ], [ %sliced_mpeg_buf, %if.end37 ], [ %call43, %if.end42 ], [ %call48, %if.then50 ], [ %call48, %if.else ], [ %call48, %if.then67 ], [ %call48, %if.then63 ], [ null, %if.then88 ], [ null, %do.body ]
  %31 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %31) #8
  ret %struct.ivtv_buffer* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_copy_buf_to_user(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %buf, i8* %ubuf, i64 %ucount) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %1 = load i32, i32* %bytesused, align 8, !tbaa !363
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  %2 = load i32, i32* %readpos, align 4, !tbaa !362
  %sub = sub i32 %1, %2
  %conv = zext i32 %sub to i64
  %cmp = icmp ugt i64 %conv, %ucount
  %ucount.conv = select i1 %cmp, i64 %ucount, i64 %conv
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %insert_mpeg = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 16
  %3 = load i32, i32* %insert_mpeg, align 8, !tbaa !132
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %land.lhs.true, label %if.end136

land.lhs.true:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %4 = load i32, i32* %type, align 8, !tbaa !348
  %cmp3 = icmp eq i32 %4, 0
  br i1 %cmp3, label %land.lhs.true5, label %if.end136

land.lhs.true5:                                   ; preds = %land.lhs.true
  %call = call i32 @ivtv_raw_vbi(%struct.ivtv.1060* %0)
  %tobool6 = icmp ne i32 %call, 0
  br i1 %tobool6, label %if.end136, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %vbi8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %sliced_mpeg_buf = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi8, i32 0, i32 28
  %cmp9 = icmp ne %struct.ivtv_buffer* %buf, %sliced_mpeg_buf
  br i1 %cmp9, label %if.then11, label %if.end136

if.then11:                                        ; preds = %land.lhs.true7
  %buf12 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %5 = load i8*, i8** %buf12, align 8, !tbaa !370
  %readpos13 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  %6 = load i32, i32* %readpos13, align 4, !tbaa !362
  %idx.ext = zext i32 %6 to i64
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 %idx.ext
  %add.ptr14 = getelementptr inbounds i8, i8* %add.ptr, i64 1
  %search_pack_header = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 81
  %7 = load i32, i32* %search_pack_header, align 4, !tbaa !371
  %tobool15 = icmp ne i32 %7, 0
  %8 = zext i1 %tobool15 to i64
  %cond = select i1 %tobool15, i32 186, i32 224
  %conv16 = trunc i32 %cond to i8
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end82, %if.then11
  %p.0.ph = phi i8* [ %p.1, %if.end82 ], [ %add.ptr14, %if.then11 ]
  %q.0.ph = phi i8* [ %q.1, %if.end82 ], [ undef, %if.then11 ]
  %ch.0.ph = phi i8 [ %ch.1, %if.end82 ], [ %conv16, %if.then11 ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.backedge, %while.cond.outer
  %p.0 = phi i8* [ %p.0.ph, %while.cond.outer ], [ %add.ptr23, %while.cond.backedge ]
  %q.0 = phi i8* [ %q.0.ph, %while.cond.outer ], [ %q.1, %while.cond.backedge ]
  %add.ptr17 = getelementptr inbounds i8, i8* %add.ptr, i64 %ucount.conv
  %cmp18 = icmp ugt i8* %add.ptr17, %p.0
  br i1 %cmp18, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond
  %add.ptr20 = getelementptr inbounds i8, i8* %add.ptr, i64 %ucount.conv
  %sub.ptr.lhs.cast = ptrtoint i8* %add.ptr20 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %p.0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %call21 = call i8* @memchr(i8* %p.0, i32 0, i64 %sub.ptr.sub)
  %tobool22 = icmp ne i8* %call21, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %q.1 = phi i8* [ %call21, %land.rhs ], [ %q.0, %while.cond ]
  %9 = phi i1 [ false, %while.cond ], [ %tobool22, %land.rhs ]
  br i1 %9, label %while.body, label %if.end136

while.body:                                       ; preds = %land.end
  %add.ptr23 = getelementptr inbounds i8, i8* %q.1, i64 1
  %add.ptr24 = getelementptr inbounds i8, i8* %q.1, i64 15
  %buf25 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %10 = load i8*, i8** %buf25, align 8, !tbaa !370
  %bytesused26 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %11 = load i32, i32* %bytesused26, align 8, !tbaa !363
  %idx.ext27 = zext i32 %11 to i64
  %add.ptr28 = getelementptr inbounds i8, i8* %10, i64 %idx.ext27
  %cmp29 = icmp uge i8* %add.ptr24, %add.ptr28
  br i1 %cmp29, label %while.cond.backedge, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %arrayidx = getelementptr inbounds i8, i8* %q.1, i64 1
  %12 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %conv31 = zext i8 %12 to i32
  %cmp32 = icmp ne i32 %conv31, 0
  br i1 %cmp32, label %while.cond.backedge, label %lor.lhs.false34

lor.lhs.false34:                                  ; preds = %lor.lhs.false
  %arrayidx35 = getelementptr inbounds i8, i8* %q.1, i64 2
  %13 = load i8, i8* %arrayidx35, align 1, !tbaa !142
  %conv36 = zext i8 %13 to i32
  %cmp37 = icmp ne i32 %conv36, 1
  br i1 %cmp37, label %while.cond.backedge, label %lor.lhs.false39

lor.lhs.false39:                                  ; preds = %lor.lhs.false34
  %arrayidx40 = getelementptr inbounds i8, i8* %q.1, i64 3
  %14 = load i8, i8* %arrayidx40, align 1, !tbaa !142
  %conv41 = zext i8 %14 to i32
  %conv42 = zext i8 %ch.0.ph to i32
  %cmp43 = icmp ne i32 %conv41, %conv42
  br i1 %cmp43, label %while.cond.backedge, label %if.end46

while.cond.backedge:                              ; preds = %land.lhs.true123, %land.lhs.true116, %land.lhs.true109, %land.lhs.true103, %land.lhs.true97, %for.end, %if.then49, %lor.lhs.false39, %lor.lhs.false34, %lor.lhs.false, %while.body
  br label %while.cond

if.end46:                                         ; preds = %lor.lhs.false39
  %search_pack_header47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 81
  %15 = load i32, i32* %search_pack_header47, align 4, !tbaa !371
  %tobool48 = icmp ne i32 %15, 0
  br i1 %tobool48, label %if.end83, label %if.then49

if.then49:                                        ; preds = %if.end46
  %arrayidx50 = getelementptr inbounds i8, i8* %q.1, i64 6
  %16 = load i8, i8* %arrayidx50, align 1, !tbaa !142
  %conv51 = zext i8 %16 to i32
  %and = and i32 %conv51, 192
  %cmp52 = icmp ne i32 %and, 128
  br i1 %cmp52, label %while.cond.backedge, label %if.end55

if.end55:                                         ; preds = %if.then49
  %arrayidx56 = getelementptr inbounds i8, i8* %q.1, i64 7
  %17 = load i8, i8* %arrayidx56, align 1, !tbaa !142
  %conv57 = zext i8 %17 to i32
  %and58 = and i32 %conv57, 192
  %cmp59 = icmp eq i32 %and58, 128
  br i1 %cmp59, label %land.lhs.true61, label %lor.lhs.false67

land.lhs.true61:                                  ; preds = %if.end55
  %arrayidx62 = getelementptr inbounds i8, i8* %q.1, i64 9
  %18 = load i8, i8* %arrayidx62, align 1, !tbaa !142
  %conv63 = zext i8 %18 to i32
  %and64 = and i32 %conv63, 240
  %cmp65 = icmp eq i32 %and64, 32
  br i1 %cmp65, label %if.then79, label %lor.lhs.false67

lor.lhs.false67:                                  ; preds = %land.lhs.true61, %if.end55
  %arrayidx68 = getelementptr inbounds i8, i8* %q.1, i64 7
  %19 = load i8, i8* %arrayidx68, align 1, !tbaa !142
  %conv69 = zext i8 %19 to i32
  %and70 = and i32 %conv69, 192
  %cmp71 = icmp eq i32 %and70, 192
  br i1 %cmp71, label %land.lhs.true73, label %if.end82

land.lhs.true73:                                  ; preds = %lor.lhs.false67
  %arrayidx74 = getelementptr inbounds i8, i8* %q.1, i64 9
  %20 = load i8, i8* %arrayidx74, align 1, !tbaa !142
  %conv75 = zext i8 %20 to i32
  %and76 = and i32 %conv75, 240
  %cmp77 = icmp eq i32 %and76, 48
  br i1 %cmp77, label %if.then79, label %if.end82

if.then79:                                        ; preds = %land.lhs.true73, %land.lhs.true61
  %search_pack_header80 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 81
  store i32 1, i32* %search_pack_header80, align 4, !tbaa !371
  %add.ptr81 = getelementptr inbounds i8, i8* %q.1, i64 9
  br label %if.end82

if.end82:                                         ; preds = %if.then79, %land.lhs.true73, %lor.lhs.false67
  %p.1 = phi i8* [ %add.ptr81, %if.then79 ], [ %add.ptr23, %land.lhs.true73 ], [ %add.ptr23, %lor.lhs.false67 ]
  %ch.1 = phi i8 [ -70, %if.then79 ], [ %ch.0.ph, %land.lhs.true73 ], [ %ch.0.ph, %lor.lhs.false67 ]
  br label %while.cond.outer

if.end83:                                         ; preds = %if.end46
  %arrayidx84 = getelementptr inbounds i8, i8* %q.1, i64 13
  %21 = load i8, i8* %arrayidx84, align 1, !tbaa !142
  %conv85 = zext i8 %21 to i32
  %and86 = and i32 %conv85, 7
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end83
  %i.0 = phi i32 [ 0, %if.end83 ], [ %inc, %for.inc ]
  %cmp87 = icmp slt i32 %i.0, %and86
  br i1 %cmp87, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add = add nsw i32 14, %i.0
  %idxprom = sext i32 %add to i64
  %arrayidx89 = getelementptr inbounds i8, i8* %q.1, i64 %idxprom
  %22 = load i8, i8* %arrayidx89, align 1, !tbaa !142
  %conv90 = zext i8 %22 to i32
  %cmp91 = icmp ne i32 %conv90, 255
  br i1 %cmp91, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %cmp95 = icmp eq i32 %i.0, %and86
  br i1 %cmp95, label %land.lhs.true97, label %while.cond.backedge

land.lhs.true97:                                  ; preds = %for.end
  %arrayidx98 = getelementptr inbounds i8, i8* %q.1, i64 4
  %23 = load i8, i8* %arrayidx98, align 1, !tbaa !142
  %conv99 = zext i8 %23 to i32
  %and100 = and i32 %conv99, 196
  %cmp101 = icmp eq i32 %and100, 68
  br i1 %cmp101, label %land.lhs.true103, label %while.cond.backedge

land.lhs.true103:                                 ; preds = %land.lhs.true97
  %arrayidx104 = getelementptr inbounds i8, i8* %q.1, i64 12
  %24 = load i8, i8* %arrayidx104, align 1, !tbaa !142
  %conv105 = zext i8 %24 to i32
  %and106 = and i32 %conv105, 3
  %cmp107 = icmp eq i32 %and106, 3
  br i1 %cmp107, label %land.lhs.true109, label %while.cond.backedge

land.lhs.true109:                                 ; preds = %land.lhs.true103
  %add110 = add nsw i32 14, %and86
  %idxprom111 = sext i32 %add110 to i64
  %arrayidx112 = getelementptr inbounds i8, i8* %q.1, i64 %idxprom111
  %25 = load i8, i8* %arrayidx112, align 1, !tbaa !142
  %conv113 = zext i8 %25 to i32
  %cmp114 = icmp eq i32 %conv113, 0
  br i1 %cmp114, label %land.lhs.true116, label %while.cond.backedge

land.lhs.true116:                                 ; preds = %land.lhs.true109
  %add117 = add nsw i32 15, %and86
  %idxprom118 = sext i32 %add117 to i64
  %arrayidx119 = getelementptr inbounds i8, i8* %q.1, i64 %idxprom118
  %26 = load i8, i8* %arrayidx119, align 1, !tbaa !142
  %conv120 = zext i8 %26 to i32
  %cmp121 = icmp eq i32 %conv120, 0
  br i1 %cmp121, label %land.lhs.true123, label %while.cond.backedge

land.lhs.true123:                                 ; preds = %land.lhs.true116
  %add124 = add nsw i32 16, %and86
  %idxprom125 = sext i32 %add124 to i64
  %arrayidx126 = getelementptr inbounds i8, i8* %q.1, i64 %idxprom125
  %27 = load i8, i8* %arrayidx126, align 1, !tbaa !142
  %conv127 = zext i8 %27 to i32
  %cmp128 = icmp eq i32 %conv127, 1
  br i1 %cmp128, label %if.then130, label %while.cond.backedge

if.then130:                                       ; preds = %land.lhs.true123
  %search_pack_header131 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 81
  store i32 0, i32* %search_pack_header131, align 4, !tbaa !371
  %sub.ptr.lhs.cast132 = ptrtoint i8* %q.1 to i64
  %sub.ptr.rhs.cast133 = ptrtoint i8* %add.ptr to i64
  %sub.ptr.sub134 = sub i64 %sub.ptr.lhs.cast132, %sub.ptr.rhs.cast133
  call void @ivtv_setup_sliced_vbi_buf(%struct.ivtv.1060* %0)
  br label %if.end136

if.end136:                                        ; preds = %if.then130, %land.end, %land.lhs.true7, %land.lhs.true5, %land.lhs.true, %entry
  %len.2 = phi i64 [ %ucount.conv, %land.lhs.true5 ], [ %ucount.conv, %land.lhs.true7 ], [ %ucount.conv, %land.lhs.true ], [ %ucount.conv, %entry ], [ %sub.ptr.sub134, %if.then130 ], [ %ucount.conv, %land.end ]
  %buf137 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %28 = load i8*, i8** %buf137, align 8, !tbaa !370
  %readpos138 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  %29 = load i32, i32* %readpos138, align 4, !tbaa !362
  %idx.ext139 = zext i32 %29 to i64
  %add.ptr140 = getelementptr inbounds i8, i8* %28, i64 %idx.ext139
  %call141 = call i64 @copy_to_user(i8* %ubuf, i8* %add.ptr140, i64 %len.2)
  %tobool142 = icmp ne i64 %call141, 0
  br i1 %tobool142, label %do.body, label %if.end150

do.body:                                          ; preds = %if.end136
  %30 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and144 = and i32 1, %30
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %if.then146, label %cleanup

if.then146:                                       ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name147 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %31 = load i8*, i8** %name147, align 8, !tbaa !349
  %call148 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.25.117, i32 0, i32 0), i8* %arraydecay, i64 %len.2, i8* %31)
  br label %cleanup

if.end150:                                        ; preds = %if.end136
  %readpos151 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  %32 = load i32, i32* %readpos151, align 4, !tbaa !362
  %conv152 = zext i32 %32 to i64
  %add153 = add i64 %conv152, %len.2
  %conv154 = trunc i64 %add153 to i32
  store i32 %conv154, i32* %readpos151, align 4, !tbaa !362
  %type155 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %33 = load i32, i32* %type155, align 8, !tbaa !348
  %cmp156 = icmp eq i32 %33, 0
  br i1 %cmp156, label %land.lhs.true158, label %cleanup

land.lhs.true158:                                 ; preds = %if.end150
  %vbi159 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 89
  %sliced_mpeg_buf160 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi159, i32 0, i32 28
  %cmp161 = icmp ne %struct.ivtv_buffer* %buf, %sliced_mpeg_buf160
  br i1 %cmp161, label %if.then163, label %cleanup

if.then163:                                       ; preds = %land.lhs.true158
  %mpg_data_received = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 84
  %34 = load i64, i64* %mpg_data_received, align 8, !tbaa !372
  %add164 = add i64 %34, %len.2
  store i64 %add164, i64* %mpg_data_received, align 8, !tbaa !372
  br label %cleanup

cleanup:                                          ; preds = %if.then163, %land.lhs.true158, %if.end150, %if.then146, %do.body
  %retval.0 = phi i64 [ -14, %if.then146 ], [ -14, %do.body ], [ %len.2, %if.then163 ], [ %len.2, %land.lhs.true158 ], [ %len.2, %if.end150 ]
  ret i64 %retval.0
}

declare i8* @memchr(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_setup_sliced_vbi_buf(%struct.ivtv.1060* %itv) #0 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %inserted_frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 29
  %0 = load i32, i32* %inserted_frame, align 8, !tbaa !364
  %rem = urem i32 %0, 32
  %vbi1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi1, i32 0, i32 26
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data, i64 0, i64 %idxprom
  %1 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %vbi2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_buf = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi2, i32 0, i32 28
  %buf = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %sliced_mpeg_buf, i32 0, i32 4
  store i8* %1, i8** %buf, align 8, !tbaa !373
  %vbi3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi3, i32 0, i32 27
  %idxprom4 = sext i32 %rem to i64
  %arrayidx5 = getelementptr inbounds [32 x i32], [32 x i32]* %sliced_mpeg_size, i64 0, i64 %idxprom4
  %2 = load i32, i32* %arrayidx5, align 4, !tbaa !120
  %vbi6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_buf7 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi6, i32 0, i32 28
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %sliced_mpeg_buf7, i32 0, i32 5
  store i32 %2, i32* %bytesused, align 8, !tbaa !374
  %vbi8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_buf9 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi8, i32 0, i32 28
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %sliced_mpeg_buf9, i32 0, i32 6
  store i32 0, i32* %readpos, align 4, !tbaa !375
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_to_user(i8* %to, i8* %from, i64 %n) #1 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %from, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  %conv1 = trunc i64 %n to i32
  call void @kasan_check_read(i8* %from, i32 %conv1)
  call void @__might_fault(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 718)
  %cmp = icmp slt i32 %conv, 0
  %conv3 = sext i32 %conv to i64
  %cmp4 = icmp uge i64 %conv3, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp4
  %lnot = xor i1 %1, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @check_object_size(i8* %from, i64 %n, i1 zeroext true)
  %conv8 = trunc i64 %n to i32
  %call = call i64 @_copy_to_user(i8* %to, i8* %from, i32 %conv8)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @copy_user_overflow(i32 %conv, i64 %n)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.else ]
  ret i64 %n.addr.0
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1, i1) #7

declare void @kasan_check_read(i8*, i32) #2

declare void @__might_fault(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 {
entry:
  %frombool = zext i1 %to_user to i8
  %tobool = trunc i8 %frombool to i1
  call void @__check_object_size(i8* %ptr, i64 %n, i1 zeroext %tobool)
  ret void
}

declare i64 @_copy_to_user(i8*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_user_overflow(i32 %size, i64 %count) #4 {
entry:
  %tobool = icmp ne i32 1, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 688, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.739, i32 0, i32 0), i32 %size, i64 %count)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool3 = icmp ne i32 1, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  ret void
}

declare void @warn_slowpath_fmt(i8*, i32, i8*, ...) #2

declare void @__check_object_size(i8*, i64, i1 zeroext) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current.120() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !376
  ret %struct.task_struct* %0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_update_pgm_info(%struct.ivtv.1060* %itv) #0 {
entry:
  %enc_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %0 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %pgm_info_offset = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 75
  %1 = load i32, i32* %pgm_info_offset, align 8, !tbaa !377
  %idx.ext = zext i32 %1 to i64
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext
  %call = call i32 @readl.131(i8* %add.ptr)
  %pgm_info_offset1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 75
  %2 = load i32, i32* %pgm_info_offset1, align 8, !tbaa !377
  %sub = sub i32 %call, %2
  %sub2 = sub i32 %sub, 4
  %div = udiv i32 %sub2, 24
  %pgm_info_num = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %3 = load i32, i32* %pgm_info_num, align 4, !tbaa !378
  %cmp = icmp uge i32 %div, %3
  br i1 %cmp, label %do.body, label %if.end6

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %cleanup.cont76

if.then3:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %pgm_info_num4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %5 = load i32, i32* %pgm_info_num4, align 4, !tbaa !378
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.22.132, i32 0, i32 0), i8* %arraydecay, i32 %div, i32 %5)
  br label %cleanup.cont76

if.end6:                                          ; preds = %entry
  %pgm_info_num7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %6 = load i32, i32* %pgm_info_num7, align 4, !tbaa !378
  %add = add i32 %div, %6
  %pgm_info_write_idx = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 77
  %7 = load i32, i32* %pgm_info_write_idx, align 8, !tbaa !379
  %sub8 = sub i32 %add, %7
  %pgm_info_num9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %8 = load i32, i32* %pgm_info_num9, align 4, !tbaa !378
  %rem = urem i32 %sub8, %8
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont, %if.end6
  %i.0 = phi i32 [ 0, %if.end6 ], [ %i.1, %cleanup.cont ]
  %cmp10 = icmp slt i32 %i.0, %rem
  br i1 %cmp10, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %pgm_info_write_idx11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 77
  %9 = load i32, i32* %pgm_info_write_idx11, align 8, !tbaa !379
  %add12 = add i32 %9, %i.0
  %pgm_info_num13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %10 = load i32, i32* %pgm_info_num13, align 4, !tbaa !378
  %rem14 = urem i32 %add12, %10
  %pgm_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 79
  %arraydecay15 = getelementptr inbounds [400 x %struct.v4l2_enc_idx_entry], [400 x %struct.v4l2_enc_idx_entry]* %pgm_info, i32 0, i32 0
  %idx.ext16 = sext i32 %rem14 to i64
  %add.ptr17 = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %arraydecay15, i64 %idx.ext16
  %pgm_info_offset18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 75
  %11 = load i32, i32* %pgm_info_offset18, align 8, !tbaa !377
  %add19 = add i32 %11, 4
  %mul = mul nsw i32 %rem14, 24
  %add20 = add i32 %add19, %mul
  %enc_mem21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %12 = load i8*, i8** %enc_mem21, align 8, !tbaa !234
  %add22 = add i32 %add20, 4
  %idx.ext23 = zext i32 %add22 to i64
  %add.ptr24 = getelementptr i8, i8* %12, i64 %idx.ext23
  %call25 = call i32 @readl.131(i8* %add.ptr24)
  %conv = zext i32 %call25 to i64
  %enc_mem26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %13 = load i8*, i8** %enc_mem26, align 8, !tbaa !234
  %add27 = add i32 %add20, 8
  %idx.ext28 = zext i32 %add27 to i64
  %add.ptr29 = getelementptr i8, i8* %13, i64 %idx.ext28
  %call30 = call i32 @readl.131(i8* %add.ptr29)
  %conv31 = zext i32 %call30 to i64
  %shl = shl i64 %conv31, 32
  %add32 = add i64 %conv, %shl
  %offset = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 0
  store i64 %add32, i64* %offset, align 8, !tbaa !380
  %offset33 = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 0
  %14 = load i64, i64* %offset33, align 8, !tbaa !380
  %mpg_data_received = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 84
  %15 = load i64, i64* %mpg_data_received, align 8, !tbaa !372
  %cmp34 = icmp ugt i64 %14, %15
  br i1 %cmp34, label %LeafBlock, label %if.end37

if.end37:                                         ; preds = %while.body
  %vbi_data_inserted = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 85
  %16 = load i64, i64* %vbi_data_inserted, align 8, !tbaa !365
  %offset38 = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 0
  %17 = load i64, i64* %offset38, align 8, !tbaa !380
  %add39 = add i64 %17, %16
  store i64 %add39, i64* %offset38, align 8, !tbaa !380
  %enc_mem40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %18 = load i8*, i8** %enc_mem40, align 8, !tbaa !234
  %idx.ext41 = zext i32 %add20 to i64
  %add.ptr42 = getelementptr i8, i8* %18, i64 %idx.ext41
  %call43 = call i32 @readl.131(i8* %add.ptr42)
  %length = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 2
  store i32 %call43, i32* %length, align 8, !tbaa !382
  %enc_mem44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %19 = load i8*, i8** %enc_mem44, align 8, !tbaa !234
  %add45 = add i32 %add20, 16
  %idx.ext46 = zext i32 %add45 to i64
  %add.ptr47 = getelementptr i8, i8* %19, i64 %idx.ext46
  %call48 = call i32 @readl.131(i8* %add.ptr47)
  %conv49 = zext i32 %call48 to i64
  %enc_mem50 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %20 = load i8*, i8** %enc_mem50, align 8, !tbaa !234
  %add51 = add i32 %add20, 20
  %idx.ext52 = zext i32 %add51 to i64
  %add.ptr53 = getelementptr i8, i8* %20, i64 %idx.ext52
  %call54 = call i32 @readl.131(i8* %add.ptr53)
  %and55 = and i32 %call54, 1
  %conv56 = zext i32 %and55 to i64
  %shl57 = shl i64 %conv56, 32
  %add58 = add i64 %conv49, %shl57
  %pts = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 1
  store i64 %add58, i64* %pts, align 8, !tbaa !383
  %enc_mem59 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 15
  %21 = load i8*, i8** %enc_mem59, align 8, !tbaa !234
  %add60 = add i32 %add20, 12
  %idx.ext61 = zext i32 %add60 to i64
  %add.ptr62 = getelementptr i8, i8* %21, i64 %idx.ext61
  %call63 = call i32 @readl.131(i8* %add.ptr62)
  %and64 = and i32 %call63, 7
  %idxprom = zext i32 %and64 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @ivtv_update_pgm_info.mapping, i64 0, i64 %idxprom
  %22 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %flags = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %add.ptr17, i32 0, i32 3
  store i32 %22, i32* %flags, align 4, !tbaa !384
  %inc = add nsw i32 %i.0, 1
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end37, %while.body
  %i.1 = phi i32 [ %inc, %if.end37 ], [ %i.0, %while.body ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end37 ], [ 5, %while.body ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 5
  br i1 %SwitchLeaf, label %while.end, label %cleanup.cont

cleanup.cont:                                     ; preds = %LeafBlock
  br label %while.cond

while.end:                                        ; preds = %LeafBlock, %while.cond
  %i.2 = phi i32 [ %i.1, %LeafBlock ], [ %i.0, %while.cond ]
  %pgm_info_write_idx67 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 77
  %23 = load i32, i32* %pgm_info_write_idx67, align 8, !tbaa !379
  %add68 = add i32 %23, %i.2
  %pgm_info_num69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 76
  %24 = load i32, i32* %pgm_info_num69, align 4, !tbaa !378
  %rem70 = urem i32 %add68, %24
  %pgm_info_write_idx71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 77
  store i32 %rem70, i32* %pgm_info_write_idx71, align 8, !tbaa !379
  br label %cleanup.cont76

cleanup.cont76:                                   ; preds = %while.end, %if.then3, %do.body
  %cleanup.dest.slot.1 = phi i32 [ 0, %while.end ], [ 1, %if.then3 ], [ 1, %do.body ]
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.121(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_dualwatch(%struct.ivtv.1060* %itv) #0 {
entry:
  %vt = alloca %struct.v4l2_tuner, align 4
  %0 = bitcast %struct.v4l2_tuner* %vt to i8*
  call void @llvm.lifetime.start.p0i8(i64 84, i8* %0) #8
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %1 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 11
  %audio_mode = getelementptr inbounds %struct.anon.87, %struct.anon.87* %1, i32 0, i32 3
  %2 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %audio_mode, align 8, !tbaa !385
  %call = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %2)
  %3 = bitcast %struct.v4l2_tuner* %vt to i8*
  %call1 = call i8* @__memset(i8* %3, i32 0, i64 84)
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list13.sink = phi %struct.list_head* [ %list13, %for.inc ], [ %subdevs, %entry ]
  %next14 = getelementptr inbounds %struct.list_head, %struct.list_head* %list13.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next14, align 8, !tbaa !86
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr16 = getelementptr inbounds i8, i8* %5, i64 -128
  %6 = bitcast i8* %add.ptr16 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs4 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs4
  br i1 %cmp, label %for.body, label %do.end18

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 1
  %8 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner, align 8, !tbaa !255
  %tobool = icmp ne %struct.v4l2_subdev_tuner_ops* %8, null
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops5 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops5, align 8, !tbaa !79
  %tuner6 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 1
  %10 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner6, align 8, !tbaa !255
  %g_tuner = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %10, i32 0, i32 4
  %11 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %g_tuner, align 8, !tbaa !386
  %tobool7 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)* %11, null
  br i1 %tobool7, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %ops8 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops8, align 8, !tbaa !79
  %tuner9 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 1
  %13 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner9, align 8, !tbaa !255
  %g_tuner10 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %13, i32 0, i32 4
  %14 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %g_tuner10, align 8, !tbaa !386
  %call11 = call i32 %14(%struct.v4l2_subdev* %6, %struct.v4l2_tuner* %vt)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %land.lhs.true, %for.body
  %list13 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  br label %for.cond

do.end18:                                         ; preds = %for.cond
  %audmode = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 7
  %15 = load i32, i32* %audmode, align 4, !tbaa !387
  %cmp19 = icmp eq i32 %15, 4
  br i1 %cmp19, label %land.lhs.true20, label %if.end23

land.lhs.true20:                                  ; preds = %do.end18
  %rxsubchans = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 6
  %16 = load i32, i32* %rxsubchans, align 4, !tbaa !389
  %and = and i32 %16, 4
  %tobool21 = icmp ne i32 %and, 0
  %.call = select i1 %tobool21, i32 2, i32 %call
  br label %if.end23

if.end23:                                         ; preds = %land.lhs.true20, %do.end18
  %new_stereo_mode.0 = phi i32 [ %call, %do.end18 ], [ %.call, %land.lhs.true20 ]
  %dualwatch_stereo_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 88
  %17 = load i32, i32* %dualwatch_stereo_mode, align 8, !tbaa !121
  %cmp24 = icmp eq i32 %new_stereo_mode.0, %17
  br i1 %cmp24, label %cleanup, label %do.body27

do.body27:                                        ; preds = %if.end23
  %18 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and28 = and i32 2, %18
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.then30, label %do.end36

if.then30:                                        ; preds = %do.body27
  %v4l2_dev31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev31, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %dualwatch_stereo_mode32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 88
  %19 = load i32, i32* %dualwatch_stereo_mode32, align 8, !tbaa !121
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.23.129, i32 0, i32 0), i8* %arraydecay, i32 %19, i32 %new_stereo_mode.0)
  br label %do.end36

do.end36:                                         ; preds = %if.then30, %do.body27
  %cxhdl37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %20 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl37, i32 0, i32 11
  %audio_mode38 = getelementptr inbounds %struct.anon.87, %struct.anon.87* %20, i32 0, i32 3
  %21 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %audio_mode38, align 8, !tbaa !385
  %call39 = call i32 @v4l2_ctrl_s_ctrl(%struct.v4l2_ctrl* %21, i32 %new_stereo_mode.0)
  %tobool40 = icmp ne i32 %call39, 0
  br i1 %tobool40, label %do.body42, label %cleanup

do.body42:                                        ; preds = %do.end36
  %22 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and43 = and i32 2, %22
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then45, label %cleanup

if.then45:                                        ; preds = %do.body42
  %v4l2_dev46 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name47 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev46, i32 0, i32 4
  %arraydecay48 = getelementptr inbounds [36 x i8], [36 x i8]* %name47, i32 0, i32 0
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.24.130, i32 0, i32 0), i8* %arraydecay48)
  br label %cleanup

cleanup:                                          ; preds = %if.then45, %do.body42, %do.end36, %if.end23
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.end23 ], [ 0, %do.body42 ], [ 0, %if.then45 ], [ 0, %do.end36 ]
  %23 = bitcast %struct.v4l2_tuner* %vt to i8*
  call void @llvm.lifetime.end.p0i8(i64 84, i8* %23) #8
  ret void
}

declare void @mutex_lock_nested(%struct.mutex*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @signal_pending.123(%struct.task_struct* %p) #4 {
entry:
  %call = call i32 @test_tsk_thread_flag.125(%struct.task_struct* %p, i32 2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %conv2 = trunc i64 %expval to i32
  ret i32 %conv2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_tsk_thread_flag.125(%struct.task_struct* %tsk, i32 %flag) #4 {
entry:
  %call = call %union.anon.3* @task_thread_info.126(%struct.task_struct* %tsk)
  %call1 = call i32 @test_ti_thread_flag.127(%union.anon.3* %call, i32 %flag)
  ret i32 %call1
}

; Function Attrs: inlinehint nounwind uwtable
define internal %union.anon.3* @task_thread_info.126(%struct.task_struct* %task) #4 {
entry:
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %task, i32 0, i32 0
  ret %union.anon.3* %thread_info
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_ti_thread_flag.127(%union.anon.3* %ti, i32 %flag) #4 {
entry:
  %conv = sext i32 %flag to i64
  %flags = getelementptr inbounds %union.anon.3, %union.anon.3* %ti, i32 0, i32 0
  %call = call zeroext i1 @variable_test_bit.128(i64 %conv, i64* %flags)
  %conv1 = zext i1 %call to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @variable_test_bit.128(i64 %nr, i64* %addr) #1 {
entry:
  %oldbit = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %oldbit) #8
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %oldbit, i64* %addr, i64 %nr) #8, !srcloc !390
  %0 = load i8, i8* %oldbit, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %oldbit) #8
  ret i1 %tobool
}

declare i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @v4l2_ctrl_s_ctrl(%struct.v4l2_ctrl* %ctrl, i32 %val) #4 {
entry:
  call void @v4l2_ctrl_lock(%struct.v4l2_ctrl* %ctrl)
  %call = call i32 @__v4l2_ctrl_s_ctrl(%struct.v4l2_ctrl* %ctrl, i32 %val)
  call void @v4l2_ctrl_unlock(%struct.v4l2_ctrl* %ctrl)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @v4l2_ctrl_lock(%struct.v4l2_ctrl* %ctrl) #4 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %lock = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %0, i32 0, i32 1
  %1 = load %struct.mutex*, %struct.mutex** %lock, align 8, !tbaa !391
  call void @mutex_lock_nested(%struct.mutex* %1, i32 0)
  ret void
}

declare i32 @__v4l2_ctrl_s_ctrl(%struct.v4l2_ctrl*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @v4l2_ctrl_unlock(%struct.v4l2_ctrl* %ctrl) #4 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %lock = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %0, i32 0, i32 1
  %1 = load %struct.mutex*, %struct.mutex** %lock, align 8, !tbaa !391
  call void @mutex_unlock(%struct.mutex* %1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.131(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !392
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.133(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !393
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !394
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_start_decoding(%struct.ivtv_open_id* %id, i32 %speed) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 3
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %1 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %decoding = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 44
  %call = call i32 @atomic_read.115(%struct.atomic_t* %decoding)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end20

if.then:                                          ; preds = %entry
  %type2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %2 = load i32, i32* %type2, align 8, !tbaa !348
  %call3 = call i32 @ivtv_claim_stream(%struct.ivtv_open_id* %id, i32 %2)
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %do.body, label %if.end8

do.body:                                          ; preds = %if.then
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %3
  %tobool5 = icmp ne i32 %and, 0
  br i1 %tobool5, label %if.then6, label %cleanup

if.then6:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.7.134, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

if.end8:                                          ; preds = %if.then
  %call9 = call i32 @ivtv_start_v4l2_decode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 0)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %if.end8
  %cmp12 = icmp eq i32 %call9, -11
  br i1 %cmp12, label %if.then13, label %if.end15

if.then13:                                        ; preds = %if.then11
  %call14 = call i32 @ivtv_start_v4l2_decode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 0)
  br label %if.end15

if.end15:                                         ; preds = %if.then13, %if.then11
  %rc.0 = phi i32 [ %call14, %if.then13 ], [ %call9, %if.then11 ]
  %cmp16 = icmp slt i32 %rc.0, 0
  br i1 %cmp16, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.end15, %if.end8, %entry
  %type21 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %4 = load i32, i32* %type21, align 8, !tbaa !348
  %cmp22 = icmp eq i32 %4, 5
  br i1 %cmp22, label %if.then23, label %cleanup

if.then23:                                        ; preds = %if.end20
  %call24 = call i32 bitcast (i32 (%struct.ivtv*, i32)* @ivtv_set_speed to i32 (%struct.ivtv.1060*, i32)*)(%struct.ivtv.1060* %0, i32 %speed)
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %if.end20, %if.end15, %if.then6, %do.body
  %retval.0 = phi i32 [ %call24, %if.then23 ], [ -16, %if.then6 ], [ -16, %do.body ], [ %rc.0, %if.end15 ], [ 0, %if.end20 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i64 @ivtv_v4l2_write(%struct.file* %filp, i8* %user_buf, i64 %count, i64* %pos) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  %call2 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %serialize_lock, i32 0)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call3 = call i64 @ivtv_write(%struct.file* %filp, i8* %user_buf, i64 %count)
  %serialize_lock4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock4)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i64 [ %call3, %if.end ], [ -512, %entry ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_write(%struct.file* %filp, i8* %user_buf, i64 %count) #0 {
entry:
  %q = alloca %struct.ivtv_queue, align 8
  %wait = alloca %struct.__wait_queue, align 8
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 90
  %4 = bitcast %struct.ivtv_queue* %q to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %4) #8
  %5 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %5) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call2 = call %struct.task_struct* @get_current.120()
  %6 = bitcast %struct.task_struct* %call2 to i8*
  store i8* %6, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list3 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list3, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list4 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list4, %struct.list_head** %prev, align 8, !tbaa !186
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %7
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and5 = and i32 %8, 1024
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name7 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %9 = load i8*, i8** %name7, align 8, !tbaa !349
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.28.135, i32 0, i32 0), i8* %arraydecay, i64 %count, i8* %9)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %type9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %10 = load i32, i32* %type9, align 8, !tbaa !348
  %cmp = icmp ne i32 %10, 5
  br i1 %cmp, label %land.lhs.true10, label %if.end17

land.lhs.true10:                                  ; preds = %do.end
  %type11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %11 = load i32, i32* %type11, align 8, !tbaa !348
  %cmp12 = icmp ne i32 %11, 8
  br i1 %cmp12, label %land.lhs.true13, label %if.end17

land.lhs.true13:                                  ; preds = %land.lhs.true10
  %type14 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %12 = load i32, i32* %type14, align 8, !tbaa !348
  %cmp15 = icmp ne i32 %12, 7
  br i1 %cmp15, label %cleanup296, label %if.end17

if.end17:                                         ; preds = %land.lhs.true13, %land.lhs.true10, %do.end
  %type18 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %13 = load i32, i32* %type18, align 8, !tbaa !348
  %call19 = call i32 @ivtv_claim_stream(%struct.ivtv_open_id* %call, i32 %13)
  %tobool20 = icmp ne i32 %call19, 0
  br i1 %tobool20, label %cleanup296, label %if.end22

if.end22:                                         ; preds = %if.end17
  %type23 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %14 = load i32, i32* %type23, align 8, !tbaa !348
  %cmp24 = icmp eq i32 %14, 7
  br i1 %cmp24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end22
  %div = udiv i64 %count, 64
  %conv = trunc i64 %div to i32
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @set_bit.109(i64 8, i64* %s_flags)
  %15 = bitcast i8* %user_buf to %struct.v4l2_sliced_vbi_data*
  %conv26 = sext i32 %conv to i64
  %call27 = call i64 @ivtv_write_vbi_from_user(%struct.ivtv.1060* %2, %struct.v4l2_sliced_vbi_data* %15, i64 %conv26)
  br label %cleanup296

if.end28:                                         ; preds = %if.end22
  %type29 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %16 = load i32, i32* %type29, align 8, !tbaa !348
  %cmp30 = icmp eq i32 %16, 5
  %17 = zext i1 %cmp30 to i64
  %cond = select i1 %cmp30, i32 1, i32 2
  %call32 = call i32 @ivtv_set_output_mode(%struct.ivtv.1060* %2, i32 %cond)
  %cmp33 = icmp ne i32 %call32, %cond
  br i1 %cmp33, label %if.then35, label %if.end36

if.then35:                                        ; preds = %if.end28
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %arrayidx)
  br label %cleanup296

if.end36:                                         ; preds = %if.end28
  call void @ivtv_queue_init(%struct.ivtv_queue* %q)
  %s_flags37 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @set_bit.109(i64 8, i64* %s_flags37)
  %speed = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 82
  %18 = load i32, i32* %speed, align 8, !tbaa !297
  %call38 = call i32 @ivtv_start_decoding(%struct.ivtv_open_id* %call, i32 %18)
  %tobool39 = icmp ne i32 %call38, 0
  br i1 %tobool39, label %do.body41, label %if.end56

do.body41:                                        ; preds = %if.end36
  %19 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and42 = and i32 1, %19
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %do.end52

if.then44:                                        ; preds = %do.body41
  %v4l2_dev45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name46 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev45, i32 0, i32 4
  %arraydecay47 = getelementptr inbounds [36 x i8], [36 x i8]* %name46, i32 0, i32 0
  %name48 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %20 = load i8*, i8** %name48, align 8, !tbaa !349
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.29.136, i32 0, i32 0), i8* %arraydecay47, i8* %20)
  br label %do.end52

do.end52:                                         ; preds = %if.then44, %do.body41
  %s_flags53 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 4, i64* %s_flags53)
  %s_flags54 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 8, i64* %s_flags54)
  %conv55 = sext i32 %call38 to i64
  br label %cleanup296

if.end56:                                         ; preds = %if.end36
  br label %retry

retry:                                            ; preds = %if.then276, %if.end56
  %buf.0 = phi %struct.ivtv_buffer* [ undef, %if.end56 ], [ %call157, %if.then276 ]
  %bytes_written.0 = phi i32 [ 0, %if.end56 ], [ %bytes_written.4, %if.then276 ]
  %count.addr.0 = phi i64 [ %count, %if.end56 ], [ %count.addr.4, %if.then276 ]
  %user_buf.addr.0 = phi i8* [ %user_buf, %if.end56 ], [ %user_buf.addr.4, %if.then276 ]
  %retval.0 = phi i64 [ undef, %if.end56 ], [ %retval.3, %if.then276 ]
  %cmp57 = icmp eq i32 %cond, 2
  br i1 %cmp57, label %land.lhs.true59, label %if.end100

land.lhs.true59:                                  ; preds = %retry
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full, i32 0, i32 2
  %21 = load i32, i32* %length, align 4, !tbaa !395
  %cmp60 = icmp eq i32 %21, 0
  br i1 %cmp60, label %land.lhs.true62, label %if.end100

land.lhs.true62:                                  ; preds = %land.lhs.true59
  %dma_data_req_size = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %22 = load i32, i32* %dma_data_req_size, align 4, !tbaa !396
  %tobool63 = icmp ne i32 %22, 0
  br i1 %tobool63, label %if.then64, label %if.end100

if.then64:                                        ; preds = %land.lhs.true62
  br label %while.cond

while.cond:                                       ; preds = %if.end74, %if.then64
  %bytes_written.1 = phi i32 [ %bytes_written.0, %if.then64 ], [ %add, %if.end74 ]
  %count.addr.1 = phi i64 [ %count.addr.0, %if.then64 ], [ %sub, %if.end74 ]
  %user_buf.addr.1 = phi i8* [ %user_buf.addr.0, %if.then64 ], [ %add.ptr, %if.end74 ]
  %dma_data_req_size65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %23 = load i32, i32* %dma_data_req_size65, align 4, !tbaa !396
  %conv66 = zext i32 %23 to i64
  %cmp67 = icmp uge i64 %count.addr.1, %conv66
  br i1 %cmp67, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call69 = call i32 @ivtv_yuv_udma_stream_frame(%struct.ivtv.1060* %2, i8* %user_buf.addr.1)
  %cmp70 = icmp slt i32 %call69, 0
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %while.body
  %conv73 = sext i32 %call69 to i64
  br label %cleanup296

if.end74:                                         ; preds = %while.body
  %dma_data_req_size75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %24 = load i32, i32* %dma_data_req_size75, align 4, !tbaa !396
  %add = add i32 %bytes_written.1, %24
  %dma_data_req_size76 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %25 = load i32, i32* %dma_data_req_size76, align 4, !tbaa !396
  %idx.ext = zext i32 %25 to i64
  %add.ptr = getelementptr inbounds i8, i8* %user_buf.addr.1, i64 %idx.ext
  %dma_data_req_size77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %26 = load i32, i32* %dma_data_req_size77, align 4, !tbaa !396
  %conv78 = zext i32 %26 to i64
  %sub = sub i64 %count.addr.1, %conv78
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %cmp79 = icmp eq i64 %count.addr.1, 0
  br i1 %cmp79, label %do.body82, label %if.end100

do.body82:                                        ; preds = %while.end
  %27 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and83 = and i32 16, %27
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %land.lhs.true85, label %do.end97

land.lhs.true85:                                  ; preds = %do.body82
  %28 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and86 = and i32 %28, 1024
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %do.end97

if.then88:                                        ; preds = %land.lhs.true85
  %v4l2_dev89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name90 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev89, i32 0, i32 4
  %arraydecay91 = getelementptr inbounds [36 x i8], [36 x i8]* %name90, i32 0, i32 0
  %name92 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %29 = load i8*, i8** %name92, align 8, !tbaa !349
  %q_full93 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full93, i32 0, i32 3
  %30 = load i32, i32* %bytesused, align 8, !tbaa !397
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30.137, i32 0, i32 0), i8* %arraydecay91, i32 %bytes_written.1, i8* %29, i32 %30)
  br label %do.end97

do.end97:                                         ; preds = %if.then88, %land.lhs.true85, %do.body82
  %conv98 = sext i32 %bytes_written.1 to i64
  br label %cleanup296

if.end100:                                        ; preds = %while.end, %land.lhs.true62, %land.lhs.true59, %retry
  %bytes_written.2 = phi i32 [ %bytes_written.0, %land.lhs.true62 ], [ %bytes_written.0, %land.lhs.true59 ], [ %bytes_written.0, %retry ], [ %bytes_written.1, %while.end ]
  %count.addr.2 = phi i64 [ %count.addr.0, %land.lhs.true62 ], [ %count.addr.0, %land.lhs.true59 ], [ %count.addr.0, %retry ], [ %count.addr.1, %while.end ]
  %user_buf.addr.2 = phi i8* [ %user_buf.addr.0, %land.lhs.true62 ], [ %user_buf.addr.0, %land.lhs.true59 ], [ %user_buf.addr.0, %retry ], [ %user_buf.addr.1, %while.end ]
  br label %for.cond

for.cond:                                         ; preds = %if.end155, %if.end100
  %buf.1 = phi %struct.ivtv_buffer* [ %buf.0, %if.end100 ], [ %buf.5, %if.end155 ]
  br label %while.cond101

while.cond101:                                    ; preds = %while.body110, %for.cond
  %buf.2 = phi %struct.ivtv_buffer* [ %buf.1, %for.cond ], [ %buf.3, %while.body110 ]
  %length102 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 2
  %31 = load i32, i32* %length102, align 4, !tbaa !398
  %bytesused103 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 3
  %32 = load i32, i32* %bytesused103, align 8, !tbaa !399
  %sub104 = sub i32 %31, %32
  %conv105 = zext i32 %sub104 to i64
  %cmp106 = icmp ult i64 %conv105, %count.addr.2
  br i1 %cmp106, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %while.cond101
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 23
  %call108 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q_io)
  %tobool109 = icmp ne %struct.ivtv_buffer* %call108, null
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond101
  %buf.3 = phi %struct.ivtv_buffer* [ %call108, %land.rhs ], [ %buf.2, %while.cond101 ]
  %33 = phi i1 [ false, %while.cond101 ], [ %tobool109, %land.rhs ]
  br i1 %33, label %while.body110, label %while.end111

while.body110:                                    ; preds = %land.end
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %buf.3, %struct.ivtv_queue* %q)
  br label %while.cond101

while.end111:                                     ; preds = %land.end
  br label %while.cond112

while.cond112:                                    ; preds = %while.body123, %while.end111
  %buf.4 = phi %struct.ivtv_buffer* [ %buf.3, %while.end111 ], [ %buf.5, %while.body123 ]
  %length113 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 2
  %34 = load i32, i32* %length113, align 4, !tbaa !398
  %bytesused114 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 3
  %35 = load i32, i32* %bytesused114, align 8, !tbaa !399
  %sub115 = sub i32 %34, %35
  %conv116 = zext i32 %sub115 to i64
  %cmp117 = icmp ult i64 %conv116, %count.addr.2
  br i1 %cmp117, label %land.rhs119, label %land.end122

land.rhs119:                                      ; preds = %while.cond112
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  %call120 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q_free)
  %tobool121 = icmp ne %struct.ivtv_buffer* %call120, null
  br label %land.end122

land.end122:                                      ; preds = %land.rhs119, %while.cond112
  %buf.5 = phi %struct.ivtv_buffer* [ %call120, %land.rhs119 ], [ %buf.4, %while.cond112 ]
  %36 = phi i1 [ false, %while.cond112 ], [ %tobool121, %land.rhs119 ]
  br i1 %36, label %while.body123, label %while.end124

while.body123:                                    ; preds = %land.end122
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %buf.5, %struct.ivtv_queue* %q)
  br label %while.cond112

while.end124:                                     ; preds = %land.end122
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 1
  %37 = load i32, i32* %buffers, align 8, !tbaa !400
  %tobool125 = icmp ne i32 %37, 0
  br i1 %tobool125, label %for.end, label %if.end127

if.end127:                                        ; preds = %while.end124
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 6
  %38 = load i32, i32* %f_flags, align 8, !tbaa !361
  %and128 = and i32 %38, 2048
  %tobool129 = icmp ne i32 %and128, 0
  br i1 %tobool129, label %cleanup296, label %if.end131

if.end131:                                        ; preds = %if.end127
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 16
  call void @prepare_to_wait(%struct.__wait_queue_head* %waitq, %struct.__wait_queue* %wait, i32 1)
  %q_free132 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  %buffers133 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_free132, i32 0, i32 1
  %39 = load i32, i32* %buffers133, align 8, !tbaa !401
  %tobool134 = icmp ne i32 %39, 0
  br i1 %tobool134, label %if.end136, label %if.then135

if.then135:                                       ; preds = %if.end131
  call void @schedule()
  br label %if.end136

if.end136:                                        ; preds = %if.then135, %if.end131
  %waitq137 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 16
  call void @finish_wait(%struct.__wait_queue_head* %waitq137, %struct.__wait_queue* %wait)
  %serialize_lock138 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock138, i32 0)
  %call139 = call %struct.task_struct* @get_current.120()
  %call140 = call i32 @signal_pending.123(%struct.task_struct* %call139)
  %tobool141 = icmp ne i32 %call140, 0
  br i1 %tobool141, label %do.body143, label %if.end155

do.body143:                                       ; preds = %if.end136
  %40 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and144 = and i32 2, %40
  %tobool145 = icmp ne i32 %and144, 0
  br i1 %tobool145, label %if.then146, label %cleanup296

if.then146:                                       ; preds = %do.body143
  %v4l2_dev147 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name148 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev147, i32 0, i32 4
  %arraydecay149 = getelementptr inbounds [36 x i8], [36 x i8]* %name148, i32 0, i32 0
  %name150 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %41 = load i8*, i8** %name150, align 8, !tbaa !349
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.21.124, i32 0, i32 0), i8* %arraydecay149, i8* %41)
  br label %cleanup296

if.end155:                                        ; preds = %if.end136
  br label %for.cond

for.end:                                          ; preds = %while.end124
  br label %while.cond156

while.cond156:                                    ; preds = %if.end215, %for.end
  %bytes_written.3 = phi i32 [ %bytes_written.2, %for.end ], [ %add189, %if.end215 ]
  %count.addr.3 = phi i64 [ %count.addr.2, %for.end ], [ %sub188, %if.end215 ]
  %user_buf.addr.3 = phi i8* [ %user_buf.addr.2, %for.end ], [ %add.ptr186, %if.end215 ]
  %call157 = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q)
  %tobool158 = icmp ne %struct.ivtv_buffer* %call157, null
  br i1 %tobool158, label %while.body159, label %cond.true

while.body159:                                    ; preds = %while.cond156
  %type160 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %42 = load i32, i32* %type160, align 8, !tbaa !348
  %cmp161 = icmp eq i32 %42, 8
  br i1 %cmp161, label %land.lhs.true163, label %if.else

land.lhs.true163:                                 ; preds = %while.body159
  %stream_size = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  %43 = load i32, i32* %stream_size, align 8, !tbaa !402
  %conv164 = sext i32 %43 to i64
  %add165 = add i64 %conv164, %count.addr.3
  %dma_data_req_size166 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %44 = load i32, i32* %dma_data_req_size166, align 4, !tbaa !396
  %conv167 = zext i32 %44 to i64
  %cmp168 = icmp ugt i64 %add165, %conv167
  br i1 %cmp168, label %if.then170, label %if.else

if.then170:                                       ; preds = %land.lhs.true163
  %dma_data_req_size171 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %45 = load i32, i32* %dma_data_req_size171, align 4, !tbaa !396
  %stream_size172 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  %46 = load i32, i32* %stream_size172, align 8, !tbaa !402
  %sub173 = sub i32 %45, %46
  br label %if.end177

if.else:                                          ; preds = %land.lhs.true163, %while.body159
  %conv175 = trunc i64 %count.addr.3 to i32
  br label %if.end177

if.end177:                                        ; preds = %if.else, %if.then170
  %conv175.sink = phi i32 [ %conv175, %if.else ], [ %sub173, %if.then170 ]
  %call176 = call i32 @ivtv_buf_copy_from_user(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %call157, i8* %user_buf.addr.3, i32 %conv175.sink)
  %cmp178 = icmp slt i32 %call176, 0
  br i1 %cmp178, label %if.then180, label %if.end184

if.then180:                                       ; preds = %if.end177
  %q_free181 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  %call182 = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free181, i32 0)
  %conv183 = sext i32 %call176 to i64
  br label %cleanup296

if.end184:                                        ; preds = %if.end177
  %idx.ext185 = sext i32 %call176 to i64
  %add.ptr186 = getelementptr inbounds i8, i8* %user_buf.addr.3, i64 %idx.ext185
  %conv187 = sext i32 %call176 to i64
  %sub188 = sub i64 %count.addr.3, %conv187
  %add189 = add nsw i32 %bytes_written.3, %call176
  %type190 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %47 = load i32, i32* %type190, align 8, !tbaa !348
  %cmp191 = icmp eq i32 %47, 8
  br i1 %cmp191, label %if.then193, label %if.end204

if.then193:                                       ; preds = %if.end184
  %stream_size194 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  %48 = load i32, i32* %stream_size194, align 8, !tbaa !402
  %add195 = add nsw i32 %48, %call176
  store i32 %add195, i32* %stream_size194, align 8, !tbaa !402
  %stream_size196 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  %49 = load i32, i32* %stream_size196, align 8, !tbaa !402
  %dma_data_req_size197 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %50 = load i32, i32* %dma_data_req_size197, align 4, !tbaa !396
  %cmp198 = icmp eq i32 %49, %50
  br i1 %cmp198, label %if.then200, label %if.end204

if.then200:                                       ; preds = %if.then193
  %q_full201 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %call157, %struct.ivtv_queue* %q_full201)
  %stream_size202 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  store i32 0, i32* %stream_size202, align 8, !tbaa !402
  br label %cond.true

if.end204:                                        ; preds = %if.then193, %if.end184
  %bytesused205 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call157, i32 0, i32 5
  %51 = load i32, i32* %bytesused205, align 8, !tbaa !363
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 19
  %52 = load i32, i32* %buf_size, align 8, !tbaa !403
  %cmp206 = icmp ne i32 %51, %52
  br i1 %cmp206, label %if.then208, label %if.end210

if.then208:                                       ; preds = %if.end204
  %q_io209 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 23
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %call157, %struct.ivtv_queue* %q_io209)
  br label %cond.true

if.end210:                                        ; preds = %if.end204
  %type211 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %53 = load i32, i32* %type211, align 8, !tbaa !348
  %cmp212 = icmp eq i32 %53, 5
  br i1 %cmp212, label %if.then214, label %if.end215

if.then214:                                       ; preds = %if.end210
  call void @ivtv_buf_swap(%struct.ivtv_buffer* %call157)
  br label %if.end215

if.end215:                                        ; preds = %if.then214, %if.end210
  %q_full216 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_buffer* %call157, %struct.ivtv_queue* %q_full216)
  br label %while.cond156

cond.true:                                        ; preds = %if.then208, %if.then200, %while.cond156
  %bytes_written.4 = phi i32 [ %add189, %if.then200 ], [ %add189, %if.then208 ], [ %bytes_written.3, %while.cond156 ]
  %count.addr.4 = phi i64 [ %sub188, %if.then200 ], [ %sub188, %if.then208 ], [ %count.addr.3, %while.cond156 ]
  %user_buf.addr.4 = phi i8* [ %add.ptr186, %if.then200 ], [ %add.ptr186, %if.then208 ], [ %user_buf.addr.3, %while.cond156 ]
  %s_flags218 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call219 = call zeroext i1 @constant_test_bit.95(i64 2, i64* %s_flags218)
  br i1 %call219, label %if.then224, label %if.end270

if.then224:                                       ; preds = %cond.true
  %q_full225 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %length226 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full225, i32 0, i32 2
  %54 = load i32, i32* %length226, align 4, !tbaa !395
  %dma_data_req_size227 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %55 = load i32, i32* %dma_data_req_size227, align 4, !tbaa !396
  %cmp228 = icmp uge i32 %54, %55
  br i1 %cmp228, label %if.then230, label %if.end270

if.then230:                                       ; preds = %if.then224
  %cmp231 = icmp eq i32 %cond, 2
  br i1 %cmp231, label %if.then233, label %if.end234

if.then233:                                       ; preds = %if.then230
  call void @ivtv_yuv_setup_stream_frame(%struct.ivtv.1060* %2)
  br label %if.end234

if.end234:                                        ; preds = %if.then233, %if.then230
  %serialize_lock235 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock235)
  %dma_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 62
  call void @prepare_to_wait(%struct.__wait_queue_head* %dma_waitq, %struct.__wait_queue* %wait, i32 1)
  br label %while.cond236

while.cond236:                                    ; preds = %while.body245, %if.end234
  %call237 = call %struct.task_struct* @get_current.120()
  %call238 = call i32 @signal_pending.123(%struct.task_struct* %call237)
  %tobool239 = icmp ne i32 %call238, 0
  br i1 %tobool239, label %while.end246, label %land.rhs240

land.rhs240:                                      ; preds = %while.cond236
  %s_flags241 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call242 = call zeroext i1 @constant_test_bit.95(i64 0, i64* %s_flags241)
  br i1 %call242, label %while.body245, label %while.end246

while.body245:                                    ; preds = %land.rhs240
  call void @schedule()
  br label %while.cond236

while.end246:                                     ; preds = %land.rhs240, %while.cond236
  %dma_waitq247 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 62
  call void @finish_wait(%struct.__wait_queue_head* %dma_waitq247, %struct.__wait_queue* %wait)
  %serialize_lock248 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock248, i32 0)
  %tobool249 = icmp ne i32 %call238, 0
  br i1 %tobool249, label %do.body251, label %if.end263

do.body251:                                       ; preds = %while.end246
  %56 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and252 = and i32 2, %56
  %tobool253 = icmp ne i32 %and252, 0
  br i1 %tobool253, label %if.then254, label %LeafBlock

if.then254:                                       ; preds = %do.body251
  %v4l2_dev255 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name256 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev255, i32 0, i32 4
  %arraydecay257 = getelementptr inbounds [36 x i8], [36 x i8]* %name256, i32 0, i32 0
  %name258 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %57 = load i8*, i8** %name258, align 8, !tbaa !349
  %call259 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.31.138, i32 0, i32 0), i8* %arraydecay257, i8* %57)
  br label %LeafBlock

if.end263:                                        ; preds = %while.end246
  %s_flags264 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 2, i64* %s_flags264)
  %q_full265 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %q_predma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 25
  %dma_data_req_size266 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 57
  %58 = load i32, i32* %dma_data_req_size266, align 4, !tbaa !396
  %call267 = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %arrayidx, %struct.ivtv_queue* %q_full265, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_predma, i32 %58)
  %dma_data_req_offset = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 56
  %59 = load i32, i32* %dma_data_req_offset, align 8, !tbaa !404
  %add268 = add i32 %59, 16777216
  call void bitcast (void (%struct.ivtv_stream.4642*, i32, i32)* @ivtv_dma_stream_dec_prepare to void (%struct.ivtv_stream.1071*, i32, i32)*)(%struct.ivtv_stream.1071* %arrayidx, i32 %add268, i32 1)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end263, %if.then254, %do.body251
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end263 ], [ 1, %if.then254 ], [ 1, %do.body251 ]
  %retval.1 = phi i64 [ %retval.0, %if.end263 ], [ -4, %if.then254 ], [ -4, %do.body251 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end270, label %cleanup296

if.end270:                                        ; preds = %LeafBlock, %if.then224, %cond.true
  %retval.3 = phi i64 [ %retval.0, %cond.true ], [ %retval.0, %if.then224 ], [ %retval.1, %LeafBlock ]
  %tobool271 = icmp ne i64 %count.addr.4, 0
  br i1 %tobool271, label %land.lhs.true272, label %do.body278

land.lhs.true272:                                 ; preds = %if.end270
  %f_flags273 = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 6
  %60 = load i32, i32* %f_flags273, align 8, !tbaa !361
  %and274 = and i32 %60, 2048
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %do.body278, label %if.then276

if.then276:                                       ; preds = %land.lhs.true272
  br label %retry

do.body278:                                       ; preds = %land.lhs.true272, %if.end270
  %61 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and279 = and i32 16, %61
  %tobool280 = icmp ne i32 %and279, 0
  br i1 %tobool280, label %land.lhs.true281, label %do.end294

land.lhs.true281:                                 ; preds = %do.body278
  %62 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and282 = and i32 %62, 1024
  %tobool283 = icmp ne i32 %and282, 0
  br i1 %tobool283, label %if.then284, label %do.end294

if.then284:                                       ; preds = %land.lhs.true281
  %v4l2_dev285 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name286 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev285, i32 0, i32 4
  %arraydecay287 = getelementptr inbounds [36 x i8], [36 x i8]* %name286, i32 0, i32 0
  %name288 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %63 = load i8*, i8** %name288, align 8, !tbaa !349
  %q_full289 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %bytesused290 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full289, i32 0, i32 3
  %64 = load i32, i32* %bytesused290, align 8, !tbaa !397
  %call291 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.30.137, i32 0, i32 0), i8* %arraydecay287, i32 %bytes_written.4, i8* %63, i32 %64)
  br label %do.end294

do.end294:                                        ; preds = %if.then284, %land.lhs.true281, %do.body278
  %conv295 = sext i32 %bytes_written.4 to i64
  br label %cleanup296

cleanup296:                                       ; preds = %do.end294, %LeafBlock, %if.then180, %if.then146, %do.body143, %if.end127, %do.end97, %if.then72, %do.end52, %if.then35, %if.then25, %if.end17, %land.lhs.true13
  %retval.4 = phi i64 [ %call27, %if.then25 ], [ -16, %if.then35 ], [ %conv55, %do.end52 ], [ %conv73, %if.then72 ], [ %conv98, %do.end97 ], [ %conv183, %if.then180 ], [ %conv295, %do.end294 ], [ -22, %land.lhs.true13 ], [ -16, %if.end17 ], [ -11, %if.end127 ], [ -4, %if.then146 ], [ -4, %do.body143 ], [ %retval.1, %LeafBlock ]
  %65 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %65) #8
  %66 = bitcast %struct.ivtv_queue* %q to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %66) #8
  ret i64 %retval.4
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_v4l2_dec_poll(%struct.file* %filp, %struct.poll_table_struct* %wait) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 %5, 1024
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.139, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %fh = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 0
  %subscribed = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %fh, i32 0, i32 5
  %call5 = call i32 @list_empty(%struct.list_head* %subscribed)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.else, label %if.then7

if.then7:                                         ; preds = %do.end
  %fh8 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 0
  %wait9 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %fh8, i32 0, i32 4
  call void @poll_wait(%struct.file* %filp, %struct.__wait_queue_head* %wait9, %struct.poll_table_struct* %wait)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 26
  call void @clear_bit(i64 31, i64* %i_flags)
  %fh10 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 0
  %call11 = call i32 @v4l2_event_pending(%struct.v4l2_fh* %fh10)
  %tobool12 = icmp ne i32 %call11, 0
  %. = select i1 %tobool12, i32 2, i32 0
  br label %if.end28

if.else:                                          ; preds = %do.end
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 16
  call void @poll_wait(%struct.file* %filp, %struct.__wait_queue_head* %waitq, %struct.poll_table_struct* %wait)
  %i_flags15 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 26
  call void @set_bit.109(i64 31, i64* %i_flags15)
  %i_flags16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 26
  %call17 = call zeroext i1 @constant_test_bit.95(i64 29, i64* %i_flags16)
  br i1 %call17, label %if.then26, label %cond.true20

cond.true20:                                      ; preds = %if.else
  %i_flags21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 26
  %call22 = call zeroext i1 @constant_test_bit.95(i64 28, i64* %i_flags21)
  br i1 %call22, label %if.then26, label %if.end28

if.then26:                                        ; preds = %cond.true20, %if.else
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %cond.true20, %if.then7
  %res.2 = phi i32 [ %., %if.then7 ], [ 2, %if.then26 ], [ 0, %cond.true20 ]
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_free, i32 0, i32 1
  %6 = load i32, i32* %buffers, align 8, !tbaa !401
  %tobool29 = icmp ne i32 %6, 0
  %or = or i32 %res.2, 260
  %or.res.2 = select i1 %tobool29, i32 %or, i32 %res.2
  ret i32 %or.res.2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty(%struct.list_head* %head) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.133(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @poll_wait(%struct.file* %filp, %struct.__wait_queue_head* %wait_address, %struct.poll_table_struct* %p) #4 {
entry:
  %tobool = icmp ne %struct.poll_table_struct* %p, null
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %_qproc = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %p, i32 0, i32 0
  %0 = load void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)** %_qproc, align 8, !tbaa !405
  %tobool1 = icmp ne void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)* %0, null
  %tobool3 = icmp ne %struct.__wait_queue_head* %wait_address, null
  %or.cond = and i1 %tobool1, %tobool3
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %_qproc4 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %p, i32 0, i32 0
  %1 = load void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)** %_qproc4, align 8, !tbaa !405
  call void %1(%struct.file* %filp, %struct.__wait_queue_head* %wait_address, %struct.poll_table_struct* %p)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

declare i32 @v4l2_event_pending(%struct.v4l2_fh*) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_v4l2_enc_poll(%struct.file* %filp, %struct.poll_table_struct* %wait) #0 {
entry:
  %call = call i64 @poll_requested_events(%struct.poll_table_struct* %wait)
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call1 = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv2 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call1, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv2, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call1, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call3 = call zeroext i1 @constant_test_bit.95(i64 7, i64* %s_flags)
  %conv = zext i1 %call3 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %do.body37, label %cond.true

cond.true:                                        ; preds = %entry
  %s_flags4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call5 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags4)
  br i1 %call5, label %do.body37, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %cond.true
  %type11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %4 = load i32, i32* %type11, align 8, !tbaa !348
  %cmp = icmp ne i32 %4, 4
  %and = and i64 %call, 65
  %tobool14 = icmp ne i64 %and, 0
  %or.cond = and i1 %cmp, %tobool14
  br i1 %or.cond, label %if.then, label %do.body37

if.then:                                          ; preds = %land.lhs.true10
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock, i32 0)
  %call15 = call i32 @ivtv_start_capture(%struct.ivtv_open_id* %call1)
  %serialize_lock16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock16)
  %tobool17 = icmp ne i32 %call15, 0
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  br i1 %tobool17, label %do.body, label %do.body25

do.body:                                          ; preds = %if.then
  %and19 = and i32 2, %5
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %LeafBlock

if.then21:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name22 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %6 = load i8*, i8** %name22, align 8, !tbaa !349
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.9.140, i32 0, i32 0), i8* %arraydecay, i8* %6, i32 %call15)
  br label %LeafBlock

do.body25:                                        ; preds = %if.then
  %and26 = and i32 16, %5
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.then28, label %LeafBlock

if.then28:                                        ; preds = %do.body25
  %v4l2_dev29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name30 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev29, i32 0, i32 4
  %arraydecay31 = getelementptr inbounds [36 x i8], [36 x i8]* %name30, i32 0, i32 0
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.10.141, i32 0, i32 0), i8* %arraydecay31)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then28, %do.body25, %if.then21, %do.body
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then21 ], [ 1, %do.body ], [ 0, %if.then28 ], [ 0, %do.body25 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %do.body37, label %cleanup68

do.body37:                                        ; preds = %LeafBlock, %land.lhs.true10, %cond.true, %entry
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and38 = and i32 16, %7
  %tobool39 = icmp ne i32 %and38, 0
  br i1 %tobool39, label %land.lhs.true40, label %do.end50

land.lhs.true40:                                  ; preds = %do.body37
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and41 = and i32 %8, 1024
  %tobool42 = icmp ne i32 %and41, 0
  br i1 %tobool42, label %if.then43, label %do.end50

if.then43:                                        ; preds = %land.lhs.true40
  %v4l2_dev44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name45 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev44, i32 0, i32 4
  %arraydecay46 = getelementptr inbounds [36 x i8], [36 x i8]* %name45, i32 0, i32 0
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.142, i32 0, i32 0), i8* %arraydecay46)
  br label %do.end50

do.end50:                                         ; preds = %if.then43, %land.lhs.true40, %do.body37
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 16
  call void @poll_wait(%struct.file* %filp, %struct.__wait_queue_head* %waitq, %struct.poll_table_struct* %wait)
  %fh = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call1, i32 0, i32 0
  %call51 = call i32 @v4l2_event_pending(%struct.v4l2_fh* %fh)
  %tobool52 = icmp ne i32 %call51, 0
  br i1 %tobool52, label %if.then53, label %if.else

if.then53:                                        ; preds = %do.end50
  %or = or i32 0, 2
  br label %if.end56

if.else:                                          ; preds = %do.end50
  %fh54 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call1, i32 0, i32 0
  %wait55 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %fh54, i32 0, i32 4
  call void @poll_wait(%struct.file* %filp, %struct.__wait_queue_head* %wait55, %struct.poll_table_struct* %wait)
  br label %if.end56

if.end56:                                         ; preds = %if.else, %if.then53
  %res.0 = phi i32 [ %or, %if.then53 ], [ 0, %if.else ]
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full, i32 0, i32 2
  %9 = load i32, i32* %length, align 4, !tbaa !395
  %tobool57 = icmp ne i32 %9, 0
  br i1 %tobool57, label %if.then60, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end56
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 23
  %length58 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_io, i32 0, i32 2
  %10 = load i32, i32* %length58, align 4, !tbaa !407
  %tobool59 = icmp ne i32 %10, 0
  br i1 %tobool59, label %if.then60, label %if.end63

if.then60:                                        ; preds = %lor.lhs.false, %if.end56
  %or61 = or i32 %res.0, 1
  %or62 = or i32 %or61, 64
  br label %cleanup68

if.end63:                                         ; preds = %lor.lhs.false
  %tobool64 = icmp ne i32 %conv, 0
  %or66 = or i32 %res.0, 16
  %or66.res.0 = select i1 %tobool64, i32 %or66, i32 %res.0
  br label %UnifiedReturnBlock

cleanup68:                                        ; preds = %if.then60, %LeafBlock
  %retval.1 = phi i32 [ %or62, %if.then60 ], [ 8, %LeafBlock ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %cleanup68, %if.end63
  %UnifiedRetVal = phi i32 [ %or66.res.0, %if.end63 ], [ %retval.1, %cleanup68 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @poll_requested_events(%struct.poll_table_struct* %p) #4 {
entry:
  %tobool = icmp ne %struct.poll_table_struct* %p, null
  br i1 %tobool, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %_key = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %p, i32 0, i32 1
  %0 = load i64, i64* %_key, align 8, !tbaa !408
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi i64 [ %0, %cond.true ], [ -1, %entry ]
  ret i64 %cond
}

; Function Attrs: nounwind uwtable
define void @ivtv_stop_capture(%struct.ivtv_open_id* %id, i32 %gop_end) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 3
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %1 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %cond.true

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %3 = load i8*, i8** %name2, align 8, !tbaa !349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12.143, i32 0, i32 0), i8* %arraydecay, i8* %3)
  br label %cond.true

cond.true:                                        ; preds = %if.then, %entry
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call3 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags)
  br i1 %call3, label %if.then6, label %if.end62

if.then6:                                         ; preds = %cond.true
  %streams7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %arrayidx8 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams7, i64 0, i64 2
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and10 = and i32 2, %4
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then12, label %do.end19

if.then12:                                        ; preds = %if.then6
  %v4l2_dev13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name14 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev13, i32 0, i32 4
  %arraydecay15 = getelementptr inbounds [36 x i8], [36 x i8]* %name14, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.13.144, i32 0, i32 0), i8* %arraydecay15)
  br label %do.end19

do.end19:                                         ; preds = %if.then12, %if.then6
  %type20 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %5 = load i32, i32* %type20, align 8, !tbaa !157
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %cond.true21, label %if.end47

cond.true21:                                      ; preds = %do.end19
  %s_flags22 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx8, i32 0, i32 7
  %call23 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags22)
  br i1 %call23, label %cond.true28, label %if.end47

cond.true28:                                      ; preds = %cond.true21
  %s_flags29 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx8, i32 0, i32 7
  %call30 = call zeroext i1 @constant_test_bit.95(i64 8, i64* %s_flags29)
  br i1 %call30, label %if.end47, label %do.body35

do.body35:                                        ; preds = %cond.true28
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and36 = and i32 2, %6
  %tobool37 = icmp ne i32 %and36, 0
  br i1 %tobool37, label %if.then38, label %do.end45

if.then38:                                        ; preds = %do.body35
  %v4l2_dev39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name40 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev39, i32 0, i32 4
  %arraydecay41 = getelementptr inbounds [36 x i8], [36 x i8]* %name40, i32 0, i32 0
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.14.145, i32 0, i32 0), i8* %arraydecay41)
  br label %do.end45

do.end45:                                         ; preds = %if.then38, %do.body35
  %call46 = call i32 @ivtv_stop_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx8, i32 0)
  br label %if.end47

if.end47:                                         ; preds = %do.end45, %cond.true28, %cond.true21, %do.end19
  %type48 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %7 = load i32, i32* %type48, align 8, !tbaa !157
  %cmp49 = icmp eq i32 %7, 6
  br i1 %cmp49, label %cond.true53, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end47
  %type50 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %8 = load i32, i32* %type50, align 8, !tbaa !157
  %cmp51 = icmp eq i32 %8, 2
  br i1 %cmp51, label %cond.true53, label %if.else

cond.true53:                                      ; preds = %lor.lhs.false, %if.end47
  %s_flags54 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call55 = call zeroext i1 @constant_test_bit.95(i64 5, i64* %s_flags54)
  br i1 %call55, label %if.then59, label %if.else

if.then59:                                        ; preds = %cond.true53
  %fh = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  store %struct.v4l2_fh* null, %struct.v4l2_fh** %fh, align 8, !tbaa !347
  br label %if.end62

if.else:                                          ; preds = %cond.true53, %lor.lhs.false
  %call60 = call i32 @ivtv_stop_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 %gop_end)
  br label %if.end62

if.end62:                                         ; preds = %if.else, %if.then59, %cond.true
  %tobool63 = icmp ne i32 %gop_end, 0
  br i1 %tobool63, label %if.end67, label %if.then64

if.then64:                                        ; preds = %if.end62
  %s_flags65 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 8, i64* %s_flags65)
  %s_flags66 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 7, i64* %s_flags66)
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %arrayidx)
  br label %if.end67

if.end67:                                         ; preds = %if.then64, %if.end62
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_v4l2_close(%struct.file* %filp) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id* @fh2id(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 3
  %2 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %5 = load i8*, i8** %name2, align 8, !tbaa !349
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15.146, i32 0, i32 0), i8* %arraydecay, i8* %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock, i32 0)
  %type4 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 1
  %6 = load i32, i32* %type4, align 8, !tbaa !157
  %cmp = icmp eq i32 %6, 4
  br i1 %cmp, label %land.lhs.true, label %if.end88

land.lhs.true:                                    ; preds = %do.end
  %call5 = call i32 @v4l2_fh_is_singular_file(%struct.file* %filp)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then7, label %if.end88

if.then7:                                         ; preds = %land.lhs.true
  call void @ivtv_mute(%struct.ivtv.1060* %2)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 26
  call void @clear_bit(i64 5, i64* %i_flags)
  %v4l2_dev10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev10, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then7
  %list26.sink = phi %struct.list_head* [ %list26, %for.inc ], [ %subdevs, %if.then7 ]
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26.sink, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %next27, align 8, !tbaa !86
  %8 = bitcast %struct.list_head* %7 to i8*
  %add.ptr29 = getelementptr inbounds i8, i8* %8, i64 -128
  %9 = bitcast i8* %add.ptr29 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 1
  %v4l2_dev11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %subdevs12 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev11, i32 0, i32 2
  %cmp13 = icmp ne %struct.list_head* %list, %subdevs12
  br i1 %cmp13, label %for.body, label %do.end33

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 3
  %11 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool14 = icmp ne %struct.v4l2_subdev_video_ops* %11, null
  br i1 %tobool14, label %land.lhs.true15, label %for.inc

land.lhs.true15:                                  ; preds = %for.body
  %ops16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops16, align 8, !tbaa !79
  %video17 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 3
  %13 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video17, align 8, !tbaa !91
  %s_std = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %13, i32 0, i32 3
  %14 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std, align 8, !tbaa !409
  %tobool18 = icmp ne i32 (%struct.v4l2_subdev*, i64)* %14, null
  br i1 %tobool18, label %if.then19, label %for.inc

if.then19:                                        ; preds = %land.lhs.true15
  %ops20 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %15 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops20, align 8, !tbaa !79
  %video21 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %15, i32 0, i32 3
  %16 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video21, align 8, !tbaa !91
  %s_std22 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %16, i32 0, i32 3
  %17 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std22, align 8, !tbaa !409
  %std = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 35
  %18 = load i64, i64* %std, align 8, !tbaa !166
  %call23 = call i32 %17(%struct.v4l2_subdev* %9, i64 %18)
  br label %for.inc

for.inc:                                          ; preds = %if.then19, %land.lhs.true15, %for.body
  %list26 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 1
  br label %for.cond

do.end33:                                         ; preds = %for.cond
  call void bitcast (void (%struct.ivtv*)* @ivtv_audio_set_io to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %2)
  %hw_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 9
  %19 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %and34 = and i32 %19, 258
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %do.body39, label %if.end79

do.body39:                                        ; preds = %do.end33
  %v4l2_dev41 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %subdevs42 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev41, i32 0, i32 2
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc68, %do.body39
  %list70.sink = phi %struct.list_head* [ %list70, %for.inc68 ], [ %subdevs42, %do.body39 ]
  %next71 = getelementptr inbounds %struct.list_head, %struct.list_head* %list70.sink, i32 0, i32 0
  %20 = load %struct.list_head*, %struct.list_head** %next71, align 8, !tbaa !86
  %21 = bitcast %struct.list_head* %20 to i8*
  %add.ptr73 = getelementptr inbounds i8, i8* %21, i64 -128
  %22 = bitcast i8* %add.ptr73 to %struct.v4l2_subdev*
  %list47 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  %v4l2_dev48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 19
  %subdevs49 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev48, i32 0, i32 2
  %cmp50 = icmp ne %struct.list_head* %list47, %subdevs49
  br i1 %cmp50, label %for.body51, label %if.end79

for.body51:                                       ; preds = %for.cond46
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 10
  %23 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and52 = and i32 %23, 258
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %land.lhs.true54, label %for.inc68

land.lhs.true54:                                  ; preds = %for.body51
  %ops55 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %24 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops55, align 8, !tbaa !79
  %video56 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %24, i32 0, i32 3
  %25 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video56, align 8, !tbaa !91
  %tobool57 = icmp ne %struct.v4l2_subdev_video_ops* %25, null
  br i1 %tobool57, label %land.lhs.true58, label %for.inc68

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %ops59 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %26 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops59, align 8, !tbaa !79
  %video60 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %26, i32 0, i32 3
  %27 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video60, align 8, !tbaa !91
  %s_crystal_freq = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %27, i32 0, i32 1
  %28 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq, align 8, !tbaa !323
  %tobool61 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32)* %28, null
  br i1 %tobool61, label %if.then62, label %for.inc68

if.then62:                                        ; preds = %land.lhs.true58
  %ops63 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %29 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops63, align 8, !tbaa !79
  %video64 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %29, i32 0, i32 3
  %30 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video64, align 8, !tbaa !91
  %s_crystal_freq65 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %30, i32 0, i32 1
  %31 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq65, align 8, !tbaa !323
  %call66 = call i32 %31(%struct.v4l2_subdev* %22, i32 32110000, i32 0)
  br label %for.inc68

for.inc68:                                        ; preds = %if.then62, %land.lhs.true58, %land.lhs.true54, %for.body51
  %list70 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  br label %for.cond46

if.end79:                                         ; preds = %for.cond46, %do.end33
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 43
  %call80 = call i32 @atomic_read.115(%struct.atomic_t* %capturing)
  %cmp81 = icmp sgt i32 %call80, 0
  br i1 %cmp81, label %if.then82, label %if.end87

if.then82:                                        ; preds = %if.end79
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 20
  %32 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 14
  %video_mute = getelementptr inbounds %struct.anon.88, %struct.anon.88* %32, i32 0, i32 0
  %33 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %video_mute, align 8, !tbaa !410
  %call83 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %33)
  %cxhdl84 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 20
  %34 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl84, i32 0, i32 14
  %video_mute_yuv = getelementptr inbounds %struct.anon.88, %struct.anon.88* %34, i32 0, i32 1
  %35 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %video_mute_yuv, align 8, !tbaa !411
  %call85 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %35)
  %shl = shl i32 %call85, 8
  %or = or i32 %call83, %shl
  %call86 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %2, i32 217, i32 1, i32 %or)
  br label %if.end87

if.end87:                                         ; preds = %if.then82, %if.end79
  call void @ivtv_unmute(%struct.ivtv.1060* %2)
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %land.lhs.true, %do.end
  call void @v4l2_fh_del(%struct.v4l2_fh* %1)
  call void @v4l2_fh_exit(%struct.v4l2_fh* %1)
  %fh89 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 5
  %36 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh89, align 8, !tbaa !347
  %fh90 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %call, i32 0, i32 0
  %cmp91 = icmp ne %struct.v4l2_fh* %36, %fh90
  br i1 %cmp91, label %close_done, label %if.end93

if.end93:                                         ; preds = %if.end88
  %type94 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %37 = load i32, i32* %type94, align 8, !tbaa !348
  %cmp95 = icmp sge i32 %37, 5
  br i1 %cmp95, label %if.then96, label %if.else

if.then96:                                        ; preds = %if.end93
  %streams97 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 42
  %arrayidx98 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams97, i64 0, i64 7
  call void @ivtv_stop_decoding(%struct.ivtv_open_id* %call, i32 3, i64 0)
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 31
  %38 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp99 = icmp eq i32 %38, 0
  br i1 %cmp99, label %cond.true, label %close_done

cond.true:                                        ; preds = %if.then96
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx98, i32 0, i32 7
  %call101 = call zeroext i1 @constant_test_bit.95(i64 8, i64* %s_flags)
  br i1 %call101, label %close_done, label %if.then104

if.then104:                                       ; preds = %cond.true
  call void @ivtv_disable_cc(%struct.ivtv.1060* %2)
  br label %close_done

if.else:                                          ; preds = %if.end93
  call void @ivtv_stop_capture(%struct.ivtv_open_id* %call, i32 0)
  br label %close_done

close_done:                                       ; preds = %if.else, %if.then104, %cond.true, %if.then96, %if.end88
  %39 = bitcast %struct.ivtv_open_id* %call to i8*
  call void @kfree(i8* %39)
  %serialize_lock107 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock107)
  ret i32 0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @v4l2_fh_is_singular_file(%struct.file* %filp) #4 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call i32 @v4l2_fh_is_singular(%struct.v4l2_fh* %1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @ivtv_mute(%struct.ivtv.1060* %itv) #0 {
entry:
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  %call = call i32 @atomic_read.115(%struct.atomic_t* %capturing)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %do.body

if.then:                                          ; preds = %entry
  %call1 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 218, i32 1, i32 1)
  br label %do.body

do.body:                                          ; preds = %if.then, %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %0
  %tobool2 = icmp ne i32 %and, 0
  br i1 %tobool2, label %if.then3, label %do.end

if.then3:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16.149, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then3, %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_unmute(%struct.ivtv.1060* %itv) #0 {
entry:
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  %call = call i32 @atomic_read.115(%struct.atomic_t* %capturing)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %do.body

if.then:                                          ; preds = %entry
  %call1 = call i32 @ivtv_msleep_timeout(i32 100, i32 0)
  %call2 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 220, i32 1, i32 12)
  %call3 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 218, i32 1, i32 0)
  br label %do.body

do.body:                                          ; preds = %if.then, %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %0
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then5, label %do.end

if.then5:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.17.148, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then5, %do.body
  ret void
}

declare void @v4l2_fh_del(%struct.v4l2_fh*) #2

declare void @v4l2_fh_exit(%struct.v4l2_fh*) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_stop_decoding(%struct.ivtv_open_id* %id, i32 %flags, i64 %pts) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 3
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %1 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %3 = load i8*, i8** %name2, align 8, !tbaa !349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12.143, i32 0, i32 0), i8* %arraydecay, i8* %3)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %type3 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 1
  %4 = load i32, i32* %type3, align 8, !tbaa !157
  %cmp = icmp eq i32 %4, 8
  br i1 %cmp, label %cond.true, label %cond.true9

cond.true:                                        ; preds = %do.end
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  %call4 = call zeroext i1 @constant_test_bit.95(i64 12, i64* %i_flags)
  br i1 %call4, label %if.then7, label %cond.true9

if.then7:                                         ; preds = %cond.true
  call void @ivtv_yuv_close(%struct.ivtv.1060* %0)
  br label %cond.true9

cond.true9:                                       ; preds = %if.then7, %cond.true, %do.end
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call10 = call zeroext i1 @constant_test_bit.95(i64 4, i64* %s_flags)
  br i1 %call10, label %do.body15, label %if.end27

do.body15:                                        ; preds = %cond.true9
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 2, %5
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %do.end25

if.then18:                                        ; preds = %do.body15
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.32.147, i32 0, i32 0), i8* %arraydecay21)
  br label %do.end25

do.end25:                                         ; preds = %if.then18, %do.body15
  %call26 = call i32 @ivtv_stop_v4l2_decode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 %flags, i64 %pts)
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 31
  store i32 0, i32* %output_mode, align 4, !tbaa !180
  br label %if.end27

if.end27:                                         ; preds = %do.end25, %cond.true9
  %s_flags28 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 8, i64* %s_flags28)
  %s_flags29 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  call void @clear_bit(i64 7, i64* %s_flags29)
  %output_mode30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 31
  %6 = load i32, i32* %output_mode30, align 4, !tbaa !180
  %cmp31 = icmp eq i32 %6, 3
  br i1 %cmp31, label %land.lhs.true32, label %if.end36

land.lhs.true32:                                  ; preds = %if.end27
  %yuv_frames = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %id, i32 0, i32 2
  %7 = load i32, i32* %yuv_frames, align 4, !tbaa !412
  %tobool33 = icmp ne i32 %7, 0
  br i1 %tobool33, label %if.then34, label %if.end36

if.then34:                                        ; preds = %land.lhs.true32
  %output_mode35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 31
  store i32 0, i32* %output_mode35, align 4, !tbaa !180
  br label %if.end36

if.end36:                                         ; preds = %if.then34, %land.lhs.true32, %if.end27
  %speed = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 82
  store i32 0, i32* %speed, align 8, !tbaa !297
  %i_flags37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  call void @clear_bit(i64 20, i64* %i_flags37)
  call void @ivtv_release_stream(%struct.ivtv_stream.1071* %arrayidx)
  ret void
}

declare i32 @v4l2_fh_is_singular(%struct.v4l2_fh*) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_v4l2_open(%struct.file* %filp) #0 {
entry:
  %call = call %struct.video_device* @video_devdata(%struct.file* %filp)
  %lock = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 27
  %0 = load %struct.mutex*, %struct.mutex** %lock, align 8, !tbaa !413
  %call1 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %0, i32 0)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call i32 @ivtv_open(%struct.file* %filp)
  %lock3 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 27
  %1 = load %struct.mutex*, %struct.mutex** %lock3, align 8, !tbaa !413
  call void @mutex_unlock(%struct.mutex* %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -512, %entry ]
  ret i32 %retval.0
}

declare %struct.video_device* @video_devdata(%struct.file*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_open(%struct.file* %filp) #0 {
entry:
  %call = call %struct.video_device* @video_devdata(%struct.file* %filp)
  %call1 = call i8* @video_get_drvdata(%struct.video_device* %call)
  %0 = bitcast i8* %call1 to %struct.ivtv_stream.1071*
  %itv2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 1
  %1 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv2, align 8, !tbaa !340
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 16, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 2
  %3 = load i8*, i8** %name3, align 8, !tbaa !349
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.33.150, i32 0, i32 0), i8* %arraydecay, i8* %3)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call5 = call i32 @ivtv_init_on_first_open(%struct.ivtv.1060* %1)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.then7, label %if.end13

if.then7:                                         ; preds = %do.end
  %v4l2_dev8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name9 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev8, i32 0, i32 4
  %arraydecay10 = getelementptr inbounds [36 x i8], [36 x i8]* %name9, i32 0, i32 0
  %call11 = call i8* @video_device_node_name(%struct.video_device* %call)
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.34.151, i32 0, i32 0), i8* %arraydecay10, i8* %call11)
  br label %cleanup

if.end13:                                         ; preds = %do.end
  %4 = load i32, i32* @ivtv_fw_debug, align 4, !tbaa !120
  %tobool14 = icmp ne i32 %4, 0
  br i1 %tobool14, label %if.then15, label %if.else

if.then15:                                        ; preds = %if.end13
  %v4l2_dev16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name17 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev16, i32 0, i32 4
  %arraydecay18 = getelementptr inbounds [36 x i8], [36 x i8]* %name17, i32 0, i32 0
  %call19 = call i8* @video_device_node_name(%struct.video_device* %call)
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.35.152, i32 0, i32 0), i8* %arraydecay18, i8* %call19)
  %v4l2_dev21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name22 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev21, i32 0, i32 4
  %arraydecay23 = getelementptr inbounds [36 x i8], [36 x i8]* %name22, i32 0, i32 0
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.36.153, i32 0, i32 0), i8* %arraydecay23)
  br label %if.end32

if.else:                                          ; preds = %if.end13
  %call25 = call i32 bitcast (i32 (%struct.ivtv*, i8*)* @ivtv_firmware_check to i32 (%struct.ivtv.1060*, i8*)*)(%struct.ivtv.1060* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37.154, i32 0, i32 0))
  %cmp = icmp eq i32 %call25, -11
  br i1 %cmp, label %if.then26, label %if.end28

if.then26:                                        ; preds = %if.else
  %call27 = call i32 bitcast (i32 (%struct.ivtv*, i8*)* @ivtv_firmware_check to i32 (%struct.ivtv.1060*, i8*)*)(%struct.ivtv.1060* %1, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.37.154, i32 0, i32 0))
  br label %if.end28

if.end28:                                         ; preds = %if.then26, %if.else
  %res.0 = phi i32 [ %call27, %if.then26 ], [ %call25, %if.else ]
  %cmp29 = icmp slt i32 %res.0, 0
  br i1 %cmp29, label %cleanup, label %if.end32

if.end32:                                         ; preds = %if.end28, %if.then15
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %5 = load i32, i32* %type, align 8, !tbaa !348
  %cmp33 = icmp eq i32 %5, 5
  br i1 %cmp33, label %cond.true, label %if.end40

cond.true:                                        ; preds = %if.end32
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 8
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call34 = call zeroext i1 @constant_test_bit.95(i64 3, i64* %s_flags)
  br i1 %call34, label %cleanup, label %if.end40

if.end40:                                         ; preds = %cond.true, %if.end32
  %type41 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %6 = load i32, i32* %type41, align 8, !tbaa !348
  %cmp42 = icmp eq i32 %6, 8
  br i1 %cmp42, label %cond.true44, label %if.end55

cond.true44:                                      ; preds = %if.end40
  %streams45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 42
  %arrayidx46 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams45, i64 0, i64 5
  %s_flags47 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx46, i32 0, i32 7
  %call48 = call zeroext i1 @constant_test_bit.95(i64 3, i64* %s_flags47)
  br i1 %call48, label %cleanup, label %if.end55

if.end55:                                         ; preds = %cond.true44, %if.end40
  %type56 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %7 = load i32, i32* %type56, align 8, !tbaa !348
  %cmp57 = icmp eq i32 %7, 8
  br i1 %cmp57, label %if.then58, label %if.end67

if.then58:                                        ; preds = %if.end55
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %8, i64 2092
  %call59 = call i32 @readl.131(i8* %add.ptr)
  %cmp60 = icmp eq i32 %call59, 0
  br i1 %cmp60, label %if.then61, label %if.end66

if.then61:                                        ; preds = %if.then58
  %v4l2_dev62 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name63 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev62, i32 0, i32 4
  %arraydecay64 = getelementptr inbounds [36 x i8], [36 x i8]* %name63, i32 0, i32 0
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([99 x i8], [99 x i8]* @.str.38.155, i32 0, i32 0), i8* %arraydecay64)
  br label %if.end66

if.end66:                                         ; preds = %if.then61, %if.then58
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_alloc to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %1)
  br label %if.end67

if.end67:                                         ; preds = %if.end66, %if.end55
  %call68 = call i8* @kzalloc.156(i64 192, i32 20971712)
  %9 = bitcast i8* %call68 to %struct.ivtv_open_id*
  %cmp69 = icmp eq %struct.ivtv_open_id* null, %9
  br i1 %cmp69, label %do.body71, label %if.end82

do.body71:                                        ; preds = %if.end67
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and72 = and i32 1, %10
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then74, label %cleanup

if.then74:                                        ; preds = %do.body71
  %v4l2_dev75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name76 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev75, i32 0, i32 4
  %arraydecay77 = getelementptr inbounds [36 x i8], [36 x i8]* %name76, i32 0, i32 0
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.39.157, i32 0, i32 0), i8* %arraydecay77)
  br label %cleanup

if.end82:                                         ; preds = %if.end67
  %fh = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 0
  %vdev83 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 0
  call void @v4l2_fh_init(%struct.v4l2_fh* %fh, %struct.video_device* %vdev83)
  %itv84 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 3
  store %struct.ivtv.1060* %1, %struct.ivtv.1060** %itv84, align 8, !tbaa !154
  %type85 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %11 = load i32, i32* %type85, align 8, !tbaa !348
  %type86 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 1
  store i32 %11, i32* %type86, align 8, !tbaa !157
  %fh87 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 0
  %12 = bitcast %struct.v4l2_fh* %fh87 to i8*
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  store i8* %12, i8** %private_data, align 8, !tbaa !354
  %fh88 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 0
  call void @v4l2_fh_add(%struct.v4l2_fh* %fh88)
  %type89 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 1
  %13 = load i32, i32* %type89, align 8, !tbaa !157
  %cmp90 = icmp eq i32 %13, 4
  br i1 %cmp90, label %land.lhs.true91, label %if.end181

land.lhs.true91:                                  ; preds = %if.end82
  %call92 = call i32 @v4l2_fh_is_singular_file(%struct.file* %filp)
  %tobool93 = icmp ne i32 %call92, 0
  br i1 %tobool93, label %cond.true95, label %if.end181

cond.true95:                                      ; preds = %land.lhs.true91
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  %call96 = call zeroext i1 @constant_test_bit.95(i64 5, i64* %i_flags)
  br i1 %call96, label %if.end107, label %if.then100

if.then100:                                       ; preds = %cond.true95
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 43
  %call101 = call i32 @atomic_read.115(%struct.atomic_t* %capturing)
  %cmp102 = icmp sgt i32 %call101, 0
  br i1 %cmp102, label %if.then103, label %if.end107

if.then103:                                       ; preds = %if.then100
  %fh104 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 0
  call void @v4l2_fh_del(%struct.v4l2_fh* %fh104)
  %fh105 = getelementptr inbounds %struct.ivtv_open_id, %struct.ivtv_open_id* %9, i32 0, i32 0
  call void @v4l2_fh_exit(%struct.v4l2_fh* %fh105)
  %14 = bitcast %struct.ivtv_open_id* %9 to i8*
  call void @kfree(i8* %14)
  br label %cleanup

if.end107:                                        ; preds = %if.then100, %cond.true95
  %i_flags108 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  call void @set_bit.109(i64 5, i64* %i_flags108)
  call void @ivtv_mute(%struct.ivtv.1060* %1)
  %v4l2_dev111 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev111, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end107
  %list128.sink = phi %struct.list_head* [ %list128, %for.inc ], [ %subdevs, %if.end107 ]
  %next129 = getelementptr inbounds %struct.list_head, %struct.list_head* %list128.sink, i32 0, i32 0
  %15 = load %struct.list_head*, %struct.list_head** %next129, align 8, !tbaa !86
  %16 = bitcast %struct.list_head* %15 to i8*
  %add.ptr131 = getelementptr inbounds i8, i8* %16, i64 -128
  %17 = bitcast i8* %add.ptr131 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 1
  %v4l2_dev113 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %subdevs114 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev113, i32 0, i32 2
  %cmp115 = icmp ne %struct.list_head* %list, %subdevs114
  br i1 %cmp115, label %for.body, label %do.end135

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 6
  %18 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %18, i32 0, i32 1
  %19 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner, align 8, !tbaa !255
  %tobool116 = icmp ne %struct.v4l2_subdev_tuner_ops* %19, null
  br i1 %tobool116, label %land.lhs.true117, label %for.inc

land.lhs.true117:                                 ; preds = %for.body
  %ops118 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 6
  %20 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops118, align 8, !tbaa !79
  %tuner119 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %20, i32 0, i32 1
  %21 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner119, align 8, !tbaa !255
  %s_radio = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %21, i32 0, i32 0
  %22 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %s_radio, align 8, !tbaa !414
  %tobool120 = icmp ne i32 (%struct.v4l2_subdev*)* %22, null
  br i1 %tobool120, label %if.then121, label %for.inc

if.then121:                                       ; preds = %land.lhs.true117
  %ops122 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 6
  %23 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops122, align 8, !tbaa !79
  %tuner123 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %23, i32 0, i32 1
  %24 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner123, align 8, !tbaa !255
  %s_radio124 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %24, i32 0, i32 0
  %25 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %s_radio124, align 8, !tbaa !414
  %call125 = call i32 %25(%struct.v4l2_subdev* %17)
  br label %for.inc

for.inc:                                          ; preds = %if.then121, %land.lhs.true117, %for.body
  %list128 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 1
  br label %for.cond

do.end135:                                        ; preds = %for.cond
  call void bitcast (void (%struct.ivtv*)* @ivtv_audio_set_io to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %1)
  %hw_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 9
  %26 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %and136 = and i32 %26, 258
  %tobool137 = icmp ne i32 %and136, 0
  br i1 %tobool137, label %do.body141, label %if.end180

do.body141:                                       ; preds = %do.end135
  %v4l2_dev143 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %subdevs144 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev143, i32 0, i32 2
  br label %for.cond148

for.cond148:                                      ; preds = %for.inc169, %do.body141
  %list171.sink = phi %struct.list_head* [ %list171, %for.inc169 ], [ %subdevs144, %do.body141 ]
  %next172 = getelementptr inbounds %struct.list_head, %struct.list_head* %list171.sink, i32 0, i32 0
  %27 = load %struct.list_head*, %struct.list_head** %next172, align 8, !tbaa !86
  %28 = bitcast %struct.list_head* %27 to i8*
  %add.ptr174 = getelementptr inbounds i8, i8* %28, i64 -128
  %29 = bitcast i8* %add.ptr174 to %struct.v4l2_subdev*
  %list149 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 1
  %v4l2_dev150 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %subdevs151 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev150, i32 0, i32 2
  %cmp152 = icmp ne %struct.list_head* %list149, %subdevs151
  br i1 %cmp152, label %for.body153, label %if.end180

for.body153:                                      ; preds = %for.cond148
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 10
  %30 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and154 = and i32 %30, 258
  %tobool155 = icmp ne i32 %and154, 0
  br i1 %tobool155, label %land.lhs.true156, label %for.inc169

land.lhs.true156:                                 ; preds = %for.body153
  %ops157 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 6
  %31 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops157, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %31, i32 0, i32 3
  %32 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool158 = icmp ne %struct.v4l2_subdev_video_ops* %32, null
  br i1 %tobool158, label %land.lhs.true159, label %for.inc169

land.lhs.true159:                                 ; preds = %land.lhs.true156
  %ops160 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 6
  %33 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops160, align 8, !tbaa !79
  %video161 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %33, i32 0, i32 3
  %34 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video161, align 8, !tbaa !91
  %s_crystal_freq = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %34, i32 0, i32 1
  %35 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq, align 8, !tbaa !323
  %tobool162 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32)* %35, null
  br i1 %tobool162, label %if.then163, label %for.inc169

if.then163:                                       ; preds = %land.lhs.true159
  %ops164 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 6
  %36 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops164, align 8, !tbaa !79
  %video165 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %36, i32 0, i32 3
  %37 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video165, align 8, !tbaa !91
  %s_crystal_freq166 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %37, i32 0, i32 1
  %38 = load i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)** %s_crystal_freq166, align 8, !tbaa !323
  %call167 = call i32 %38(%struct.v4l2_subdev* %29, i32 32110000, i32 4)
  br label %for.inc169

for.inc169:                                       ; preds = %if.then163, %land.lhs.true159, %land.lhs.true156, %for.body153
  %list171 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 1
  br label %for.cond148

if.end180:                                        ; preds = %for.cond148, %do.end135
  call void @ivtv_unmute(%struct.ivtv.1060* %1)
  br label %if.end181

if.end181:                                        ; preds = %if.end180, %land.lhs.true91, %if.end82
  %type182 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %39 = load i32, i32* %type182, align 8, !tbaa !348
  %cmp183 = icmp eq i32 %39, 5
  br i1 %cmp183, label %if.then184, label %if.else186

if.then184:                                       ; preds = %if.end181
  %i_flags185 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  call void @clear_bit(i64 7, i64* %i_flags185)
  br label %cleanup

if.else186:                                       ; preds = %if.end181
  %type187 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %0, i32 0, i32 3
  %40 = load i32, i32* %type187, align 8, !tbaa !348
  %cmp188 = icmp eq i32 %40, 8
  br i1 %cmp188, label %if.then189, label %cleanup

if.then189:                                       ; preds = %if.else186
  %i_flags190 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  call void @set_bit.109(i64 7, i64* %i_flags190)
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 90
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %41 = load i32, i32* %v4l2_src_h, align 4, !tbaa !248
  %add = add i32 %41, 31
  %and191 = and i32 %add, -32
  %mul = mul i32 1080, %and191
  %dma_data_req_size = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 57
  store i32 %mul, i32* %dma_data_req_size, align 4, !tbaa !396
  %yuv_info192 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 90
  %stream_size = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info192, i32 0, i32 63
  store i32 0, i32* %stream_size, align 8, !tbaa !415
  br label %cleanup

cleanup:                                          ; preds = %if.then189, %if.else186, %if.then184, %if.then103, %if.then74, %do.body71, %cond.true44, %cond.true, %if.end28, %if.then7
  %retval.0 = phi i32 [ -6, %if.then7 ], [ -16, %if.then103 ], [ -5, %if.end28 ], [ -16, %cond.true ], [ -16, %cond.true44 ], [ -12, %if.then74 ], [ -12, %do.body71 ], [ 0, %if.else186 ], [ 0, %if.then189 ], [ 0, %if.then184 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_get_drvdata(%struct.video_device* %vdev) #4 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  %call = call i8* @dev_get_drvdata.159(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_device_node_name(%struct.video_device* %vdev) #4 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  %call = call i8* @dev_name(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.156(i64 %size, i32 %flags) #4 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.158(i64 %size, i32 %or)
  ret i8* %call
}

declare void @v4l2_fh_init(%struct.v4l2_fh*, %struct.video_device*) #2

declare void @v4l2_fh_add(%struct.v4l2_fh*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.158(i64 %size, i32 %flags) #1 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_name(%struct.device* %dev) #4 {
entry:
  %init_name = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %0 = load i8*, i8** %init_name, align 8, !tbaa !416
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %1 = load i8*, i8** %init_name1, align 8, !tbaa !416
  br label %return

if.end:                                           ; preds = %entry
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 2
  %call = call i8* @kobject_name(%struct.kobject* %kobj)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8* [ %1, %if.then ], [ %call, %if.end ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kobject_name(%struct.kobject* %kobj) #4 {
entry:
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 0
  %0 = load i8*, i8** %name, align 8, !tbaa !417
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_get_drvdata.159(%struct.device* %dev) #4 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  %0 = load i8*, i8** %driver_data, align 8, !tbaa !269
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define void @ivtv_halt_firmware(%struct.ivtv* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.163, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %has_cx23415 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %1 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %conv = zext i8 %1 to i32
  %tobool1 = icmp ne i32 %conv, 0
  br i1 %tobool1, label %land.lhs.true, label %if.end5

land.lhs.true:                                    ; preds = %do.end
  %dec_mbox = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox, i32 0, i32 0
  %2 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !418
  %tobool2 = icmp ne %struct.ivtv_mailbox* %2, null
  br i1 %tobool2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %land.lhs.true
  %call4 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 14, i32 0)
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %land.lhs.true, %do.end
  %enc_mbox = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox6 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox, i32 0, i32 0
  %3 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox6, align 8, !tbaa !419
  %tobool7 = icmp ne %struct.ivtv_mailbox* %3, null
  br i1 %tobool7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end5
  %call9 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 195, i32 0)
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end5
  %call11 = call i32 @ivtv_msleep_timeout(i32 10, i32 0)
  %dec_mbox12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox13 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox12, i32 0, i32 0
  store %struct.ivtv_mailbox* null, %struct.ivtv_mailbox** %mbox13, align 8, !tbaa !418
  %enc_mbox14 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox15 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox14, i32 0, i32 0
  store %struct.ivtv_mailbox* null, %struct.ivtv_mailbox** %mbox15, align 8, !tbaa !419
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and17 = and i32 2, %4
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %if.then19, label %do.end25

if.then19:                                        ; preds = %if.end10
  %v4l2_dev20 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name21 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev20, i32 0, i32 4
  %arraydecay22 = getelementptr inbounds [36 x i8], [36 x i8]* %name21, i32 0, i32 0
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.164, i32 0, i32 0), i8* %arraydecay22)
  br label %do.end25

do.end25:                                         ; preds = %if.then19, %if.end10
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %5, i64 10240
  call void @writel.165(i32 0, i8* %add.ptr)
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and27 = and i32 2, %6
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %do.end35

if.then29:                                        ; preds = %do.end25
  %v4l2_dev30 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name31 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev30, i32 0, i32 4
  %arraydecay32 = getelementptr inbounds [36 x i8], [36 x i8]* %name31, i32 0, i32 0
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.166, i32 0, i32 0), i8* %arraydecay32)
  br label %do.end35

do.end35:                                         ; preds = %if.then29, %do.end25
  %reg_mem36 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem36, align 8, !tbaa !171
  %add.ptr37 = getelementptr i8, i8* %7, i64 11520
  call void @writel.165(i32 5, i8* %add.ptr37)
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and39 = and i32 2, %8
  %tobool40 = icmp ne i32 %and39, 0
  br i1 %tobool40, label %if.then41, label %do.end47

if.then41:                                        ; preds = %do.end35
  %v4l2_dev42 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name43 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev42, i32 0, i32 4
  %arraydecay44 = getelementptr inbounds [36 x i8], [36 x i8]* %name43, i32 0, i32 0
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.167, i32 0, i32 0), i8* %arraydecay44)
  br label %do.end47

do.end47:                                         ; preds = %if.then41, %do.end35
  %reg_mem48 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %9 = load i8*, i8** %reg_mem48, align 8, !tbaa !171
  %add.ptr49 = getelementptr i8, i8* %9, i64 41060
  call void @writel.165(i32 0, i8* %add.ptr49)
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and51 = and i32 2, %10
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %if.then53, label %do.end59

if.then53:                                        ; preds = %do.end47
  %v4l2_dev54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name55 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev54, i32 0, i32 4
  %arraydecay56 = getelementptr inbounds [36 x i8], [36 x i8]* %name55, i32 0, i32 0
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4.168, i32 0, i32 0), i8* %arraydecay56)
  br label %do.end59

do.end59:                                         ; preds = %if.then53, %do.end47
  %has_cx2341560 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %11 = load i8, i8* %has_cx2341560, align 8, !tbaa !170
  %tobool61 = icmp ne i8 %11, 0
  %reg_mem65 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %12 = load i8*, i8** %reg_mem65, align 8, !tbaa !171
  %add.ptr66 = getelementptr i8, i8* %12, i64 36952
  br i1 %tobool61, label %if.else, label %if.then62

if.then62:                                        ; preds = %do.end59
  call void @writel.165(i32 -18, i8* %add.ptr66)
  br label %do.body68

if.else:                                          ; preds = %do.end59
  call void @writel.165(i32 -2, i8* %add.ptr66)
  br label %do.body68

do.body68:                                        ; preds = %if.else, %if.then62
  %13 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and69 = and i32 2, %13
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %do.end77

if.then71:                                        ; preds = %do.body68
  %v4l2_dev72 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name73 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev72, i32 0, i32 4
  %arraydecay74 = getelementptr inbounds [36 x i8], [36 x i8]* %name73, i32 0, i32 0
  %call75 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5.169, i32 0, i32 0), i8* %arraydecay74)
  br label %do.end77

do.end77:                                         ; preds = %if.then71, %do.body68
  %reg_mem78 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %14 = load i8*, i8** %reg_mem78, align 8, !tbaa !171
  %add.ptr79 = getelementptr i8, i8* %14, i64 36948
  call void @writel.165(i32 -1, i8* %add.ptr79)
  %15 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and81 = and i32 2, %15
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.then83, label %do.end89

if.then83:                                        ; preds = %do.end77
  %v4l2_dev84 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name85 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev84, i32 0, i32 4
  %arraydecay86 = getelementptr inbounds [36 x i8], [36 x i8]* %name85, i32 0, i32 0
  %call87 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6.170, i32 0, i32 0), i8* %arraydecay86)
  br label %do.end89

do.end89:                                         ; preds = %if.then83, %do.end77
  %reg_mem90 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem90, align 8, !tbaa !171
  %add.ptr91 = getelementptr i8, i8* %16, i64 36944
  call void @writel.165(i32 1, i8* %add.ptr91)
  %call92 = call i32 @ivtv_msleep_timeout(i32 10, i32 0)
  %17 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and94 = and i32 2, %17
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %if.then96, label %do.end102

if.then96:                                        ; preds = %do.end89
  %v4l2_dev97 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name98 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev97, i32 0, i32 4
  %arraydecay99 = getelementptr inbounds [36 x i8], [36 x i8]* %name98, i32 0, i32 0
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.7.171, i32 0, i32 0), i8* %arraydecay99)
  br label %do.end102

do.end102:                                        ; preds = %if.then96, %do.end89
  %reg_mem103 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %18 = load i8*, i8** %reg_mem103, align 8, !tbaa !171
  %add.ptr104 = getelementptr i8, i8* %18, i64 2044
  call void @writel.165(i32 26, i8* %add.ptr104)
  %19 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and106 = and i32 2, %19
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %if.then108, label %do.end114

if.then108:                                       ; preds = %do.end102
  %v4l2_dev109 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name110 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev109, i32 0, i32 4
  %arraydecay111 = getelementptr inbounds [36 x i8], [36 x i8]* %name110, i32 0, i32 0
  %call112 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.8.172, i32 0, i32 0), i8* %arraydecay111)
  br label %do.end114

do.end114:                                        ; preds = %if.then108, %do.end102
  %reg_mem115 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %20 = load i8*, i8** %reg_mem115, align 8, !tbaa !171
  %add.ptr116 = getelementptr i8, i8* %20, i64 2040
  call void @writel.165(i32 -2147482048, i8* %add.ptr116)
  %has_cx23415117 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %21 = load i8, i8* %has_cx23415117, align 8, !tbaa !170
  %tobool118 = icmp ne i8 %21, 0
  br i1 %tobool118, label %do.body120, label %do.body145

do.body120:                                       ; preds = %do.end114
  %22 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and121 = and i32 2, %22
  %tobool122 = icmp ne i32 %and121, 0
  br i1 %tobool122, label %if.then123, label %do.end129

if.then123:                                       ; preds = %do.body120
  %v4l2_dev124 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name125 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev124, i32 0, i32 4
  %arraydecay126 = getelementptr inbounds [36 x i8], [36 x i8]* %name125, i32 0, i32 0
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9.173, i32 0, i32 0), i8* %arraydecay126)
  br label %do.end129

do.end129:                                        ; preds = %if.then123, %do.body120
  %reg_mem130 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %23 = load i8*, i8** %reg_mem130, align 8, !tbaa !171
  %add.ptr131 = getelementptr i8, i8* %23, i64 2300
  call void @writel.165(i32 26, i8* %add.ptr131)
  %24 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and133 = and i32 2, %24
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %do.end141

if.then135:                                       ; preds = %do.end129
  %v4l2_dev136 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name137 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev136, i32 0, i32 4
  %arraydecay138 = getelementptr inbounds [36 x i8], [36 x i8]* %name137, i32 0, i32 0
  %call139 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.10.174, i32 0, i32 0), i8* %arraydecay138)
  br label %do.end141

do.end141:                                        ; preds = %if.then135, %do.end129
  %reg_mem142 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %25 = load i8*, i8** %reg_mem142, align 8, !tbaa !171
  %add.ptr143 = getelementptr i8, i8* %25, i64 2296
  call void @writel.165(i32 -2147482048, i8* %add.ptr143)
  br label %do.body145

do.body145:                                       ; preds = %do.end141, %do.end114
  %26 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and146 = and i32 2, %26
  %tobool147 = icmp ne i32 %and146, 0
  br i1 %tobool147, label %if.then148, label %do.end154

if.then148:                                       ; preds = %do.body145
  %v4l2_dev149 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name150 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev149, i32 0, i32 4
  %arraydecay151 = getelementptr inbounds [36 x i8], [36 x i8]* %name150, i32 0, i32 0
  %call152 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.11.175, i32 0, i32 0), i8* %arraydecay151, i32 600)
  br label %do.end154

do.end154:                                        ; preds = %if.then148, %do.body145
  %call155 = call i32 @ivtv_msleep_timeout(i32 600, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.165(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !420
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_firmware_versions(%struct.ivtv* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call = call i32 (%struct.ivtv*, i32*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32*, i32, i32, ...)* @ivtv_vapi_result to i32 (%struct.ivtv*, i32*, i32, i32, ...)*)(%struct.ivtv* %itv, i32* %arraydecay, i32 196, i32 0)
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay1 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %1 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12.178, i32 0, i32 0), i8* %arraydecay1, i32 %1)
  %arrayidx3 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %2 = load i32, i32* %arrayidx3, align 16, !tbaa !120
  %cmp = icmp ne i32 %2, 33947705
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %v4l2_dev4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name5 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev4, i32 0, i32 4
  %arraydecay6 = getelementptr inbounds [36 x i8], [36 x i8]* %name5, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.13.179, i32 0, i32 0), i8* %arraydecay6)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %has_cx23415 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %3 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %if.then8, label %if.end16

if.then8:                                         ; preds = %if.end
  %arraydecay9 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call10 = call i32 (%struct.ivtv*, i32*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32*, i32, i32, ...)* @ivtv_vapi_result to i32 (%struct.ivtv*, i32*, i32, i32, ...)*)(%struct.ivtv* %itv, i32* %arraydecay9, i32 17, i32 0)
  %v4l2_dev11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name12 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev11, i32 0, i32 4
  %arraydecay13 = getelementptr inbounds [36 x i8], [36 x i8]* %name12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %4 = load i32, i32* %arrayidx14, align 16, !tbaa !120
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.14.180, i32 0, i32 0), i8* %arraydecay13, i32 %4)
  br label %if.end16

if.end16:                                         ; preds = %if.then8, %if.end
  %5 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %5) #8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_firmware_init(%struct.ivtv* %itv) #0 {
entry:
  call void @ivtv_halt_firmware(%struct.ivtv* %itv)
  %call = call i32 @ivtv_firmware_copy(%struct.ivtv* %itv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %do.body, label %if.end4

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %0
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then2, label %cleanup

if.then2:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.15.183, i32 0, i32 0), i8* %arraydecay, i32 %call)
  br label %cleanup

if.end4:                                          ; preds = %entry
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 36944
  %call5 = call i32 @readl.184(i8* %add.ptr)
  %and6 = and i32 %call5, -2
  %reg_mem7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem7, align 8, !tbaa !171
  %add.ptr8 = getelementptr i8, i8* %2, i64 36944
  call void @writel.165(i32 %and6, i8* %add.ptr8)
  %call9 = call i32 @ivtv_msleep_timeout(i32 100, i32 0)
  %has_cx23415 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %3 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool10 = icmp ne i8 %3, 0
  %reg_mem12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem12, align 8, !tbaa !171
  %add.ptr13 = getelementptr i8, i8* %4, i64 36952
  %call14 = call i32 @readl.184(i8* %add.ptr13)
  br i1 %tobool10, label %if.then11, label %if.else

if.then11:                                        ; preds = %if.end4
  %and15 = and i32 %call14, -10
  %reg_mem16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem16, align 8, !tbaa !171
  %add.ptr17 = getelementptr i8, i8* %5, i64 36952
  call void @writel.165(i32 %and15, i8* %add.ptr17)
  br label %if.end24

if.else:                                          ; preds = %if.end4
  %and21 = and i32 %call14, -5
  %reg_mem22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem22, align 8, !tbaa !171
  %add.ptr23 = getelementptr i8, i8* %6, i64 36952
  call void @writel.165(i32 %and21, i8* %add.ptr23)
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then11
  %call25 = call i32 @ivtv_msleep_timeout(i32 100, i32 0)
  %enc_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 15
  %7 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %call26 = call %struct.ivtv_mailbox* @ivtv_search_mailbox(i8* %7, i32 8388608)
  %enc_mbox = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox, i32 0, i32 0
  store %struct.ivtv_mailbox* %call26, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !419
  %enc_mbox27 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox28 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox27, i32 0, i32 0
  %8 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox28, align 8, !tbaa !419
  %cmp = icmp eq %struct.ivtv_mailbox* %8, null
  br i1 %cmp, label %if.then29, label %if.else34

if.then29:                                        ; preds = %if.end24
  %v4l2_dev30 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name31 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev30, i32 0, i32 4
  %arraydecay32 = getelementptr inbounds [36 x i8], [36 x i8]* %name31, i32 0, i32 0
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16.185, i32 0, i32 0), i8* %arraydecay32)
  br label %if.end45

if.else34:                                        ; preds = %if.end24
  %call35 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 128, i32 0)
  %tobool36 = icmp ne i32 %call35, 0
  br i1 %tobool36, label %if.then37, label %if.end45

if.then37:                                        ; preds = %if.else34
  %v4l2_dev38 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name39 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev38, i32 0, i32 4
  %arraydecay40 = getelementptr inbounds [36 x i8], [36 x i8]* %name39, i32 0, i32 0
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.186, i32 0, i32 0), i8* %arraydecay40)
  %enc_mbox42 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox43 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox42, i32 0, i32 0
  store %struct.ivtv_mailbox* null, %struct.ivtv_mailbox** %mbox43, align 8, !tbaa !419
  br label %if.end45

if.end45:                                         ; preds = %if.then37, %if.else34, %if.then29
  %enc_mbox46 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 66
  %mbox47 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %enc_mbox46, i32 0, i32 0
  %9 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox47, align 8, !tbaa !419
  %cmp48 = icmp eq %struct.ivtv_mailbox* %9, null
  br i1 %cmp48, label %cleanup, label %if.end50

if.end50:                                         ; preds = %if.end45
  %has_cx2341551 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %10 = load i8, i8* %has_cx2341551, align 8, !tbaa !170
  %tobool52 = icmp ne i8 %10, 0
  br i1 %tobool52, label %if.end54, label %cleanup

if.end54:                                         ; preds = %if.end50
  %dec_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %11 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %call55 = call %struct.ivtv_mailbox* @ivtv_search_mailbox(i8* %11, i32 8388608)
  %dec_mbox = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox56 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox, i32 0, i32 0
  store %struct.ivtv_mailbox* %call55, %struct.ivtv_mailbox** %mbox56, align 8, !tbaa !418
  %dec_mbox57 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox58 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox57, i32 0, i32 0
  %12 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox58, align 8, !tbaa !418
  %cmp59 = icmp eq %struct.ivtv_mailbox* %12, null
  br i1 %cmp59, label %if.then60, label %if.else65

if.then60:                                        ; preds = %if.end54
  %v4l2_dev61 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name62 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev61, i32 0, i32 4
  %arraydecay63 = getelementptr inbounds [36 x i8], [36 x i8]* %name62, i32 0, i32 0
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.18.187, i32 0, i32 0), i8* %arraydecay63)
  br label %if.end80

if.else65:                                        ; preds = %if.end54
  %has_cx2341566 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %13 = load i8, i8* %has_cx2341566, align 8, !tbaa !170
  %conv = zext i8 %13 to i32
  %tobool67 = icmp ne i32 %conv, 0
  br i1 %tobool67, label %land.lhs.true, label %if.else77

land.lhs.true:                                    ; preds = %if.else65
  %call68 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 0, i32 0)
  %tobool69 = icmp ne i32 %call68, 0
  br i1 %tobool69, label %if.then70, label %if.else77

if.then70:                                        ; preds = %land.lhs.true
  %v4l2_dev71 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name72 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev71, i32 0, i32 4
  %arraydecay73 = getelementptr inbounds [36 x i8], [36 x i8]* %name72, i32 0, i32 0
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19.188, i32 0, i32 0), i8* %arraydecay73)
  %dec_mbox75 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox76 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox75, i32 0, i32 0
  store %struct.ivtv_mailbox* null, %struct.ivtv_mailbox** %mbox76, align 8, !tbaa !418
  br label %if.end80

if.else77:                                        ; preds = %land.lhs.true, %if.else65
  %call78 = call i32 bitcast (i32 (%struct.ivtv.1060*)* @ivtv_yuv_filter_check to i32 (%struct.ivtv*)*)(%struct.ivtv* %itv)
  br label %if.end80

if.end80:                                         ; preds = %if.else77, %if.then70, %if.then60
  %dec_mbox81 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %mbox82 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox81, i32 0, i32 0
  %14 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox82, align 8, !tbaa !418
  %tobool83 = icmp ne %struct.ivtv_mailbox* %14, null
  %15 = zext i1 %tobool83 to i64
  %cond = select i1 %tobool83, i32 0, i32 -19
  br label %cleanup

cleanup:                                          ; preds = %if.end80, %if.end50, %if.end45, %if.then2, %do.body
  %retval.0 = phi i32 [ %cond, %if.end80 ], [ %call, %if.then2 ], [ %call, %do.body ], [ -19, %if.end45 ], [ 0, %if.end50 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_firmware_copy(%struct.ivtv* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31.189, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %enc_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 15
  %1 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %call1 = call i32 @load_fw_direct(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.32.190, i32 0, i32 0), i8* %1, %struct.ivtv* %itv, i64 376836)
  %cmp = icmp ne i32 %call1, 376836
  br i1 %cmp, label %do.body3, label %if.end13

do.body3:                                         ; preds = %do.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and4 = and i32 1, %2
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then6, label %return

if.then6:                                         ; preds = %do.body3
  %v4l2_dev7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name8 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev7, i32 0, i32 4
  %arraydecay9 = getelementptr inbounds [36 x i8], [36 x i8]* %name8, i32 0, i32 0
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.33.191, i32 0, i32 0), i8* %arraydecay9)
  br label %return

if.end13:                                         ; preds = %do.end
  %has_cx23415 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %3 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool14 = icmp ne i8 %3, 0
  br i1 %tobool14, label %do.body17, label %return

do.body17:                                        ; preds = %if.end13
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and18 = and i32 2, %4
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %do.end26

if.then20:                                        ; preds = %do.body17
  %v4l2_dev21 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name22 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev21, i32 0, i32 4
  %arraydecay23 = getelementptr inbounds [36 x i8], [36 x i8]* %name22, i32 0, i32 0
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34.192, i32 0, i32 0), i8* %arraydecay23)
  br label %do.end26

do.end26:                                         ; preds = %if.then20, %do.body17
  %dec_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %5 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %call27 = call i32 @load_fw_direct(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.35.193, i32 0, i32 0), i8* %5, %struct.ivtv* %itv, i64 262144)
  %cmp28 = icmp ne i32 %call27, 262144
  br i1 %cmp28, label %do.body30, label %return

do.body30:                                        ; preds = %do.end26
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and31 = and i32 1, %6
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %return

if.then33:                                        ; preds = %do.body30
  %v4l2_dev34 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name35 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev34, i32 0, i32 4
  %arraydecay36 = getelementptr inbounds [36 x i8], [36 x i8]* %name35, i32 0, i32 0
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.36.194, i32 0, i32 0), i8* %arraydecay36)
  br label %return

return:                                           ; preds = %if.then33, %do.body30, %do.end26, %if.end13, %if.then6, %do.body3
  %retval.0 = phi i32 [ -3, %do.body3 ], [ -3, %if.then6 ], [ 0, %if.end13 ], [ -1, %do.body30 ], [ -1, %if.then33 ], [ 0, %do.end26 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.184(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !421
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal %struct.ivtv_mailbox* @ivtv_search_mailbox(i8* %mem, i32 %size) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.inc ]
  %cmp = icmp ult i32 %i.0, %size
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %idx.ext = sext i32 %i.0 to i64
  %add.ptr = getelementptr inbounds i8, i8* %mem, i64 %idx.ext
  %call = call i32 @readl.184(i8* %add.ptr)
  %cmp1 = icmp eq i32 %call, 305419896
  br i1 %cmp1, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %idx.ext2 = sext i32 %i.0 to i64
  %add.ptr3 = getelementptr inbounds i8, i8* %mem, i64 %idx.ext2
  %add.ptr4 = getelementptr inbounds i8, i8* %add.ptr3, i64 4
  %call5 = call i32 @readl.184(i8* %add.ptr4)
  %cmp6 = icmp eq i32 %call5, 878082066
  br i1 %cmp6, label %land.lhs.true7, label %for.inc

land.lhs.true7:                                   ; preds = %land.lhs.true
  %idx.ext8 = sext i32 %i.0 to i64
  %add.ptr9 = getelementptr inbounds i8, i8* %mem, i64 %idx.ext8
  %add.ptr10 = getelementptr inbounds i8, i8* %add.ptr9, i64 8
  %call11 = call i32 @readl.184(i8* %add.ptr10)
  %cmp12 = icmp eq i32 %call11, 1450709556
  br i1 %cmp12, label %land.lhs.true13, label %for.inc

land.lhs.true13:                                  ; preds = %land.lhs.true7
  %idx.ext14 = sext i32 %i.0 to i64
  %add.ptr15 = getelementptr inbounds i8, i8* %mem, i64 %idx.ext14
  %add.ptr16 = getelementptr inbounds i8, i8* %add.ptr15, i64 12
  %call17 = call i32 @readl.184(i8* %add.ptr16)
  %cmp18 = icmp eq i32 %call17, 2014458966
  br i1 %cmp18, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true13
  %idx.ext19 = sext i32 %i.0 to i64
  %add.ptr20 = getelementptr inbounds i8, i8* %mem, i64 %idx.ext19
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr20, i64 16
  %0 = bitcast i8* %add.ptr21 to %struct.ivtv_mailbox*
  br label %cleanup

for.inc:                                          ; preds = %land.lhs.true13, %land.lhs.true7, %land.lhs.true, %for.body
  %add = add nsw i32 %i.0, 256
  br label %for.cond

cleanup:                                          ; preds = %if.then, %for.cond
  %retval.0 = phi %struct.ivtv_mailbox* [ %0, %if.then ], [ null, %for.cond ]
  ret %struct.ivtv_mailbox* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @load_fw_direct(i8* %fn, i8* %mem, %struct.ivtv* %itv, i64 %size) #0 {
entry:
  %fw = alloca %struct.firmware*, align 8
  %0 = bitcast %struct.firmware** %fw to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.firmware* null, %struct.firmware** %fw, align 8, !tbaa !86
  br label %retry

retry:                                            ; preds = %LeafBlock, %entry
  %retries.0 = phi i32 [ 3, %entry ], [ %retries.1, %LeafBlock ]
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.1, %LeafBlock ]
  %tobool = icmp ne i32 %retries.0, 0
  br i1 %tobool, label %land.lhs.true, label %if.end18

land.lhs.true:                                    ; preds = %retry
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %1, i32 0, i32 35
  %call = call i32 @request_firmware(%struct.firmware** %fw, i8* %fn, %struct.device* %dev)
  %cmp = icmp eq i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end18

if.then:                                          ; preds = %land.lhs.true
  %2 = bitcast i8* %mem to i32*
  %3 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  %data = getelementptr inbounds %struct.firmware, %struct.firmware* %3, i32 0, i32 1
  %4 = load i8*, i8** %data, align 8, !tbaa !422
  %5 = bitcast i8* %4 to i32*
  %6 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  %size1 = getelementptr inbounds %struct.firmware, %struct.firmware* %6, i32 0, i32 0
  %7 = load i64, i64* %size1, align 8, !tbaa !424
  %cmp2 = icmp ne i64 %7, %size
  br i1 %cmp2, label %if.then3, label %if.end

if.then3:                                         ; preds = %if.then
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %8 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  %size4 = getelementptr inbounds %struct.firmware, %struct.firmware* %8, i32 0, i32 0
  %9 = load i64, i64* %size4, align 8, !tbaa !424
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.37.195, i32 0, i32 0), i8* %arraydecay, i8* %fn, i64 %size, i64 %9)
  %10 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  call void @release_firmware(%struct.firmware* %10)
  %dec = add nsw i32 %retries.0, -1
  br label %LeafBlock

if.end:                                           ; preds = %if.then
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %add, %for.body ]
  %dst.0 = phi i32* [ %2, %if.end ], [ %incdec.ptr, %for.body ]
  %src.0 = phi i32* [ %5, %if.end ], [ %incdec.ptr9, %for.body ]
  %conv = sext i32 %i.0 to i64
  %11 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  %size6 = getelementptr inbounds %struct.firmware, %struct.firmware* %11, i32 0, i32 0
  %12 = load i64, i64* %size6, align 8, !tbaa !424
  %cmp7 = icmp ult i64 %conv, %12
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %13 = load i32, i32* %src.0, align 4, !tbaa !120
  %14 = bitcast i32* %dst.0 to i8*
  call void @__writel(i32 %13, i8* %14)
  %incdec.ptr = getelementptr inbounds i32, i32* %dst.0, i32 1
  %incdec.ptr9 = getelementptr inbounds i32, i32* %src.0, i32 1
  %add = add nsw i32 %i.0, 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %v4l2_dev10 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name11 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev10, i32 0, i32 4
  %arraydecay12 = getelementptr inbounds [36 x i8], [36 x i8]* %name11, i32 0, i32 0
  %15 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  %size13 = getelementptr inbounds %struct.firmware, %struct.firmware* %15, i32 0, i32 0
  %16 = load i64, i64* %size13, align 8, !tbaa !424
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.38.196, i32 0, i32 0), i8* %arraydecay12, i8* %fn, i64 %16)
  %17 = load %struct.firmware*, %struct.firmware** %fw, align 8, !tbaa !86
  call void @release_firmware(%struct.firmware* %17)
  %conv15 = trunc i64 %size to i32
  br label %LeafBlock

LeafBlock:                                        ; preds = %for.end, %if.then3
  %retries.1 = phi i32 [ %dec, %if.then3 ], [ %retries.0, %for.end ]
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then3 ], [ 1, %for.end ]
  %retval.1 = phi i32 [ %retval.0, %if.then3 ], [ %conv15, %for.end ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 2
  br i1 %SwitchLeaf, label %retry, label %cleanup27

if.end18:                                         ; preds = %land.lhs.true, %retry
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.39.197, i32 0, i32 0), i8* %arraydecay21, i8* %fn, i64 %size)
  %v4l2_dev23 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name24 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev23, i32 0, i32 4
  %arraydecay25 = getelementptr inbounds [36 x i8], [36 x i8]* %name24, i32 0, i32 0
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.40.198, i32 0, i32 0), i8* %arraydecay25)
  br label %cleanup27

cleanup27:                                        ; preds = %if.end18, %LeafBlock
  %retval.2 = phi i32 [ -12, %if.end18 ], [ %retval.1, %LeafBlock ]
  %18 = bitcast %struct.firmware** %fw to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #8
  ret i32 %retval.2
}

declare i32 @request_firmware(%struct.firmware**, i8*, %struct.device*) #2

declare void @release_firmware(%struct.firmware*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @__writel(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !425
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_init_mpeg_decoder(%struct.ivtv* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  store i32 0, i32* %arrayidx, align 16, !tbaa !120
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %width = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 2
  %1 = load i16, i16* %width, align 8, !tbaa !426
  %conv = zext i16 %1 to i32
  %arrayidx1 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  store i32 %conv, i32* %arrayidx1, align 4, !tbaa !120
  %cxhdl2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %height = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl2, i32 0, i32 3
  %2 = load i16, i16* %height, align 2, !tbaa !427
  %conv3 = zext i16 %2 to i32
  %arrayidx4 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  store i32 %conv3, i32* %arrayidx4, align 8, !tbaa !120
  %cxhdl5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %audio_properties = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl5, i32 0, i32 5
  %3 = load i32, i32* %audio_properties, align 8, !tbaa !428
  %arrayidx6 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  store i32 %3, i32* %arrayidx6, align 4, !tbaa !120
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call = call i32 bitcast (i32 (%struct.ivtv.1060*, i32, i32, i32*)* @ivtv_api to i32 (%struct.ivtv*, i32, i32, i32*)*)(%struct.ivtv* %itv, i32 26, i32 4, i32* %arraydecay)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay7 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20.201, i32 0, i32 0), i8* %arraydecay7)
  br label %cleanup

if.end:                                           ; preds = %entry
  %call9 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 1, i32 2, i32 0, i32 1)
  %cmp = icmp ne i32 %call9, 0
  br i1 %cmp, label %if.then11, label %if.end16

if.then11:                                        ; preds = %if.end
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.21.202, i32 0, i32 0), i8* %arraydecay14)
  br label %cleanup

if.end16:                                         ; preds = %if.end
  %dec_mbox = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 67
  %arraydecay17 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %dec_mbox, i32 9, i32 2, i32* %arraydecay17)
  %dec_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %4 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %arrayidx18 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %5 = load i32, i32* %arrayidx18, align 4, !tbaa !120
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext
  %call19 = call i32 @load_fw_direct(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.203, i32 0, i32 0), i8* %add.ptr, %struct.ivtv* %itv, i64 155648)
  %conv20 = sext i32 %call19 to i64
  %cmp21 = icmp sle i64 %conv20, 0
  br i1 %cmp21, label %do.body, label %if.else

do.body:                                          ; preds = %if.end16
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %6
  %tobool24 = icmp ne i32 %and, 0
  br i1 %tobool24, label %if.then25, label %if.end33

if.then25:                                        ; preds = %do.body
  %v4l2_dev26 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name27 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev26, i32 0, i32 4
  %arraydecay28 = getelementptr inbounds [36 x i8], [36 x i8]* %name27, i32 0, i32 0
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.23.204, i32 0, i32 0), i8* %arraydecay28, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.22.203, i32 0, i32 0))
  br label %if.end33

if.else:                                          ; preds = %if.end16
  %call31 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 11, i32 3, i32 0, i64 %conv20, i32 0)
  %call32 = call i32 @ivtv_msleep_timeout(i32 100, i32 0)
  br label %if.end33

if.end33:                                         ; preds = %if.else, %if.then25, %do.body
  %call34 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 2, i32 4, i32 0, i32 0, i32 0, i32 1)
  br label %cleanup

cleanup:                                          ; preds = %if.end33, %if.then11, %if.then
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then ], [ 1, %if.then11 ], [ 0, %if.end33 ]
  %7 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %7) #8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_firmware_check(%struct.ivtv* %itv, i8* %where) #0 {
entry:
  %call = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 128, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.24.207, i32 0, i32 0), i8* %arraydecay, i8* %where)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %res.0 = phi i32 [ -1, %if.then ], [ 0, %entry ]
  %tobool = icmp ne i32 %res.0, 0
  br i1 %tobool, label %if.end23, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 43
  %call2 = call i32 @atomic_read.208(%struct.atomic_t* %capturing)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.end23, label %land.lhs.true4

land.lhs.true4:                                   ; preds = %land.lhs.true
  %decoding = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call5 = call i32 @atomic_read.208(%struct.atomic_t* %decoding)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %lor.lhs.false, label %if.then14

lor.lhs.false:                                    ; preds = %land.lhs.true4
  %decoding7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call8 = call i32 @atomic_read.208(%struct.atomic_t* %decoding7)
  %cmp9 = icmp slt i32 %call8, 2
  br i1 %cmp9, label %cond.true, label %if.end23

cond.true:                                        ; preds = %lor.lhs.false
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call11 = call zeroext i1 @constant_test_bit.209(i64 7, i64* %i_flags)
  br i1 %call11, label %if.then14, label %if.end23

if.then14:                                        ; preds = %cond.true, %land.lhs.true4
  %call15 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 220, i32 1, i32 12)
  %cmp16 = icmp slt i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %if.end23

if.then17:                                        ; preds = %if.then14
  %v4l2_dev18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name19 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev18, i32 0, i32 4
  %arraydecay20 = getelementptr inbounds [36 x i8], [36 x i8]* %name19, i32 0, i32 0
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.25.210, i32 0, i32 0), i8* %arraydecay20, i8* %where)
  br label %if.end23

if.end23:                                         ; preds = %if.then17, %if.then14, %cond.true, %lor.lhs.false, %land.lhs.true, %if.end
  %res.2 = phi i32 [ %res.0, %if.end ], [ %res.0, %land.lhs.true ], [ %res.0, %cond.true ], [ %res.0, %lor.lhs.false ], [ -2, %if.then17 ], [ %res.0, %if.then14 ]
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 8
  %0 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %0, 2
  %tobool24 = icmp ne i32 %and, 0
  br i1 %tobool24, label %if.then25, label %if.end57

if.then25:                                        ; preds = %if.end23
  %cmp26 = icmp ne i32 %res.2, -2
  br i1 %cmp26, label %land.lhs.true27, label %if.end48

land.lhs.true27:                                  ; preds = %if.then25
  %dec_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %1 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %add.ptr = getelementptr i8, i8* %1, i64 256
  %call28 = call i32 @readl.184(i8* %add.ptr)
  %dec_mem29 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %2 = load i8*, i8** %dec_mem29, align 8, !tbaa !235
  %add.ptr30 = getelementptr i8, i8* %2, i64 260
  %call31 = call i32 @readl.184(i8* %add.ptr30)
  %cmp32 = icmp ne i32 %call28, %call31
  br i1 %cmp32, label %if.then33, label %if.end48

if.then33:                                        ; preds = %land.lhs.true27
  %call34 = call i32 @ivtv_msleep_timeout(i32 14, i32 0)
  %dec_mem35 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %3 = load i8*, i8** %dec_mem35, align 8, !tbaa !235
  %add.ptr36 = getelementptr i8, i8* %3, i64 256
  %call37 = call i32 @readl.184(i8* %add.ptr36)
  %dec_mem38 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %4 = load i8*, i8** %dec_mem38, align 8, !tbaa !235
  %add.ptr39 = getelementptr i8, i8* %4, i64 260
  %call40 = call i32 @readl.184(i8* %add.ptr39)
  %cmp41 = icmp ne i32 %call37, %call40
  br i1 %cmp41, label %if.then42, label %if.end48

if.then42:                                        ; preds = %if.then33
  %v4l2_dev43 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name44 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev43, i32 0, i32 4
  %arraydecay45 = getelementptr inbounds [36 x i8], [36 x i8]* %name44, i32 0, i32 0
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.26.211, i32 0, i32 0), i8* %arraydecay45, i8* %where)
  br label %if.end48

if.end48:                                         ; preds = %if.then42, %if.then33, %land.lhs.true27, %if.then25
  %res.4 = phi i32 [ %res.2, %land.lhs.true27 ], [ %res.2, %if.then25 ], [ -1, %if.then42 ], [ %res.2, %if.then33 ]
  %call49 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 0, i32 0)
  %cmp50 = icmp slt i32 %call49, 0
  br i1 %cmp50, label %if.then51, label %if.end57

if.then51:                                        ; preds = %if.end48
  %v4l2_dev52 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name53 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev52, i32 0, i32 4
  %arraydecay54 = getelementptr inbounds [36 x i8], [36 x i8]* %name53, i32 0, i32 0
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.27.212, i32 0, i32 0), i8* %arraydecay54, i8* %where)
  br label %if.end57

if.end57:                                         ; preds = %if.then51, %if.end48, %if.end23
  %res.6 = phi i32 [ %res.2, %if.end23 ], [ -1, %if.then51 ], [ %res.4, %if.end48 ]
  %cond = icmp eq i32 %res.6, 0
  br i1 %cond, label %if.end88, label %land.lhs.true59

land.lhs.true59:                                  ; preds = %if.end57
  %capturing60 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 43
  %call61 = call i32 @atomic_read.208(%struct.atomic_t* %capturing60)
  %tobool62 = icmp ne i32 %call61, 0
  br i1 %tobool62, label %if.else84, label %land.lhs.true63

land.lhs.true63:                                  ; preds = %land.lhs.true59
  %decoding64 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call65 = call i32 @atomic_read.208(%struct.atomic_t* %decoding64)
  %tobool66 = icmp ne i32 %call65, 0
  br i1 %tobool66, label %if.else84, label %if.then67

if.then67:                                        ; preds = %land.lhs.true63
  %v4l2_dev68 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name69 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev68, i32 0, i32 4
  %arraydecay70 = getelementptr inbounds [36 x i8], [36 x i8]* %name69, i32 0, i32 0
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28.213, i32 0, i32 0), i8* %arraydecay70, i8* %where)
  %call72 = call i32 @ivtv_firmware_restart(%struct.ivtv* %itv)
  %tobool73 = icmp ne i32 %call72, 0
  %v4l2_dev79 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name80 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev79, i32 0, i32 4
  %arraydecay81 = getelementptr inbounds [36 x i8], [36 x i8]* %name80, i32 0, i32 0
  br i1 %tobool73, label %if.else, label %if.then74

if.then74:                                        ; preds = %if.then67
  %call78 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.29.214, i32 0, i32 0), i8* %arraydecay81)
  br label %if.end88

if.else:                                          ; preds = %if.then67
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.30.215, i32 0, i32 0), i8* %arraydecay81)
  br label %if.end88

if.else84:                                        ; preds = %land.lhs.true63, %land.lhs.true59
  %tobool85 = icmp ne i32 %res.6, 0
  %.res.6 = select i1 %tobool85, i32 -5, i32 %res.6
  br label %UnifiedReturnBlock

if.end88:                                         ; preds = %if.else, %if.then74, %if.end57
  %res.9 = phi i32 [ %call72, %if.else ], [ -11, %if.then74 ], [ %res.6, %if.end57 ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %if.end88, %if.else84
  %UnifiedRetVal = phi i32 [ %.res.6, %if.else84 ], [ %res.9, %if.end88 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.208(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.216(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.209(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_firmware_restart(%struct.ivtv* %itv) #0 {
entry:
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 8
  %0 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %do.body1, label %if.end22

do.body1:                                         ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body1
  %list16.sink = phi %struct.list_head* [ %list16, %for.inc ], [ %subdevs, %do.body1 ]
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list16.sink, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next17, align 8, !tbaa !86
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr19 = getelementptr inbounds i8, i8* %2, i64 -128
  %3 = bitcast i8* %add.ptr19 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 1
  %v4l2_dev2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs3 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev2, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs3
  br i1 %cmp, label %for.body, label %if.end22

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 10
  %4 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and4 = and i32 %4, 4
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 6
  %5 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %5, i32 0, i32 3
  %6 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool6 = icmp ne %struct.v4l2_subdev_video_ops* %6, null
  br i1 %tobool6, label %land.lhs.true7, label %for.inc

land.lhs.true7:                                   ; preds = %land.lhs.true
  %ops8 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops8, align 8, !tbaa !79
  %video9 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 3
  %8 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video9, align 8, !tbaa !91
  %s_routing = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %8, i32 0, i32 0
  %9 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing, align 8, !tbaa !92
  %tobool10 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %9, null
  br i1 %tobool10, label %if.then11, label %for.inc

if.then11:                                        ; preds = %land.lhs.true7
  %ops12 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops12, align 8, !tbaa !79
  %video13 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 3
  %11 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video13, align 8, !tbaa !91
  %s_routing14 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %11, i32 0, i32 0
  %12 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing14, align 8, !tbaa !92
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %13 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %13, i32 0, i32 13
  %14 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs, align 8, !tbaa !108
  %active_output = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 34
  %15 = load i32, i32* %active_output, align 8, !tbaa !429
  %idxprom = zext i32 %15 to i64
  %arrayidx = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %14, i64 %idxprom
  %video_output = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %arrayidx, i32 0, i32 1
  %16 = load i16, i16* %video_output, align 2, !tbaa !430
  %conv = zext i16 %16 to i32
  %call = call i32 %12(%struct.v4l2_subdev* %3, i32 1, i32 %conv, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then11, %land.lhs.true7, %land.lhs.true, %for.body
  %list16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %3, i32 0, i32 1
  br label %for.cond

if.end22:                                         ; preds = %for.cond, %entry
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %lock = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 0
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %call23 = call i32 @ivtv_firmware_init(%struct.ivtv* %itv)
  %tobool24 = icmp ne i32 %call23, 0
  br i1 %tobool24, label %if.then25, label %if.end28

if.then25:                                        ; preds = %if.end22
  %udma26 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %lock27 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma26, i32 0, i32 0
  call void @mutex_unlock(%struct.mutex* %lock27)
  br label %cleanup

if.end28:                                         ; preds = %if.end22
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_mailbox_cache_invalidate to void (%struct.ivtv*)*)(%struct.ivtv* %itv)
  %std29 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 35
  %17 = load i64, i64* %std29, align 8, !tbaa !166
  %std30 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 35
  store i64 0, i64* %std30, align 8, !tbaa !166
  call void @ivtv_s_std_enc(%struct.ivtv* %itv, i64 %17)
  %v4l2_cap31 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 8
  %18 = load i32, i32* %v4l2_cap31, align 4, !tbaa !172
  %and32 = and i32 %18, 2
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.end94

if.then34:                                        ; preds = %if.end28
  call void @ivtv_init_mpeg_decoder(%struct.ivtv* %itv)
  %std_out = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 36
  %19 = load i64, i64* %std_out, align 8, !tbaa !167
  %std_out35 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 36
  store i64 0, i64* %std_out35, align 8, !tbaa !167
  call void @ivtv_s_std_dec(%struct.ivtv* %itv, i64 %19)
  %ivtvfb_restore = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 100
  %ivtvfb_restore36 = bitcast {}** %ivtvfb_restore to void (%struct.ivtv*)**
  %20 = load void (%struct.ivtv*)*, void (%struct.ivtv*)** %ivtvfb_restore36, align 8, !tbaa !432
  %tobool37 = icmp ne void (%struct.ivtv*)* %20, null
  br i1 %tobool37, label %if.then38, label %if.end41

if.then38:                                        ; preds = %if.then34
  %ivtvfb_restore39 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 100
  %ivtvfb_restore40 = bitcast {}** %ivtvfb_restore39 to void (%struct.ivtv*)**
  %21 = load void (%struct.ivtv*)*, void (%struct.ivtv*)** %ivtvfb_restore40, align 8, !tbaa !432
  call void %21(%struct.ivtv* %itv)
  br label %if.end41

if.end41:                                         ; preds = %if.then38, %if.then34
  call void @ivtv_set_osd_alpha(%struct.ivtv* %itv)
  %v4l2_dev46 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs47 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev46, i32 0, i32 2
  br label %for.cond51

for.cond51:                                       ; preds = %for.inc83, %if.end41
  %list85.sink = phi %struct.list_head* [ %list85, %for.inc83 ], [ %subdevs47, %if.end41 ]
  %next86 = getelementptr inbounds %struct.list_head, %struct.list_head* %list85.sink, i32 0, i32 0
  %22 = load %struct.list_head*, %struct.list_head** %next86, align 8, !tbaa !86
  %23 = bitcast %struct.list_head* %22 to i8*
  %add.ptr88 = getelementptr inbounds i8, i8* %23, i64 -128
  %24 = bitcast i8* %add.ptr88 to %struct.v4l2_subdev*
  %list52 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 1
  %v4l2_dev53 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs54 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev53, i32 0, i32 2
  %cmp55 = icmp ne %struct.list_head* %list52, %subdevs54
  br i1 %cmp55, label %for.body57, label %if.end94

for.body57:                                       ; preds = %for.cond51
  %grp_id58 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 10
  %25 = load i32, i32* %grp_id58, align 8, !tbaa !87
  %and59 = and i32 %25, 4
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %land.lhs.true61, label %for.inc83

land.lhs.true61:                                  ; preds = %for.body57
  %ops62 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 6
  %26 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops62, align 8, !tbaa !79
  %video63 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %26, i32 0, i32 3
  %27 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video63, align 8, !tbaa !91
  %tobool64 = icmp ne %struct.v4l2_subdev_video_ops* %27, null
  br i1 %tobool64, label %land.lhs.true65, label %for.inc83

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %ops66 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 6
  %28 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops66, align 8, !tbaa !79
  %video67 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %28, i32 0, i32 3
  %29 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video67, align 8, !tbaa !91
  %s_routing68 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %29, i32 0, i32 0
  %30 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing68, align 8, !tbaa !92
  %tobool69 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %30, null
  br i1 %tobool69, label %if.then70, label %for.inc83

if.then70:                                        ; preds = %land.lhs.true65
  %ops71 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 6
  %31 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops71, align 8, !tbaa !79
  %video72 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %31, i32 0, i32 3
  %32 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video72, align 8, !tbaa !91
  %s_routing73 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %32, i32 0, i32 0
  %33 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing73, align 8, !tbaa !92
  %card74 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %34 = load %struct.ivtv_card*, %struct.ivtv_card** %card74, align 8, !tbaa !2
  %video_outputs75 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %34, i32 0, i32 13
  %35 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs75, align 8, !tbaa !108
  %active_output76 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 34
  %36 = load i32, i32* %active_output76, align 8, !tbaa !429
  %idxprom77 = zext i32 %36 to i64
  %arrayidx78 = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %35, i64 %idxprom77
  %video_output79 = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %arrayidx78, i32 0, i32 1
  %37 = load i16, i16* %video_output79, align 2, !tbaa !430
  %conv80 = zext i16 %37 to i32
  %call81 = call i32 %33(%struct.v4l2_subdev* %24, i32 0, i32 %conv80, i32 0)
  br label %for.inc83

for.inc83:                                        ; preds = %if.then70, %land.lhs.true65, %land.lhs.true61, %for.body57
  %list85 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %24, i32 0, i32 1
  br label %for.cond51

if.end94:                                         ; preds = %for.cond51, %if.end28
  %udma95 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %lock96 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma95, i32 0, i32 0
  call void @mutex_unlock(%struct.mutex* %lock96)
  br label %cleanup

cleanup:                                          ; preds = %if.end94, %if.then25
  ret i32 %call23
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.216(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !433
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !434
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_reset_ir_gpio(%struct.ivtv* %itv) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %type = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 0
  %1 = load i32, i32* %type, align 8, !tbaa !99
  %cmp = icmp ne i32 %1, 2
  br i1 %cmp, label %cleanup.cont, label %do.body

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %do.end

if.then1:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.219, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then1, %do.body
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %3, i64 36876
  %call3 = call i32 @readl.220(i8* %add.ptr)
  %reg_mem4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem4, align 8, !tbaa !171
  %add.ptr5 = getelementptr i8, i8* %4, i64 36896
  %call6 = call i32 @readl.220(i8* %add.ptr5)
  %or = or i32 %call6, 128
  %reg_mem7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem7, align 8, !tbaa !171
  %add.ptr8 = getelementptr i8, i8* %5, i64 36896
  call void @writel.221(i32 %or, i8* %add.ptr8)
  %and9 = and i32 %call3, -16
  %or10 = or i32 %and9, 1
  %reg_mem11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem11, align 8, !tbaa !171
  %add.ptr12 = getelementptr i8, i8* %6, i64 36876
  call void @writel.221(i32 %or10, i8* %add.ptr12)
  %call13 = call i64 @msecs_to_jiffies.222(i32 1)
  %call14 = call i64 @schedule_timeout_interruptible(i64 %call13)
  %or15 = or i32 %or10, 2
  %reg_mem16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem16, align 8, !tbaa !171
  %add.ptr17 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %or15, i8* %add.ptr17)
  %and18 = and i32 %or, -129
  %reg_mem19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem19, align 8, !tbaa !171
  %add.ptr20 = getelementptr i8, i8* %8, i64 36896
  call void @writel.221(i32 %and18, i8* %add.ptr20)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %do.end, %entry
  %cleanup.dest.slot.0 = phi i32 [ 0, %do.end ], [ 1, %entry ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.220(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !435
  ret i32 %1
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.221(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !436
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.222(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

declare i64 @schedule_timeout_interruptible(i64) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_reset_tuner_gpio(i8* %dev, i32 %component, i32 %cmd, i32 %value) #0 {
entry:
  %0 = bitcast i8* %dev to %struct.i2c_algo_bit_data*
  %data = getelementptr inbounds %struct.i2c_algo_bit_data, %struct.i2c_algo_bit_data* %0, i32 0, i32 0
  %1 = load i8*, i8** %data, align 8, !tbaa !437
  %2 = bitcast i8* %1 to %struct.ivtv*
  %cmp = icmp ne i32 %cmd, 0
  br i1 %cmp, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %do.end

if.then1:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.225, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then1, %do.body
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %4, i64 36876
  %call3 = call i32 @readl.220(i8* %add.ptr)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 1
  %5 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %xceive_pin = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %5, i32 0, i32 15
  %6 = load i8, i8* %xceive_pin, align 1, !tbaa !438
  %conv = zext i8 %6 to i32
  %shl = shl i32 1, %conv
  %neg = xor i32 %shl, -1
  %and4 = and i32 %call3, %neg
  %reg_mem5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %and4, i8* %add.ptr6)
  %call7 = call i64 @msecs_to_jiffies.222(i32 1)
  %call8 = call i64 @schedule_timeout_interruptible(i64 %call7)
  %card9 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 1
  %8 = load %struct.ivtv_card*, %struct.ivtv_card** %card9, align 8, !tbaa !2
  %xceive_pin10 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %8, i32 0, i32 15
  %9 = load i8, i8* %xceive_pin10, align 1, !tbaa !438
  %conv11 = zext i8 %9 to i32
  %shl12 = shl i32 1, %conv11
  %or = or i32 %and4, %shl12
  %reg_mem13 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 17
  %10 = load i8*, i8** %reg_mem13, align 8, !tbaa !171
  %add.ptr14 = getelementptr i8, i8* %10, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr14)
  %call15 = call i64 @msecs_to_jiffies.222(i32 1)
  %call16 = call i64 @schedule_timeout_interruptible(i64 %call15)
  br label %cleanup

cleanup:                                          ; preds = %do.end, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_gpio_init(%struct.ivtv* %itv) #0 {
entry:
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %xceive_pin = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 15
  %1 = load i8, i8* %xceive_pin, align 1, !tbaa !438
  %tobool = icmp ne i8 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %card1 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card1, align 8, !tbaa !2
  %xceive_pin2 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 15
  %3 = load i8, i8* %xceive_pin2, align 1, !tbaa !438
  %conv = zext i8 %3 to i32
  %shl = shl i32 1, %conv
  %conv3 = trunc i32 %shl to i16
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %pin.0 = phi i16 [ %conv3, %if.then ], [ 0, %entry ]
  %card4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card4, align 8, !tbaa !2
  %gpio_init = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 16
  %direction = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_init, i32 0, i32 0
  %5 = load i16, i16* %direction, align 2, !tbaa !439
  %conv5 = zext i16 %5 to i32
  %conv6 = zext i16 %pin.0 to i32
  %or = or i32 %conv5, %conv6
  %cmp = icmp eq i32 %or, 0
  br i1 %cmp, label %cleanup, label %do.body

do.body:                                          ; preds = %if.end
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %6
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.then11, label %do.end

if.then11:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %7, i64 36896
  %call = call i32 @readl.220(i8* %add.ptr)
  %reg_mem12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem12, align 8, !tbaa !171
  %add.ptr13 = getelementptr i8, i8* %8, i64 36876
  %call14 = call i32 @readl.220(i8* %add.ptr13)
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.2.228, i32 0, i32 0), i8* %arraydecay, i32 %call, i32 %call14)
  br label %do.end

do.end:                                           ; preds = %if.then11, %do.body
  %card17 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %9 = load %struct.ivtv_card*, %struct.ivtv_card** %card17, align 8, !tbaa !2
  %gpio_init18 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %9, i32 0, i32 16
  %initial_value = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_init18, i32 0, i32 1
  %10 = load i16, i16* %initial_value, align 2, !tbaa !440
  %conv19 = zext i16 %10 to i32
  %conv20 = zext i16 %pin.0 to i32
  %or21 = or i32 %conv19, %conv20
  %reg_mem22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %11 = load i8*, i8** %reg_mem22, align 8, !tbaa !171
  %add.ptr23 = getelementptr i8, i8* %11, i64 36876
  call void @writel.221(i32 %or21, i8* %add.ptr23)
  %card24 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 1
  %12 = load %struct.ivtv_card*, %struct.ivtv_card** %card24, align 8, !tbaa !2
  %gpio_init25 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %12, i32 0, i32 16
  %direction26 = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_init25, i32 0, i32 0
  %13 = load i16, i16* %direction26, align 2, !tbaa !439
  %conv27 = zext i16 %13 to i32
  %conv28 = zext i16 %pin.0 to i32
  %or29 = or i32 %conv27, %conv28
  %reg_mem30 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %14 = load i8*, i8** %reg_mem30, align 8, !tbaa !171
  %add.ptr31 = getelementptr i8, i8* %14, i64 36896
  call void @writel.221(i32 %or29, i8* %add.ptr31)
  %sd_gpio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 24
  call void @v4l2_subdev_init(%struct.v4l2_subdev* %sd_gpio, %struct.v4l2_subdev_ops* @subdev_ops)
  %sd_gpio32 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 24
  %name33 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %sd_gpio32, i32 0, i32 9
  %arraydecay34 = getelementptr inbounds [32 x i8], [32 x i8]* %name33, i32 0, i32 0
  %v4l2_dev35 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name36 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev35, i32 0, i32 4
  %arraydecay37 = getelementptr inbounds [36 x i8], [36 x i8]* %name36, i32 0, i32 0
  %call38 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay34, i64 32, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3.229, i32 0, i32 0), i8* %arraydecay37)
  %sd_gpio39 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 24
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %sd_gpio39, i32 0, i32 10
  store i32 32768, i32* %grp_id, align 8, !tbaa !441
  %hdl_gpio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 23
  %call40 = call i32 @v4l2_ctrl_handler_init_class(%struct.v4l2_ctrl_handler* %hdl_gpio, i32 1, %struct.lock_class_key* @ivtv_gpio_init._key, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.230, i32 0, i32 0))
  %hdl_gpio41 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 23
  %call42 = call %struct.v4l2_ctrl* @v4l2_ctrl_new_std(%struct.v4l2_ctrl_handler* %hdl_gpio41, %struct.v4l2_ctrl_ops* @gpio_ctrl_ops, i32 9963785, i64 0, i64 1, i64 1, i64 0)
  %hdl_gpio43 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 23
  %error = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %hdl_gpio43, i32 0, i32 9
  %15 = load i32, i32* %error, align 4, !tbaa !442
  %tobool44 = icmp ne i32 %15, 0
  %hdl_gpio46 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 23
  br i1 %tobool44, label %if.then45, label %if.end48

if.then45:                                        ; preds = %do.end
  %error47 = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %hdl_gpio46, i32 0, i32 9
  %16 = load i32, i32* %error47, align 4, !tbaa !442
  br label %cleanup

if.end48:                                         ; preds = %do.end
  %sd_gpio50 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 24
  %ctrl_handler = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %sd_gpio50, i32 0, i32 8
  store %struct.v4l2_ctrl_handler* %hdl_gpio46, %struct.v4l2_ctrl_handler** %ctrl_handler, align 8, !tbaa !443
  %hdl_gpio51 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 23
  %call52 = call i32 @v4l2_ctrl_handler_setup(%struct.v4l2_ctrl_handler* %hdl_gpio51)
  %v4l2_dev53 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %sd_gpio54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 24
  %call55 = call i32 @v4l2_device_register_subdev(%struct.v4l2_device* %v4l2_dev53, %struct.v4l2_subdev* %sd_gpio54)
  br label %cleanup

cleanup:                                          ; preds = %if.end48, %if.then45, %if.end
  %retval.0 = phi i32 [ %16, %if.then45 ], [ %call55, %if.end48 ], [ 0, %if.end ]
  ret i32 %retval.0
}

declare void @v4l2_subdev_init(%struct.v4l2_subdev*, %struct.v4l2_subdev_ops*) #2

declare i32 @snprintf(i8*, i64, i8*, ...) #2

declare i32 @v4l2_ctrl_handler_init_class(%struct.v4l2_ctrl_handler*, i32, %struct.lock_class_key*, i8*) #2

declare i32 @v4l2_ctrl_handler_setup(%struct.v4l2_ctrl_handler*) #2

declare i32 @v4l2_device_register_subdev(%struct.v4l2_device*, %struct.v4l2_subdev*) #2

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_ctrl(%struct.v4l2_ctrl* %ctrl) #0 {
entry:
  %call = call %struct.v4l2_subdev* @to_sd(%struct.v4l2_ctrl* %ctrl)
  %call1 = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %call)
  %id = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 8
  %0 = load i32, i32* %id, align 8, !tbaa !140
  %SwitchLeaf = icmp eq i32 %0, 9963785
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %entry
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call1, i32 0, i32 1
  %1 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_mute = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %1, i32 0, i32 19
  %mask2 = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_audio_mute, i32 0, i32 0
  %2 = load i16, i16* %mask2, align 2, !tbaa !444
  %val = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 22
  %3 = load i32, i32* %val, align 8, !tbaa !145
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %cond.true, label %cond.end

cond.true:                                        ; preds = %sw.bb
  %card3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call1, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card3, align 8, !tbaa !2
  %gpio_audio_mute4 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 19
  %mute = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_audio_mute4, i32 0, i32 1
  %5 = load i16, i16* %mute, align 2, !tbaa !445
  %conv = zext i16 %5 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.bb
  %cond = phi i32 [ %conv, %cond.true ], [ 0, %sw.bb ]
  %conv5 = trunc i32 %cond to i16
  %tobool6 = icmp ne i16 %2, 0
  br i1 %tobool6, label %if.then, label %cleanup

if.then:                                          ; preds = %cond.end
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call1, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %6, i64 36876
  %call7 = call i32 @readl.220(i8* %add.ptr)
  %conv8 = zext i16 %2 to i32
  %neg = xor i32 %conv8, -1
  %and = and i32 %call7, %neg
  %conv9 = zext i16 %conv5 to i32
  %conv10 = zext i16 %2 to i32
  %and11 = and i32 %conv9, %conv10
  %or = or i32 %and, %and11
  %reg_mem12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call1, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem12, align 8, !tbaa !171
  %add.ptr13 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr13)
  br label %cleanup

cleanup:                                          ; preds = %if.then, %cond.end, %entry
  %retval.0 = phi i32 [ 0, %if.then ], [ 0, %cond.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.v4l2_subdev* @to_sd(%struct.v4l2_ctrl* %ctrl) #4 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %1 = bitcast %struct.v4l2_ctrl_handler* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -912
  %2 = bitcast i8* %add.ptr to %struct.ivtv*
  %sd_gpio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 24
  ret %struct.v4l2_subdev* %sd_gpio
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd) #4 {
entry:
  %0 = bitcast %struct.v4l2_subdev* %sd to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -1152
  %1 = bitcast i8* %add.ptr to %struct.ivtv*
  ret %struct.ivtv* %1
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_video_routing(%struct.v4l2_subdev* %sd, i32 %input, i32 %output, i32 %config) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %cmp = icmp ugt i32 %input, 2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_video_input = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 17
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_video_input, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !446
  switch i32 %input, label %if.else10 [
    i32 0, label %if.then3
    i32 1, label %if.then7
  ]

if.then3:                                         ; preds = %if.end
  %card4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card4, align 8, !tbaa !2
  %gpio_video_input5 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 17
  %tuner = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_video_input5, i32 0, i32 1
  br label %if.end14

if.then7:                                         ; preds = %if.end
  %card8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card8, align 8, !tbaa !2
  %gpio_video_input9 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 17
  %composite = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_video_input9, i32 0, i32 2
  br label %if.end14

if.else10:                                        ; preds = %if.end
  %card11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card11, align 8, !tbaa !2
  %gpio_video_input12 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 17
  %svideo = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_video_input12, i32 0, i32 3
  br label %if.end14

if.end14:                                         ; preds = %if.else10, %if.then7, %if.then3
  %svideo.sink.sink = phi i16* [ %tuner, %if.then3 ], [ %svideo, %if.else10 ], [ %composite, %if.then7 ]
  %5 = load i16, i16* %svideo.sink.sink, align 2, !tbaa !151
  %tobool = icmp ne i16 %1, 0
  br i1 %tobool, label %if.then15, label %cleanup

if.then15:                                        ; preds = %if.end14
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %6, i64 36876
  %call16 = call i32 @readl.220(i8* %add.ptr)
  %conv = zext i16 %1 to i32
  %neg = xor i32 %conv, -1
  %and = and i32 %call16, %neg
  %conv17 = zext i16 %5 to i32
  %conv18 = zext i16 %1 to i32
  %and19 = and i32 %conv17, %conv18
  %or = or i32 %and, %and19
  %reg_mem20 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem20, align 8, !tbaa !171
  %add.ptr21 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr21)
  br label %cleanup

cleanup:                                          ; preds = %if.then15, %if.end14, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.then15 ], [ 0, %if.end14 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_clock_freq(%struct.v4l2_subdev* %sd, i32 %freq) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_freq = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 21
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_freq, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !447
  %Pivot6 = icmp slt i32 %freq, 44100
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %freq, 48000
  %SwitchLeaf2 = icmp eq i32 %freq, 44100
  %or.cond = and i1 %Pivot, %SwitchLeaf2
  br i1 %or.cond, label %sw.bb4, label %sw.default

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %freq, 32000
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %card2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card2, align 8, !tbaa !2
  %gpio_audio_freq3 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 21
  %f32000 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_freq3, i32 0, i32 1
  br label %sw.epilog

sw.bb4:                                           ; preds = %NodeBlock
  %card5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card5, align 8, !tbaa !2
  %gpio_audio_freq6 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 21
  %f44100 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_freq6, i32 0, i32 2
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %NodeBlock
  %card8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card8, align 8, !tbaa !2
  %gpio_audio_freq9 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 21
  %f48000 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_freq9, i32 0, i32 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  %f48000.sink = phi i16* [ %f48000, %sw.default ], [ %f44100, %sw.bb4 ], [ %f32000, %sw.bb ]
  %5 = load i16, i16* %f48000.sink, align 2, !tbaa !151
  %tobool = icmp ne i16 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.epilog
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %6, i64 36876
  %call10 = call i32 @readl.220(i8* %add.ptr)
  %conv = zext i16 %1 to i32
  %neg = xor i32 %conv, -1
  %and = and i32 %call10, %neg
  %conv11 = zext i16 %5 to i32
  %conv12 = zext i16 %1 to i32
  %and13 = and i32 %conv11, %conv12
  %or = or i32 %and, %and13
  %reg_mem14 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem14, align 8, !tbaa !171
  %add.ptr15 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr15)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_audio_routing(%struct.v4l2_subdev* %sd, i32 %input, i32 %output, i32 %config) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %cmp = icmp ugt i32 %input, 2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_input = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 18
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !448
  %Pivot4 = icmp slt i32 %input, 1
  br i1 %Pivot4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end
  %Pivot = icmp slt i32 %input, 2
  br i1 %Pivot, label %sw.bb4, label %sw.default

LeafBlock:                                        ; preds = %if.end
  %SwitchLeaf = icmp eq i32 %input, 0
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %card2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card2, align 8, !tbaa !2
  %gpio_audio_input3 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 18
  %tuner = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input3, i32 0, i32 1
  br label %sw.epilog

sw.bb4:                                           ; preds = %NodeBlock
  %card5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card5, align 8, !tbaa !2
  %gpio_audio_input6 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 18
  %linein = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input6, i32 0, i32 2
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %NodeBlock
  %card8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card8, align 8, !tbaa !2
  %gpio_audio_input9 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 18
  %radio = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input9, i32 0, i32 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb4, %sw.bb
  %radio.sink = phi i16* [ %radio, %sw.default ], [ %linein, %sw.bb4 ], [ %tuner, %sw.bb ]
  %5 = load i16, i16* %radio.sink, align 2, !tbaa !151
  %tobool = icmp ne i16 %1, 0
  br i1 %tobool, label %if.then10, label %cleanup

if.then10:                                        ; preds = %sw.epilog
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %6, i64 36876
  %call11 = call i32 @readl.220(i8* %add.ptr)
  %conv = zext i16 %1 to i32
  %neg = xor i32 %conv, -1
  %and = and i32 %call11, %neg
  %conv12 = zext i16 %5 to i32
  %conv13 = zext i16 %1 to i32
  %and14 = and i32 %conv12, %conv13
  %or = or i32 %and, %and14
  %reg_mem15 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem15, align 8, !tbaa !171
  %add.ptr16 = getelementptr i8, i8* %7, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr16)
  br label %cleanup

cleanup:                                          ; preds = %if.then10, %sw.epilog, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.then10 ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_radio(%struct.v4l2_subdev* %sd) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_input = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 18
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !448
  %card2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card2, align 8, !tbaa !2
  %gpio_audio_input3 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 18
  %radio = getelementptr inbounds %struct.ivtv_gpio_video_input, %struct.ivtv_gpio_video_input* %gpio_audio_input3, i32 0, i32 3
  %3 = load i16, i16* %radio, align 2, !tbaa !449
  %tobool = icmp ne i16 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %4, i64 36876
  %call4 = call i32 @readl.220(i8* %add.ptr)
  %conv = zext i16 %1 to i32
  %neg = xor i32 %conv, -1
  %and = and i32 %call4, %neg
  %conv5 = zext i16 %3 to i32
  %conv6 = zext i16 %1 to i32
  %and7 = and i32 %conv5, %conv6
  %or = or i32 %and, %and7
  %reg_mem8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem8, align 8, !tbaa !171
  %add.ptr9 = getelementptr i8, i8* %5, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr9)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_g_tuner(%struct.v4l2_subdev* %sd, %struct.v4l2_tuner* %vt) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_detect = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 22
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_init, %struct.ivtv_gpio_init* %gpio_audio_detect, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !450
  %conv = zext i16 %1 to i32
  %cmp = icmp eq i32 %conv, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %2, i64 36872
  %call3 = call i32 @readl.220(i8* %add.ptr)
  %conv4 = zext i16 %1 to i32
  %and = and i32 %call3, %conv4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %.sink = phi i32 [ 14, %if.then ], [ 1, %lor.lhs.false ]
  %rxsubchans5 = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 6
  store i32 %.sink, i32* %rxsubchans5, align 4, !tbaa !389
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_s_tuner(%struct.v4l2_subdev* %sd, %struct.v4l2_tuner* %vt) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %0 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %gpio_audio_mode = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %0, i32 0, i32 20
  %mask1 = getelementptr inbounds %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_audio_mode* %gpio_audio_mode, i32 0, i32 0
  %1 = load i16, i16* %mask1, align 2, !tbaa !451
  %audmode = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 7
  %2 = load i32, i32* %audmode, align 4, !tbaa !387
  %Pivot8 = icmp slt i32 %2, 2
  br i1 %Pivot8, label %NodeBlock, label %NodeBlock5

NodeBlock5:                                       ; preds = %entry
  %Pivot6 = icmp slt i32 %2, 3
  br i1 %Pivot6, label %sw.bb4, label %NodeBlock3

NodeBlock3:                                       ; preds = %NodeBlock5
  %Pivot4 = icmp slt i32 %2, 4
  br i1 %Pivot4, label %sw.bb, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %2, 1
  %SwitchLeaf = icmp eq i32 %2, 0
  %or.cond = and i1 %Pivot, %SwitchLeaf
  br i1 %or.cond, label %sw.bb7, label %sw.default

sw.bb:                                            ; preds = %NodeBlock3
  %card2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %3 = load %struct.ivtv_card*, %struct.ivtv_card** %card2, align 8, !tbaa !2
  %gpio_audio_mode3 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %3, i32 0, i32 20
  %lang1 = getelementptr inbounds %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_audio_mode* %gpio_audio_mode3, i32 0, i32 3
  br label %sw.epilog

sw.bb4:                                           ; preds = %NodeBlock5
  %card5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %4 = load %struct.ivtv_card*, %struct.ivtv_card** %card5, align 8, !tbaa !2
  %gpio_audio_mode6 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %4, i32 0, i32 20
  %lang2 = getelementptr inbounds %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_audio_mode* %gpio_audio_mode6, i32 0, i32 4
  br label %sw.epilog

sw.bb7:                                           ; preds = %NodeBlock
  %card8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %5 = load %struct.ivtv_card*, %struct.ivtv_card** %card8, align 8, !tbaa !2
  %gpio_audio_mode9 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %5, i32 0, i32 20
  %mono = getelementptr inbounds %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_audio_mode* %gpio_audio_mode9, i32 0, i32 1
  br label %sw.epilog

sw.default:                                       ; preds = %NodeBlock, %NodeBlock3
  %card11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 1
  %6 = load %struct.ivtv_card*, %struct.ivtv_card** %card11, align 8, !tbaa !2
  %gpio_audio_mode12 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %6, i32 0, i32 20
  %stereo = getelementptr inbounds %struct.ivtv_gpio_audio_mode, %struct.ivtv_gpio_audio_mode* %gpio_audio_mode12, i32 0, i32 2
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb4, %sw.bb
  %stereo.sink = phi i16* [ %stereo, %sw.default ], [ %mono, %sw.bb7 ], [ %lang2, %sw.bb4 ], [ %lang1, %sw.bb ]
  %7 = load i16, i16* %stereo.sink, align 2, !tbaa !151
  %tobool = icmp ne i16 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.epilog
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %8, i64 36876
  %call13 = call i32 @readl.220(i8* %add.ptr)
  %conv = zext i16 %1 to i32
  %neg = xor i32 %conv, -1
  %and = and i32 %call13, %neg
  %conv14 = zext i16 %7 to i32
  %conv15 = zext i16 %1 to i32
  %and16 = and i32 %conv14, %conv15
  %or = or i32 %and, %and16
  %reg_mem17 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %9 = load i8*, i8** %reg_mem17, align 8, !tbaa !171
  %add.ptr18 = getelementptr i8, i8* %9, i64 36876
  call void @writel.221(i32 %or, i8* %add.ptr18)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.epilog
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @subdev_log_status(%struct.v4l2_subdev* %sd) #0 {
entry:
  %call = call %struct.ivtv* @sd_to_ivtv(%struct.v4l2_subdev* %sd)
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 36896
  %call1 = call i32 @readl.220(i8* %add.ptr)
  %reg_mem2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem2, align 8, !tbaa !171
  %add.ptr3 = getelementptr i8, i8* %1, i64 36876
  %call4 = call i32 @readl.220(i8* %add.ptr3)
  %reg_mem5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %2, i64 36872
  %call7 = call i32 @readl.220(i8* %add.ptr6)
  %call8 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.5.231, i32 0, i32 0), i8* %arraydecay, i32 %call1, i32 %call4, i32 %call7)
  %hdl_gpio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %call, i32 0, i32 23
  %name9 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %sd, i32 0, i32 9
  %arraydecay10 = getelementptr inbounds [32 x i8], [32 x i8]* %name9, i32 0, i32 0
  call void @v4l2_ctrl_handler_log_status(%struct.v4l2_ctrl_handler* %hdl_gpio, i8* %arraydecay10)
  ret i32 0
}

declare void @v4l2_ctrl_handler_log_status(%struct.v4l2_ctrl_handler*, i8*) #2

; Function Attrs: nounwind uwtable
define %struct.i2c_client* @ivtv_i2c_new_ir_legacy(%struct.ivtv.1060* %itv) #0 {
entry:
  %info = alloca %struct.i2c_board_info, align 8
  %0 = bitcast %struct.i2c_board_info* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %0) #8
  %1 = bitcast %struct.i2c_board_info* %info to i8*
  %call = call i8* @__memset(i8* %1, i32 0, i64 72)
  %type = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %info, i32 0, i32 0
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %type, i32 0, i32 0
  %call1 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.234, i32 0, i32 0), i64 20)
  %i2c_adap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %call2 = call %struct.i2c_client* @i2c_new_probed_device(%struct.i2c_adapter* %i2c_adap, %struct.i2c_board_info* %info, i16* getelementptr inbounds ([3 x i16], [3 x i16]* @ivtv_i2c_new_ir_legacy.addr_list, i32 0, i32 0), i32 (%struct.i2c_adapter*, i16)* null)
  %2 = bitcast %struct.i2c_board_info* %info to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %2) #8
  ret %struct.i2c_client* %call2
}

declare %struct.i2c_client* @i2c_new_probed_device(%struct.i2c_adapter*, %struct.i2c_board_info*, i16*, i32 (%struct.i2c_adapter*, i16)*) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_i2c_register(%struct.ivtv.1060* %itv, i32 %idx) #0 {
entry:
  %.compoundliteral = alloca [2 x i16], align 2
  %pdata = alloca %struct.atomic_t, align 4
  %cx25840_info = alloca %struct.i2c_board_info, align 8
  %i2c_adap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %idxprom = zext i32 %idx to i64
  %arrayidx = getelementptr inbounds [22 x i8*], [22 x i8*]* @hw_devicenames, i64 0, i64 %idxprom
  %0 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %shl = shl i32 1, %idx
  %cmp = icmp eq i32 %shl, 16
  br i1 %cmp, label %if.then, label %if.end22

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %card_i2c = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  %1 = load %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_tuner_i2c** %card_i2c, align 8, !tbaa !285
  %radio = getelementptr inbounds %struct.ivtv_card_tuner_i2c, %struct.ivtv_card_tuner_i2c* %1, i32 0, i32 0
  %arraydecay = getelementptr inbounds [2 x i16], [2 x i16]* %radio, i32 0, i32 0
  %call = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device* %v4l2_dev, %struct.i2c_adapter* %i2c_adap, i8* %0, i8 zeroext 0, i16* %arraydecay)
  %tobool = icmp ne %struct.v4l2_subdev* %call, null
  br i1 %tobool, label %if.then1, label %if.end

if.then1:                                         ; preds = %if.then
  %shl2 = shl i32 1, %idx
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %call, i32 0, i32 10
  store i32 %shl2, i32* %grp_id, align 8, !tbaa !87
  br label %if.end

if.end:                                           ; preds = %if.then1, %if.then
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %card_i2c4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  %2 = load %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_tuner_i2c** %card_i2c4, align 8, !tbaa !285
  %demod = getelementptr inbounds %struct.ivtv_card_tuner_i2c, %struct.ivtv_card_tuner_i2c* %2, i32 0, i32 1
  %arraydecay5 = getelementptr inbounds [2 x i16], [2 x i16]* %demod, i32 0, i32 0
  %call6 = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device* %v4l2_dev3, %struct.i2c_adapter* %i2c_adap, i8* %0, i8 zeroext 0, i16* %arraydecay5)
  %tobool7 = icmp ne %struct.v4l2_subdev* %call6, null
  br i1 %tobool7, label %if.then8, label %if.end11

if.then8:                                         ; preds = %if.end
  %shl9 = shl i32 1, %idx
  %grp_id10 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %call6, i32 0, i32 10
  store i32 %shl9, i32* %grp_id10, align 8, !tbaa !87
  br label %if.end11

if.end11:                                         ; preds = %if.then8, %if.end
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %card_i2c13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 3
  %3 = load %struct.ivtv_card_tuner_i2c*, %struct.ivtv_card_tuner_i2c** %card_i2c13, align 8, !tbaa !285
  %tv = getelementptr inbounds %struct.ivtv_card_tuner_i2c, %struct.ivtv_card_tuner_i2c* %3, i32 0, i32 2
  %arraydecay14 = getelementptr inbounds [4 x i16], [4 x i16]* %tv, i32 0, i32 0
  %call15 = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device* %v4l2_dev12, %struct.i2c_adapter* %i2c_adap, i8* %0, i8 zeroext 0, i16* %arraydecay14)
  %tobool16 = icmp ne %struct.v4l2_subdev* %call15, null
  br i1 %tobool16, label %if.then17, label %if.end20

if.then17:                                        ; preds = %if.end11
  %shl18 = shl i32 1, %idx
  %grp_id19 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %call15, i32 0, i32 10
  store i32 %shl18, i32* %grp_id19, align 8, !tbaa !87
  br label %if.end20

if.end20:                                         ; preds = %if.then17, %if.end11
  %tobool21 = icmp ne %struct.v4l2_subdev* %call15, null
  %4 = zext i1 %tobool21 to i64
  %cond = select i1 %tobool21, i32 0, i32 -1
  br label %cleanup

if.end22:                                         ; preds = %entry
  %and = and i32 %shl, 4128768
  %tobool23 = icmp ne i32 %and, 0
  %idxprom25 = zext i32 %idx to i64
  %arrayidx26 = getelementptr inbounds [22 x i8], [22 x i8]* @hw_addrs, i64 0, i64 %idxprom25
  %5 = load i8, i8* %arrayidx26, align 1, !tbaa !142
  br i1 %tobool23, label %if.then24, label %if.end28

if.then24:                                        ; preds = %if.end22
  %call27 = call i32 @ivtv_i2c_new_ir(%struct.ivtv.1060* %itv, i32 %shl, i8* %0, i8 zeroext %5)
  br label %cleanup

if.end28:                                         ; preds = %if.end22
  %tobool31 = icmp ne i8 %5, 0
  br i1 %tobool31, label %if.end33, label %cleanup

if.end33:                                         ; preds = %if.end28
  switch i32 %shl, label %if.else53 [
    i32 512, label %if.then36
    i32 1024, label %if.then36
    i32 1, label %if.then44
  ]

if.then36:                                        ; preds = %if.end33, %if.end33
  %v4l2_dev37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %arrayinit.begin = getelementptr inbounds [2 x i16], [2 x i16]* %.compoundliteral, i64 0, i64 0
  %idxprom38 = zext i32 %idx to i64
  %arrayidx39 = getelementptr inbounds [22 x i8], [22 x i8]* @hw_addrs, i64 0, i64 %idxprom38
  %6 = load i8, i8* %arrayidx39, align 1, !tbaa !142
  %conv = zext i8 %6 to i16
  store i16 %conv, i16* %arrayinit.begin, align 2, !tbaa !151
  %arrayinit.element = getelementptr inbounds i16, i16* %arrayinit.begin, i64 1
  store i16 -2, i16* %arrayinit.element, align 2, !tbaa !151
  %arraydecay40 = getelementptr inbounds [2 x i16], [2 x i16]* %.compoundliteral, i32 0, i32 0
  %call41 = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device* %v4l2_dev37, %struct.i2c_adapter* %i2c_adap, i8* %0, i8 zeroext 0, i16* %arraydecay40)
  br label %if.end59

if.then44:                                        ; preds = %if.end33
  %7 = bitcast %struct.atomic_t* %pdata to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %7) #8
  %8 = bitcast %struct.i2c_board_info* %cx25840_info to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %8) #8
  %type45 = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 0
  %9 = bitcast [20 x i8]* %type45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.1.237, i32 0, i32 0), i64 20, i32 1, i1 false), !tbaa.struct !452
  %flags = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 1
  store i16 0, i16* %flags, align 4, !tbaa !453
  %addr = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 2
  %idxprom46 = zext i32 %idx to i64
  %arrayidx47 = getelementptr inbounds [22 x i8], [22 x i8]* @hw_addrs, i64 0, i64 %idxprom46
  %10 = load i8, i8* %arrayidx47, align 1, !tbaa !142
  %conv48 = zext i8 %10 to i16
  store i16 %conv48, i16* %addr, align 2, !tbaa !455
  %platform_data = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 3
  %11 = bitcast %struct.atomic_t* %pdata to i8*
  store i8* %11, i8** %platform_data, align 8, !tbaa !456
  %archdata = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 4
  store %union.anon.51* null, %union.anon.51** %archdata, align 8, !tbaa !457
  %of_node = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 5
  store %struct.device_node* null, %struct.device_node** %of_node, align 8, !tbaa !458
  %fwnode = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 6
  store %struct.fwnode_handle* null, %struct.fwnode_handle** %fwnode, align 8, !tbaa !459
  %properties = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 7
  store %struct.property_entry* null, %struct.property_entry** %properties, align 8, !tbaa !460
  %irq = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %cx25840_info, i32 0, i32 8
  store i32 0, i32* %irq, align 8, !tbaa !461
  %pvr150_workaround = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 5
  %12 = load i8, i8* %pvr150_workaround, align 1, !tbaa !314
  %conv49 = zext i8 %12 to i32
  %pvr150_workaround50 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %pdata, i32 0, i32 0
  store i32 %conv49, i32* %pvr150_workaround50, align 4, !tbaa !462
  %v4l2_dev51 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %call52 = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev_board(%struct.v4l2_device* %v4l2_dev51, %struct.i2c_adapter* %i2c_adap, %struct.i2c_board_info* %cx25840_info, i16* null)
  %13 = bitcast %struct.i2c_board_info* %cx25840_info to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %13) #8
  %14 = bitcast %struct.atomic_t* %pdata to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #8
  br label %if.end59

if.else53:                                        ; preds = %if.end33
  %v4l2_dev54 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %idxprom55 = zext i32 %idx to i64
  %arrayidx56 = getelementptr inbounds [22 x i8], [22 x i8]* @hw_addrs, i64 0, i64 %idxprom55
  %15 = load i8, i8* %arrayidx56, align 1, !tbaa !142
  %call57 = call %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device* %v4l2_dev54, %struct.i2c_adapter* %i2c_adap, i8* %0, i8 zeroext %15, i16* null)
  br label %if.end59

if.end59:                                         ; preds = %if.else53, %if.then44, %if.then36
  %sd.1 = phi %struct.v4l2_subdev* [ %call41, %if.then36 ], [ %call52, %if.then44 ], [ %call57, %if.else53 ]
  %tobool60 = icmp ne %struct.v4l2_subdev* %sd.1, null
  br i1 %tobool60, label %if.then61, label %if.end64

if.then61:                                        ; preds = %if.end59
  %shl62 = shl i32 1, %idx
  %grp_id63 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %sd.1, i32 0, i32 10
  store i32 %shl62, i32* %grp_id63, align 8, !tbaa !87
  br label %if.end64

if.end64:                                         ; preds = %if.then61, %if.end59
  %tobool65 = icmp ne %struct.v4l2_subdev* %sd.1, null
  %16 = zext i1 %tobool65 to i64
  %cond66 = select i1 %tobool65, i32 0, i32 -1
  br label %cleanup

cleanup:                                          ; preds = %if.end64, %if.end28, %if.then24, %if.end20
  %retval.0 = phi i32 [ %cond, %if.end20 ], [ %call27, %if.then24 ], [ %cond66, %if.end64 ], [ -1, %if.end28 ]
  ret i32 %retval.0
}

declare %struct.v4l2_subdev* @v4l2_i2c_new_subdev(%struct.v4l2_device*, %struct.i2c_adapter*, i8*, i8 zeroext, i16*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_i2c_new_ir(%struct.ivtv.1060* %itv, i32 %hw, i8* %type, i8 zeroext %addr) #0 {
entry:
  %info = alloca %struct.i2c_board_info, align 8
  %addr_list = alloca [2 x i16], align 2
  %0 = bitcast %struct.i2c_board_info* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %0) #8
  %i2c_adap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %ir_i2c_init_data = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 74
  %1 = bitcast [2 x i16]* %addr_list to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %arrayinit.begin = getelementptr inbounds [2 x i16], [2 x i16]* %addr_list, i64 0, i64 0
  %conv = zext i8 %addr to i16
  store i16 %conv, i16* %arrayinit.begin, align 2, !tbaa !151
  %arrayinit.element = getelementptr inbounds i16, i16* %arrayinit.begin, i64 1
  store i16 -2, i16* %arrayinit.element, align 2, !tbaa !151
  %and = and i32 %hw, 524288
  %tobool = icmp ne i32 %and, 0
  %hw_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %2 = load i32, i32* %hw_flags, align 8, !tbaa !320
  br i1 %tobool, label %if.then, label %if.end9

if.then:                                          ; preds = %entry
  %and1 = and i32 %2, 524288
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %3 = bitcast %struct.i2c_board_info* %info to i8*
  %call = call i8* @__memset(i8* %3, i32 0, i64 72)
  %type4 = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %info, i32 0, i32 0
  %arraydecay = getelementptr inbounds [20 x i8], [20 x i8]* %type4, i32 0, i32 0
  %call5 = call i64 @strlcpy(i8* %arraydecay, i8* %type, i64 20)
  %arraydecay6 = getelementptr inbounds [2 x i16], [2 x i16]* %addr_list, i32 0, i32 0
  %call7 = call %struct.i2c_client* @i2c_new_probed_device(%struct.i2c_adapter* %i2c_adap, %struct.i2c_board_info* %info, i16* %arraydecay6, i32 (%struct.i2c_adapter*, i16)* null)
  %cmp = icmp eq %struct.i2c_client* %call7, null
  %4 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 -1, i32 0
  br label %cleanup

if.end9:                                          ; preds = %entry
  %and11 = and i32 %2, 3604480
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %cleanup, label %NodeBlock13

NodeBlock13:                                      ; preds = %if.end9
  %Pivot14 = icmp slt i32 %hw, 262144
  br i1 %Pivot14, label %NodeBlock, label %NodeBlock11

NodeBlock11:                                      ; preds = %NodeBlock13
  %Pivot12 = icmp slt i32 %hw, 1048576
  br i1 %Pivot12, label %LeafBlock3, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %hw, 2097152
  br i1 %Pivot10, label %LeafBlock5, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %hw, 2097152
  br i1 %SwitchLeaf8, label %sw.bb27, label %sw.epilog

LeafBlock5:                                       ; preds = %NodeBlock9
  %SwitchLeaf6 = icmp eq i32 %hw, 1048576
  br i1 %SwitchLeaf6, label %sw.bb21, label %sw.epilog

LeafBlock3:                                       ; preds = %NodeBlock11
  %SwitchLeaf4 = icmp eq i32 %hw, 262144
  br i1 %SwitchLeaf4, label %sw.bb16, label %sw.epilog

NodeBlock:                                        ; preds = %NodeBlock13
  %Pivot = icmp slt i32 %hw, 131072
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %hw, 131072
  br i1 %SwitchLeaf2, label %sw.bb16, label %sw.epilog

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %hw, 65536
  br i1 %SwitchLeaf, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %LeafBlock
  %ir_codes = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 0
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24.238, i32 0, i32 0), i8** %ir_codes, align 8, !tbaa !464
  %internal_get_key_func = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 5
  store i32 6, i32* %internal_get_key_func, align 8, !tbaa !465
  %type15 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 2
  store i64 2, i64* %type15, align 8, !tbaa !466
  %name = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.25.239, i32 0, i32 0), i8** %name, align 8, !tbaa !467
  br label %sw.epilog

sw.bb16:                                          ; preds = %LeafBlock1, %LeafBlock3
  %ir_codes17 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26.240, i32 0, i32 0), i8** %ir_codes17, align 8, !tbaa !464
  %internal_get_key_func18 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 5
  store i32 2, i32* %internal_get_key_func18, align 8, !tbaa !465
  %type19 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 2
  store i64 4, i64* %type19, align 8, !tbaa !466
  %card_name = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  %5 = load i8*, i8** %card_name, align 8, !tbaa !267
  %name20 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 1
  store i8* %5, i8** %name20, align 8, !tbaa !467
  br label %sw.epilog

sw.bb21:                                          ; preds = %LeafBlock5
  %ir_codes22 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 0
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.26.240, i32 0, i32 0), i8** %ir_codes22, align 8, !tbaa !464
  %internal_get_key_func23 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 5
  store i32 5, i32* %internal_get_key_func23, align 8, !tbaa !465
  %type24 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 2
  store i64 393220, i64* %type24, align 8, !tbaa !466
  %card_name25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  %6 = load i8*, i8** %card_name25, align 8, !tbaa !267
  %name26 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 1
  store i8* %6, i8** %name26, align 8, !tbaa !467
  br label %sw.epilog

sw.bb27:                                          ; preds = %LeafBlock7
  %get_key = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 4
  store i32 (%struct.IR_i2c*, i32*, i32*, i8*)* @get_key_adaptec, i32 (%struct.IR_i2c*, i32*, i32*, i8*)** %get_key, align 8, !tbaa !468
  %card_name28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 2
  %7 = load i8*, i8** %card_name28, align 8, !tbaa !267
  %name29 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 1
  store i8* %7, i8** %name29, align 8, !tbaa !467
  %ir_codes30 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 0
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.27.241, i32 0, i32 0), i8** %ir_codes30, align 8, !tbaa !464
  %type31 = getelementptr inbounds %struct.IR_i2c_init_data, %struct.IR_i2c_init_data* %ir_i2c_init_data, i32 0, i32 2
  store i64 1, i64* %type31, align 8, !tbaa !466
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb27, %sw.bb21, %sw.bb16, %sw.bb, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock7
  %8 = bitcast %struct.i2c_board_info* %info to i8*
  %call32 = call i8* @__memset(i8* %8, i32 0, i64 72)
  %9 = bitcast %struct.IR_i2c_init_data* %ir_i2c_init_data to i8*
  %platform_data = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %info, i32 0, i32 3
  store i8* %9, i8** %platform_data, align 8, !tbaa !456
  %type33 = getelementptr inbounds %struct.i2c_board_info, %struct.i2c_board_info* %info, i32 0, i32 0
  %arraydecay34 = getelementptr inbounds [20 x i8], [20 x i8]* %type33, i32 0, i32 0
  %call35 = call i64 @strlcpy(i8* %arraydecay34, i8* %type, i64 20)
  %arraydecay36 = getelementptr inbounds [2 x i16], [2 x i16]* %addr_list, i32 0, i32 0
  %call37 = call %struct.i2c_client* @i2c_new_probed_device(%struct.i2c_adapter* %i2c_adap, %struct.i2c_board_info* %info, i16* %arraydecay36, i32 (%struct.i2c_adapter*, i16)* null)
  %cmp38 = icmp eq %struct.i2c_client* %call37, null
  %10 = zext i1 %cmp38 to i64
  %cond40 = select i1 %cmp38, i32 -1, i32 0
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %if.end9, %if.end, %if.then
  %retval.0 = phi i32 [ %cond, %if.end ], [ %cond40, %sw.epilog ], [ -1, %if.then ], [ -1, %if.end9 ]
  %11 = bitcast [2 x i16]* %addr_list to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %12 = bitcast %struct.i2c_board_info* %info to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %12) #8
  ret i32 %retval.0
}

declare %struct.v4l2_subdev* @v4l2_i2c_new_subdev_board(%struct.v4l2_device*, %struct.i2c_adapter*, %struct.i2c_board_info*, i16*) #2

; Function Attrs: nounwind uwtable
define internal i32 @get_key_adaptec(%struct.IR_i2c* %ir, i32* %protocol, i32* %scancode, i8* %toggle) #0 {
entry:
  %keybuf = alloca [4 x i8], align 1
  %0 = bitcast [4 x i8]* %keybuf to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %arrayidx = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 0
  store i8 0, i8* %arrayidx, align 1, !tbaa !142
  %c = getelementptr inbounds %struct.IR_i2c, %struct.IR_i2c* %ir, i32 0, i32 1
  %1 = load %struct.i2c_client*, %struct.i2c_client** %c, align 8, !tbaa !469
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i32 0, i32 0
  %call = call i32 @i2c_master_send(%struct.i2c_client* %1, i8* %arraydecay, i32 1)
  %c1 = getelementptr inbounds %struct.IR_i2c, %struct.IR_i2c* %ir, i32 0, i32 1
  %2 = load %struct.i2c_client*, %struct.i2c_client** %c1, align 8, !tbaa !469
  %arraydecay2 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i32 0, i32 0
  %call3 = call i32 @i2c_master_recv(%struct.i2c_client* %2, i8* %arraydecay2, i32 4)
  %conv = sext i32 %call3 to i64
  %cmp = icmp ne i64 %conv, 4
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arrayidx5 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 2
  %3 = load i8, i8* %arrayidx5, align 1, !tbaa !142
  %conv6 = zext i8 %3 to i32
  %cmp7 = icmp eq i32 %conv6, 255
  br i1 %cmp7, label %cleanup, label %if.end10

if.end10:                                         ; preds = %if.end
  %arrayidx11 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 2
  %4 = load i8, i8* %arrayidx11, align 1, !tbaa !142
  %conv12 = zext i8 %4 to i32
  %and = and i32 %conv12, 127
  %conv13 = trunc i32 %and to i8
  store i8 %conv13, i8* %arrayidx11, align 1, !tbaa !142
  %arrayidx14 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 3
  %5 = load i8, i8* %arrayidx14, align 1, !tbaa !142
  %conv15 = zext i8 %5 to i32
  %or = or i32 %conv15, 128
  %conv16 = trunc i32 %or to i8
  store i8 %conv16, i8* %arrayidx14, align 1, !tbaa !142
  store i32 0, i32* %protocol, align 4, !tbaa !142
  %arrayidx17 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 3
  %6 = load i8, i8* %arrayidx17, align 1, !tbaa !142
  %conv18 = zext i8 %6 to i32
  %arrayidx19 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 2
  %7 = load i8, i8* %arrayidx19, align 1, !tbaa !142
  %conv20 = zext i8 %7 to i32
  %shl = shl i32 %conv20, 8
  %or21 = or i32 %conv18, %shl
  %arrayidx22 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 1
  %8 = load i8, i8* %arrayidx22, align 1, !tbaa !142
  %conv23 = zext i8 %8 to i32
  %shl24 = shl i32 %conv23, 16
  %or25 = or i32 %or21, %shl24
  %arrayidx26 = getelementptr inbounds [4 x i8], [4 x i8]* %keybuf, i64 0, i64 0
  %9 = load i8, i8* %arrayidx26, align 1, !tbaa !142
  %conv27 = zext i8 %9 to i32
  %shl28 = shl i32 %conv27, 24
  %or29 = or i32 %or25, %shl28
  store i32 %or29, i32* %scancode, align 4, !tbaa !120
  store i8 0, i8* %toggle, align 1, !tbaa !142
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end, %entry
  %retval.0 = phi i32 [ 1, %if.end10 ], [ 0, %entry ], [ 0, %if.end ]
  %10 = bitcast [4 x i8]* %keybuf to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  ret i32 %retval.0
}

declare i32 @i2c_master_send(%struct.i2c_client*, i8*, i32) #2

declare i32 @i2c_master_recv(%struct.i2c_client*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define %struct.v4l2_subdev* @ivtv_find_hw(%struct.ivtv.1060* %itv, i32 %hw) #0 {
entry:
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %lock = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 3
  call void @spin_lock.262(%struct.spinlock* %lock)
  %v4l2_dev1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev1, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list6.sink = phi %struct.list_head* [ %list6, %for.inc ], [ %subdevs, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !86
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 -128
  %2 = bitcast i8* %add.ptr9 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %2, i32 0, i32 1
  %v4l2_dev2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs3 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev2, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %2, i32 0, i32 10
  %3 = load i32, i32* %grp_id, align 8, !tbaa !87
  %cmp4 = icmp eq i32 %3, %hw
  br i1 %cmp4, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %list6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %result.0 = phi %struct.v4l2_subdev* [ %2, %for.body ], [ null, %for.cond ]
  %v4l2_dev10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %lock11 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev10, i32 0, i32 3
  call void @spin_unlock.263(%struct.spinlock* %lock11)
  ret %struct.v4l2_subdev* %result.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_lock.262(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_lock(%struct.raw_spinlock* %rlock)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock.263(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_unlock(%struct.raw_spinlock* %rlock)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @init_ivtv_i2c(%struct.ivtv.1060* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2.266, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 4
  %1 = load i32, i32* %newi2c, align 8, !tbaa !273
  %cmp = icmp sgt i32 %1, 0
  %i2c_adap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %2 = bitcast %struct.i2c_adapter* %i2c_adap to i8*
  br i1 %cmp, label %if.then2, label %if.else

if.then2:                                         ; preds = %do.end
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.i2c_adapter* @ivtv_i2c_adap_hw_template to i8*), i64 2096, i32 8, i1 false), !tbaa.struct !471
  br label %if.end4

if.else:                                          ; preds = %do.end
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* bitcast (%struct.i2c_adapter* @ivtv_i2c_adap_template to i8*), i64 2096, i32 8, i1 false), !tbaa.struct !471
  %i2c_algo = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 70
  %3 = bitcast %struct.i2c_algo_bit_data* %i2c_algo to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast (%struct.i2c_algo_bit_data* @ivtv_i2c_algo_template to i8*), i64 64, i32 8, i1 false), !tbaa.struct !472
  br label %if.end4

if.end4:                                          ; preds = %if.else, %if.then2
  %options5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %i2c_clock_period = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options5, i32 0, i32 5
  %4 = load i32, i32* %i2c_clock_period, align 4, !tbaa !272
  %div = sdiv i32 %4, 2
  %i2c_algo6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 70
  %udelay = getelementptr inbounds %struct.i2c_algo_bit_data, %struct.i2c_algo_bit_data* %i2c_algo6, i32 0, i32 7
  store i32 %div, i32* %udelay, align 8, !tbaa !473
  %5 = bitcast %struct.ivtv.1060* %itv to i8*
  %i2c_algo7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 70
  %data = getelementptr inbounds %struct.i2c_algo_bit_data, %struct.i2c_algo_bit_data* %i2c_algo7, i32 0, i32 0
  store i8* %5, i8** %data, align 8, !tbaa !474
  %i2c_algo8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 70
  %6 = bitcast %struct.i2c_algo_bit_data* %i2c_algo8 to i8*
  %i2c_adap9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %algo_data = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %i2c_adap9, i32 0, i32 3
  store i8* %6, i8** %algo_data, align 8, !tbaa !475
  %i2c_adap10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %name11 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %i2c_adap10, i32 0, i32 11
  %arraydecay12 = getelementptr inbounds [48 x i8], [48 x i8]* %name11, i32 0, i32 0
  %i2c_adap13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %name14 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %i2c_adap13, i32 0, i32 11
  %arraydecay15 = getelementptr inbounds [48 x i8], [48 x i8]* %name14, i32 0, i32 0
  %call16 = call i64 @strlen(i8* %arraydecay15)
  %add.ptr = getelementptr inbounds i8, i8* %arraydecay12, i64 %call16
  %instance = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %7 = load i16, i16* %instance, align 8, !tbaa !227
  %conv = zext i16 %7 to i32
  %call17 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.267, i32 0, i32 0), i32 %conv)
  %i2c_adap18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %8 = bitcast %struct.v4l2_device* %v4l2_dev19 to i8*
  call void @i2c_set_adapdata(%struct.i2c_adapter* %i2c_adap18, i8* %8)
  %i2c_client = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 71
  %9 = bitcast %struct.i2c_client* %i2c_client to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* bitcast (%struct.i2c_client* @ivtv_i2c_client_template to i8*), i64 1488, i32 8, i1 false), !tbaa.struct !476
  %i2c_adap20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %i2c_client21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 71
  %adapter = getelementptr inbounds %struct.i2c_client, %struct.i2c_client* %i2c_client21, i32 0, i32 3
  store %struct.i2c_adapter* %i2c_adap20, %struct.i2c_adapter** %adapter, align 8, !tbaa !477
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %10, i32 0, i32 35
  %i2c_adap22 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  %dev23 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %i2c_adap22, i32 0, i32 9
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev23, i32 0, i32 0
  store %struct.device* %dev, %struct.device** %parent, align 8, !tbaa !478
  %11 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and25 = and i32 512, %11
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %do.end34

if.then27:                                        ; preds = %if.end4
  %v4l2_dev28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name29 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev28, i32 0, i32 4
  %arraydecay30 = getelementptr inbounds [36 x i8], [36 x i8]* %name29, i32 0, i32 0
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.4.268, i32 0, i32 0), i8* %arraydecay30)
  br label %do.end34

do.end34:                                         ; preds = %if.then27, %if.end4
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  %options35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %newi2c36 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options35, i32 0, i32 4
  %12 = load i32, i32* %newi2c36, align 8, !tbaa !273
  %cmp37 = icmp sgt i32 %12, 0
  %i2c_adap40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  br i1 %cmp37, label %if.then39, label %if.else42

if.then39:                                        ; preds = %do.end34
  %call41 = call i32 @i2c_add_adapter(%struct.i2c_adapter* %i2c_adap40)
  br label %if.end45

if.else42:                                        ; preds = %do.end34
  %call44 = call i32 @i2c_bit_add_bus(%struct.i2c_adapter* %i2c_adap40)
  br label %if.end45

if.end45:                                         ; preds = %if.else42, %if.then39
  %retval1.0 = phi i32 [ %call41, %if.then39 ], [ %call44, %if.else42 ]
  ret i32 %retval1.0
}

declare i64 @strlen(i8*) #2

declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @i2c_set_adapdata(%struct.i2c_adapter* %dev, i8* %data) #4 {
entry:
  %dev1 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dev, i32 0, i32 9
  call void @dev_set_drvdata(%struct.device* %dev1, i8* %data)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 %state) #0 {
entry:
  %neg = xor i32 %state, -1
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 28672
  call void @writel.269(i32 %neg, i8* %add.ptr)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 %state) #0 {
entry:
  %neg = xor i32 %state, -1
  %and = and i32 %neg, 1
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 28676
  call void @writel.269(i32 %and, i8* %add.ptr)
  ret void
}

declare i32 @i2c_add_adapter(%struct.i2c_adapter*) #2

declare i32 @i2c_bit_add_bus(%struct.i2c_adapter*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.269(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !479
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #4 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  store i8* %data, i8** %driver_data, align 8, !tbaa !269
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_setsda_old(i8* %data, i32 %state) #0 {
entry:
  %0 = bitcast i8* %data to %struct.ivtv.1060*
  %tobool = icmp ne i32 %state, 0
  %i2c_state = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 72
  %1 = load i32, i32* %i2c_state, align 8, !tbaa !480
  %and = and i32 %1, -2
  %or = or i32 %1, 1
  %and.sink = select i1 %tobool, i32 %or, i32 %and
  store i32 %and.sink, i32* %i2c_state, align 8, !tbaa !480
  %i2c_state2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 72
  %2 = load i32, i32* %i2c_state2, align 8, !tbaa !480
  %neg = xor i32 %2, -1
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %3, i64 28676
  call void @writel.269(i32 %neg, i8* %add.ptr)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_setscl_old(i8* %data, i32 %state) #0 {
entry:
  %0 = bitcast i8* %data to %struct.ivtv.1060*
  %tobool = icmp ne i32 %state, 0
  %i2c_state = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 72
  %1 = load i32, i32* %i2c_state, align 8, !tbaa !480
  %and = and i32 %1, -2
  %or = or i32 %1, 1
  %and.sink = select i1 %tobool, i32 %or, i32 %and
  store i32 %and.sink, i32* %i2c_state, align 8, !tbaa !480
  %i2c_state2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 72
  %2 = load i32, i32* %i2c_state2, align 8, !tbaa !480
  %neg = xor i32 %2, -1
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %3, i64 28672
  call void @writel.269(i32 %neg, i8* %add.ptr)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_getsda_old(i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.ivtv.1060*
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 28684
  %call = call i32 @readl.270(i8* %add.ptr)
  %and = and i32 %call, 1
  ret i32 %and
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_getscl_old(i8* %data) #0 {
entry:
  %0 = bitcast i8* %data to %struct.ivtv.1060*
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 28680
  %call = call i32 @readl.270(i8* %add.ptr)
  %and = and i32 %call, 1
  ret i32 %and
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.270(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !481
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_xfer(%struct.i2c_adapter* %i2c_adap, %struct.i2c_msg* %msgs, i32 %num) #0 {
entry:
  %call = call i8* @i2c_get_adapdata(%struct.i2c_adapter* %i2c_adap)
  %0 = bitcast i8* %call to %struct.v4l2_device*
  %call1 = call %struct.ivtv.1060* @to_ivtv.271(%struct.v4l2_device* %0)
  %i2c_bus_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 73
  call void @mutex_lock_nested(%struct.mutex* %i2c_bus_lock, i32 0)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %retval2.0 = phi i32 [ 0, %entry ], [ %retval2.1, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp eq i32 %retval2.0, 0
  %cmp3 = icmp slt i32 %i.0, %num
  %cmp3. = select i1 %cmp, i1 %cmp3, i1 false
  br i1 %cmp3., label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom
  %flags = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx, i32 0, i32 1
  %1 = load i16, i16* %flags, align 2, !tbaa !482
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom4
  %addr = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx5, i32 0, i32 0
  %2 = load i16, i16* %addr, align 8, !tbaa !484
  %conv6 = trunc i16 %2 to i8
  %idxprom7 = sext i32 %i.0 to i64
  %arrayidx8 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom7
  %buf = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx8, i32 0, i32 3
  %3 = load i8*, i8** %buf, align 8, !tbaa !485
  %idxprom9 = sext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom9
  %len = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx10, i32 0, i32 2
  %4 = load i16, i16* %len, align 4, !tbaa !486
  %conv11 = zext i16 %4 to i32
  %call12 = call i32 @ivtv_read.272(%struct.ivtv.1060* %call1, i8 zeroext %conv6, i8* %3, i32 %conv11)
  br label %for.inc

if.else:                                          ; preds = %for.body
  %add = add nsw i32 %i.0, 1
  %cmp13 = icmp slt i32 %add, %num
  br i1 %cmp13, label %land.rhs15, label %land.end23

land.rhs15:                                       ; preds = %if.else
  %idxprom17 = sext i32 %add to i64
  %arrayidx18 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom17
  %flags19 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx18, i32 0, i32 1
  %5 = load i16, i16* %flags19, align 2, !tbaa !482
  %conv20 = zext i16 %5 to i32
  %cmp21 = icmp eq i32 %conv20, 1
  br label %land.end23

land.end23:                                       ; preds = %land.rhs15, %if.else
  %6 = phi i1 [ false, %if.else ], [ %cmp21, %land.rhs15 ]
  %lnot = xor i1 %6, true
  %lnot.ext = zext i1 %lnot to i32
  %idxprom24 = sext i32 %i.0 to i64
  %arrayidx25 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom24
  %addr26 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx25, i32 0, i32 0
  %7 = load i16, i16* %addr26, align 8, !tbaa !484
  %conv27 = trunc i16 %7 to i8
  %idxprom28 = sext i32 %i.0 to i64
  %arrayidx29 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom28
  %buf30 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx29, i32 0, i32 3
  %8 = load i8*, i8** %buf30, align 8, !tbaa !485
  %idxprom31 = sext i32 %i.0 to i64
  %arrayidx32 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %msgs, i64 %idxprom31
  %len33 = getelementptr inbounds %struct.i2c_msg, %struct.i2c_msg* %arrayidx32, i32 0, i32 2
  %9 = load i16, i16* %len33, align 4, !tbaa !486
  %conv34 = zext i16 %9 to i32
  %call35 = call i32 @ivtv_write.273(%struct.ivtv.1060* %call1, i8 zeroext %conv27, i8* %8, i32 %conv34, i32 %lnot.ext)
  br label %for.inc

for.inc:                                          ; preds = %land.end23, %if.then
  %retval2.1 = phi i32 [ %call12, %if.then ], [ %call35, %land.end23 ]
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %i2c_bus_lock36 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %call1, i32 0, i32 73
  call void @mutex_unlock(%struct.mutex* %i2c_bus_lock36)
  %tobool37 = icmp ne i32 %retval2.0, 0
  %retval2.0.num = select i1 %tobool37, i32 %retval2.0, i32 %num
  ret i32 %retval2.0.num
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_functionality(%struct.i2c_adapter* %adap) #0 {
entry:
  ret i32 251592713
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @i2c_get_adapdata(%struct.i2c_adapter* %dev) #4 {
entry:
  %dev1 = getelementptr inbounds %struct.i2c_adapter, %struct.i2c_adapter* %dev, i32 0, i32 9
  %call = call i8* @dev_get_drvdata.293(%struct.device* %dev1)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ivtv.1060* @to_ivtv.271(%struct.v4l2_device* %v4l2_dev) #4 {
entry:
  %0 = bitcast %struct.v4l2_device* %v4l2_dev to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -168
  %1 = bitcast i8* %add.ptr to %struct.ivtv.1060*
  ret %struct.ivtv.1060* %1
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_read.272(%struct.ivtv.1060* %itv, i8 zeroext %addr, i8* %data, i32 %len) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.end, %entry
  %retry.0 = phi i32 [ 0, %entry ], [ %inc18, %for.end ]
  %ret.0 = phi i32 [ -121, %entry ], [ %ret.2, %for.end ]
  %cmp = icmp ne i32 %ret.0, 0
  %cmp1 = icmp slt i32 %retry.0, 8
  %cmp1. = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %cmp1., label %for.body, label %for.end19

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_start(%struct.ivtv.1060* %itv)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %conv = zext i8 %addr to i32
  %shl = shl i32 %conv, 1
  %or = or i32 %shl, 1
  %conv3 = trunc i32 %or to i8
  %call4 = call i32 @ivtv_sendbyte(%struct.ivtv.1060* %itv, i8 zeroext %conv3)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %ret.1 = phi i32 [ %call4, %if.then ], [ %call, %for.body ]
  br label %for.cond5

for.cond5:                                        ; preds = %for.body12, %if.end
  %ret.2 = phi i32 [ %ret.1, %if.end ], [ %call15, %for.body12 ]
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body12 ]
  %cmp6 = icmp eq i32 %ret.2, 0
  %cmp9 = icmp ult i32 %i.0, %len
  %cmp9. = select i1 %cmp6, i1 %cmp9, i1 false
  br i1 %cmp9., label %for.body12, label %for.end

for.body12:                                       ; preds = %for.cond5
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %sub = sub i32 %len, 1
  %cmp13 = icmp eq i32 %i.0, %sub
  %conv14 = zext i1 %cmp13 to i32
  %call15 = call i32 @ivtv_readbyte(%struct.ivtv.1060* %itv, i8* %arrayidx, i32 %conv14)
  %inc = add i32 %i.0, 1
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  call void @ivtv_stop(%struct.ivtv.1060* %itv)
  %inc18 = add nsw i32 %retry.0, 1
  br label %for.cond

for.end19:                                        ; preds = %for.cond
  %tobool = icmp ne i32 %ret.0, 0
  br i1 %tobool, label %do.body, label %if.end26

do.body:                                          ; preds = %for.end19
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool21 = icmp ne i32 %and, 0
  br i1 %tobool21, label %if.then22, label %if.end26

if.then22:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %conv23 = zext i8 %addr to i32
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28.290, i32 0, i32 0), i8* %arraydecay, i32 %conv23)
  br label %if.end26

if.end26:                                         ; preds = %if.then22, %do.body, %for.end19
  ret i32 %ret.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_write.273(%struct.ivtv.1060* %itv, i8 zeroext %addr, i8* %data, i32 %len, i32 %do_stop) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc19, %entry
  %retry.0 = phi i32 [ 0, %entry ], [ %inc20, %for.inc19 ]
  %ret.0 = phi i32 [ -121, %entry ], [ %ret.2, %for.inc19 ]
  %cmp = icmp ne i32 %ret.0, 0
  %cmp1 = icmp slt i32 %retry.0, 8
  %cmp1. = select i1 %cmp, i1 %cmp1, i1 false
  br i1 %cmp1., label %for.body, label %for.end21

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_start(%struct.ivtv.1060* %itv)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %conv = zext i8 %addr to i32
  %shl = shl i32 %conv, 1
  %conv3 = trunc i32 %shl to i8
  %call4 = call i32 @ivtv_sendbyte(%struct.ivtv.1060* %itv, i8 zeroext %conv3)
  br label %for.cond5

for.cond5:                                        ; preds = %for.body12, %if.then
  %ret.1 = phi i32 [ %call4, %if.then ], [ %call13, %for.body12 ]
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body12 ]
  %cmp6 = icmp eq i32 %ret.1, 0
  %cmp9 = icmp ult i32 %i.0, %len
  %cmp9. = select i1 %cmp6, i1 %cmp9, i1 false
  br i1 %cmp9., label %for.body12, label %if.end

for.body12:                                       ; preds = %for.cond5
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %call13 = call i32 @ivtv_sendbyte(%struct.ivtv.1060* %itv, i8 zeroext %0)
  %inc = add i32 %i.0, 1
  br label %for.cond5

if.end:                                           ; preds = %for.cond5, %for.body
  %ret.2 = phi i32 [ %call, %for.body ], [ %ret.1, %for.cond5 ]
  %cmp14 = icmp ne i32 %ret.2, 0
  %tobool = icmp ne i32 %do_stop, 0
  %or.cond = or i1 %cmp14, %tobool
  br i1 %or.cond, label %if.then16, label %for.inc19

if.then16:                                        ; preds = %if.end
  call void @ivtv_stop(%struct.ivtv.1060* %itv)
  br label %for.inc19

for.inc19:                                        ; preds = %if.then16, %if.end
  %inc20 = add nsw i32 %retry.0, 1
  br label %for.cond

for.end21:                                        ; preds = %for.cond
  %tobool22 = icmp ne i32 %ret.0, 0
  br i1 %tobool22, label %do.body, label %if.end29

do.body:                                          ; preds = %for.end21
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %1
  %tobool24 = icmp ne i32 %and, 0
  br i1 %tobool24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %conv26 = zext i8 %addr to i32
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.46.274, i32 0, i32 0), i8* %arraydecay, i32 %conv26)
  br label %if.end29

if.end29:                                         ; preds = %if.then25, %do.body, %for.end21
  ret i32 %ret.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_start(%struct.ivtv.1060* %itv) #0 {
entry:
  %call = call i32 @ivtv_getsda(%struct.ivtv.1060* %itv)
  %cmp = icmp ne i32 %call, 1
  br i1 %cmp, label %do.body, label %if.end20

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %1, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then3, label %do.end

if.then3:                                         ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.29.287, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then3, %land.lhs.true, %do.body
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  %call5 = call i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 1)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end20, label %do.body8

do.body8:                                         ; preds = %do.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and9 = and i32 512, %2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %cleanup

if.then11:                                        ; preds = %do.body8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.30.288, i32 0, i32 0), i8* %arraydecay14)
  br label %cleanup

if.end20:                                         ; preds = %do.end, %entry
  %call21 = call i32 @ivtv_getscl(%struct.ivtv.1060* %itv)
  %cmp22 = icmp ne i32 %call21, 1
  br i1 %cmp22, label %if.then23, label %if.end39

if.then23:                                        ; preds = %if.end20
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  %call24 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 1)
  %tobool25 = icmp ne i32 %call24, 0
  br i1 %tobool25, label %if.end39, label %do.body27

do.body27:                                        ; preds = %if.then23
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and28 = and i32 512, %3
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.then30, label %cleanup

if.then30:                                        ; preds = %do.body27
  %v4l2_dev31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name32 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev31, i32 0, i32 4
  %arraydecay33 = getelementptr inbounds [36 x i8], [36 x i8]* %name32, i32 0, i32 0
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.31.289, i32 0, i32 0), i8* %arraydecay33)
  br label %cleanup

if.end39:                                         ; preds = %if.then23, %if.end20
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 0)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.then30, %do.body27, %if.then11, %do.body8
  %retval.0 = phi i32 [ 0, %if.end39 ], [ -121, %if.then11 ], [ -121, %do.body8 ], [ -121, %if.then30 ], [ -121, %do.body27 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_sendbyte(%struct.ivtv.1060* %itv, i8 zeroext %byte) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %1, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %conv = zext i8 %byte to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.32.279, i32 0, i32 0), i8* %arraydecay, i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %i.0 = phi i32 [ 0, %do.end ], [ %inc, %for.inc ]
  %byte.addr.0 = phi i8 [ %byte, %do.end ], [ %conv52, %for.inc ]
  %cmp = icmp slt i32 %i.0, 8
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  %call4 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 0)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  br i1 %tobool5, label %if.end18, label %do.body7

do.body7:                                         ; preds = %for.body
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and8 = and i32 512, %2
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %do.body7
  %v4l2_dev11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name12 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev11, i32 0, i32 4
  %arraydecay13 = getelementptr inbounds [36 x i8], [36 x i8]* %name12, i32 0, i32 0
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33.280, i32 0, i32 0), i8* %arraydecay13)
  br label %cleanup

if.end18:                                         ; preds = %for.body
  %conv19 = zext i8 %byte.addr.0 to i32
  %shr = ashr i32 %conv19, 7
  %and20 = and i32 %shr, 1
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 %and20)
  %call21 = call i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 %and20)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end35, label %do.body24

do.body24:                                        ; preds = %if.end18
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and25 = and i32 512, %3
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %cleanup

if.then27:                                        ; preds = %do.body24
  %v4l2_dev28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name29 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev28, i32 0, i32 4
  %arraydecay30 = getelementptr inbounds [36 x i8], [36 x i8]* %name29, i32 0, i32 0
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.34.281, i32 0, i32 0), i8* %arraydecay30)
  br label %cleanup

if.end35:                                         ; preds = %if.end18
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  %call36 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 1)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %for.inc, label %do.body39

do.body39:                                        ; preds = %if.end35
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and40 = and i32 512, %4
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %cleanup

if.then42:                                        ; preds = %do.body39
  %v4l2_dev43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name44 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev43, i32 0, i32 4
  %arraydecay45 = getelementptr inbounds [36 x i8], [36 x i8]* %name44, i32 0, i32 0
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.35.282, i32 0, i32 0), i8* %arraydecay45)
  br label %cleanup

for.inc:                                          ; preds = %if.end35
  %inc = add nsw i32 %i.0, 1
  %conv51 = zext i8 %byte.addr.0 to i32
  %shl = shl i32 %conv51, 1
  %conv52 = trunc i32 %shl to i8
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br i1 %tobool5, label %if.end67, label %do.body56

do.body56:                                        ; preds = %for.end
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and57 = and i32 512, %5
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %cleanup

if.then59:                                        ; preds = %do.body56
  %v4l2_dev60 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name61 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev60, i32 0, i32 4
  %arraydecay62 = getelementptr inbounds [36 x i8], [36 x i8]* %name61, i32 0, i32 0
  %call63 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33.280, i32 0, i32 0), i8* %arraydecay62)
  br label %cleanup

if.end67:                                         ; preds = %for.end
  %call68 = call i32 @ivtv_ack(%struct.ivtv.1060* %itv)
  br label %cleanup

cleanup:                                          ; preds = %if.end67, %if.then59, %do.body56, %if.then42, %do.body39, %if.then27, %do.body24, %if.then10, %do.body7
  %retval.0 = phi i32 [ %call68, %if.end67 ], [ -121, %if.then10 ], [ -121, %do.body7 ], [ -121, %if.then27 ], [ -121, %do.body24 ], [ -121, %if.then42 ], [ -121, %do.body39 ], [ -121, %if.then59 ], [ -121, %do.body56 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_stop(%struct.ivtv.1060* %itv) #0 {
entry:
  %call = call i32 @ivtv_getscl(%struct.ivtv.1060* %itv)
  %cmp = icmp ne i32 %call, 0
  br i1 %cmp, label %do.body, label %if.end20

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %1, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then3, label %do.end

if.then3:                                         ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.42.275, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then3, %land.lhs.true, %do.body
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  %call5 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 0)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end20, label %do.body8

do.body8:                                         ; preds = %do.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and9 = and i32 512, %2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %if.end20

if.then11:                                        ; preds = %do.body8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.43.276, i32 0, i32 0), i8* %arraydecay14)
  br label %if.end20

if.end20:                                         ; preds = %if.then11, %do.body8, %do.end, %entry
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 0)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  %call21 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 1)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end35, label %do.body24

do.body24:                                        ; preds = %if.end20
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and25 = and i32 512, %3
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %cleanup

if.then27:                                        ; preds = %do.body24
  %v4l2_dev28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name29 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev28, i32 0, i32 4
  %arraydecay30 = getelementptr inbounds [36 x i8], [36 x i8]* %name29, i32 0, i32 0
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.44.277, i32 0, i32 0), i8* %arraydecay30)
  br label %cleanup

if.end35:                                         ; preds = %if.end20
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  %call36 = call i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 1)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %cleanup, label %do.body39

do.body39:                                        ; preds = %if.end35
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and40 = and i32 512, %4
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %do.end49

if.then42:                                        ; preds = %do.body39
  %v4l2_dev43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name44 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev43, i32 0, i32 4
  %arraydecay45 = getelementptr inbounds [36 x i8], [36 x i8]* %name44, i32 0, i32 0
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.45.278, i32 0, i32 0), i8* %arraydecay45)
  br label %do.end49

do.end49:                                         ; preds = %if.then42, %do.body39
  br label %for.cond

for.cond:                                         ; preds = %for.body, %do.end49
  %i.0 = phi i32 [ 0, %do.end49 ], [ %inc, %for.body ]
  %cmp50 = icmp slt i32 %i.0, 16
  br i1 %cmp50, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call51 = call i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 1)
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end35, %if.then27, %do.body24
  %retval.0 = phi i32 [ -121, %for.end ], [ -121, %if.then27 ], [ -121, %do.body24 ], [ 0, %if.end35 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_getscl(%struct.ivtv.1060* %itv) #0 {
entry:
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 28680
  %call = call i32 @readl.270(i8* %add.ptr)
  %and = and i32 %call, 1
  ret i32 %and
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 %val) #0 {
entry:
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1000
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_getscl(%struct.ivtv.1060* %itv)
  %cmp1 = icmp eq i32 %call, %val
  br i1 %cmp1, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i32 [ 1, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_scldelay(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %cmp = icmp slt i32 %i.0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_getscl(%struct.ivtv.1060* %itv)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 %val) #0 {
entry:
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 1000
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_getsda(%struct.ivtv.1060* %itv)
  %cmp1 = icmp eq i32 %call, %val
  br i1 %cmp1, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i32 [ 1, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_getsda(%struct.ivtv.1060* %itv) #0 {
entry:
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 28684
  %call = call i32 @readl.270(i8* %add.ptr)
  %and = and i32 %call, 1
  ret i32 %and
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_ack(%struct.ivtv.1060* %itv) #0 {
entry:
  %call = call i32 @ivtv_getscl(%struct.ivtv.1060* %itv)
  %cmp = icmp eq i32 %call, 1
  br i1 %cmp, label %do.body, label %if.end20

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %do.body
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %1, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then3, label %do.end

if.then3:                                         ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.36.283, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then3, %land.lhs.true, %do.body
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  %call5 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 0)
  %tobool6 = icmp ne i32 %call5, 0
  br i1 %tobool6, label %if.end20, label %do.body8

do.body8:                                         ; preds = %do.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and9 = and i32 512, %2
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %cleanup

if.then11:                                        ; preds = %do.body8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.37.284, i32 0, i32 0), i8* %arraydecay14)
  br label %cleanup

if.end20:                                         ; preds = %do.end, %entry
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  %call21 = call i32 @ivtv_waitsda(%struct.ivtv.1060* %itv, i32 0)
  %tobool22 = icmp ne i32 %call21, 0
  br i1 %tobool22, label %if.end35, label %do.body24

do.body24:                                        ; preds = %if.end20
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and25 = and i32 512, %3
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %if.end35

if.then27:                                        ; preds = %do.body24
  %v4l2_dev28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name29 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev28, i32 0, i32 4
  %arraydecay30 = getelementptr inbounds [36 x i8], [36 x i8]* %name29, i32 0, i32 0
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.38.285, i32 0, i32 0), i8* %arraydecay30)
  br label %if.end35

if.end35:                                         ; preds = %if.then27, %do.body24, %if.end20
  %ret.0 = phi i32 [ 0, %if.end20 ], [ -121, %if.then27 ], [ -121, %do.body24 ]
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  %call36 = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 0)
  %tobool37 = icmp ne i32 %call36, 0
  br i1 %tobool37, label %cleanup, label %do.body39

do.body39:                                        ; preds = %if.end35
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and40 = and i32 512, %4
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %cleanup

if.then42:                                        ; preds = %do.body39
  %v4l2_dev43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name44 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev43, i32 0, i32 4
  %arraydecay45 = getelementptr inbounds [36 x i8], [36 x i8]* %name44, i32 0, i32 0
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.39.286, i32 0, i32 0), i8* %arraydecay45)
  br label %cleanup

cleanup:                                          ; preds = %if.then42, %do.body39, %if.end35, %if.then11, %do.body8
  %retval.0 = phi i32 [ -121, %if.then11 ], [ -121, %do.body8 ], [ %ret.0, %if.end35 ], [ -121, %if.then42 ], [ -121, %do.body39 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_readbyte(%struct.ivtv.1060* %itv, i8* %byte, i32 %nack) #0 {
entry:
  store i8 0, i8* %byte, align 1, !tbaa !142
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 1)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  br label %for.cond

for.cond:                                         ; preds = %if.end4, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end4 ]
  %cmp = icmp slt i32 %i.0, 8
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  %call = call i32 @ivtv_waitscl(%struct.ivtv.1060* %itv, i32 1)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end4, label %do.body

do.body:                                          ; preds = %for.body
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool1 = icmp ne i32 %and, 0
  br i1 %tobool1, label %if.then2, label %cleanup

if.then2:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.40.291, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

if.end4:                                          ; preds = %for.body
  %1 = load i8, i8* %byte, align 1, !tbaa !142
  %conv = zext i8 %1 to i32
  %shl = shl i32 %conv, 1
  %call5 = call i32 @ivtv_getsda(%struct.ivtv.1060* %itv)
  %or = or i32 %shl, %call5
  %conv6 = trunc i32 %or to i8
  store i8 %conv6, i8* %byte, align 1, !tbaa !142
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void @ivtv_setsda(%struct.ivtv.1060* %itv, i32 %nack)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 1)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  call void @ivtv_setscl(%struct.ivtv.1060* %itv, i32 0)
  call void @ivtv_scldelay(%struct.ivtv.1060* %itv)
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and8 = and i32 512, %2
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %for.end
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and10 = and i32 %3, 1024
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then12, label %cleanup

if.then12:                                        ; preds = %land.lhs.true
  %v4l2_dev13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name14 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev13, i32 0, i32 4
  %arraydecay15 = getelementptr inbounds [36 x i8], [36 x i8]* %name14, i32 0, i32 0
  %4 = load i8, i8* %byte, align 1, !tbaa !142
  %conv16 = zext i8 %4 to i32
  %call17 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.41.292, i32 0, i32 0), i8* %arraydecay15, i32 %conv16)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %land.lhs.true, %for.end, %if.then2, %do.body
  %retval.0 = phi i32 [ -121, %if.then2 ], [ -121, %do.body ], [ 0, %if.then12 ], [ 0, %land.lhs.true ], [ 0, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_get_drvdata.293(%struct.device* %dev) #4 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  %0 = load i8*, i8** %driver_data, align 8, !tbaa !269
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define void @exit_ivtv_i2c(%struct.ivtv.1060* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 512, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5.296, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %i2c_adap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 69
  call void @i2c_del_adapter(%struct.i2c_adapter* %i2c_adap)
  ret void
}

declare void @i2c_del_adapter(%struct.i2c_adapter*) #2

; Function Attrs: nounwind uwtable
define zeroext i16 @ivtv_service2vbi(i32 %type) #0 {
entry:
  %Pivot10 = icmp slt i32 %type, 4096
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %type, 16384
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %type, 16384
  br i1 %SwitchLeaf6, label %return, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %type, 4096
  br i1 %SwitchLeaf4, label %return, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %type, 1024
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %type, 1024
  br i1 %SwitchLeaf2, label %return, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %type, 1
  br i1 %SwitchLeaf, label %return, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  br label %return

return:                                           ; preds = %sw.default, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  %retval.0 = phi i16 [ 0, %sw.default ], [ 1, %LeafBlock ], [ 4, %LeafBlock3 ], [ 5, %LeafBlock5 ], [ 7, %LeafBlock1 ]
  ret i16 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ivtv_expand_service_set(%struct.v4l2_sliced_vbi_format* %fmt, i32 %is_pal) #0 {
entry:
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 0
  %0 = load i16, i16* %service_set, align 4, !tbaa !135
  %service_set1 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 0
  store i16 0, i16* %service_set1, align 4, !tbaa !135
  br label %for.cond

for.cond:                                         ; preds = %for.inc7, %entry
  %f.0 = phi i32 [ 0, %entry ], [ %inc8, %for.inc7 ]
  %cmp = icmp slt i32 %f.0, 2
  br i1 %cmp, label %for.body, label %for.end9

for.body:                                         ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %for.body4, %for.body
  %l.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body4 ]
  %cmp3 = icmp slt i32 %l.0, 24
  br i1 %cmp3, label %for.body4, label %for.inc7

for.body4:                                        ; preds = %for.cond2
  %call = call zeroext i16 @select_service_from_set(i32 %f.0, i32 %l.0, i16 zeroext %0, i32 %is_pal)
  %service_lines = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 1
  %idxprom = sext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines, i64 0, i64 %idxprom
  %idxprom5 = sext i32 %l.0 to i64
  %arrayidx6 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx, i64 0, i64 %idxprom5
  store i16 %call, i16* %arrayidx6, align 2, !tbaa !151
  %inc = add nsw i32 %l.0, 1
  br label %for.cond2

for.inc7:                                         ; preds = %for.cond2
  %inc8 = add nsw i32 %f.0, 1
  br label %for.cond

for.end9:                                         ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @select_service_from_set(i32 %field, i32 %line, i16 zeroext %set, i32 %is_pal) #0 {
entry:
  %tobool = icmp ne i32 %is_pal, 0
  %0 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 17409, i32 4096
  %conv = trunc i32 %cond to i16
  %conv1 = zext i16 %set to i32
  %conv2 = zext i16 %conv to i32
  %and = and i32 %conv1, %conv2
  %conv3 = trunc i32 %and to i16
  %conv4 = zext i16 %conv3 to i32
  %cmp = icmp eq i32 %conv4, 0
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %call = call i32 @valid_service_line(i32 %field, i32 %line, i32 %is_pal)
  %tobool6 = icmp ne i32 %call, 0
  br i1 %tobool6, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %tobool7 = icmp ne i32 %is_pal, 0
  br i1 %tobool7, label %if.else, label %if.then8

if.then8:                                         ; preds = %if.end
  %cmp9 = icmp eq i32 %line, 21
  br i1 %cmp9, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %if.then8
  %conv11 = zext i16 %conv3 to i32
  %and12 = and i32 %conv11, 4096
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %cleanup, label %if.end42

if.else:                                          ; preds = %if.end
  %cmp16 = icmp eq i32 %line, 16
  %cmp19 = icmp eq i32 %field, 0
  %or.cond = and i1 %cmp16, %cmp19
  br i1 %or.cond, label %land.lhs.true21, label %if.end26

land.lhs.true21:                                  ; preds = %if.else
  %conv22 = zext i16 %conv3 to i32
  %and23 = and i32 %conv22, 1024
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %cleanup, label %if.end26

if.end26:                                         ; preds = %land.lhs.true21, %if.else
  %cmp27 = icmp eq i32 %line, 23
  %cmp30 = icmp eq i32 %field, 0
  %or.cond1 = and i1 %cmp27, %cmp30
  br i1 %or.cond1, label %land.lhs.true32, label %if.end37

land.lhs.true32:                                  ; preds = %if.end26
  %conv33 = zext i16 %conv3 to i32
  %and34 = and i32 %conv33, 16384
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %cleanup, label %if.end37

if.end37:                                         ; preds = %land.lhs.true32, %if.end26
  %cmp38 = icmp eq i32 %line, 23
  br i1 %cmp38, label %cleanup, label %if.end42

if.end42:                                         ; preds = %if.end37, %land.lhs.true, %if.then8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end42
  %i.0 = phi i32 [ 0, %if.end42 ], [ %inc, %for.inc ]
  %cmp43 = icmp slt i32 %i.0, 32
  br i1 %cmp43, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %shl = shl i32 1, %i.0
  %conv45 = zext i16 %conv3 to i32
  %and46 = and i32 %shl, %conv45
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %for.inc

if.then48:                                        ; preds = %for.body
  %shl49 = shl i32 1, %i.0
  %conv50 = trunc i32 %shl49 to i16
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then48, %for.cond, %if.end37, %land.lhs.true32, %land.lhs.true21, %land.lhs.true, %lor.lhs.false, %entry
  %retval.0 = phi i16 [ %conv50, %if.then48 ], [ 0, %lor.lhs.false ], [ 0, %entry ], [ 4096, %land.lhs.true ], [ 1024, %land.lhs.true21 ], [ 16384, %land.lhs.true32 ], [ 0, %if.end37 ], [ 0, %for.cond ]
  ret i16 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @valid_service_line(i32 %field, i32 %line, i32 %is_pal) #0 {
entry:
  %tobool = icmp ne i32 %is_pal, 0
  %cmp = icmp sge i32 %line, 6
  %or.cond = and i1 %tobool, %cmp
  br i1 %or.cond, label %land.lhs.true1, label %lor.rhs

land.lhs.true1:                                   ; preds = %entry
  %cmp2 = icmp ne i32 %line, 23
  %cmp3 = icmp eq i32 %field, 0
  %or.cond1 = or i1 %cmp2, %cmp3
  br i1 %or.cond1, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %land.lhs.true1, %entry
  %tobool4 = icmp eq i32 %is_pal, 0
  %cmp6 = icmp sge i32 %line, 10
  %or.cond2 = and i1 %tobool4, %cmp6
  %cmp7 = icmp slt i32 %line, 22
  %cmp7. = select i1 %or.cond2, i1 %cmp7, i1 false
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %land.lhs.true1
  %0 = phi i1 [ true, %land.lhs.true1 ], [ %cmp7., %lor.rhs ]
  %lor.ext = zext i1 %0 to i32
  ret i32 %lor.ext
}

; Function Attrs: nounwind uwtable
define zeroext i16 @ivtv_get_service_set(%struct.v4l2_sliced_vbi_format* %fmt) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc8, %entry
  %f.0 = phi i32 [ 0, %entry ], [ %inc9, %for.inc8 ]
  %set.0 = phi i16 [ 0, %entry ], [ %set.1, %for.inc8 ]
  %cmp = icmp slt i32 %f.0, 2
  br i1 %cmp, label %for.body, label %for.end10

for.body:                                         ; preds = %for.cond
  br label %for.cond1

for.cond1:                                        ; preds = %for.body3, %for.body
  %l.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %set.1 = phi i16 [ %set.0, %for.body ], [ %conv7, %for.body3 ]
  %cmp2 = icmp slt i32 %l.0, 24
  br i1 %cmp2, label %for.body3, label %for.inc8

for.body3:                                        ; preds = %for.cond1
  %service_lines = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 1
  %idxprom = sext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines, i64 0, i64 %idxprom
  %idxprom4 = sext i32 %l.0 to i64
  %arrayidx5 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx, i64 0, i64 %idxprom4
  %0 = load i16, i16* %arrayidx5, align 2, !tbaa !151
  %conv = zext i16 %0 to i32
  %conv6 = zext i16 %set.1 to i32
  %or = or i32 %conv6, %conv
  %conv7 = trunc i32 %or to i16
  %inc = add nsw i32 %l.0, 1
  br label %for.cond1

for.inc8:                                         ; preds = %for.cond1
  %inc9 = add nsw i32 %f.0, 1
  br label %for.cond

for.end10:                                        ; preds = %for.cond
  ret i16 %set.0
}

; Function Attrs: nounwind uwtable
define void @ivtv_set_osd_alpha(%struct.ivtv* %itv) #0 {
entry:
  %osd_global_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 92
  %0 = load i32, i32* %osd_global_alpha_state, align 8, !tbaa !299
  %osd_global_alpha = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 95
  %1 = load i8, i8* %osd_global_alpha, align 4, !tbaa !300
  %conv = zext i8 %1 to i32
  %osd_local_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 93
  %2 = load i32, i32* %osd_local_alpha_state, align 4, !tbaa !487
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %call = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 75, i32 3, i32 %0, i32 %conv, i32 %lnot.ext)
  %osd_chroma_key_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 94
  %3 = load i32, i32* %osd_chroma_key_state, align 8, !tbaa !488
  %osd_chroma_key = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 96
  %4 = load i32, i32* %osd_chroma_key, align 8, !tbaa !489
  %call1 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 96, i32 2, i32 %3, i32 %4)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_set_speed(%struct.ivtv* %itv, i32 %speed) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %wait = alloca %struct.__wait_queue, align 8
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %cmp = icmp eq i32 %speed, 1
  %cmp1 = icmp eq i32 %speed, -1
  %.cmp1 = select i1 %cmp, i1 true, i1 %cmp1
  %lor.ext = zext i1 %.cmp1 to i32
  %1 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %1) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current.305()
  %2 = bitcast %struct.task_struct* %call to i8*
  store i8* %2, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list2 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list2, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list3 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list3, %struct.list_head** %prev, align 8, !tbaa !186
  %cmp4 = icmp eq i32 %speed, 0
  %speed.addr.0 = select i1 %cmp4, i32 1000, i32 %speed
  %speed5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  %3 = load i32, i32* %speed5, align 8, !tbaa !297
  %cmp6 = icmp ne i32 %speed.addr.0, %3
  %tobool = icmp ne i32 %lor.ext, 0
  %or.cond = or i1 %cmp6, %tobool
  br i1 %or.cond, label %if.end8, label %cleanup139

if.end8:                                          ; preds = %entry
  %cond3 = icmp eq i32 %lor.ext, 0
  br i1 %cond3, label %if.end25, label %land.lhs.true10

land.lhs.true10:                                  ; preds = %if.end8
  %cmp11 = icmp slt i32 %speed.addr.0, 0
  %conv = zext i1 %cmp11 to i32
  %speed12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  %4 = load i32, i32* %speed12, align 8, !tbaa !297
  %cmp13 = icmp slt i32 %4, 0
  %conv14 = zext i1 %cmp13 to i32
  %cmp15 = icmp eq i32 %conv, %conv14
  br i1 %cmp15, label %if.then17, label %if.end20

if.then17:                                        ; preds = %land.lhs.true10
  %call18 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 5, i32 1, i32 0)
  %speed19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  store i32 %speed.addr.0, i32* %speed19, align 8, !tbaa !297
  br label %cleanup139

if.end20:                                         ; preds = %land.lhs.true10
  %tobool21 = icmp ne i32 %lor.ext, 0
  br i1 %tobool21, label %if.then22, label %if.end25

if.then22:                                        ; preds = %if.end20
  %cmp23 = icmp slt i32 %speed.addr.0, 0
  %5 = zext i1 %cmp23 to i64
  %cond = select i1 %cmp23, i32 -1000, i32 1000
  br label %if.end25

if.end25:                                         ; preds = %if.then22, %if.end20, %if.end8
  %speed.addr.1 = phi i32 [ %cond, %if.then22 ], [ %speed.addr.0, %if.end20 ], [ %speed.addr.0, %if.end8 ]
  %cmp26 = icmp sgt i32 %speed.addr.1, 1000
  %cmp29 = icmp slt i32 %speed.addr.1, -1000
  %.cmp29 = select i1 %cmp26, i1 true, i1 %cmp29
  %6 = zext i1 %.cmp29 to i64
  %cond33 = select i1 %.cmp29, i32 -2147483648, i32 0
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  store i32 %cond33, i32* %arrayidx, align 16, !tbaa !120
  %cmp34 = icmp sgt i32 %speed.addr.1, 1000
  %cmp37 = icmp slt i32 %speed.addr.1, -1500
  %7 = select i1 %cmp34, i1 true, i1 %cmp37
  %8 = zext i1 %7 to i64
  %cond41 = select i1 %7, i32 1073741824, i32 0
  %arrayidx42 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %9 = load i32, i32* %arrayidx42, align 16, !tbaa !120
  %or = or i32 %9, %cond41
  store i32 %or, i32* %arrayidx42, align 16, !tbaa !120
  %cmp43 = icmp slt i32 %speed.addr.1, 0
  %conv44 = zext i1 %cmp43 to i32
  %arrayidx45 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  store i32 %conv44, i32* %arrayidx45, align 4, !tbaa !120
  %cmp46 = icmp slt i32 %speed.addr.1, 0
  %10 = zext i1 %cmp46 to i64
  %cond48 = select i1 %cmp46, i32 3, i32 7
  %arrayidx49 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  store i32 %cond48, i32* %arrayidx49, align 8, !tbaa !120
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %11 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 12
  %video_b_frames = getelementptr inbounds %struct.anon.88, %struct.anon.88* %11, i32 0, i32 0
  %12 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %video_b_frames, align 8, !tbaa !490
  %call50 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %12)
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  store i32 %call50, i32* %arrayidx51, align 4, !tbaa !120
  switch i32 %speed.addr.1, label %cond.end [
    i32 1500, label %cond.true
    i32 500, label %cond.true
  ]

cond.true:                                        ; preds = %if.end25, %if.end25
  %speed_mute_audio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 83
  %13 = load i8, i8* %speed_mute_audio, align 4, !tbaa !491
  %conv56 = zext i8 %13 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end25
  %cond57 = phi i32 [ %conv56, %cond.true ], [ 0, %if.end25 ]
  %arrayidx58 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 4
  store i32 %cond57, i32* %arrayidx58, align 16, !tbaa !120
  %arrayidx59 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 5
  store i32 0, i32* %arrayidx59, align 4, !tbaa !120
  %arrayidx60 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 6
  store i32 0, i32* %arrayidx60, align 8, !tbaa !120
  switch i32 %speed.addr.1, label %if.else77 [
    i32 1500, label %if.then66
    i32 -1500, label %if.then66
    i32 2000, label %if.end99.sink.split
    i32 -2000, label %if.end99.sink.split
  ]

if.then66:                                        ; preds = %cond.end, %cond.end
  br label %if.end99.sink.split

if.else77:                                        ; preds = %cond.end
  %cmp78 = icmp sgt i32 %speed.addr.1, -1000
  %cmp81 = icmp slt i32 %speed.addr.1, 0
  %or.cond1 = and i1 %cmp78, %cmp81
  br i1 %or.cond1, label %if.then83, label %if.else86

if.then83:                                        ; preds = %if.else77
  %div = sdiv i32 -1000, %speed.addr.1
  br label %if.end99.sink.split

if.else86:                                        ; preds = %if.else77
  %cmp87 = icmp slt i32 %speed.addr.1, 1000
  %cmp90 = icmp sgt i32 %speed.addr.1, 0
  %or.cond2 = and i1 %cmp87, %cmp90
  br i1 %or.cond2, label %if.then92, label %if.end99

if.then92:                                        ; preds = %if.else86
  %div93 = sdiv i32 1000, %speed.addr.1
  br label %if.end99.sink.split

if.end99.sink.split:                              ; preds = %if.then92, %if.then83, %if.then66, %cond.end, %cond.end
  %.sink4 = phi i32 [ %div93, %if.then92 ], [ %div, %if.then83 ], [ 1, %if.then66 ], [ 2, %cond.end ], [ 2, %cond.end ]
  %arrayidx67 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %14 = load i32, i32* %arrayidx67, align 16, !tbaa !120
  %or76 = or i32 %14, %.sink4
  store i32 %or76, i32* %arrayidx67, align 16, !tbaa !120
  br label %if.end99

if.end99:                                         ; preds = %if.end99.sink.split, %if.else86
  %decoding = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call100 = call i32 @atomic_read.306(%struct.atomic_t* %decoding)
  %cmp101 = icmp sgt i32 %call100, 0
  br i1 %cmp101, label %if.then103, label %if.end130

if.then103:                                       ; preds = %if.end99
  %call104 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 13, i32 1, i32 0)
  %serialize_lock = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %dma_waitq = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 62
  call void @prepare_to_wait(%struct.__wait_queue_head* %dma_waitq, %struct.__wait_queue* %wait, i32 1)
  br label %while.cond

while.cond:                                       ; preds = %if.end111, %if.then103
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call105 = call zeroext i1 @constant_test_bit.307(i64 0, i64* %i_flags)
  br i1 %call105, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call107 = call %struct.task_struct* @get_current.305()
  %call108 = call i32 @signal_pending.308(%struct.task_struct* %call107)
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %while.end, label %if.end111

if.end111:                                        ; preds = %while.body
  call void @schedule()
  br label %while.cond

while.end:                                        ; preds = %while.body, %while.cond
  %got_sig.1 = phi i32 [ %call108, %while.body ], [ 0, %while.cond ]
  %dma_waitq112 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 62
  call void @finish_wait(%struct.__wait_queue_head* %dma_waitq112, %struct.__wait_queue* %wait)
  %serialize_lock113 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock113, i32 0)
  %tobool114 = icmp ne i32 %got_sig.1, 0
  br i1 %tobool114, label %LeafBlock, label %if.end116

if.end116:                                        ; preds = %while.end
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call117 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32, i32, i32*)* @ivtv_api to i32 (%struct.ivtv*, i32, i32, i32*)*)(%struct.ivtv* %itv, i32 3, i32 7, i32* %arraydecay)
  %15 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %15
  %tobool118 = icmp ne i32 %and, 0
  br i1 %tobool118, label %if.then119, label %LeafBlock

if.then119:                                       ; preds = %if.end116
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay120 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx121 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %16 = load i32, i32* %arrayidx121, align 16, !tbaa !120
  %arrayidx122 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %17 = load i32, i32* %arrayidx122, align 4, !tbaa !120
  %arrayidx123 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %18 = load i32, i32* %arrayidx123, align 8, !tbaa !120
  %arrayidx124 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  %19 = load i32, i32* %arrayidx124, align 4, !tbaa !120
  %arrayidx125 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 4
  %20 = load i32, i32* %arrayidx125, align 16, !tbaa !120
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 5
  %21 = load i32, i32* %arrayidx126, align 4, !tbaa !120
  %arrayidx127 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 6
  %22 = load i32, i32* %arrayidx127, align 8, !tbaa !120
  %call128 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.309, i32 0, i32 0), i8* %arraydecay120, i32 %16, i32 %17, i32 %18, i32 %19, i32 %20, i32 %21, i32 %22)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then119, %if.end116, %while.end
  %cleanup.dest.slot.0 = phi i32 [ 1, %while.end ], [ 0, %if.then119 ], [ 0, %if.end116 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end130, label %cleanup139

if.end130:                                        ; preds = %LeafBlock, %if.end99
  %tobool131 = icmp ne i32 %lor.ext, 0
  br i1 %tobool131, label %if.then132, label %if.end137

if.then132:                                       ; preds = %if.end130
  %cmp133 = icmp slt i32 %speed.addr.1, 0
  %23 = zext i1 %cmp133 to i64
  %cond135 = select i1 %cmp133, i32 -1, i32 1
  %call136 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 5, i32 1, i32 0)
  br label %if.end137

if.end137:                                        ; preds = %if.then132, %if.end130
  %speed.addr.2 = phi i32 [ %cond135, %if.then132 ], [ %speed.addr.1, %if.end130 ]
  %speed138 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  store i32 %speed.addr.2, i32* %speed138, align 8, !tbaa !297
  br label %cleanup139

cleanup139:                                       ; preds = %if.end137, %LeafBlock, %if.then17, %entry
  %retval.1 = phi i32 [ 0, %if.then17 ], [ 0, %if.end137 ], [ 0, %entry ], [ -4, %LeafBlock ]
  %24 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %24) #8
  %25 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %25) #8
  ret i32 %retval.1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current.305() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !492
  ret %struct.task_struct* %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.306(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.314(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.307(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @signal_pending.308(%struct.task_struct* %p) #4 {
entry:
  %call = call i32 @test_tsk_thread_flag.310(%struct.task_struct* %p, i32 2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %conv2 = trunc i64 %expval to i32
  ret i32 %conv2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_tsk_thread_flag.310(%struct.task_struct* %tsk, i32 %flag) #4 {
entry:
  %call = call %union.anon.3* @task_thread_info.311(%struct.task_struct* %tsk)
  %call1 = call i32 @test_ti_thread_flag.312(%union.anon.3* %call, i32 %flag)
  ret i32 %call1
}

; Function Attrs: inlinehint nounwind uwtable
define internal %union.anon.3* @task_thread_info.311(%struct.task_struct* %task) #4 {
entry:
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %task, i32 0, i32 0
  ret %union.anon.3* %thread_info
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_ti_thread_flag.312(%union.anon.3* %ti, i32 %flag) #4 {
entry:
  %conv = sext i32 %flag to i64
  %flags = getelementptr inbounds %union.anon.3, %union.anon.3* %ti, i32 0, i32 0
  %call = call zeroext i1 @variable_test_bit.313(i64 %conv, i64* %flags)
  %conv1 = zext i1 %call to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @variable_test_bit.313(i64 %nr, i64* %addr) #1 {
entry:
  %oldbit = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %oldbit) #8
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %oldbit, i64* %addr, i64 %nr) #8, !srcloc !493
  %0 = load i8, i8* %oldbit, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %oldbit) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.314(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !494
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !495
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_s_input(%struct.file* %file, i8* %fh, i32 %inp) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %nof_inputs = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 6
  %2 = load i8, i8* %nof_inputs, align 2, !tbaa !100
  %conv = zext i8 %2 to i32
  %cmp = icmp uge i32 %inp, %conv
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %active_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 33
  %3 = load i32, i32* %active_input, align 4, !tbaa !89
  %cmp3 = icmp eq i32 %inp, %3
  br i1 %cmp3, label %do.body, label %if.end9

do.body:                                          ; preds = %if.end
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then6, label %cleanup

if.then6:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1.318, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call10 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %cmp11 = icmp sgt i32 %call10, 0
  br i1 %cmp11, label %cleanup, label %do.body15

do.body15:                                        ; preds = %if.end9
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 2, %5
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %do.end26

if.then18:                                        ; preds = %do.body15
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %active_input22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 33
  %6 = load i32, i32* %active_input22, align 4, !tbaa !89
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.2.319, i32 0, i32 0), i8* %arraydecay21, i32 %6, i32 %inp)
  br label %do.end26

do.end26:                                         ; preds = %if.then18, %do.body15
  %active_input27 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 33
  store i32 %inp, i32* %active_input27, align 4, !tbaa !89
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 1
  %7 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_inputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %7, i32 0, i32 9
  %idxprom = zext i32 %inp to i64
  %arrayidx = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs, i64 0, i64 %idxprom
  %audio_index = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx, i32 0, i32 1
  %8 = load i8, i8* %audio_index, align 1, !tbaa !319
  %conv28 = zext i8 %8 to i32
  %audio_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 32
  store i32 %conv28, i32* %audio_input, align 8, !tbaa !66
  %card29 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 1
  %9 = load %struct.ivtv_card*, %struct.ivtv_card** %card29, align 8, !tbaa !2
  %video_inputs30 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %9, i32 0, i32 9
  %idxprom31 = zext i32 %inp to i64
  %arrayidx32 = getelementptr inbounds [6 x %struct.ivtv_card_video_input], [6 x %struct.ivtv_card_video_input]* %video_inputs30, i64 0, i64 %idxprom31
  %video_type = getelementptr inbounds %struct.ivtv_card_video_input, %struct.ivtv_card_video_input* %arrayidx32, i32 0, i32 0
  %10 = load i8, i8* %video_type, align 4, !tbaa !96
  %conv33 = zext i8 %10 to i32
  %cmp34 = icmp eq i32 %conv33, 1
  br i1 %cmp34, label %if.then36, label %if.end37

if.then36:                                        ; preds = %do.end26
  %tuner_std = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 10
  %11 = load i64, i64* %tuner_std, align 8, !tbaa !106
  br label %if.end37

if.end37:                                         ; preds = %if.then36, %do.end26
  %std.0 = phi i64 [ %11, %if.then36 ], [ 16777215, %do.end26 ]
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end37
  %i.0 = phi i32 [ 0, %if.end37 ], [ %inc, %for.body ]
  %cmp38 = icmp sle i32 %i.0, 2
  br i1 %cmp38, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %idxprom40 = sext i32 %i.0 to i64
  %arrayidx41 = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom40
  %vdev = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx41, i32 0, i32 0
  %tvnorms = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 22
  store i64 %std.0, i64* %tvnorms, align 8, !tbaa !496
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_mute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  call void @ivtv_video_set_io(%struct.ivtv* %1)
  call void @ivtv_audio_set_io(%struct.ivtv* %1)
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_unmute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.end9, %if.then6, %do.body, %entry
  %retval.0 = phi i32 [ 0, %for.end ], [ -22, %entry ], [ 0, %if.then6 ], [ 0, %do.body ], [ -16, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %fh) #4 {
entry:
  %0 = bitcast %struct.v4l2_fh* %fh to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.ivtv_open_id.4300*
  ret %struct.ivtv_open_id.4300* %1
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_s_frequency(%struct.file* %file, i8* %fh, %struct.v4l2_frequency* %vf) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %vdev = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 0
  %vfl_dir = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 14
  %4 = load i32, i32* %vfl_dir, align 4, !tbaa !497
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %tuner = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 0
  %5 = load i32, i32* %tuner, align 4, !tbaa !162
  %cmp = icmp ne i32 %5, 0
  br i1 %cmp, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_mute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %6
  %tobool5 = icmp ne i32 %and, 0
  br i1 %tobool5, label %if.then6, label %do.body10

if.then6:                                         ; preds = %if.end4
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %frequency = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 2
  %7 = load i32, i32* %frequency, align 4, !tbaa !165
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.322, i32 0, i32 0), i8* %arraydecay, i32 %7)
  br label %do.body10

do.body10:                                        ; preds = %if.then6, %if.end4
  %v4l2_dev11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev11, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body10
  %list27.sink = phi %struct.list_head* [ %list27, %for.inc ], [ %subdevs, %do.body10 ]
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27.sink, i32 0, i32 0
  %8 = load %struct.list_head*, %struct.list_head** %next28, align 8, !tbaa !86
  %9 = bitcast %struct.list_head* %8 to i8*
  %add.ptr30 = getelementptr inbounds i8, i8* %9, i64 -128
  %10 = bitcast i8* %add.ptr30 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 1
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 2
  %cmp14 = icmp ne %struct.list_head* %list, %subdevs13
  br i1 %cmp14, label %for.body, label %do.end34

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner15 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 1
  %12 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner15, align 8, !tbaa !255
  %tobool16 = icmp ne %struct.v4l2_subdev_tuner_ops* %12, null
  br i1 %tobool16, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops17 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %13 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops17, align 8, !tbaa !79
  %tuner18 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %13, i32 0, i32 1
  %14 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner18, align 8, !tbaa !255
  %s_frequency = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %14, i32 0, i32 1
  %15 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)** %s_frequency, align 8, !tbaa !498
  %tobool19 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)* %15, null
  br i1 %tobool19, label %if.then20, label %for.inc

if.then20:                                        ; preds = %land.lhs.true
  %ops21 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %16 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops21, align 8, !tbaa !79
  %tuner22 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %16, i32 0, i32 1
  %17 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner22, align 8, !tbaa !255
  %s_frequency23 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %17, i32 0, i32 1
  %18 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)** %s_frequency23, align 8, !tbaa !498
  %call24 = call i32 %18(%struct.v4l2_subdev* %10, %struct.v4l2_frequency* %vf)
  br label %for.inc

for.inc:                                          ; preds = %if.then20, %land.lhs.true, %for.body
  %list27 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 1
  br label %for.cond

do.end34:                                         ; preds = %for.cond
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_unmute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  br label %cleanup

cleanup:                                          ; preds = %do.end34, %if.end, %entry
  %retval.0 = phi i32 [ 0, %do.end34 ], [ -25, %entry ], [ -22, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ivtv_s_std_enc(%struct.ivtv* %itv, i64 %std) #0 {
entry:
  %std1 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 35
  store i64 %std, i64* %std1, align 8, !tbaa !166
  %and = and i64 %std, 63744
  %tobool = icmp ne i64 %and, 0
  %0 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %conv = trunc i32 %cond to i8
  %is_60hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 28
  store i8 %conv, i8* %is_60hz, align 1, !tbaa !134
  %is_60hz2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 28
  %1 = load i8, i8* %is_60hz2, align 1, !tbaa !134
  %tobool3 = icmp ne i8 %1, 0
  %lnot = xor i1 %tobool3, true
  %lnot.ext = zext i1 %lnot to i32
  %conv4 = trunc i32 %lnot.ext to i8
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  store i8 %conv4, i8* %is_50hz, align 8, !tbaa !137
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %is_50hz5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  %2 = load i8, i8* %is_50hz5, align 8, !tbaa !137
  %conv6 = zext i8 %2 to i32
  call void @cx2341x_handler_set_50hz(%struct.cx2341x_handler* %cxhdl, i32 %conv6)
  %cxhdl7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %width = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl7, i32 0, i32 2
  store i16 720, i16* %width, align 8, !tbaa !426
  %is_50hz8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  %3 = load i8, i8* %is_50hz8, align 8, !tbaa !137
  %conv9 = zext i8 %3 to i32
  %tobool10 = icmp ne i32 %conv9, 0
  %4 = zext i1 %tobool10 to i64
  %cond11 = select i1 %tobool10, i32 576, i32 480
  %conv12 = trunc i32 %cond11 to i16
  %cxhdl13 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 20
  %height = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl13, i32 0, i32 3
  store i16 %conv12, i16* %height, align 2, !tbaa !427
  %is_50hz14 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  %5 = load i8, i8* %is_50hz14, align 8, !tbaa !137
  %conv15 = zext i8 %5 to i32
  %tobool16 = icmp ne i32 %conv15, 0
  %6 = zext i1 %tobool16 to i64
  %cond17 = select i1 %tobool16, i32 18, i32 12
  %vbi = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 89
  %count = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 7
  store i32 %cond17, i32* %count, align 8, !tbaa !499
  %is_50hz18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  %7 = load i8, i8* %is_50hz18, align 8, !tbaa !137
  %conv19 = zext i8 %7 to i32
  %tobool20 = icmp ne i32 %conv19, 0
  %8 = zext i1 %tobool20 to i64
  %cond21 = select i1 %tobool20, i32 6, i32 10
  %vbi22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 89
  %start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi22, i32 0, i32 6
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %start, i64 0, i64 0
  store i32 %cond21, i32* %arrayidx, align 8, !tbaa !120
  %is_50hz23 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 27
  %9 = load i8, i8* %is_50hz23, align 8, !tbaa !137
  %conv24 = zext i8 %9 to i32
  %tobool25 = icmp ne i32 %conv24, 0
  %10 = zext i1 %tobool25 to i64
  %cond26 = select i1 %tobool25, i32 318, i32 273
  %vbi27 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 89
  %start28 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi27, i32 0, i32 6
  %arrayidx29 = getelementptr inbounds [2 x i32], [2 x i32]* %start28, i64 0, i64 1
  store i32 %cond26, i32* %arrayidx29, align 4, !tbaa !120
  %hw_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 9
  %11 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %and30 = and i32 %11, 1
  %tobool31 = icmp ne i32 %and30, 0
  br i1 %tobool31, label %if.then, label %do.body37

if.then:                                          ; preds = %entry
  %is_60hz32 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 28
  %12 = load i8, i8* %is_60hz32, align 1, !tbaa !134
  %conv33 = zext i8 %12 to i32
  %tobool34 = icmp ne i32 %conv33, 0
  %13 = zext i1 %tobool34 to i64
  %cond35 = select i1 %tobool34, i32 272, i32 284
  %vbi36 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 89
  %sliced_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi36, i32 0, i32 3
  store i32 %cond35, i32* %sliced_decoder_line_size, align 8, !tbaa !327
  br label %do.body37

do.body37:                                        ; preds = %if.then, %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body37
  %list52.sink = phi %struct.list_head* [ %list52, %for.inc ], [ %subdevs, %do.body37 ]
  %next53 = getelementptr inbounds %struct.list_head, %struct.list_head* %list52.sink, i32 0, i32 0
  %14 = load %struct.list_head*, %struct.list_head** %next53, align 8, !tbaa !86
  %15 = bitcast %struct.list_head* %14 to i8*
  %add.ptr55 = getelementptr inbounds i8, i8* %15, i64 -128
  %16 = bitcast i8* %add.ptr55 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %16, i32 0, i32 1
  %v4l2_dev38 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs39 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev38, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs39
  br i1 %cmp, label %for.body, label %do.end57

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %16, i32 0, i32 6
  %17 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %17, i32 0, i32 3
  %18 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool41 = icmp ne %struct.v4l2_subdev_video_ops* %18, null
  br i1 %tobool41, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops42 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %16, i32 0, i32 6
  %19 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops42, align 8, !tbaa !79
  %video43 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %19, i32 0, i32 3
  %20 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video43, align 8, !tbaa !91
  %s_std = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %20, i32 0, i32 3
  %21 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std, align 8, !tbaa !409
  %tobool44 = icmp ne i32 (%struct.v4l2_subdev*, i64)* %21, null
  br i1 %tobool44, label %if.then45, label %for.inc

if.then45:                                        ; preds = %land.lhs.true
  %ops46 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %16, i32 0, i32 6
  %22 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops46, align 8, !tbaa !79
  %video47 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %22, i32 0, i32 3
  %23 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video47, align 8, !tbaa !91
  %s_std48 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %23, i32 0, i32 3
  %24 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std48, align 8, !tbaa !409
  %std49 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 35
  %25 = load i64, i64* %std49, align 8, !tbaa !166
  %call = call i32 %24(%struct.v4l2_subdev* %16, i64 %25)
  br label %for.inc

for.inc:                                          ; preds = %if.then45, %land.lhs.true, %for.body
  %list52 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %16, i32 0, i32 1
  br label %for.cond

do.end57:                                         ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_s_std_dec(%struct.ivtv* %itv, i64 %std) #0 {
entry:
  %wait = alloca %struct.__wait_queue, align 8
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 90
  %0 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current.305()
  %1 = bitcast %struct.task_struct* %call to i8*
  store i8* %1, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list1 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list1, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list2 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list2, %struct.list_head** %prev, align 8, !tbaa !186
  %std_out = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 36
  store i64 %std, i64* %std_out, align 8, !tbaa !167
  %and = and i64 %std, 63744
  %tobool = icmp ne i64 %and, 0
  %2 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 1, i32 0
  %conv = trunc i32 %cond to i8
  %is_out_60hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 30
  store i8 %conv, i8* %is_out_60hz, align 1, !tbaa !243
  %is_out_60hz3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 30
  %3 = load i8, i8* %is_out_60hz3, align 1, !tbaa !243
  %tobool4 = icmp ne i8 %3, 0
  %lnot = xor i1 %tobool4, true
  %lnot.ext = zext i1 %lnot to i32
  %conv5 = trunc i32 %lnot.ext to i8
  %is_out_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 29
  store i8 %conv5, i8* %is_out_50hz, align 2, !tbaa !244
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list21.sink = phi %struct.list_head* [ %list21, %for.inc ], [ %subdevs, %entry ]
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %list21.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next22, align 8, !tbaa !86
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr24 = getelementptr inbounds i8, i8* %5, i64 -128
  %6 = bitcast i8* %add.ptr24 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  %v4l2_dev8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %subdevs9 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev8, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs9
  br i1 %cmp, label %for.body, label %do.end26

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 3
  %8 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool11 = icmp ne %struct.v4l2_subdev_video_ops* %8, null
  br i1 %tobool11, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops12 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops12, align 8, !tbaa !79
  %video13 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 3
  %10 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video13, align 8, !tbaa !91
  %s_std_output = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %10, i32 0, i32 4
  %11 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std_output, align 8, !tbaa !263
  %tobool14 = icmp ne i32 (%struct.v4l2_subdev*, i64)* %11, null
  br i1 %tobool14, label %if.then, label %for.inc

if.then:                                          ; preds = %land.lhs.true
  %ops15 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops15, align 8, !tbaa !79
  %video16 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 3
  %13 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video16, align 8, !tbaa !91
  %s_std_output17 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %13, i32 0, i32 4
  %14 = load i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)** %s_std_output17, align 8, !tbaa !263
  %std_out18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 36
  %15 = load i64, i64* %std_out18, align 8, !tbaa !167
  %call19 = call i32 %14(%struct.v4l2_subdev* %6, i64 %15)
  br label %for.inc

for.inc:                                          ; preds = %if.then, %land.lhs.true, %for.body
  %list21 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  br label %for.cond

do.end26:                                         ; preds = %for.cond
  %serialize_lock = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  br label %for.cond27

for.cond27:                                       ; preds = %if.end36, %do.end26
  %f.0 = phi i32 [ 0, %do.end26 ], [ %inc, %if.end36 ]
  %cmp28 = icmp slt i32 %f.0, 4
  br i1 %cmp28, label %for.body30, label %for.end40

for.body30:                                       ; preds = %for.cond27
  %vsync_waitq = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 65
  call void @prepare_to_wait(%struct.__wait_queue_head* %vsync_waitq, %struct.__wait_queue* %wait, i32 2)
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr31 = getelementptr i8, i8* %16, i64 10432
  %call32 = call i32 @readl.327(i8* %add.ptr31)
  %shr = lshr i32 %call32, 16
  %cmp33 = icmp ult i32 %shr, 100
  br i1 %cmp33, label %for.end40, label %if.end36

if.end36:                                         ; preds = %for.body30
  %call37 = call i64 @msecs_to_jiffies.328(i32 25)
  %call38 = call i64 @schedule_timeout(i64 %call37)
  %inc = add nsw i32 %f.0, 1
  br label %for.cond27

for.end40:                                        ; preds = %for.body30, %for.cond27
  %vsync_waitq41 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 65
  call void @finish_wait(%struct.__wait_queue_head* %vsync_waitq41, %struct.__wait_queue* %wait)
  %serialize_lock42 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock42, i32 0)
  %cmp43 = icmp eq i32 %f.0, 4
  br i1 %cmp43, label %if.then45, label %if.end48

if.then45:                                        ; preds = %for.end40
  %v4l2_dev46 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev46, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4.329, i32 0, i32 0), i8* %arraydecay)
  br label %if.end48

if.end48:                                         ; preds = %if.then45, %for.end40
  %is_out_50hz49 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 29
  %17 = load i8, i8* %is_out_50hz49, align 2, !tbaa !244
  %conv50 = zext i8 %17 to i32
  %call51 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 16, i32 1, i32 %conv50)
  %main_rect = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect, i32 0, i32 0
  store i32 0, i32* %left, align 4, !tbaa !500
  %main_rect52 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect52, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !501
  %main_rect53 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect53, i32 0, i32 2
  store i32 720, i32* %width, align 4, !tbaa !502
  %is_out_50hz54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 29
  %18 = load i8, i8* %is_out_50hz54, align 2, !tbaa !244
  %conv55 = zext i8 %18 to i32
  %tobool56 = icmp ne i32 %conv55, 0
  %19 = zext i1 %tobool56 to i64
  %cond57 = select i1 %tobool56, i32 576, i32 480
  %main_rect58 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect58, i32 0, i32 3
  store i32 %cond57, i32* %height, align 4, !tbaa !503
  %main_rect59 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %height60 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect59, i32 0, i32 3
  %20 = load i32, i32* %height60, align 4, !tbaa !503
  %call61 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 86, i32 4, i32 720, i32 %20, i32 0, i32 0)
  %main_rect62 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 66
  %main_rect63 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 98
  %21 = bitcast %struct.v4l2_rect* %main_rect62 to i8*
  %22 = bitcast %struct.v4l2_rect* %main_rect63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 4, i1 false), !tbaa.struct !504
  %osd_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 99
  %23 = load %struct.osd_info*, %struct.osd_info** %osd_info, align 8, !tbaa !505
  %tobool64 = icmp ne %struct.osd_info* %23, null
  br i1 %tobool64, label %if.end70, label %if.then65

if.then65:                                        ; preds = %if.end48
  %osd_full_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 47
  store i32 720, i32* %osd_full_w, align 4, !tbaa !506
  %is_out_50hz66 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 29
  %24 = load i8, i8* %is_out_50hz66, align 2, !tbaa !244
  %conv67 = zext i8 %24 to i32
  %tobool68 = icmp ne i32 %conv67, 0
  %25 = zext i1 %tobool68 to i64
  %cond69 = select i1 %tobool68, i32 576, i32 480
  %osd_full_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 48
  store i32 %cond69, i32* %osd_full_h, align 8, !tbaa !507
  br label %if.end70

if.end70:                                         ; preds = %if.then65, %if.end48
  %26 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %26) #8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.327(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !508
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.328(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define void @ivtv_set_funcs(%struct.video_device* %vdev) #0 {
entry:
  %ioctl_ops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 24
  store %struct.v4l2_ioctl_ops* @ivtv_ioctl_ops, %struct.v4l2_ioctl_ops** %ioctl_ops, align 8, !tbaa !509
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_querycap(%struct.file* %file, i8* %fh, %struct.v4l2_capability* %vcap) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %2 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %driver = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %driver, i32 0, i32 0
  %call2 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5.398, i32 0, i32 0), i64 16)
  %card = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 1
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %card, i32 0, i32 0
  %card_name = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 2
  %4 = load i8*, i8** %card_name, align 8, !tbaa !267
  %call4 = call i64 @strlcpy(i8* %arraydecay3, i8* %4, i64 32)
  %bus_info = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 2
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i32 0, i32 0
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 0
  %5 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %call6 = call i8* @pci_name(%struct.pci_dev* %5)
  %call7 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay5, i64 32, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6.399, i32 0, i32 0), i8* %call6)
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %6 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %or = or i32 %6, -2147483648
  %capabilities = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 4
  store i32 %or, i32* %capabilities, align 4, !tbaa !510
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %7 = load i32, i32* %caps, align 4, !tbaa !512
  %device_caps = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 5
  store i32 %7, i32* %device_caps, align 4, !tbaa !513
  %caps8 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %8 = load i32, i32* %caps8, align 4, !tbaa !512
  %and = and i32 %8, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 91
  %9 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool9 = icmp ne i64 %9, 0
  br i1 %tobool9, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %capabilities10 = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 4
  %10 = load i32, i32* %capabilities10, align 4, !tbaa !510
  %and11 = and i32 %10, -513
  store i32 %and11, i32* %capabilities10, align 4, !tbaa !510
  %device_caps12 = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %vcap, i32 0, i32 5
  %11 = load i32, i32* %device_caps12, align 4, !tbaa !513
  %and13 = and i32 %11, -513
  store i32 %and13, i32* %device_caps12, align 4, !tbaa !513
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enum_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_fmtdesc* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %index = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  %4 = load i32, i32* %index, align 4, !tbaa !515
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %type3 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %5 = load i32, i32* %type3, align 8, !tbaa !348
  %cmp = icmp eq i32 %5, 0
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %6 = bitcast %struct.v4l2_fmtdesc* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast (%struct.v4l2_fmtdesc* @ivtv_enum_fmt_vid_cap.mpeg to i8*), i64 64, i32 4, i1 false), !tbaa.struct !517
  br label %cleanup

if.else:                                          ; preds = %if.end
  %type5 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %7 = load i32, i32* %type5, align 8, !tbaa !348
  %cmp6 = icmp eq i32 %7, 1
  br i1 %cmp6, label %if.then7, label %cleanup

if.then7:                                         ; preds = %if.else
  %8 = bitcast %struct.v4l2_fmtdesc* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast (%struct.v4l2_fmtdesc* @ivtv_enum_fmt_vid_cap.hm12 to i8*), i64 64, i32 4, i1 false), !tbaa.struct !517
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %if.else, %if.then4, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ -22, %if.else ], [ 0, %if.then7 ], [ 0, %if.then4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enum_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_fmtdesc* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %index = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  %4 = load i32, i32* %index, align 4, !tbaa !515
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %type3 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %5 = load i32, i32* %type3, align 8, !tbaa !348
  %cmp = icmp eq i32 %5, 5
  br i1 %cmp, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %6 = bitcast %struct.v4l2_fmtdesc* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* bitcast (%struct.v4l2_fmtdesc* @ivtv_enum_fmt_vid_out.mpeg to i8*), i64 64, i32 4, i1 false), !tbaa.struct !517
  br label %cleanup

if.else:                                          ; preds = %if.end
  %type5 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %7 = load i32, i32* %type5, align 8, !tbaa !348
  %cmp6 = icmp eq i32 %7, 8
  br i1 %cmp6, label %if.then7, label %cleanup

if.then7:                                         ; preds = %if.else
  %8 = bitcast %struct.v4l2_fmtdesc* %fmt to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %8, i8* bitcast (%struct.v4l2_fmtdesc* @ivtv_enum_fmt_vid_out.hm12 to i8*), i64 64, i32 4, i1 false), !tbaa.struct !517
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %if.else, %if.then4, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ -22, %if.else ], [ 0, %if.then7 ], [ 0, %if.then4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt2 to %struct.v4l2_pix_format*
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %width = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 2
  %2 = load i16, i16* %width, align 8, !tbaa !426
  %conv = zext i16 %2 to i32
  %width3 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  store i32 %conv, i32* %width3, align 4, !tbaa !518
  %cxhdl4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %height = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl4, i32 0, i32 3
  %3 = load i16, i16* %height, align 2, !tbaa !427
  %conv5 = zext i16 %3 to i32
  %height6 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 1
  store i32 %conv5, i32* %height6, align 4, !tbaa !520
  %colorspace = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 6
  store i32 1, i32* %colorspace, align 4, !tbaa !521
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 3
  store i32 4, i32* %field, align 4, !tbaa !522
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %4 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp eq i32 %4, 1
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  store i32 842091848, i32* %pixelformat, align 4, !tbaa !523
  %height8 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 1
  %5 = load i32, i32* %height8, align 4, !tbaa !520
  %mul = mul i32 %5, 720
  %mul9 = mul i32 %mul, 3
  %div = udiv i32 %mul9, 2
  br label %if.end

if.else:                                          ; preds = %entry
  store i32 1195724877, i32* %pixelformat, align 4, !tbaa !523
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %.sink1 = phi i32 [ 131072, %if.else ], [ %div, %if.then ]
  %.sink = phi i32 [ 0, %if.else ], [ 720, %if.then ]
  %sizeimage11 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 5
  store i32 %.sink1, i32* %sizeimage11, align 4, !tbaa !524
  %bytesperline12 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 4
  store i32 %.sink, i32* %bytesperline12, align 4, !tbaa !525
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt2 to %struct.v4l2_pix_format*
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %2 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %2, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %main_rect = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 98
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect, i32 0, i32 2
  %3 = load i32, i32* %width, align 4, !tbaa !502
  %width3 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  store i32 %3, i32* %width3, align 4, !tbaa !518
  %main_rect4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 98
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %main_rect4, i32 0, i32 3
  %4 = load i32, i32* %height, align 4, !tbaa !503
  %height5 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 1
  store i32 %4, i32* %height5, align 4, !tbaa !520
  %colorspace = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 6
  store i32 1, i32* %colorspace, align 4, !tbaa !521
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 3
  store i32 4, i32* %field, align 4, !tbaa !522
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %5 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp eq i32 %5, 8
  br i1 %cmp, label %if.then6, label %if.else

if.then6:                                         ; preds = %if.end
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %lace_mode = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 50
  %6 = load i32, i32* %lace_mode, align 8, !tbaa !301
  %and7 = and i32 %6, 3
  %Pivot = icmp slt i32 %and7, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %if.then6
  %SwitchLeaf2 = icmp eq i32 %and7, 1
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.default

LeafBlock:                                        ; preds = %if.then6
  %SwitchLeaf = icmp eq i32 %and7, 0
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %yuv_info8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %lace_mode9 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info8, i32 0, i32 50
  %7 = load i32, i32* %lace_mode9, align 8, !tbaa !301
  %and10 = and i32 %7, 4
  %tobool11 = icmp ne i32 %and10, 0
  %8 = zext i1 %tobool11 to i64
  %cond = select i1 %tobool11, i32 9, i32 8
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb, %LeafBlock1
  %.sink = phi i32 [ 0, %sw.default ], [ %cond, %sw.bb ], [ 1, %LeafBlock1 ]
  %field15 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 3
  store i32 %.sink, i32* %field15, align 4, !tbaa !522
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  store i32 842091848, i32* %pixelformat, align 4, !tbaa !523
  %bytesperline = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 4
  store i32 720, i32* %bytesperline, align 4, !tbaa !525
  %yuv_info16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %v4l2_src_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info16, i32 0, i32 67
  %9 = load i32, i32* %v4l2_src_w, align 8, !tbaa !247
  %width17 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  store i32 %9, i32* %width17, align 4, !tbaa !518
  %yuv_info18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info18, i32 0, i32 68
  %10 = load i32, i32* %v4l2_src_h, align 4, !tbaa !248
  %height19 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 1
  store i32 %10, i32* %height19, align 4, !tbaa !520
  %height20 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 1
  %11 = load i32, i32* %height20, align 4, !tbaa !520
  %add = add i32 %11, 31
  %and21 = and i32 %add, -32
  %mul = mul i32 1080, %and21
  %sizeimage = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 5
  store i32 %mul, i32* %sizeimage, align 4, !tbaa !524
  br label %cleanup

if.else:                                          ; preds = %if.end
  %pixelformat22 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  store i32 1195724877, i32* %pixelformat22, align 4, !tbaa !523
  %sizeimage23 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 5
  store i32 131072, i32* %sizeimage23, align 4, !tbaa !524
  %bytesperline24 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 4
  store i32 0, i32* %bytesperline24, align 4, !tbaa !525
  br label %cleanup

cleanup:                                          ; preds = %if.else, %sw.epilog, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.else ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_vid_out_overlay(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %fmt3 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win = bitcast %union.anon.62* %fmt3 to %struct.v4l2_window*
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %caps, align 4, !tbaa !512
  %and = and i32 %4, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %5 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool4 = icmp ne i64 %5, 0
  br i1 %tobool4, label %if.end6, label %cleanup

if.end6:                                          ; preds = %if.end
  %osd_chroma_key = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 96
  %6 = load i32, i32* %osd_chroma_key, align 8, !tbaa !489
  %chromakey = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 2
  store i32 %6, i32* %chromakey, align 4, !tbaa !526
  %osd_global_alpha = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 95
  %7 = load i8, i8* %osd_global_alpha, align 4, !tbaa !300
  %global_alpha = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 6
  store i8 %7, i8* %global_alpha, align 8, !tbaa !528
  %field = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 1
  store i32 4, i32* %field, align 8, !tbaa !529
  %clips = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 3
  store %struct.v4l2_clip* null, %struct.v4l2_clip** %clips, align 8, !tbaa !530
  %clipcount = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 4
  store i32 0, i32* %clipcount, align 8, !tbaa !531
  %bitmap = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 5
  store i8* null, i8** %bitmap, align 8, !tbaa !532
  %w = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 0
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %w, i32 0, i32 0
  store i32 0, i32* %left, align 8, !tbaa !533
  %w7 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 0
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %w7, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !534
  %osd_rect = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 97
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %osd_rect, i32 0, i32 2
  %8 = load i32, i32* %width, align 4, !tbaa !535
  %w8 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 0
  %width9 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %w8, i32 0, i32 2
  store i32 %8, i32* %width9, align 8, !tbaa !536
  %osd_rect10 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 97
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %osd_rect10, i32 0, i32 3
  %9 = load i32, i32* %height, align 4, !tbaa !537
  %w11 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 0
  %height12 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %w11, i32 0, i32 3
  store i32 %9, i32* %height12, align 4, !tbaa !538
  br label %cleanup

cleanup:                                          ; preds = %if.end6, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end6 ], [ -22, %entry ], [ -22, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %vbi = bitcast %union.anon.62* %fmt2 to %struct.v4l2_vbi_format*
  %sampling_rate = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 0
  store i32 27000000, i32* %sampling_rate, align 4, !tbaa !539
  %offset = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 1
  store i32 248, i32* %offset, align 4, !tbaa !541
  %vbi3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %raw_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi3, i32 0, i32 0
  %2 = load i32, i32* %raw_decoder_line_size, align 8, !tbaa !324
  %sub = sub i32 %2, 4
  %samples_per_line = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 2
  store i32 %sub, i32* %samples_per_line, align 4, !tbaa !542
  %sample_format = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 3
  store i32 1497715271, i32* %sample_format, align 4, !tbaa !543
  %vbi4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi4, i32 0, i32 6
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %start, i64 0, i64 0
  %3 = load i32, i32* %arrayidx, align 8, !tbaa !120
  %start5 = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 4
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %start5, i64 0, i64 0
  store i32 %3, i32* %arrayidx6, align 4, !tbaa !120
  %vbi7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %start8 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi7, i32 0, i32 6
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %start8, i64 0, i64 1
  %4 = load i32, i32* %arrayidx9, align 4, !tbaa !120
  %start10 = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 4
  %arrayidx11 = getelementptr inbounds [2 x i32], [2 x i32]* %start10, i64 0, i64 1
  store i32 %4, i32* %arrayidx11, align 4, !tbaa !120
  %vbi12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %count = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi12, i32 0, i32 7
  %5 = load i32, i32* %count, align 8, !tbaa !499
  %count13 = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 5
  %arrayidx14 = getelementptr inbounds [2 x i32], [2 x i32]* %count13, i64 0, i64 1
  store i32 %5, i32* %arrayidx14, align 4, !tbaa !120
  %count15 = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 5
  %arrayidx16 = getelementptr inbounds [2 x i32], [2 x i32]* %count15, i64 0, i64 0
  store i32 %5, i32* %arrayidx16, align 4, !tbaa !120
  %flags = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 6
  store i32 0, i32* %flags, align 4, !tbaa !544
  %reserved = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 7
  %arrayidx17 = getelementptr inbounds [2 x i32], [2 x i32]* %reserved, i64 0, i64 0
  store i32 0, i32* %arrayidx17, align 4, !tbaa !120
  %reserved18 = getelementptr inbounds %struct.v4l2_vbi_format, %struct.v4l2_vbi_format* %vbi, i32 0, i32 7
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %reserved18, i64 0, i64 1
  store i32 0, i32* %arrayidx19, align 4, !tbaa !120
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %fmt1 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt1 to %struct.v4l2_sliced_vbi_format*
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv2 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv2, align 8, !tbaa !154
  %reserved = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %reserved, i64 0, i64 0
  store i32 0, i32* %arrayidx, align 4, !tbaa !120
  %reserved3 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %reserved3, i64 0, i64 1
  store i32 0, i32* %arrayidx4, align 4, !tbaa !120
  %io_size = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 2
  store i32 2304, i32* %io_size, align 4, !tbaa !545
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %2 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %3 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %3 to i32
  %tobool = icmp ne i32 %conv, 0
  %4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 17409, i32 4096
  %conv5 = trunc i32 %cond to i16
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 0
  store i16 %conv5, i16* %service_set, align 4, !tbaa !135
  %is_50hz6 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %5 = load i8, i8* %is_50hz6, align 8, !tbaa !137
  %conv7 = zext i8 %5 to i32
  call void @ivtv_expand_service_set(%struct.v4l2_sliced_vbi_format* %sliced, i32 %conv7)
  br label %cleanup

if.end:                                           ; preds = %entry
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool10 = icmp ne %struct.v4l2_subdev* %6, null
  br i1 %tobool10, label %cond.false, label %cleanup

cond.false:                                       ; preds = %if.end
  %sd_video11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %7 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video11, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %8 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %8, i32 0, i32 4
  %9 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi, align 8, !tbaa !546
  %tobool12 = icmp ne %struct.v4l2_subdev_vbi_ops* %9, null
  br i1 %tobool12, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %cond.false
  %sd_video13 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %10 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video13, align 8, !tbaa !90
  %ops14 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops14, align 8, !tbaa !79
  %vbi15 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 4
  %12 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi15, align 8, !tbaa !546
  %g_sliced_fmt = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %12, i32 0, i32 5
  %13 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %g_sliced_fmt, align 8, !tbaa !547
  %tobool16 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* %13, null
  br i1 %tobool16, label %cond.true17, label %cleanup

cond.true17:                                      ; preds = %land.lhs.true
  %sd_video18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %14 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video18, align 8, !tbaa !90
  %ops19 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %14, i32 0, i32 6
  %15 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops19, align 8, !tbaa !79
  %vbi20 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %15, i32 0, i32 4
  %16 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi20, align 8, !tbaa !546
  %g_sliced_fmt21 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %16, i32 0, i32 5
  %17 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %g_sliced_fmt21, align 8, !tbaa !547
  %sd_video22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %18 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video22, align 8, !tbaa !90
  %call23 = call i32 %17(%struct.v4l2_subdev* %18, %struct.v4l2_sliced_vbi_format* %sliced)
  br label %cleanup

cleanup:                                          ; preds = %cond.true17, %land.lhs.true, %cond.false, %if.end, %if.then
  %call28 = call zeroext i16 @ivtv_get_service_set(%struct.v4l2_sliced_vbi_format* %sliced)
  %service_set29 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 0
  store i16 %call28, i16* %service_set29, align 4, !tbaa !135
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fmt_sliced_vbi_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt2 to %struct.v4l2_sliced_vbi_format*
  %reserved = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %reserved, i64 0, i64 0
  store i32 0, i32* %arrayidx, align 4, !tbaa !120
  %reserved3 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %reserved3, i64 0, i64 1
  store i32 0, i32* %arrayidx4, align 4, !tbaa !120
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %2 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %2, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %io_size = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 2
  store i32 2304, i32* %io_size, align 4, !tbaa !545
  %service_lines = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 1
  %arraydecay = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines, i32 0, i32 0
  %3 = bitcast [24 x i16]* %arraydecay to i8*
  %call5 = call i8* @__memset(i8* %3, i32 0, i64 96)
  %is_60hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 28
  %4 = load i8, i8* %is_60hz, align 1, !tbaa !134
  %tobool6 = icmp ne i8 %4, 0
  %service_lines8 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 1
  %arrayidx9 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines8, i64 0, i64 0
  %. = select i1 %tobool6, i64 21, i64 23
  %.5 = select i1 %tobool6, i16 4096, i16 16384
  %.6 = select i1 %tobool6, i64 1, i64 0
  %.7 = select i1 %tobool6, i64 21, i64 16
  %.8 = select i1 %tobool6, i16 4096, i16 1024
  %arrayidx16 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx9, i64 0, i64 %.
  store i16 %.5, i16* %arrayidx16, align 2, !tbaa !151
  %service_lines17 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 1
  %arrayidx18 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines17, i64 0, i64 %.6
  %arrayidx19 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx18, i64 0, i64 %.7
  store i16 %.8, i16* %arrayidx19, align 2, !tbaa !151
  %call21 = call zeroext i16 @ivtv_get_service_set(%struct.v4l2_sliced_vbi_format* %sliced)
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 0
  store i16 %call21, i16* %service_set, align 4, !tbaa !135
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %format = alloca %struct.v4l2_subdev_format, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %2 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* %2) #8
  %3 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 88, i32 4, i1 false)
  %4 = bitcast i8* %3 to %struct.v4l2_subdev_format*
  %5 = getelementptr %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %4, i32 0, i32 0
  store i32 1, i32* %5
  %call2 = call i32 @ivtv_try_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %fmt3 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt3 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  %6 = load i32, i32* %width, align 8, !tbaa !142
  %fmt4 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix5 = bitcast %union.anon.62* %fmt4 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix5, i32 0, i32 1
  %7 = load i32, i32* %height, align 4, !tbaa !142
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %width6 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 2
  %8 = load i16, i16* %width6, align 8, !tbaa !426
  %conv = zext i16 %8 to i32
  %cmp = icmp eq i32 %conv, %6
  br i1 %cmp, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %if.end
  %cxhdl8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %height9 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl8, i32 0, i32 3
  %9 = load i16, i16* %height9, align 2, !tbaa !427
  %conv10 = zext i16 %9 to i32
  %cmp11 = icmp eq i32 %conv10, %7
  br i1 %cmp11, label %cleanup, label %if.end14

if.end14:                                         ; preds = %land.lhs.true, %if.end
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call15 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %cmp16 = icmp sgt i32 %call15, 0
  br i1 %cmp16, label %cleanup, label %if.end19

if.end19:                                         ; preds = %if.end14
  %conv20 = trunc i32 %6 to i16
  %cxhdl21 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %width22 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl21, i32 0, i32 2
  store i16 %conv20, i16* %width22, align 8, !tbaa !426
  %conv23 = trunc i32 %7 to i16
  %cxhdl24 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %height25 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl24, i32 0, i32 3
  store i16 %conv23, i16* %height25, align 2, !tbaa !427
  %cxhdl26 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %10 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl26, i32 0, i32 13
  %video_encoding = getelementptr inbounds %struct.anon.89, %struct.anon.89* %10, i32 0, i32 1
  %11 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %video_encoding, align 8, !tbaa !549
  %call27 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %11)
  %cmp28 = icmp eq i32 %call27, 0
  br i1 %cmp28, label %if.then30, label %if.end34

if.then30:                                        ; preds = %if.end19
  %fmt31 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix32 = bitcast %union.anon.62* %fmt31 to %struct.v4l2_pix_format*
  %width33 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix32, i32 0, i32 0
  %12 = load i32, i32* %width33, align 8, !tbaa !142
  %div = udiv i32 %12, 2
  store i32 %div, i32* %width33, align 8, !tbaa !142
  br label %if.end34

if.end34:                                         ; preds = %if.then30, %if.end19
  %fmt35 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix36 = bitcast %union.anon.62* %fmt35 to %struct.v4l2_pix_format*
  %width37 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix36, i32 0, i32 0
  %13 = load i32, i32* %width37, align 8, !tbaa !142
  %format38 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %width39 = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format38, i32 0, i32 0
  store i32 %13, i32* %width39, align 4, !tbaa !123
  %format40 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %height41 = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format40, i32 0, i32 1
  store i32 %7, i32* %height41, align 4, !tbaa !127
  %format42 = getelementptr inbounds %struct.v4l2_subdev_format, %struct.v4l2_subdev_format* %format, i32 0, i32 2
  %code = getelementptr inbounds %struct.v4l2_mbus_framefmt, %struct.v4l2_mbus_framefmt* %format42, i32 0, i32 2
  store i32 1, i32* %code, align 4, !tbaa !128
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %14 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool43 = icmp ne %struct.v4l2_subdev* %14, null
  br i1 %tobool43, label %cond.false, label %cond.end59

cond.false:                                       ; preds = %if.end34
  %sd_video44 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %15 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video44, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %15, i32 0, i32 6
  %16 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %pad = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %16, i32 0, i32 7
  %17 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad, align 8, !tbaa !129
  %tobool45 = icmp ne %struct.v4l2_subdev_pad_ops* %17, null
  br i1 %tobool45, label %land.lhs.true46, label %cond.end59

land.lhs.true46:                                  ; preds = %cond.false
  %sd_video47 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %18 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video47, align 8, !tbaa !90
  %ops48 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %18, i32 0, i32 6
  %19 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops48, align 8, !tbaa !79
  %pad49 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %19, i32 0, i32 7
  %20 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad49, align 8, !tbaa !129
  %set_fmt = getelementptr inbounds %struct.v4l2_subdev_pad_ops, %struct.v4l2_subdev_pad_ops* %20, i32 0, i32 5
  %21 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)** %set_fmt, align 8, !tbaa !130
  %tobool50 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)* %21, null
  br i1 %tobool50, label %cond.true51, label %cond.end59

cond.true51:                                      ; preds = %land.lhs.true46
  %sd_video52 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %22 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video52, align 8, !tbaa !90
  %ops53 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %23 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops53, align 8, !tbaa !79
  %pad54 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %23, i32 0, i32 7
  %24 = load %struct.v4l2_subdev_pad_ops*, %struct.v4l2_subdev_pad_ops** %pad54, align 8, !tbaa !129
  %set_fmt55 = getelementptr inbounds %struct.v4l2_subdev_pad_ops, %struct.v4l2_subdev_pad_ops* %24, i32 0, i32 5
  %25 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)** %set_fmt55, align 8, !tbaa !130
  %sd_video56 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %26 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video56, align 8, !tbaa !90
  %call57 = call i32 %25(%struct.v4l2_subdev* %26, %struct.v4l2_subdev_pad_config* null, %struct.v4l2_subdev_format* %format)
  br label %cond.end59

cond.end59:                                       ; preds = %cond.true51, %land.lhs.true46, %cond.false, %if.end34
  %cond60 = phi i32 [ -19, %if.end34 ], [ %call57, %cond.true51 ], [ -515, %land.lhs.true46 ], [ -515, %cond.false ]
  %call61 = call i32 @ivtv_g_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  br label %cleanup

cleanup:                                          ; preds = %cond.end59, %if.end14, %land.lhs.true, %entry
  %retval.0 = phi i32 [ %call61, %cond.end59 ], [ %call2, %entry ], [ 0, %land.lhs.true ], [ -16, %if.end14 ]
  %27 = bitcast %struct.v4l2_subdev_format* %format to i8*
  call void @llvm.lifetime.end.p0i8(i64 88, i8* %27) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %call2 = call i32 @ivtv_try_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %2 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp ne i32 %2, 8
  br i1 %cmp, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %stream_size = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 63
  %3 = load i32, i32* %stream_size, align 8, !tbaa !402
  %tobool5 = icmp ne i32 %3, 0
  br i1 %tobool5, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.end4
  %fmt8 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt8 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  %4 = load i32, i32* %width, align 8, !tbaa !142
  %v4l2_src_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 67
  store i32 %4, i32* %v4l2_src_w, align 8, !tbaa !550
  %fmt9 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix10 = bitcast %union.anon.62* %fmt9 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix10, i32 0, i32 1
  %5 = load i32, i32* %height, align 4, !tbaa !142
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  store i32 %5, i32* %v4l2_src_h, align 4, !tbaa !551
  %fmt11 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix12 = bitcast %union.anon.62* %fmt11 to %struct.v4l2_pix_format*
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix12, i32 0, i32 3
  %6 = load i32, i32* %field, align 4, !tbaa !142
  %Pivot8 = icmp slt i32 %6, 8
  br i1 %Pivot8, label %NodeBlock, label %NodeBlock5

NodeBlock5:                                       ; preds = %if.end7
  %Pivot6 = icmp sge i32 %6, 9
  %SwitchLeaf4 = icmp eq i32 %6, 9
  %or.cond = and i1 %Pivot6, %SwitchLeaf4
  br i1 %or.cond, label %sw.epilog, label %sw.default

NodeBlock:                                        ; preds = %if.end7
  %Pivot = icmp slt i32 %6, 1
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %6, 1
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %6, 0
  br i1 %SwitchLeaf, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %NodeBlock5
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %LeafBlock, %LeafBlock1, %NodeBlock5
  %.sink = phi i32 [ 0, %sw.default ], [ 2, %LeafBlock ], [ 4, %NodeBlock5 ], [ 1, %LeafBlock1 ]
  %lace_mode18 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 50
  store i32 %.sink, i32* %lace_mode18, align 8, !tbaa !552
  %lace_mode19 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 50
  %7 = load i32, i32* %lace_mode19, align 8, !tbaa !552
  %and = and i32 %7, 4
  %cmp20 = icmp eq i32 %and, 0
  %8 = zext i1 %cmp20 to i64
  %cond = select i1 %cmp20, i32 0, i32 1
  %lace_sync_field = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 52
  store i32 %cond, i32* %lace_sync_field, align 8, !tbaa !553
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %call21 = call zeroext i1 @constant_test_bit.307(i64 7, i64* %i_flags)
  br i1 %call21, label %if.then24, label %cleanup

if.then24:                                        ; preds = %sw.epilog
  %v4l2_src_h25 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %9 = load i32, i32* %v4l2_src_h25, align 4, !tbaa !551
  %add = add i32 %9, 31
  %and26 = and i32 %add, -32
  %mul = mul i32 1080, %and26
  %dma_data_req_size = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 57
  store i32 %mul, i32* %dma_data_req_size, align 4, !tbaa !396
  br label %cleanup

cleanup:                                          ; preds = %if.then24, %sw.epilog, %if.end4, %if.end, %entry
  %retval.0 = phi i32 [ %call2, %entry ], [ 0, %if.end ], [ -16, %if.end4 ], [ 0, %if.then24 ], [ 0, %sw.epilog ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_vid_out_overlay(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %call2 = call i32 @ivtv_try_fmt_vid_out_overlay(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %fmt3 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win = bitcast %union.anon.62* %fmt3 to %struct.v4l2_window*
  %chromakey = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 2
  %2 = load i32, i32* %chromakey, align 4, !tbaa !142
  %osd_chroma_key = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 96
  store i32 %2, i32* %osd_chroma_key, align 8, !tbaa !489
  %fmt4 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win5 = bitcast %union.anon.62* %fmt4 to %struct.v4l2_window*
  %global_alpha = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win5, i32 0, i32 6
  %3 = load i8, i8* %global_alpha, align 8, !tbaa !142
  %osd_global_alpha = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 95
  store i8 %3, i8* %osd_global_alpha, align 4, !tbaa !300
  call void @ivtv_set_osd_alpha(%struct.ivtv* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %call2 = call i32 @ivtv_raw_vbi.397(%struct.ivtv* %1)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call3 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %cmp = icmp sgt i32 %call3, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %vbi = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %sliced_in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 15
  %2 = load %struct.v4l2_sliced_vbi_format*, %struct.v4l2_sliced_vbi_format** %sliced_in, align 8, !tbaa !133
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %2, i32 0, i32 0
  store i16 0, i16* %service_set, align 4, !tbaa !135
  %vbi4 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi4, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  store i32 4, i32* %type, align 8, !tbaa !298
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %3 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool5 = icmp ne %struct.v4l2_subdev* %3, null
  br i1 %tobool5, label %cond.false, label %cond.end24

cond.false:                                       ; preds = %if.end
  %sd_video6 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %4 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video6, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %4, i32 0, i32 6
  %5 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi7 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %5, i32 0, i32 4
  %6 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi7, align 8, !tbaa !546
  %tobool8 = icmp ne %struct.v4l2_subdev_vbi_ops* %6, null
  br i1 %tobool8, label %land.lhs.true9, label %cond.end24

land.lhs.true9:                                   ; preds = %cond.false
  %sd_video10 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %7 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video10, align 8, !tbaa !90
  %ops11 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %8 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops11, align 8, !tbaa !79
  %vbi12 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %8, i32 0, i32 4
  %9 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi12, align 8, !tbaa !546
  %s_raw_fmt = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %9, i32 0, i32 4
  %10 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)** %s_raw_fmt, align 8, !tbaa !554
  %tobool13 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)* %10, null
  br i1 %tobool13, label %cond.true14, label %cond.end24

cond.true14:                                      ; preds = %land.lhs.true9
  %sd_video15 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %11 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video15, align 8, !tbaa !90
  %ops16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %11, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops16, align 8, !tbaa !79
  %vbi17 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 4
  %13 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi17, align 8, !tbaa !546
  %s_raw_fmt18 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %13, i32 0, i32 4
  %14 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)** %s_raw_fmt18, align 8, !tbaa !554
  %sd_video19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %15 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video19, align 8, !tbaa !90
  %fmt20 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %vbi21 = bitcast %union.anon.62* %fmt20 to %struct.v4l2_vbi_format*
  %call22 = call i32 %14(%struct.v4l2_subdev* %15, %struct.v4l2_vbi_format* %vbi21)
  br label %cond.end24

cond.end24:                                       ; preds = %cond.true14, %land.lhs.true9, %cond.false, %if.end
  %cond25 = phi i32 [ -19, %if.end ], [ %call22, %cond.true14 ], [ -515, %land.lhs.true9 ], [ -515, %cond.false ]
  %call26 = call i32 @ivtv_g_fmt_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  br label %cleanup

cleanup:                                          ; preds = %cond.end24, %land.lhs.true
  %retval.0 = phi i32 [ %call26, %cond.end24 ], [ -16, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %fmt1 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt1 to %struct.v4l2_sliced_vbi_format*
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv2 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv2, align 8, !tbaa !154
  %call3 = call i32 @ivtv_try_fmt_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %tobool = icmp ne i32 %call3, 0
  br i1 %tobool, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %2 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %3 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %3 to i32
  call void @check_service_set(%struct.v4l2_sliced_vbi_format* %sliced, i32 %conv)
  %call4 = call i32 @ivtv_raw_vbi.397(%struct.ivtv* %1)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %if.end
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call6 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %cmp7 = icmp sgt i32 %call6, 0
  br i1 %cmp7, label %cleanup, label %if.end10

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %vbi = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type11 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  store i32 6, i32* %type11, align 8, !tbaa !298
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %4 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool12 = icmp ne %struct.v4l2_subdev* %4, null
  br i1 %tobool12, label %cond.false, label %cond.end29

cond.false:                                       ; preds = %if.end10
  %sd_video13 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video13, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %6 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi14 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %6, i32 0, i32 4
  %7 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi14, align 8, !tbaa !546
  %tobool15 = icmp ne %struct.v4l2_subdev_vbi_ops* %7, null
  br i1 %tobool15, label %land.lhs.true16, label %cond.end29

land.lhs.true16:                                  ; preds = %cond.false
  %sd_video17 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %8 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video17, align 8, !tbaa !90
  %ops18 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops18, align 8, !tbaa !79
  %vbi19 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 4
  %10 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi19, align 8, !tbaa !546
  %s_sliced_fmt = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %10, i32 0, i32 6
  %11 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %s_sliced_fmt, align 8, !tbaa !555
  %tobool20 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* %11, null
  br i1 %tobool20, label %cond.true21, label %cond.end29

cond.true21:                                      ; preds = %land.lhs.true16
  %sd_video22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %12 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video22, align 8, !tbaa !90
  %ops23 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 6
  %13 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops23, align 8, !tbaa !79
  %vbi24 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %13, i32 0, i32 4
  %14 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi24, align 8, !tbaa !546
  %s_sliced_fmt25 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %14, i32 0, i32 6
  %15 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %s_sliced_fmt25, align 8, !tbaa !555
  %sd_video26 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %16 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video26, align 8, !tbaa !90
  %call27 = call i32 %15(%struct.v4l2_subdev* %16, %struct.v4l2_sliced_vbi_format* %sliced)
  br label %cond.end29

cond.end29:                                       ; preds = %cond.true21, %land.lhs.true16, %cond.false, %if.end10
  %cond30 = phi i32 [ -19, %if.end10 ], [ %call27, %cond.true21 ], [ -515, %land.lhs.true16 ], [ -515, %cond.false ]
  %vbi31 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 89
  %sliced_in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi31, i32 0, i32 15
  %17 = load %struct.v4l2_sliced_vbi_format*, %struct.v4l2_sliced_vbi_format** %sliced_in, align 8, !tbaa !133
  %18 = bitcast %struct.v4l2_sliced_vbi_format* %17 to i8*
  %19 = bitcast %struct.v4l2_sliced_vbi_format* %sliced to i8*
  %call32 = call i8* @__memcpy(i8* %18, i8* %19, i64 112)
  br label %cleanup

cleanup:                                          ; preds = %cond.end29, %land.lhs.true, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %cond.end29 ], [ %call3, %lor.lhs.false ], [ %call3, %entry ], [ -16, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fmt_sliced_vbi_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %call = call i32 @ivtv_g_fmt_sliced_vbi_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %__UNIQUE_ID_min1_20 = alloca i32, align 4
  %__UNIQUE_ID_min2_21 = alloca i32, align 4
  %__UNIQUE_ID_max1_22 = alloca i32, align 4
  %__UNIQUE_ID_max2_23 = alloca i32, align 4
  %__UNIQUE_ID_min1_24 = alloca i32, align 4
  %__UNIQUE_ID_min2_25 = alloca i32, align 4
  %__UNIQUE_ID_max1_26 = alloca i32, align 4
  %__UNIQUE_ID_max2_27 = alloca i32, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt2 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  %2 = load i32, i32* %width, align 8, !tbaa !142
  %fmt3 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix4 = bitcast %union.anon.62* %fmt3 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix4, i32 0, i32 1
  %3 = load i32, i32* %height, align 4, !tbaa !142
  %4 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #8
  store i32 %2, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !120
  %5 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #8
  store i32 720, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !120
  %cmp = icmp eq i32* %__UNIQUE_ID_min1_20, %__UNIQUE_ID_min2_21
  %conv = zext i1 %cmp to i32
  %6 = load i32, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !120
  %7 = load i32, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !120
  %cmp5 = icmp slt i32 %6, %7
  %8 = load i32, i32* %__UNIQUE_ID_min1_20, align 4
  %9 = load i32, i32* %__UNIQUE_ID_min2_21, align 4
  %cond = select i1 %cmp5, i32 %8, i32 %9
  %10 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %12 = bitcast i32* %__UNIQUE_ID_max1_22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #8
  store i32 %cond, i32* %__UNIQUE_ID_max1_22, align 4, !tbaa !120
  %13 = bitcast i32* %__UNIQUE_ID_max2_23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #8
  store i32 2, i32* %__UNIQUE_ID_max2_23, align 4, !tbaa !120
  %cmp7 = icmp eq i32* %__UNIQUE_ID_max1_22, %__UNIQUE_ID_max2_23
  %conv8 = zext i1 %cmp7 to i32
  %14 = load i32, i32* %__UNIQUE_ID_max1_22, align 4, !tbaa !120
  %15 = load i32, i32* %__UNIQUE_ID_max2_23, align 4, !tbaa !120
  %cmp10 = icmp sgt i32 %14, %15
  %16 = load i32, i32* %__UNIQUE_ID_max1_22, align 4
  %17 = load i32, i32* %__UNIQUE_ID_max2_23, align 4
  %cond15 = select i1 %cmp10, i32 %16, i32 %17
  %18 = bitcast i32* %__UNIQUE_ID_max2_23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #8
  %19 = bitcast i32* %__UNIQUE_ID_max1_22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #8
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %20 = load i32, i32* %type, align 8, !tbaa !157
  %cmp16 = icmp eq i32 %20, 1
  %and = and i32 %3, -32
  %and. = select i1 %cmp16, i32 %and, i32 %3
  %. = select i1 %cmp16, i32 32, i32 2
  %21 = bitcast i32* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #8
  store i32 %and., i32* %__UNIQUE_ID_min1_24, align 4, !tbaa !120
  %22 = bitcast i32* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #8
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %23 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv18 = zext i8 %23 to i32
  %tobool = icmp ne i32 %conv18, 0
  %24 = zext i1 %tobool to i64
  %cond19 = select i1 %tobool, i32 576, i32 480
  store i32 %cond19, i32* %__UNIQUE_ID_min2_25, align 4, !tbaa !120
  %cmp20 = icmp eq i32* %__UNIQUE_ID_min1_24, %__UNIQUE_ID_min2_25
  %conv21 = zext i1 %cmp20 to i32
  %25 = load i32, i32* %__UNIQUE_ID_min1_24, align 4, !tbaa !120
  %26 = load i32, i32* %__UNIQUE_ID_min2_25, align 4, !tbaa !120
  %cmp23 = icmp slt i32 %25, %26
  %27 = load i32, i32* %__UNIQUE_ID_min1_24, align 4
  %28 = load i32, i32* %__UNIQUE_ID_min2_25, align 4
  %cond28 = select i1 %cmp23, i32 %27, i32 %28
  %29 = bitcast i32* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #8
  %30 = bitcast i32* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %30) #8
  %31 = bitcast i32* %__UNIQUE_ID_max1_26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %31) #8
  store i32 %cond28, i32* %__UNIQUE_ID_max1_26, align 4, !tbaa !120
  %32 = bitcast i32* %__UNIQUE_ID_max2_27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #8
  store i32 %., i32* %__UNIQUE_ID_max2_27, align 4, !tbaa !120
  %cmp29 = icmp eq i32* %__UNIQUE_ID_max1_26, %__UNIQUE_ID_max2_27
  %conv30 = zext i1 %cmp29 to i32
  %33 = load i32, i32* %__UNIQUE_ID_max1_26, align 4, !tbaa !120
  %34 = load i32, i32* %__UNIQUE_ID_max2_27, align 4, !tbaa !120
  %cmp32 = icmp sgt i32 %33, %34
  %35 = load i32, i32* %__UNIQUE_ID_max1_26, align 4
  %36 = load i32, i32* %__UNIQUE_ID_max2_27, align 4
  %cond37 = select i1 %cmp32, i32 %35, i32 %36
  %37 = bitcast i32* %__UNIQUE_ID_max2_27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %37) #8
  %38 = bitcast i32* %__UNIQUE_ID_max1_26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #8
  %call38 = call i32 @ivtv_g_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %fmt39 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix40 = bitcast %union.anon.62* %fmt39 to %struct.v4l2_pix_format*
  %width41 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix40, i32 0, i32 0
  store i32 %cond15, i32* %width41, align 8, !tbaa !142
  %fmt42 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix43 = bitcast %union.anon.62* %fmt42 to %struct.v4l2_pix_format*
  %height44 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix43, i32 0, i32 1
  store i32 %cond37, i32* %height44, align 4, !tbaa !142
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %__UNIQUE_ID_min1_28 = alloca i32, align 4
  %__UNIQUE_ID_min2_29 = alloca i32, align 4
  %__UNIQUE_ID_max1_30 = alloca i32, align 4
  %__UNIQUE_ID_max2_31 = alloca i32, align 4
  %__UNIQUE_ID_min1_32 = alloca i32, align 4
  %__UNIQUE_ID_min2_33 = alloca i32, align 4
  %__UNIQUE_ID_max1_34 = alloca i32, align 4
  %__UNIQUE_ID_max2_35 = alloca i32, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %fmt1 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.62* %fmt1 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 0
  %1 = load i32, i32* %width, align 8, !tbaa !142
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix3 = bitcast %union.anon.62* %fmt2 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix3, i32 0, i32 1
  %2 = load i32, i32* %height, align 4, !tbaa !142
  %fmt4 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix5 = bitcast %union.anon.62* %fmt4 to %struct.v4l2_pix_format*
  %field6 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix5, i32 0, i32 3
  %3 = load i32, i32* %field6, align 4, !tbaa !142
  %call7 = call i32 @ivtv_g_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %4 = bitcast i32* %__UNIQUE_ID_min1_28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #8
  store i32 %1, i32* %__UNIQUE_ID_min1_28, align 4, !tbaa !120
  %5 = bitcast i32* %__UNIQUE_ID_min2_29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #8
  store i32 720, i32* %__UNIQUE_ID_min2_29, align 4, !tbaa !120
  %cmp = icmp eq i32* %__UNIQUE_ID_min1_28, %__UNIQUE_ID_min2_29
  %conv = zext i1 %cmp to i32
  %6 = load i32, i32* %__UNIQUE_ID_min1_28, align 4, !tbaa !120
  %7 = load i32, i32* %__UNIQUE_ID_min2_29, align 4, !tbaa !120
  %cmp8 = icmp slt i32 %6, %7
  %8 = load i32, i32* %__UNIQUE_ID_min1_28, align 4
  %9 = load i32, i32* %__UNIQUE_ID_min2_29, align 4
  %cond = select i1 %cmp8, i32 %8, i32 %9
  %10 = bitcast i32* %__UNIQUE_ID_min2_29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %__UNIQUE_ID_min1_28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %12 = bitcast i32* %__UNIQUE_ID_max1_30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #8
  store i32 %cond, i32* %__UNIQUE_ID_max1_30, align 4, !tbaa !120
  %13 = bitcast i32* %__UNIQUE_ID_max2_31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %13) #8
  store i32 2, i32* %__UNIQUE_ID_max2_31, align 4, !tbaa !120
  %cmp10 = icmp eq i32* %__UNIQUE_ID_max1_30, %__UNIQUE_ID_max2_31
  %conv11 = zext i1 %cmp10 to i32
  %14 = load i32, i32* %__UNIQUE_ID_max1_30, align 4, !tbaa !120
  %15 = load i32, i32* %__UNIQUE_ID_max2_31, align 4, !tbaa !120
  %cmp13 = icmp sgt i32 %14, %15
  %16 = load i32, i32* %__UNIQUE_ID_max1_30, align 4
  %17 = load i32, i32* %__UNIQUE_ID_max2_31, align 4
  %cond18 = select i1 %cmp13, i32 %16, i32 %17
  %18 = bitcast i32* %__UNIQUE_ID_max2_31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %18) #8
  %19 = bitcast i32* %__UNIQUE_ID_max1_30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %19) #8
  %20 = bitcast i32* %__UNIQUE_ID_min1_32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #8
  store i32 %2, i32* %__UNIQUE_ID_min1_32, align 4, !tbaa !120
  %21 = bitcast i32* %__UNIQUE_ID_min2_33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %21) #8
  store i32 576, i32* %__UNIQUE_ID_min2_33, align 4, !tbaa !120
  %cmp19 = icmp eq i32* %__UNIQUE_ID_min1_32, %__UNIQUE_ID_min2_33
  %conv20 = zext i1 %cmp19 to i32
  %22 = load i32, i32* %__UNIQUE_ID_min1_32, align 4, !tbaa !120
  %23 = load i32, i32* %__UNIQUE_ID_min2_33, align 4, !tbaa !120
  %cmp22 = icmp slt i32 %22, %23
  %24 = load i32, i32* %__UNIQUE_ID_min1_32, align 4
  %25 = load i32, i32* %__UNIQUE_ID_min2_33, align 4
  %cond27 = select i1 %cmp22, i32 %24, i32 %25
  %26 = bitcast i32* %__UNIQUE_ID_min2_33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %26) #8
  %27 = bitcast i32* %__UNIQUE_ID_min1_32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %27) #8
  %28 = bitcast i32* %__UNIQUE_ID_max1_34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %28) #8
  store i32 %cond27, i32* %__UNIQUE_ID_max1_34, align 4, !tbaa !120
  %29 = bitcast i32* %__UNIQUE_ID_max2_35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %29) #8
  store i32 2, i32* %__UNIQUE_ID_max2_35, align 4, !tbaa !120
  %cmp28 = icmp eq i32* %__UNIQUE_ID_max1_34, %__UNIQUE_ID_max2_35
  %conv29 = zext i1 %cmp28 to i32
  %30 = load i32, i32* %__UNIQUE_ID_max1_34, align 4, !tbaa !120
  %31 = load i32, i32* %__UNIQUE_ID_max2_35, align 4, !tbaa !120
  %cmp31 = icmp sgt i32 %30, %31
  %32 = load i32, i32* %__UNIQUE_ID_max1_34, align 4
  %33 = load i32, i32* %__UNIQUE_ID_max2_35, align 4
  %cond36 = select i1 %cmp31, i32 %32, i32 %33
  %34 = bitcast i32* %__UNIQUE_ID_max2_35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #8
  %35 = bitcast i32* %__UNIQUE_ID_max1_34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #8
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %36 = load i32, i32* %type, align 8, !tbaa !157
  %cmp37 = icmp eq i32 %36, 8
  br i1 %cmp37, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %fmt39 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix40 = bitcast %union.anon.62* %fmt39 to %struct.v4l2_pix_format*
  %field41 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix40, i32 0, i32 3
  store i32 %3, i32* %field41, align 4, !tbaa !142
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %fmt42 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix43 = bitcast %union.anon.62* %fmt42 to %struct.v4l2_pix_format*
  %width44 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix43, i32 0, i32 0
  store i32 %cond18, i32* %width44, align 8, !tbaa !142
  %fmt45 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix46 = bitcast %union.anon.62* %fmt45 to %struct.v4l2_pix_format*
  %height47 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix46, i32 0, i32 1
  store i32 %cond36, i32* %height47, align 4, !tbaa !142
  ret i32 %call7
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_vid_out_overlay(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %fmt3 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win = bitcast %union.anon.62* %fmt3 to %struct.v4l2_window*
  %chromakey4 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win, i32 0, i32 2
  %4 = load i32, i32* %chromakey4, align 4, !tbaa !142
  %fmt5 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win6 = bitcast %union.anon.62* %fmt5 to %struct.v4l2_window*
  %global_alpha7 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win6, i32 0, i32 6
  %5 = load i8, i8* %global_alpha7, align 8, !tbaa !142
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %6 = load i32, i32* %caps, align 4, !tbaa !512
  %and = and i32 %6, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %7 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool8 = icmp ne i64 %7, 0
  br i1 %tobool8, label %if.end10, label %cleanup

if.end10:                                         ; preds = %if.end
  %call11 = call i32 @ivtv_g_fmt_vid_out_overlay(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  %fmt12 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win13 = bitcast %union.anon.62* %fmt12 to %struct.v4l2_window*
  %chromakey14 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win13, i32 0, i32 2
  store i32 %4, i32* %chromakey14, align 4, !tbaa !142
  %fmt15 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %win16 = bitcast %union.anon.62* %fmt15 to %struct.v4l2_window*
  %global_alpha17 = getelementptr inbounds %struct.v4l2_window, %struct.v4l2_window* %win16, i32 0, i32 6
  store i8 %5, i8* %global_alpha17, align 8, !tbaa !142
  br label %cleanup

cleanup:                                          ; preds = %if.end10, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end10 ], [ -22, %entry ], [ -22, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %call = call i32 @ivtv_g_fmt_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %fmt1 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt1 to %struct.v4l2_sliced_vbi_format*
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv2 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv2, align 8, !tbaa !154
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %2 = load i32, i32* %type, align 8, !tbaa !157
  %cmp = icmp eq i32 %2, 6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call3 = call i32 @ivtv_g_fmt_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  br label %cleanup

if.end:                                           ; preds = %entry
  %io_size = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 2
  store i32 2304, i32* %io_size, align 4, !tbaa !545
  %reserved = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %reserved, i64 0, i64 0
  store i32 0, i32* %arrayidx, align 4, !tbaa !120
  %reserved4 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 3
  %arrayidx5 = getelementptr inbounds [2 x i32], [2 x i32]* %reserved4, i64 0, i64 1
  store i32 0, i32* %arrayidx5, align 4, !tbaa !120
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 0
  %3 = load i16, i16* %service_set, align 4, !tbaa !135
  %tobool = icmp ne i16 %3, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %if.end
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %4 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %4 to i32
  call void @ivtv_expand_service_set(%struct.v4l2_sliced_vbi_format* %sliced, i32 %conv)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  %is_50hz8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %5 = load i8, i8* %is_50hz8, align 8, !tbaa !137
  %conv9 = zext i8 %5 to i32
  call void @check_service_set(%struct.v4l2_sliced_vbi_format* %sliced, i32 %conv9)
  %call10 = call zeroext i16 @ivtv_get_service_set(%struct.v4l2_sliced_vbi_format* %sliced)
  %service_set11 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %sliced, i32 0, i32 0
  store i16 %call10, i16* %service_set11, align 4, !tbaa !135
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.then
  %retval.0 = phi i32 [ %call3, %if.then ], [ 0, %if.end7 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_fmt_sliced_vbi_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %call = call i32 @ivtv_g_fmt_sliced_vbi_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_overlay(%struct.file* %file, i8* %fh, i32 %on) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %caps, align 4, !tbaa !512
  %and = and i32 %4, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %5 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool3 = icmp ne i64 %5, 0
  br i1 %tobool3, label %if.end5, label %cleanup

if.end5:                                          ; preds = %if.end
  %cmp = icmp ne i32 %on, 0
  %conv = zext i1 %cmp to i32
  %call6 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %1, i32 69, i32 1, i32 %conv)
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -25, %entry ], [ -25, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_fbuf(%struct.file* %file, i8* %fh, %struct.v4l2_framebuffer* %fb) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %4 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %4) #8
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %5 = load i32, i32* %caps, align 4, !tbaa !512
  %and = and i32 %5, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %6 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool3 = icmp ne i64 %6, 0
  br i1 %tobool3, label %if.end5, label %cleanup

if.end5:                                          ; preds = %if.end
  %capability = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 0
  store i32 35, i32* %capability, align 8, !tbaa !556
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call6 = call i32 (%struct.ivtv*, i32*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32*, i32, i32, ...)* @ivtv_vapi_result to i32 (%struct.ivtv*, i32*, i32, i32, ...)*)(%struct.ivtv* %1, i32* %arraydecay, i32 68, i32 0)
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %7, i64 10752
  %call7 = call i32 @readl.327(i8* %add.ptr)
  %shr = lshr i32 %call7, 7
  %and8 = and i32 %shr, 64
  %arrayidx9 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %8 = load i32, i32* %arrayidx9, align 16, !tbaa !120
  %or = or i32 %8, %and8
  store i32 %or, i32* %arrayidx9, align 16, !tbaa !120
  %arrayidx10 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %9 = load i32, i32* %arrayidx10, align 16, !tbaa !120
  %shr11 = lshr i32 %9, 3
  %and12 = and i32 %shr11, 15
  %idxprom13 = sext i32 %and12 to i64
  %arrayidx14 = getelementptr inbounds [16 x i32], [16 x i32]* @ivtv_g_fbuf.pixel_format, i64 0, i64 %idxprom13
  %10 = load i32, i32* %arrayidx14, align 4, !tbaa !120
  %fmt = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %pixelformat = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt, i32 0, i32 2
  store i32 %10, i32* %pixelformat, align 8, !tbaa !559
  %osd_rect = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 97
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %osd_rect, i32 0, i32 2
  %11 = load i32, i32* %width, align 4, !tbaa !535
  %fmt15 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %width16 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt15, i32 0, i32 0
  store i32 %11, i32* %width16, align 8, !tbaa !560
  %osd_rect17 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 97
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %osd_rect17, i32 0, i32 3
  %12 = load i32, i32* %height, align 4, !tbaa !537
  %fmt18 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %height19 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt18, i32 0, i32 1
  store i32 %12, i32* %height19, align 4, !tbaa !561
  %fmt20 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %field = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt20, i32 0, i32 3
  store i32 4, i32* %field, align 4, !tbaa !562
  %fmt21 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %width22 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt21, i32 0, i32 0
  %13 = load i32, i32* %width22, align 8, !tbaa !560
  %fmt23 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %bytesperline = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt23, i32 0, i32 4
  store i32 %13, i32* %bytesperline, align 8, !tbaa !563
  %fmt24 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %colorspace = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt24, i32 0, i32 6
  store i32 1, i32* %colorspace, align 8, !tbaa !564
  %fmt25 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %field26 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt25, i32 0, i32 3
  store i32 4, i32* %field26, align 4, !tbaa !562
  %fmt27 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %pixelformat28 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt27, i32 0, i32 2
  %14 = load i32, i32* %pixelformat28, align 8, !tbaa !559
  %cmp = icmp ne i32 %14, 944521552
  br i1 %cmp, label %if.then29, label %if.end32

if.then29:                                        ; preds = %if.end5
  %fmt30 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %bytesperline31 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt30, i32 0, i32 4
  %15 = load i32, i32* %bytesperline31, align 8, !tbaa !563
  %mul = mul i32 %15, 2
  store i32 %mul, i32* %bytesperline31, align 8, !tbaa !563
  br label %if.end32

if.end32:                                         ; preds = %if.then29, %if.end5
  %fmt33 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %pixelformat34 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt33, i32 0, i32 2
  %16 = load i32, i32* %pixelformat34, align 8, !tbaa !559
  %cmp35 = icmp eq i32 %16, 876758866
  br i1 %cmp35, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end32
  %fmt36 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %pixelformat37 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt36, i32 0, i32 2
  %17 = load i32, i32* %pixelformat37, align 8, !tbaa !559
  %cmp38 = icmp eq i32 %17, 878073177
  br i1 %cmp38, label %if.then39, label %if.end43

if.then39:                                        ; preds = %lor.lhs.false, %if.end32
  %fmt40 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %bytesperline41 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt40, i32 0, i32 4
  %18 = load i32, i32* %bytesperline41, align 8, !tbaa !563
  %mul42 = mul i32 %18, 2
  store i32 %mul42, i32* %bytesperline41, align 8, !tbaa !563
  br label %if.end43

if.end43:                                         ; preds = %if.then39, %lor.lhs.false
  %fmt44 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %bytesperline45 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt44, i32 0, i32 4
  %19 = load i32, i32* %bytesperline45, align 8, !tbaa !563
  %fmt46 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %height47 = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt46, i32 0, i32 1
  %20 = load i32, i32* %height47, align 4, !tbaa !561
  %mul48 = mul i32 %19, %20
  %fmt49 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 3
  %sizeimage = getelementptr inbounds %struct.qc_info, %struct.qc_info* %fmt49, i32 0, i32 5
  store i32 %mul48, i32* %sizeimage, align 4, !tbaa !565
  %osd_video_pbase50 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %21 = load i64, i64* %osd_video_pbase50, align 8, !tbaa !514
  %22 = inttoptr i64 %21 to i8*
  %base = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 2
  store i8* %22, i8** %base, align 8, !tbaa !566
  %flags = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  store i32 0, i32* %flags, align 4, !tbaa !567
  %osd_chroma_key_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 94
  %23 = load i32, i32* %osd_chroma_key_state, align 8, !tbaa !488
  %tobool51 = icmp ne i32 %23, 0
  br i1 %tobool51, label %if.then52, label %if.end55

if.then52:                                        ; preds = %if.end43
  %flags53 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %24 = load i32, i32* %flags53, align 4, !tbaa !567
  %or54 = or i32 %24, 4
  store i32 %or54, i32* %flags53, align 4, !tbaa !567
  br label %if.end55

if.end55:                                         ; preds = %if.then52, %if.end43
  %osd_global_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 92
  %25 = load i32, i32* %osd_global_alpha_state, align 8, !tbaa !299
  %tobool56 = icmp ne i32 %25, 0
  br i1 %tobool56, label %if.then57, label %if.end60

if.then57:                                        ; preds = %if.end55
  %flags58 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %26 = load i32, i32* %flags58, align 4, !tbaa !567
  %or59 = or i32 %26, 16
  store i32 %or59, i32* %flags58, align 4, !tbaa !567
  br label %if.end60

if.end60:                                         ; preds = %if.then57, %if.end55
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 40
  %27 = load i8, i8* %track_osd, align 8, !tbaa !568
  %tobool61 = icmp ne i8 %27, 0
  br i1 %tobool61, label %if.then62, label %if.end65

if.then62:                                        ; preds = %if.end60
  %flags63 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %28 = load i32, i32* %flags63, align 4, !tbaa !567
  %or64 = or i32 %28, 2
  store i32 %or64, i32* %flags63, align 4, !tbaa !567
  br label %if.end65

if.end65:                                         ; preds = %if.then62, %if.end60
  %and66 = and i32 %and12, 7
  %cmp67 = icmp eq i32 %and66, 1
  %cmp69 = icmp sgt i32 %and66, 4
  %or.cond = or i1 %cmp67, %cmp69
  br i1 %or.cond, label %cleanup, label %if.end71

if.end71:                                         ; preds = %if.end65
  %and66.off = add i32 %and66, -2
  %switch = icmp ult i32 %and66.off, 2
  %capability76 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 0
  %. = select i1 %switch, i32 64, i32 16
  %29 = load i32, i32* %capability76, align 8, !tbaa !556
  %or79 = or i32 %29, %.
  store i32 %or79, i32* %capability76, align 8, !tbaa !556
  %osd_local_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 93
  %30 = load i32, i32* %osd_local_alpha_state, align 4, !tbaa !487
  %tobool81 = icmp ne i32 %30, 0
  br i1 %tobool81, label %if.then82, label %cleanup

if.then82:                                        ; preds = %if.end71
  %switch6 = icmp ult i32 %and66.off, 2
  %flags87 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %.7 = select i1 %switch6, i32 32, i32 8
  %31 = load i32, i32* %flags87, align 4, !tbaa !567
  %or91 = or i32 %31, %.7
  store i32 %or91, i32* %flags87, align 4, !tbaa !567
  br label %cleanup

cleanup:                                          ; preds = %if.then82, %if.end71, %if.end65, %if.end, %entry
  %retval.0 = phi i32 [ -25, %entry ], [ -25, %if.end ], [ 0, %if.end65 ], [ 0, %if.then82 ], [ 0, %if.end71 ]
  %32 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %32) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_fbuf(%struct.file* %file, i8* %fh, %struct.v4l2_framebuffer* %fb) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %caps = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %caps, align 4, !tbaa !512
  %and = and i32 %4, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %osd_video_pbase = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 91
  %5 = load i64, i64* %osd_video_pbase, align 8, !tbaa !514
  %tobool3 = icmp ne i64 %5, 0
  br i1 %tobool3, label %if.end5, label %cleanup

if.end5:                                          ; preds = %if.end
  %flags = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %6 = load i32, i32* %flags, align 4, !tbaa !567
  %and6 = and i32 %6, 16
  %cmp = icmp ne i32 %and6, 0
  %conv = zext i1 %cmp to i32
  %osd_global_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 92
  store i32 %conv, i32* %osd_global_alpha_state, align 8, !tbaa !299
  %flags7 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %7 = load i32, i32* %flags7, align 4, !tbaa !567
  %and8 = and i32 %7, 40
  %cmp9 = icmp ne i32 %and8, 0
  %conv10 = zext i1 %cmp9 to i32
  %osd_local_alpha_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 93
  store i32 %conv10, i32* %osd_local_alpha_state, align 4, !tbaa !487
  %flags11 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %8 = load i32, i32* %flags11, align 4, !tbaa !567
  %and12 = and i32 %8, 4
  %cmp13 = icmp ne i32 %and12, 0
  %conv14 = zext i1 %cmp13 to i32
  %osd_chroma_key_state = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 94
  store i32 %conv14, i32* %osd_chroma_key_state, align 8, !tbaa !488
  call void @ivtv_set_osd_alpha(%struct.ivtv* %1)
  %flags15 = getelementptr inbounds %struct.v4l2_framebuffer, %struct.v4l2_framebuffer* %fb, i32 0, i32 1
  %9 = load i32, i32* %flags15, align 4, !tbaa !567
  %and16 = and i32 %9, 2
  %cmp17 = icmp ne i32 %and16, 0
  %conv18 = zext i1 %cmp17 to i32
  %conv19 = trunc i32 %conv18 to i8
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 40
  store i8 %conv19, i8* %track_osd, align 8, !tbaa !568
  br label %cleanup

cleanup:                                          ; preds = %if.end5, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end5 ], [ -25, %entry ], [ -25, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_std(%struct.file* %file, i8* %fh, i64* %std) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %std2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 35
  %2 = load i64, i64* %std2, align 8, !tbaa !166
  store i64 %2, i64* %std, align 8, !tbaa !149
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_std(%struct.file* %file, i8* %fh, i64 %std) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %and = and i64 %std, 16777215
  %cmp = icmp eq i64 %and, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %std2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 35
  %2 = load i64, i64* %std2, align 8, !tbaa !166
  %cmp3 = icmp eq i64 %std, %2
  br i1 %cmp3, label %cleanup, label %cond.true

cond.true:                                        ; preds = %if.end
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %call6 = call zeroext i1 @constant_test_bit.307(i64 5, i64* %i_flags)
  br i1 %call6, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %cond.true
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call9 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %cmp10 = icmp sgt i32 %call9, 0
  br i1 %cmp10, label %cleanup, label %lor.lhs.false11

lor.lhs.false11:                                  ; preds = %lor.lhs.false
  %decoding = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 44
  %call12 = call i32 @atomic_read.306(%struct.atomic_t* %decoding)
  %cmp13 = icmp sgt i32 %call12, 0
  br i1 %cmp13, label %cleanup, label %do.body

do.body:                                          ; preds = %lor.lhs.false11
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 2, %3
  %tobool = icmp ne i32 %and16, 0
  br i1 %tobool, label %if.then17, label %do.end

if.then17:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %std18 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 35
  %4 = load i64, i64* %std18, align 8, !tbaa !166
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7.396, i32 0, i32 0), i8* %arraydecay, i64 %4)
  br label %do.end

do.end:                                           ; preds = %if.then17, %do.body
  call void @ivtv_s_std_enc(%struct.ivtv* %1, i64 %std)
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %5 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and21 = and i32 %5, 2
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %if.then23, label %cleanup

if.then23:                                        ; preds = %do.end
  call void @ivtv_s_std_dec(%struct.ivtv* %1, i64 %std)
  br label %cleanup

cleanup:                                          ; preds = %if.then23, %do.end, %lor.lhs.false11, %lor.lhs.false, %cond.true, %if.end, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.end ], [ -16, %lor.lhs.false11 ], [ -16, %lor.lhs.false ], [ -16, %cond.true ], [ 0, %if.then23 ], [ 0, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enum_input(%struct.file* %file, i8* %fh, %struct.v4l2_input* %vin) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %vin, i32 0, i32 0
  %2 = load i32, i32* %index, align 8, !tbaa !101
  %conv = trunc i32 %2 to i16
  %call2 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_input*)* @ivtv_get_input to i32 (%struct.ivtv*, i16, %struct.v4l2_input*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_input* %vin)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_input(%struct.file* %file, i8* %fh, i32* %i) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %active_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 33
  %2 = load i32, i32* %active_input, align 4, !tbaa !89
  store i32 %2, i32* %i, align 4, !tbaa !120
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enum_output(%struct.file* %file, i8* %fh, %struct.v4l2_output* %vout) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %vout, i32 0, i32 0
  %2 = load i32, i32* %index, align 8, !tbaa !110
  %conv = trunc i32 %2 to i16
  %call2 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_output*)* @ivtv_get_output to i32 (%struct.ivtv*, i16, %struct.v4l2_output*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_output* %vout)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_output(%struct.file* %file, i8* %fh, i32* %i) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %2 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %2, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %active_output = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 34
  %3 = load i32, i32* %active_output, align 8, !tbaa !429
  store i32 %3, i32* %i, align 4, !tbaa !120
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_output(%struct.file* %file, i8* %fh, i32 %outp) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %nof_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 12
  %3 = load i32, i32* %nof_outputs, align 8, !tbaa !109
  %cmp = icmp uge i32 %outp, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %active_output = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 34
  %4 = load i32, i32* %active_output, align 8, !tbaa !429
  %cmp2 = icmp eq i32 %outp, %4
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %5
  %tobool = icmp ne i32 %and, 0
  br i1 %cmp2, label %do.body, label %do.body8

do.body:                                          ; preds = %if.end
  br i1 %tobool, label %if.then4, label %cleanup

if.then4:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.8.394, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

do.body8:                                         ; preds = %if.end
  br i1 %tobool, label %if.then11, label %do.end19

if.then11:                                        ; preds = %do.body8
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name13 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay14 = getelementptr inbounds [36 x i8], [36 x i8]* %name13, i32 0, i32 0
  %active_output15 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 34
  %6 = load i32, i32* %active_output15, align 8, !tbaa !429
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.9.395, i32 0, i32 0), i8* %arraydecay14, i32 %6, i32 %outp)
  br label %do.end19

do.end19:                                         ; preds = %if.then11, %do.body8
  %active_output20 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 34
  store i32 %outp, i32* %active_output20, align 8, !tbaa !429
  %v4l2_dev23 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev23, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end19
  %list42.sink = phi %struct.list_head* [ %list42, %for.inc ], [ %subdevs, %do.end19 ]
  %next43 = getelementptr inbounds %struct.list_head, %struct.list_head* %list42.sink, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %next43, align 8, !tbaa !86
  %8 = bitcast %struct.list_head* %7 to i8*
  %add.ptr45 = getelementptr inbounds i8, i8* %8, i64 -128
  %9 = bitcast i8* %add.ptr45 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 1
  %v4l2_dev24 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs25 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev24, i32 0, i32 2
  %cmp26 = icmp ne %struct.list_head* %list, %subdevs25
  br i1 %cmp26, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 10
  %10 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and27 = and i32 %10, 4
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 3
  %12 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool29 = icmp ne %struct.v4l2_subdev_video_ops* %12, null
  br i1 %tobool29, label %land.lhs.true30, label %for.inc

land.lhs.true30:                                  ; preds = %land.lhs.true
  %ops31 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %13 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops31, align 8, !tbaa !79
  %video32 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %13, i32 0, i32 3
  %14 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video32, align 8, !tbaa !91
  %s_routing = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %14, i32 0, i32 0
  %15 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing, align 8, !tbaa !92
  %tobool33 = icmp ne i32 (%struct.v4l2_subdev*, i32, i32, i32)* %15, null
  br i1 %tobool33, label %if.then34, label %for.inc

if.then34:                                        ; preds = %land.lhs.true30
  %ops35 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %16 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops35, align 8, !tbaa !79
  %video36 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %16, i32 0, i32 3
  %17 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video36, align 8, !tbaa !91
  %s_routing37 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %17, i32 0, i32 0
  %18 = load i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)** %s_routing37, align 8, !tbaa !92
  %card38 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 1
  %19 = load %struct.ivtv_card*, %struct.ivtv_card** %card38, align 8, !tbaa !2
  %video_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %19, i32 0, i32 13
  %20 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs, align 8, !tbaa !108
  %idxprom = zext i32 %outp to i64
  %arrayidx = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %20, i64 %idxprom
  %video_output = getelementptr inbounds %struct.ivtv_card_output, %struct.ivtv_card_output* %arrayidx, i32 0, i32 1
  %21 = load i16, i16* %video_output, align 2, !tbaa !430
  %conv = zext i16 %21 to i32
  %call39 = call i32 %18(%struct.v4l2_subdev* %9, i32 0, i32 %conv, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then34, %land.lhs.true30, %land.lhs.true, %for.body
  %list42 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %if.then4, %do.body, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.then4 ], [ 0, %do.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enumaudio(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vin) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  %2 = load i32, i32* %index, align 4, !tbaa !116
  %conv = trunc i32 %2 to i16
  %call2 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_input to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_audio* %vin)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_audio(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vin) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %audio_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 32
  %2 = load i32, i32* %audio_input, align 8, !tbaa !66
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  store i32 %2, i32* %index, align 4, !tbaa !116
  %index2 = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  %3 = load i32, i32* %index2, align 4, !tbaa !116
  %conv = trunc i32 %3 to i16
  %call3 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_input to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_audio* %vin)
  ret i32 %call3
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_audio(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vout) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vout, i32 0, i32 0
  %2 = load i32, i32* %index, align 4, !tbaa !116
  %nof_audio_inputs = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 7
  %3 = load i8, i8* %nof_audio_inputs, align 1, !tbaa !104
  %conv = zext i8 %3 to i32
  %cmp = icmp uge i32 %2, %conv
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %index3 = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vout, i32 0, i32 0
  %4 = load i32, i32* %index3, align 4, !tbaa !116
  %audio_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 32
  store i32 %4, i32* %audio_input, align 8, !tbaa !66
  call void @ivtv_audio_set_io(%struct.ivtv* %1)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_enumaudout(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vin) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  %2 = load i32, i32* %index, align 4, !tbaa !569
  %conv = trunc i32 %2 to i16
  %call2 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_output to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_audio* %vin)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_audout(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vin) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  store i32 0, i32* %index, align 4, !tbaa !569
  %index2 = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vin, i32 0, i32 0
  %2 = load i32, i32* %index2, align 4, !tbaa !569
  %conv = trunc i32 %2 to i16
  %call3 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_output to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_audio* %vin)
  ret i32 %call3
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_audout(%struct.file* %file, i8* %fh, %struct.v4l2_audio* %vout) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %card = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 1
  %2 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %video_outputs = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %2, i32 0, i32 13
  %3 = load %struct.ivtv_card_output*, %struct.ivtv_card_output** %video_outputs, align 8, !tbaa !108
  %cmp = icmp eq %struct.ivtv_card_output* %3, null
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %index = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %vout, i32 0, i32 0
  %4 = load i32, i32* %index, align 4, !tbaa !569
  %cmp2 = icmp ne i32 %4, 0
  %. = select i1 %cmp2, i32 -22, i32 0
  br label %UnifiedReturnBlock

cleanup:                                          ; preds = %entry
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %cleanup, %lor.lhs.false
  %UnifiedRetVal = phi i32 [ %., %lor.lhs.false ], [ -22, %cleanup ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_cropcap(%struct.file* %file, i8* %fh, %struct.v4l2_cropcap* %cropcap) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %type = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %cropcap, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !571
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %3 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %3 to i32
  %tobool = icmp ne i32 %conv, 0
  %4 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 54, i32 11
  %pixelaspect = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %cropcap, i32 0, i32 3
  %numerator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %pixelaspect, i32 0, i32 0
  store i32 %cond, i32* %numerator, align 4, !tbaa !574
  %is_50hz2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %5 = load i8, i8* %is_50hz2, align 8, !tbaa !137
  %conv3 = zext i8 %5 to i32
  %tobool4 = icmp ne i32 %conv3, 0
  %6 = zext i1 %tobool4 to i64
  br label %cleanup.sink.split

if.else:                                          ; preds = %entry
  %type7 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %cropcap, i32 0, i32 0
  %7 = load i32, i32* %type7, align 4, !tbaa !571
  %cmp8 = icmp eq i32 %7, 2
  br i1 %cmp8, label %if.then10, label %cleanup

if.then10:                                        ; preds = %if.else
  %is_out_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 29
  %8 = load i8, i8* %is_out_50hz, align 2, !tbaa !244
  %conv11 = zext i8 %8 to i32
  %tobool12 = icmp ne i32 %conv11, 0
  %9 = zext i1 %tobool12 to i64
  %cond13 = select i1 %tobool12, i32 54, i32 11
  %pixelaspect14 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %cropcap, i32 0, i32 3
  %numerator15 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %pixelaspect14, i32 0, i32 0
  store i32 %cond13, i32* %numerator15, align 4, !tbaa !574
  %is_out_50hz16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 29
  %10 = load i8, i8* %is_out_50hz16, align 2, !tbaa !244
  %conv17 = zext i8 %10 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  %11 = zext i1 %tobool18 to i64
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.then10, %if.then
  %tobool4.sink = phi i1 [ %tobool4, %if.then ], [ %tobool18, %if.then10 ]
  %cond5 = select i1 %tobool4.sink, i32 59, i32 10
  %pixelaspect6 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %cropcap, i32 0, i32 3
  %denominator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %pixelaspect6, i32 0, i32 1
  store i32 %cond5, i32* %denominator, align 4, !tbaa !575
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.else
  %retval.0 = phi i32 [ -22, %if.else ], [ 0, %cleanup.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_selection(%struct.file* %file, i8* %fh, %struct.v4l2_selection* %sel) #0 {
entry:
  %r = alloca %struct.v4l2_rect, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %2 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %2) #8
  %3 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast (%struct.v4l2_rect* @ivtv_g_selection.r to i8*), i64 16, i32 4, i1 false)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %4 = load i32, i32* %type, align 8, !tbaa !157
  %type2 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 0
  %5 = load i32, i32* %type2, align 4, !tbaa !576
  %cmp = icmp eq i32 %5, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %target = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 1
  %6 = load i32, i32* %target, align 4, !tbaa !578
  %.off = add i32 %6, -1
  %SwitchLeaf = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %if.then
  %r3 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r3, i32 0, i32 0
  store i32 0, i32* %left, align 4, !tbaa !579
  %r4 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r4, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !580
  %r5 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r5, i32 0, i32 2
  store i32 720, i32* %width, align 4, !tbaa !581
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %7 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %7 to i32
  %tobool = icmp ne i32 %conv, 0
  %8 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 576, i32 480
  %r6 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r6, i32 0, i32 3
  store i32 %cond, i32* %height, align 4, !tbaa !582
  br label %cleanup

if.end:                                           ; preds = %entry
  %type7 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 0
  %9 = load i32, i32* %type7, align 4, !tbaa !576
  %cmp8 = icmp ne i32 %9, 2
  br i1 %cmp8, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %10 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %10, 2
  %tobool10 = icmp ne i32 %and, 0
  br i1 %tobool10, label %if.end12, label %cleanup

if.end12:                                         ; preds = %lor.lhs.false
  %target13 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 1
  %11 = load i32, i32* %target13, align 4, !tbaa !578
  %Pivot = icmp slt i32 %11, 257
  br i1 %Pivot, label %LeafBlock2, label %LeafBlock4

LeafBlock4:                                       ; preds = %if.end12
  %.off5 = add i32 %11, -257
  %SwitchLeaf6 = icmp ule i32 %.off5, 1
  br i1 %SwitchLeaf6, label %sw.bb22, label %cleanup

LeafBlock2:                                       ; preds = %if.end12
  %SwitchLeaf3 = icmp eq i32 %11, 256
  br i1 %SwitchLeaf3, label %sw.bb14, label %cleanup

sw.bb14:                                          ; preds = %LeafBlock2
  %cmp15 = icmp eq i32 %4, 8
  %r18 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  br i1 %cmp15, label %if.then17, label %if.else

if.then17:                                        ; preds = %sw.bb14
  %main_rect = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 66
  %12 = bitcast %struct.v4l2_rect* %r18 to i8*
  %13 = bitcast %struct.v4l2_rect* %main_rect to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 16, i32 4, i1 false), !tbaa.struct !504
  br label %cleanup

if.else:                                          ; preds = %sw.bb14
  %main_rect20 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 98
  %14 = bitcast %struct.v4l2_rect* %r18 to i8*
  %15 = bitcast %struct.v4l2_rect* %main_rect20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 16, i32 4, i1 false), !tbaa.struct !504
  br label %cleanup

sw.bb22:                                          ; preds = %LeafBlock4
  %is_out_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 29
  %16 = load i8, i8* %is_out_50hz, align 2, !tbaa !244
  %conv23 = zext i8 %16 to i32
  %tobool24 = icmp ne i32 %conv23, 0
  %17 = zext i1 %tobool24 to i64
  %cond25 = select i1 %tobool24, i32 576, i32 480
  %height26 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  store i32 %cond25, i32* %height26, align 4, !tbaa !583
  %cmp27 = icmp eq i32 %4, 8
  br i1 %cmp27, label %land.lhs.true, label %if.end34

land.lhs.true:                                    ; preds = %sw.bb22
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 40
  %18 = load i8, i8* %track_osd, align 8, !tbaa !568
  %conv29 = zext i8 %18 to i32
  %tobool30 = icmp ne i32 %conv29, 0
  br i1 %tobool30, label %if.then31, label %if.end34

if.then31:                                        ; preds = %land.lhs.true
  %osd_full_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 47
  %19 = load i32, i32* %osd_full_w, align 4, !tbaa !506
  %width32 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 2
  store i32 %19, i32* %width32, align 4, !tbaa !584
  %osd_full_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 48
  %20 = load i32, i32* %osd_full_h, align 8, !tbaa !507
  %height33 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  store i32 %20, i32* %height33, align 4, !tbaa !583
  br label %if.end34

if.end34:                                         ; preds = %if.then31, %land.lhs.true, %sw.bb22
  %r35 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %21 = bitcast %struct.v4l2_rect* %r35 to i8*
  %22 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 16, i32 4, i1 false), !tbaa.struct !504
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %if.else, %if.then17, %LeafBlock2, %LeafBlock4, %lor.lhs.false, %if.end, %sw.bb, %if.then
  %retval.0 = phi i32 [ 0, %sw.bb ], [ 0, %if.end34 ], [ -22, %if.then ], [ -22, %lor.lhs.false ], [ -22, %if.end ], [ 0, %if.else ], [ 0, %if.then17 ], [ -22, %LeafBlock2 ], [ -22, %LeafBlock4 ]
  %23 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %23) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_selection(%struct.file* %file, i8* %fh, %struct.v4l2_selection* %sel) #0 {
entry:
  %r = alloca %struct.v4l2_rect, align 4
  %__UNIQUE_ID_min1_38 = alloca i32, align 4
  %__UNIQUE_ID_max1_36 = alloca i32, align 4
  %__UNIQUE_ID_max2_37 = alloca i32, align 4
  %__UNIQUE_ID_min2_39 = alloca i32, align 4
  %__UNIQUE_ID_min1_42 = alloca i32, align 4
  %__UNIQUE_ID_max1_40 = alloca i32, align 4
  %__UNIQUE_ID_max2_41 = alloca i32, align 4
  %__UNIQUE_ID_min2_43 = alloca i32, align 4
  %__UNIQUE_ID_min1_46 = alloca i32, align 4
  %__UNIQUE_ID_min1_44 = alloca i32, align 4
  %__UNIQUE_ID_min2_45 = alloca i32, align 4
  %__UNIQUE_ID_min2_47 = alloca i32, align 4
  %__UNIQUE_ID_min1_50 = alloca i32, align 4
  %__UNIQUE_ID_min1_48 = alloca i32, align 4
  %__UNIQUE_ID_min2_49 = alloca i32, align 4
  %__UNIQUE_ID_min2_51 = alloca i32, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 90
  %2 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %2) #8
  %3 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* bitcast (%struct.v4l2_rect* @ivtv_g_selection.r to i8*), i64 16, i32 4, i1 false)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %4 = load i32, i32* %type, align 8, !tbaa !157
  %type2 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 0
  %5 = load i32, i32* %type2, align 4, !tbaa !576
  %cmp = icmp ne i32 %5, 2
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %6 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %6, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %lor.lhs.false
  %target = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 1
  %7 = load i32, i32* %target, align 4, !tbaa !578
  %cmp3 = icmp ne i32 %7, 256
  br i1 %cmp3, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %type6 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 0
  %8 = load i32, i32* %type6, align 4, !tbaa !576
  %cmp7 = icmp ne i32 %8, 2
  br i1 %cmp7, label %cleanup, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %if.end5
  %v4l2_cap9 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %9 = load i32, i32* %v4l2_cap9, align 4, !tbaa !172
  %and10 = and i32 %9, 2
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.end13, label %cleanup

if.end13:                                         ; preds = %lor.lhs.false8
  %is_out_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 29
  %10 = load i8, i8* %is_out_50hz, align 2, !tbaa !244
  %conv = zext i8 %10 to i32
  %tobool14 = icmp ne i32 %conv, 0
  %11 = zext i1 %tobool14 to i64
  %cond = select i1 %tobool14, i32 576, i32 480
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  store i32 %cond, i32* %height, align 4, !tbaa !583
  %cmp15 = icmp eq i32 %4, 8
  br i1 %cmp15, label %land.lhs.true, label %if.end21

land.lhs.true:                                    ; preds = %if.end13
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 40
  %12 = load i8, i8* %track_osd, align 8, !tbaa !568
  %conv17 = zext i8 %12 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  br i1 %tobool18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %land.lhs.true
  %osd_full_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 47
  %13 = load i32, i32* %osd_full_w, align 4, !tbaa !506
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 2
  store i32 %13, i32* %width, align 4, !tbaa !584
  %osd_full_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 48
  %14 = load i32, i32* %osd_full_h, align 8, !tbaa !507
  %height20 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  store i32 %14, i32* %height20, align 4, !tbaa !583
  br label %if.end21

if.end21:                                         ; preds = %if.then19, %land.lhs.true, %if.end13
  %15 = bitcast i32* %__UNIQUE_ID_min1_38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #8
  %16 = bitcast i32* %__UNIQUE_ID_max1_36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %16) #8
  %r22 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width23 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r22, i32 0, i32 2
  %17 = load i32, i32* %width23, align 4, !tbaa !581
  store i32 %17, i32* %__UNIQUE_ID_max1_36, align 4, !tbaa !120
  %18 = bitcast i32* %__UNIQUE_ID_max2_37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %18) #8
  store i32 16, i32* %__UNIQUE_ID_max2_37, align 4, !tbaa !120
  %cmp24 = icmp eq i32* %__UNIQUE_ID_max1_36, %__UNIQUE_ID_max2_37
  %conv25 = zext i1 %cmp24 to i32
  %19 = load i32, i32* %__UNIQUE_ID_max1_36, align 4, !tbaa !120
  %20 = load i32, i32* %__UNIQUE_ID_max2_37, align 4, !tbaa !120
  %cmp26 = icmp ugt i32 %19, %20
  %21 = load i32, i32* %__UNIQUE_ID_max1_36, align 4
  %22 = load i32, i32* %__UNIQUE_ID_max2_37, align 4
  %cond28 = select i1 %cmp26, i32 %21, i32 %22
  %23 = bitcast i32* %__UNIQUE_ID_max2_37 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %23) #8
  %24 = bitcast i32* %__UNIQUE_ID_max1_36 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %24) #8
  store i32 %cond28, i32* %__UNIQUE_ID_min1_38, align 4, !tbaa !120
  %25 = bitcast i32* %__UNIQUE_ID_min2_39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %25) #8
  %width29 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 2
  %26 = load i32, i32* %width29, align 4, !tbaa !584
  store i32 %26, i32* %__UNIQUE_ID_min2_39, align 4, !tbaa !120
  %cmp30 = icmp eq i32* %__UNIQUE_ID_min1_38, %__UNIQUE_ID_min2_39
  %conv31 = zext i1 %cmp30 to i32
  %27 = load i32, i32* %__UNIQUE_ID_min1_38, align 4, !tbaa !120
  %28 = load i32, i32* %__UNIQUE_ID_min2_39, align 4, !tbaa !120
  %cmp33 = icmp ult i32 %27, %28
  %29 = load i32, i32* %__UNIQUE_ID_min1_38, align 4
  %30 = load i32, i32* %__UNIQUE_ID_min2_39, align 4
  %cond38 = select i1 %cmp33, i32 %29, i32 %30
  %31 = bitcast i32* %__UNIQUE_ID_min2_39 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %31) #8
  %32 = bitcast i32* %__UNIQUE_ID_min1_38 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #8
  %r39 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width40 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r39, i32 0, i32 2
  store i32 %cond38, i32* %width40, align 4, !tbaa !581
  %33 = bitcast i32* %__UNIQUE_ID_min1_42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #8
  %34 = bitcast i32* %__UNIQUE_ID_max1_40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %34) #8
  %r41 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height42 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r41, i32 0, i32 3
  %35 = load i32, i32* %height42, align 4, !tbaa !582
  store i32 %35, i32* %__UNIQUE_ID_max1_40, align 4, !tbaa !120
  %36 = bitcast i32* %__UNIQUE_ID_max2_41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %36) #8
  store i32 16, i32* %__UNIQUE_ID_max2_41, align 4, !tbaa !120
  %cmp43 = icmp eq i32* %__UNIQUE_ID_max1_40, %__UNIQUE_ID_max2_41
  %conv44 = zext i1 %cmp43 to i32
  %37 = load i32, i32* %__UNIQUE_ID_max1_40, align 4, !tbaa !120
  %38 = load i32, i32* %__UNIQUE_ID_max2_41, align 4, !tbaa !120
  %cmp46 = icmp ugt i32 %37, %38
  %39 = load i32, i32* %__UNIQUE_ID_max1_40, align 4
  %40 = load i32, i32* %__UNIQUE_ID_max2_41, align 4
  %cond51 = select i1 %cmp46, i32 %39, i32 %40
  %41 = bitcast i32* %__UNIQUE_ID_max2_41 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %41) #8
  %42 = bitcast i32* %__UNIQUE_ID_max1_40 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %42) #8
  store i32 %cond51, i32* %__UNIQUE_ID_min1_42, align 4, !tbaa !120
  %43 = bitcast i32* %__UNIQUE_ID_min2_43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #8
  %height52 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  %44 = load i32, i32* %height52, align 4, !tbaa !583
  store i32 %44, i32* %__UNIQUE_ID_min2_43, align 4, !tbaa !120
  %cmp53 = icmp eq i32* %__UNIQUE_ID_min1_42, %__UNIQUE_ID_min2_43
  %conv54 = zext i1 %cmp53 to i32
  %45 = load i32, i32* %__UNIQUE_ID_min1_42, align 4, !tbaa !120
  %46 = load i32, i32* %__UNIQUE_ID_min2_43, align 4, !tbaa !120
  %cmp56 = icmp ult i32 %45, %46
  %47 = load i32, i32* %__UNIQUE_ID_min1_42, align 4
  %48 = load i32, i32* %__UNIQUE_ID_min2_43, align 4
  %cond61 = select i1 %cmp56, i32 %47, i32 %48
  %49 = bitcast i32* %__UNIQUE_ID_min2_43 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %49) #8
  %50 = bitcast i32* %__UNIQUE_ID_min1_42 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %50) #8
  %r62 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height63 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r62, i32 0, i32 3
  store i32 %cond61, i32* %height63, align 4, !tbaa !582
  %51 = bitcast i32* %__UNIQUE_ID_min1_46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %51) #8
  %52 = bitcast i32* %__UNIQUE_ID_min1_44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %52) #8
  %r64 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r64, i32 0, i32 0
  %53 = load i32, i32* %left, align 4, !tbaa !579
  store i32 %53, i32* %__UNIQUE_ID_min1_44, align 4, !tbaa !120
  %54 = bitcast i32* %__UNIQUE_ID_min2_45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %54) #8
  store i32 0, i32* %__UNIQUE_ID_min2_45, align 4, !tbaa !120
  %cmp65 = icmp eq i32* %__UNIQUE_ID_min1_44, %__UNIQUE_ID_min2_45
  %conv66 = zext i1 %cmp65 to i32
  %55 = load i32, i32* %__UNIQUE_ID_min1_44, align 4, !tbaa !120
  %56 = load i32, i32* %__UNIQUE_ID_min2_45, align 4, !tbaa !120
  %cmp68 = icmp ugt i32 %55, %56
  %57 = load i32, i32* %__UNIQUE_ID_min1_44, align 4
  %58 = load i32, i32* %__UNIQUE_ID_min2_45, align 4
  %cond73 = select i1 %cmp68, i32 %57, i32 %58
  %59 = bitcast i32* %__UNIQUE_ID_min2_45 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #8
  %60 = bitcast i32* %__UNIQUE_ID_min1_44 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %60) #8
  store i32 %cond73, i32* %__UNIQUE_ID_min1_46, align 4, !tbaa !120
  %61 = bitcast i32* %__UNIQUE_ID_min2_47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %61) #8
  %width74 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 2
  %62 = load i32, i32* %width74, align 4, !tbaa !584
  %r75 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width76 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r75, i32 0, i32 2
  %63 = load i32, i32* %width76, align 4, !tbaa !581
  %sub = sub i32 %62, %63
  store i32 %sub, i32* %__UNIQUE_ID_min2_47, align 4, !tbaa !120
  %cmp77 = icmp eq i32* %__UNIQUE_ID_min1_46, %__UNIQUE_ID_min2_47
  %conv78 = zext i1 %cmp77 to i32
  %64 = load i32, i32* %__UNIQUE_ID_min1_46, align 4, !tbaa !120
  %65 = load i32, i32* %__UNIQUE_ID_min2_47, align 4, !tbaa !120
  %cmp80 = icmp ult i32 %64, %65
  %66 = load i32, i32* %__UNIQUE_ID_min1_46, align 4
  %67 = load i32, i32* %__UNIQUE_ID_min2_47, align 4
  %cond85 = select i1 %cmp80, i32 %66, i32 %67
  %68 = bitcast i32* %__UNIQUE_ID_min2_47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #8
  %69 = bitcast i32* %__UNIQUE_ID_min1_46 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %69) #8
  %r86 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %left87 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r86, i32 0, i32 0
  store i32 %cond85, i32* %left87, align 4, !tbaa !579
  %70 = bitcast i32* %__UNIQUE_ID_min1_50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #8
  %71 = bitcast i32* %__UNIQUE_ID_min1_48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %71) #8
  %r88 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r88, i32 0, i32 1
  %72 = load i32, i32* %top, align 4, !tbaa !580
  store i32 %72, i32* %__UNIQUE_ID_min1_48, align 4, !tbaa !120
  %73 = bitcast i32* %__UNIQUE_ID_min2_49 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #8
  store i32 0, i32* %__UNIQUE_ID_min2_49, align 4, !tbaa !120
  %cmp89 = icmp eq i32* %__UNIQUE_ID_min1_48, %__UNIQUE_ID_min2_49
  %conv90 = zext i1 %cmp89 to i32
  %74 = load i32, i32* %__UNIQUE_ID_min1_48, align 4, !tbaa !120
  %75 = load i32, i32* %__UNIQUE_ID_min2_49, align 4, !tbaa !120
  %cmp92 = icmp ugt i32 %74, %75
  %76 = load i32, i32* %__UNIQUE_ID_min1_48, align 4
  %77 = load i32, i32* %__UNIQUE_ID_min2_49, align 4
  %cond97 = select i1 %cmp92, i32 %76, i32 %77
  %78 = bitcast i32* %__UNIQUE_ID_min2_49 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %78) #8
  %79 = bitcast i32* %__UNIQUE_ID_min1_48 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %79) #8
  store i32 %cond97, i32* %__UNIQUE_ID_min1_50, align 4, !tbaa !120
  %80 = bitcast i32* %__UNIQUE_ID_min2_51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %80) #8
  %height98 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r, i32 0, i32 3
  %81 = load i32, i32* %height98, align 4, !tbaa !583
  %r99 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height100 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r99, i32 0, i32 3
  %82 = load i32, i32* %height100, align 4, !tbaa !582
  %sub101 = sub i32 %81, %82
  store i32 %sub101, i32* %__UNIQUE_ID_min2_51, align 4, !tbaa !120
  %cmp102 = icmp eq i32* %__UNIQUE_ID_min1_50, %__UNIQUE_ID_min2_51
  %conv103 = zext i1 %cmp102 to i32
  %83 = load i32, i32* %__UNIQUE_ID_min1_50, align 4, !tbaa !120
  %84 = load i32, i32* %__UNIQUE_ID_min2_51, align 4, !tbaa !120
  %cmp105 = icmp ult i32 %83, %84
  %85 = load i32, i32* %__UNIQUE_ID_min1_50, align 4
  %86 = load i32, i32* %__UNIQUE_ID_min2_51, align 4
  %cond110 = select i1 %cmp105, i32 %85, i32 %86
  %87 = bitcast i32* %__UNIQUE_ID_min2_51 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %87) #8
  %88 = bitcast i32* %__UNIQUE_ID_min1_50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %88) #8
  %r111 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %top112 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r111, i32 0, i32 1
  store i32 %cond110, i32* %top112, align 4, !tbaa !580
  %cmp113 = icmp eq i32 %4, 8
  br i1 %cmp113, label %if.then115, label %if.end117

if.then115:                                       ; preds = %if.end21
  %main_rect = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 66
  %r116 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %89 = bitcast %struct.v4l2_rect* %main_rect to i8*
  %90 = bitcast %struct.v4l2_rect* %r116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 16, i32 4, i1 false), !tbaa.struct !504
  br label %cleanup

if.end117:                                        ; preds = %if.end21
  %r118 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width119 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r118, i32 0, i32 2
  %91 = load i32, i32* %width119, align 4, !tbaa !581
  %r120 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height121 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r120, i32 0, i32 3
  %92 = load i32, i32* %height121, align 4, !tbaa !582
  %r122 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %left123 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r122, i32 0, i32 0
  %93 = load i32, i32* %left123, align 4, !tbaa !579
  %r124 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %top125 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %r124, i32 0, i32 1
  %94 = load i32, i32* %top125, align 4, !tbaa !580
  %call126 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %1, i32 86, i32 4, i32 %91, i32 %92, i32 %93, i32 %94)
  %tobool127 = icmp ne i32 %call126, 0
  br i1 %tobool127, label %cleanup, label %if.then128

if.then128:                                       ; preds = %if.end117
  %main_rect129 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 98
  %r130 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %95 = bitcast %struct.v4l2_rect* %main_rect129 to i8*
  %96 = bitcast %struct.v4l2_rect* %r130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 16, i32 4, i1 false), !tbaa.struct !504
  br label %cleanup

cleanup:                                          ; preds = %if.then128, %if.end117, %if.then115, %lor.lhs.false8, %if.end5, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.then115 ], [ 0, %if.then128 ], [ -22, %lor.lhs.false ], [ -22, %entry ], [ -22, %if.end ], [ -22, %lor.lhs.false8 ], [ -22, %if.end5 ], [ -22, %if.end117 ]
  %97 = bitcast %struct.v4l2_rect* %r to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %97) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_enc_index(%struct.file* %file, i8* %fh, %struct.v4l2_enc_idx* %idx) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %entry2 = getelementptr inbounds %struct.v4l2_enc_idx, %struct.v4l2_enc_idx* %idx, i32 0, i32 3
  %arraydecay = getelementptr inbounds [64 x %struct.v4l2_enc_idx_entry], [64 x %struct.v4l2_enc_idx_entry]* %entry2, i32 0, i32 0
  %pgm_info_write_idx = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 77
  %2 = load i32, i32* %pgm_info_write_idx, align 8, !tbaa !379
  %add = add i32 %2, 400
  %pgm_info_read_idx = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 78
  %3 = load i32, i32* %pgm_info_read_idx, align 4, !tbaa !585
  %sub = sub i32 %add, %3
  %rem = urem i32 %sub, 400
  %cmp = icmp sgt i32 %rem, 64
  %.rem = select i1 %cmp, i32 64, i32 %rem
  %entries3 = getelementptr inbounds %struct.v4l2_enc_idx, %struct.v4l2_enc_idx* %idx, i32 0, i32 0
  store i32 0, i32* %entries3, align 8, !tbaa !586
  %entries_cap = getelementptr inbounds %struct.v4l2_enc_idx, %struct.v4l2_enc_idx* %idx, i32 0, i32 1
  store i32 400, i32* %entries_cap, align 4, !tbaa !588
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call4 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %tobool = icmp ne i32 %call4, 0
  br i1 %tobool, label %if.end6, label %cleanup

if.end6:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end6
  %e.0 = phi %struct.v4l2_enc_idx_entry* [ %arraydecay, %if.end6 ], [ %e.1, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end6 ], [ %inc15, %for.inc ]
  %cmp7 = icmp slt i32 %i.0, %.rem
  br i1 %cmp7, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %pgm_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 79
  %pgm_info_read_idx8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 78
  %4 = load i32, i32* %pgm_info_read_idx8, align 4, !tbaa !585
  %add9 = add i32 %4, %i.0
  %rem10 = urem i32 %add9, 400
  %idxprom = zext i32 %rem10 to i64
  %arrayidx = getelementptr inbounds [400 x %struct.v4l2_enc_idx_entry], [400 x %struct.v4l2_enc_idx_entry]* %pgm_info, i64 0, i64 %idxprom
  %5 = bitcast %struct.v4l2_enc_idx_entry* %e.0 to i8*
  %6 = bitcast %struct.v4l2_enc_idx_entry* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 32, i32 8, i1 false), !tbaa.struct !589
  %flags = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %e.0, i32 0, i32 3
  %7 = load i32, i32* %flags, align 4, !tbaa !384
  %and = and i32 %7, 15
  %cmp11 = icmp ule i32 %and, 2
  br i1 %cmp11, label %if.then12, label %for.inc

if.then12:                                        ; preds = %for.body
  %entries13 = getelementptr inbounds %struct.v4l2_enc_idx, %struct.v4l2_enc_idx* %idx, i32 0, i32 0
  %8 = load i32, i32* %entries13, align 8, !tbaa !586
  %inc = add i32 %8, 1
  store i32 %inc, i32* %entries13, align 8, !tbaa !586
  %incdec.ptr = getelementptr inbounds %struct.v4l2_enc_idx_entry, %struct.v4l2_enc_idx_entry* %e.0, i32 1
  br label %for.inc

for.inc:                                          ; preds = %if.then12, %for.body
  %e.1 = phi %struct.v4l2_enc_idx_entry* [ %incdec.ptr, %if.then12 ], [ %e.0, %for.body ]
  %inc15 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %pgm_info_read_idx16 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 78
  %9 = load i32, i32* %pgm_info_read_idx16, align 4, !tbaa !585
  %entries17 = getelementptr inbounds %struct.v4l2_enc_idx, %struct.v4l2_enc_idx* %idx, i32 0, i32 0
  %10 = load i32, i32* %entries17, align 8, !tbaa !586
  %add18 = add i32 %9, %10
  %rem19 = urem i32 %add18, 400
  %pgm_info_read_idx20 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 78
  store i32 %rem19, i32* %pgm_info_read_idx20, align 4, !tbaa !585
  br label %cleanup

cleanup:                                          ; preds = %for.end, %entry
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_encoder_cmd(%struct.file* %file, i8* %fh, %struct.v4l2_encoder_cmd* %enc) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %cmd = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 0
  %2 = load i32, i32* %cmd, align 4, !tbaa !590
  %Pivot6 = icmp slt i32 %2, 2
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %entry
  %Pivot4 = icmp slt i32 %2, 3
  br i1 %Pivot4, label %do.body21, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock3
  %SwitchLeaf2 = icmp eq i32 %2, 3
  br i1 %SwitchLeaf2, label %do.body42, label %do.body64

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %2, 1
  br i1 %Pivot, label %LeafBlock, label %do.body5

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %2, 0
  br i1 %SwitchLeaf, label %do.body, label %do.body64

do.body:                                          ; preds = %LeafBlock
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 8, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10.388, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  %flags = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags, align 4, !tbaa !592
  %call3 = call i32 bitcast (i32 (%struct.ivtv_open_id*)* @ivtv_start_capture to i32 (%struct.ivtv_open_id.4300*)*)(%struct.ivtv_open_id.4300* %call)
  br label %cleanup

do.body5:                                         ; preds = %NodeBlock
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and6 = and i32 8, %4
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %do.end15

if.then8:                                         ; preds = %do.body5
  %v4l2_dev9 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name10 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev9, i32 0, i32 4
  %arraydecay11 = getelementptr inbounds [36 x i8], [36 x i8]* %name10, i32 0, i32 0
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.389, i32 0, i32 0), i8* %arraydecay11)
  br label %do.end15

do.end15:                                         ; preds = %if.then8, %do.body5
  %flags16 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  %5 = load i32, i32* %flags16, align 4, !tbaa !592
  %and17 = and i32 %5, 1
  store i32 %and17, i32* %flags16, align 4, !tbaa !592
  %flags18 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  %6 = load i32, i32* %flags18, align 4, !tbaa !592
  %and19 = and i32 %6, 1
  call void bitcast (void (%struct.ivtv_open_id*, i32)* @ivtv_stop_capture to void (%struct.ivtv_open_id.4300*, i32)*)(%struct.ivtv_open_id.4300* %call, i32 %and19)
  br label %cleanup

do.body21:                                        ; preds = %NodeBlock3
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and22 = and i32 8, %7
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %do.end31

if.then24:                                        ; preds = %do.body21
  %v4l2_dev25 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name26 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev25, i32 0, i32 4
  %arraydecay27 = getelementptr inbounds [36 x i8], [36 x i8]* %name26, i32 0, i32 0
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.390, i32 0, i32 0), i8* %arraydecay27)
  br label %do.end31

do.end31:                                         ; preds = %if.then24, %do.body21
  %flags32 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags32, align 4, !tbaa !592
  %capturing = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call33 = call i32 @atomic_read.306(%struct.atomic_t* %capturing)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.end36, label %cleanup

if.end36:                                         ; preds = %do.end31
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %call37 = call zeroext i1 @test_and_set_bit.393(i64 13, i64* %i_flags)
  br i1 %call37, label %cleanup, label %if.end39

if.end39:                                         ; preds = %if.end36
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_mute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  %call40 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %1, i32 210, i32 1, i32 0)
  br label %cleanup

do.body42:                                        ; preds = %LeafBlock1
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and43 = and i32 8, %8
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then45, label %do.end52

if.then45:                                        ; preds = %do.body42
  %v4l2_dev46 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name47 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev46, i32 0, i32 4
  %arraydecay48 = getelementptr inbounds [36 x i8], [36 x i8]* %name47, i32 0, i32 0
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13.391, i32 0, i32 0), i8* %arraydecay48)
  br label %do.end52

do.end52:                                         ; preds = %if.then45, %do.body42
  %flags53 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags53, align 4, !tbaa !592
  %capturing54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 43
  %call55 = call i32 @atomic_read.306(%struct.atomic_t* %capturing54)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.end58, label %cleanup

if.end58:                                         ; preds = %do.end52
  %i_flags59 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %call60 = call zeroext i1 @test_and_clear_bit.337(i64 13, i64* %i_flags59)
  br i1 %call60, label %if.end62, label %cleanup

if.end62:                                         ; preds = %if.end58
  %call63 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %1, i32 210, i32 1, i32 1)
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_unmute to void (%struct.ivtv*)*)(%struct.ivtv* %1)
  br label %cleanup

do.body64:                                        ; preds = %LeafBlock, %LeafBlock1
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and65 = and i32 8, %9
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.then67, label %cleanup

if.then67:                                        ; preds = %do.body64
  %v4l2_dev68 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name69 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev68, i32 0, i32 4
  %arraydecay70 = getelementptr inbounds [36 x i8], [36 x i8]* %name69, i32 0, i32 0
  %cmd71 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 0
  %10 = load i32, i32* %cmd71, align 4, !tbaa !590
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14.392, i32 0, i32 0), i8* %arraydecay70, i32 %10)
  br label %cleanup

cleanup:                                          ; preds = %if.then67, %do.body64, %if.end62, %if.end58, %do.end52, %if.end39, %if.end36, %do.end31, %do.end15, %do.end
  %retval.0 = phi i32 [ %call3, %do.end ], [ 0, %do.end15 ], [ -1, %do.end31 ], [ 0, %if.end36 ], [ -1, %do.end52 ], [ 0, %if.end58 ], [ -22, %if.then67 ], [ -22, %do.body64 ], [ 0, %if.end62 ], [ 0, %if.end39 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_encoder_cmd(%struct.file* %file, i8* %fh, %struct.v4l2_encoder_cmd* %enc) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %cmd = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 0
  %2 = load i32, i32* %cmd, align 4, !tbaa !590
  %Pivot6 = icmp slt i32 %2, 2
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %entry
  %Pivot4 = icmp slt i32 %2, 3
  br i1 %Pivot4, label %do.body18, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock3
  %SwitchLeaf2 = icmp eq i32 %2, 3
  br i1 %SwitchLeaf2, label %do.body31, label %do.body43

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %2, 1
  br i1 %Pivot, label %LeafBlock, label %do.body4

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %2, 0
  br i1 %SwitchLeaf, label %do.body, label %do.body43

do.body:                                          ; preds = %LeafBlock
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 8, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.10.388, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %do.body
  %flags = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags, align 4, !tbaa !592
  br label %cleanup

do.body4:                                         ; preds = %NodeBlock
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and5 = and i32 8, %4
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then7, label %do.end14

if.then7:                                         ; preds = %do.body4
  %v4l2_dev8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name9 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev8, i32 0, i32 4
  %arraydecay10 = getelementptr inbounds [36 x i8], [36 x i8]* %name9, i32 0, i32 0
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11.389, i32 0, i32 0), i8* %arraydecay10)
  br label %do.end14

do.end14:                                         ; preds = %if.then7, %do.body4
  %flags15 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  %5 = load i32, i32* %flags15, align 4, !tbaa !592
  %and16 = and i32 %5, 1
  store i32 %and16, i32* %flags15, align 4, !tbaa !592
  br label %cleanup

do.body18:                                        ; preds = %NodeBlock3
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and19 = and i32 8, %6
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %do.end28

if.then21:                                        ; preds = %do.body18
  %v4l2_dev22 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name23 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev22, i32 0, i32 4
  %arraydecay24 = getelementptr inbounds [36 x i8], [36 x i8]* %name23, i32 0, i32 0
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.12.390, i32 0, i32 0), i8* %arraydecay24)
  br label %do.end28

do.end28:                                         ; preds = %if.then21, %do.body18
  %flags29 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags29, align 4, !tbaa !592
  br label %cleanup

do.body31:                                        ; preds = %LeafBlock1
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and32 = and i32 8, %7
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %do.end41

if.then34:                                        ; preds = %do.body31
  %v4l2_dev35 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name36 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev35, i32 0, i32 4
  %arraydecay37 = getelementptr inbounds [36 x i8], [36 x i8]* %name36, i32 0, i32 0
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.13.391, i32 0, i32 0), i8* %arraydecay37)
  br label %do.end41

do.end41:                                         ; preds = %if.then34, %do.body31
  %flags42 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 1
  store i32 0, i32* %flags42, align 4, !tbaa !592
  br label %cleanup

do.body43:                                        ; preds = %LeafBlock, %LeafBlock1
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and44 = and i32 8, %8
  %tobool45 = icmp ne i32 %and44, 0
  br i1 %tobool45, label %if.then46, label %cleanup

if.then46:                                        ; preds = %do.body43
  %v4l2_dev47 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name48 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev47, i32 0, i32 4
  %arraydecay49 = getelementptr inbounds [36 x i8], [36 x i8]* %name48, i32 0, i32 0
  %cmd50 = getelementptr inbounds %struct.v4l2_encoder_cmd, %struct.v4l2_encoder_cmd* %enc, i32 0, i32 0
  %9 = load i32, i32* %cmd50, align 4, !tbaa !590
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.14.392, i32 0, i32 0), i8* %arraydecay49, i32 %9)
  br label %cleanup

cleanup:                                          ; preds = %if.then46, %do.body43, %do.end41, %do.end28, %do.end14, %do.end
  %retval.0 = phi i32 [ 0, %do.end ], [ 0, %do.end14 ], [ 0, %do.end28 ], [ 0, %do.end41 ], [ -22, %if.then46 ], [ -22, %do.body43 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_decoder_cmd(%struct.file* %file, i8* %fh, %struct.v4l2_decoder_cmd* %dec) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %2 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 8, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %cmd = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dec, i32 0, i32 0
  %4 = load i32, i32* %cmd, align 8, !tbaa !593
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15.387, i32 0, i32 0), i8* %arraydecay, i32 %4)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dec, i32 0)
  ret i32 %call3
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_try_decoder_cmd(%struct.file* %file, i8* %fh, %struct.v4l2_decoder_cmd* %dec) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %2 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 8, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %cmd = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dec, i32 0, i32 0
  %4 = load i32, i32* %cmd, align 8, !tbaa !593
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.16.386, i32 0, i32 0), i8* %arraydecay, i32 %4)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call3 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dec, i32 1)
  ret i32 %call3
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_tuner(%struct.file* %file, i8* %fh, %struct.v4l2_tuner* %vt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 0
  %2 = load i32, i32* %index, align 4, !tbaa !595
  %cmp = icmp ne i32 %2, 0
  br i1 %cmp, label %cleanup, label %do.body2

do.body2:                                         ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body2
  %list16.sink = phi %struct.list_head* [ %list16, %for.inc ], [ %subdevs, %do.body2 ]
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list16.sink, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next17, align 8, !tbaa !86
  %4 = bitcast %struct.list_head* %3 to i8*
  %add.ptr19 = getelementptr inbounds i8, i8* %4, i64 -128
  %5 = bitcast i8* %add.ptr19 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 1
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs4 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 2
  %cmp5 = icmp ne %struct.list_head* %list, %subdevs4
  br i1 %cmp5, label %for.body, label %do.end21

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %6 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %6, i32 0, i32 1
  %7 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner, align 8, !tbaa !255
  %tobool = icmp ne %struct.v4l2_subdev_tuner_ops* %7, null
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %8 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops6, align 8, !tbaa !79
  %tuner7 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %8, i32 0, i32 1
  %9 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner7, align 8, !tbaa !255
  %g_tuner = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %9, i32 0, i32 4
  %10 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %g_tuner, align 8, !tbaa !386
  %tobool8 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)* %10, null
  br i1 %tobool8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %land.lhs.true
  %ops10 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops10, align 8, !tbaa !79
  %tuner11 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 1
  %12 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner11, align 8, !tbaa !255
  %g_tuner12 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %12, i32 0, i32 4
  %13 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %g_tuner12, align 8, !tbaa !386
  %call13 = call i32 %13(%struct.v4l2_subdev* %5, %struct.v4l2_tuner* %vt)
  br label %for.inc

for.inc:                                          ; preds = %if.then9, %land.lhs.true, %for.body
  %list16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 1
  br label %for.cond

do.end21:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 2
  %14 = load i32, i32* %type, align 4, !tbaa !596
  %cmp22 = icmp eq i32 %14, 1
  %name = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  br i1 %cmp22, label %if.then23, label %if.else

if.then23:                                        ; preds = %do.end21
  %call24 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17.384, i32 0, i32 0), i64 32)
  br label %cleanup

if.else:                                          ; preds = %do.end21
  %call27 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.18.385, i32 0, i32 0), i64 32)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then23, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.else ], [ 0, %if.then23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_tuner(%struct.file* %file, i8* %fh, %struct.v4l2_tuner* %vt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %index = getelementptr inbounds %struct.v4l2_tuner, %struct.v4l2_tuner* %vt, i32 0, i32 0
  %2 = load i32, i32* %index, align 4, !tbaa !595
  %cmp = icmp ne i32 %2, 0
  br i1 %cmp, label %cleanup, label %do.body2

do.body2:                                         ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body2
  %list16.sink = phi %struct.list_head* [ %list16, %for.inc ], [ %subdevs, %do.body2 ]
  %next17 = getelementptr inbounds %struct.list_head, %struct.list_head* %list16.sink, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next17, align 8, !tbaa !86
  %4 = bitcast %struct.list_head* %3 to i8*
  %add.ptr19 = getelementptr inbounds i8, i8* %4, i64 -128
  %5 = bitcast i8* %add.ptr19 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 1
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs4 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 2
  %cmp5 = icmp ne %struct.list_head* %list, %subdevs4
  br i1 %cmp5, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %6 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %6, i32 0, i32 1
  %7 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner, align 8, !tbaa !255
  %tobool = icmp ne %struct.v4l2_subdev_tuner_ops* %7, null
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %8 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops6, align 8, !tbaa !79
  %tuner7 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %8, i32 0, i32 1
  %9 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner7, align 8, !tbaa !255
  %s_tuner = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %9, i32 0, i32 5
  %10 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %s_tuner, align 8, !tbaa !597
  %tobool8 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)* %10, null
  br i1 %tobool8, label %if.then9, label %for.inc

if.then9:                                         ; preds = %land.lhs.true
  %ops10 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops10, align 8, !tbaa !79
  %tuner11 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 1
  %12 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner11, align 8, !tbaa !255
  %s_tuner12 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %12, i32 0, i32 5
  %13 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)** %s_tuner12, align 8, !tbaa !597
  %call13 = call i32 %13(%struct.v4l2_subdev* %5, %struct.v4l2_tuner* %vt)
  br label %for.inc

for.inc:                                          ; preds = %if.then9, %land.lhs.true, %for.body
  %list16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_frequency(%struct.file* %file, i8* %fh, %struct.v4l2_frequency* %vf) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %2 = bitcast i8* %fh to %struct.v4l2_fh*
  %call2 = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %2)
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call2, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %vdev = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 0
  %vfl_dir = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 14
  %4 = load i32, i32* %vfl_dir, align 4, !tbaa !497
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %tuner = getelementptr inbounds %struct.v4l2_frequency, %struct.v4l2_frequency* %vf, i32 0, i32 0
  %5 = load i32, i32* %tuner, align 4, !tbaa !162
  %cmp = icmp ne i32 %5, 0
  br i1 %cmp, label %cleanup, label %do.body5

do.body5:                                         ; preds = %if.end
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body5
  %list21.sink = phi %struct.list_head* [ %list21, %for.inc ], [ %subdevs, %do.body5 ]
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %list21.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next22, align 8, !tbaa !86
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr24 = getelementptr inbounds i8, i8* %7, i64 -128
  %8 = bitcast i8* %add.ptr24 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 1
  %v4l2_dev6 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs7 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev6, i32 0, i32 2
  %cmp8 = icmp ne %struct.list_head* %list, %subdevs7
  br i1 %cmp8, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %tuner9 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 1
  %10 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner9, align 8, !tbaa !255
  %tobool10 = icmp ne %struct.v4l2_subdev_tuner_ops* %10, null
  br i1 %tobool10, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops11 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops11, align 8, !tbaa !79
  %tuner12 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 1
  %12 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner12, align 8, !tbaa !255
  %g_frequency = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %12, i32 0, i32 2
  %13 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)** %g_frequency, align 8, !tbaa !598
  %tobool13 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)* %13, null
  br i1 %tobool13, label %if.then14, label %for.inc

if.then14:                                        ; preds = %land.lhs.true
  %ops15 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops15, align 8, !tbaa !79
  %tuner16 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 1
  %15 = load %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_tuner_ops** %tuner16, align 8, !tbaa !255
  %g_frequency17 = getelementptr inbounds %struct.v4l2_subdev_tuner_ops, %struct.v4l2_subdev_tuner_ops* %15, i32 0, i32 2
  %16 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)** %g_frequency17, align 8, !tbaa !598
  %call18 = call i32 %16(%struct.v4l2_subdev* %8, %struct.v4l2_frequency* %vf)
  br label %for.inc

for.inc:                                          ; preds = %if.then14, %land.lhs.true, %for.body
  %list21 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %8, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %if.end, %entry
  %retval.0 = phi i32 [ -25, %entry ], [ -22, %if.end ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_sliced_vbi_cap(%struct.file* %file, i8* %fh, %struct.v4l2_sliced_vbi_cap* %cap) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %is_50hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %2 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %conv = zext i8 %2 to i32
  %tobool = icmp ne i32 %conv, 0
  %3 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 17409, i32 4096
  %type = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 2
  %4 = load i32, i32* %type, align 4, !tbaa !599
  %cmp = icmp eq i32 %4, 6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc17, %if.then
  %f.0 = phi i32 [ 0, %if.then ], [ %inc18, %for.inc17 ]
  %cmp3 = icmp slt i32 %f.0, 2
  br i1 %cmp3, label %for.body, label %if.end45

for.body:                                         ; preds = %for.cond
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %l.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp6 = icmp slt i32 %l.0, 24
  br i1 %cmp6, label %for.body8, label %for.inc17

for.body8:                                        ; preds = %for.cond5
  %is_50hz9 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 27
  %5 = load i8, i8* %is_50hz9, align 8, !tbaa !137
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 @valid_service_line(i32 %f.0, i32 %l.0, i32 %conv10)
  %tobool12 = icmp ne i32 %call11, 0
  br i1 %tobool12, label %if.then13, label %for.inc

if.then13:                                        ; preds = %for.body8
  %conv14 = trunc i32 %cond to i16
  %service_lines = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 1
  %idxprom = sext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines, i64 0, i64 %idxprom
  %idxprom15 = sext i32 %l.0 to i64
  %arrayidx16 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx, i64 0, i64 %idxprom15
  store i16 %conv14, i16* %arrayidx16, align 2, !tbaa !151
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %for.body8
  %inc = add nsw i32 %l.0, 1
  br label %for.cond5

for.inc17:                                        ; preds = %for.cond5
  %inc18 = add nsw i32 %f.0, 1
  br label %for.cond

if.else:                                          ; preds = %entry
  %type20 = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 2
  %6 = load i32, i32* %type20, align 4, !tbaa !599
  %cmp21 = icmp eq i32 %6, 7
  br i1 %cmp21, label %if.then23, label %cleanup

if.then23:                                        ; preds = %if.else
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %7 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %7, 128
  %tobool24 = icmp ne i32 %and, 0
  br i1 %tobool24, label %if.end26, label %cleanup

if.end26:                                         ; preds = %if.then23
  %is_60hz = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 28
  %8 = load i8, i8* %is_60hz, align 1, !tbaa !134
  %tobool27 = icmp ne i8 %8, 0
  %service_lines29 = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 1
  %arrayidx30 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines29, i64 0, i64 0
  %. = select i1 %tobool27, i64 21, i64 23
  %.5 = select i1 %tobool27, i16 4096, i16 16384
  %.6 = select i1 %tobool27, i64 1, i64 0
  %.7 = select i1 %tobool27, i64 21, i64 16
  %.8 = select i1 %tobool27, i16 4096, i16 1024
  %arrayidx38 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx30, i64 0, i64 %.
  store i16 %.5, i16* %arrayidx38, align 2, !tbaa !151
  %service_lines39 = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines39, i64 0, i64 %.6
  %arrayidx41 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx40, i64 0, i64 %.7
  store i16 %.8, i16* %arrayidx41, align 2, !tbaa !151
  br label %if.end45

if.end45:                                         ; preds = %if.end26, %for.cond
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc63, %if.end45
  %set.0 = phi i32 [ 0, %if.end45 ], [ %set.1, %for.inc63 ]
  %f.1 = phi i32 [ 0, %if.end45 ], [ %inc64, %for.inc63 ]
  %cmp47 = icmp slt i32 %f.1, 2
  br i1 %cmp47, label %for.body49, label %for.end65

for.body49:                                       ; preds = %for.cond46
  br label %for.cond50

for.cond50:                                       ; preds = %for.body53, %for.body49
  %set.1 = phi i32 [ %set.0, %for.body49 ], [ %or, %for.body53 ]
  %l.1 = phi i32 [ 0, %for.body49 ], [ %inc61, %for.body53 ]
  %cmp51 = icmp slt i32 %l.1, 24
  br i1 %cmp51, label %for.body53, label %for.inc63

for.body53:                                       ; preds = %for.cond50
  %service_lines54 = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 1
  %idxprom55 = sext i32 %f.1 to i64
  %arrayidx56 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines54, i64 0, i64 %idxprom55
  %idxprom57 = sext i32 %l.1 to i64
  %arrayidx58 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx56, i64 0, i64 %idxprom57
  %9 = load i16, i16* %arrayidx58, align 2, !tbaa !151
  %conv59 = zext i16 %9 to i32
  %or = or i32 %set.1, %conv59
  %inc61 = add nsw i32 %l.1, 1
  br label %for.cond50

for.inc63:                                        ; preds = %for.cond50
  %inc64 = add nsw i32 %f.1, 1
  br label %for.cond46

for.end65:                                        ; preds = %for.cond46
  %conv66 = trunc i32 %set.0 to i16
  %service_set = getelementptr inbounds %struct.v4l2_sliced_vbi_cap, %struct.v4l2_sliced_vbi_cap* %cap, i32 0, i32 0
  store i16 %conv66, i16* %service_set, align 4, !tbaa !601
  br label %cleanup

cleanup:                                          ; preds = %for.end65, %if.then23, %if.else
  %retval.0 = phi i32 [ 0, %for.end65 ], [ -22, %if.then23 ], [ -22, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_log_status(%struct.file* %file, i8* %fh) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %vidin = alloca %struct.v4l2_input, align 8
  %audin = alloca %struct.v4l2_audio, align 4
  %tv = alloca %struct.tveeprom, align 4
  %vidout = alloca %struct.v4l2_output, align 8
  %audout = alloca %struct.v4l2_audio, align 4
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %2 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %2) #8
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 8
  %3 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %3, 2
  %4 = bitcast %struct.v4l2_input* %vidin to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* %4) #8
  %5 = bitcast %struct.v4l2_audio* %audin to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* %5) #8
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %card_name = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 2
  %6 = load i8*, i8** %card_name, align 8, !tbaa !267
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.19.348, i32 0, i32 0), i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.349, i32 0, i32 0), i8* %6)
  %hw_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 9
  %7 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %and3 = and i32 %7, 128
  %tobool = icmp ne i32 %and3, 0
  br i1 %tobool, label %if.then, label %do.body4

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.tveeprom* %tv to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %8) #8
  call void bitcast (void (%struct.ivtv.1060*, %struct.tveeprom*)* @ivtv_read_eeprom to void (%struct.ivtv*, %struct.tveeprom*)*)(%struct.ivtv* %1, %struct.tveeprom* %tv)
  %9 = bitcast %struct.tveeprom* %tv to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %9) #8
  br label %do.body4

do.body4:                                         ; preds = %if.then, %entry
  %v4l2_dev5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev5, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.body4
  %list19.sink = phi %struct.list_head* [ %list19, %for.inc ], [ %subdevs, %do.body4 ]
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %list19.sink, i32 0, i32 0
  %10 = load %struct.list_head*, %struct.list_head** %next20, align 8, !tbaa !86
  %11 = bitcast %struct.list_head* %10 to i8*
  %add.ptr22 = getelementptr inbounds i8, i8* %11, i64 -128
  %12 = bitcast i8* %add.ptr22 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 1
  %v4l2_dev6 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %subdevs7 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev6, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs7
  br i1 %cmp, label %for.body, label %do.end24

for.body:                                         ; preds = %for.cond
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 6
  %13 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %core = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %13, i32 0, i32 0
  %14 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core, align 8, !tbaa !159
  %tobool8 = icmp ne %struct.v4l2_subdev_core_ops* %14, null
  br i1 %tobool8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops9 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 6
  %15 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops9, align 8, !tbaa !79
  %core10 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %15, i32 0, i32 0
  %16 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core10, align 8, !tbaa !159
  %log_status = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %16, i32 0, i32 0
  %17 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %log_status, align 8, !tbaa !602
  %tobool11 = icmp ne i32 (%struct.v4l2_subdev*)* %17, null
  br i1 %tobool11, label %if.then12, label %for.inc

if.then12:                                        ; preds = %land.lhs.true
  %ops13 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 6
  %18 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops13, align 8, !tbaa !79
  %core14 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %18, i32 0, i32 0
  %19 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core14, align 8, !tbaa !159
  %log_status15 = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %19, i32 0, i32 0
  %20 = load i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*)** %log_status15, align 8, !tbaa !602
  %call16 = call i32 %20(%struct.v4l2_subdev* %12)
  br label %for.inc

for.inc:                                          ; preds = %if.then12, %land.lhs.true, %for.body
  %list19 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %12, i32 0, i32 1
  br label %for.cond

do.end24:                                         ; preds = %for.cond
  %active_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 33
  %21 = load i32, i32* %active_input, align 4, !tbaa !89
  %conv = trunc i32 %21 to i16
  %call25 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_input*)* @ivtv_get_input to i32 (%struct.ivtv*, i16, %struct.v4l2_input*)*)(%struct.ivtv* %1, i16 zeroext %conv, %struct.v4l2_input* %vidin)
  %audio_input = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 32
  %22 = load i32, i32* %audio_input, align 8, !tbaa !66
  %conv26 = trunc i32 %22 to i16
  %call27 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_input to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext %conv26, %struct.v4l2_audio* %audin)
  %v4l2_dev28 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name29 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev28, i32 0, i32 4
  %arraydecay30 = getelementptr inbounds [36 x i8], [36 x i8]* %name29, i32 0, i32 0
  %name31 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %vidin, i32 0, i32 1
  %arraydecay32 = getelementptr inbounds [32 x i8], [32 x i8]* %name31, i32 0, i32 0
  %call33 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.21.350, i32 0, i32 0), i8* %arraydecay30, i8* %arraydecay32)
  %v4l2_dev34 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name35 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev34, i32 0, i32 4
  %arraydecay36 = getelementptr inbounds [36 x i8], [36 x i8]* %name35, i32 0, i32 0
  %name37 = getelementptr inbounds %struct.v4l2_audio, %struct.v4l2_audio* %audin, i32 0, i32 1
  %arraydecay38 = getelementptr inbounds [32 x i8], [32 x i8]* %name37, i32 0, i32 0
  %dualwatch_stereo_mode = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 88
  %23 = load i32, i32* %dualwatch_stereo_mode, align 8, !tbaa !121
  %cmp39 = icmp eq i32 %23, 2
  %24 = zext i1 %cmp39 to i64
  %cond = select i1 %cmp39, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.23.351, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.599, i32 0, i32 0)
  %call41 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.22.353, i32 0, i32 0), i8* %arraydecay36, i8* %arraydecay38, i8* %cond)
  %tobool42 = icmp ne i32 %and, 0
  br i1 %tobool42, label %if.then43, label %if.end87

if.then43:                                        ; preds = %do.end24
  %25 = bitcast %struct.v4l2_output* %vidout to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %25) #8
  %26 = bitcast %struct.v4l2_audio* %audout to i8*
  call void @llvm.lifetime.start.p0i8(i64 52, i8* %26) #8
  %output_mode = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 31
  %27 = load i32, i32* %output_mode, align 4, !tbaa !180
  %active_output = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 34
  %28 = load i32, i32* %active_output, align 8, !tbaa !429
  %conv44 = trunc i32 %28 to i16
  %call45 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_output*)* @ivtv_get_output to i32 (%struct.ivtv*, i16, %struct.v4l2_output*)*)(%struct.ivtv* %1, i16 zeroext %conv44, %struct.v4l2_output* %vidout)
  %call46 = call i32 bitcast (i32 (%struct.ivtv.9*, i16, %struct.v4l2_audio*)* @ivtv_get_audio_output to i32 (%struct.ivtv*, i16, %struct.v4l2_audio*)*)(%struct.ivtv* %1, i16 zeroext 0, %struct.v4l2_audio* %audout)
  %v4l2_dev47 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name48 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev47, i32 0, i32 4
  %arraydecay49 = getelementptr inbounds [36 x i8], [36 x i8]* %name48, i32 0, i32 0
  %name50 = getelementptr inbounds %struct.v4l2_output, %struct.v4l2_output* %vidout, i32 0, i32 1
  %arraydecay51 = getelementptr inbounds [32 x i8], [32 x i8]* %name50, i32 0, i32 0
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.49.354, i32 0, i32 0), i8* %arraydecay49, i8* %arraydecay51)
  %cmp53 = icmp slt i32 %27, 0
  %cmp55 = icmp sgt i32 %27, 4
  %or.cond = or i1 %cmp53, %cmp55
  %mode.0 = select i1 %or.cond, i32 0, i32 %27
  %v4l2_dev59 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name60 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev59, i32 0, i32 4
  %arraydecay61 = getelementptr inbounds [36 x i8], [36 x i8]* %name60, i32 0, i32 0
  %idxprom = sext i32 %mode.0 to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* @ivtv_log_status.output_modes, i64 0, i64 %idxprom
  %29 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.50, i32 0, i32 0), i8* %arraydecay61, i8* %29)
  %arraydecay63 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call64 = call i32 (%struct.ivtv*, i32*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32*, i32, i32, ...)* @ivtv_vapi_result to i32 (%struct.ivtv*, i32*, i32, i32, ...)*)(%struct.ivtv* %1, i32* %arraydecay63, i32 68, i32 0)
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 17
  %30 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr65 = getelementptr i8, i8* %30, i64 10752
  %call66 = call i32 @readl.327(i8* %add.ptr65)
  %shr = lshr i32 %call66, 7
  %and67 = and i32 %shr, 64
  %arrayidx68 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %31 = load i32, i32* %arrayidx68, align 16, !tbaa !120
  %or = or i32 %31, %and67
  store i32 %or, i32* %arrayidx68, align 16, !tbaa !120
  %v4l2_dev69 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name70 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev69, i32 0, i32 4
  %arraydecay71 = getelementptr inbounds [36 x i8], [36 x i8]* %name70, i32 0, i32 0
  %arrayidx72 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %32 = load i32, i32* %arrayidx72, align 16, !tbaa !120
  %and73 = and i32 %32, 1
  %tobool74 = icmp ne i32 %and73, 0
  %33 = zext i1 %tobool74 to i64
  %cond75 = select i1 %tobool74, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.53.355, i32 0, i32 0)
  %arrayidx76 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %34 = load i32, i32* %arrayidx76, align 16, !tbaa !120
  %shr77 = lshr i32 %34, 1
  %and78 = and i32 %shr77, 3
  %idxprom79 = zext i32 %and78 to i64
  %arrayidx80 = getelementptr inbounds [4 x i8*], [4 x i8*]* @ivtv_log_status.alpha_mode, i64 0, i64 %idxprom79
  %35 = load i8*, i8** %arrayidx80, align 8, !tbaa !86
  %arrayidx81 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %36 = load i32, i32* %arrayidx81, align 16, !tbaa !120
  %shr82 = lshr i32 %36, 3
  %and83 = and i32 %shr82, 15
  %idxprom84 = zext i32 %and83 to i64
  %arrayidx85 = getelementptr inbounds [16 x i8*], [16 x i8*]* @ivtv_log_status.pixel_format, i64 0, i64 %idxprom84
  %37 = load i8*, i8** %arrayidx85, align 8, !tbaa !86
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.51.356, i32 0, i32 0), i8* %arraydecay71, i8* %cond75, i8* %35, i8* %37)
  %38 = bitcast %struct.v4l2_audio* %audout to i8*
  call void @llvm.lifetime.end.p0i8(i64 52, i8* %38) #8
  %39 = bitcast %struct.v4l2_output* %vidout to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %39) #8
  br label %if.end87

if.end87:                                         ; preds = %if.then43, %do.end24
  %v4l2_dev88 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name89 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev88, i32 0, i32 4
  %arraydecay90 = getelementptr inbounds [36 x i8], [36 x i8]* %name89, i32 0, i32 0
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %call91 = call zeroext i1 @constant_test_bit.307(i64 5, i64* %i_flags)
  %40 = zext i1 %call91 to i64
  %cond93 = select i1 %call91, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55.357, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.56, i32 0, i32 0)
  %call94 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.54, i32 0, i32 0), i8* %arraydecay90, i8* %cond93)
  %cxhdl = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 20
  %hdl = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 6
  %v4l2_dev95 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name96 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev95, i32 0, i32 4
  %arraydecay97 = getelementptr inbounds [36 x i8], [36 x i8]* %name96, i32 0, i32 0
  call void @v4l2_ctrl_handler_log_status(%struct.v4l2_ctrl_handler* %hdl, i8* %arraydecay97)
  %v4l2_dev98 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name99 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev98, i32 0, i32 4
  %arraydecay100 = getelementptr inbounds [36 x i8], [36 x i8]* %name99, i32 0, i32 0
  %i_flags101 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 26
  %41 = load i64, i64* %i_flags101, align 8, !tbaa !603
  %call102 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.57.358, i32 0, i32 0), i8* %arraydecay100, i64 %41)
  br label %for.cond103

for.cond103:                                      ; preds = %LeafBlock, %if.end87
  %i.0 = phi i32 [ 0, %if.end87 ], [ %inc, %LeafBlock ]
  %cmp104 = icmp slt i32 %i.0, 9
  br i1 %cmp104, label %for.body106, label %for.end130

for.body106:                                      ; preds = %for.cond103
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 42
  %idxprom107 = sext i32 %i.0 to i64
  %arrayidx108 = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom107
  %vdev = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 0
  %v4l2_dev109 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %42 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev109, align 8, !tbaa !604
  %cmp110 = icmp eq %struct.v4l2_device* %42, null
  br i1 %cmp110, label %LeafBlock, label %lor.lhs.false112

lor.lhs.false112:                                 ; preds = %for.body106
  %buffers = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 18
  %43 = load i32, i32* %buffers, align 4, !tbaa !605
  %cmp113 = icmp eq i32 %43, 0
  br i1 %cmp113, label %LeafBlock, label %if.end116

if.end116:                                        ; preds = %lor.lhs.false112
  %v4l2_dev117 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name118 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev117, i32 0, i32 4
  %arraydecay119 = getelementptr inbounds [36 x i8], [36 x i8]* %name118, i32 0, i32 0
  %name120 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 2
  %44 = load i8*, i8** %name120, align 8, !tbaa !349
  %s_flags = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 7
  %45 = load i64, i64* %s_flags, align 8, !tbaa !606
  %buffers121 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 18
  %46 = load i32, i32* %buffers121, align 4, !tbaa !605
  %q_free = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 21
  %buffers122 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_free, i32 0, i32 1
  %47 = load i32, i32* %buffers122, align 8, !tbaa !401
  %sub = sub i32 %46, %47
  %mul = mul i32 %sub, 100
  %buffers123 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 18
  %48 = load i32, i32* %buffers123, align 4, !tbaa !605
  %div = udiv i32 %mul, %48
  %buffers124 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 18
  %49 = load i32, i32* %buffers124, align 4, !tbaa !605
  %buf_size = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 19
  %50 = load i32, i32* %buf_size, align 8, !tbaa !403
  %mul125 = mul i32 %49, %50
  %div126 = udiv i32 %mul125, 1024
  %buffers127 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx108, i32 0, i32 18
  %51 = load i32, i32* %buffers127, align 4, !tbaa !605
  %call128 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.58.359, i32 0, i32 0), i8* %arraydecay119, i8* %44, i64 %45, i32 %div, i32 %div126, i32 %51)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end116, %lor.lhs.false112, %for.body106
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end116 ], [ 11, %lor.lhs.false112 ], [ 11, %for.body106 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 11
  %inc = add nsw i32 %i.0, 1
  br label %for.cond103

for.end130:                                       ; preds = %for.cond103
  %v4l2_dev131 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 19
  %name132 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev131, i32 0, i32 4
  %arraydecay133 = getelementptr inbounds [36 x i8], [36 x i8]* %name132, i32 0, i32 0
  %mpg_data_received = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 84
  %52 = load i64, i64* %mpg_data_received, align 8, !tbaa !372
  %vbi_data_inserted = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 85
  %53 = load i64, i64* %vbi_data_inserted, align 8, !tbaa !365
  %call134 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.59.360, i32 0, i32 0), i8* %arraydecay133, i64 %52, i64 %53)
  %54 = bitcast %struct.v4l2_audio* %audin to i8*
  call void @llvm.lifetime.end.p0i8(i64 52, i8* %54) #8
  %55 = bitcast %struct.v4l2_input* %vidin to i8*
  call void @llvm.lifetime.end.p0i8(i64 80, i8* %55) #8
  %56 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %56) #8
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_g_register(%struct.file* %file, i8* %fh, %struct.v4l2_dbg_register* %reg) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %size = getelementptr inbounds %struct.v4l2_dbg_register, %struct.v4l2_dbg_register* %reg, i32 0, i32 1
  store i32 4, i32* %size, align 1, !tbaa !607
  %reg2 = getelementptr inbounds %struct.v4l2_dbg_register, %struct.v4l2_dbg_register* %reg, i32 0, i32 2
  %2 = load i64, i64* %reg2, align 1, !tbaa !610
  %val = getelementptr inbounds %struct.v4l2_dbg_register, %struct.v4l2_dbg_register* %reg, i32 0, i32 3
  %call3 = call i32 @ivtv_itvc(%struct.ivtv* %1, i1 zeroext true, i64 %2, i64* %val)
  ret i32 %call3
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_s_register(%struct.file* %file, i8* %fh, %struct.v4l2_dbg_register* %reg) #0 {
entry:
  %val = alloca i64, align 8
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %2 = bitcast i64* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %val2 = getelementptr inbounds %struct.v4l2_dbg_register, %struct.v4l2_dbg_register* %reg, i32 0, i32 3
  %3 = load i64, i64* %val2, align 1, !tbaa !611
  store i64 %3, i64* %val, align 8, !tbaa !149
  %reg3 = getelementptr inbounds %struct.v4l2_dbg_register, %struct.v4l2_dbg_register* %reg, i32 0, i32 2
  %4 = load i64, i64* %reg3, align 1, !tbaa !610
  %call4 = call i32 @ivtv_itvc(%struct.ivtv* %1, i1 zeroext false, i64 %4, i64* %val)
  %5 = bitcast i64* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  ret i32 %call4
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_subscribe_event(%struct.v4l2_fh* %fh, %struct.v4l2_event_subscription* %sub) #0 {
entry:
  %type = getelementptr inbounds %struct.v4l2_event_subscription, %struct.v4l2_event_subscription* %sub, i32 0, i32 0
  %0 = load i32, i32* %type, align 4, !tbaa !612
  %Pivot = icmp slt i32 %0, 3
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %SwitchLeaf2 = icmp eq i32 %0, 3
  br i1 %SwitchLeaf2, label %sw.bb1, label %return

LeafBlock:                                        ; preds = %entry
  %.off = add i32 %0, -1
  %SwitchLeaf = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf, label %sw.bb, label %return

sw.bb:                                            ; preds = %LeafBlock
  %call = call i32 @v4l2_event_subscribe(%struct.v4l2_fh* %fh, %struct.v4l2_event_subscription* %sub, i32 0, %struct.v4l2_subscribed_event_ops* null)
  br label %return

sw.bb1:                                           ; preds = %LeafBlock1
  %call2 = call i32 @v4l2_event_subscribe(%struct.v4l2_fh* %fh, %struct.v4l2_event_subscription* %sub, i32 0, %struct.v4l2_subscribed_event_ops* @v4l2_ctrl_sub_ev_ops)
  br label %return

return:                                           ; preds = %sw.bb1, %sw.bb, %LeafBlock, %LeafBlock1
  %retval.0 = phi i32 [ %call, %sw.bb ], [ %call2, %sw.bb1 ], [ -22, %LeafBlock ], [ -22, %LeafBlock1 ]
  ret i32 %retval.0
}

declare i32 @v4l2_event_unsubscribe(%struct.v4l2_fh*, %struct.v4l2_event_subscription*) #2

; Function Attrs: nounwind uwtable
define internal i64 @ivtv_default(%struct.file* %file, i8* %fh, i1 zeroext %valid_prio, i32 %cmd, i8* %arg) #0 {
entry:
  %frombool = zext i1 %valid_prio to i8
  %0 = bitcast i8* %fh to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %0)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %1 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %tobool = trunc i8 %frombool to i1
  br i1 %tobool, label %NodeBlock51, label %NodeBlock13

NodeBlock13:                                      ; preds = %entry
  %Pivot14 = icmp slt i32 %cmd, 28425
  br i1 %Pivot14, label %NodeBlock, label %NodeBlock11

NodeBlock11:                                      ; preds = %NodeBlock13
  %Pivot12 = icmp slt i32 %cmd, 28436
  br i1 %Pivot12, label %LeafBlock3, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %cmd, 1074026177
  br i1 %Pivot10, label %LeafBlock5, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %cmd, 1074026177
  br i1 %SwitchLeaf8, label %cleanup, label %NodeBlock51

LeafBlock5:                                       ; preds = %NodeBlock9
  %.off = add i32 %cmd, -28436
  %SwitchLeaf6 = icmp ule i32 %.off, 5
  br i1 %SwitchLeaf6, label %cleanup, label %NodeBlock51

LeafBlock3:                                       ; preds = %NodeBlock11
  %SwitchLeaf4 = icmp eq i32 %cmd, 28425
  br i1 %SwitchLeaf4, label %cleanup, label %NodeBlock51

NodeBlock:                                        ; preds = %NodeBlock13
  %Pivot = icmp slt i32 %cmd, 28422
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cmd, 28422
  br i1 %SwitchLeaf2, label %cleanup, label %NodeBlock51

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cmd, -1068994757
  br i1 %SwitchLeaf, label %cleanup, label %NodeBlock51

NodeBlock51:                                      ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock7, %entry
  %Pivot52 = icmp slt i32 %cmd, 28425
  br i1 %Pivot52, label %NodeBlock30, label %NodeBlock49

NodeBlock49:                                      ; preds = %NodeBlock51
  %Pivot50 = icmp slt i32 %cmd, 1074026177
  br i1 %Pivot50, label %NodeBlock37, label %NodeBlock47

NodeBlock47:                                      ; preds = %NodeBlock49
  %Pivot48 = icmp slt i32 %cmd, 1074029670
  br i1 %Pivot48, label %LeafBlock39, label %NodeBlock45

NodeBlock45:                                      ; preds = %NodeBlock47
  %Pivot46 = icmp slt i32 %cmd, 1077958336
  br i1 %Pivot46, label %LeafBlock41, label %LeafBlock43

LeafBlock43:                                      ; preds = %NodeBlock45
  %SwitchLeaf44 = icmp eq i32 %cmd, 1077958336
  br i1 %SwitchLeaf44, label %sw.bb29, label %cleanup

LeafBlock41:                                      ; preds = %NodeBlock45
  %SwitchLeaf42 = icmp eq i32 %cmd, 1074029670
  br i1 %SwitchLeaf42, label %sw.bb2, label %cleanup

LeafBlock39:                                      ; preds = %NodeBlock47
  %SwitchLeaf40 = icmp eq i32 %cmd, 1074026177
  br i1 %SwitchLeaf40, label %sw.bb29, label %cleanup

NodeBlock37:                                      ; preds = %NodeBlock49
  %Pivot38 = icmp slt i32 %cmd, 28436
  br i1 %Pivot38, label %LeafBlock32, label %LeafBlock34

LeafBlock34:                                      ; preds = %NodeBlock37
  %.off35 = add i32 %cmd, -28436
  %SwitchLeaf36 = icmp ule i32 %.off35, 5
  br i1 %SwitchLeaf36, label %sw.bb29, label %cleanup

LeafBlock32:                                      ; preds = %NodeBlock37
  %SwitchLeaf33 = icmp eq i32 %cmd, 28425
  br i1 %SwitchLeaf33, label %sw.bb29, label %cleanup

NodeBlock30:                                      ; preds = %NodeBlock51
  %Pivot31 = icmp slt i32 %cmd, -1068994757
  br i1 %Pivot31, label %NodeBlock21, label %NodeBlock28

NodeBlock28:                                      ; preds = %NodeBlock30
  %Pivot29 = icmp slt i32 %cmd, 28422
  br i1 %Pivot29, label %LeafBlock23, label %LeafBlock26

LeafBlock26:                                      ; preds = %NodeBlock28
  %SwitchLeaf27 = icmp eq i32 %cmd, 28422
  br i1 %SwitchLeaf27, label %sw.bb29, label %cleanup

LeafBlock23:                                      ; preds = %NodeBlock28
  %.off24 = add i32 %cmd, 1068994757
  %SwitchLeaf25 = icmp ule i32 %.off24, 1
  br i1 %SwitchLeaf25, label %sw.bb29, label %cleanup

NodeBlock21:                                      ; preds = %NodeBlock30
  %Pivot22 = icmp slt i32 %cmd, -2145358052
  br i1 %Pivot22, label %LeafBlock16, label %LeafBlock19

LeafBlock19:                                      ; preds = %NodeBlock21
  %SwitchLeaf20 = icmp eq i32 %cmd, -2145358052
  br i1 %SwitchLeaf20, label %sw.bb29, label %cleanup

LeafBlock16:                                      ; preds = %NodeBlock21
  %.off17 = add i32 %cmd, 2146930887
  %SwitchLeaf18 = icmp ule i32 %.off17, 1
  br i1 %SwitchLeaf18, label %sw.bb29, label %cleanup

sw.bb2:                                           ; preds = %LeafBlock41
  %2 = bitcast i8* %arg to i32*
  %3 = load i32, i32* %2, align 4, !tbaa !120
  %cmp = icmp eq i32 %3, 0
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %sw.bb2
  %options = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 18
  %newi2c = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 4
  %4 = load i32, i32* %newi2c, align 8, !tbaa !273
  %tobool3 = icmp ne i32 %4, 0
  %and = and i32 %3, 1
  %tobool4 = icmp ne i32 %and, 0
  %or.cond = or i1 %tobool3, %tobool4
  br i1 %or.cond, label %if.then5, label %if.end6

lor.lhs.false:                                    ; preds = %sw.bb2
  %.old = and i32 %3, 1
  %tobool4.old = icmp ne i32 %.old, 0
  br i1 %tobool4.old, label %if.then5, label %if.end6

if.then5:                                         ; preds = %lor.lhs.false, %land.lhs.true
  call void @ivtv_reset_ir_gpio(%struct.ivtv* %1)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %lor.lhs.false, %land.lhs.true
  %and7 = and i32 %3, 2
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %if.then9, label %cleanup

if.then9:                                         ; preds = %if.end6
  %sd_video = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool10 = icmp ne %struct.v4l2_subdev* %5, null
  br i1 %tobool10, label %cond.false, label %cleanup

cond.false:                                       ; preds = %if.then9
  %sd_video11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video11, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %core = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 0
  %8 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core, align 8, !tbaa !159
  %tobool12 = icmp ne %struct.v4l2_subdev_core_ops* %8, null
  br i1 %tobool12, label %land.lhs.true13, label %cleanup

land.lhs.true13:                                  ; preds = %cond.false
  %sd_video14 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video14, align 8, !tbaa !90
  %ops15 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops15, align 8, !tbaa !79
  %core16 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 0
  %11 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core16, align 8, !tbaa !159
  %reset = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %11, i32 0, i32 4
  %12 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %reset, align 8, !tbaa !614
  %tobool17 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %12, null
  br i1 %tobool17, label %cond.true18, label %cleanup

cond.true18:                                      ; preds = %land.lhs.true13
  %sd_video19 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video19, align 8, !tbaa !90
  %ops20 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %13, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops20, align 8, !tbaa !79
  %core21 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 0
  %15 = load %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_core_ops** %core21, align 8, !tbaa !159
  %reset22 = getelementptr inbounds %struct.v4l2_subdev_core_ops, %struct.v4l2_subdev_core_ops* %15, i32 0, i32 4
  %16 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %reset22, align 8, !tbaa !614
  %sd_video23 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %1, i32 0, i32 11
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video23, align 8, !tbaa !90
  %call24 = call i32 %16(%struct.v4l2_subdev* %17, i32 0)
  br label %cleanup

sw.bb29:                                          ; preds = %LeafBlock16, %LeafBlock19, %LeafBlock23, %LeafBlock26, %LeafBlock32, %LeafBlock34, %LeafBlock39, %LeafBlock43
  %call30 = call i32 @ivtv_decoder_ioctls(%struct.file* %file, i32 %cmd, i8* %arg)
  %conv = sext i32 %call30 to i64
  br label %cleanup

cleanup:                                          ; preds = %sw.bb29, %cond.true18, %land.lhs.true13, %cond.false, %if.then9, %if.end6, %LeafBlock16, %LeafBlock19, %LeafBlock23, %LeafBlock26, %LeafBlock32, %LeafBlock34, %LeafBlock39, %LeafBlock41, %LeafBlock43, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock7
  %retval.0 = phi i64 [ %conv, %sw.bb29 ], [ -16, %LeafBlock7 ], [ -16, %LeafBlock5 ], [ -16, %LeafBlock3 ], [ -16, %LeafBlock1 ], [ -16, %LeafBlock ], [ -25, %LeafBlock16 ], [ -25, %LeafBlock19 ], [ -25, %LeafBlock23 ], [ -25, %LeafBlock26 ], [ -25, %LeafBlock32 ], [ -25, %LeafBlock34 ], [ -25, %LeafBlock39 ], [ -25, %LeafBlock41 ], [ -25, %LeafBlock43 ], [ 0, %if.end6 ], [ 0, %cond.true18 ], [ 0, %land.lhs.true13 ], [ 0, %cond.false ], [ 0, %if.then9 ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_decoder_ioctls(%struct.file* %filp, i32 %cmd, i8* %arg) #0 {
entry:
  %frame = alloca i64, align 8
  %pts64 = alloca i64, align 8
  %dc = alloca %struct.v4l2_decoder_cmd, align 8
  %dc85 = alloca %struct.v4l2_decoder_cmd, align 8
  %dc91 = alloca %struct.v4l2_decoder_cmd, align 8
  %dc97 = alloca %struct.v4l2_decoder_cmd, align 8
  %wait = alloca %struct.__wait_queue, align 8
  %private_data = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !354
  %1 = bitcast i8* %0 to %struct.v4l2_fh*
  %call = call %struct.ivtv_open_id.4300* @fh2id.317(%struct.v4l2_fh* %1)
  %itv1 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 3
  %2 = load %struct.ivtv*, %struct.ivtv** %itv1, align 8, !tbaa !154
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 42
  %type = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %3 = load i32, i32* %type, align 8, !tbaa !157
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 %idxprom
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %filp, i32 0, i32 6
  %4 = load i32, i32* %f_flags, align 8, !tbaa !361
  %and = and i32 %4, 2048
  %5 = ptrtoint i8* %arg to i64
  %Pivot40 = icmp slt i32 %cmd, 28437
  br i1 %Pivot40, label %NodeBlock19, label %NodeBlock37

NodeBlock37:                                      ; preds = %entry
  %Pivot38 = icmp slt i32 %cmd, 28440
  br i1 %Pivot38, label %NodeBlock23, label %NodeBlock35

NodeBlock35:                                      ; preds = %NodeBlock37
  %Pivot36 = icmp slt i32 %cmd, 1074026177
  br i1 %Pivot36, label %NodeBlock27, label %NodeBlock33

NodeBlock33:                                      ; preds = %NodeBlock35
  %Pivot34 = icmp slt i32 %cmd, 1077958336
  br i1 %Pivot34, label %LeafBlock29, label %LeafBlock31

LeafBlock31:                                      ; preds = %NodeBlock33
  %SwitchLeaf32 = icmp eq i32 %cmd, 1077958336
  br i1 %SwitchLeaf32, label %sw.bb, label %cleanup220

LeafBlock29:                                      ; preds = %NodeBlock33
  %SwitchLeaf30 = icmp eq i32 %cmd, 1074026177
  br i1 %SwitchLeaf30, label %do.body30, label %cleanup220

NodeBlock27:                                      ; preds = %NodeBlock35
  %Pivot28 = icmp slt i32 %cmd, 28441
  br i1 %Pivot28, label %sw.bb96, label %LeafBlock25

LeafBlock25:                                      ; preds = %NodeBlock27
  %SwitchLeaf26 = icmp eq i32 %cmd, 28441
  br i1 %SwitchLeaf26, label %sw.bb194, label %cleanup220

NodeBlock23:                                      ; preds = %NodeBlock37
  %Pivot24 = icmp slt i32 %cmd, 28438
  br i1 %Pivot24, label %sw.bb84, label %NodeBlock21

NodeBlock21:                                      ; preds = %NodeBlock23
  %Pivot22 = icmp slt i32 %cmd, 28439
  br i1 %Pivot22, label %sw.bb79, label %sw.bb90

NodeBlock19:                                      ; preds = %entry
  %Pivot20 = icmp slt i32 %cmd, -1068994757
  br i1 %Pivot20, label %NodeBlock5, label %NodeBlock17

NodeBlock17:                                      ; preds = %NodeBlock19
  %Pivot18 = icmp slt i32 %cmd, 28425
  br i1 %Pivot18, label %NodeBlock11, label %NodeBlock15

NodeBlock15:                                      ; preds = %NodeBlock17
  %Pivot16 = icmp slt i32 %cmd, 28436
  br i1 %Pivot16, label %LeafBlock13, label %sw.bb212

LeafBlock13:                                      ; preds = %NodeBlock15
  %SwitchLeaf14 = icmp eq i32 %cmd, 28425
  br i1 %SwitchLeaf14, label %sw.bb205, label %cleanup220

NodeBlock11:                                      ; preds = %NodeBlock17
  %Pivot12 = icmp slt i32 %cmd, 28422
  br i1 %Pivot12, label %LeafBlock7, label %LeafBlock9

LeafBlock9:                                       ; preds = %NodeBlock11
  %SwitchLeaf10 = icmp eq i32 %cmd, 28422
  br i1 %SwitchLeaf10, label %sw.bb203, label %cleanup220

LeafBlock7:                                       ; preds = %NodeBlock11
  %.off = add i32 %cmd, 1068994757
  %SwitchLeaf8 = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf8, label %sw.bb102, label %cleanup220

NodeBlock5:                                       ; preds = %NodeBlock19
  %Pivot6 = icmp slt i32 %cmd, -2146930886
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock5
  %Pivot = icmp slt i32 %cmd, -2145358052
  br i1 %Pivot, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %cmd, -2145358052
  br i1 %SwitchLeaf4, label %sw.bb113, label %cleanup220

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cmd, -2146930886
  br i1 %SwitchLeaf2, label %sw.bb62, label %cleanup220

LeafBlock:                                        ; preds = %NodeBlock5
  %SwitchLeaf = icmp eq i32 %cmd, -2146930887
  br i1 %SwitchLeaf, label %sw.bb48, label %cleanup220

sw.bb:                                            ; preds = %LeafBlock31
  %6 = bitcast i8* %arg to %struct.ivtv_dma_frame*
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 8, %7
  %tobool = icmp ne i32 %and2, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %sw.bb
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.60, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %sw.bb
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %8 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and4 = and i32 %8, 2
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.end7, label %cleanup220

if.end7:                                          ; preds = %do.end
  %type8 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %6, i32 0, i32 0
  %9 = load i32, i32* %type8, align 8, !tbaa !615
  %cmp = icmp ne i32 %9, 2
  br i1 %cmp, label %cleanup220, label %if.end10

if.end10:                                         ; preds = %if.end7
  %output_mode = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 31
  %10 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp11 = icmp eq i32 %10, 3
  br i1 %cmp11, label %land.lhs.true, label %if.end14

land.lhs.true:                                    ; preds = %if.end10
  %y_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %6, i32 0, i32 2
  %11 = load i8*, i8** %y_source, align 8, !tbaa !617
  %cmp12 = icmp eq i8* %11, null
  br i1 %cmp12, label %cleanup220, label %if.end14

if.end14:                                         ; preds = %land.lhs.true, %if.end10
  %type15 = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 1
  %12 = load i32, i32* %type15, align 8, !tbaa !157
  %call16 = call i32 bitcast (i32 (%struct.ivtv_open_id*, i32)* @ivtv_start_decoding to i32 (%struct.ivtv_open_id.4300*, i32)*)(%struct.ivtv_open_id.4300* %call, i32 %12)
  %tobool17 = icmp ne i32 %call16, 0
  br i1 %tobool17, label %cleanup220, label %if.end19

if.end19:                                         ; preds = %if.end14
  %call20 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32)* @ivtv_set_output_mode to i32 (%struct.ivtv*, i32)*)(%struct.ivtv* %2, i32 3)
  %cmp21 = icmp ne i32 %call20, 3
  br i1 %cmp21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.end19
  call void bitcast (void (%struct.ivtv_stream.1071*)* @ivtv_release_stream to void (%struct.ivtv_stream*)*)(%struct.ivtv_stream* %arrayidx)
  br label %cleanup220

if.end23:                                         ; preds = %if.end19
  %yuv_frames = getelementptr inbounds %struct.ivtv_open_id.4300, %struct.ivtv_open_id.4300* %call, i32 0, i32 2
  store i32 1, i32* %yuv_frames, align 4, !tbaa !412
  %y_source24 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %6, i32 0, i32 2
  %13 = load i8*, i8** %y_source24, align 8, !tbaa !617
  %cmp25 = icmp eq i8* %13, null
  br i1 %cmp25, label %cleanup220, label %if.end27

if.end27:                                         ; preds = %if.end23
  %call28 = call i32 bitcast (i32 (%struct.ivtv.1060*, %struct.ivtv_dma_frame*)* @ivtv_yuv_prep_frame to i32 (%struct.ivtv*, %struct.ivtv_dma_frame*)*)(%struct.ivtv* %2, %struct.ivtv_dma_frame* %6)
  br label %cleanup220

do.body30:                                        ; preds = %LeafBlock29
  %14 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and31 = and i32 8, %14
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %do.end40

if.then33:                                        ; preds = %do.body30
  %v4l2_dev34 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name35 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev34, i32 0, i32 4
  %arraydecay36 = getelementptr inbounds [36 x i8], [36 x i8]* %name35, i32 0, i32 0
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.61.330, i32 0, i32 0), i8* %arraydecay36)
  br label %do.end40

do.end40:                                         ; preds = %if.then33, %do.body30
  %v4l2_cap41 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %15 = load i32, i32* %v4l2_cap41, align 4, !tbaa !172
  %and42 = and i32 %15, 2
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.end45, label %cleanup220

if.end45:                                         ; preds = %do.end40
  %16 = bitcast i8* %arg to i32*
  %17 = load i32, i32* %16, align 4, !tbaa !120
  %cmp46 = icmp ne i32 %17, 0
  %conv = zext i1 %cmp46 to i32
  %call47 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32)* @ivtv_passthrough_mode to i32 (%struct.ivtv*, i32)*)(%struct.ivtv* %2, i32 %conv)
  br label %cleanup220

sw.bb48:                                          ; preds = %LeafBlock
  %18 = bitcast i8* %arg to i64*
  %19 = bitcast i64* %frame to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.62, i32 0, i32 0))
  %type49 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %20 = load i32, i32* %type49, align 8, !tbaa !348
  %cmp50 = icmp slt i32 %20, 5
  br i1 %cmp50, label %if.then52, label %if.end53

if.then52:                                        ; preds = %sw.bb48
  %dma_pts = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 14
  %21 = load i64, i64* %dma_pts, align 8, !tbaa !367
  store i64 %21, i64* %18, align 8, !tbaa !149
  br label %cleanup60

if.end53:                                         ; preds = %sw.bb48
  %v4l2_cap54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %22 = load i32, i32* %v4l2_cap54, align 4, !tbaa !172
  %and55 = and i32 %22, 2
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.end58, label %cleanup60

if.end58:                                         ; preds = %if.end53
  %call59 = call i32 bitcast (i32 (%struct.ivtv.572*, i64*, i64*)* @ivtv_g_pts_frame to i32 (%struct.ivtv*, i64*, i64*)*)(%struct.ivtv* %2, i64* %18, i64* %frame)
  br label %cleanup60

cleanup60:                                        ; preds = %if.end58, %if.end53, %if.then52
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then52 ], [ 1, %if.end58 ], [ 1, %if.end53 ]
  %retval.1 = phi i32 [ undef, %if.then52 ], [ %call59, %if.end58 ], [ -22, %if.end53 ]
  %23 = bitcast i64* %frame to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #8
  %SwitchLeaf43 = icmp eq i32 %cleanup.dest.slot.0, 2
  %.retval.1 = select i1 %SwitchLeaf43, i32 0, i32 %retval.1
  br label %cleanup220

sw.bb62:                                          ; preds = %LeafBlock1
  %24 = bitcast i8* %arg to i64*
  %25 = bitcast i64* %pts64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %25) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.63.331, i32 0, i32 0))
  %type65 = getelementptr inbounds %struct.ivtv_stream, %struct.ivtv_stream* %arrayidx, i32 0, i32 3
  %26 = load i32, i32* %type65, align 8, !tbaa !348
  %cmp66 = icmp slt i32 %26, 5
  br i1 %cmp66, label %if.then68, label %if.end69

if.then68:                                        ; preds = %sw.bb62
  store i64 0, i64* %24, align 8, !tbaa !149
  br label %cleanup76

if.end69:                                         ; preds = %sw.bb62
  %v4l2_cap70 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %27 = load i32, i32* %v4l2_cap70, align 4, !tbaa !172
  %and71 = and i32 %27, 2
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %if.end74, label %cleanup76

if.end74:                                         ; preds = %if.end69
  %call75 = call i32 bitcast (i32 (%struct.ivtv.572*, i64*, i64*)* @ivtv_g_pts_frame to i32 (%struct.ivtv*, i64*, i64*)*)(%struct.ivtv* %2, i64* %pts64, i64* %24)
  br label %cleanup76

cleanup76:                                        ; preds = %if.end74, %if.end69, %if.then68
  %cleanup.dest.slot.1 = phi i32 [ 2, %if.then68 ], [ 1, %if.end74 ], [ 1, %if.end69 ]
  %retval.2 = phi i32 [ undef, %if.then68 ], [ %call75, %if.end74 ], [ -22, %if.end69 ]
  %28 = bitcast i64* %pts64 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %28) #8
  %SwitchLeaf46 = icmp eq i32 %cleanup.dest.slot.1, 2
  %.retval.2 = select i1 %SwitchLeaf46, i32 0, i32 %retval.2
  br label %UnifiedReturnBlock

sw.bb79:                                          ; preds = %NodeBlock21
  %29 = bitcast %struct.v4l2_decoder_cmd* %dc to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %29) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.64, i32 0, i32 0))
  %30 = bitcast %struct.v4l2_decoder_cmd* %dc to i8*
  %call80 = call i8* @__memset(i8* %30, i32 0, i64 72)
  %cmd81 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 0
  store i32 0, i32* %cmd81, align 8, !tbaa !593
  %call82 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dc, i32 0)
  %31 = bitcast %struct.v4l2_decoder_cmd* %dc to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %31) #8
  br label %cleanup220

sw.bb84:                                          ; preds = %NodeBlock23
  %32 = bitcast %struct.v4l2_decoder_cmd* %dc85 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %32) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65.332, i32 0, i32 0))
  %33 = bitcast %struct.v4l2_decoder_cmd* %dc85 to i8*
  %call86 = call i8* @__memset(i8* %33, i32 0, i64 72)
  %cmd87 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc85, i32 0, i32 0
  store i32 1, i32* %cmd87, align 8, !tbaa !593
  %flags = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc85, i32 0, i32 1
  store i32 3, i32* %flags, align 4, !tbaa !618
  %call88 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dc85, i32 0)
  %34 = bitcast %struct.v4l2_decoder_cmd* %dc85 to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %34) #8
  br label %cleanup220

sw.bb90:                                          ; preds = %NodeBlock21
  %35 = bitcast %struct.v4l2_decoder_cmd* %dc91 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %35) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i32 0, i32 0))
  %36 = bitcast %struct.v4l2_decoder_cmd* %dc91 to i8*
  %call92 = call i8* @__memset(i8* %36, i32 0, i64 72)
  %cmd93 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc91, i32 0, i32 0
  store i32 2, i32* %cmd93, align 8, !tbaa !593
  %call94 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dc91, i32 0)
  %37 = bitcast %struct.v4l2_decoder_cmd* %dc91 to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %37) #8
  br label %cleanup220

sw.bb96:                                          ; preds = %NodeBlock27
  %38 = bitcast %struct.v4l2_decoder_cmd* %dc97 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* %38) #8
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.67.333, i32 0, i32 0))
  %39 = bitcast %struct.v4l2_decoder_cmd* %dc97 to i8*
  %call98 = call i8* @__memset(i8* %39, i32 0, i64 72)
  %cmd99 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc97, i32 0, i32 0
  store i32 3, i32* %cmd99, align 8, !tbaa !593
  %call100 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %dc97, i32 0)
  %40 = bitcast %struct.v4l2_decoder_cmd* %dc97 to i8*
  call void @llvm.lifetime.end.p0i8(i64 72, i8* %40) #8
  br label %cleanup220

sw.bb102:                                         ; preds = %LeafBlock7
  %41 = bitcast i8* %arg to %struct.v4l2_decoder_cmd*
  %conv104 = zext i32 %cmd to i64
  %cmp105 = icmp eq i64 %conv104, 3225972540
  %conv106 = zext i1 %cmp105 to i32
  %tobool107 = icmp ne i32 %conv106, 0
  br i1 %tobool107, label %if.then108, label %if.else

if.then108:                                       ; preds = %sw.bb102
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.68, i32 0, i32 0))
  br label %if.end109

if.else:                                          ; preds = %sw.bb102
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.69.334, i32 0, i32 0))
  br label %if.end109

if.end109:                                        ; preds = %if.else, %if.then108
  %call110 = call i32 @ivtv_video_command(%struct.ivtv* %2, %struct.ivtv_open_id.4300* %call, %struct.v4l2_decoder_cmd* %41, i32 %conv106)
  br label %cleanup220

sw.bb113:                                         ; preds = %LeafBlock3
  %42 = bitcast i8* %arg to %struct.video_event*
  %43 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %43) #8
  %flags114 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags114, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call115 = call %struct.task_struct* @get_current.305()
  %44 = bitcast %struct.task_struct* %call115 to i8*
  store i8* %44, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list116 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list116, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list117 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list117, %struct.list_head** %prev, align 8, !tbaa !186
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.70.335, i32 0, i32 0))
  %v4l2_cap118 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %45 = load i32, i32* %v4l2_cap118, align 4, !tbaa !172
  %and119 = and i32 %45, 2
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %if.end122, label %cleanup192

if.end122:                                        ; preds = %sw.bb113
  %46 = bitcast %struct.video_event* %42 to i8*
  %call123 = call i8* @__memset(i8* %46, i32 0, i64 32)
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  call void @set_bit.336(i64 31, i64* %i_flags)
  br label %while.cond

while.cond:                                       ; preds = %if.end191, %if.end122
  %i_flags124 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  %call125 = call zeroext i1 @test_and_clear_bit.337(i64 28, i64* %i_flags124)
  br i1 %call125, label %if.then126, label %if.else128

if.then126:                                       ; preds = %while.cond
  %type127 = getelementptr inbounds %struct.video_event, %struct.video_event* %42, i32 0, i32 0
  store i32 3, i32* %type127, align 8, !tbaa !619
  br label %if.end149

if.else128:                                       ; preds = %while.cond
  %i_flags129 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  %call130 = call zeroext i1 @test_and_clear_bit.337(i64 29, i64* %i_flags129)
  br i1 %call130, label %if.then131, label %if.end149

if.then131:                                       ; preds = %if.else128
  %type132 = getelementptr inbounds %struct.video_event, %struct.video_event* %42, i32 0, i32 0
  store i32 4, i32* %type132, align 8, !tbaa !619
  %i_flags133 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  %call134 = call zeroext i1 @constant_test_bit.307(i64 30, i64* %i_flags133)
  %47 = zext i1 %call134 to i64
  %cond = select i1 %call134, i32 1, i32 2
  %conv136 = trunc i32 %cond to i8
  %u = getelementptr inbounds %struct.video_event, %struct.video_event* %42, i32 0, i32 2
  %vsync_field = bitcast %union.anon.110* %u to i8*
  store i8 %conv136, i8* %vsync_field, align 8, !tbaa !142
  %output_mode137 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 31
  %48 = load i32, i32* %output_mode137, align 4, !tbaa !180
  %cmp138 = icmp eq i32 %48, 3
  br i1 %cmp138, label %land.lhs.true140, label %if.end149

land.lhs.true140:                                 ; preds = %if.then131
  %yuv_info = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 90
  %lace_mode = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 50
  %49 = load i32, i32* %lace_mode, align 8, !tbaa !301
  %and141 = and i32 %49, 3
  %cmp142 = icmp eq i32 %and141, 1
  br i1 %cmp142, label %if.then144, label %if.end149

if.then144:                                       ; preds = %land.lhs.true140
  %u145 = getelementptr inbounds %struct.video_event, %struct.video_event* %42, i32 0, i32 2
  %vsync_field146 = bitcast %union.anon.110* %u145 to i8*
  store i8 3, i8* %vsync_field146, align 8, !tbaa !142
  br label %if.end149

if.end149:                                        ; preds = %if.then144, %land.lhs.true140, %if.then131, %if.else128, %if.then126
  %type150 = getelementptr inbounds %struct.video_event, %struct.video_event* %42, i32 0, i32 0
  %50 = load i32, i32* %type150, align 8, !tbaa !619
  %tobool151 = icmp ne i32 %50, 0
  br i1 %tobool151, label %cleanup192, label %if.end153

if.end153:                                        ; preds = %if.end149
  %tobool154 = icmp ne i32 %and, 0
  br i1 %tobool154, label %cleanup192, label %if.end156

if.end156:                                        ; preds = %if.end153
  %serialize_lock = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %event_waitq = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 64
  call void @prepare_to_wait(%struct.__wait_queue_head* %event_waitq, %struct.__wait_queue* %wait, i32 1)
  %i_flags157 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  %call158 = call zeroext i1 @constant_test_bit.307(i64 28, i64* %i_flags157)
  br i1 %call158, label %if.end173, label %cond.true164

cond.true164:                                     ; preds = %if.end156
  %i_flags165 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 26
  %call166 = call zeroext i1 @constant_test_bit.307(i64 29, i64* %i_flags165)
  br i1 %call166, label %if.end173, label %if.then172

if.then172:                                       ; preds = %cond.true164
  call void @schedule()
  br label %if.end173

if.end173:                                        ; preds = %if.then172, %cond.true164, %if.end156
  %event_waitq174 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 64
  call void @finish_wait(%struct.__wait_queue_head* %event_waitq174, %struct.__wait_queue* %wait)
  %serialize_lock175 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock175, i32 0)
  %call176 = call %struct.task_struct* @get_current.305()
  %call177 = call i32 @signal_pending.308(%struct.task_struct* %call176)
  %tobool178 = icmp ne i32 %call177, 0
  br i1 %tobool178, label %do.body180, label %if.end191

do.body180:                                       ; preds = %if.end173
  %51 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and181 = and i32 2, %51
  %tobool182 = icmp ne i32 %and181, 0
  br i1 %tobool182, label %if.then183, label %cleanup192

if.then183:                                       ; preds = %do.body180
  %v4l2_dev184 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 19
  %name185 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev184, i32 0, i32 4
  %arraydecay186 = getelementptr inbounds [36 x i8], [36 x i8]* %name185, i32 0, i32 0
  %call187 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.71.338, i32 0, i32 0), i8* %arraydecay186)
  br label %cleanup192

if.end191:                                        ; preds = %if.end173
  br label %while.cond

cleanup192:                                       ; preds = %if.then183, %do.body180, %if.end153, %if.end149, %sw.bb113
  %retval.3 = phi i32 [ -22, %sw.bb113 ], [ 0, %if.end149 ], [ -11, %if.end153 ], [ -4, %if.then183 ], [ -4, %do.body180 ]
  %52 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %52) #8
  br label %cleanup220

sw.bb194:                                         ; preds = %LeafBlock25
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.72.339, i32 0, i32 0))
  %v4l2_cap195 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 8
  %53 = load i32, i32* %v4l2_cap195, align 4, !tbaa !172
  %and196 = and i32 %53, 2
  %tobool197 = icmp ne i32 %and196, 0
  br i1 %tobool197, label %if.end199, label %cleanup220

if.end199:                                        ; preds = %sw.bb194
  %cmp200 = icmp eq i64 %5, 0
  %conv201 = zext i1 %cmp200 to i32
  %call202 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32)* @ivtv_passthrough_mode to i32 (%struct.ivtv*, i32)*)(%struct.ivtv* %2, i32 %conv201)
  br label %cleanup220

sw.bb203:                                         ; preds = %LeafBlock9
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.73.340, i32 0, i32 0))
  %conv204 = trunc i64 %5 to i8
  %speed_mute_audio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 83
  store i8 %conv204, i8* %speed_mute_audio, align 4, !tbaa !491
  br label %cleanup220

sw.bb205:                                         ; preds = %LeafBlock13
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.74.341, i32 0, i32 0))
  %cmp206 = icmp ugt i64 %5, 4
  br i1 %cmp206, label %cleanup220, label %if.end209

if.end209:                                        ; preds = %sw.bb205
  %54 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 22
  %ctrl_audio_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %54, i32 0, i32 0
  %55 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_audio_playback, align 8, !tbaa !144
  %add = add i64 %5, 1
  %conv210 = trunc i64 %add to i32
  %call211 = call i32 @v4l2_ctrl_s_ctrl.342(%struct.v4l2_ctrl* %55, i32 %conv210)
  br label %cleanup220

sw.bb212:                                         ; preds = %NodeBlock15
  call void @warn_deprecated_ioctl(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.75.343, i32 0, i32 0))
  %cmp213 = icmp ugt i64 %5, 4
  br i1 %cmp213, label %cleanup220, label %if.end216

if.end216:                                        ; preds = %sw.bb212
  %56 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %2, i32 0, i32 22
  %ctrl_audio_multilingual_playback = getelementptr inbounds %struct.anon.88, %struct.anon.88* %56, i32 0, i32 1
  %57 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %ctrl_audio_multilingual_playback, align 8, !tbaa !147
  %add217 = add i64 %5, 1
  %conv218 = trunc i64 %add217 to i32
  %call219 = call i32 @v4l2_ctrl_s_ctrl.342(%struct.v4l2_ctrl* %57, i32 %conv218)
  br label %cleanup220

cleanup220:                                       ; preds = %if.end216, %sw.bb212, %if.end209, %sw.bb205, %sw.bb203, %if.end199, %sw.bb194, %cleanup192, %if.end109, %sw.bb96, %sw.bb90, %sw.bb84, %sw.bb79, %cleanup60, %if.end45, %do.end40, %if.end27, %if.end23, %if.then22, %if.end14, %land.lhs.true, %if.end7, %do.end, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock7, %LeafBlock9, %LeafBlock13, %LeafBlock25, %LeafBlock29, %LeafBlock31
  %retval.4 = phi i32 [ %retval.3, %cleanup192 ], [ %call110, %if.end109 ], [ 0, %sw.bb203 ], [ %call211, %if.end209 ], [ %call219, %if.end216 ], [ %call88, %sw.bb84 ], [ %call82, %sw.bb79 ], [ %call94, %sw.bb90 ], [ %call100, %sw.bb96 ], [ %call202, %if.end199 ], [ %call47, %if.end45 ], [ -16, %if.then22 ], [ %call28, %if.end27 ], [ -22, %do.end ], [ -22, %if.end7 ], [ 0, %land.lhs.true ], [ -16, %if.end14 ], [ 0, %if.end23 ], [ -22, %do.end40 ], [ -22, %sw.bb194 ], [ -22, %sw.bb205 ], [ -22, %sw.bb212 ], [ -22, %LeafBlock ], [ -22, %LeafBlock1 ], [ -22, %LeafBlock3 ], [ -22, %LeafBlock7 ], [ -22, %LeafBlock9 ], [ -22, %LeafBlock13 ], [ -22, %LeafBlock25 ], [ -22, %LeafBlock29 ], [ -22, %LeafBlock31 ], [ %.retval.1, %cleanup60 ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %cleanup220, %cleanup76
  %UnifiedRetVal = phi i32 [ %.retval.2, %cleanup76 ], [ %retval.4, %cleanup220 ]
  ret i32 %UnifiedRetVal
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @warn_deprecated_ioctl(i8* %name) #4 {
entry:
  %0 = load i8, i8* @warn_deprecated_ioctl.__print_once, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  %lnot = xor i1 %tobool, true
  %frombool = zext i1 %lnot to i8
  %1 = load i8, i8* @warn_deprecated_ioctl.__print_once, align 1, !tbaa !174, !range !175
  %tobool1 = trunc i8 %1 to i1
  br i1 %tobool1, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  store i8 1, i8* @warn_deprecated_ioctl.__print_once, align 1, !tbaa !174
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str.76.346, i32 0, i32 0), i8* %name)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool2 = trunc i8 %frombool to i1
  %lnot3 = xor i1 %tobool2, true
  %lnot4 = xor i1 %lnot3, true
  %lnot.ext = zext i1 %lnot4 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_video_command(%struct.ivtv* %itv, %struct.ivtv_open_id.4300* %id, %struct.v4l2_decoder_cmd* %dc, i32 %try) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream], [9 x %struct.ivtv_stream]* %streams, i64 0, i64 5
  %v4l2_cap = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 8
  %0 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %cmd = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 0
  %1 = load i32, i32* %cmd, align 8, !tbaa !593
  %Pivot6 = icmp slt i32 %1, 2
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %if.end
  %Pivot4 = icmp slt i32 %1, 3
  br i1 %Pivot4, label %sw.bb66, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock3
  %SwitchLeaf2 = icmp eq i32 %1, 3
  br i1 %SwitchLeaf2, label %sw.bb94, label %cleanup

NodeBlock:                                        ; preds = %if.end
  %Pivot = icmp slt i32 %1, 1
  br i1 %Pivot, label %LeafBlock, label %sw.bb41

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %1, 0
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %LeafBlock
  %flags = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %2 = load i32, i32* %flags, align 4, !tbaa !618
  %and1 = and i32 %2, 1
  store i32 %and1, i32* %flags, align 4, !tbaa !618
  %speed = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  %3 = load i32, i32* %speed, align 8, !tbaa !297
  %4 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start = bitcast %union.anon.73* %4 to %struct.anon.26*
  %speed2 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start, i32 0, i32 0
  %5 = load i32, i32* %speed2, align 8, !tbaa !142
  %call = call i32 @ivtv_validate_speed(i32 %3, i32 %5)
  %6 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start3 = bitcast %union.anon.73* %6 to %struct.anon.26*
  %speed4 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start3, i32 0, i32 0
  store i32 %call, i32* %speed4, align 8, !tbaa !142
  %7 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start5 = bitcast %union.anon.73* %7 to %struct.anon.26*
  %speed6 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start5, i32 0, i32 0
  %8 = load i32, i32* %speed6, align 8, !tbaa !142
  %cmp = icmp slt i32 %8, 0
  %9 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start8 = bitcast %union.anon.73* %9 to %struct.anon.26*
  %format = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start8, i32 0, i32 1
  %.sink = select i1 %cmp, i32 1, i32 0
  store i32 %.sink, i32* %format, align 4, !tbaa !142
  %10 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start12 = bitcast %union.anon.73* %10 to %struct.anon.26*
  %speed13 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start12, i32 0, i32 0
  %11 = load i32, i32* %speed13, align 8, !tbaa !142
  %cmp14 = icmp ne i32 %11, 500
  br i1 %cmp14, label %land.lhs.true, label %if.end23

land.lhs.true:                                    ; preds = %sw.bb
  %12 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start15 = bitcast %union.anon.73* %12 to %struct.anon.26*
  %speed16 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start15, i32 0, i32 0
  %13 = load i32, i32* %speed16, align 8, !tbaa !142
  %cmp17 = icmp ne i32 %13, 1500
  br i1 %cmp17, label %if.then18, label %if.end23

if.then18:                                        ; preds = %land.lhs.true
  %14 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start19 = bitcast %union.anon.73* %14 to %struct.anon.26*
  %speed20 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start19, i32 0, i32 0
  %15 = load i32, i32* %speed20, align 8, !tbaa !142
  %cmp21 = icmp eq i32 %15, 1000
  %16 = zext i1 %cmp21 to i64
  %cond = select i1 %cmp21, i32 0, i32 1
  %flags22 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  store i32 %cond, i32* %flags22, align 4, !tbaa !618
  br label %if.end23

if.end23:                                         ; preds = %if.then18, %land.lhs.true, %sw.bb
  %tobool24 = icmp ne i32 %try, 0
  br i1 %tobool24, label %cleanup, label %if.end26

if.end26:                                         ; preds = %if.end23
  %flags27 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %17 = load i32, i32* %flags27, align 4, !tbaa !618
  %and28 = and i32 %17, 1
  %conv = trunc i32 %and28 to i8
  %speed_mute_audio = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 83
  store i8 %conv, i8* %speed_mute_audio, align 4, !tbaa !491
  %call29 = call i32 bitcast (i32 (%struct.ivtv.1060*, i32)* @ivtv_set_output_mode to i32 (%struct.ivtv*, i32)*)(%struct.ivtv* %itv, i32 1)
  %cmp30 = icmp ne i32 %call29, 1
  br i1 %cmp30, label %cleanup, label %if.end33

if.end33:                                         ; preds = %if.end26
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call34 = call zeroext i1 @test_and_clear_bit.337(i64 20, i64* %i_flags)
  br i1 %call34, label %if.then35, label %if.end37

if.then35:                                        ; preds = %if.end33
  %speed36 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  store i32 0, i32* %speed36, align 8, !tbaa !297
  br label %if.end37

if.end37:                                         ; preds = %if.then35, %if.end33
  %18 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %start38 = bitcast %union.anon.73* %18 to %struct.anon.26*
  %speed39 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %start38, i32 0, i32 0
  %19 = load i32, i32* %speed39, align 8, !tbaa !142
  %call40 = call i32 bitcast (i32 (%struct.ivtv_open_id*, i32)* @ivtv_start_decoding to i32 (%struct.ivtv_open_id.4300*, i32)*)(%struct.ivtv_open_id.4300* %id, i32 %19)
  br label %cleanup

sw.bb41:                                          ; preds = %NodeBlock
  %flags42 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %20 = load i32, i32* %flags42, align 4, !tbaa !618
  %and43 = and i32 %20, 3
  store i32 %and43, i32* %flags42, align 4, !tbaa !618
  %flags44 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %21 = load i32, i32* %flags44, align 4, !tbaa !618
  %and45 = and i32 %21, 2
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %if.end48

if.then47:                                        ; preds = %sw.bb41
  %22 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %stop = bitcast %union.anon.73* %22 to %union.anon.3*
  %pts = getelementptr inbounds %union.anon.3, %union.anon.3* %stop, i32 0, i32 0
  store i64 0, i64* %pts, align 8, !tbaa !142
  br label %if.end48

if.end48:                                         ; preds = %if.then47, %sw.bb41
  %tobool49 = icmp ne i32 %try, 0
  br i1 %tobool49, label %cleanup, label %if.end51

if.end51:                                         ; preds = %if.end48
  %decoding = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call52 = call i32 @atomic_read.306(%struct.atomic_t* %decoding)
  %cmp53 = icmp eq i32 %call52, 0
  br i1 %cmp53, label %cleanup, label %if.end56

if.end56:                                         ; preds = %if.end51
  %output_mode = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 31
  %23 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp57 = icmp ne i32 %23, 1
  br i1 %cmp57, label %cleanup, label %if.end60

if.end60:                                         ; preds = %if.end56
  %output_mode61 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 31
  store i32 0, i32* %output_mode61, align 4, !tbaa !180
  %flags62 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %24 = load i32, i32* %flags62, align 4, !tbaa !618
  %25 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 2
  %stop63 = bitcast %union.anon.73* %25 to %union.anon.3*
  %pts64 = getelementptr inbounds %union.anon.3, %union.anon.3* %stop63, i32 0, i32 0
  %26 = load i64, i64* %pts64, align 8, !tbaa !142
  %call65 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, i32, i64)* @ivtv_stop_v4l2_decode_stream to i32 (%struct.ivtv_stream*, i32, i64)*)(%struct.ivtv_stream* %arrayidx, i32 %24, i64 %26)
  br label %cleanup

sw.bb66:                                          ; preds = %NodeBlock3
  %flags67 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %27 = load i32, i32* %flags67, align 4, !tbaa !618
  %and68 = and i32 %27, 1
  store i32 %and68, i32* %flags67, align 4, !tbaa !618
  %tobool69 = icmp ne i32 %try, 0
  br i1 %tobool69, label %cleanup, label %if.end71

if.end71:                                         ; preds = %sw.bb66
  %decoding72 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call73 = call i32 @atomic_read.306(%struct.atomic_t* %decoding72)
  %tobool74 = icmp ne i32 %call73, 0
  br i1 %tobool74, label %if.end76, label %cleanup

if.end76:                                         ; preds = %if.end71
  %output_mode77 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 31
  %28 = load i32, i32* %output_mode77, align 4, !tbaa !180
  %cmp78 = icmp ne i32 %28, 1
  br i1 %cmp78, label %cleanup, label %if.end81

if.end81:                                         ; preds = %if.end76
  %decoding82 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call83 = call i32 @atomic_read.306(%struct.atomic_t* %decoding82)
  %cmp84 = icmp sgt i32 %call83, 0
  br i1 %cmp84, label %if.then86, label %cleanup

if.then86:                                        ; preds = %if.end81
  %flags87 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  %29 = load i32, i32* %flags87, align 4, !tbaa !618
  %and88 = and i32 %29, 1
  %tobool89 = icmp ne i32 %and88, 0
  %30 = zext i1 %tobool89 to i64
  %cond90 = select i1 %tobool89, i32 1, i32 0
  %call91 = call i32 (%struct.ivtv*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv*, i32, i32, ...)*)(%struct.ivtv* %itv, i32 13, i32 1, i32 %cond90)
  %i_flags92 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  call void @set_bit.336(i64 20, i64* %i_flags92)
  br label %cleanup

sw.bb94:                                          ; preds = %LeafBlock1
  %flags95 = getelementptr inbounds %struct.v4l2_decoder_cmd, %struct.v4l2_decoder_cmd* %dc, i32 0, i32 1
  store i32 0, i32* %flags95, align 4, !tbaa !618
  %tobool96 = icmp ne i32 %try, 0
  br i1 %tobool96, label %cleanup, label %if.end98

if.end98:                                         ; preds = %sw.bb94
  %decoding99 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 44
  %call100 = call i32 @atomic_read.306(%struct.atomic_t* %decoding99)
  %tobool101 = icmp ne i32 %call100, 0
  br i1 %tobool101, label %if.end103, label %cleanup

if.end103:                                        ; preds = %if.end98
  %output_mode104 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 31
  %31 = load i32, i32* %output_mode104, align 4, !tbaa !180
  %cmp105 = icmp ne i32 %31, 1
  br i1 %cmp105, label %cleanup, label %if.end108

if.end108:                                        ; preds = %if.end103
  %i_flags109 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call110 = call zeroext i1 @test_and_clear_bit.337(i64 20, i64* %i_flags109)
  br i1 %call110, label %if.then111, label %cleanup

if.then111:                                       ; preds = %if.end108
  %speed113 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  %32 = load i32, i32* %speed113, align 8, !tbaa !297
  %speed114 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 82
  store i32 0, i32* %speed114, align 8, !tbaa !297
  %call115 = call i32 bitcast (i32 (%struct.ivtv_open_id*, i32)* @ivtv_start_decoding to i32 (%struct.ivtv_open_id.4300*, i32)*)(%struct.ivtv_open_id.4300* %id, i32 %32)
  br label %cleanup

cleanup:                                          ; preds = %if.then111, %if.end108, %if.end103, %if.end98, %sw.bb94, %if.then86, %if.end81, %if.end76, %if.end71, %sw.bb66, %if.end60, %if.end56, %if.end51, %if.end48, %if.end37, %if.end26, %if.end23, %LeafBlock, %LeafBlock1, %entry
  %retval.0 = phi i32 [ %call40, %if.end37 ], [ %call65, %if.end60 ], [ %call115, %if.then111 ], [ -22, %entry ], [ -16, %if.end26 ], [ 0, %if.end51 ], [ -16, %if.end56 ], [ -1, %if.end71 ], [ -16, %if.end76 ], [ -1, %if.end98 ], [ -16, %if.end103 ], [ -22, %LeafBlock ], [ -22, %LeafBlock1 ], [ 0, %if.end108 ], [ 0, %sw.bb94 ], [ 0, %if.end81 ], [ 0, %if.then86 ], [ 0, %sw.bb66 ], [ 0, %if.end48 ], [ 0, %if.end23 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.336(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !621
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit.337(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !622
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @v4l2_ctrl_s_ctrl.342(%struct.v4l2_ctrl* %ctrl, i32 %val) #4 {
entry:
  call void @v4l2_ctrl_lock.344(%struct.v4l2_ctrl* %ctrl)
  %call = call i32 @__v4l2_ctrl_s_ctrl(%struct.v4l2_ctrl* %ctrl, i32 %val)
  call void @v4l2_ctrl_unlock.345(%struct.v4l2_ctrl* %ctrl)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @v4l2_ctrl_lock.344(%struct.v4l2_ctrl* %ctrl) #4 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %lock = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %0, i32 0, i32 1
  %1 = load %struct.mutex*, %struct.mutex** %lock, align 8, !tbaa !391
  call void @mutex_lock_nested(%struct.mutex* %1, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @v4l2_ctrl_unlock.345(%struct.v4l2_ctrl* %ctrl) #4 {
entry:
  %handler = getelementptr inbounds %struct.v4l2_ctrl, %struct.v4l2_ctrl* %ctrl, i32 0, i32 2
  %0 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %handler, align 8, !tbaa !138
  %lock = getelementptr inbounds %struct.v4l2_ctrl_handler, %struct.v4l2_ctrl_handler* %0, i32 0, i32 1
  %1 = load %struct.mutex*, %struct.mutex** %lock, align 8, !tbaa !391
  call void @mutex_unlock(%struct.mutex* %1)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_validate_speed(i32 %cur_speed, i32 %new_speed) #0 {
entry:
  %cmp = icmp slt i32 %new_speed, 0
  %0 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 -1, i32 1
  %cmp1 = icmp eq i32 %cur_speed, 0
  %.cur_speed = select i1 %cmp1, i32 1000, i32 %cur_speed
  %cmp2 = icmp slt i32 %new_speed, 0
  %sub = sub nsw i32 0, %new_speed
  %new_speed.addr.0 = select i1 %cmp2, i32 %sub, i32 %new_speed
  %cmp5 = icmp slt i32 %.cur_speed, 0
  %sub7 = sub nsw i32 0, %.cur_speed
  %sub7..cur_speed = select i1 %cmp5, i32 %sub7, i32 %.cur_speed
  %cmp9 = icmp sle i32 %sub7..cur_speed, %new_speed.addr.0
  br i1 %cmp9, label %if.then10, label %if.else

if.then10:                                        ; preds = %entry
  %cmp11 = icmp sgt i32 %new_speed.addr.0, 1500
  br i1 %cmp11, label %if.then12, label %if.end13

if.then12:                                        ; preds = %if.then10
  %mul = mul nsw i32 %cond, 2000
  br label %cleanup

if.end13:                                         ; preds = %if.then10
  %cmp14 = icmp sgt i32 %new_speed.addr.0, 1000
  br i1 %cmp14, label %if.then15, label %if.end30

if.then15:                                        ; preds = %if.end13
  %mul16 = mul nsw i32 %cond, 1500
  br label %cleanup

if.else:                                          ; preds = %entry
  %cmp18 = icmp sge i32 %new_speed.addr.0, 2000
  br i1 %cmp18, label %if.then19, label %if.end21

if.then19:                                        ; preds = %if.else
  %mul20 = mul nsw i32 %cond, 2000
  br label %cleanup

if.end21:                                         ; preds = %if.else
  %cmp22 = icmp sge i32 %new_speed.addr.0, 1500
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end21
  %mul24 = mul nsw i32 %cond, 1500
  br label %cleanup

if.end25:                                         ; preds = %if.end21
  %cmp26 = icmp sge i32 %new_speed.addr.0, 1000
  br i1 %cmp26, label %if.then27, label %if.end30

if.then27:                                        ; preds = %if.end25
  %mul28 = mul nsw i32 %cond, 1000
  br label %cleanup

if.end30:                                         ; preds = %if.end25, %if.end13
  switch i32 %new_speed.addr.0, label %if.end38 [
    i32 0, label %cleanup
    i32 1, label %if.then36
    i32 1000, label %if.then36
  ]

if.then36:                                        ; preds = %if.end30, %if.end30
  %mul37 = mul nsw i32 %cond, %new_speed.addr.0
  br label %cleanup

if.end38:                                         ; preds = %if.end30
  %div = sdiv i32 1000, %new_speed.addr.0
  %div39 = sdiv i32 1000, %sub7..cur_speed
  %cmp40 = icmp eq i32 %div39, %div
  br i1 %cmp40, label %if.then41, label %if.end44

if.then41:                                        ; preds = %if.end38
  %cmp42 = icmp slt i32 %sub7..cur_speed, %new_speed.addr.0
  %1 = zext i1 %cmp42 to i64
  %cond43 = select i1 %cmp42, i32 -1, i32 1
  %add = add nsw i32 %div, %cond43
  br label %if.end44

if.end44:                                         ; preds = %if.then41, %if.end38
  %new_speed.addr.1 = phi i32 [ %add, %if.then41 ], [ %div, %if.end38 ]
  %cmp45 = icmp sgt i32 %new_speed.addr.1, 60
  br i1 %cmp45, label %if.then46, label %if.end49

if.then46:                                        ; preds = %if.end44
  %mul47 = mul nsw i32 %cond, 60
  %div48 = sdiv i32 1000, %mul47
  br label %cleanup

if.end49:                                         ; preds = %if.end44
  %mul50 = mul nsw i32 %cond, %new_speed.addr.1
  %div51 = sdiv i32 1000, %mul50
  br label %cleanup

cleanup:                                          ; preds = %if.end49, %if.then46, %if.then36, %if.end30, %if.then27, %if.then23, %if.then19, %if.then15, %if.then12
  %retval.0 = phi i32 [ %mul, %if.then12 ], [ %mul16, %if.then15 ], [ %mul37, %if.then36 ], [ %div48, %if.then46 ], [ %div51, %if.end49 ], [ %mul20, %if.then19 ], [ %mul24, %if.then23 ], [ %mul28, %if.then27 ], [ 1000, %if.end30 ]
  ret i32 %retval.0
}

declare i32 @v4l2_event_subscribe(%struct.v4l2_fh*, %struct.v4l2_event_subscription*, i32, %struct.v4l2_subscribed_event_ops*) #2

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_itvc(%struct.ivtv* %itv, i1 zeroext %get, i64 %reg, i64* %val) #0 {
entry:
  %frombool = zext i1 %get to i8
  %and = and i64 %reg, 3
  %tobool = icmp ne i64 %and, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp = icmp uge i64 %reg, 33554432
  %cmp1 = icmp ult i64 %reg, 33619968
  %or.cond = and i1 %cmp, %cmp1
  br i1 %or.cond, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 -33554432
  br label %if.end19

if.else:                                          ; preds = %if.end
  %has_cx23415 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 4
  %1 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %conv = zext i8 %1 to i32
  %tobool3 = icmp ne i32 %conv, 0
  %cmp5 = icmp uge i64 %reg, 16777216
  %or.cond1 = and i1 %tobool3, %cmp5
  %cmp8 = icmp ult i64 %reg, 25165824
  %or.cond2 = and i1 %or.cond1, %cmp8
  br i1 %or.cond2, label %if.then10, label %if.else12

if.then10:                                        ; preds = %if.else
  %dec_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 16
  %2 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %add.ptr11 = getelementptr i8, i8* %2, i64 -16777216
  br label %if.end19

if.else12:                                        ; preds = %if.else
  %cmp13 = icmp ult i64 %reg, 8388608
  br i1 %cmp13, label %if.then15, label %cleanup

if.then15:                                        ; preds = %if.else12
  %enc_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 15
  %3 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  br label %if.end19

if.end19:                                         ; preds = %if.then15, %if.then10, %if.then2
  %reg_start.1 = phi i8* [ %add.ptr, %if.then2 ], [ %add.ptr11, %if.then10 ], [ %3, %if.then15 ]
  %tobool20 = trunc i8 %frombool to i1
  br i1 %tobool20, label %if.then21, label %if.else24

if.then21:                                        ; preds = %if.end19
  %add.ptr22 = getelementptr inbounds i8, i8* %reg_start.1, i64 %reg
  %call = call i32 @readl.327(i8* %add.ptr22)
  %conv23 = zext i32 %call to i64
  store i64 %conv23, i64* %val, align 8, !tbaa !149
  br label %cleanup

if.else24:                                        ; preds = %if.end19
  %4 = load i64, i64* %val, align 8, !tbaa !149
  %conv25 = trunc i64 %4 to i32
  %add.ptr26 = getelementptr inbounds i8, i8* %reg_start.1, i64 %reg
  call void @writel.347(i32 %conv25, i8* %add.ptr26)
  br label %cleanup

cleanup:                                          ; preds = %if.else24, %if.then21, %if.else12, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ -22, %if.else12 ], [ 0, %if.else24 ], [ 0, %if.then21 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.347(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !623
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit.393(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !624
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define internal void @check_service_set(%struct.v4l2_sliced_vbi_format* %fmt, i32 %is_pal) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc11, %entry
  %f.0 = phi i32 [ 0, %entry ], [ %inc12, %for.inc11 ]
  %cmp = icmp slt i32 %f.0, 2
  br i1 %cmp, label %for.body, label %for.end13

for.body:                                         ; preds = %for.cond
  br label %for.cond1

for.cond1:                                        ; preds = %for.body3, %for.body
  %l.0 = phi i32 [ 0, %for.body ], [ %inc, %for.body3 ]
  %cmp2 = icmp slt i32 %l.0, 24
  br i1 %cmp2, label %for.body3, label %for.inc11

for.body3:                                        ; preds = %for.cond1
  %service_lines = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 1
  %idxprom = sext i32 %f.0 to i64
  %arrayidx = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines, i64 0, i64 %idxprom
  %idxprom4 = sext i32 %l.0 to i64
  %arrayidx5 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx, i64 0, i64 %idxprom4
  %0 = load i16, i16* %arrayidx5, align 2, !tbaa !151
  %call = call zeroext i16 @select_service_from_set(i32 %f.0, i32 %l.0, i16 zeroext %0, i32 %is_pal)
  %service_lines6 = getelementptr inbounds %struct.v4l2_sliced_vbi_format, %struct.v4l2_sliced_vbi_format* %fmt, i32 0, i32 1
  %idxprom7 = sext i32 %f.0 to i64
  %arrayidx8 = getelementptr inbounds [2 x [24 x i16]], [2 x [24 x i16]]* %service_lines6, i64 0, i64 %idxprom7
  %idxprom9 = sext i32 %l.0 to i64
  %arrayidx10 = getelementptr inbounds [24 x i16], [24 x i16]* %arrayidx8, i64 0, i64 %idxprom9
  store i16 %call, i16* %arrayidx10, align 2, !tbaa !151
  %inc = add nsw i32 %l.0, 1
  br label %for.cond1

for.inc11:                                        ; preds = %for.cond1
  %inc12 = add nsw i32 %f.0, 1
  br label %for.cond

for.end13:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_raw_vbi.397(%struct.ivtv* %itv) #4 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !298
  %cmp = icmp eq i32 %0, 4
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @pci_name(%struct.pci_dev* %pdev) #4 {
entry:
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %pdev, i32 0, i32 35
  %call = call i8* @dev_name.400(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_name.400(%struct.device* %dev) #4 {
entry:
  %init_name = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %0 = load i8*, i8** %init_name, align 8, !tbaa !416
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %1 = load i8*, i8** %init_name1, align 8, !tbaa !416
  br label %return

if.end:                                           ; preds = %entry
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 2
  %call = call i8* @kobject_name.401(%struct.kobject* %kobj)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8* [ %1, %if.then ], [ %call, %if.end ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kobject_name.401(%struct.kobject* %kobj) #4 {
entry:
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 0
  %0 = load i8*, i8** %name, align 8, !tbaa !417
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define void @ivtv_irq_work_handler(%struct.kthread_work.4631* %work) #0 {
entry:
  %0 = bitcast %struct.kthread_work.4631* %work to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -25808
  %1 = bitcast i8* %add.ptr to %struct.ivtv.4633*
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %1, i32 0, i32 26
  %call = call zeroext i1 @test_and_clear_bit.404(i64 18, i64* %i_flags)
  br i1 %call, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @ivtv_pio_work_handler(%struct.ivtv.4633* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %i_flags1 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %1, i32 0, i32 26
  %call2 = call zeroext i1 @test_and_clear_bit.404(i64 16, i64* %i_flags1)
  br i1 %call2, label %if.then3, label %if.end4

if.then3:                                         ; preds = %if.end
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_vbi_work_handler to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %1)
  br label %if.end4

if.end4:                                          ; preds = %if.then3, %if.end
  %i_flags5 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %1, i32 0, i32 26
  %call6 = call zeroext i1 @test_and_clear_bit.404(i64 17, i64* %i_flags5)
  br i1 %call6, label %if.then7, label %if.end8

if.then7:                                         ; preds = %if.end4
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_yuv_work_handler to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %1)
  br label %if.end8

if.end8:                                          ; preds = %if.then7, %if.end4
  %i_flags9 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %1, i32 0, i32 26
  %call10 = call zeroext i1 @test_and_clear_bit.404(i64 23, i64* %i_flags9)
  br i1 %call10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end8
  call void @ivtv_pcm_work_handler(%struct.ivtv.4633* %1)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit.404(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !625
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_pio_work_handler(%struct.ivtv.4633* %itv) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %cur_pio_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %0 = load i32, i32* %cur_pio_stream, align 4, !tbaa !296
  %idxprom = sext i32 %0 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %2, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8.405, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %cur_pio_stream3 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %3 = load i32, i32* %cur_pio_stream3, align 4, !tbaa !296
  %cmp = icmp slt i32 %3, 0
  br i1 %cmp, label %if.then12, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %cur_pio_stream4 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %4 = load i32, i32* %cur_pio_stream4, align 4, !tbaa !296
  %cmp5 = icmp sge i32 %4, 9
  br i1 %cmp5, label %if.then12, label %lor.lhs.false6

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %vdev = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 0
  %v4l2_dev7 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %5 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev7, align 8, !tbaa !604
  %cmp8 = icmp eq %struct.v4l2_device* %5, null
  br i1 %cmp8, label %if.then12, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false6
  %call10 = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %arrayidx)
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %do.body15, label %if.then12

if.then12:                                        ; preds = %lor.lhs.false9, %lor.lhs.false6, %lor.lhs.false, %do.end
  %cur_pio_stream13 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  store i32 -1, i32* %cur_pio_stream13, align 4, !tbaa !296
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %6, i64 68
  call void @writel.406(i32 33554432, i8* %add.ptr)
  br label %cleanup.cont71

do.body15:                                        ; preds = %lor.lhs.false9
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 32, %7
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %land.lhs.true18, label %do.end29

land.lhs.true18:                                  ; preds = %do.body15
  %8 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and19 = and i32 %8, 1024
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %do.end29

if.then21:                                        ; preds = %land.lhs.true18
  %v4l2_dev22 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name23 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev22, i32 0, i32 4
  %arraydecay24 = getelementptr inbounds [36 x i8], [36 x i8]* %name23, i32 0, i32 0
  %name25 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 2
  %9 = load i8*, i8** %name25, align 8, !tbaa !349
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9.407, i32 0, i32 0), i8* %arraydecay24, i8* %9)
  br label %do.end29

do.end29:                                         ; preds = %if.then21, %land.lhs.true18, %do.body15
  %q_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end29
  %list61.sink = phi %struct.list_head* [ %list61, %for.inc ], [ %list, %do.end29 ]
  %i.0 = phi i32 [ 0, %do.end29 ], [ %inc, %for.inc ]
  %next62 = getelementptr inbounds %struct.list_head, %struct.list_head* %list61.sink, i32 0, i32 0
  %10 = load %struct.list_head*, %struct.list_head** %next62, align 8, !tbaa !86
  %11 = bitcast %struct.list_head* %10 to i8*
  %add.ptr64 = getelementptr inbounds i8, i8* %11, i64 0
  %12 = bitcast i8* %add.ptr64 to %struct.ivtv_buffer*
  %list31 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %12, i32 0, i32 0
  %q_dma32 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %list33 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma32, i32 0, i32 0
  %cmp34 = icmp ne %struct.list_head* %list31, %list33
  br i1 %cmp34, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 28
  %13 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %idxprom35 = sext i32 %i.0 to i64
  %arrayidx36 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %13, i64 %idxprom35
  %size37 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx36, i32 0, i32 2
  %14 = load i32, i32* %size37, align 4, !tbaa !627
  %and38 = and i32 %14, 262143
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %15 = load i32, i32* %type, align 8, !tbaa !348
  %cmp39 = icmp eq i32 %15, 6
  %buf41 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %12, i32 0, i32 4
  %16 = load i8*, i8** %buf41, align 8, !tbaa !370
  br i1 %cmp39, label %if.then40, label %if.else

if.then40:                                        ; preds = %for.body
  %dec_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 16
  %17 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %sg_processing42 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 28
  %18 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing42, align 8, !tbaa !626
  %idxprom43 = sext i32 %i.0 to i64
  %arrayidx44 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %18, i64 %idxprom43
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx44, i32 0, i32 0
  %19 = load i32, i32* %src, align 4, !tbaa !629
  %idx.ext = zext i32 %19 to i64
  %add.ptr45 = getelementptr i8, i8* %17, i64 %idx.ext
  %add.ptr46 = getelementptr i8, i8* %add.ptr45, i64 -16777216
  %conv = zext i32 %and38 to i64
  call void @memcpy_fromio(i8* %16, i8* %add.ptr46, i64 %conv)
  br label %if.end55

if.else:                                          ; preds = %for.body
  %enc_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 15
  %20 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %sg_processing48 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 28
  %21 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing48, align 8, !tbaa !626
  %idxprom49 = sext i32 %i.0 to i64
  %arrayidx50 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %21, i64 %idxprom49
  %src51 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx50, i32 0, i32 0
  %22 = load i32, i32* %src51, align 4, !tbaa !629
  %idx.ext52 = zext i32 %22 to i64
  %add.ptr53 = getelementptr i8, i8* %20, i64 %idx.ext52
  %conv54 = zext i32 %and38 to i64
  call void @memcpy_fromio(i8* %16, i8* %add.ptr53, i64 %conv54)
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then40
  %inc = add nsw i32 %i.0, 1
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 32
  %23 = load i32, i32* %sg_processing_size, align 4, !tbaa !630
  %cmp56 = icmp eq i32 %inc, %23
  %. = select i1 %cmp56, i32 6, i32 0
  %SwitchLeaf = icmp eq i32 %., 6
  br i1 %SwitchLeaf, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end55
  %list61 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %12, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %if.end55, %for.cond
  %reg_mem65 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %24 = load i8*, i8** %reg_mem65, align 8, !tbaa !171
  %add.ptr66 = getelementptr i8, i8* %24, i64 68
  call void @writel.406(i32 33554432, i8* %add.ptr66)
  br label %cleanup.cont71

cleanup.cont71:                                   ; preds = %for.end, %if.then12
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then12 ], [ 0, %for.end ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_pcm_work_handler(%struct.ivtv.4633* %itv) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 3
  br label %while.cond

while.cond:                                       ; preds = %if.end11, %entry
  %q_io = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 23
  %call = call %struct.ivtv_buffer* bitcast (%struct.ivtv_buffer* (%struct.ivtv_stream.1071*, %struct.ivtv_queue*)* @ivtv_dequeue to %struct.ivtv_buffer* (%struct.ivtv_stream.4642*, %struct.ivtv_queue*)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_queue* %q_io)
  %cmp = icmp eq %struct.ivtv_buffer* %call, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %while.cond
  %q_full = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 22
  %call1 = call %struct.ivtv_buffer* bitcast (%struct.ivtv_buffer* (%struct.ivtv_stream.1071*, %struct.ivtv_queue*)* @ivtv_dequeue to %struct.ivtv_buffer* (%struct.ivtv_stream.4642*, %struct.ivtv_queue*)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_queue* %q_full)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.cond
  %buf.0 = phi %struct.ivtv_buffer* [ %call1, %if.then ], [ %call, %while.cond ]
  %cmp2 = icmp eq %struct.ivtv_buffer* %buf.0, null
  br i1 %cmp2, label %while.end, label %if.end4

if.end4:                                          ; preds = %if.end
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 6
  %0 = load i32, i32* %readpos, align 4, !tbaa !362
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 5
  %1 = load i32, i32* %bytesused, align 8, !tbaa !363
  %cmp5 = icmp ult i32 %0, %1
  br i1 %cmp5, label %if.then6, label %if.end11

if.then6:                                         ; preds = %if.end4
  %pcm_announce_callback = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 46
  %2 = load void (%struct.snd_ivtv_card*, i8*, i64)*, void (%struct.snd_ivtv_card*, i8*, i64)** %pcm_announce_callback, align 8, !tbaa !631
  %alsa = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 45
  %3 = load %struct.snd_ivtv_card*, %struct.snd_ivtv_card** %alsa, align 8, !tbaa !632
  %buf7 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 4
  %4 = load i8*, i8** %buf7, align 8, !tbaa !370
  %readpos8 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 6
  %5 = load i32, i32* %readpos8, align 4, !tbaa !362
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  %bytesused9 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 5
  %6 = load i32, i32* %bytesused9, align 8, !tbaa !363
  %readpos10 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 6
  %7 = load i32, i32* %readpos10, align 4, !tbaa !362
  %sub = sub i32 %6, %7
  %conv = zext i32 %sub to i64
  call void %2(%struct.snd_ivtv_card* %3, i8* %add.ptr, i64 %conv)
  br label %if.end11

if.end11:                                         ; preds = %if.then6, %if.end4
  %q_free = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 21
  call void bitcast (void (%struct.ivtv_stream.1071*, %struct.ivtv_buffer*, %struct.ivtv_queue*)* @ivtv_enqueue to void (%struct.ivtv_stream.4642*, %struct.ivtv_buffer*, %struct.ivtv_queue*)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_buffer* %buf.0, %struct.ivtv_queue* %q_free)
  br label %while.cond

while.end:                                        ; preds = %if.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %s) #4 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 8
  %1 = load i32, i32* %dma, align 8, !tbaa !633
  %cmp = icmp eq i32 %1, 3
  %. = select i1 %cmp, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.406(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !634
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @memcpy_fromio(i8* %dst, i8* %src, i64 %count) #4 {
entry:
  %call = call i8* @__memcpy(i8* %dst, i8* %src, i64 %count)
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_dma_stream_dec_prepare(%struct.ivtv_stream.4642* %s, i32 %offset, i32 %lock) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %yuv_info = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 90
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 64
  %1 = load i8, i8* %draw_frame, align 4, !tbaa !635
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = zext i8 %1 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 4
  %2 = load i32, i32* %src_h, align 4, !tbaa !636
  %add = add i32 %2, 31
  %and = and i32 %add, -32
  %mul = mul i32 720, %and
  %add2 = add i32 %offset, 414720
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and3 = and i32 32, %3
  %tobool = icmp ne i32 %and3, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and4 = and i32 %4, 1024
  %tobool5 = icmp ne i32 %and4, 0
  br i1 %tobool5, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %5 = load i8*, i8** %name6, align 8, !tbaa !349
  %q_predma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma, i32 0, i32 3
  %6 = load i32, i32* %bytesused, align 8, !tbaa !637
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.410, i32 0, i32 0), i8* %arraydecay, i8* %5, i32 %6, i32 %offset)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %7 = load i32, i32* %type, align 8, !tbaa !348
  %cmp = icmp eq i32 %7, 8
  br i1 %cmp, label %land.lhs.true7, label %if.end23

land.lhs.true7:                                   ; preds = %do.end
  %offset_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 18
  %8 = load i32, i32* %offset_y, align 4, !tbaa !638
  %tobool8 = icmp ne i32 %8, 0
  br i1 %tobool8, label %if.then9, label %if.end23

if.then9:                                         ; preds = %land.lhs.true7
  %blanking_dmaptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  %9 = load i64, i64* %blanking_dmaptr, align 8, !tbaa !639
  %tobool10 = icmp ne i64 %9, 0
  br i1 %tobool10, label %if.then11, label %if.end21

if.then11:                                        ; preds = %if.then9
  %blanking_dmaptr12 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  %10 = load i64, i64* %blanking_dmaptr12, align 8, !tbaa !639
  %conv = trunc i64 %10 to i32
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %11 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %idxprom13 = sext i32 0 to i64
  %arrayidx14 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %11, i64 %idxprom13
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx14, i32 0, i32 0
  store i32 %conv, i32* %src, align 4, !tbaa !629
  %sg_pending15 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %12 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending15, align 8, !tbaa !640
  %idxprom16 = sext i32 0 to i64
  %arrayidx17 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %12, i64 %idxprom16
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx17, i32 0, i32 1
  store i32 %offset, i32* %dst, align 4, !tbaa !641
  %sg_pending18 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %13 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending18, align 8, !tbaa !640
  %idxprom19 = sext i32 0 to i64
  %arrayidx20 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %13, i64 %idxprom19
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx20, i32 0, i32 2
  store i32 11520, i32* %size, align 4, !tbaa !627
  br label %if.end21

if.end21:                                         ; preds = %if.then11, %if.then9
  %add22 = add i32 %offset, 11520
  %inc = add nsw i32 0, 1
  br label %if.end23

if.end23:                                         ; preds = %if.end21, %land.lhs.true7, %do.end
  %idx.0 = phi i32 [ %inc, %if.end21 ], [ 0, %land.lhs.true7 ], [ 0, %do.end ]
  %offset.addr.0 = phi i32 [ %add22, %if.end21 ], [ %offset, %land.lhs.true7 ], [ %offset, %do.end ]
  %q_predma24 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma24, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %if.end114, %if.end23
  %list119.sink = phi %struct.list_head* [ %list119, %if.end114 ], [ %list, %if.end23 ]
  %y_done.0 = phi i32 [ 0, %if.end23 ], [ %y_done.1, %if.end114 ]
  %bytes_written.0 = phi i32 [ 0, %if.end23 ], [ %add116, %if.end114 ]
  %idx.1 = phi i32 [ %idx.0, %if.end23 ], [ %inc117, %if.end114 ]
  %offset.addr.1 = phi i32 [ %offset.addr.0, %if.end23 ], [ %offset.addr.3, %if.end114 ]
  %next120 = getelementptr inbounds %struct.list_head, %struct.list_head* %list119.sink, i32 0, i32 0
  %14 = load %struct.list_head*, %struct.list_head** %next120, align 8, !tbaa !86
  %15 = bitcast %struct.list_head* %14 to i8*
  %add.ptr122 = getelementptr inbounds i8, i8* %15, i64 0
  %16 = bitcast i8* %add.ptr122 to %struct.ivtv_buffer*
  %list25 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 0
  %q_predma26 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %list27 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma26, i32 0, i32 0
  %cmp28 = icmp ne %struct.list_head* %list25, %list27
  br i1 %cmp28, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type30 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %17 = load i32, i32* %type30, align 8, !tbaa !348
  %cmp31 = icmp ne i32 %17, 8
  %tobool34 = icmp ne i32 %y_done.0, 0
  %or.cond = or i1 %cmp31, %tobool34
  br i1 %or.cond, label %if.else, label %land.lhs.true35

land.lhs.true35:                                  ; preds = %for.body
  %bytesused36 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %18 = load i32, i32* %bytesused36, align 8, !tbaa !363
  %add37 = add i32 %bytes_written.0, %18
  %cmp38 = icmp uge i32 %add37, %mul
  br i1 %cmp38, label %if.then40, label %if.else

if.then40:                                        ; preds = %land.lhs.true35
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 1
  %19 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %conv41 = trunc i64 %19 to i32
  %sg_pending42 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %20 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending42, align 8, !tbaa !640
  %idxprom43 = sext i32 %idx.1 to i64
  %arrayidx44 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %20, i64 %idxprom43
  %src45 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx44, i32 0, i32 0
  store i32 %conv41, i32* %src45, align 4, !tbaa !629
  %sg_pending46 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %21 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending46, align 8, !tbaa !640
  %idxprom47 = sext i32 %idx.1 to i64
  %arrayidx48 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %21, i64 %idxprom47
  %dst49 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx48, i32 0, i32 1
  store i32 %offset.addr.1, i32* %dst49, align 4, !tbaa !641
  %sub = sub i32 %mul, %bytes_written.0
  %sg_pending50 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %22 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending50, align 8, !tbaa !640
  %idxprom51 = sext i32 %idx.1 to i64
  %arrayidx52 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %22, i64 %idxprom51
  %size53 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx52, i32 0, i32 2
  store i32 %sub, i32* %size53, align 4, !tbaa !627
  %sg_pending54 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %23 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending54, align 8, !tbaa !640
  %idxprom55 = sext i32 %idx.1 to i64
  %arrayidx56 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %23, i64 %idxprom55
  %size57 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx56, i32 0, i32 2
  %24 = load i32, i32* %size57, align 4, !tbaa !627
  %bytesused58 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %25 = load i32, i32* %bytesused58, align 8, !tbaa !363
  %cmp59 = icmp ne i32 %24, %25
  br i1 %cmp59, label %if.then61, label %if.end114

if.then61:                                        ; preds = %if.then40
  %inc62 = add nsw i32 %idx.1, 1
  %dma_handle63 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 1
  %26 = load i64, i64* %dma_handle63, align 8, !tbaa !642
  %sg_pending64 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %27 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending64, align 8, !tbaa !640
  %sub65 = sub nsw i32 %inc62, 1
  %idxprom66 = sext i32 %sub65 to i64
  %arrayidx67 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %27, i64 %idxprom66
  %size68 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx67, i32 0, i32 2
  %28 = load i32, i32* %size68, align 4, !tbaa !627
  %conv69 = zext i32 %28 to i64
  %add70 = add i64 %26, %conv69
  %conv71 = trunc i64 %add70 to i32
  %sg_pending72 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %29 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending72, align 8, !tbaa !640
  %idxprom73 = sext i32 %inc62 to i64
  %arrayidx74 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %29, i64 %idxprom73
  %src75 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx74, i32 0, i32 0
  store i32 %conv71, i32* %src75, align 4, !tbaa !629
  %sg_pending76 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %30 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending76, align 8, !tbaa !640
  %idxprom77 = sext i32 %inc62 to i64
  %arrayidx78 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %30, i64 %idxprom77
  %dst79 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx78, i32 0, i32 1
  store i32 %add2, i32* %dst79, align 4, !tbaa !641
  %bytesused80 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %31 = load i32, i32* %bytesused80, align 8, !tbaa !363
  %sg_pending81 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %32 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending81, align 8, !tbaa !640
  %sub82 = sub nsw i32 %inc62, 1
  %idxprom83 = sext i32 %sub82 to i64
  %arrayidx84 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %32, i64 %idxprom83
  %size85 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx84, i32 0, i32 2
  %33 = load i32, i32* %size85, align 4, !tbaa !627
  %sub86 = sub i32 %31, %33
  %sg_pending87 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %34 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending87, align 8, !tbaa !640
  %idxprom88 = sext i32 %inc62 to i64
  %arrayidx89 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %34, i64 %idxprom88
  %size90 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx89, i32 0, i32 2
  store i32 %sub86, i32* %size90, align 4, !tbaa !627
  %sg_pending91 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %35 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending91, align 8, !tbaa !640
  %idxprom92 = sext i32 %inc62 to i64
  %arrayidx93 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %35, i64 %idxprom92
  %size94 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx93, i32 0, i32 2
  %36 = load i32, i32* %size94, align 4, !tbaa !627
  %add95 = add i32 %add2, %36
  br label %if.end114

if.else:                                          ; preds = %land.lhs.true35, %for.body
  %dma_handle97 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 1
  %37 = load i64, i64* %dma_handle97, align 8, !tbaa !642
  %conv98 = trunc i64 %37 to i32
  %sg_pending99 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %38 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending99, align 8, !tbaa !640
  %idxprom100 = sext i32 %idx.1 to i64
  %arrayidx101 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %38, i64 %idxprom100
  %src102 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx101, i32 0, i32 0
  store i32 %conv98, i32* %src102, align 4, !tbaa !629
  %sg_pending103 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %39 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending103, align 8, !tbaa !640
  %idxprom104 = sext i32 %idx.1 to i64
  %arrayidx105 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %39, i64 %idxprom104
  %dst106 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx105, i32 0, i32 1
  store i32 %offset.addr.1, i32* %dst106, align 4, !tbaa !641
  %bytesused107 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %40 = load i32, i32* %bytesused107, align 8, !tbaa !363
  %sg_pending108 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %41 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending108, align 8, !tbaa !640
  %idxprom109 = sext i32 %idx.1 to i64
  %arrayidx110 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %41, i64 %idxprom109
  %size111 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx110, i32 0, i32 2
  store i32 %40, i32* %size111, align 4, !tbaa !627
  %bytesused112 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %42 = load i32, i32* %bytesused112, align 8, !tbaa !363
  %add113 = add i32 %offset.addr.1, %42
  br label %if.end114

if.end114:                                        ; preds = %if.else, %if.then61, %if.then40
  %y_done.1 = phi i32 [ %y_done.0, %if.else ], [ 1, %if.then61 ], [ 1, %if.then40 ]
  %idx.3 = phi i32 [ %idx.1, %if.else ], [ %inc62, %if.then61 ], [ %idx.1, %if.then40 ]
  %offset.addr.3 = phi i32 [ %add113, %if.else ], [ %add95, %if.then61 ], [ %add2, %if.then40 ]
  %bytesused115 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 5
  %43 = load i32, i32* %bytesused115, align 8, !tbaa !363
  %add116 = add i32 %bytes_written.0, %43
  call void @ivtv_buf_sync_for_device(%struct.ivtv_stream.4642* %s, %struct.ivtv_buffer* %16)
  %inc117 = add nsw i32 %idx.3, 1
  %list119 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %16, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  store i32 %idx.1, i32* %sg_pending_size, align 8, !tbaa !643
  call void @ivtv_stream_sync_for_device(%struct.ivtv_stream.4642* %s)
  %tobool123 = icmp ne i32 %lock, 0
  br i1 %tobool123, label %do.body126, label %cond.true146

do.body126:                                       ; preds = %for.end
  %44 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %44) #8
  %45 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %45) #8
  %cmp127 = icmp eq i64* %__dummy, %__dummy2
  %conv128 = zext i1 %cmp127 to i32
  %46 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %46) #8
  %47 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %47) #8
  %dma_reg_lock = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 53
  %call130 = call %struct.raw_spinlock* @spinlock_check.411(%struct.spinlock* %dma_reg_lock)
  %call131 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call130)
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call136 = call zeroext i1 @constant_test_bit.412(i64 0, i64* %i_flags)
  br i1 %call136, label %if.else142, label %if.then141

if.then141:                                       ; preds = %do.body126
  call void @ivtv_dma_dec_start(%struct.ivtv_stream.4642* %s)
  br label %if.end143

if.else142:                                       ; preds = %do.body126
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  call void @set_bit.413(i64 0, i64* %s_flags)
  br label %if.end143

if.end143:                                        ; preds = %if.else142, %if.then141
  %dma_reg_lock144 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 53
  call void @spin_unlock_irqrestore(%struct.spinlock* %dma_reg_lock144, i64 %call131)
  br label %if.end158

cond.true146:                                     ; preds = %for.end
  %i_flags147 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call148 = call zeroext i1 @constant_test_bit.412(i64 0, i64* %i_flags147)
  br i1 %call148, label %if.else155, label %if.then154

if.then154:                                       ; preds = %cond.true146
  call void @ivtv_dma_dec_start(%struct.ivtv_stream.4642* %s)
  br label %if.end158

if.else155:                                       ; preds = %cond.true146
  %s_flags156 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  call void @set_bit.413(i64 0, i64* %s_flags156)
  br label %if.end158

if.end158:                                        ; preds = %if.else155, %if.then154, %if.end143
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_buf_sync_for_device(%struct.ivtv_stream.4642* %s, %struct.ivtv_buffer* %buf) #4 {
entry:
  %call = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 1
  %2 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %buf_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %3 = load i32, i32* %buf_size, align 8, !tbaa !403
  %add = add i32 %3, 256
  %conv = zext i32 %add to i64
  %dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 8
  %4 = load i32, i32* %dma, align 8, !tbaa !633
  call void @pci_dma_sync_single_for_device(%struct.pci_dev* %1, i64 %2, i64 %conv, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_stream_sync_for_device(%struct.ivtv_stream.4642* %s) #4 {
entry:
  %call = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 30
  %2 = load i64, i64* %sg_handle, align 8, !tbaa !644
  call void @pci_dma_sync_single_for_device(%struct.pci_dev* %1, i64 %2, i64 12, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check.411(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

declare i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock*) #2 section ".spinlock.text"

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.412(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_dma_dec_start(%struct.ivtv_stream.4642* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %q_predma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma, i32 0, i32 3
  %1 = load i32, i32* %bytesused, align 8, !tbaa !637
  %tobool = icmp ne i32 %1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %q_predma2 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %q_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %q_predma3 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused4 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma3, i32 0, i32 3
  %2 = load i32, i32* %bytesused4, align 8, !tbaa !637
  %call = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %s, %struct.ivtv_queue* %q_predma2, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_dma, i32 %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %dma_xfer_cnt = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 26
  %3 = load i16, i16* %dma_xfer_cnt, align 8, !tbaa !645
  %inc = add i16 %3, 1
  store i16 %inc, i16* %dma_xfer_cnt, align 8, !tbaa !645
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %4 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %5 = bitcast %struct.exception_table_entry* %4 to i8*
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %6 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %7 = bitcast %struct.exception_table_entry* %6 to i8*
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %8 = load i32, i32* %sg_pending_size, align 8, !tbaa !643
  %conv = sext i32 %8 to i64
  %mul = mul i64 12, %conv
  %call5 = call i8* @__memcpy(i8* %5, i8* %7, i64 %mul)
  %sg_pending_size6 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %9 = load i32, i32* %sg_pending_size6, align 8, !tbaa !643
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 32
  store i32 %9, i32* %sg_processing_size, align 4, !tbaa !630
  %sg_pending_size7 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  store i32 0, i32* %sg_pending_size7, align 8, !tbaa !643
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  store i32 0, i32* %sg_processed, align 8, !tbaa !646
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %10
  %tobool8 = icmp ne i32 %and, 0
  br i1 %tobool8, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %if.end
  %11 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and9 = and i32 %11, 1024
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.then11, label %do.end

if.then11:                                        ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name12 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %12 = load i8*, i8** %name12, align 8, !tbaa !349
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11.414, i32 0, i32 0), i8* %arraydecay, i8* %12)
  br label %do.end

do.end:                                           ; preds = %if.then11, %land.lhs.true, %if.end
  %dma_retries = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 58
  store i32 0, i32* %dma_retries, align 8, !tbaa !647
  call void @ivtv_dma_dec_start_xfer(%struct.ivtv_stream.4642* %s)
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 0, i64* %i_flags)
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %13 = load i32, i32* %type, align 8, !tbaa !348
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 54
  store i32 %13, i32* %cur_dma_stream, align 8, !tbaa !295
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.413(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !648
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock_irqrestore(%struct.spinlock* %lock, i64 %flags) #1 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

declare void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock*, i64) #2 section ".spinlock.text"

; Function Attrs: nounwind uwtable
define internal void @ivtv_dma_dec_start_xfer(%struct.ivtv_stream.4642* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %1 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %2 = load i32, i32* %sg_processed, align 8, !tbaa !646
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %1, i64 %idxprom
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %src, align 4, !tbaa !629
  %sg_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %4 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma, align 8, !tbaa !649
  %src2 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %4, i32 0, i32 0
  store i32 %3, i32* %src2, align 4, !tbaa !650
  %sg_processing3 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %5 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing3, align 8, !tbaa !626
  %sg_processed4 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %6 = load i32, i32* %sg_processed4, align 8, !tbaa !646
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %5, i64 %idxprom5
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx6, i32 0, i32 1
  %7 = load i32, i32* %dst, align 4, !tbaa !641
  %sg_dma7 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %8 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma7, align 8, !tbaa !649
  %dst8 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %8, i32 0, i32 1
  store i32 %7, i32* %dst8, align 4, !tbaa !652
  %sg_processing9 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %9 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing9, align 8, !tbaa !626
  %sg_processed10 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %10 = load i32, i32* %sg_processed10, align 8, !tbaa !646
  %idxprom11 = sext i32 %10 to i64
  %arrayidx12 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %9, i64 %idxprom11
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx12, i32 0, i32 2
  %11 = load i32, i32* %size, align 4, !tbaa !627
  %or = or i32 %11, -2147483648
  %sg_dma13 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %12 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma13, align 8, !tbaa !649
  %size14 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %12, i32 0, i32 2
  store i32 %or, i32* %size14, align 4, !tbaa !653
  %sg_processed15 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %13 = load i32, i32* %sg_processed15, align 8, !tbaa !646
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %sg_processed15, align 8, !tbaa !646
  call void @ivtv_stream_sync_for_device(%struct.ivtv_stream.4642* %s)
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 30
  %14 = load i64, i64* %sg_handle, align 8, !tbaa !644
  %conv = trunc i64 %14 to i32
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %15 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %15, i64 8
  call void @writel.406(i32 %conv, i8* %add.ptr)
  %reg_mem16 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem16, align 8, !tbaa !171
  %add.ptr17 = getelementptr i8, i8* %16, i64 0
  %call = call i32 @readl.415(i8* %add.ptr17)
  %or18 = or i32 %call, 1
  %reg_mem19 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %17 = load i8*, i8** %reg_mem19, align 8, !tbaa !171
  %add.ptr20 = getelementptr i8, i8* %17, i64 0
  call void @writel.406(i32 %or18, i8* %add.ptr20)
  %reg_mem21 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %18 = load i8*, i8** %reg_mem21, align 8, !tbaa !171
  %add.ptr22 = getelementptr i8, i8* %18, i64 0
  %call23 = call i32 @readl.415(i8* %add.ptr22)
  %19 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %call24 = call i64 @msecs_to_jiffies.416(i32 300)
  %add = add i64 %19, %call24
  %dma_timer = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 60
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %dma_timer, i32 0, i32 1
  store i64 %add, i64* %expires, align 8, !tbaa !654
  %dma_timer25 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 60
  call void @add_timer(%struct.timer_list* %dma_timer25)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.415(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !655
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.416(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

declare void @add_timer(%struct.timer_list*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s) #4 {
entry:
  %call = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %s)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  ret i32 %lnot.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_device(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_device(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_device(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.417(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 349, i64 12) #8, !srcloc !656
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_device = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device, align 8, !tbaa !657
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_device13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device13, align 8, !tbaa !657
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_device(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_dma_ops.417(%struct.device* %dev) #4 {
entry:
  %magicptr = ptrtoint %struct.device* %dev to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %dma_ops = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops, align 8, !tbaa !338
  %tobool1 = icmp ne %struct.dma_map_ops* %0, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %dma_ops2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %1 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops2, align 8, !tbaa !338
  br label %return

if.end:                                           ; preds = %land.lhs.true
  %tobool3 = icmp ne %struct.device* %dev, null
  br i1 %tobool3, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !tbaa !339
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end, %entry
  %cond = phi %struct.bus_type* [ %2, %cond.true ], [ null, %entry ], [ null, %if.end ]
  %call = call %struct.dma_map_ops* @get_arch_dma_ops.419()
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.dma_map_ops* [ %1, %if.then ], [ %call, %cond.end ]
  ret %struct.dma_map_ops* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @valid_dma_direction(i32 %dma_direction) #4 {
entry:
  %switch = icmp ult i32 %dma_direction, 3
  %. = select i1 %switch, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

declare void @debug_dma_sync_single_for_device(%struct.device*, i64, i64, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_arch_dma_ops.419() #4 {
entry:
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !tbaa !86
  ret %struct.dma_map_ops* %0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_irq_handler(i32 %irq, i8* %dev_id) #0 {
entry:
  %0 = bitcast i8* %dev_id to %struct.ivtv.4633*
  %dma_reg_lock = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 53
  call void @spin_lock.422(%struct.spinlock* %dma_reg_lock)
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 64
  %call = call i32 @readl.415(i8* %add.ptr)
  %irqmask = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 48
  %2 = load i32, i32* %irqmask, align 8, !tbaa !179
  %neg = xor i32 %2, -1
  %and = and i32 %neg, %call
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %reg_mem1 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem1, align 8, !tbaa !171
  %add.ptr2 = getelementptr i8, i8* %3, i64 64
  call void @writel.406(i32 %and, i8* %add.ptr2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp = icmp eq i32 0, %and
  br i1 %cmp, label %if.then3, label %if.end30

if.then3:                                         ; preds = %if.end
  %irqmask4 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 48
  %4 = load i32, i32* %irqmask4, align 8, !tbaa !179
  %neg5 = xor i32 %4, -1
  %and6 = and i32 %neg5, 1024
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %if.end25

if.then8:                                         ; preds = %if.then3
  %last_vsync_field = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 61
  %5 = load i32, i32* %last_vsync_field, align 8, !tbaa !658
  %and9 = and i32 %5, 1
  %reg_mem10 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem10, align 8, !tbaa !171
  %add.ptr11 = getelementptr i8, i8* %6, i64 10432
  %call12 = call i32 @readl.415(i8* %add.ptr11)
  %and13 = and i32 %call12, 1
  %cmp14 = icmp ne i32 %and9, %and13
  br i1 %cmp14, label %do.body, label %if.end25

do.body:                                          ; preds = %if.then8
  %7 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 256, %7
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %if.end25

if.then18:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %reg_mem19 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem19, align 8, !tbaa !171
  %add.ptr20 = getelementptr i8, i8* %8, i64 10432
  %call21 = call i32 @readl.415(i8* %add.ptr20)
  %shr = lshr i32 %call21, 16
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.1.423, i32 0, i32 0), i8* %arraydecay, i32 %shr)
  br label %if.end25

if.end25:                                         ; preds = %if.then18, %do.body, %if.then8, %if.then3
  %vsync_force.1 = phi i8 [ 0, %if.then3 ], [ 0, %if.then8 ], [ 1, %if.then18 ], [ 1, %do.body ]
  %tobool26 = icmp ne i8 %vsync_force.1, 0
  br i1 %tobool26, label %if.end30, label %if.then27

if.then27:                                        ; preds = %if.end25
  %dma_reg_lock28 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 53
  call void @spin_unlock.424(%struct.spinlock* %dma_reg_lock28)
  br label %cleanup225

if.end30:                                         ; preds = %if.end25, %if.end
  %vsync_force.2 = phi i8 [ 0, %if.end ], [ %vsync_force.1, %if.end25 ]
  %and31 = and i32 %and, 9632767
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %do.body34, label %if.end47

do.body34:                                        ; preds = %if.end30
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and35 = and i32 64, %9
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %land.lhs.true, label %if.end47

land.lhs.true:                                    ; preds = %do.body34
  %10 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and37 = and i32 %10, 1024
  %tobool38 = icmp ne i32 %and37, 0
  br i1 %tobool38, label %if.then39, label %if.end47

if.then39:                                        ; preds = %land.lhs.true
  %v4l2_dev40 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name41 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev40, i32 0, i32 4
  %arraydecay42 = getelementptr inbounds [36 x i8], [36 x i8]* %name41, i32 0, i32 0
  %call43 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.2.425, i32 0, i32 0), i8* %arraydecay42, i32 %and)
  br label %if.end47

if.end47:                                         ; preds = %if.then39, %land.lhs.true, %do.body34, %if.end30
  %and48 = and i32 %and, 1048576
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %do.body51, label %if.end65

do.body51:                                        ; preds = %if.end47
  %11 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and52 = and i32 64, %11
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %land.lhs.true54, label %if.end65

land.lhs.true54:                                  ; preds = %do.body51
  %12 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and55 = and i32 %12, 1024
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %if.end65

if.then57:                                        ; preds = %land.lhs.true54
  %v4l2_dev58 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name59 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev58, i32 0, i32 4
  %arraydecay60 = getelementptr inbounds [36 x i8], [36 x i8]* %name59, i32 0, i32 0
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3.426, i32 0, i32 0), i8* %arraydecay60)
  br label %if.end65

if.end65:                                         ; preds = %if.then57, %land.lhs.true54, %do.body51, %if.end47
  %and66 = and i32 %and, 65536
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end65
  call void @ivtv_irq_dma_read(%struct.ivtv.4633* %0)
  br label %if.end69

if.end69:                                         ; preds = %if.then68, %if.end65
  %and70 = and i32 %and, 134217728
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %if.then72, label %if.end73

if.then72:                                        ; preds = %if.end69
  call void @ivtv_irq_enc_dma_complete(%struct.ivtv.4633* %0)
  br label %if.end73

if.end73:                                         ; preds = %if.then72, %if.end69
  %and74 = and i32 %and, 33554432
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end73
  call void @ivtv_irq_enc_pio_complete(%struct.ivtv.4633* %0)
  br label %if.end77

if.end77:                                         ; preds = %if.then76, %if.end73
  %and78 = and i32 %and, 262144
  %tobool79 = icmp ne i32 %and78, 0
  br i1 %tobool79, label %if.then80, label %if.end81

if.then80:                                        ; preds = %if.end77
  call void @ivtv_irq_dma_err(%struct.ivtv.4633* %0)
  br label %if.end81

if.end81:                                         ; preds = %if.then80, %if.end77
  %and82 = and i32 %and, -2147483648
  %tobool83 = icmp ne i32 %and82, 0
  br i1 %tobool83, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.end81
  call void @ivtv_irq_enc_start_cap(%struct.ivtv.4633* %0)
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.end81
  %and86 = and i32 %and, 536870912
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %if.end89

if.then88:                                        ; preds = %if.end85
  call void @ivtv_irq_enc_vbi_cap(%struct.ivtv.4633* %0)
  br label %if.end89

if.end89:                                         ; preds = %if.then88, %if.end85
  %and90 = and i32 %and, 524288
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then92, label %if.end93

if.then92:                                        ; preds = %if.end89
  call void @ivtv_irq_dec_vbi_reinsert(%struct.ivtv.4633* %0)
  br label %if.end93

if.end93:                                         ; preds = %if.then92, %if.end89
  %and94 = and i32 %and, 1073741824
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %do.body97, label %if.end108

do.body97:                                        ; preds = %if.end93
  %13 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and98 = and i32 64, %13
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then100, label %do.end107

if.then100:                                       ; preds = %do.body97
  %v4l2_dev101 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name102 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev101, i32 0, i32 4
  %arraydecay103 = getelementptr inbounds [36 x i8], [36 x i8]* %name102, i32 0, i32 0
  %call104 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4.427, i32 0, i32 0), i8* %arraydecay103)
  br label %do.end107

do.end107:                                        ; preds = %if.then100, %do.body97
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 4, i64* %i_flags)
  %eos_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 63
  call void @__wake_up(%struct.__wait_queue_head* %eos_waitq, i32 3, i32 1, i8* null)
  br label %if.end108

if.end108:                                        ; preds = %do.end107, %if.end93
  %and109 = and i32 %and, 4194304
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %if.then111, label %if.end112

if.then111:                                       ; preds = %if.end108
  call void @ivtv_irq_dec_data_req(%struct.ivtv.4633* %0)
  br label %if.end112

if.end112:                                        ; preds = %if.then111, %if.end108
  %irqmask113 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 48
  %14 = load i32, i32* %irqmask113, align 8, !tbaa !179
  %neg114 = xor i32 %14, -1
  %and115 = and i32 %neg114, 1024
  %tobool116 = icmp ne i32 %and115, 0
  br i1 %tobool116, label %if.then117, label %if.end118

if.then117:                                       ; preds = %if.end112
  call void @ivtv_irq_vsync(%struct.ivtv.4633* %0)
  br label %if.end118

if.end118:                                        ; preds = %if.then117, %if.end112
  %and119 = and i32 %and, 268435456
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %do.body122, label %if.end133

do.body122:                                       ; preds = %if.end118
  %15 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and123 = and i32 64, %15
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.then125, label %if.end133

if.then125:                                       ; preds = %do.body122
  %v4l2_dev126 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name127 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev126, i32 0, i32 4
  %arraydecay128 = getelementptr inbounds [36 x i8], [36 x i8]* %name127, i32 0, i32 0
  %call129 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5.428, i32 0, i32 0), i8* %arraydecay128)
  br label %if.end133

if.end133:                                        ; preds = %if.then125, %do.body122, %if.end118
  %and134 = and i32 %and, 16777216
  %tobool135 = icmp ne i32 %and134, 0
  br i1 %tobool135, label %do.body137, label %if.end148

do.body137:                                       ; preds = %if.end133
  %16 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and138 = and i32 2, %16
  %tobool139 = icmp ne i32 %and138, 0
  br i1 %tobool139, label %if.then140, label %if.end148

if.then140:                                       ; preds = %do.body137
  %v4l2_dev141 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name142 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev141, i32 0, i32 4
  %arraydecay143 = getelementptr inbounds [36 x i8], [36 x i8]* %name142, i32 0, i32 0
  %call144 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.429, i32 0, i32 0), i8* %arraydecay143)
  br label %if.end148

if.end148:                                        ; preds = %if.then140, %do.body137, %if.end133
  %and149 = and i32 %and, -1471348736
  %tobool150 = icmp ne i32 %and149, 0
  br i1 %tobool150, label %cond.true, label %if.end177

cond.true:                                        ; preds = %if.end148
  %i_flags152 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call153 = call zeroext i1 @constant_test_bit.412(i64 0, i64* %i_flags152)
  br i1 %call153, label %if.end177, label %if.then156

if.then156:                                       ; preds = %cond.true
  %irq_rr_idx = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 49
  %17 = load i32, i32* %irq_rr_idx, align 4, !tbaa !659
  %inc = add i32 %17, 1
  store i32 %inc, i32* %irq_rr_idx, align 4, !tbaa !659
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then156
  %i.0 = phi i32 [ 0, %if.then156 ], [ %inc166, %for.inc ]
  %cmp157 = icmp slt i32 %i.0, 9
  br i1 %cmp157, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %irq_rr_idx158 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 49
  %18 = load i32, i32* %irq_rr_idx158, align 4, !tbaa !659
  %add = add i32 %i.0, %18
  %rem = urem i32 %add, 9
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 42
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 7
  %call159 = call zeroext i1 @test_and_clear_bit.404(i64 0, i64* %s_flags)
  br i1 %call159, label %if.end161, label %LeafBlock

if.end161:                                        ; preds = %for.body
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %19 = load i32, i32* %type, align 8, !tbaa !348
  %cmp162 = icmp sge i32 %19, 5
  br i1 %cmp162, label %if.then163, label %if.else

if.then163:                                       ; preds = %if.end161
  call void @ivtv_dma_dec_start(%struct.ivtv_stream.4642* %arrayidx)
  br label %LeafBlock

if.else:                                          ; preds = %if.end161
  call void @ivtv_dma_enc_start(%struct.ivtv_stream.4642* %arrayidx)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.else, %if.then163, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 16, %for.body ], [ 14, %if.else ], [ 14, %if.then163 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 16
  br i1 %SwitchLeaf, label %for.inc, label %for.end

for.inc:                                          ; preds = %LeafBlock
  %inc166 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %LeafBlock, %for.cond
  %cmp167 = icmp eq i32 %i.0, 9
  br i1 %cmp167, label %cond.true169, label %if.end177

cond.true169:                                     ; preds = %for.end
  %i_flags170 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call171 = call zeroext i1 @constant_test_bit.412(i64 2, i64* %i_flags170)
  br i1 %call171, label %if.then175, label %if.end177

if.then175:                                       ; preds = %cond.true169
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_start to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %0)
  br label %if.end177

if.end177:                                        ; preds = %if.then175, %cond.true169, %for.end, %cond.true, %if.end148
  %and178 = and i32 %and, -1471348736
  %tobool179 = icmp ne i32 %and178, 0
  br i1 %tobool179, label %cond.true181, label %if.end217

cond.true181:                                     ; preds = %if.end177
  %i_flags182 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call183 = call zeroext i1 @constant_test_bit.412(i64 19, i64* %i_flags182)
  br i1 %call183, label %if.end217, label %if.then187

if.then187:                                       ; preds = %cond.true181
  %irq_rr_idx188 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 49
  %20 = load i32, i32* %irq_rr_idx188, align 4, !tbaa !659
  %inc189 = add i32 %20, 1
  store i32 %inc189, i32* %irq_rr_idx188, align 4, !tbaa !659
  br label %for.cond190

for.cond190:                                      ; preds = %for.inc214, %if.then187
  %i.1 = phi i32 [ 0, %if.then187 ], [ %inc215, %for.inc214 ]
  %cmp191 = icmp slt i32 %i.1, 9
  br i1 %cmp191, label %for.body192, label %if.end217

for.body192:                                      ; preds = %for.cond190
  %irq_rr_idx194 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 49
  %21 = load i32, i32* %irq_rr_idx194, align 4, !tbaa !659
  %add195 = add i32 %i.1, %21
  %rem196 = urem i32 %add195, 9
  %streams198 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 42
  %idxprom199 = sext i32 %rem196 to i64
  %arrayidx200 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams198, i64 0, i64 %idxprom199
  %s_flags201 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx200, i32 0, i32 7
  %call202 = call zeroext i1 @test_and_clear_bit.404(i64 9, i64* %s_flags201)
  br i1 %call202, label %if.end204, label %LeafBlock2

if.end204:                                        ; preds = %for.body192
  %type205 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx200, i32 0, i32 3
  %22 = load i32, i32* %type205, align 8, !tbaa !348
  %cmp206 = icmp eq i32 %22, 6
  br i1 %cmp206, label %if.then209, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end204
  %type207 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx200, i32 0, i32 3
  %23 = load i32, i32* %type207, align 8, !tbaa !348
  %cmp208 = icmp slt i32 %23, 5
  br i1 %cmp208, label %if.then209, label %LeafBlock2

if.then209:                                       ; preds = %lor.lhs.false, %if.end204
  call void @ivtv_dma_enc_start(%struct.ivtv_stream.4642* %arrayidx200)
  br label %LeafBlock2

LeafBlock2:                                       ; preds = %if.then209, %lor.lhs.false, %for.body192
  %cleanup.dest.slot.1 = phi i32 [ 19, %for.body192 ], [ 17, %if.then209 ], [ 17, %lor.lhs.false ]
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.slot.1, 19
  br i1 %SwitchLeaf3, label %for.inc214, label %if.end217

for.inc214:                                       ; preds = %LeafBlock2
  %inc215 = add nsw i32 %i.1, 1
  br label %for.cond190

if.end217:                                        ; preds = %LeafBlock2, %for.cond190, %cond.true181, %if.end177
  %i_flags218 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call219 = call zeroext i1 @test_and_clear_bit.404(i64 15, i64* %i_flags218)
  br i1 %call219, label %if.then220, label %if.end222

if.then220:                                       ; preds = %if.end217
  %irq_worker = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 50
  %irq_work = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 52
  %call221 = call zeroext i1 @kthread_queue_work(%struct.kthread_worker.4632* %irq_worker, %struct.kthread_work.4631* %irq_work)
  br label %if.end222

if.end222:                                        ; preds = %if.then220, %if.end217
  %dma_reg_lock223 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 53
  call void @spin_unlock.424(%struct.spinlock* %dma_reg_lock223)
  %conv = zext i8 %vsync_force.2 to i32
  %tobool224 = icmp ne i32 %conv, 0
  %24 = zext i1 %tobool224 to i64
  %cond = select i1 %tobool224, i32 0, i32 1
  br label %cleanup225

cleanup225:                                       ; preds = %if.end222, %if.then27
  %retval.0 = phi i32 [ %cond, %if.end222 ], [ 0, %if.then27 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_lock.422(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_lock(%struct.raw_spinlock* %rlock)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock.424(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @_raw_spin_unlock(%struct.raw_spinlock* %rlock)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_dma_read(%struct.ivtv.4633* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %1, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.12.458, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %dma_timer = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 60
  %call3 = call i32 @del_timer(%struct.timer_list* %dma_timer)
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call4 = call zeroext i1 @constant_test_bit.412(i64 1, i64* %i_flags)
  br i1 %call4, label %cond.true10, label %land.lhs.true7

land.lhs.true7:                                   ; preds = %do.end
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %2 = load i32, i32* %cur_dma_stream, align 8, !tbaa !295
  %cmp = icmp slt i32 %2, 0
  br i1 %cmp, label %cleanup.cont, label %cond.true10

cond.true10:                                      ; preds = %land.lhs.true7, %do.end
  %i_flags11 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call12 = call zeroext i1 @constant_test_bit.412(i64 1, i64* %i_flags11)
  br i1 %call12, label %if.end81, label %if.then16

if.then16:                                        ; preds = %cond.true10
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %cur_dma_stream17 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %3 = load i32, i32* %cur_dma_stream17, align 8, !tbaa !295
  %idxprom = sext i32 %3 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  call void @ivtv_stream_sync_for_cpu(%struct.ivtv_stream.4642* %arrayidx)
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %4, i64 4
  %call18 = call i32 @readl.415(i8* %add.ptr)
  %and19 = and i32 %call18, 20
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %do.body22, label %if.end51

do.body22:                                        ; preds = %if.then16
  %5 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and23 = and i32 1, %5
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then25, label %do.end35

if.then25:                                        ; preds = %do.body22
  %v4l2_dev26 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name27 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev26, i32 0, i32 4
  %arraydecay28 = getelementptr inbounds [36 x i8], [36 x i8]* %name27, i32 0, i32 0
  %reg_mem29 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem29, align 8, !tbaa !171
  %add.ptr30 = getelementptr i8, i8* %6, i64 4
  %call31 = call i32 @readl.415(i8* %add.ptr30)
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 33
  %7 = load i32, i32* %sg_processed, align 8, !tbaa !646
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 32
  %8 = load i32, i32* %sg_processing_size, align 4, !tbaa !630
  %dma_retries = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %9 = load i32, i32* %dma_retries, align 8, !tbaa !647
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.13.459, i32 0, i32 0), i8* %arraydecay28, i32 %call31, i32 %7, i32 %8, i32 %9)
  br label %do.end35

do.end35:                                         ; preds = %if.then25, %do.body22
  %reg_mem36 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %10 = load i8*, i8** %reg_mem36, align 8, !tbaa !171
  %add.ptr37 = getelementptr i8, i8* %10, i64 4
  %call38 = call i32 @readl.415(i8* %add.ptr37)
  %and39 = and i32 %call38, 3
  %reg_mem40 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %11 = load i8*, i8** %reg_mem40, align 8, !tbaa !171
  %add.ptr41 = getelementptr i8, i8* %11, i64 4
  call void @writel.406(i32 %and39, i8* %add.ptr41)
  %dma_retries42 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %12 = load i32, i32* %dma_retries42, align 8, !tbaa !647
  %cmp43 = icmp eq i32 %12, 3
  br i1 %cmp43, label %if.then44, label %if.else

if.then44:                                        ; preds = %do.end35
  %dma_retries45 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  store i32 0, i32* %dma_retries45, align 8, !tbaa !647
  %sg_processing_size46 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 32
  %13 = load i32, i32* %sg_processing_size46, align 4, !tbaa !630
  %sg_processed47 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 33
  store i32 %13, i32* %sg_processed47, align 8, !tbaa !646
  br label %if.end51

if.else:                                          ; preds = %do.end35
  %sg_processed48 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 33
  store i32 0, i32* %sg_processed48, align 8, !tbaa !646
  %dma_retries49 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %14 = load i32, i32* %dma_retries49, align 8, !tbaa !647
  %inc = add nsw i32 %14, 1
  store i32 %inc, i32* %dma_retries49, align 8, !tbaa !647
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then44, %if.then16
  %sg_processed52 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 33
  %15 = load i32, i32* %sg_processed52, align 8, !tbaa !646
  %sg_processing_size53 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 32
  %16 = load i32, i32* %sg_processing_size53, align 4, !tbaa !630
  %cmp54 = icmp slt i32 %15, %16
  br i1 %cmp54, label %if.then55, label %if.end56

if.then55:                                        ; preds = %if.end51
  call void @ivtv_dma_dec_start_xfer(%struct.ivtv_stream.4642* %arrayidx)
  br label %cleanup.cont

if.end56:                                         ; preds = %if.end51
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %17 = load i32, i32* %type, align 8, !tbaa !348
  %cmp57 = icmp eq i32 %17, 8
  %. = select i1 %cmp57, i32 2, i32 0
  %18 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and61 = and i32 32, %18
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %land.lhs.true63, label %do.end74

land.lhs.true63:                                  ; preds = %if.end56
  %19 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and64 = and i32 %19, 1024
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.then66, label %do.end74

if.then66:                                        ; preds = %land.lhs.true63
  %v4l2_dev67 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name68 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev67, i32 0, i32 4
  %arraydecay69 = getelementptr inbounds [36 x i8], [36 x i8]* %name68, i32 0, i32 0
  %name70 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 2
  %20 = load i8*, i8** %name70, align 8, !tbaa !349
  %q_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma, i32 0, i32 3
  %21 = load i32, i32* %bytesused, align 8, !tbaa !660
  %call71 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14.460, i32 0, i32 0), i8* %arraydecay69, i8* %20, i32 %21)
  br label %do.end74

do.end74:                                         ; preds = %if.then66, %land.lhs.true63, %if.end56
  %q_dma75 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %bytesused76 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma75, i32 0, i32 3
  %22 = load i32, i32* %bytesused76, align 8, !tbaa !660
  %call77 = call i32 (%struct.ivtv.4633*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv.4633*, i32, i32, ...)*)(%struct.ivtv.4633* %itv, i32 11, i32 3, i32 0, i32 %22, i32 %.)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %do.end74
  %q_dma78 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %call79 = call %struct.ivtv_buffer* bitcast (%struct.ivtv_buffer* (%struct.ivtv_stream.1071*, %struct.ivtv_queue*)* @ivtv_dequeue to %struct.ivtv_buffer* (%struct.ivtv_stream.4642*, %struct.ivtv_queue*)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_queue* %q_dma78)
  %cmp80 = icmp ne %struct.ivtv_buffer* %call79, null
  br i1 %cmp80, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  call void @ivtv_buf_sync_for_cpu(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_buffer* %call79)
  %q_free = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 21
  call void bitcast (void (%struct.ivtv_stream.1071*, %struct.ivtv_buffer*, %struct.ivtv_queue*)* @ivtv_enqueue to void (%struct.ivtv_stream.4642*, %struct.ivtv_buffer*, %struct.ivtv_queue*)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_buffer* %call79, %struct.ivtv_queue* %q_free)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %waitq = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 16
  call void @__wake_up(%struct.__wait_queue_head* %waitq, i32 3, i32 1, i8* null)
  br label %if.end81

if.end81:                                         ; preds = %while.end, %cond.true10
  %i_flags82 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 1, i64* %i_flags82)
  %i_flags83 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 0, i64* %i_flags83)
  %cur_dma_stream84 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  store i32 -1, i32* %cur_dma_stream84, align 8, !tbaa !295
  %dma_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 62
  call void @__wake_up(%struct.__wait_queue_head* %dma_waitq, i32 3, i32 1, i8* null)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end81, %if.then55, %land.lhs.true7
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end81 ], [ 1, %if.then55 ], [ 1, %land.lhs.true7 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_enc_dma_complete(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %enc_mbox = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 66
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %enc_mbox, i32 8, i32 2, i32* %arraydecay)
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %2, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay3 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %3 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %arrayidx4 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !120
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %5 = load i32, i32* %cur_dma_stream, align 8, !tbaa !295
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.15.456, i32 0, i32 0), i8* %arraydecay3, i32 %3, i32 %4, i32 %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %dma_timer = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 60
  %call5 = call i32 @del_timer(%struct.timer_list* %dma_timer)
  %cur_dma_stream6 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %6 = load i32, i32* %cur_dma_stream6, align 8, !tbaa !295
  %cmp = icmp slt i32 %6, 0
  br i1 %cmp, label %cleanup, label %if.end8

if.end8:                                          ; preds = %do.end
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %cur_dma_stream9 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %7 = load i32, i32* %cur_dma_stream9, align 8, !tbaa !295
  %idxprom = sext i32 %7 to i64
  %arrayidx10 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  call void @ivtv_stream_sync_for_cpu(%struct.ivtv_stream.4642* %arrayidx10)
  %arrayidx11 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %8 = load i32, i32* %arrayidx11, align 16, !tbaa !120
  %and12 = and i32 %8, 24
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %do.body15, label %if.end40

do.body15:                                        ; preds = %if.end8
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and16 = and i32 1, %9
  %tobool17 = icmp ne i32 %and16, 0
  br i1 %tobool17, label %if.then18, label %do.end26

if.then18:                                        ; preds = %do.body15
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %arrayidx22 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %10 = load i32, i32* %arrayidx22, align 16, !tbaa !120
  %dma_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 12
  %11 = load i32, i32* %dma_offset, align 8, !tbaa !661
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 33
  %12 = load i32, i32* %sg_processed, align 8, !tbaa !646
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 32
  %13 = load i32, i32* %sg_processing_size, align 4, !tbaa !630
  %dma_retries = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %14 = load i32, i32* %dma_retries, align 8, !tbaa !647
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.16.457, i32 0, i32 0), i8* %arraydecay21, i32 %10, i32 %11, i32 %12, i32 %13, i32 %14)
  br label %do.end26

do.end26:                                         ; preds = %if.then18, %do.body15
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %15 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %15, i64 4
  %call27 = call i32 @readl.415(i8* %add.ptr)
  %and28 = and i32 %call27, 3
  %reg_mem29 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem29, align 8, !tbaa !171
  %add.ptr30 = getelementptr i8, i8* %16, i64 4
  call void @writel.406(i32 %and28, i8* %add.ptr30)
  %dma_retries31 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %17 = load i32, i32* %dma_retries31, align 8, !tbaa !647
  %cmp32 = icmp eq i32 %17, 3
  br i1 %cmp32, label %if.then33, label %if.else

if.then33:                                        ; preds = %do.end26
  %dma_retries34 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  store i32 0, i32* %dma_retries34, align 8, !tbaa !647
  %sg_processing_size35 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 32
  %18 = load i32, i32* %sg_processing_size35, align 4, !tbaa !630
  %sg_processed36 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 33
  store i32 %18, i32* %sg_processed36, align 8, !tbaa !646
  br label %if.end40

if.else:                                          ; preds = %do.end26
  %sg_processed37 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 33
  store i32 0, i32* %sg_processed37, align 8, !tbaa !646
  %dma_retries38 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %19 = load i32, i32* %dma_retries38, align 8, !tbaa !647
  %inc = add nsw i32 %19, 1
  store i32 %inc, i32* %dma_retries38, align 8, !tbaa !647
  br label %if.end40

if.end40:                                         ; preds = %if.else, %if.then33, %if.end8
  %sg_processed41 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 33
  %20 = load i32, i32* %sg_processed41, align 8, !tbaa !646
  %sg_processing_size42 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 32
  %21 = load i32, i32* %sg_processing_size42, align 4, !tbaa !630
  %cmp43 = icmp slt i32 %20, %21
  br i1 %cmp43, label %if.then44, label %if.end45

if.then44:                                        ; preds = %if.end40
  call void @ivtv_dma_enc_start_xfer(%struct.ivtv_stream.4642* %arrayidx10)
  br label %cleanup

if.end45:                                         ; preds = %if.end40
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 0, i64* %i_flags)
  %cur_dma_stream46 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  store i32 -1, i32* %cur_dma_stream46, align 8, !tbaa !295
  call void @dma_post(%struct.ivtv_stream.4642* %arrayidx10)
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx10, i32 0, i32 7
  %call47 = call zeroext i1 @test_and_clear_bit.404(i64 1, i64* %s_flags)
  br i1 %call47, label %if.then48, label %if.end51

if.then48:                                        ; preds = %if.end45
  %streams49 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx50 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams49, i64 0, i64 2
  call void @dma_post(%struct.ivtv_stream.4642* %arrayidx50)
  br label %if.end51

if.end51:                                         ; preds = %if.then48, %if.end45
  %s.0 = phi %struct.ivtv_stream.4642* [ %arrayidx50, %if.then48 ], [ %arrayidx10, %if.end45 ]
  %sg_processing_size52 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s.0, i32 0, i32 32
  store i32 0, i32* %sg_processing_size52, align 4, !tbaa !630
  %sg_processed53 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s.0, i32 0, i32 33
  store i32 0, i32* %sg_processed53, align 8, !tbaa !646
  %dma_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 62
  call void @__wake_up(%struct.__wait_queue_head* %dma_waitq, i32 3, i32 1, i8* null)
  br label %cleanup

cleanup:                                          ; preds = %if.end51, %if.then44, %do.end
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then44 ], [ 0, %if.end51 ], [ 1, %do.end ]
  %22 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %22) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_enc_pio_complete(%struct.ivtv.4633* %itv) #0 {
entry:
  %cur_pio_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %0 = load i32, i32* %cur_pio_stream, align 4, !tbaa !296
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %cur_pio_stream1 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %1 = load i32, i32* %cur_pio_stream1, align 4, !tbaa !296
  %cmp2 = icmp sge i32 %1, 9
  br i1 %cmp2, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %cur_pio_stream3 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  store i32 -1, i32* %cur_pio_stream3, align 4, !tbaa !296
  br label %cleanup.cont

if.end:                                           ; preds = %lor.lhs.false
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %cur_pio_stream4 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  %2 = load i32, i32* %cur_pio_stream4, align 4, !tbaa !296
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %if.end
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and5 = and i32 %4, 1024
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then7, label %do.end

if.then7:                                         ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name8 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 2
  %5 = load i8*, i8** %name8, align 8, !tbaa !349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22.452, i32 0, i32 0), i8* %arraydecay, i8* %5)
  br label %do.end

do.end:                                           ; preds = %if.then7, %land.lhs.true, %if.end
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 19, i64* %i_flags)
  %cur_pio_stream10 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 55
  store i32 -1, i32* %cur_pio_stream10, align 4, !tbaa !296
  call void @dma_post(%struct.ivtv_stream.4642* %arrayidx)
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %6 = load i32, i32* %type, align 8, !tbaa !348
  %cmp11 = icmp eq i32 %6, 0
  br i1 %cmp11, label %if.then12, label %if.else

if.then12:                                        ; preds = %do.end
  %call13 = call i32 (%struct.ivtv.4633*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv.4633*, i32, i32, ...)*)(%struct.ivtv.4633* %itv, i32 204, i32 3, i32 0, i32 0, i32 0)
  br label %if.end25

if.else:                                          ; preds = %do.end
  %type14 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %7 = load i32, i32* %type14, align 8, !tbaa !348
  %cmp15 = icmp eq i32 %7, 1
  br i1 %cmp15, label %if.then16, label %if.else18

if.then16:                                        ; preds = %if.else
  %call17 = call i32 (%struct.ivtv.4633*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv.4633*, i32, i32, ...)*)(%struct.ivtv.4633* %itv, i32 204, i32 3, i32 0, i32 0, i32 1)
  br label %if.end25

if.else18:                                        ; preds = %if.else
  %type19 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 3
  %8 = load i32, i32* %type19, align 8, !tbaa !348
  %cmp20 = icmp eq i32 %8, 3
  br i1 %cmp20, label %if.then21, label %if.end25

if.then21:                                        ; preds = %if.else18
  %call22 = call i32 (%struct.ivtv.4633*, i32, i32, ...) bitcast (i32 (%struct.ivtv.1060*, i32, i32, ...)* @ivtv_vapi to i32 (%struct.ivtv.4633*, i32, i32, ...)*)(%struct.ivtv.4633* %itv, i32 204, i32 3, i32 0, i32 0, i32 2)
  br label %if.end25

if.end25:                                         ; preds = %if.then21, %if.else18, %if.then16, %if.then12
  %i_flags26 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 19, i64* %i_flags26)
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 7
  %call27 = call zeroext i1 @test_and_clear_bit.404(i64 1, i64* %s_flags)
  br i1 %call27, label %if.then28, label %if.end31

if.then28:                                        ; preds = %if.end25
  %streams29 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx30 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams29, i64 0, i64 2
  call void @dma_post(%struct.ivtv_stream.4642* %arrayidx30)
  br label %if.end31

if.end31:                                         ; preds = %if.then28, %if.end25
  %dma_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 62
  call void @__wake_up(%struct.__wait_queue_head* %dma_waitq, i32 3, i32 1, i8* null)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end31, %if.then
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then ], [ 0, %if.end31 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_dma_err(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %dma_timer = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 60
  %call = call i32 @del_timer(%struct.timer_list* %dma_timer)
  %enc_mbox = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 66
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %enc_mbox, i32 8, i32 2, i32* %arraydecay)
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 4
  %call1 = call i32 @readl.415(i8* %add.ptr)
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay2 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %3 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %arrayidx3 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %4 = load i32, i32* %arrayidx3, align 4, !tbaa !120
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %5 = load i32, i32* %cur_dma_stream, align 8, !tbaa !295
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23.451, i32 0, i32 0), i8* %arraydecay2, i32 %3, i32 %4, i32 %call1, i32 %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %and5 = and i32 %call1, 3
  %cmp = icmp eq i32 %and5, 3
  br i1 %cmp, label %if.then6, label %cond.true

if.then6:                                         ; preds = %do.end
  %reg_mem7 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem7, align 8, !tbaa !171
  %add.ptr8 = getelementptr i8, i8* %6, i64 4
  call void @writel.406(i32 %and5, i8* %add.ptr8)
  br label %cond.true

cond.true:                                        ; preds = %if.then6, %do.end
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call10 = call zeroext i1 @constant_test_bit.412(i64 1, i64* %i_flags)
  br i1 %call10, label %cond.true36, label %land.lhs.true

land.lhs.true:                                    ; preds = %cond.true
  %cur_dma_stream13 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %7 = load i32, i32* %cur_dma_stream13, align 8, !tbaa !295
  %cmp14 = icmp sge i32 %7, 0
  br i1 %cmp14, label %land.lhs.true15, label %cond.true36

land.lhs.true15:                                  ; preds = %land.lhs.true
  %cur_dma_stream16 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %8 = load i32, i32* %cur_dma_stream16, align 8, !tbaa !295
  %cmp17 = icmp slt i32 %8, 9
  br i1 %cmp17, label %if.then18, label %cond.true36

if.then18:                                        ; preds = %land.lhs.true15
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %cur_dma_stream19 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  %9 = load i32, i32* %cur_dma_stream19, align 8, !tbaa !295
  %idxprom = sext i32 %9 to i64
  %arrayidx20 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx20, i32 0, i32 3
  %10 = load i32, i32* %type, align 8, !tbaa !348
  %cmp21 = icmp sge i32 %10, 5
  br i1 %cmp21, label %if.then22, label %if.else

if.then22:                                        ; preds = %if.then18
  call void @ivtv_dma_dec_start(%struct.ivtv_stream.4642* %arrayidx20)
  br label %LeafBlock

if.else:                                          ; preds = %if.then18
  %and23 = and i32 %and5, 2
  %cmp24 = icmp eq i32 %and23, 0
  br i1 %cmp24, label %if.then25, label %if.end29

if.then25:                                        ; preds = %if.else
  %11 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %call26 = call i64 @msecs_to_jiffies.416(i32 600)
  %add = add i64 %11, %call26
  %dma_timer27 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 60
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %dma_timer27, i32 0, i32 1
  store i64 %add, i64* %expires, align 8, !tbaa !654
  %dma_timer28 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 60
  call void @add_timer(%struct.timer_list* %dma_timer28)
  br label %LeafBlock

if.end29:                                         ; preds = %if.else
  %dma_retries = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %12 = load i32, i32* %dma_retries, align 8, !tbaa !647
  %cmp30 = icmp slt i32 %12, 3
  br i1 %cmp30, label %if.then31, label %LeafBlock

if.then31:                                        ; preds = %if.end29
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx20, i32 0, i32 33
  store i32 0, i32* %sg_processed, align 8, !tbaa !646
  %dma_retries32 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 58
  %13 = load i32, i32* %dma_retries32, align 8, !tbaa !647
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %dma_retries32, align 8, !tbaa !647
  call void @ivtv_dma_enc_start_xfer(%struct.ivtv_stream.4642* %arrayidx20)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then31, %if.end29, %if.then25, %if.then22
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then22 ], [ 1, %if.then25 ], [ 1, %if.then31 ], [ 0, %if.end29 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %cond.true36, label %cleanup47

cond.true36:                                      ; preds = %LeafBlock, %land.lhs.true15, %land.lhs.true, %cond.true
  %i_flags37 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call38 = call zeroext i1 @constant_test_bit.412(i64 1, i64* %i_flags37)
  br i1 %call38, label %if.then42, label %if.end43

if.then42:                                        ; preds = %cond.true36
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_start to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %itv)
  br label %cleanup47

if.end43:                                         ; preds = %cond.true36
  %i_flags44 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 1, i64* %i_flags44)
  %i_flags45 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 0, i64* %i_flags45)
  %cur_dma_stream46 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 54
  store i32 -1, i32* %cur_dma_stream46, align 8, !tbaa !295
  %dma_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 62
  call void @__wake_up(%struct.__wait_queue_head* %dma_waitq, i32 3, i32 1, i8* null)
  br label %cleanup47

cleanup47:                                        ; preds = %if.end43, %if.then42, %LeafBlock
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then42 ], [ 0, %if.end43 ], [ %cleanup.dest.slot.0, %LeafBlock ]
  %14 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %14) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_enc_start_cap(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %enc_mbox = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 66
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %enc_mbox, i32 9, i32 7, i32* %arraydecay)
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %2, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay3 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %3 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %arrayidx4 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %4 = load i32, i32* %arrayidx4, align 4, !tbaa !120
  %arrayidx5 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %5 = load i32, i32* %arrayidx5, align 8, !tbaa !120
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.24.449, i32 0, i32 0), i8* %arraydecay3, i32 %3, i32 %4, i32 %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %arrayidx6 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %6 = load i32, i32* %arrayidx6, align 16, !tbaa !120
  %cmp = icmp ugt i32 %6, 2
  br i1 %cmp, label %do.body13, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %arrayidx7 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %7 = load i32, i32* %arrayidx7, align 4, !tbaa !120
  %cmp8 = icmp eq i32 %7, 0
  br i1 %cmp8, label %do.body13, label %lor.lhs.false9

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %arrayidx10 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %8 = load i32, i32* %arrayidx10, align 8, !tbaa !120
  %cmp11 = icmp eq i32 %8, 0
  br i1 %cmp11, label %do.body13, label %if.end27

do.body13:                                        ; preds = %lor.lhs.false9, %lor.lhs.false, %do.end
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and14 = and i32 1, %9
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %if.then16, label %cleanup

if.then16:                                        ; preds = %do.body13
  %v4l2_dev17 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name18 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev17, i32 0, i32 4
  %arraydecay19 = getelementptr inbounds [36 x i8], [36 x i8]* %name18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %10 = load i32, i32* %arrayidx20, align 16, !tbaa !120
  %arrayidx21 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %11 = load i32, i32* %arrayidx21, align 4, !tbaa !120
  %arrayidx22 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %12 = load i32, i32* %arrayidx22, align 8, !tbaa !120
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25.450, i32 0, i32 0), i8* %arraydecay19, i32 %10, i32 %11, i32 %12)
  br label %cleanup

if.end27:                                         ; preds = %lor.lhs.false9
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx28 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %13 = load i32, i32* %arrayidx28, align 16, !tbaa !120
  %idxprom = zext i32 %13 to i64
  %arrayidx29 = getelementptr inbounds [4 x i32], [4 x i32]* @ivtv_stream_map, i64 0, i64 %idxprom
  %14 = load i32, i32* %arrayidx29, align 4, !tbaa !120
  %idxprom30 = sext i32 %14 to i64
  %arrayidx31 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 %idxprom30
  %arraydecay32 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call33 = call i32 @stream_enc_dma_append(%struct.ivtv_stream.4642* %arrayidx31, i32* %arraydecay32)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %cleanup, label %if.then35

if.then35:                                        ; preds = %if.end27
  %call36 = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %arrayidx31)
  %tobool37 = icmp ne i32 %call36, 0
  %15 = zext i1 %tobool37 to i64
  %cond = select i1 %tobool37, i32 9, i32 0
  %conv = sext i32 %cond to i64
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx31, i32 0, i32 7
  call void @set_bit.413(i64 %conv, i64* %s_flags)
  br label %cleanup

cleanup:                                          ; preds = %if.then35, %if.end27, %if.then16, %do.body13
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then16 ], [ 1, %do.body13 ], [ 0, %if.then35 ], [ 0, %if.end27 ]
  %16 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %16) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_enc_vbi_cap(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %2, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.33.448, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 2
  %arraydecay3 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call4 = call i32 @stream_enc_dma_append(%struct.ivtv_stream.4642* %arrayidx, i32* %arraydecay3)
  %tobool5 = icmp ne i32 %call4, 0
  br i1 %tobool5, label %if.end9, label %if.then6

if.then6:                                         ; preds = %do.end
  %call7 = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %arrayidx)
  %tobool8 = icmp ne i32 %call7, 0
  %3 = zext i1 %tobool8 to i64
  %cond = select i1 %tobool8, i32 9, i32 0
  %conv = sext i32 %cond to i64
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 7
  call void @set_bit.413(i64 %conv, i64* %s_flags)
  br label %if.end9

if.end9:                                          ; preds = %if.then6, %do.end
  %4 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %4) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_dec_vbi_reinsert(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 6
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 64, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %cond.true

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and1 = and i32 %2, 1024
  %tobool2 = icmp ne i32 %and1, 0
  br i1 %tobool2, label %if.then, label %cond.true

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.440, i32 0, i32 0), i8* %arraydecay)
  br label %cond.true

cond.true:                                        ; preds = %if.then, %land.lhs.true, %entry
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 7
  %call3 = call zeroext i1 @constant_test_bit.412(i64 3, i64* %s_flags)
  br i1 %call3, label %land.lhs.true6, label %if.end12

land.lhs.true6:                                   ; preds = %cond.true
  %arraydecay7 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call8 = call i32 @stream_enc_dma_append(%struct.ivtv_stream.4642* %arrayidx, i32* %arraydecay7)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end12, label %if.then10

if.then10:                                        ; preds = %land.lhs.true6
  %s_flags11 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 7
  call void @set_bit.413(i64 9, i64* %s_flags11)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %land.lhs.true6, %cond.true
  %3 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %3) #8
  ret void
}

declare void @__wake_up(%struct.__wait_queue_head*, i32, i32, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_dec_data_req(%struct.ivtv.4633* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %__UNIQUE_ID_min1_18 = alloca i32, align 4
  %__UNIQUE_ID_min2_19 = alloca i32, align 4
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call = call zeroext i1 @constant_test_bit.412(i64 7, i64* %i_flags)
  %dec_mbox = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 67
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  br i1 %call, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %dec_mbox, i32 9, i32 2, i32* %arraydecay)
  %yuv_info = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 90
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %1 = load i32, i32* %v4l2_src_h, align 4, !tbaa !248
  %add = add i32 %1, 31
  %and = and i32 %add, -32
  %mul = mul i32 1080, %and
  %dma_data_req_size = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  store i32 %mul, i32* %dma_data_req_size, align 4, !tbaa !396
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %2 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %dma_data_req_offset = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 56
  store i32 %2, i32* %dma_data_req_offset, align 8, !tbaa !404
  %yuv_info3 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 90
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info3, i32 0, i32 53
  %call4 = call i32 @atomic_read.435(%struct.atomic_t* %next_dma_frame)
  %cmp = icmp sge i32 %call4, 0
  br i1 %cmp, label %if.then5, label %if.end20

if.then5:                                         ; preds = %if.then
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_yuv_frame_complete to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %itv)
  br label %if.end20

if.else:                                          ; preds = %entry
  call void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %dec_mbox, i32 9, i32 3, i32* %arraydecay)
  %3 = bitcast i32* %__UNIQUE_ID_min1_18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #8
  %arrayidx9 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %4 = load i32, i32* %arrayidx9, align 8, !tbaa !120
  store i32 %4, i32* %__UNIQUE_ID_min1_18, align 4, !tbaa !120
  %5 = bitcast i32* %__UNIQUE_ID_min2_19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #8
  store i32 65536, i32* %__UNIQUE_ID_min2_19, align 4, !tbaa !120
  %cmp10 = icmp eq i32* %__UNIQUE_ID_min1_18, %__UNIQUE_ID_min2_19
  %conv = zext i1 %cmp10 to i32
  %6 = load i32, i32* %__UNIQUE_ID_min1_18, align 4, !tbaa !120
  %7 = load i32, i32* %__UNIQUE_ID_min2_19, align 4, !tbaa !120
  %cmp11 = icmp ult i32 %6, %7
  %8 = load i32, i32* %__UNIQUE_ID_min1_18, align 4
  %9 = load i32, i32* %__UNIQUE_ID_min2_19, align 4
  %cond = select i1 %cmp11, i32 %8, i32 %9
  %10 = bitcast i32* %__UNIQUE_ID_min2_19 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %__UNIQUE_ID_min1_18 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %dma_data_req_size15 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  store i32 %cond, i32* %dma_data_req_size15, align 4, !tbaa !396
  %arrayidx16 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %12 = load i32, i32* %arrayidx16, align 4, !tbaa !120
  %dma_data_req_offset17 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 56
  store i32 %12, i32* %dma_data_req_offset17, align 8, !tbaa !404
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then5, %if.then
  %.sink = phi i64 [ 5, %if.else ], [ 8, %if.then5 ], [ 8, %if.then ]
  %streams18 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 42
  %arrayidx19 = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams18, i64 0, i64 %.sink
  %13 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and21 = and i32 64, %13
  %tobool = icmp ne i32 %and21, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %if.end20
  %14 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and22 = and i32 %14, 1024
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %do.end

if.then24:                                        ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay25 = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name26 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 2
  %15 = load i8*, i8** %name26, align 8, !tbaa !349
  %q_full = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 22
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full, i32 0, i32 3
  %16 = load i32, i32* %bytesused, align 8, !tbaa !397
  %dma_data_req_offset27 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 56
  %17 = load i32, i32* %dma_data_req_offset27, align 8, !tbaa !404
  %dma_data_req_size28 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  %18 = load i32, i32* %dma_data_req_size28, align 4, !tbaa !396
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.35.439, i32 0, i32 0), i8* %arraydecay25, i8* %15, i32 %16, i32 %17, i32 %18)
  br label %do.end

do.end:                                           ; preds = %if.then24, %land.lhs.true, %if.end20
  %dma_data_req_size31 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  %19 = load i32, i32* %dma_data_req_size31, align 4, !tbaa !396
  %cmp32 = icmp eq i32 %19, 0
  br i1 %cmp32, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %q_full34 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 22
  %bytesused35 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full34, i32 0, i32 3
  %20 = load i32, i32* %bytesused35, align 8, !tbaa !397
  %dma_data_req_size36 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  %21 = load i32, i32* %dma_data_req_size36, align 4, !tbaa !396
  %cmp37 = icmp ult i32 %20, %21
  br i1 %cmp37, label %if.then39, label %cond.true41

if.then39:                                        ; preds = %lor.lhs.false, %do.end
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 7
  call void @set_bit.413(i64 2, i64* %s_flags)
  br label %if.end57

cond.true41:                                      ; preds = %lor.lhs.false
  %i_flags42 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call43 = call zeroext i1 @constant_test_bit.412(i64 7, i64* %i_flags42)
  br i1 %call43, label %if.then49, label %if.end50

if.then49:                                        ; preds = %cond.true41
  call void bitcast (void (%struct.ivtv.1060*)* @ivtv_yuv_setup_stream_frame to void (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %itv)
  br label %if.end50

if.end50:                                         ; preds = %if.then49, %cond.true41
  %s_flags51 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 7
  call void @clear_bit.433(i64 2, i64* %s_flags51)
  %q_full52 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 22
  %q_predma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx19, i32 0, i32 25
  %dma_data_req_size53 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 57
  %22 = load i32, i32* %dma_data_req_size53, align 4, !tbaa !396
  %call54 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %arrayidx19, %struct.ivtv_queue* %q_full52, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_predma, i32 %22)
  %dma_data_req_offset55 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 56
  %23 = load i32, i32* %dma_data_req_offset55, align 8, !tbaa !404
  %add56 = add i32 %23, 16777216
  call void @ivtv_dma_stream_dec_prepare(%struct.ivtv_stream.4642* %arrayidx19, i32 %add56, i32 0)
  br label %if.end57

if.end57:                                         ; preds = %if.end50, %if.then39
  %24 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %24) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_irq_vsync(%struct.ivtv.4633* %itv) #0 {
entry:
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %0 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %0, i64 10432
  %call = call i32 @readl.415(i8* %add.ptr)
  %and = and i32 %call, 1
  %yuv_info = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 90
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  %call1 = call i32 @atomic_read.435(%struct.atomic_t* %next_dma_frame)
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = sext i32 %call1 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %sync_field = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 20
  %1 = load i32, i32* %sync_field, align 4, !tbaa !662
  %xor = xor i32 %and, %1
  %cmp = icmp eq i32 %xor, 0
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %entry
  %last_vsync_field = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 61
  %2 = load i32, i32* %last_vsync_field, align 8, !tbaa !658
  %and2 = and i32 %2, 1
  %sync_field3 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 20
  %3 = load i32, i32* %sync_field3, align 4, !tbaa !662
  %xor4 = xor i32 %and2, %3
  %tobool = icmp ne i32 %xor4, 0
  br i1 %tobool, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %last_vsync_field5 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 61
  %4 = load i32, i32* %last_vsync_field5, align 8, !tbaa !658
  %and6 = and i32 %4, 1
  %cmp7 = icmp ne i32 %and, %and6
  br i1 %cmp7, label %land.lhs.true8, label %if.end50

land.lhs.true8:                                   ; preds = %lor.lhs.false
  %interlaced = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  %5 = load i32, i32* %interlaced, align 4, !tbaa !663
  %tobool9 = icmp ne i32 %5, 0
  br i1 %tobool9, label %if.end50, label %if.then

if.then:                                          ; preds = %land.lhs.true8, %land.lhs.true
  %interlaced11 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  %6 = load i32, i32* %interlaced11, align 4, !tbaa !663
  %tobool12 = icmp ne i32 %6, 0
  br i1 %tobool12, label %land.lhs.true13, label %if.then18

land.lhs.true13:                                  ; preds = %if.then
  %delay = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 21
  %7 = load i32, i32* %delay, align 4, !tbaa !664
  %tobool14 = icmp ne i32 %7, 0
  br i1 %tobool14, label %land.lhs.true15, label %if.then18

land.lhs.true15:                                  ; preds = %land.lhs.true13
  %fields_lapsed = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 57
  %8 = load i8, i8* %fields_lapsed, align 4, !tbaa !665
  %conv = zext i8 %8 to i32
  %cmp16 = icmp sge i32 %conv, 1
  %cmp19 = icmp sge i32 %call1, 0
  %or.cond = and i1 %cmp16, %cmp19
  br i1 %or.cond, label %land.lhs.true21, label %if.end50

if.then18:                                        ; preds = %land.lhs.true13, %if.then
  %cmp19.old = icmp sge i32 %call1, 0
  br i1 %cmp19.old, label %land.lhs.true21, label %if.end50

land.lhs.true21:                                  ; preds = %if.then18, %land.lhs.true15
  %next_fill_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 54
  %call22 = call i32 @atomic_read.435(%struct.atomic_t* %next_fill_frame)
  %cmp23 = icmp ne i32 %call1, %call22
  br i1 %cmp23, label %if.then25, label %if.end50

if.then25:                                        ; preds = %land.lhs.true21
  %idxprom26 = sext i32 %call1 to i64
  %arrayidx27 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom26
  %9 = load i32, i32* %arrayidx27, align 4, !tbaa !120
  %shr = lshr i32 %9, 4
  %reg_mem28 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %10 = load i8*, i8** %reg_mem28, align 8, !tbaa !171
  %add.ptr29 = getelementptr i8, i8* %10, i64 2092
  call void @writel.406(i32 %shr, i8* %add.ptr29)
  %idxprom30 = sext i32 %call1 to i64
  %arrayidx31 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom30
  %11 = load i32, i32* %arrayidx31, align 4, !tbaa !120
  %add = add i32 %11, 414720
  %shr32 = lshr i32 %add, 4
  %reg_mem33 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %12 = load i8*, i8** %reg_mem33, align 8, !tbaa !171
  %add.ptr34 = getelementptr i8, i8* %12, i64 2096
  call void @writel.406(i32 %shr32, i8* %add.ptr34)
  %idxprom35 = sext i32 %call1 to i64
  %arrayidx36 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom35
  %13 = load i32, i32* %arrayidx36, align 4, !tbaa !120
  %shr37 = lshr i32 %13, 4
  %reg_mem38 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %14 = load i8*, i8** %reg_mem38, align 8, !tbaa !171
  %add.ptr39 = getelementptr i8, i8* %14, i64 2100
  call void @writel.406(i32 %shr37, i8* %add.ptr39)
  %idxprom40 = sext i32 %call1 to i64
  %arrayidx41 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom40
  %15 = load i32, i32* %arrayidx41, align 4, !tbaa !120
  %add42 = add i32 %15, 414720
  %shr43 = lshr i32 %add42, 4
  %reg_mem44 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem44, align 8, !tbaa !171
  %add.ptr45 = getelementptr i8, i8* %16, i64 2104
  call void @writel.406(i32 %shr43, i8* %add.ptr45)
  %add46 = add nsw i32 %call1, 1
  %rem = srem i32 %add46, 8
  %next_dma_frame47 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  call void @atomic_set.436(%struct.atomic_t* %next_dma_frame47, i32 %rem)
  %fields_lapsed48 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 57
  store i8 -1, i8* %fields_lapsed48, align 4, !tbaa !665
  %running = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 69
  store i8 1, i8* %running, align 8, !tbaa !666
  br label %if.end50

if.end50:                                         ; preds = %if.then25, %land.lhs.true21, %if.then18, %land.lhs.true15, %land.lhs.true8, %lor.lhs.false
  %last_vsync_field51 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 61
  %17 = load i32, i32* %last_vsync_field51, align 8, !tbaa !658
  %and52 = and i32 %17, 1
  %cmp53 = icmp ne i32 %and, %and52
  br i1 %cmp53, label %if.then55, label %if.end148

if.then55:                                        ; preds = %if.end50
  %call56 = call %struct.ivtv_stream.4642* bitcast (%struct.ivtv_stream.1071* (%struct.ivtv.1060*)* @ivtv_get_output_stream to %struct.ivtv_stream.4642* (%struct.ivtv.4633*)*)(%struct.ivtv.4633* %itv)
  %last_vsync_field57 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 61
  %18 = load i32, i32* %last_vsync_field57, align 8, !tbaa !658
  %add58 = add i32 %18, 1
  store i32 %add58, i32* %last_vsync_field57, align 8, !tbaa !658
  %cmp59 = icmp eq i32 %and, 0
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  br i1 %cmp59, label %if.then61, label %if.else

if.then61:                                        ; preds = %if.then55
  call void @clear_bit.433(i64 14, i64* %i_flags)
  %i_flags62 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @clear_bit.433(i64 30, i64* %i_flags62)
  br label %cond.true

if.else:                                          ; preds = %if.then55
  call void @set_bit.413(i64 30, i64* %i_flags)
  br label %cond.true

cond.true:                                        ; preds = %if.else, %if.then61
  %i_flags65 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call66 = call zeroext i1 @constant_test_bit.412(i64 31, i64* %i_flags65)
  br i1 %call66, label %if.then71, label %if.end76

if.then71:                                        ; preds = %cond.true
  %i_flags72 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @set_bit.413(i64 29, i64* %i_flags72)
  %event_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 64
  call void @__wake_up(%struct.__wait_queue_head* %event_waitq, i32 3, i32 1, i8* null)
  %magicptr = ptrtoint %struct.ivtv_stream.4642* %call56 to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %if.end83, label %if.then74

if.then74:                                        ; preds = %if.then71
  %waitq = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %call56, i32 0, i32 16
  call void @__wake_up(%struct.__wait_queue_head* %waitq, i32 3, i32 1, i8* null)
  br label %if.end76

if.end76:                                         ; preds = %if.then74, %cond.true
  %tobool77 = icmp ne %struct.ivtv_stream.4642* %call56, null
  br i1 %tobool77, label %land.lhs.true78, label %if.end83

land.lhs.true78:                                  ; preds = %if.end76
  %vdev = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %call56, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %19 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %tobool79 = icmp ne %struct.v4l2_device* %19, null
  br i1 %tobool79, label %if.then80, label %if.end83

if.then80:                                        ; preds = %land.lhs.true78
  %vdev81 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %call56, i32 0, i32 0
  %tobool82 = icmp ne i32 %and, 0
  %20 = zext i1 %tobool82 to i64
  %cond = select i1 %tobool82, %struct.v4l2_event* bitcast ({ i32, [4 x i8], { %struct.lockdep_subclass_key, [63 x i8] }, i32, i32, %struct.timespec, i32, [8 x i32] }* @ivtv_irq_vsync.evtop to %struct.v4l2_event*), %struct.v4l2_event* bitcast ({ i32, [4 x i8], { %struct.lockdep_subclass_key, [63 x i8] }, i32, i32, %struct.timespec, i32, [8 x i32] }* @ivtv_irq_vsync.evbottom to %struct.v4l2_event*)
  call void @v4l2_event_queue(%struct.video_device* %vdev81, %struct.v4l2_event* %cond)
  br label %if.end83

if.end83:                                         ; preds = %if.then80, %land.lhs.true78, %if.end76, %if.then71
  %vsync_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 65
  call void @__wake_up(%struct.__wait_queue_head* %vsync_waitq, i32 3, i32 1, i8* null)
  %tobool84 = icmp ne i32 %and, 0
  br i1 %tobool84, label %land.lhs.true85, label %if.end118

land.lhs.true85:                                  ; preds = %if.end83
  %output_mode = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 31
  %21 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp86 = icmp eq i32 %21, 4
  br i1 %cmp86, label %if.then115, label %cond.true89

cond.true89:                                      ; preds = %land.lhs.true85
  %i_flags90 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call91 = call zeroext i1 @constant_test_bit.412(i64 10, i64* %i_flags90)
  br i1 %call91, label %if.then115, label %cond.true98

cond.true98:                                      ; preds = %cond.true89
  %i_flags99 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call100 = call zeroext i1 @constant_test_bit.412(i64 11, i64* %i_flags99)
  br i1 %call100, label %if.then115, label %cond.true107

cond.true107:                                     ; preds = %cond.true98
  %i_flags108 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  %call109 = call zeroext i1 @constant_test_bit.412(i64 9, i64* %i_flags108)
  br i1 %call109, label %if.then115, label %if.end118

if.then115:                                       ; preds = %cond.true107, %cond.true98, %cond.true89, %land.lhs.true85
  %i_flags116 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @set_bit.413(i64 16, i64* %i_flags116)
  %i_flags117 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @set_bit.413(i64 15, i64* %i_flags117)
  br label %if.end118

if.end118:                                        ; preds = %if.then115, %cond.true107, %if.end83
  %running119 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 69
  %22 = load i8, i8* %running119, align 8, !tbaa !666
  %conv120 = zext i8 %22 to i32
  %tobool121 = icmp ne i32 %conv120, 0
  br i1 %tobool121, label %land.lhs.true122, label %if.end146

land.lhs.true122:                                 ; preds = %if.end118
  %yuv_forced_update = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 55
  %23 = load i32, i32* %yuv_forced_update, align 4, !tbaa !667
  %tobool123 = icmp ne i32 %23, 0
  br i1 %tobool123, label %if.then126, label %lor.lhs.false124

lor.lhs.false124:                                 ; preds = %land.lhs.true122
  %update = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  %24 = load i32, i32* %update, align 4, !tbaa !668
  %tobool125 = icmp ne i32 %24, 0
  br i1 %tobool125, label %if.then126, label %if.end146

if.then126:                                       ; preds = %lor.lhs.false124, %land.lhs.true122
  %update127 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  %25 = load i32, i32* %update127, align 4, !tbaa !668
  %tobool128 = icmp ne i32 %25, 0
  br i1 %tobool128, label %if.end138, label %if.then129

if.then129:                                       ; preds = %if.then126
  %next_dma_frame130 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  %call131 = call i32 @atomic_read.435(%struct.atomic_t* %next_dma_frame130)
  %sub = sub nsw i32 %call131, 1
  %conv132 = trunc i32 %sub to i8
  %conv133 = zext i8 %conv132 to i32
  %rem134 = srem i32 %conv133, 8
  %new_frame_info135 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom136 = sext i32 %rem134 to i64
  %arrayidx137 = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info135, i64 0, i64 %idxprom136
  br label %if.end138

if.end138:                                        ; preds = %if.then129, %if.then126
  %last_dma_frame.0 = phi i32 [ %call1, %if.then126 ], [ %rem134, %if.then129 ]
  %f.0 = phi %struct.yuv_frame_info* [ %arrayidx, %if.then126 ], [ %arrayidx137, %if.then129 ]
  %src_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f.0, i32 0, i32 3
  %26 = load i32, i32* %src_w, align 4, !tbaa !669
  %tobool139 = icmp ne i32 %26, 0
  br i1 %tobool139, label %if.then140, label %if.end146

if.then140:                                       ; preds = %if.end138
  %update_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 56
  store i32 %last_dma_frame.0, i32* %update_frame, align 8, !tbaa !670
  %update141 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f.0, i32 0, i32 0
  store i32 0, i32* %update141, align 4, !tbaa !668
  %yuv_forced_update142 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 55
  store i32 0, i32* %yuv_forced_update142, align 4, !tbaa !667
  %i_flags143 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @set_bit.413(i64 17, i64* %i_flags143)
  %i_flags144 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %itv, i32 0, i32 26
  call void @set_bit.413(i64 15, i64* %i_flags144)
  br label %if.end146

if.end146:                                        ; preds = %if.then140, %if.end138, %lor.lhs.false124, %if.end118
  %fields_lapsed147 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 57
  %27 = load i8, i8* %fields_lapsed147, align 4, !tbaa !665
  %inc = add i8 %27, 1
  store i8 %inc, i8* %fields_lapsed147, align 4, !tbaa !665
  br label %if.end148

if.end148:                                        ; preds = %if.end146, %if.end50
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_dma_enc_start(%struct.ivtv_stream.4642* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %streams = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.4642], [9 x %struct.ivtv_stream.4642]* %streams, i64 0, i64 2
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 %2, 1024
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool4 = icmp ne i32 %call, 0
  %3 = zext i1 %tobool4 to i64
  %cond = select i1 %tobool4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.430, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.431, i32 0, i32 0)
  %name5 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %4 = load i8*, i8** %name5, align 8, !tbaa !349
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.36.432, i32 0, i32 0), i8* %arraydecay, i8* %cond, i8* %4)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %q_predma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma, i32 0, i32 3
  %5 = load i32, i32* %bytesused, align 8, !tbaa !637
  %tobool7 = icmp ne i32 %5, 0
  br i1 %tobool7, label %if.then8, label %if.end13

if.then8:                                         ; preds = %do.end
  %q_predma9 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %q_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %q_predma10 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused11 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma10, i32 0, i32 3
  %6 = load i32, i32* %bytesused11, align 8, !tbaa !637
  %call12 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %s, %struct.ivtv_queue* %q_predma9, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_dma, i32 %6)
  br label %if.end13

if.end13:                                         ; preds = %if.then8, %do.end
  %call14 = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end13
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %7 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %8 = load i32, i32* %sg_pending_size, align 8, !tbaa !643
  %sub = sub nsw i32 %8, 1
  %idxprom = sext i32 %sub to i64
  %arrayidx17 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %7, i64 %idxprom
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx17, i32 0, i32 2
  %9 = load i32, i32* %size, align 4, !tbaa !627
  %add = add i32 %9, 256
  store i32 %add, i32* %size, align 4, !tbaa !627
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end13
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  call void @clear_bit.433(i64 1, i64* %s_flags)
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %10 = load i32, i32* %type, align 8, !tbaa !348
  %cmp = icmp eq i32 %10, 0
  br i1 %cmp, label %land.lhs.true19, label %if.end72

land.lhs.true19:                                  ; preds = %if.end18
  %sg_pending_size20 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 31
  %11 = load i32, i32* %sg_pending_size20, align 8, !tbaa !643
  %tobool21 = icmp ne i32 %11, 0
  br i1 %tobool21, label %land.lhs.true22, label %if.end72

land.lhs.true22:                                  ; preds = %land.lhs.true19
  %sg_pending_size23 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %12 = load i32, i32* %sg_pending_size23, align 8, !tbaa !643
  %sg_pending_size24 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 31
  %13 = load i32, i32* %sg_pending_size24, align 8, !tbaa !643
  %add25 = add nsw i32 %12, %13
  %buffers = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 18
  %14 = load i32, i32* %buffers, align 4, !tbaa !605
  %cmp26 = icmp ule i32 %add25, %14
  br i1 %cmp26, label %if.then27, label %if.end72

if.then27:                                        ; preds = %land.lhs.true22
  %q_predma28 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 25
  %q_dma29 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 24
  %q_predma30 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 25
  %bytesused31 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma30, i32 0, i32 3
  %15 = load i32, i32* %bytesused31, align 8, !tbaa !637
  %call32 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %arrayidx, %struct.ivtv_queue* %q_predma28, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_dma29, i32 %15)
  %call33 = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %arrayidx)
  %tobool34 = icmp ne i32 %call33, 0
  br i1 %tobool34, label %if.then35, label %if.end43

if.then35:                                        ; preds = %if.then27
  %sg_pending36 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 27
  %16 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending36, align 8, !tbaa !640
  %sg_pending_size37 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 31
  %17 = load i32, i32* %sg_pending_size37, align 8, !tbaa !643
  %sub38 = sub nsw i32 %17, 1
  %idxprom39 = sext i32 %sub38 to i64
  %arrayidx40 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %16, i64 %idxprom39
  %size41 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx40, i32 0, i32 2
  %18 = load i32, i32* %size41, align 4, !tbaa !627
  %add42 = add i32 %18, 256
  store i32 %add42, i32* %size41, align 4, !tbaa !627
  br label %if.end43

if.end43:                                         ; preds = %if.then35, %if.then27
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end43
  %i.0 = phi i32 [ 0, %if.end43 ], [ %inc53, %for.body ]
  %sg_pending_size44 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 31
  %19 = load i32, i32* %sg_pending_size44, align 8, !tbaa !643
  %cmp45 = icmp slt i32 %i.0, %19
  br i1 %cmp45, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %sg_pending46 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %20 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending46, align 8, !tbaa !640
  %sg_pending_size47 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %21 = load i32, i32* %sg_pending_size47, align 8, !tbaa !643
  %inc = add nsw i32 %21, 1
  store i32 %inc, i32* %sg_pending_size47, align 8, !tbaa !643
  %idxprom48 = sext i32 %21 to i64
  %arrayidx49 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %20, i64 %idxprom48
  %sg_pending50 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 27
  %22 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending50, align 8, !tbaa !640
  %idxprom51 = sext i32 %i.0 to i64
  %arrayidx52 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %22, i64 %idxprom51
  %23 = bitcast %struct.exception_table_entry* %arrayidx49 to i8*
  %24 = bitcast %struct.exception_table_entry* %arrayidx52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 12, i32 4, i1 false), !tbaa.struct !671
  %inc53 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %pending_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 9
  %25 = load i32, i32* %pending_offset, align 4, !tbaa !672
  %dma_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 12
  store i32 %25, i32* %dma_offset, align 8, !tbaa !661
  %sg_pending_size54 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 31
  store i32 0, i32* %sg_pending_size54, align 8, !tbaa !643
  %dma_xfer_cnt = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 26
  %26 = load i16, i16* %dma_xfer_cnt, align 8, !tbaa !645
  %inc55 = add i16 %26, 1
  store i16 %inc55, i16* %dma_xfer_cnt, align 8, !tbaa !645
  %s_flags56 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  call void @set_bit.413(i64 1, i64* %s_flags56)
  %27 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and58 = and i32 32, %27
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %land.lhs.true60, label %if.end72

land.lhs.true60:                                  ; preds = %for.end
  %28 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and61 = and i32 %28, 1024
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then63, label %if.end72

if.then63:                                        ; preds = %land.lhs.true60
  %v4l2_dev64 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name65 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev64, i32 0, i32 4
  %arraydecay66 = getelementptr inbounds [36 x i8], [36 x i8]* %name65, i32 0, i32 0
  %name67 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %arrayidx, i32 0, i32 2
  %29 = load i8*, i8** %name67, align 8, !tbaa !349
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.37.434, i32 0, i32 0), i8* %arraydecay66, i8* %29)
  br label %if.end72

if.end72:                                         ; preds = %if.then63, %land.lhs.true60, %for.end, %land.lhs.true22, %land.lhs.true19, %if.end18
  %dma_xfer_cnt73 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 26
  %30 = load i16, i16* %dma_xfer_cnt73, align 8, !tbaa !645
  %inc74 = add i16 %30, 1
  store i16 %inc74, i16* %dma_xfer_cnt73, align 8, !tbaa !645
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %31 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %32 = bitcast %struct.exception_table_entry* %31 to i8*
  %sg_pending75 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %33 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending75, align 8, !tbaa !640
  %34 = bitcast %struct.exception_table_entry* %33 to i8*
  %sg_pending_size76 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %35 = load i32, i32* %sg_pending_size76, align 8, !tbaa !643
  %conv = sext i32 %35 to i64
  %mul = mul i64 12, %conv
  %call77 = call i8* @__memcpy(i8* %32, i8* %34, i64 %mul)
  %sg_pending_size78 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %36 = load i32, i32* %sg_pending_size78, align 8, !tbaa !643
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 32
  store i32 %36, i32* %sg_processing_size, align 4, !tbaa !630
  %sg_pending_size79 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  store i32 0, i32* %sg_pending_size79, align 8, !tbaa !643
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  store i32 0, i32* %sg_processed, align 8, !tbaa !646
  %pending_offset80 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 9
  %37 = load i32, i32* %pending_offset80, align 4, !tbaa !672
  %dma_offset81 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  store i32 %37, i32* %dma_offset81, align 8, !tbaa !661
  %pending_backup = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 10
  %38 = load i32, i32* %pending_backup, align 8, !tbaa !673
  %dma_backup = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 13
  store i32 %38, i32* %dma_backup, align 4, !tbaa !674
  %pending_pts = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  %39 = load i64, i64* %pending_pts, align 8, !tbaa !675
  %dma_pts = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 14
  store i64 %39, i64* %dma_pts, align 8, !tbaa !367
  %call82 = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %s)
  %tobool83 = icmp ne i32 %call82, 0
  br i1 %tobool83, label %if.then84, label %if.else

if.then84:                                        ; preds = %if.end72
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 18, i64* %i_flags)
  %i_flags85 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 15, i64* %i_flags85)
  %i_flags86 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 19, i64* %i_flags86)
  %type87 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %40 = load i32, i32* %type87, align 8, !tbaa !348
  %cur_pio_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 55
  store i32 %40, i32* %cur_pio_stream, align 4, !tbaa !296
  br label %if.end90

if.else:                                          ; preds = %if.end72
  %dma_retries = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 58
  store i32 0, i32* %dma_retries, align 8, !tbaa !647
  call void @ivtv_dma_enc_start_xfer(%struct.ivtv_stream.4642* %s)
  %i_flags88 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 0, i64* %i_flags88)
  %type89 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %41 = load i32, i32* %type89, align 8, !tbaa !348
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 54
  store i32 %41, i32* %cur_dma_stream, align 8, !tbaa !295
  br label %if.end90

if.end90:                                         ; preds = %if.else, %if.then84
  ret void
}

declare zeroext i1 @kthread_queue_work(%struct.kthread_worker.4632*, %struct.kthread_work.4631*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.433(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !676
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_dma_enc_start_xfer(%struct.ivtv_stream.4642* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %1 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %sg_processed = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %2 = load i32, i32* %sg_processed, align 8, !tbaa !646
  %idxprom = sext i32 %2 to i64
  %arrayidx = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %1, i64 %idxprom
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %src, align 4, !tbaa !629
  %sg_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %4 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma, align 8, !tbaa !649
  %src2 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %4, i32 0, i32 0
  store i32 %3, i32* %src2, align 4, !tbaa !650
  %sg_processing3 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %5 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing3, align 8, !tbaa !626
  %sg_processed4 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %6 = load i32, i32* %sg_processed4, align 8, !tbaa !646
  %idxprom5 = sext i32 %6 to i64
  %arrayidx6 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %5, i64 %idxprom5
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx6, i32 0, i32 1
  %7 = load i32, i32* %dst, align 4, !tbaa !641
  %sg_dma7 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %8 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma7, align 8, !tbaa !649
  %dst8 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %8, i32 0, i32 1
  store i32 %7, i32* %dst8, align 4, !tbaa !652
  %sg_processing9 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 28
  %9 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing9, align 8, !tbaa !626
  %sg_processed10 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %10 = load i32, i32* %sg_processed10, align 8, !tbaa !646
  %idxprom11 = sext i32 %10 to i64
  %arrayidx12 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %9, i64 %idxprom11
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx12, i32 0, i32 2
  %11 = load i32, i32* %size, align 4, !tbaa !627
  %or = or i32 %11, -2147483648
  %sg_dma13 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 29
  %12 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma13, align 8, !tbaa !649
  %size14 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %12, i32 0, i32 2
  store i32 %or, i32* %size14, align 4, !tbaa !653
  %sg_processed15 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 33
  %13 = load i32, i32* %sg_processed15, align 8, !tbaa !646
  %inc = add nsw i32 %13, 1
  store i32 %inc, i32* %sg_processed15, align 8, !tbaa !646
  call void @ivtv_stream_sync_for_device(%struct.ivtv_stream.4642* %s)
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 30
  %14 = load i64, i64* %sg_handle, align 8, !tbaa !644
  %conv = trunc i64 %14 to i32
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %15 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %15, i64 12
  call void @writel.406(i32 %conv, i8* %add.ptr)
  %reg_mem16 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem16, align 8, !tbaa !171
  %add.ptr17 = getelementptr i8, i8* %16, i64 0
  %call = call i32 @readl.415(i8* %add.ptr17)
  %or18 = or i32 %call, 2
  %reg_mem19 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %17 = load i8*, i8** %reg_mem19, align 8, !tbaa !171
  %add.ptr20 = getelementptr i8, i8* %17, i64 0
  call void @writel.406(i32 %or18, i8* %add.ptr20)
  %reg_mem21 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %18 = load i8*, i8** %reg_mem21, align 8, !tbaa !171
  %add.ptr22 = getelementptr i8, i8* %18, i64 0
  %call23 = call i32 @readl.415(i8* %add.ptr22)
  %19 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %call24 = call i64 @msecs_to_jiffies.416(i32 300)
  %add = add i64 %19, %call24
  %dma_timer = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 60
  %expires = getelementptr inbounds %struct.timer_list, %struct.timer_list* %dma_timer, i32 0, i32 1
  store i64 %add, i64* %expires, align 8, !tbaa !654
  %dma_timer25 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 60
  call void @add_timer(%struct.timer_list* %dma_timer25)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.435(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.438(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_set.436(%struct.atomic_t* %v, i32 %i) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %__val = bitcast %struct.atomic_t* %__u to i32*
  store i32 %i, i32* %__val, align 4, !tbaa !142
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.437(i8* %1, i8* %arraydecay, i32 4)
  %__val1 = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val1, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret void
}

declare void @v4l2_event_queue(%struct.video_device*, %struct.v4l2_event*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.437(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load i8, i8* %res, align 1, !tbaa !142
  store volatile i8 %0, i8* %p, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !677
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !678
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.438(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !679
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !680
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @stream_enc_dma_append(%struct.ivtv_stream.4642* %s, i32* %data) #0 {
entry:
  %__UNIQUE_ID_min1_16 = alloca i32, align 4
  %__UNIQUE_ID_min2_17 = alloca i32, align 4
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %q_predma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma, i32 0, i32 1
  %1 = load i32, i32* %buffers, align 8, !tbaa !681
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %2 = load i32, i32* %sg_pending_size, align 8, !tbaa !643
  %vdev = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %3 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %3, null
  br i1 %cmp, label %do.body, label %cond.true

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %cleanup

if.then2:                                         ; preds = %do.body
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name4 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %5 = load i8*, i8** %name4, align 8, !tbaa !349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.26.441, i32 0, i32 0), i8* %arraydecay, i8* %5)
  br label %cleanup

cond.true:                                        ; preds = %entry
  %s_flags = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  %call6 = call zeroext i1 @constant_test_bit.412(i64 3, i64* %s_flags)
  br i1 %call6, label %if.end22, label %do.body10

do.body10:                                        ; preds = %cond.true
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and11 = and i32 1, %6
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %cleanup

if.then13:                                        ; preds = %do.body10
  %v4l2_dev14 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name15 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev14, i32 0, i32 4
  %arraydecay16 = getelementptr inbounds [36 x i8], [36 x i8]* %name15, i32 0, i32 0
  %name17 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %7 = load i8*, i8** %name17, align 8, !tbaa !349
  %call18 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.27.442, i32 0, i32 0), i8* %arraydecay16, i8* %7)
  br label %cleanup

if.end22:                                         ; preds = %cond.true
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %8 = load i32, i32* %type, align 8, !tbaa !348
  %Pivot10 = icmp slt i32 %8, 2
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %if.end22
  %Pivot8 = icmp slt i32 %8, 3
  br i1 %Pivot8, label %sw.bb52, label %NodeBlock5

NodeBlock5:                                       ; preds = %NodeBlock7
  %Pivot6 = icmp slt i32 %8, 6
  br i1 %Pivot6, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock5
  %SwitchLeaf4 = icmp eq i32 %8, 6
  br i1 %SwitchLeaf4, label %sw.bb90, label %cleanup

LeafBlock1:                                       ; preds = %NodeBlock5
  %SwitchLeaf2 = icmp eq i32 %8, 3
  br i1 %SwitchLeaf2, label %sw.bb33, label %cleanup

NodeBlock:                                        ; preds = %if.end22
  %Pivot = icmp slt i32 %8, 1
  br i1 %Pivot, label %LeafBlock, label %sw.bb24

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %8, 0
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %LeafBlock
  %arrayidx = getelementptr inbounds i32, i32* %data, i64 1
  %9 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %arrayidx23 = getelementptr inbounds i32, i32* %data, i64 2
  %10 = load i32, i32* %arrayidx23, align 4, !tbaa !120
  %pending_pts = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  store i64 0, i64* %pending_pts, align 8, !tbaa !675
  br label %sw.epilog

sw.bb24:                                          ; preds = %NodeBlock
  %arrayidx25 = getelementptr inbounds i32, i32* %data, i64 1
  %11 = load i32, i32* %arrayidx25, align 4, !tbaa !120
  %arrayidx26 = getelementptr inbounds i32, i32* %data, i64 2
  %12 = load i32, i32* %arrayidx26, align 4, !tbaa !120
  %arrayidx27 = getelementptr inbounds i32, i32* %data, i64 3
  %13 = load i32, i32* %arrayidx27, align 4, !tbaa !120
  %arrayidx28 = getelementptr inbounds i32, i32* %data, i64 4
  %14 = load i32, i32* %arrayidx28, align 4, !tbaa !120
  %arrayidx29 = getelementptr inbounds i32, i32* %data, i64 5
  %15 = load i32, i32* %arrayidx29, align 4, !tbaa !120
  %conv = zext i32 %15 to i64
  %shl = shl i64 %conv, 32
  %arrayidx30 = getelementptr inbounds i32, i32* %data, i64 6
  %16 = load i32, i32* %arrayidx30, align 4, !tbaa !120
  %conv31 = zext i32 %16 to i64
  %or = or i64 %shl, %conv31
  %pending_pts32 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  store i64 %or, i64* %pending_pts32, align 8, !tbaa !675
  br label %sw.epilog

sw.bb33:                                          ; preds = %LeafBlock1
  %arrayidx34 = getelementptr inbounds i32, i32* %data, i64 1
  %17 = load i32, i32* %arrayidx34, align 4, !tbaa !120
  %add = add i32 %17, 12
  %arrayidx35 = getelementptr inbounds i32, i32* %data, i64 2
  %18 = load i32, i32* %arrayidx35, align 4, !tbaa !120
  %sub = sub i32 %18, 12
  %dec_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %19 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %sub36 = sub i32 %add, 8
  %idx.ext = zext i32 %sub36 to i64
  %add.ptr = getelementptr i8, i8* %19, i64 %idx.ext
  %call37 = call i32 @readl.415(i8* %add.ptr)
  %conv38 = zext i32 %call37 to i64
  %dec_mem39 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %20 = load i8*, i8** %dec_mem39, align 8, !tbaa !235
  %sub40 = sub i32 %add, 12
  %idx.ext41 = zext i32 %sub40 to i64
  %add.ptr42 = getelementptr i8, i8* %20, i64 %idx.ext41
  %call43 = call i32 @readl.415(i8* %add.ptr42)
  %conv44 = zext i32 %call43 to i64
  %shl45 = shl i64 %conv44, 32
  %or46 = or i64 %conv38, %shl45
  %pending_pts47 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  store i64 %or46, i64* %pending_pts47, align 8, !tbaa !675
  %has_cx23415 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 4
  %21 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool48 = icmp ne i8 %21, 0
  %add50 = add i32 %add, 16777216
  %add50.add = select i1 %tobool48, i32 %add50, i32 %add
  br label %sw.epilog

sw.bb52:                                          ; preds = %NodeBlock7
  %vbi = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %enc_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 12
  %22 = load i32, i32* %enc_size, align 4, !tbaa !682
  %vbi53 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %fpi = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi53, i32 0, i32 13
  %23 = load i32, i32* %fpi, align 8, !tbaa !683
  %mul = mul i32 %22, %23
  %enc_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %24 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %vbi54 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %enc_start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi54, i32 0, i32 11
  %25 = load i32, i32* %enc_start, align 8, !tbaa !684
  %sub55 = sub i32 %25, 4
  %idx.ext56 = zext i32 %sub55 to i64
  %add.ptr57 = getelementptr i8, i8* %24, i64 %idx.ext56
  %call58 = call i32 @readl.415(i8* %add.ptr57)
  %add59 = add i32 %call58, 12
  %cmp60 = icmp eq i32 %add59, 12
  br i1 %cmp60, label %do.body63, label %if.end74

do.body63:                                        ; preds = %sw.bb52
  %26 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and64 = and i32 2, %26
  %tobool65 = icmp ne i32 %and64, 0
  br i1 %tobool65, label %if.then66, label %cleanup

if.then66:                                        ; preds = %do.body63
  %v4l2_dev67 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name68 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev67, i32 0, i32 4
  %arraydecay69 = getelementptr inbounds [36 x i8], [36 x i8]* %name68, i32 0, i32 0
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28.443, i32 0, i32 0), i8* %arraydecay69)
  br label %cleanup

if.end74:                                         ; preds = %sw.bb52
  %enc_mem75 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %27 = load i8*, i8** %enc_mem75, align 8, !tbaa !234
  %sub76 = sub i32 %add59, 4
  %idx.ext77 = zext i32 %sub76 to i64
  %add.ptr78 = getelementptr i8, i8* %27, i64 %idx.ext77
  %call79 = call i32 @readl.415(i8* %add.ptr78)
  %conv80 = zext i32 %call79 to i64
  %enc_mem81 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %28 = load i8*, i8** %enc_mem81, align 8, !tbaa !234
  %sub82 = sub i32 %add59, 8
  %idx.ext83 = zext i32 %sub82 to i64
  %add.ptr84 = getelementptr i8, i8* %28, i64 %idx.ext83
  %call85 = call i32 @readl.415(i8* %add.ptr84)
  %conv86 = zext i32 %call85 to i64
  %shl87 = shl i64 %conv86, 32
  %or88 = or i64 %conv80, %shl87
  %pending_pts89 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  store i64 %or88, i64* %pending_pts89, align 8, !tbaa !675
  br label %sw.epilog

sw.bb90:                                          ; preds = %LeafBlock3
  %dec_mem91 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %29 = load i8*, i8** %dec_mem91, align 8, !tbaa !235
  %vbi92 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %dec_start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi92, i32 0, i32 10
  %30 = load i32, i32* %dec_start, align 4, !tbaa !685
  %add93 = add i32 %30, 4
  %idx.ext94 = zext i32 %add93 to i64
  %add.ptr95 = getelementptr i8, i8* %29, i64 %idx.ext94
  %call96 = call i32 @readl.415(i8* %add.ptr95)
  %add97 = add i32 %call96, 8
  %dec_mem98 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %31 = load i8*, i8** %dec_mem98, align 8, !tbaa !235
  %vbi99 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %dec_start100 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi99, i32 0, i32 10
  %32 = load i32, i32* %dec_start100, align 4, !tbaa !685
  %idx.ext101 = zext i32 %32 to i64
  %add.ptr102 = getelementptr i8, i8* %31, i64 %idx.ext101
  %call103 = call i32 @readl.415(i8* %add.ptr102)
  %vbi104 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 89
  %dec_start105 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi104, i32 0, i32 10
  %33 = load i32, i32* %dec_start105, align 4, !tbaa !685
  %add106 = add i32 %call103, %33
  %pending_pts107 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 11
  store i64 0, i64* %pending_pts107, align 8, !tbaa !675
  %add108 = add i32 %add106, 16777216
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb90, %if.end74, %sw.bb33, %sw.bb24, %sw.bb
  %UVsize.0 = phi i32 [ 0, %sw.bb ], [ %14, %sw.bb24 ], [ 0, %if.end74 ], [ 0, %sw.bb33 ], [ 0, %sw.bb90 ]
  %UVoffset.0 = phi i32 [ 0, %sw.bb ], [ %13, %sw.bb24 ], [ 0, %if.end74 ], [ 0, %sw.bb33 ], [ 0, %sw.bb90 ]
  %size.0 = phi i32 [ %10, %sw.bb ], [ %12, %sw.bb24 ], [ %mul, %if.end74 ], [ %sub, %sw.bb33 ], [ %add97, %sw.bb90 ]
  %offset.1 = phi i32 [ %9, %sw.bb ], [ %11, %sw.bb24 ], [ %add59, %if.end74 ], [ %add50.add, %sw.bb33 ], [ %add108, %sw.bb90 ]
  %sg_pending_size109 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  %34 = load i32, i32* %sg_pending_size109, align 8, !tbaa !643
  %cmp110 = icmp eq i32 %34, 0
  br i1 %cmp110, label %land.lhs.true, label %if.end159

land.lhs.true:                                    ; preds = %sw.epilog
  %call112 = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool113 = icmp ne i32 %call112, 0
  br i1 %tobool113, label %if.then114, label %if.end159

if.then114:                                       ; preds = %land.lhs.true
  %has_cx23415115 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 4
  %35 = load i8, i8* %has_cx23415115, align 8, !tbaa !170
  %conv116 = zext i8 %35 to i32
  %tobool117 = icmp ne i32 %conv116, 0
  br i1 %tobool117, label %land.lhs.true118, label %if.else

land.lhs.true118:                                 ; preds = %if.then114
  %type119 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %36 = load i32, i32* %type119, align 8, !tbaa !348
  %cmp120 = icmp eq i32 %36, 3
  br i1 %cmp120, label %if.then125, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true118
  %type122 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %37 = load i32, i32* %type122, align 8, !tbaa !348
  %cmp123 = icmp eq i32 %37, 6
  br i1 %cmp123, label %if.then125, label %if.else

if.then125:                                       ; preds = %lor.lhs.false, %land.lhs.true118
  %dec_mem126 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %38 = load i8*, i8** %dec_mem126, align 8, !tbaa !235
  %sub127 = sub i32 %offset.1, 16777216
  %idx.ext128 = zext i32 %sub127 to i64
  %add.ptr129 = getelementptr i8, i8* %38, i64 %idx.ext128
  %call130 = call i32 @readl.415(i8* %add.ptr129)
  %pending_backup = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 10
  store i32 %call130, i32* %pending_backup, align 8, !tbaa !673
  %dec_mem132 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %39 = load i8*, i8** %dec_mem132, align 8, !tbaa !235
  %sub133 = sub i32 %offset.1, 16777216
  %idx.ext134 = zext i32 %sub133 to i64
  %add.ptr135 = getelementptr i8, i8* %39, i64 %idx.ext134
  call void @writel.406(i32 510, i8* %add.ptr135)
  %dec_mem136 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %40 = load i8*, i8** %dec_mem136, align 8, !tbaa !235
  %sub137 = sub i32 %offset.1, 16777216
  %idx.ext138 = zext i32 %sub137 to i64
  %add.ptr139 = getelementptr i8, i8* %40, i64 %idx.ext138
  %call140 = call i32 @readl.415(i8* %add.ptr139)
  br label %if.end158

if.else:                                          ; preds = %lor.lhs.false, %if.then114
  %enc_mem143 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %41 = load i8*, i8** %enc_mem143, align 8, !tbaa !234
  %idx.ext144 = zext i32 %offset.1 to i64
  %add.ptr145 = getelementptr i8, i8* %41, i64 %idx.ext144
  %call146 = call i32 @readl.415(i8* %add.ptr145)
  %pending_backup147 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 10
  store i32 %call146, i32* %pending_backup147, align 8, !tbaa !673
  %enc_mem149 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %42 = load i8*, i8** %enc_mem149, align 8, !tbaa !234
  %idx.ext150 = zext i32 %offset.1 to i64
  %add.ptr151 = getelementptr i8, i8* %42, i64 %idx.ext150
  call void @writel.406(i32 510, i8* %add.ptr151)
  %enc_mem152 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %43 = load i8*, i8** %enc_mem152, align 8, !tbaa !234
  %idx.ext153 = zext i32 %offset.1 to i64
  %add.ptr154 = getelementptr i8, i8* %43, i64 %idx.ext153
  %call155 = call i32 @readl.415(i8* %add.ptr154)
  br label %if.end158

if.end158:                                        ; preds = %if.else, %if.then125
  %pending_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 9
  store i32 %offset.1, i32* %pending_offset, align 4, !tbaa !672
  br label %if.end159

if.end159:                                        ; preds = %if.end158, %land.lhs.true, %sw.epilog
  %type160 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %44 = load i32, i32* %type160, align 8, !tbaa !348
  %cmp161 = icmp eq i32 %44, 1
  br i1 %cmp161, label %if.then163, label %do.body171

if.then163:                                       ; preds = %if.end159
  %buf_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %45 = load i32, i32* %buf_size, align 8, !tbaa !403
  %buf_size164 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %46 = load i32, i32* %buf_size164, align 8, !tbaa !403
  %add165 = add i32 %size.0, %46
  %sub166 = sub i32 %add165, 1
  %buf_size167 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %47 = load i32, i32* %buf_size167, align 8, !tbaa !403
  %div = udiv i32 %sub166, %47
  %mul168 = mul i32 %45, %div
  %add169 = add i32 %mul168, %UVsize.0
  br label %do.body171

do.body171:                                       ; preds = %if.then163, %if.end159
  %bytes_needed.0 = phi i32 [ %add169, %if.then163 ], [ %size.0, %if.end159 ]
  %48 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and172 = and i32 32, %48
  %tobool173 = icmp ne i32 %and172, 0
  br i1 %tobool173, label %land.lhs.true174, label %do.end187

land.lhs.true174:                                 ; preds = %do.body171
  %49 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and175 = and i32 %49, 1024
  %tobool176 = icmp ne i32 %and175, 0
  br i1 %tobool176, label %if.then177, label %do.end187

if.then177:                                       ; preds = %land.lhs.true174
  %v4l2_dev178 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name179 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev178, i32 0, i32 4
  %arraydecay180 = getelementptr inbounds [36 x i8], [36 x i8]* %name179, i32 0, i32 0
  %call181 = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %s)
  %tobool182 = icmp ne i32 %call181, 0
  %50 = zext i1 %tobool182 to i64
  %cond = select i1 %tobool182, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.431, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.430, i32 0, i32 0)
  %name183 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %51 = load i8*, i8** %name183, align 8, !tbaa !349
  %call184 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29.444, i32 0, i32 0), i8* %arraydecay180, i8* %cond, i8* %51, i32 %bytes_needed.0, i32 %offset.1)
  br label %do.end187

do.end187:                                        ; preds = %if.then177, %land.lhs.true174, %do.body171
  %q_free = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 21
  %q_full = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 22
  %q_predma188 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %call189 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %s, %struct.ivtv_queue* %q_free, %struct.ivtv_queue* %q_full, %struct.ivtv_queue* %q_predma188, i32 %bytes_needed.0)
  %cmp190 = icmp slt i32 %call189, 0
  br i1 %cmp190, label %do.body193, label %if.end205

do.body193:                                       ; preds = %do.end187
  %52 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and194 = and i32 1, %52
  %tobool195 = icmp ne i32 %and194, 0
  br i1 %tobool195, label %if.then196, label %cleanup

if.then196:                                       ; preds = %do.body193
  %v4l2_dev197 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name198 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev197, i32 0, i32 4
  %arraydecay199 = getelementptr inbounds [36 x i8], [36 x i8]* %name198, i32 0, i32 0
  %name200 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %53 = load i8*, i8** %name200, align 8, !tbaa !349
  %call201 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.30.445, i32 0, i32 0), i8* %arraydecay199, i32 %bytes_needed.0, i8* %53)
  br label %cleanup

if.end205:                                        ; preds = %do.end187
  %tobool206 = icmp ne i32 %call189, 0
  br i1 %tobool206, label %land.lhs.true207, label %if.end228

land.lhs.true207:                                 ; preds = %if.end205
  %buffers_stolen = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 20
  %54 = load i32, i32* %buffers_stolen, align 4, !tbaa !686
  %tobool208 = icmp ne i32 %54, 0
  br i1 %tobool208, label %if.end228, label %cond.true210

cond.true210:                                     ; preds = %land.lhs.true207
  %s_flags211 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 7
  %call212 = call zeroext i1 @constant_test_bit.412(i64 8, i64* %s_flags211)
  br i1 %call212, label %if.then218, label %if.end228

if.then218:                                       ; preds = %cond.true210
  %v4l2_dev219 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name220 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev219, i32 0, i32 4
  %arraydecay221 = getelementptr inbounds [36 x i8], [36 x i8]* %name220, i32 0, i32 0
  %name222 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %55 = load i8*, i8** %name222, align 8, !tbaa !349
  %call223 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.31.446, i32 0, i32 0), i8* %arraydecay221, i8* %55)
  %v4l2_dev224 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name225 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev224, i32 0, i32 4
  %arraydecay226 = getelementptr inbounds [36 x i8], [36 x i8]* %name225, i32 0, i32 0
  %call227 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.32.447, i32 0, i32 0), i8* %arraydecay226)
  br label %if.end228

if.end228:                                        ; preds = %if.then218, %cond.true210, %land.lhs.true207, %if.end205
  %buffers_stolen229 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 20
  store i32 %call189, i32* %buffers_stolen229, align 4, !tbaa !686
  %q_predma230 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma230, i32 0, i32 0
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %56 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !687
  %57 = bitcast %struct.list_head* %56 to i8*
  %add.ptr231 = getelementptr inbounds i8, i8* %57, i64 0
  %58 = bitcast i8* %add.ptr231 to %struct.ivtv_buffer*
  %buf232 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %58, i32 0, i32 4
  %59 = load i8*, i8** %buf232, align 8, !tbaa !370
  %call233 = call i8* @__memset(i8* %59, i32 0, i64 128)
  %q_predma235 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %list236 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma235, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end228
  %list282.sink = phi %struct.list_head* [ %list282, %for.inc ], [ %list236, %if.end228 ]
  %size.1 = phi i32 [ %size.0, %if.end228 ], [ %size.3, %for.inc ]
  %offset.2 = phi i32 [ %offset.1, %if.end228 ], [ %offset.4, %for.inc ]
  %skip_bufs.0 = phi i32 [ %1, %if.end228 ], [ %dec, %for.inc ]
  %idx.0 = phi i32 [ %2, %if.end228 ], [ %idx.1, %for.inc ]
  %next283 = getelementptr inbounds %struct.list_head, %struct.list_head* %list282.sink, i32 0, i32 0
  %60 = load %struct.list_head*, %struct.list_head** %next283, align 8, !tbaa !86
  %61 = bitcast %struct.list_head* %60 to i8*
  %add.ptr285 = getelementptr inbounds i8, i8* %61, i64 0
  %62 = bitcast i8* %add.ptr285 to %struct.ivtv_buffer*
  %list240 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 0
  %q_predma241 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %list242 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma241, i32 0, i32 0
  %cmp243 = icmp ne %struct.list_head* %list240, %list242
  br i1 %cmp243, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dec = add nsw i32 %skip_bufs.0, -1
  %cmp245 = icmp sgt i32 %skip_bufs.0, 0
  br i1 %cmp245, label %for.inc, label %if.end248

if.end248:                                        ; preds = %for.body
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 1
  %63 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %conv249 = trunc i64 %63 to i32
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %64 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %idxprom = sext i32 %idx.0 to i64
  %arrayidx250 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %64, i64 %idxprom
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx250, i32 0, i32 1
  store i32 %conv249, i32* %dst, align 4, !tbaa !641
  %sg_pending251 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %65 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending251, align 8, !tbaa !640
  %idxprom252 = sext i32 %idx.0 to i64
  %arrayidx253 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %65, i64 %idxprom252
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx253, i32 0, i32 0
  store i32 %offset.2, i32* %src, align 4, !tbaa !629
  %buf_size254 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %66 = load i32, i32* %buf_size254, align 8, !tbaa !403
  %sg_pending255 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 27
  %67 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending255, align 8, !tbaa !640
  %idxprom256 = sext i32 %idx.0 to i64
  %arrayidx257 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %67, i64 %idxprom256
  %size258 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx257, i32 0, i32 2
  store i32 %66, i32* %size258, align 4, !tbaa !627
  %68 = bitcast i32* %__UNIQUE_ID_min1_16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %68) #8
  store i32 %size.1, i32* %__UNIQUE_ID_min1_16, align 4, !tbaa !120
  %69 = bitcast i32* %__UNIQUE_ID_min2_17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #8
  %buf_size259 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %70 = load i32, i32* %buf_size259, align 8, !tbaa !403
  store i32 %70, i32* %__UNIQUE_ID_min2_17, align 4, !tbaa !120
  %cmp260 = icmp eq i32* %__UNIQUE_ID_min1_16, %__UNIQUE_ID_min2_17
  %conv261 = zext i1 %cmp260 to i32
  %71 = load i32, i32* %__UNIQUE_ID_min1_16, align 4, !tbaa !120
  %72 = load i32, i32* %__UNIQUE_ID_min2_17, align 4, !tbaa !120
  %cmp263 = icmp ult i32 %71, %72
  %73 = load i32, i32* %__UNIQUE_ID_min1_16, align 4
  %74 = load i32, i32* %__UNIQUE_ID_min2_17, align 4
  %cond267 = select i1 %cmp263, i32 %73, i32 %74
  %75 = bitcast i32* %__UNIQUE_ID_min2_17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %75) #8
  %76 = bitcast i32* %__UNIQUE_ID_min1_16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %76) #8
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 5
  store i32 %cond267, i32* %bytesused, align 8, !tbaa !363
  %dma_xfer_cnt = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 26
  %77 = load i16, i16* %dma_xfer_cnt, align 8, !tbaa !645
  %dma_xfer_cnt268 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 3
  store i16 %77, i16* %dma_xfer_cnt268, align 2, !tbaa !688
  %bytesused269 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 5
  %78 = load i32, i32* %bytesused269, align 8, !tbaa !363
  %q_predma270 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 25
  %bytesused271 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_predma270, i32 0, i32 3
  %79 = load i32, i32* %bytesused271, align 8, !tbaa !637
  %add272 = add i32 %79, %78
  store i32 %add272, i32* %bytesused271, align 8, !tbaa !637
  %bytesused273 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 5
  %80 = load i32, i32* %bytesused273, align 8, !tbaa !363
  %sub274 = sub i32 %size.1, %80
  %buf_size275 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %81 = load i32, i32* %buf_size275, align 8, !tbaa !403
  %add276 = add i32 %offset.2, %81
  call void @ivtv_buf_sync_for_device(%struct.ivtv_stream.4642* %s, %struct.ivtv_buffer* %62)
  %cmp277 = icmp eq i32 %sub274, 0
  %UVsize.0.sub274 = select i1 %cmp277, i32 %UVsize.0, i32 %sub274
  %UVoffset.0.add276 = select i1 %cmp277, i32 %UVoffset.0, i32 %add276
  %inc = add nsw i32 %idx.0, 1
  br label %for.inc

for.inc:                                          ; preds = %if.end248, %for.body
  %size.3 = phi i32 [ %UVsize.0.sub274, %if.end248 ], [ %size.1, %for.body ]
  %offset.4 = phi i32 [ %UVoffset.0.add276, %if.end248 ], [ %offset.2, %for.body ]
  %idx.1 = phi i32 [ %inc, %if.end248 ], [ %idx.0, %for.body ]
  %list282 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %62, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %sg_pending_size286 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 31
  store i32 %idx.0, i32* %sg_pending_size286, align 8, !tbaa !643
  br label %cleanup

cleanup:                                          ; preds = %for.end, %if.then196, %do.body193, %if.then66, %do.body63, %LeafBlock, %LeafBlock1, %LeafBlock3, %if.then13, %do.body10, %if.then2, %do.body
  %retval.0 = phi i32 [ 0, %for.end ], [ -1, %if.then2 ], [ -1, %do.body ], [ -1, %if.then13 ], [ -1, %do.body10 ], [ -1, %if.then66 ], [ -1, %do.body63 ], [ -1, %LeafBlock ], [ -1, %LeafBlock1 ], [ -1, %LeafBlock3 ], [ -1, %if.then196 ], [ -1, %do.body193 ]
  ret i32 %retval.0
}

declare i32 @del_timer(%struct.timer_list*) #2

; Function Attrs: nounwind uwtable
define internal void @dma_post(%struct.ivtv_stream.4642* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv1, align 8, !tbaa !340
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.end

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 %2, 1024
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then, label %do.end

if.then:                                          ; preds = %land.lhs.true
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 @ivtv_use_pio(%struct.ivtv_stream.4642* %s)
  %tobool4 = icmp ne i32 %call, 0
  %3 = zext i1 %tobool4 to i64
  %cond = select i1 %tobool4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.18.431, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.19.430, i32 0, i32 0)
  %name5 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %4 = load i8*, i8** %name5, align 8, !tbaa !349
  %dma_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  %5 = load i32, i32* %dma_offset, align 8, !tbaa !661
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17.453, i32 0, i32 0), i8* %arraydecay, i8* %cond, i8* %4, i32 %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %q_dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.inc115, %do.end
  %.sink = phi %struct.list_head* [ %6, %for.inc115 ], [ %list, %do.end ]
  %buf.0 = phi %struct.ivtv_buffer* [ null, %do.end ], [ %8, %for.inc115 ]
  %x.0 = phi i32 [ 0, %do.end ], [ %inc103, %for.inc115 ]
  %next116 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next116, align 8, !tbaa !185
  %q_dma7 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %list8 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma7, i32 0, i32 0
  %cmp = icmp ne %struct.list_head* %6, %list8
  br i1 %cmp, label %for.body, label %for.end117

for.body:                                         ; preds = %for.cond
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 0
  %8 = bitcast i8* %add.ptr to %struct.ivtv_buffer*
  %buf9 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 4
  %9 = load i8*, i8** %buf9, align 8, !tbaa !370
  %10 = bitcast i8* %9 to i32*
  call void @ivtv_buf_sync_for_cpu(%struct.ivtv_stream.4642* %s, %struct.ivtv_buffer* %8)
  %cmp10 = icmp eq i32 %x.0, 0
  br i1 %cmp10, label %land.lhs.true11, label %if.end102

land.lhs.true11:                                  ; preds = %for.body
  %call12 = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.then14, label %if.end102

if.then14:                                        ; preds = %land.lhs.true11
  %dma_last_offset = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  %11 = load i32, i32* %dma_last_offset, align 8, !tbaa !689
  %div = udiv i32 %11, 4
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds i32, i32* %10, i64 %idxprom
  %12 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %cmp15 = icmp ne i32 %12, 510
  br i1 %cmp15, label %if.then16, label %if.end59

if.then16:                                        ; preds = %if.then14
  br label %for.cond17

for.cond17:                                       ; preds = %for.inc, %if.then16
  %offset.0 = phi i32 [ 0, %if.then16 ], [ %inc, %for.inc ]
  %cmp18 = icmp ult i32 %offset.0, 64
  br i1 %cmp18, label %for.body19, label %for.end

for.body19:                                       ; preds = %for.cond17
  %idxprom20 = zext i32 %offset.0 to i64
  %arrayidx21 = getelementptr inbounds i32, i32* %10, i64 %idxprom20
  %13 = load i32, i32* %arrayidx21, align 4, !tbaa !120
  %cmp22 = icmp eq i32 %13, 510
  br i1 %cmp22, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body19
  %inc = add i32 %offset.0, 1
  br label %for.cond17

for.end:                                          ; preds = %for.body19, %for.cond17
  %mul = mul i32 %offset.0, 4
  %cmp25 = icmp eq i32 %mul, 256
  br i1 %cmp25, label %do.body27, label %if.end40

do.body27:                                        ; preds = %for.end
  %14 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and28 = and i32 1, %14
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %if.then30, label %do.end38

if.then30:                                        ; preds = %do.body27
  %v4l2_dev31 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name32 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev31, i32 0, i32 4
  %arraydecay33 = getelementptr inbounds [36 x i8], [36 x i8]* %name32, i32 0, i32 0
  %name34 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %15 = load i8*, i8** %name34, align 8, !tbaa !349
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.20.454, i32 0, i32 0), i8* %arraydecay33, i8* %15)
  br label %do.end38

do.end38:                                         ; preds = %if.then30, %do.body27
  %dma_last_offset39 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  %16 = load i32, i32* %dma_last_offset39, align 8, !tbaa !689
  br label %if.end40

if.end40:                                         ; preds = %do.end38, %for.end
  %offset.1 = phi i32 [ %16, %do.end38 ], [ %mul, %for.end ]
  %dma_last_offset41 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  %17 = load i32, i32* %dma_last_offset41, align 8, !tbaa !689
  %cmp42 = icmp ne i32 %17, %offset.1
  br i1 %cmp42, label %do.body44, label %if.end57

do.body44:                                        ; preds = %if.end40
  %18 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and45 = and i32 1, %18
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %if.end57

if.then47:                                        ; preds = %do.body44
  %v4l2_dev48 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name49 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev48, i32 0, i32 4
  %arraydecay50 = getelementptr inbounds [36 x i8], [36 x i8]* %name49, i32 0, i32 0
  %name51 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 2
  %19 = load i8*, i8** %name51, align 8, !tbaa !349
  %dma_last_offset52 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  %20 = load i32, i32* %dma_last_offset52, align 8, !tbaa !689
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.21.455, i32 0, i32 0), i8* %arraydecay50, i8* %19, i32 %20, i32 %offset.1)
  br label %if.end57

if.end57:                                         ; preds = %if.then47, %do.body44, %if.end40
  %dma_last_offset58 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  store i32 %offset.1, i32* %dma_last_offset58, align 8, !tbaa !689
  br label %if.end59

if.end59:                                         ; preds = %if.end57, %if.then14
  %offset.2 = phi i32 [ %offset.1, %if.end57 ], [ %11, %if.then14 ]
  %has_cx23415 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 4
  %21 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %conv = zext i8 %21 to i32
  %tobool60 = icmp ne i32 %conv, 0
  br i1 %tobool60, label %land.lhs.true61, label %do.body79

land.lhs.true61:                                  ; preds = %if.end59
  %type = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %22 = load i32, i32* %type, align 8, !tbaa !348
  %cmp62 = icmp eq i32 %22, 3
  br i1 %cmp62, label %do.body68, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true61
  %type64 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %23 = load i32, i32* %type64, align 8, !tbaa !348
  %cmp65 = icmp eq i32 %23, 6
  br i1 %cmp65, label %do.body68, label %do.body79

do.body68:                                        ; preds = %lor.lhs.false, %land.lhs.true61
  %dec_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %24 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %dma_offset69 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  %25 = load i32, i32* %dma_offset69, align 8, !tbaa !661
  %sub = sub i32 %25, 16777216
  %idx.ext = zext i32 %sub to i64
  %add.ptr70 = getelementptr i8, i8* %24, i64 %idx.ext
  call void @writel.406(i32 0, i8* %add.ptr70)
  %dec_mem71 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 16
  %26 = load i8*, i8** %dec_mem71, align 8, !tbaa !235
  %dma_offset72 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  %27 = load i32, i32* %dma_offset72, align 8, !tbaa !661
  %sub73 = sub i32 %27, 16777216
  %idx.ext74 = zext i32 %sub73 to i64
  %add.ptr75 = getelementptr i8, i8* %26, i64 %idx.ext74
  %call76 = call i32 @readl.415(i8* %add.ptr75)
  br label %if.end90

do.body79:                                        ; preds = %lor.lhs.false, %if.end59
  %enc_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %28 = load i8*, i8** %enc_mem, align 8, !tbaa !234
  %dma_offset80 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  %29 = load i32, i32* %dma_offset80, align 8, !tbaa !661
  %idx.ext81 = zext i32 %29 to i64
  %add.ptr82 = getelementptr i8, i8* %28, i64 %idx.ext81
  call void @writel.406(i32 0, i8* %add.ptr82)
  %enc_mem83 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 15
  %30 = load i8*, i8** %enc_mem83, align 8, !tbaa !234
  %dma_offset84 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 12
  %31 = load i32, i32* %dma_offset84, align 8, !tbaa !661
  %idx.ext85 = zext i32 %31 to i64
  %add.ptr86 = getelementptr i8, i8* %30, i64 %idx.ext85
  %call87 = call i32 @readl.415(i8* %add.ptr86)
  br label %if.end90

if.end90:                                         ; preds = %do.body79, %do.body68
  %tobool91 = icmp ne i32 %offset.2, 0
  br i1 %tobool91, label %if.then92, label %if.end101

if.then92:                                        ; preds = %if.end90
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 5
  %32 = load i32, i32* %bytesused, align 8, !tbaa !363
  %sub93 = sub i32 %32, %offset.2
  store i32 %sub93, i32* %bytesused, align 8, !tbaa !363
  %buf94 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 4
  %33 = load i8*, i8** %buf94, align 8, !tbaa !370
  %buf95 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 4
  %34 = load i8*, i8** %buf95, align 8, !tbaa !370
  %idx.ext96 = zext i32 %offset.2 to i64
  %add.ptr97 = getelementptr inbounds i8, i8* %34, i64 %idx.ext96
  %bytesused98 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 5
  %35 = load i32, i32* %bytesused98, align 8, !tbaa !363
  %add = add i32 %35, %offset.2
  %conv99 = zext i32 %add to i64
  %call100 = call i8* @__memcpy(i8* %33, i8* %add.ptr97, i64 %conv99)
  br label %if.end101

if.end101:                                        ; preds = %if.then92, %if.end90
  %dma_backup = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 13
  %36 = load i32, i32* %dma_backup, align 4, !tbaa !674
  store i32 %36, i32* %10, align 4, !tbaa !120
  br label %if.end102

if.end102:                                        ; preds = %if.end101, %land.lhs.true11, %for.body
  %inc103 = add nsw i32 %x.0, 1
  %type104 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %37 = load i32, i32* %type104, align 8, !tbaa !348
  %cmp105 = icmp eq i32 %37, 0
  br i1 %cmp105, label %if.then111, label %lor.lhs.false107

lor.lhs.false107:                                 ; preds = %if.end102
  %type108 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %38 = load i32, i32* %type108, align 8, !tbaa !348
  %cmp109 = icmp eq i32 %38, 2
  br i1 %cmp109, label %if.then111, label %for.inc115

if.then111:                                       ; preds = %lor.lhs.false107, %if.end102
  %b_flags = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %8, i32 0, i32 2
  %39 = load i16, i16* %b_flags, align 8, !tbaa !368
  %conv112 = zext i16 %39 to i32
  %or = or i32 %conv112, 1
  %conv113 = trunc i32 %or to i16
  store i16 %conv113, i16* %b_flags, align 8, !tbaa !368
  br label %for.inc115

for.inc115:                                       ; preds = %if.then111, %lor.lhs.false107
  br label %for.cond

for.end117:                                       ; preds = %for.cond
  %magicptr = ptrtoint %struct.ivtv_buffer* %buf.0 to i64
  %cond3 = icmp eq i64 %magicptr, 0
  br i1 %cond3, label %if.end165, label %if.then119

if.then119:                                       ; preds = %for.end117
  %dma_last_offset120 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 17
  %40 = load i32, i32* %dma_last_offset120, align 8, !tbaa !689
  %bytesused121 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 5
  %41 = load i32, i32* %bytesused121, align 8, !tbaa !363
  %add122 = add i32 %41, %40
  store i32 %add122, i32* %bytesused121, align 8, !tbaa !363
  %type126 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %42 = load i32, i32* %type126, align 8, !tbaa !348
  %cmp127 = icmp eq i32 %42, 6
  br i1 %cmp127, label %if.then129, label %if.end165

if.then129:                                       ; preds = %if.then119
  %q_dma131 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %list132 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma131, i32 0, i32 0
  br label %for.cond136

for.cond136:                                      ; preds = %for.body142, %if.then129
  %list154.sink = phi %struct.list_head* [ %list154, %for.body142 ], [ %list132, %if.then129 ]
  %next155 = getelementptr inbounds %struct.list_head, %struct.list_head* %list154.sink, i32 0, i32 0
  %43 = load %struct.list_head*, %struct.list_head** %next155, align 8, !tbaa !86
  %44 = bitcast %struct.list_head* %43 to i8*
  %add.ptr157 = getelementptr inbounds i8, i8* %44, i64 0
  %45 = bitcast i8* %add.ptr157 to %struct.ivtv_buffer*
  %list137 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %45, i32 0, i32 0
  %q_dma138 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %list139 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma138, i32 0, i32 0
  %cmp140 = icmp ne %struct.list_head* %list137, %list139
  br i1 %cmp140, label %for.body142, label %for.end158

for.body142:                                      ; preds = %for.cond136
  %bytesused143 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %45, i32 0, i32 5
  %46 = load i32, i32* %bytesused143, align 8, !tbaa !363
  %q_dma144 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %bytesused145 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma144, i32 0, i32 3
  %47 = load i32, i32* %bytesused145, align 8, !tbaa !660
  %sub146 = sub i32 %47, %46
  store i32 %sub146, i32* %bytesused145, align 8, !tbaa !660
  %type147 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %48 = load i32, i32* %type147, align 8, !tbaa !348
  call void bitcast (void (%struct.ivtv.1060*, %struct.ivtv_buffer*, i64, i32)* @ivtv_process_vbi_data to void (%struct.ivtv.4633*, %struct.ivtv_buffer*, i64, i32)*)(%struct.ivtv.4633* %0, %struct.ivtv_buffer* %45, i64 0, i32 %48)
  %bytesused148 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %45, i32 0, i32 5
  %49 = load i32, i32* %bytesused148, align 8, !tbaa !363
  %q_dma149 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %bytesused150 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma149, i32 0, i32 3
  %50 = load i32, i32* %bytesused150, align 8, !tbaa !660
  %add151 = add i32 %50, %49
  store i32 %add151, i32* %bytesused150, align 8, !tbaa !660
  %list154 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %45, i32 0, i32 0
  br label %for.cond136

for.end158:                                       ; preds = %for.cond136
  %fh = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 5
  %51 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !347
  %cmp159 = icmp eq %struct.v4l2_fh* %51, null
  br i1 %cmp159, label %if.then161, label %if.end165

if.then161:                                       ; preds = %for.end158
  %q_dma162 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %q_free = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 21
  %call163 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %s, %struct.ivtv_queue* %q_dma162, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free, i32 0)
  br label %cleanup.cont

if.end165:                                        ; preds = %for.end158, %if.then119, %for.end117
  %q_dma166 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %q_full = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 22
  %q_dma167 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 24
  %bytesused168 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma167, i32 0, i32 3
  %52 = load i32, i32* %bytesused168, align 8, !tbaa !660
  %call169 = call i32 bitcast (i32 (%struct.ivtv_stream.1071*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)* @ivtv_queue_move to i32 (%struct.ivtv_stream.4642*, %struct.ivtv_queue*, %struct.ivtv_queue*, %struct.ivtv_queue*, i32)*)(%struct.ivtv_stream.4642* %s, %struct.ivtv_queue* %q_dma166, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_full, i32 %52)
  %type170 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 3
  %53 = load i32, i32* %type170, align 8, !tbaa !348
  %cmp171 = icmp eq i32 %53, 3
  br i1 %cmp171, label %land.lhs.true173, label %if.end178

land.lhs.true173:                                 ; preds = %if.end165
  %pcm_announce_callback = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 46
  %54 = load void (%struct.snd_ivtv_card*, i8*, i64)*, void (%struct.snd_ivtv_card*, i8*, i64)** %pcm_announce_callback, align 8, !tbaa !631
  %cmp174 = icmp ne void (%struct.snd_ivtv_card*, i8*, i64)* %54, null
  br i1 %cmp174, label %if.then176, label %if.end178

if.then176:                                       ; preds = %land.lhs.true173
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 23, i64* %i_flags)
  %i_flags177 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @set_bit.413(i64 15, i64* %i_flags177)
  br label %if.end178

if.end178:                                        ; preds = %if.then176, %land.lhs.true173, %if.end165
  %fh179 = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 5
  %55 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh179, align 8, !tbaa !347
  %tobool180 = icmp ne %struct.v4l2_fh* %55, null
  br i1 %tobool180, label %if.then181, label %cleanup.cont

if.then181:                                       ; preds = %if.end178
  %waitq = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 16
  call void @__wake_up(%struct.__wait_queue_head* %waitq, i32 3, i32 1, i8* null)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then181, %if.end178, %if.then161
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then161 ], [ 0, %if.then181 ], [ 0, %if.end178 ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_buf_sync_for_cpu(%struct.ivtv_stream.4642* %s, %struct.ivtv_buffer* %buf) #4 {
entry:
  %call = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 1
  %2 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %buf_size = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 19
  %3 = load i32, i32* %buf_size, align 8, !tbaa !403
  %add = add i32 %3, 256
  %conv = zext i32 %add to i64
  %dma = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 8
  %4 = load i32, i32* %dma, align 8, !tbaa !633
  call void @pci_dma_sync_single_for_cpu(%struct.pci_dev* %1, i64 %2, i64 %conv, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_cpu(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_cpu(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_cpu(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.417(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 337, i64 12) #8, !srcloc !690
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_cpu = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu, align 8, !tbaa !691
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_cpu13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu13, align 8, !tbaa !691
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_cpu(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

declare void @debug_dma_sync_single_for_cpu(%struct.device*, i64, i64, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_stream_sync_for_cpu(%struct.ivtv_stream.4642* %s) #4 {
entry:
  %call = call i32 @ivtv_use_dma(%struct.ivtv_stream.4642* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 1
  %0 = load %struct.ivtv.4633*, %struct.ivtv.4633** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.4642, %struct.ivtv_stream.4642* %s, i32 0, i32 30
  %2 = load i64, i64* %sg_handle, align 8, !tbaa !644
  call void @pci_dma_sync_single_for_cpu(%struct.pci_dev* %1, i64 %2, i64 12, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_unfinished_dma(i64 %arg) #0 {
entry:
  %0 = inttoptr i64 %arg to %struct.ivtv.4633*
  %i_flags = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  %call = call zeroext i1 @constant_test_bit.412(i64 0, i64* %i_flags)
  br i1 %call, label %if.end, label %cleanup.cont

if.end:                                           ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %reg_mem = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 4
  %call3 = call i32 @readl.415(i8* %add.ptr)
  %cur_dma_stream = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 54
  %2 = load i32, i32* %cur_dma_stream, align 8, !tbaa !295
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.7.463, i32 0, i32 0), i8* %arraydecay, i32 %call3, i32 %2)
  %reg_mem5 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %3, i64 4
  %call7 = call i32 @readl.415(i8* %add.ptr6)
  %and = and i32 %call7, 3
  %reg_mem8 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem8, align 8, !tbaa !171
  %add.ptr9 = getelementptr i8, i8* %4, i64 4
  call void @writel.406(i32 %and, i8* %add.ptr9)
  %i_flags10 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @clear_bit.433(i64 1, i64* %i_flags10)
  %i_flags11 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 26
  call void @clear_bit.433(i64 0, i64* %i_flags11)
  %cur_dma_stream12 = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 54
  store i32 -1, i32* %cur_dma_stream12, align 8, !tbaa !295
  %dma_waitq = getelementptr inbounds %struct.ivtv.4633, %struct.ivtv.4633* %0, i32 0, i32 62
  call void @__wake_up(%struct.__wait_queue_head* %dma_waitq, i32 3, i32 1, i8* null)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %entry
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 1, %entry ]
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_api(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %data) #0 {
entry:
  %call = call i32 @ivtv_api_call(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %data)
  %cmp = icmp eq i32 %call, -16
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %call1 = call i32 @ivtv_api_call(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %data)
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %entry
  %cond = phi i32 [ %call1, %cond.true ], [ %call, %entry ]
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_api_call(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %data) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %__dummy68 = alloca i64, align 8
  %__dummy269 = alloca i64, align 8
  %__dummy217 = alloca i64, align 8
  %__dummy2218 = alloca i64, align 8
  %__dummy224 = alloca i64, align 8
  %__dummy2225 = alloca i64, align 8
  %__dummy266 = alloca i64, align 8
  %__dummy2267 = alloca i64, align 8
  %__dummy273 = alloca i64, align 8
  %__dummy2274 = alloca i64, align 8
  %cmp = icmp sge i32 %cmd, 128
  %enc_mbox = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 66
  %dec_mbox = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 67
  %cond = select i1 %cmp, %struct.ivtv_mailbox_data* %enc_mbox, %struct.ivtv_mailbox_data* %dec_mbox
  %call = call i64 @msecs_to_jiffies.466(i32 1000)
  %conv = trunc i64 %call to i32
  %cmp1 = icmp eq %struct.ivtv_mailbox_data* null, %cond
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call3 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.467, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

if.end:                                           ; preds = %entry
  %cmp4 = icmp slt i32 %args, 0
  %cmp6 = icmp sgt i32 %args, 16
  %or.cond = or i1 %cmp4, %cmp6
  %cmp9 = icmp slt i32 %cmd, 0
  %or.cond1 = or i1 %or.cond, %cmp9
  %cmp12 = icmp sgt i32 %cmd, 255
  %or.cond2 = or i1 %or.cond1, %cmp12
  br i1 %or.cond2, label %if.then18, label %lor.lhs.false14

lor.lhs.false14:                                  ; preds = %if.end
  %idxprom = sext i32 %cmd to i64
  %arrayidx = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom
  %name15 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx, i32 0, i32 1
  %0 = load i8*, i8** %name15, align 8, !tbaa !692
  %cmp16 = icmp eq i8* %0, null
  br i1 %cmp16, label %if.then18, label %if.end23

if.then18:                                        ; preds = %lor.lhs.false14, %if.end
  %v4l2_dev19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name20 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev19, i32 0, i32 4
  %arraydecay21 = getelementptr inbounds [36 x i8], [36 x i8]* %name20, i32 0, i32 0
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.1.468, i32 0, i32 0), i8* %arraydecay21, i32 %cmd, i32 %args)
  br label %cleanup

if.end23:                                         ; preds = %lor.lhs.false14
  %idxprom24 = sext i32 %cmd to i64
  %arrayidx25 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom24
  %flags26 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx25, i32 0, i32 0
  %1 = load i32, i32* %flags26, align 16, !tbaa !694
  %and = and i32 %1, 32
  %tobool = icmp ne i32 %and, 0
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and28 = and i32 4, %2
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool, label %do.body, label %do.body41

do.body:                                          ; preds = %if.end23
  br i1 %tobool29, label %land.lhs.true, label %if.end55

land.lhs.true:                                    ; preds = %do.body
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and30 = and i32 %3, 1024
  %tobool31 = icmp ne i32 %and30, 0
  br i1 %tobool31, label %if.then32, label %if.end55

if.then32:                                        ; preds = %land.lhs.true
  %v4l2_dev33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name34 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev33, i32 0, i32 4
  %arraydecay35 = getelementptr inbounds [36 x i8], [36 x i8]* %name34, i32 0, i32 0
  %idxprom36 = sext i32 %cmd to i64
  %arrayidx37 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom36
  %name38 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx37, i32 0, i32 1
  %4 = load i8*, i8** %name38, align 8, !tbaa !692
  %call39 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.469, i32 0, i32 0), i8* %arraydecay35, i8* %4)
  br label %if.end55

do.body41:                                        ; preds = %if.end23
  br i1 %tobool29, label %if.then44, label %if.end55

if.then44:                                        ; preds = %do.body41
  %v4l2_dev45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name46 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev45, i32 0, i32 4
  %arraydecay47 = getelementptr inbounds [36 x i8], [36 x i8]* %name46, i32 0, i32 0
  %idxprom48 = sext i32 %cmd to i64
  %arrayidx49 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom48
  %name50 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx49, i32 0, i32 1
  %5 = load i8*, i8** %name50, align 8, !tbaa !692
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2.469, i32 0, i32 0), i8* %arraydecay47, i8* %5)
  br label %if.end55

if.end55:                                         ; preds = %if.then44, %do.body41, %if.then32, %land.lhs.true, %do.body
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end55
  %i.0 = phi i32 [ %args, %if.end55 ], [ %inc, %for.body ]
  %cmp56 = icmp slt i32 %i.0, 16
  br i1 %cmp56, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom58 = sext i32 %i.0 to i64
  %arrayidx59 = getelementptr inbounds i32, i32* %data, i64 %idxprom58
  store i32 0, i32* %arrayidx59, align 4, !tbaa !120
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %api_cache = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom60 = sext i32 %cmd to i64
  %arrayidx61 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache, i64 0, i64 %idxprom60
  %last_jiffies = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx61, i32 0, i32 0
  %6 = load i64, i64* %last_jiffies, align 8, !tbaa !695
  %tobool62 = icmp ne i64 %6, 0
  br i1 %tobool62, label %land.lhs.true63, label %if.end95

land.lhs.true63:                                  ; preds = %for.end
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #8
  %cmp64 = icmp eq i64* %__dummy, %__dummy2
  %conv65 = zext i1 %cmp64 to i32
  %9 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %tobool66 = icmp ne i32 1, 0
  br i1 %tobool66, label %land.lhs.true67, label %if.end95

land.lhs.true67:                                  ; preds = %land.lhs.true63
  %11 = bitcast i64* %__dummy68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #8
  %12 = bitcast i64* %__dummy269 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %12) #8
  %cmp70 = icmp eq i64* %__dummy68, %__dummy269
  %conv71 = zext i1 %cmp70 to i32
  %13 = bitcast i64* %__dummy269 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  %14 = bitcast i64* %__dummy68 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #8
  %15 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %api_cache75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom76 = sext i32 %cmd to i64
  %arrayidx77 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache75, i64 0, i64 %idxprom76
  %last_jiffies78 = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx77, i32 0, i32 0
  %16 = load i64, i64* %last_jiffies78, align 8, !tbaa !695
  %call79 = call i64 @msecs_to_jiffies.466(i32 1800000)
  %add = add i64 %16, %call79
  %sub = sub i64 %15, %add
  %cmp80 = icmp slt i64 %sub, 0
  br i1 %cmp80, label %land.lhs.true82, label %if.end95

land.lhs.true82:                                  ; preds = %land.lhs.true67
  %17 = bitcast i32* %data to i8*
  %api_cache83 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom84 = sext i32 %cmd to i64
  %arrayidx85 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache83, i64 0, i64 %idxprom84
  %data86 = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx85, i32 0, i32 1
  %arraydecay87 = getelementptr inbounds [16 x i32], [16 x i32]* %data86, i32 0, i32 0
  %18 = bitcast i32* %arraydecay87 to i8*
  %call88 = call i32 @memcmp(i8* %17, i8* %18, i64 64)
  %tobool89 = icmp ne i32 %call88, 0
  br i1 %tobool89, label %if.end95, label %if.then90

if.then90:                                        ; preds = %land.lhs.true82
  %19 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %api_cache91 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom92 = sext i32 %cmd to i64
  %arrayidx93 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache91, i64 0, i64 %idxprom92
  %last_jiffies94 = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx93, i32 0, i32 0
  store i64 %19, i64* %last_jiffies94, align 8, !tbaa !695
  br label %cleanup

if.end95:                                         ; preds = %land.lhs.true82, %land.lhs.true67, %land.lhs.true63, %for.end
  %idxprom96 = sext i32 %cmd to i64
  %arrayidx97 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom96
  %flags98 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx97, i32 0, i32 0
  %20 = load i32, i32* %flags98, align 16, !tbaa !694
  %and99 = and i32 %20, 8
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %if.then101, label %if.end145

if.then101:                                       ; preds = %if.end95
  br label %for.cond102

for.cond102:                                      ; preds = %for.inc135, %if.then101
  %i.1 = phi i32 [ 0, %if.then101 ], [ %inc136, %for.inc135 ]
  %cmp103 = icmp slt i32 %i.1, 100
  br i1 %cmp103, label %for.body105, label %for.end137

for.body105:                                      ; preds = %for.cond102
  %max_mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 2
  %21 = load i8, i8* %max_mbox, align 8, !tbaa !697
  %conv106 = zext i8 %21 to i32
  %add107 = add nsw i32 %conv106, 1
  %rem = srem i32 %i.1, %add107
  %call108 = call i32 @try_mailbox(%struct.ivtv_mailbox_data* %cond, i32 %rem)
  %tobool109 = icmp ne i32 %call108, 0
  br i1 %tobool109, label %if.then110, label %do.body116

if.then110:                                       ; preds = %for.body105
  %mbox111 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 0
  %22 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox111, align 8, !tbaa !698
  %idxprom112 = sext i32 %rem to i64
  %arrayidx113 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %22, i64 %idxprom112
  call void @write_mailbox(%struct.ivtv_mailbox* %arrayidx113, i32 %cmd, i32* %data)
  %conv114 = sext i32 %rem to i64
  %busy = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 1
  call void @clear_bit.470(i64 %conv114, i64* %busy)
  br label %cleanup

do.body116:                                       ; preds = %for.body105
  %23 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and117 = and i32 1, %23
  %tobool118 = icmp ne i32 %and117, 0
  br i1 %tobool118, label %if.then119, label %for.inc135

if.then119:                                       ; preds = %do.body116
  %v4l2_dev120 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name121 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev120, i32 0, i32 4
  %arraydecay122 = getelementptr inbounds [36 x i8], [36 x i8]* %name121, i32 0, i32 0
  %idxprom123 = sext i32 %cmd to i64
  %arrayidx124 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom123
  %name125 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx124, i32 0, i32 1
  %24 = load i8*, i8** %name125, align 8, !tbaa !692
  %mbox126 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 0
  %25 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox126, align 8, !tbaa !698
  %idxprom127 = sext i32 %rem to i64
  %arrayidx128 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %25, i64 %idxprom127
  %flags129 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx128, i32 0, i32 0
  %26 = bitcast i32* %flags129 to i8*
  %call130 = call i32 @readl.471(i8* %26)
  %call131 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.472, i32 0, i32 0), i8* %arraydecay122, i8* %24, i32 %rem, i32 %call130)
  br label %for.inc135

for.inc135:                                       ; preds = %if.then119, %do.body116
  %inc136 = add nsw i32 %i.1, 1
  br label %for.cond102

for.end137:                                       ; preds = %for.cond102
  %v4l2_dev138 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name139 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev138, i32 0, i32 4
  %arraydecay140 = getelementptr inbounds [36 x i8], [36 x i8]* %name139, i32 0, i32 0
  %idxprom141 = sext i32 %cmd to i64
  %arrayidx142 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom141
  %name143 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx142, i32 0, i32 1
  %27 = load i8*, i8** %name143, align 8, !tbaa !692
  %call144 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4.473, i32 0, i32 0), i8* %arraydecay140, i8* %27)
  call void @clear_all_mailboxes(%struct.ivtv.1060* %itv, %struct.ivtv_mailbox_data* %cond)
  br label %cleanup

if.end145:                                        ; preds = %if.end95
  %and146 = and i32 %20, 6
  %cmp147 = icmp eq i32 %and146, 6
  br i1 %cmp147, label %if.then149, label %if.end152

if.then149:                                       ; preds = %if.end145
  %call150 = call i64 @msecs_to_jiffies.466(i32 100)
  %conv151 = trunc i64 %call150 to i32
  br label %if.end152

if.end152:                                        ; preds = %if.then149, %if.end145
  %api_timeout.0 = phi i32 [ %conv151, %if.then149 ], [ %conv, %if.end145 ]
  %call153 = call i32 @get_mailbox(%struct.ivtv_mailbox_data* %cond, i32 %20)
  %cmp154 = icmp slt i32 %call153, 0
  br i1 %cmp154, label %do.body157, label %if.end171

do.body157:                                       ; preds = %if.end152
  %28 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and158 = and i32 1, %28
  %tobool159 = icmp ne i32 %and158, 0
  br i1 %tobool159, label %if.then160, label %do.end170

if.then160:                                       ; preds = %do.body157
  %v4l2_dev161 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name162 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev161, i32 0, i32 4
  %arraydecay163 = getelementptr inbounds [36 x i8], [36 x i8]* %name162, i32 0, i32 0
  %idxprom164 = sext i32 %cmd to i64
  %arrayidx165 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom164
  %name166 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx165, i32 0, i32 1
  %29 = load i8*, i8** %name166, align 8, !tbaa !692
  %call167 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.5.474, i32 0, i32 0), i8* %arraydecay163, i8* %29)
  br label %do.end170

do.end170:                                        ; preds = %if.then160, %do.body157
  call void @clear_all_mailboxes(%struct.ivtv.1060* %itv, %struct.ivtv_mailbox_data* %cond)
  br label %cleanup

if.end171:                                        ; preds = %if.end152
  %mbox172 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 0
  %30 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox172, align 8, !tbaa !698
  %idxprom173 = sext i32 %call153 to i64
  %arrayidx174 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %30, i64 %idxprom173
  call void @write_mailbox(%struct.ivtv_mailbox* %arrayidx174, i32 %cmd, i32* %data)
  %and175 = and i32 %20, 1
  %tobool176 = icmp ne i32 %and175, 0
  br i1 %tobool176, label %if.then177, label %if.end188

if.then177:                                       ; preds = %if.end171
  %api_cache178 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom179 = sext i32 %cmd to i64
  %arrayidx180 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache178, i64 0, i64 %idxprom179
  %data181 = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx180, i32 0, i32 1
  %arraydecay182 = getelementptr inbounds [16 x i32], [16 x i32]* %data181, i32 0, i32 0
  %31 = bitcast i32* %arraydecay182 to i8*
  %32 = bitcast i32* %data to i8*
  %call183 = call i8* @__memcpy(i8* %31, i8* %32, i64 64)
  %33 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %api_cache184 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom185 = sext i32 %cmd to i64
  %arrayidx186 = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache184, i64 0, i64 %idxprom185
  %last_jiffies187 = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx186, i32 0, i32 0
  store i64 %33, i64* %last_jiffies187, align 8, !tbaa !695
  br label %if.end188

if.end188:                                        ; preds = %if.then177, %if.end171
  %and189 = and i32 %20, 2
  %cmp190 = icmp eq i32 %and189, 0
  br i1 %cmp190, label %if.then192, label %if.end195

if.then192:                                       ; preds = %if.end188
  %conv193 = sext i32 %call153 to i64
  %busy194 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 1
  call void @clear_bit.470(i64 %conv193, i64* %busy194)
  br label %cleanup

if.end195:                                        ; preds = %if.end188
  %34 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %and196 = and i32 %20, 64
  %tobool197 = icmp ne i32 %and196, 0
  br i1 %tobool197, label %if.end212, label %if.then198

if.then198:                                       ; preds = %if.end195
  br label %for.cond199

for.cond199:                                      ; preds = %for.inc209, %if.then198
  %i.2 = phi i32 [ 0, %if.then198 ], [ %inc210, %for.inc209 ]
  %cmp200 = icmp slt i32 %i.2, 100
  br i1 %cmp200, label %for.body202, label %if.end212

for.body202:                                      ; preds = %for.cond199
  %flags203 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %35 = bitcast i32* %flags203 to i8*
  %call204 = call i32 @readl.471(i8* %35)
  %and205 = and i32 %call204, 4
  %tobool206 = icmp ne i32 %and205, 0
  br i1 %tobool206, label %if.end212, label %for.inc209

for.inc209:                                       ; preds = %for.body202
  %inc210 = add nsw i32 %i.2, 1
  br label %for.cond199

if.end212:                                        ; preds = %for.body202, %for.cond199, %if.end195
  br label %while.cond

while.cond:                                       ; preds = %if.end265, %if.end212
  %flags213 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %36 = bitcast i32* %flags213 to i8*
  %call214 = call i32 @readl.471(i8* %36)
  %and215 = and i32 %call214, 4
  %tobool216 = icmp ne i32 %and215, 0
  %lnot = xor i1 %tobool216, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %37 = bitcast i64* %__dummy217 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %37) #8
  %38 = bitcast i64* %__dummy2218 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %38) #8
  %cmp219 = icmp eq i64* %__dummy217, %__dummy2218
  %conv220 = zext i1 %cmp219 to i32
  %39 = bitcast i64* %__dummy2218 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %39) #8
  %40 = bitcast i64* %__dummy217 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %40) #8
  %tobool222 = icmp ne i32 1, 0
  br i1 %tobool222, label %land.lhs.true223, label %if.end259

land.lhs.true223:                                 ; preds = %while.body
  %41 = bitcast i64* %__dummy224 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %41) #8
  %42 = bitcast i64* %__dummy2225 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %42) #8
  %cmp226 = icmp eq i64* %__dummy224, %__dummy2225
  %conv227 = zext i1 %cmp226 to i32
  %43 = bitcast i64* %__dummy2225 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %43) #8
  %44 = bitcast i64* %__dummy224 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %44) #8
  %conv231 = sext i32 %api_timeout.0 to i64
  %add232 = add i64 %34, %conv231
  %45 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub233 = sub i64 %add232, %45
  %cmp234 = icmp slt i64 %sub233, 0
  br i1 %cmp234, label %do.body237, label %if.end259

do.body237:                                       ; preds = %land.lhs.true223
  %46 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and238 = and i32 1, %46
  %tobool239 = icmp ne i32 %and238, 0
  br i1 %tobool239, label %if.then240, label %do.body251

if.then240:                                       ; preds = %do.body237
  %v4l2_dev241 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name242 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev241, i32 0, i32 4
  %arraydecay243 = getelementptr inbounds [36 x i8], [36 x i8]* %name242, i32 0, i32 0
  %idxprom244 = sext i32 %cmd to i64
  %arrayidx245 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom244
  %name246 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx245, i32 0, i32 1
  %47 = load i8*, i8** %name246, align 8, !tbaa !692
  %call247 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.475, i32 0, i32 0), i8* %arraydecay243, i8* %47)
  br label %do.body251

do.body251:                                       ; preds = %if.then240, %do.body237
  %flags252 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %48 = bitcast i32* %flags252 to i8*
  call void @writel.476(i32 0, i8* %48)
  %flags253 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %49 = bitcast i32* %flags253 to i8*
  %call254 = call i32 @readl.471(i8* %49)
  %conv257 = sext i32 %call153 to i64
  %busy258 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 1
  call void @clear_bit.470(i64 %conv257, i64* %busy258)
  br label %cleanup

if.end259:                                        ; preds = %land.lhs.true223, %while.body
  %and260 = and i32 %20, 32
  %tobool261 = icmp ne i32 %and260, 0
  br i1 %tobool261, label %if.then262, label %if.else263

if.then262:                                       ; preds = %if.end259
  call void @__const_udelay(i64 4295000)
  br label %if.end265

if.else263:                                       ; preds = %if.end259
  %call264 = call i32 @ivtv_msleep_timeout(i32 1, i32 0)
  br label %if.end265

if.end265:                                        ; preds = %if.else263, %if.then262
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %50 = bitcast i64* %__dummy266 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %50) #8
  %51 = bitcast i64* %__dummy2267 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %51) #8
  %cmp268 = icmp eq i64* %__dummy266, %__dummy2267
  %conv269 = zext i1 %cmp268 to i32
  %52 = bitcast i64* %__dummy2267 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %52) #8
  %53 = bitcast i64* %__dummy266 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %53) #8
  %tobool271 = icmp ne i32 1, 0
  br i1 %tobool271, label %land.lhs.true272, label %if.end302

land.lhs.true272:                                 ; preds = %while.end
  %54 = bitcast i64* %__dummy273 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %54) #8
  %55 = bitcast i64* %__dummy2274 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %55) #8
  %cmp275 = icmp eq i64* %__dummy273, %__dummy2274
  %conv276 = zext i1 %cmp275 to i32
  %56 = bitcast i64* %__dummy2274 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %56) #8
  %57 = bitcast i64* %__dummy273 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %57) #8
  %call280 = call i64 @msecs_to_jiffies.466(i32 100)
  %add281 = add i64 %34, %call280
  %58 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub282 = sub i64 %add281, %58
  %cmp283 = icmp slt i64 %sub282, 0
  br i1 %cmp283, label %do.body286, label %if.end302

do.body286:                                       ; preds = %land.lhs.true272
  %59 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and287 = and i32 1, %59
  %tobool288 = icmp ne i32 %and287, 0
  br i1 %tobool288, label %if.then289, label %if.end302

if.then289:                                       ; preds = %do.body286
  %v4l2_dev290 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name291 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev290, i32 0, i32 4
  %arraydecay292 = getelementptr inbounds [36 x i8], [36 x i8]* %name291, i32 0, i32 0
  %idxprom293 = sext i32 %cmd to i64
  %arrayidx294 = getelementptr inbounds [256 x %struct.v4l2_priv_tun_config], [256 x %struct.v4l2_priv_tun_config]* @api_info, i64 0, i64 %idxprom293
  %name295 = getelementptr inbounds %struct.v4l2_priv_tun_config, %struct.v4l2_priv_tun_config* %arrayidx294, i32 0, i32 1
  %60 = load i8*, i8** %name295, align 8, !tbaa !692
  %61 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub296 = sub i64 %61, %34
  %call297 = call i32 @jiffies_to_msecs(i64 %sub296)
  %call298 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.477, i32 0, i32 0), i8* %arraydecay292, i8* %60, i32 %call297)
  br label %if.end302

if.end302:                                        ; preds = %if.then289, %do.body286, %land.lhs.true272, %while.end
  br label %for.cond303

for.cond303:                                      ; preds = %for.body306, %if.end302
  %i.3 = phi i32 [ 0, %if.end302 ], [ %inc314, %for.body306 ]
  %cmp304 = icmp slt i32 %i.3, 16
  br i1 %cmp304, label %for.body306, label %do.body316

for.body306:                                      ; preds = %for.cond303
  %data307 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 4
  %idxprom308 = sext i32 %i.3 to i64
  %arrayidx309 = getelementptr inbounds [16 x i32], [16 x i32]* %data307, i64 0, i64 %idxprom308
  %62 = bitcast i32* %arrayidx309 to i8*
  %call310 = call i32 @readl.471(i8* %62)
  %idxprom311 = sext i32 %i.3 to i64
  %arrayidx312 = getelementptr inbounds i32, i32* %data, i64 %idxprom311
  store i32 %call310, i32* %arrayidx312, align 4, !tbaa !120
  %inc314 = add nsw i32 %i.3, 1
  br label %for.cond303

do.body316:                                       ; preds = %for.cond303
  %flags317 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %63 = bitcast i32* %flags317 to i8*
  call void @writel.476(i32 0, i8* %63)
  %flags318 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx174, i32 0, i32 0
  %64 = bitcast i32* %flags318 to i8*
  %call319 = call i32 @readl.471(i8* %64)
  %conv322 = sext i32 %call153 to i64
  %busy323 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %cond, i32 0, i32 1
  call void @clear_bit.470(i64 %conv322, i64* %busy323)
  br label %cleanup

cleanup:                                          ; preds = %do.body316, %do.body251, %if.then192, %do.end170, %for.end137, %if.then110, %if.then90, %if.then18, %if.then
  %retval.0 = phi i32 [ -19, %if.then ], [ -22, %if.then18 ], [ 0, %if.then110 ], [ -16, %for.end137 ], [ -16, %do.end170 ], [ 0, %if.then192 ], [ -5, %do.body251 ], [ 0, %do.body316 ], [ 0, %if.then90 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.466(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @try_mailbox(%struct.ivtv_mailbox_data* %mbdata, i32 %mb) #0 {
entry:
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %0 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !698
  %idxprom = sext i32 %mb to i64
  %arrayidx = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %0, i64 %idxprom
  %flags1 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx, i32 0, i32 0
  %1 = bitcast i32* %flags1 to i8*
  %call = call i32 @readl.471(i8* %1)
  %cmp = icmp eq i32 %call, 0
  %and = and i32 %call, 4
  %tobool = icmp ne i32 %and, 0
  %2 = select i1 %cmp, i1 true, i1 %tobool
  %lor.ext = zext i1 %2 to i32
  %tobool2 = icmp ne i32 %lor.ext, 0
  br i1 %tobool2, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %entry
  %conv = sext i32 %mb to i64
  %busy = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 1
  %call3 = call zeroext i1 @test_and_set_bit.479(i64 %conv, i64* %busy)
  br i1 %call3, label %cleanup, label %do.body

do.body:                                          ; preds = %land.lhs.true
  %mbox4 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %3 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox4, align 8, !tbaa !698
  %idxprom5 = sext i32 %mb to i64
  %arrayidx6 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %3, i64 %idxprom5
  %flags7 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx6, i32 0, i32 0
  %4 = bitcast i32* %flags7 to i8*
  call void @writel.476(i32 1, i8* %4)
  %mbox8 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %5 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox8, align 8, !tbaa !698
  %idxprom9 = sext i32 %mb to i64
  %arrayidx10 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %5, i64 %idxprom9
  %flags11 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx10, i32 0, i32 0
  %6 = bitcast i32* %flags11 to i8*
  %call12 = call i32 @readl.471(i8* %6)
  br label %cleanup

cleanup:                                          ; preds = %do.body, %land.lhs.true, %entry
  %retval.0 = phi i32 [ 1, %do.body ], [ 0, %land.lhs.true ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @write_mailbox(%struct.ivtv_mailbox* %mbox, i32 %cmd, i32* %data) #0 {
entry:
  %cmd1 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 1
  %0 = bitcast i32* %cmd1 to i8*
  call void @writel.476(i32 %cmd, i8* %0)
  %cmd2 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 1
  %1 = bitcast i32* %cmd2 to i8*
  %call = call i32 @readl.471(i8* %1)
  %timeout = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 3
  %2 = bitcast i32* %timeout to i8*
  call void @writel.476(i32 33554432, i8* %2)
  %timeout4 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 3
  %3 = bitcast i32* %timeout4 to i8*
  %call5 = call i32 @readl.471(i8* %3)
  br label %for.cond

for.cond:                                         ; preds = %do.body8, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %do.body8 ]
  %cmp = icmp slt i32 %i.0, 16
  br i1 %cmp, label %do.body8, label %do.body18

do.body8:                                         ; preds = %for.cond
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %data, i64 %idxprom
  %4 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %data9 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 4
  %idxprom10 = sext i32 %i.0 to i64
  %arrayidx11 = getelementptr inbounds [16 x i32], [16 x i32]* %data9, i64 0, i64 %idxprom10
  %5 = bitcast i32* %arrayidx11 to i8*
  call void @writel.476(i32 %4, i8* %5)
  %data12 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 4
  %idxprom13 = sext i32 %i.0 to i64
  %arrayidx14 = getelementptr inbounds [16 x i32], [16 x i32]* %data12, i64 0, i64 %idxprom13
  %6 = bitcast i32* %arrayidx14 to i8*
  %call15 = call i32 @readl.471(i8* %6)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

do.body18:                                        ; preds = %for.cond
  %flags = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 0
  %7 = bitcast i32* %flags to i8*
  call void @writel.476(i32 3, i8* %7)
  %flags19 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %mbox, i32 0, i32 0
  %8 = bitcast i32* %flags19 to i8*
  %call20 = call i32 @readl.471(i8* %8)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.470(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !699
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.471(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !700
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define internal void @clear_all_mailboxes(%struct.ivtv.1060* %itv, %struct.ivtv_mailbox_data* %mbdata) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %do.body7, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %do.body7 ]
  %max_mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 2
  %0 = load i8, i8* %max_mbox, align 8, !tbaa !697
  %conv = zext i8 %0 to i32
  %cmp = icmp sle i32 %i.0, %conv
  br i1 %cmp, label %do.body, label %for.end

do.body:                                          ; preds = %for.cond
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.body7

if.then:                                          ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %2 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !698
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %2, i64 %idxprom
  %cmd = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx, i32 0, i32 1
  %3 = bitcast i32* %cmd to i8*
  %call = call i32 @readl.471(i8* %3)
  %mbox2 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %4 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox2, align 8, !tbaa !698
  %idxprom3 = sext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %4, i64 %idxprom3
  %flags = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx4, i32 0, i32 0
  %5 = bitcast i32* %flags to i8*
  %call5 = call i32 @readl.471(i8* %5)
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.92.478, i32 0, i32 0), i8* %arraydecay, i32 %i.0, i32 %call, i32 %call5)
  br label %do.body7

do.body7:                                         ; preds = %if.then, %do.body
  %mbox8 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %6 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox8, align 8, !tbaa !698
  %idxprom9 = sext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %6, i64 %idxprom9
  %flags11 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx10, i32 0, i32 0
  %7 = bitcast i32* %flags11 to i8*
  call void @writel.476(i32 0, i8* %7)
  %mbox12 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %8 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox12, align 8, !tbaa !698
  %idxprom13 = sext i32 %i.0 to i64
  %arrayidx14 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %8, i64 %idxprom13
  %flags15 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx14, i32 0, i32 0
  %9 = bitcast i32* %flags15 to i8*
  %call16 = call i32 @readl.471(i8* %9)
  %conv19 = sext i32 %i.0 to i64
  %busy = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 1
  call void @clear_bit.470(i64 %conv19, i64* %busy)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @get_mailbox(%struct.ivtv_mailbox_data* %mbdata, i32 %flags) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %__dummy17 = alloca i64, align 8
  %__dummy218 = alloca i64, align 8
  %0 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %max_mbox1 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 2
  %1 = load i8, i8* %max_mbox1, align 8, !tbaa !697
  %conv = zext i8 %1 to i32
  %and = and i32 %flags, 6
  %cmp = icmp eq i32 %and, 2
  %.conv = select i1 %cmp, i32 1, i32 %conv
  br label %for.cond

for.cond:                                         ; preds = %for.inc31, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc32, %for.inc31 ]
  %cmp3 = icmp slt i32 %i.0, 100
  br i1 %cmp3, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %for.body
  %mb.0 = phi i32 [ 1, %for.body ], [ %inc, %for.inc ]
  %cmp6 = icmp sle i32 %mb.0, %.conv
  br i1 %cmp6, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond5
  %call = call i32 @try_mailbox(%struct.ivtv_mailbox_data* %mbdata, i32 %mb.0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body8
  %inc = add nsw i32 %mb.0, 1
  br label %for.cond5

for.end:                                          ; preds = %for.cond5
  %and11 = and i32 %flags, 16
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %for.inc31, label %if.then13

if.then13:                                        ; preds = %for.end
  %2 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cmp14 = icmp eq i64* %__dummy, %__dummy2
  %conv15 = zext i1 %cmp14 to i32
  %4 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %tobool16 = icmp ne i32 1, 0
  br i1 %tobool16, label %land.lhs.true, label %if.end28

land.lhs.true:                                    ; preds = %if.then13
  %6 = bitcast i64* %__dummy17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #8
  %7 = bitcast i64* %__dummy218 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #8
  %cmp19 = icmp eq i64* %__dummy17, %__dummy218
  %conv20 = zext i1 %cmp19 to i32
  %8 = bitcast i64* %__dummy218 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #8
  %9 = bitcast i64* %__dummy17 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %mul = mul nsw i32 10, 100
  %call24 = call i64 @msecs_to_jiffies.466(i32 %mul)
  %add = add i64 %0, %call24
  %10 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub = sub i64 %add, %10
  %cmp25 = icmp slt i64 %sub, 0
  br i1 %cmp25, label %cleanup, label %if.end28

if.end28:                                         ; preds = %land.lhs.true, %if.then13
  %call29 = call i32 @ivtv_msleep_timeout(i32 10, i32 0)
  br label %for.inc31

for.inc31:                                        ; preds = %if.end28, %for.end
  %inc32 = add nsw i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %land.lhs.true, %for.body8, %for.cond
  %retval.0 = phi i32 [ %mb.0, %for.body8 ], [ -19, %for.cond ], [ -19, %land.lhs.true ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.476(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !701
  ret void
}

declare void @__const_udelay(i64) #2

declare i32 @jiffies_to_msecs(i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit.479(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !702
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_api_func(i8* %priv, i32 %cmd, i32 %in, i32 %out, i32* %data) #0 {
entry:
  %0 = bitcast i8* %priv to %struct.ivtv.1060*
  %call = call i32 @ivtv_api(%struct.ivtv.1060* %0, i32 %cmd, i32 %in, i32* %data)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_vapi_result(%struct.ivtv.1060* %itv, i32* %data, i32 %cmd, i32 %args, ...) #0 {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %0) #8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  br label %for.cond

for.cond:                                         ; preds = %vaarg.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %vaarg.end ]
  %cmp = icmp slt i32 %i.0, %args
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0
  %gp_offset = load i32, i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ule i32 %gp_offset, 40
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %for.body
  %1 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3
  %reg_save_area = load i8*, i8** %1, align 16
  %2 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset
  %3 = bitcast i8* %2 to i32*
  %4 = add i32 %gp_offset, 8
  store i32 %4, i32* %gp_offset_p, align 16
  br label %vaarg.end

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8
  %5 = bitcast i8* %overflow_arg_area to i32*
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %3, %vaarg.in_reg ], [ %5, %vaarg.in_mem ]
  %6 = load i32, i32* %vaarg.addr, align 4
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %data, i64 %idxprom
  store i32 %6, i32* %arrayidx, align 4, !tbaa !120
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay2 to i8*
  call void @llvm.va_end(i8* %arraydecay34)
  %call = call i32 @ivtv_api(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %data)
  %7 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %7) #8
  ret i32 %call
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

; Function Attrs: nounwind uwtable
define i32 @ivtv_vapi(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, ...) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %ap = alloca [1 x %struct.__va_list_tag], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %1 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %1) #8
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*
  call void @llvm.va_start(i8* %arraydecay1)
  br label %for.cond

for.cond:                                         ; preds = %vaarg.end, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %vaarg.end ]
  %cmp = icmp slt i32 %i.0, %args
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %ap, i32 0, i32 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %gp_offset_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 0
  %gp_offset = load i32, i32* %gp_offset_p, align 16
  %fits_in_gp = icmp ule i32 %gp_offset, 40
  br i1 %fits_in_gp, label %vaarg.in_reg, label %vaarg.in_mem

vaarg.in_reg:                                     ; preds = %for.body
  %2 = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 3
  %reg_save_area = load i8*, i8** %2, align 16
  %3 = getelementptr i8, i8* %reg_save_area, i32 %gp_offset
  %4 = bitcast i8* %3 to i32*
  %5 = add i32 %gp_offset, 8
  store i32 %5, i32* %gp_offset_p, align 16
  br label %vaarg.end

vaarg.in_mem:                                     ; preds = %for.body
  %overflow_arg_area_p = getelementptr inbounds %struct.__va_list_tag, %struct.__va_list_tag* %arraydecay2, i32 0, i32 2
  %overflow_arg_area = load i8*, i8** %overflow_arg_area_p, align 8
  %6 = bitcast i8* %overflow_arg_area to i32*
  %overflow_arg_area.next = getelementptr i8, i8* %overflow_arg_area, i32 8
  store i8* %overflow_arg_area.next, i8** %overflow_arg_area_p, align 8
  br label %vaarg.end

vaarg.end:                                        ; preds = %vaarg.in_mem, %vaarg.in_reg
  %vaarg.addr = phi i32* [ %4, %vaarg.in_reg ], [ %6, %vaarg.in_mem ]
  %7 = load i32, i32* %vaarg.addr, align 4
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 %idxprom
  store i32 %7, i32* %arrayidx, align 4, !tbaa !120
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay2 to i8*
  call void @llvm.va_end(i8* %arraydecay34)
  %arraydecay5 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call = call i32 @ivtv_api(%struct.ivtv.1060* %itv, i32 %cmd, i32 %args, i32* %arraydecay5)
  %8 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %8) #8
  %9 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %9) #8
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @ivtv_api_get_data(%struct.ivtv_mailbox_data* %mbdata, i32 %mb, i32 %argc, i32* %data) #0 {
entry:
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %mbdata, i32 0, i32 0
  %0 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !698
  %idxprom = sext i32 %mb to i64
  %arrayidx = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %0, i64 %idxprom
  %data1 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx, i32 0, i32 4
  %arraydecay = getelementptr inbounds [16 x i32], [16 x i32]* %data1, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %p.0 = phi i32* [ %arraydecay, %entry ], [ %incdec.ptr, %for.body ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %cmp = icmp slt i32 %i.0, %argc
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %1 = bitcast i32* %p.0 to i8*
  %call = call i32 @readl.471(i8* %1)
  %idxprom2 = sext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds i32, i32* %data, i64 %idxprom2
  store i32 %call, i32* %arrayidx3, align 4, !tbaa !120
  %inc = add nsw i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds i32, i32* %p.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_mailbox_cache_invalidate(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %cmp = icmp slt i32 %i.0, 256
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %api_cache = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 68
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [256 x %struct.ivtv_api_cache], [256 x %struct.ivtv_api_cache]* %api_cache, i64 0, i64 %idxprom
  %last_jiffies = getelementptr inbounds %struct.ivtv_api_cache, %struct.ivtv_api_cache* %arrayidx, i32 0, i32 0
  store i64 0, i64* %last_jiffies, align 8, !tbaa !695
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_buf_copy_from_user(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %buf, i8* %src, i32 %copybytes) #0 {
entry:
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %0 = load i32, i32* %buf_size, align 8, !tbaa !403
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %1 = load i32, i32* %bytesused, align 8, !tbaa !363
  %sub = sub i32 %0, %1
  %cmp = icmp ult i32 %sub, %copybytes
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %buf_size1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %2 = load i32, i32* %buf_size1, align 8, !tbaa !403
  %bytesused2 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %3 = load i32, i32* %bytesused2, align 8, !tbaa !363
  %sub3 = sub i32 %2, %3
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %copybytes.addr.0 = phi i32 [ %sub3, %if.then ], [ %copybytes, %entry ]
  %buf4 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %4 = load i8*, i8** %buf4, align 8, !tbaa !370
  %bytesused5 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %5 = load i32, i32* %bytesused5, align 8, !tbaa !363
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr inbounds i8, i8* %4, i64 %idx.ext
  %conv = sext i32 %copybytes.addr.0 to i64
  %call = call i64 @copy_from_user(i8* %add.ptr, i8* %src, i64 %conv)
  %tobool = icmp ne i64 %call, 0
  br i1 %tobool, label %return, label %if.end7

if.end7:                                          ; preds = %if.end
  %bytesused8 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %6 = load i32, i32* %bytesused8, align 8, !tbaa !363
  %add = add i32 %6, %copybytes.addr.0
  store i32 %add, i32* %bytesused8, align 8, !tbaa !363
  br label %return

return:                                           ; preds = %if.end7, %if.end
  %retval.0 = phi i32 [ %copybytes.addr.0, %if.end7 ], [ -14, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_from_user(i8* %to, i8* %from, i64 %n) #1 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %to, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  call void @__might_fault(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 696)
  %conv1 = trunc i64 %n to i32
  call void @kasan_check_write(i8* %to, i32 %conv1)
  %cmp = icmp slt i32 %conv, 0
  %conv3 = sext i32 %conv to i64
  %cmp4 = icmp uge i64 %conv3, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp4
  %lnot = xor i1 %1, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @check_object_size.577(i8* %to, i64 %n, i1 zeroext false)
  %conv8 = trunc i64 %n to i32
  %call = call i64 @_copy_from_user(i8* %to, i8* %from, i32 %conv8)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @copy_user_overflow.578(i32 %conv, i64 %n)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.else ]
  ret i64 %n.addr.0
}

declare void @kasan_check_write(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_object_size.577(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 {
entry:
  %frombool = zext i1 %to_user to i8
  %tobool = trunc i8 %frombool to i1
  call void @__check_object_size(i8* %ptr, i64 %n, i1 zeroext %tobool)
  ret void
}

declare i64 @_copy_from_user(i8*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_user_overflow.578(i32 %size, i64 %count) #4 {
entry:
  %tobool = icmp ne i32 1, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 688, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.739, i32 0, i32 0), i32 %size, i64 %count)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool3 = icmp ne i32 1, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_buf_swap(%struct.ivtv_buffer* %buf) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %add, %for.body ]
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %0 = load i32, i32* %bytesused, align 8, !tbaa !363
  %cmp = icmp ult i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %buf1 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %1 = load i8*, i8** %buf1, align 8, !tbaa !370
  %idx.ext = sext i32 %i.0 to i64
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 %idx.ext
  %2 = bitcast i8* %add.ptr to i32*
  call void @__swab32s(i32* %2)
  %add = add nsw i32 %i.0, 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__swab32s(i32* %p) #1 {
entry:
  %call = call i32 @__swab32p(i32* %p)
  store i32 %call, i32* %p, align 4, !tbaa !120
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__swab32p(i32* %p) #1 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !120
  %call = call i32 @__fswab32(i32 %0) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @__fswab32(i32 %val) #9 {
entry:
  %call = call i32 @__arch_swab32(i32 %val) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @__arch_swab32(i32 %val) #9 {
entry:
  %0 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %val) #5, !srcloc !703
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define void @ivtv_queue_init(%struct.ivtv_queue* %q) #0 {
entry:
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 0
  call void @INIT_LIST_HEAD.584(%struct.list_head* %list)
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 1
  store i32 0, i32* %buffers, align 8, !tbaa !400
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 2
  store i32 0, i32* %length, align 4, !tbaa !398
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 3
  store i32 0, i32* %bytesused, align 8, !tbaa !399
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD.584(%struct.list_head* %list) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  store %struct.list_head* %list, %struct.list_head** %__val, align 8, !tbaa !142
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.585(i8* %1, i8* %arraydecay, i32 8)
  %__val1 = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val1, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !186
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.585(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load i8, i8* %res, align 1, !tbaa !142
  store volatile i8 %0, i8* %p, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !704
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !705
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_enqueue(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %buf, %struct.ivtv_queue* %q) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %cmp = icmp eq %struct.ivtv_queue* %q, %q_free
  br i1 %cmp, label %if.then, label %do.body1

if.then:                                          ; preds = %entry
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  store i32 0, i32* %bytesused, align 8, !tbaa !363
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  store i32 0, i32* %readpos, align 4, !tbaa !362
  %b_flags = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 2
  store i16 0, i16* %b_flags, align 8, !tbaa !368
  %dma_xfer_cnt = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 3
  store i16 0, i16* %dma_xfer_cnt, align 2, !tbaa !688
  br label %do.body1

do.body1:                                         ; preds = %if.then, %entry
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp2 = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp2 to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %qlock = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.588(%struct.spinlock* %qlock)
  %call3 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %list = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 0
  %list6 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 0
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %list6)
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 1
  %4 = load i32, i32* %buffers, align 8, !tbaa !400
  %inc = add i32 %4, 1
  store i32 %inc, i32* %buffers, align 8, !tbaa !400
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %5 = load i32, i32* %buf_size, align 8, !tbaa !403
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 2
  %6 = load i32, i32* %length, align 4, !tbaa !398
  %add = add i32 %6, %5
  store i32 %add, i32* %length, align 4, !tbaa !398
  %bytesused7 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %7 = load i32, i32* %bytesused7, align 8, !tbaa !363
  %readpos8 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 6
  %8 = load i32, i32* %readpos8, align 4, !tbaa !362
  %sub = sub i32 %7, %8
  %bytesused9 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 3
  %9 = load i32, i32* %bytesused9, align 8, !tbaa !399
  %add10 = add i32 %9, %sub
  store i32 %add10, i32* %bytesused9, align 8, !tbaa !399
  %qlock11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  call void @spin_unlock_irqrestore.589(%struct.spinlock* %qlock11, i64 %call3)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check.588(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #4 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !186
  call void @__list_add(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock_irqrestore.589(%struct.spinlock* %lock, i64 %flags) #1 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %new, %struct.list_head** %prev1, align 8, !tbaa !186
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 0
  store %struct.list_head* %next, %struct.list_head** %next2, align 8, !tbaa !185
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev3, align 8, !tbaa !186
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  store %struct.list_head* %new, %struct.list_head** %__val, align 8, !tbaa !142
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next4 to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.585(i8* %1, i8* %arraydecay, i32 8)
  %__val5 = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val5, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare zeroext i1 @__list_add_valid(%struct.list_head*, %struct.list_head*, %struct.list_head*) #2

; Function Attrs: nounwind uwtable
define %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %qlock = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.588(%struct.spinlock* %qlock)
  %call2 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 0
  %call5 = call i32 @list_empty.592(%struct.list_head* %list)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %list6 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 0
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list6, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !706
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 0
  %6 = bitcast i8* %add.ptr to %struct.ivtv_buffer*
  %list8 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 0
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %next9, align 8, !tbaa !706
  call void @list_del_init(%struct.list_head* %7)
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 1
  %8 = load i32, i32* %buffers, align 8, !tbaa !400
  %dec = add i32 %8, -1
  store i32 %dec, i32* %buffers, align 8, !tbaa !400
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %9 = load i32, i32* %buf_size, align 8, !tbaa !403
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 2
  %10 = load i32, i32* %length, align 4, !tbaa !398
  %sub = sub i32 %10, %9
  store i32 %sub, i32* %length, align 4, !tbaa !398
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %6, i32 0, i32 5
  %11 = load i32, i32* %bytesused, align 8, !tbaa !363
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %6, i32 0, i32 6
  %12 = load i32, i32* %readpos, align 4, !tbaa !362
  %sub10 = sub i32 %11, %12
  %bytesused11 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q, i32 0, i32 3
  %13 = load i32, i32* %bytesused11, align 8, !tbaa !399
  %sub12 = sub i32 %13, %sub10
  store i32 %sub12, i32* %bytesused11, align 8, !tbaa !399
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %buf.0 = phi %struct.ivtv_buffer* [ null, %entry ], [ %6, %if.then ]
  %qlock13 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  call void @spin_unlock_irqrestore.589(%struct.spinlock* %qlock13, i64 %call2)
  ret %struct.ivtv_buffer* %buf.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.592(%struct.list_head* %head) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.593(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_del_init(%struct.list_head* %entry1) #4 {
entry:
  call void @__list_del_entry(%struct.list_head* %entry1)
  call void @INIT_LIST_HEAD.584(%struct.list_head* %entry1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del_entry(%struct.list_head* %entry1) #4 {
entry:
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !186
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !185
  call void @__list_del(%struct.list_head* %0, %struct.list_head* %1)
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare zeroext i1 @__list_del_entry_valid(%struct.list_head*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #4 {
entry:
  %__u = alloca %union.anon.107, align 8
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev1, align 8, !tbaa !186
  %0 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.107* %__u to %struct.list_head**
  store %struct.list_head* %next, %struct.list_head** %__val, align 8, !tbaa !142
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next2 to i8*
  %__c = bitcast %union.anon.107* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.585(i8* %1, i8* %arraydecay, i32 8)
  %__val3 = bitcast %union.anon.107* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val3, align 8, !tbaa !142
  %3 = bitcast %union.anon.107* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.593(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !707
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !708
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %from, %struct.ivtv_queue* %steal, %struct.ivtv_queue* %to, i32 %needed_bytes) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %cmp = icmp eq %struct.ivtv_queue* %from, %q_free
  %conv = zext i1 %cmp to i32
  %q_free1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %cmp2 = icmp eq %struct.ivtv_queue* %to, %q_free1
  %conv3 = zext i1 %cmp2 to i32
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp5 = icmp eq i64* %__dummy, %__dummy2
  %conv6 = zext i1 %cmp5 to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %qlock = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.588(%struct.spinlock* %qlock)
  %call7 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %cmp10 = icmp eq i32 %needed_bytes, 0
  br i1 %cmp10, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 2
  %4 = load i32, i32* %length, align 4, !tbaa !398
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %needed_bytes.addr.0 = phi i32 [ %4, %if.then ], [ %needed_bytes, %entry ]
  %from_free.0 = phi i32 [ 1, %if.then ], [ %conv, %entry ]
  %tobool = icmp ne i32 %from_free.0, 0
  br i1 %tobool, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end
  %length12 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 2
  %5 = load i32, i32* %length12, align 4, !tbaa !398
  br label %cond.end

cond.false:                                       ; preds = %if.end
  %bytesused = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 3
  %6 = load i32, i32* %bytesused, align 8, !tbaa !399
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %5, %cond.true ], [ %6, %cond.false ]
  %tobool13 = icmp ne i32 %from_free.0, 0
  %tobool14 = icmp ne %struct.ivtv_queue* %steal, null
  %or.cond = and i1 %tobool13, %tobool14
  br i1 %or.cond, label %cond.true15, label %cond.end18

cond.true15:                                      ; preds = %cond.end
  %length16 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 2
  %7 = load i32, i32* %length16, align 4, !tbaa !398
  br label %cond.end18

cond.end18:                                       ; preds = %cond.true15, %cond.end
  %cond19 = phi i32 [ %7, %cond.true15 ], [ 0, %cond.end ]
  %add = add nsw i32 %cond, %cond19
  %cmp20 = icmp slt i32 %add, %needed_bytes.addr.0
  br i1 %cmp20, label %if.then22, label %if.end24

if.then22:                                        ; preds = %cond.end18
  %qlock23 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  call void @spin_unlock_irqrestore.589(%struct.spinlock* %qlock23, i64 %call7)
  br label %cleanup

if.end24:                                         ; preds = %cond.end18
  br label %while.cond

while.cond:                                       ; preds = %while.end, %if.end24
  %rc.0 = phi i32 [ 0, %if.end24 ], [ %rc.2, %while.end ]
  %bytes_available.0 = phi i32 [ %cond, %if.end24 ], [ %bytes_available.2, %while.end ]
  %tobool25 = icmp ne %struct.ivtv_queue* %steal, null
  %cmp26 = icmp slt i32 %bytes_available.0, %needed_bytes.addr.0
  %cmp26. = select i1 %tobool25, i1 %cmp26, i1 false
  br i1 %cmp26., label %while.body, label %while.end65

while.body:                                       ; preds = %while.cond
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 0
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  %8 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !709
  %9 = bitcast %struct.list_head* %8 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %9, i64 0
  %10 = bitcast i8* %add.ptr to %struct.ivtv_buffer*
  %dma_xfer_cnt29 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %10, i32 0, i32 3
  %11 = load i16, i16* %dma_xfer_cnt29, align 2, !tbaa !688
  br label %while.cond30

while.cond30:                                     ; preds = %if.end59, %while.body
  %rc.1 = phi i32 [ %rc.0, %while.body ], [ %inc, %if.end59 ]
  %bytes_available.1 = phi i32 [ %bytes_available.0, %while.body ], [ %add54, %if.end59 ]
  %buf.0 = phi %struct.ivtv_buffer* [ %10, %while.body ], [ %26, %if.end59 ]
  %conv31 = zext i16 %11 to i32
  %dma_xfer_cnt32 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 3
  %12 = load i16, i16* %dma_xfer_cnt32, align 2, !tbaa !688
  %conv33 = zext i16 %12 to i32
  %cmp34 = icmp eq i32 %conv31, %conv33
  br i1 %cmp34, label %while.body36, label %while.end

while.body36:                                     ; preds = %while.cond30
  %list37 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 0
  %prev38 = getelementptr inbounds %struct.list_head, %struct.list_head* %list37, i32 0, i32 1
  %13 = load %struct.list_head*, %struct.list_head** %prev38, align 8, !tbaa !709
  %list39 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 0
  call void @list_move_tail(%struct.list_head* %13, %struct.list_head* %list39)
  %inc = add nsw i32 %rc.1, 1
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 1
  %14 = load i32, i32* %buffers, align 8, !tbaa !400
  %dec = add i32 %14, -1
  store i32 %dec, i32* %buffers, align 8, !tbaa !400
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %15 = load i32, i32* %buf_size, align 8, !tbaa !403
  %length40 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 2
  %16 = load i32, i32* %length40, align 4, !tbaa !398
  %sub = sub i32 %16, %15
  store i32 %sub, i32* %length40, align 4, !tbaa !398
  %bytesused41 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 5
  %17 = load i32, i32* %bytesused41, align 8, !tbaa !363
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 6
  %18 = load i32, i32* %readpos, align 4, !tbaa !362
  %sub42 = sub i32 %17, %18
  %bytesused43 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 3
  %19 = load i32, i32* %bytesused43, align 8, !tbaa !399
  %sub44 = sub i32 %19, %sub42
  store i32 %sub44, i32* %bytesused43, align 8, !tbaa !399
  %dma_xfer_cnt45 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 3
  store i16 0, i16* %dma_xfer_cnt45, align 2, !tbaa !688
  %b_flags = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 2
  store i16 0, i16* %b_flags, align 8, !tbaa !368
  %readpos46 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 6
  store i32 0, i32* %readpos46, align 4, !tbaa !362
  %bytesused47 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf.0, i32 0, i32 5
  store i32 0, i32* %bytesused47, align 8, !tbaa !363
  %buffers48 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 1
  %20 = load i32, i32* %buffers48, align 8, !tbaa !400
  %inc49 = add i32 %20, 1
  store i32 %inc49, i32* %buffers48, align 8, !tbaa !400
  %buf_size50 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %21 = load i32, i32* %buf_size50, align 8, !tbaa !403
  %length51 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 2
  %22 = load i32, i32* %length51, align 4, !tbaa !398
  %add52 = add i32 %22, %21
  store i32 %add52, i32* %length51, align 4, !tbaa !398
  %buf_size53 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %23 = load i32, i32* %buf_size53, align 8, !tbaa !403
  %add54 = add i32 %bytes_available.1, %23
  %list55 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 0
  %call56 = call i32 @list_empty.592(%struct.list_head* %list55)
  %tobool57 = icmp ne i32 %call56, 0
  br i1 %tobool57, label %while.end, label %if.end59

if.end59:                                         ; preds = %while.body36
  %list61 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %steal, i32 0, i32 0
  %prev62 = getelementptr inbounds %struct.list_head, %struct.list_head* %list61, i32 0, i32 1
  %24 = load %struct.list_head*, %struct.list_head** %prev62, align 8, !tbaa !709
  %25 = bitcast %struct.list_head* %24 to i8*
  %add.ptr64 = getelementptr inbounds i8, i8* %25, i64 0
  %26 = bitcast i8* %add.ptr64 to %struct.ivtv_buffer*
  br label %while.cond30

while.end:                                        ; preds = %while.body36, %while.cond30
  %rc.2 = phi i32 [ %inc, %while.body36 ], [ %rc.1, %while.cond30 ]
  %bytes_available.2 = phi i32 [ %add54, %while.body36 ], [ %bytes_available.1, %while.cond30 ]
  br label %while.cond

while.end65:                                      ; preds = %while.cond
  %tobool66 = icmp ne i32 %from_free.0, 0
  br i1 %tobool66, label %if.then67, label %if.else

if.then67:                                        ; preds = %while.end65
  %length68 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 2
  %27 = load i32, i32* %length68, align 4, !tbaa !398
  br label %while.cond69

while.cond69:                                     ; preds = %while.body74, %if.then67
  %length70 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 2
  %28 = load i32, i32* %length70, align 4, !tbaa !398
  %sub71 = sub i32 %28, %27
  %cmp72 = icmp ult i32 %sub71, %needed_bytes.addr.0
  br i1 %cmp72, label %while.body74, label %if.end84

while.body74:                                     ; preds = %while.cond69
  call void @ivtv_queue_move_buf(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %from, %struct.ivtv_queue* %to, i32 1)
  br label %while.cond69

if.else:                                          ; preds = %while.end65
  %bytesused76 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 3
  %29 = load i32, i32* %bytesused76, align 8, !tbaa !399
  br label %while.cond77

while.cond77:                                     ; preds = %while.body82, %if.else
  %bytesused78 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 3
  %30 = load i32, i32* %bytesused78, align 8, !tbaa !399
  %sub79 = sub i32 %30, %29
  %cmp80 = icmp ult i32 %sub79, %needed_bytes.addr.0
  br i1 %cmp80, label %while.body82, label %if.end84

while.body82:                                     ; preds = %while.cond77
  call void @ivtv_queue_move_buf(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %from, %struct.ivtv_queue* %to, i32 %conv3)
  br label %while.cond77

if.end84:                                         ; preds = %while.cond77, %while.cond69
  %qlock85 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 6
  call void @spin_unlock_irqrestore.589(%struct.spinlock* %qlock85, i64 %call7)
  br label %cleanup

cleanup:                                          ; preds = %if.end84, %if.then22
  %retval.0 = phi i32 [ -12, %if.then22 ], [ %rc.0, %if.end84 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_move_tail(%struct.list_head* %list, %struct.list_head* %head) #4 {
entry:
  call void @__list_del_entry(%struct.list_head* %list)
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %head)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_queue_move_buf(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %from, %struct.ivtv_queue* %to, i32 %clear) #0 {
entry:
  %list = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 0
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !706
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.ivtv_buffer*
  %list1 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 0
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %list1, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next2, align 8, !tbaa !706
  %list3 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 0
  call void @list_move_tail(%struct.list_head* %3, %struct.list_head* %list3)
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 1
  %4 = load i32, i32* %buffers, align 8, !tbaa !400
  %dec = add i32 %4, -1
  store i32 %dec, i32* %buffers, align 8, !tbaa !400
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %5 = load i32, i32* %buf_size, align 8, !tbaa !403
  %length = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 2
  %6 = load i32, i32* %length, align 4, !tbaa !398
  %sub = sub i32 %6, %5
  store i32 %sub, i32* %length, align 4, !tbaa !398
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 5
  %7 = load i32, i32* %bytesused, align 8, !tbaa !363
  %readpos = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 6
  %8 = load i32, i32* %readpos, align 4, !tbaa !362
  %sub4 = sub i32 %7, %8
  %bytesused5 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %from, i32 0, i32 3
  %9 = load i32, i32* %bytesused5, align 8, !tbaa !399
  %sub6 = sub i32 %9, %sub4
  store i32 %sub6, i32* %bytesused5, align 8, !tbaa !399
  %tobool = icmp ne i32 %clear, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %dma_xfer_cnt = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 3
  store i16 0, i16* %dma_xfer_cnt, align 2, !tbaa !688
  %b_flags = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 2
  store i16 0, i16* %b_flags, align 8, !tbaa !368
  %readpos7 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 6
  store i32 0, i32* %readpos7, align 4, !tbaa !362
  %bytesused8 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 5
  store i32 0, i32* %bytesused8, align 8, !tbaa !363
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %buffers9 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 1
  %10 = load i32, i32* %buffers9, align 8, !tbaa !400
  %inc = add i32 %10, 1
  store i32 %inc, i32* %buffers9, align 8, !tbaa !400
  %buf_size10 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %11 = load i32, i32* %buf_size10, align 8, !tbaa !403
  %length11 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 2
  %12 = load i32, i32* %length11, align 4, !tbaa !398
  %add = add i32 %12, %11
  store i32 %add, i32* %length11, align 4, !tbaa !398
  %bytesused12 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 5
  %13 = load i32, i32* %bytesused12, align 8, !tbaa !363
  %readpos13 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %2, i32 0, i32 6
  %14 = load i32, i32* %readpos13, align 4, !tbaa !362
  %sub14 = sub i32 %13, %14
  %bytesused15 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %to, i32 0, i32 3
  %15 = load i32, i32* %bytesused15, align 8, !tbaa !399
  %add16 = add i32 %15, %sub14
  store i32 %add16, i32* %bytesused15, align 8, !tbaa !399
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_flush_queues(%struct.ivtv_stream.1071* %s) #0 {
entry:
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 23
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %call = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_io, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free, i32 0)
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 22
  %q_free1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %call2 = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_full, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free1, i32 0)
  %q_dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 24
  %q_free3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %call4 = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_dma, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free3, i32 0)
  %q_predma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 25
  %q_free5 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %call6 = call i32 @ivtv_queue_move(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_predma, %struct.ivtv_queue* null, %struct.ivtv_queue* %q_free5, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_stream_alloc(%struct.ivtv_stream.1071* %s) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %buffers = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %1 = load i32, i32* %buffers, align 4, !tbaa !605
  %conv = zext i32 %1 to i64
  %mul = mul i64 12, %conv
  %conv2 = trunc i64 %mul to i32
  %buffers3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %2 = load i32, i32* %buffers3, align 4, !tbaa !605
  %cmp = icmp eq i32 %2, 0
  br i1 %cmp, label %cleanup100, label %do.body

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then5, label %do.end

if.then5:                                         ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %4 = load i32, i32* %dma, align 8, !tbaa !633
  %cmp6 = icmp ne i32 %4, 3
  %5 = zext i1 %cmp6 to i64
  %cond = select i1 %cmp6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1.598, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2.599, i32 0, i32 0)
  %name8 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %6 = load i8*, i8** %name8, align 8, !tbaa !349
  %buffers9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %7 = load i32, i32* %buffers9, align 4, !tbaa !605
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %8 = load i32, i32* %buf_size, align 8, !tbaa !403
  %buffers10 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %9 = load i32, i32* %buffers10, align 4, !tbaa !605
  %buf_size11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %10 = load i32, i32* %buf_size11, align 8, !tbaa !403
  %mul12 = mul i32 %9, %10
  %div = udiv i32 %mul12, 1024
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.600, i32 0, i32 0), i8* %arraydecay, i8* %cond, i8* %6, i32 %7, i32 %8, i32 %div)
  br label %do.end

do.end:                                           ; preds = %if.then5, %do.body
  %conv14 = sext i32 %conv2 to i64
  %call15 = call i8* @kzalloc.601(i64 %conv14, i32 20972224)
  %11 = bitcast i8* %call15 to %struct.exception_table_entry*
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  store %struct.exception_table_entry* %11, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %sg_pending16 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  %12 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending16, align 8, !tbaa !640
  %cmp17 = icmp eq %struct.exception_table_entry* %12, null
  br i1 %cmp17, label %if.then19, label %if.end25

if.then19:                                        ; preds = %do.end
  %v4l2_dev20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name21 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev20, i32 0, i32 4
  %arraydecay22 = getelementptr inbounds [36 x i8], [36 x i8]* %name21, i32 0, i32 0
  %name23 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %13 = load i8*, i8** %name23, align 8, !tbaa !349
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.3.602, i32 0, i32 0), i8* %arraydecay22, i8* %13)
  br label %cleanup100

if.end25:                                         ; preds = %do.end
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 31
  store i32 0, i32* %sg_pending_size, align 8, !tbaa !643
  %conv26 = sext i32 %conv2 to i64
  %call27 = call i8* @kzalloc.601(i64 %conv26, i32 20972224)
  %14 = bitcast i8* %call27 to %struct.exception_table_entry*
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  store %struct.exception_table_entry* %14, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %sg_processing28 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  %15 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing28, align 8, !tbaa !626
  %cmp29 = icmp eq %struct.exception_table_entry* %15, null
  br i1 %cmp29, label %if.then31, label %if.end39

if.then31:                                        ; preds = %if.end25
  %v4l2_dev32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name33 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev32, i32 0, i32 4
  %arraydecay34 = getelementptr inbounds [36 x i8], [36 x i8]* %name33, i32 0, i32 0
  %name35 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %16 = load i8*, i8** %name35, align 8, !tbaa !349
  %call36 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.4.603, i32 0, i32 0), i8* %arraydecay34, i8* %16)
  %sg_pending37 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  %17 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending37, align 8, !tbaa !640
  %18 = bitcast %struct.exception_table_entry* %17 to i8*
  call void @kfree(i8* %18)
  %sg_pending38 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_pending38, align 8, !tbaa !640
  br label %cleanup100

if.end39:                                         ; preds = %if.end25
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 32
  store i32 0, i32* %sg_processing_size, align 4, !tbaa !630
  %call40 = call i8* @kzalloc.601(i64 12, i32 20972224)
  %19 = bitcast i8* %call40 to %struct.exception_table_entry*
  %sg_dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  store %struct.exception_table_entry* %19, %struct.exception_table_entry** %sg_dma, align 8, !tbaa !649
  %sg_dma41 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  %20 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma41, align 8, !tbaa !649
  %cmp42 = icmp eq %struct.exception_table_entry* %20, null
  br i1 %cmp42, label %if.then44, label %if.end54

if.then44:                                        ; preds = %if.end39
  %v4l2_dev45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name46 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev45, i32 0, i32 4
  %arraydecay47 = getelementptr inbounds [36 x i8], [36 x i8]* %name46, i32 0, i32 0
  %name48 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %21 = load i8*, i8** %name48, align 8, !tbaa !349
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.5.604, i32 0, i32 0), i8* %arraydecay47, i8* %21)
  %sg_pending50 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  %22 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending50, align 8, !tbaa !640
  %23 = bitcast %struct.exception_table_entry* %22 to i8*
  call void @kfree(i8* %23)
  %sg_pending51 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_pending51, align 8, !tbaa !640
  %sg_processing52 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  %24 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing52, align 8, !tbaa !626
  %25 = bitcast %struct.exception_table_entry* %24 to i8*
  call void @kfree(i8* %25)
  %sg_processing53 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_processing53, align 8, !tbaa !626
  br label %cleanup100

if.end54:                                         ; preds = %if.end39
  %call55 = call i32 @ivtv_might_use_dma(%struct.ivtv_stream.1071* %s)
  %tobool56 = icmp ne i32 %call55, 0
  br i1 %tobool56, label %if.then57, label %if.end60

if.then57:                                        ; preds = %if.end54
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %26 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %sg_dma58 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  %27 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma58, align 8, !tbaa !649
  %28 = bitcast %struct.exception_table_entry* %27 to i8*
  %call59 = call i64 @pci_map_single(%struct.pci_dev* %26, i8* %28, i64 12, i32 1)
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 30
  store i64 %call59, i64* %sg_handle, align 8, !tbaa !644
  call void @ivtv_stream_sync_for_cpu.605(%struct.ivtv_stream.1071* %s)
  br label %if.end60

if.end60:                                         ; preds = %if.then57, %if.end54
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end60
  %i.0 = phi i32 [ 0, %if.end60 ], [ %inc, %for.inc ]
  %buffers61 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %29 = load i32, i32* %buffers61, align 4, !tbaa !605
  %cmp62 = icmp ult i32 %i.0, %29
  br i1 %cmp62, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call64 = call i8* @kzalloc.601(i64 48, i32 20972224)
  %30 = bitcast i8* %call64 to %struct.ivtv_buffer*
  %cmp65 = icmp eq %struct.ivtv_buffer* %30, null
  br i1 %cmp65, label %LeafBlock, label %if.end68

if.end68:                                         ; preds = %for.body
  %buf_size69 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %31 = load i32, i32* %buf_size69, align 8, !tbaa !403
  %add = add i32 %31, 256
  %conv70 = zext i32 %add to i64
  %call71 = call i8* @kmalloc.606(i64 %conv70, i32 20972224)
  %buf72 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %30, i32 0, i32 4
  store i8* %call71, i8** %buf72, align 8, !tbaa !370
  %buf73 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %30, i32 0, i32 4
  %32 = load i8*, i8** %buf73, align 8, !tbaa !370
  %cmp74 = icmp eq i8* %32, null
  br i1 %cmp74, label %if.then76, label %if.end77

if.then76:                                        ; preds = %if.end68
  %33 = bitcast %struct.ivtv_buffer* %30 to i8*
  call void @kfree(i8* %33)
  br label %LeafBlock

if.end77:                                         ; preds = %if.end68
  %list = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %30, i32 0, i32 0
  call void @INIT_LIST_HEAD.584(%struct.list_head* %list)
  %call78 = call i32 @ivtv_might_use_dma(%struct.ivtv_stream.1071* %s)
  %tobool79 = icmp ne i32 %call78, 0
  br i1 %tobool79, label %if.then80, label %if.end89

if.then80:                                        ; preds = %if.end77
  %itv81 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %34 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv81, align 8, !tbaa !340
  %pdev82 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %34, i32 0, i32 0
  %35 = load %struct.pci_dev*, %struct.pci_dev** %pdev82, align 8, !tbaa !226
  %buf83 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %30, i32 0, i32 4
  %36 = load i8*, i8** %buf83, align 8, !tbaa !370
  %buf_size84 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %37 = load i32, i32* %buf_size84, align 8, !tbaa !403
  %add85 = add i32 %37, 256
  %conv86 = zext i32 %add85 to i64
  %dma87 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %38 = load i32, i32* %dma87, align 8, !tbaa !633
  %call88 = call i64 @pci_map_single(%struct.pci_dev* %35, i8* %36, i64 %conv86, i32 %38)
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %30, i32 0, i32 1
  store i64 %call88, i64* %dma_handle, align 8, !tbaa !642
  call void @ivtv_buf_sync_for_cpu.607(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %30)
  br label %if.end89

if.end89:                                         ; preds = %if.then80, %if.end77
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  call void @ivtv_enqueue(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %30, %struct.ivtv_queue* %q_free)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end89, %if.then76, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.then76 ], [ 0, %if.end89 ], [ 4, %for.body ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  br i1 %SwitchLeaf, label %for.end, label %for.inc

for.inc:                                          ; preds = %LeafBlock
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %LeafBlock, %for.cond
  %buffers90 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 18
  %39 = load i32, i32* %buffers90, align 4, !tbaa !605
  %cmp91 = icmp eq i32 %i.0, %39
  br i1 %cmp91, label %cleanup100, label %if.end94

if.end94:                                         ; preds = %for.end
  %v4l2_dev95 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name96 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev95, i32 0, i32 4
  %arraydecay97 = getelementptr inbounds [36 x i8], [36 x i8]* %name96, i32 0, i32 0
  %name98 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %40 = load i8*, i8** %name98, align 8, !tbaa !349
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6.608, i32 0, i32 0), i8* %arraydecay97, i8* %40)
  call void @ivtv_stream_free(%struct.ivtv_stream.1071* %s)
  br label %cleanup100

cleanup100:                                       ; preds = %if.end94, %for.end, %if.then44, %if.then31, %if.then19, %entry
  %retval.0 = phi i32 [ -12, %if.then19 ], [ -12, %if.then31 ], [ -12, %if.then44 ], [ -12, %if.end94 ], [ 0, %entry ], [ 0, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.601(i64 %size, i32 %flags) #4 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.606(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_might_use_dma(%struct.ivtv_stream.1071* %s) #4 {
entry:
  %dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %0 = load i32, i32* %dma, align 8, !tbaa !633
  %cmp = icmp ne i32 %0, 3
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @pci_map_single(%struct.pci_dev* %hwdev, i8* %ptr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  %call = call i64 @dma_map_single_attrs(%struct.device* %cond, i8* %ptr, i64 %size, i32 %direction, i64 0)
  ret i64 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_stream_sync_for_cpu.605(%struct.ivtv_stream.1071* %s) #4 {
entry:
  %call = call i32 @ivtv_use_dma.613(%struct.ivtv_stream.1071* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 30
  %2 = load i64, i64* %sg_handle, align 8, !tbaa !644
  call void @pci_dma_sync_single_for_cpu.614(%struct.pci_dev* %1, i64 %2, i64 12, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.606(i64 %size, i32 %flags) #1 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_buf_sync_for_cpu.607(%struct.ivtv_stream.1071* %s, %struct.ivtv_buffer* %buf) #4 {
entry:
  %call = call i32 @ivtv_use_dma.613(%struct.ivtv_stream.1071* %s)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %itv = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 1
  %2 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %3 = load i32, i32* %buf_size, align 8, !tbaa !403
  %add = add i32 %3, 256
  %conv = zext i32 %add to i64
  %dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %4 = load i32, i32* %dma, align 8, !tbaa !633
  call void @pci_dma_sync_single_for_cpu.614(%struct.pci_dev* %1, i64 %2, i64 %conv, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_stream_free(%struct.ivtv_stream.1071* %s) #0 {
entry:
  call void @ivtv_flush_queues(%struct.ivtv_stream.1071* %s)
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 21
  %call = call %struct.ivtv_buffer* @ivtv_dequeue(%struct.ivtv_stream.1071* %s, %struct.ivtv_queue* %q_free)
  %tobool = icmp ne %struct.ivtv_buffer* %call, null
  br i1 %tobool, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call1 = call i32 @ivtv_might_use_dma(%struct.ivtv_stream.1071* %s)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %while.body
  %itv = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv, align 8, !tbaa !340
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %dma_handle = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call, i32 0, i32 1
  %2 = load i64, i64* %dma_handle, align 8, !tbaa !642
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 19
  %3 = load i32, i32* %buf_size, align 8, !tbaa !403
  %add = add i32 %3, 256
  %conv = zext i32 %add to i64
  %dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %4 = load i32, i32* %dma, align 8, !tbaa !633
  call void @pci_unmap_single(%struct.pci_dev* %1, i64 %2, i64 %conv, i32 %4)
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %buf3 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %call, i32 0, i32 4
  %5 = load i8*, i8** %buf3, align 8, !tbaa !370
  call void @kfree(i8* %5)
  %6 = bitcast %struct.ivtv_buffer* %call to i8*
  call void @kfree(i8* %6)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %sg_dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  %7 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma, align 8, !tbaa !649
  %cmp = icmp ne %struct.exception_table_entry* %7, null
  br i1 %cmp, label %if.then5, label %if.end18

if.then5:                                         ; preds = %while.end
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 30
  %8 = load i64, i64* %sg_handle, align 8, !tbaa !644
  %cmp6 = icmp ne i64 %8, 4294967295
  br i1 %cmp6, label %if.then8, label %if.end13

if.then8:                                         ; preds = %if.then5
  %itv9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %9 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv9, align 8, !tbaa !340
  %pdev10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %9, i32 0, i32 0
  %10 = load %struct.pci_dev*, %struct.pci_dev** %pdev10, align 8, !tbaa !226
  %sg_handle11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 30
  %11 = load i64, i64* %sg_handle11, align 8, !tbaa !644
  call void @pci_unmap_single(%struct.pci_dev* %10, i64 %11, i64 12, i32 1)
  %sg_handle12 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 30
  store i64 4294967295, i64* %sg_handle12, align 8, !tbaa !644
  br label %if.end13

if.end13:                                         ; preds = %if.then8, %if.then5
  %sg_pending = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  %12 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_pending, align 8, !tbaa !640
  %13 = bitcast %struct.exception_table_entry* %12 to i8*
  call void @kfree(i8* %13)
  %sg_processing = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  %14 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_processing, align 8, !tbaa !626
  %15 = bitcast %struct.exception_table_entry* %14 to i8*
  call void @kfree(i8* %15)
  %sg_dma14 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  %16 = load %struct.exception_table_entry*, %struct.exception_table_entry** %sg_dma14, align 8, !tbaa !649
  %17 = bitcast %struct.exception_table_entry* %16 to i8*
  call void @kfree(i8* %17)
  %sg_pending15 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 27
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_pending15, align 8, !tbaa !640
  %sg_processing16 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 28
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_processing16, align 8, !tbaa !626
  %sg_dma17 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 29
  store %struct.exception_table_entry* null, %struct.exception_table_entry** %sg_dma17, align 8, !tbaa !649
  %sg_pending_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 31
  store i32 0, i32* %sg_pending_size, align 8, !tbaa !643
  %sg_processing_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 32
  store i32 0, i32* %sg_processing_size, align 4, !tbaa !630
  br label %if.end18

if.end18:                                         ; preds = %if.end13, %while.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_unmap_single(%struct.pci_dev* %hwdev, i64 %dma_addr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_unmap_single_attrs(%struct.device* %cond, i64 %dma_addr, i64 %size, i32 %direction, i64 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_unmap_single_attrs(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.609(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.610(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 226, i64 12) #8, !srcloc !710
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %unmap_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %0 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page, align 8, !tbaa !711
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32, i64)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %unmap_page13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %1 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page13, align 8, !tbaa !711
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_unmap_page(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i1 zeroext true)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_dma_ops.609(%struct.device* %dev) #4 {
entry:
  %magicptr = ptrtoint %struct.device* %dev to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %dma_ops = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops, align 8, !tbaa !338
  %tobool1 = icmp ne %struct.dma_map_ops* %0, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %dma_ops2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %1 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops2, align 8, !tbaa !338
  br label %return

if.end:                                           ; preds = %land.lhs.true
  %tobool3 = icmp ne %struct.device* %dev, null
  br i1 %tobool3, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !tbaa !339
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end, %entry
  %cond = phi %struct.bus_type* [ %2, %cond.true ], [ null, %entry ], [ null, %if.end ]
  %call = call %struct.dma_map_ops* @get_arch_dma_ops.612()
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.dma_map_ops* [ %1, %if.then ], [ %call, %cond.end ]
  ret %struct.dma_map_ops* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @valid_dma_direction.610(i32 %dma_direction) #4 {
entry:
  %switch = icmp ult i32 %dma_direction, 3
  %. = select i1 %switch, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

declare void @debug_dma_unmap_page(%struct.device*, i64, i64, i32, i1 zeroext) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_arch_dma_ops.612() #4 {
entry:
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !tbaa !86
  ret %struct.dma_map_ops* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_use_dma.613(%struct.ivtv_stream.1071* %s) #4 {
entry:
  %call = call i32 @ivtv_use_pio.616(%struct.ivtv_stream.1071* %s)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  ret i32 %lnot.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_cpu.614(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_cpu.615(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_cpu.615(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.609(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.610(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 337, i64 12) #8, !srcloc !712
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_cpu = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu, align 8, !tbaa !691
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_cpu13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu13, align 8, !tbaa !691
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_cpu(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_use_pio.616(%struct.ivtv_stream.1071* %s) #4 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 8
  %1 = load i32, i32* %dma, align 8, !tbaa !633
  %cmp = icmp eq i32 %1, 3
  %. = select i1 %cmp, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @dma_map_single_attrs(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.609(%struct.device* %dev)
  %conv = trunc i64 %size to i32
  call void @kmemcheck_mark_initialized()
  %call1 = call i32 @valid_dma_direction.610(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %do.body6, label %do.end11

do.body6:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 209, i64 12) #8, !srcloc !713
  br label %do.body7

do.body7:                                         ; preds = %do.body7, %do.body6
  br label %do.body7

do.end11:                                         ; preds = %entry
  %map_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 4
  %0 = load i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)** %map_page, align 8, !tbaa !714
  %1 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %2 = inttoptr i64 %1 to %struct.page*
  %3 = ptrtoint i8* %ptr to i64
  %call12 = call i64 @__phys_addr(i64 %3)
  %shr = lshr i64 %call12, 12
  %add.ptr = getelementptr inbounds %struct.page, %struct.page* %2, i64 %shr
  %4 = ptrtoint i8* %ptr to i64
  %and = and i64 %4, 4095
  %call13 = call i64 %0(%struct.device* %dev, %struct.page* %add.ptr, i64 %and, i64 %size, i32 %dir, i64 %attrs)
  %5 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %6 = inttoptr i64 %5 to %struct.page*
  %7 = ptrtoint i8* %ptr to i64
  %call14 = call i64 @__phys_addr(i64 %7)
  %shr15 = lshr i64 %call14, 12
  %add.ptr16 = getelementptr inbounds %struct.page, %struct.page* %6, i64 %shr15
  %8 = ptrtoint i8* %ptr to i64
  %and17 = and i64 %8, 4095
  call void @debug_dma_map_page(%struct.device* %dev, %struct.page* %add.ptr16, i64 %and17, i64 %size, i32 %dir, i64 %call13, i1 zeroext true)
  ret i64 %call13
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kmemcheck_mark_initialized() #4 {
entry:
  ret void
}

declare i64 @__phys_addr(i64) #2

declare void @debug_dma_map_page(%struct.device*, %struct.page*, i64, i64, i32, i64, i1 zeroext) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_stop_v4l2_encode_stream(%struct.ivtv_stream.1071* %s, i32 %gop_end) #0 {
entry:
  %wait = alloca %struct.__wait_queue, align 8
  %__ret = alloca i64, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %__dummy50 = alloca i64, align 8
  %__dummy251 = alloca i64, align 8
  %__ret117 = alloca i64, align 8
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %1 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %1) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current.620()
  %2 = bitcast %struct.task_struct* %call to i8*
  store i8* %2, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @default_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  store %struct.list_head* null, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  store %struct.list_head* null, %struct.list_head** %prev, align 8, !tbaa !186
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %3 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %3, null
  br i1 %cmp, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %do.end

if.then2:                                         ; preds = %do.body
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.5.621, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %5 = load i32, i32* %type, align 8, !tbaa !348
  %cmp6 = icmp eq i32 %5, 7
  br i1 %cmp6, label %cleanup, label %if.end8

if.end8:                                          ; preds = %do.end
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 43
  %call9 = call i32 @atomic_read.622(%struct.atomic_t* %capturing)
  %cmp10 = icmp eq i32 %call9, 0
  br i1 %cmp10, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.end8
  %type13 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %6 = load i32, i32* %type13, align 8, !tbaa !348
  %Pivot6 = icmp slt i32 %6, 2
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %if.end12
  %Pivot4 = icmp slt i32 %6, 3
  %SwitchLeaf2 = icmp eq i32 %6, 3
  %or.cond9 = or i1 %Pivot4, %SwitchLeaf2
  br i1 %or.cond9, label %sw.epilog, label %sw.default

NodeBlock:                                        ; preds = %if.end12
  %Pivot = icmp slt i32 %6, 1
  br i1 %Pivot, label %sw.default, label %sw.epilog

sw.default:                                       ; preds = %NodeBlock, %NodeBlock3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %NodeBlock, %NodeBlock3
  %cap_type.0 = phi i32 [ 0, %sw.default ], [ 1, %NodeBlock ], [ 1, %NodeBlock3 ]
  %type17 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %7 = load i32, i32* %type17, align 8, !tbaa !348
  %cmp18 = icmp eq i32 %7, 0
  %tobool19 = icmp ne i32 %gop_end, 0
  %or.cond = and i1 %cmp18, %tobool19
  %stopmode.0 = select i1 %or.cond, i32 0, i32 1
  %subtype = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 15
  %8 = load i32, i32* %subtype, align 8, !tbaa !715
  %call22 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 130, i32 3, i32 %stopmode.0, i32 %cap_type.0, i32 %8)
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call23 = call zeroext i1 @constant_test_bit.623(i64 6, i64* %s_flags)
  br i1 %call23, label %if.end129, label %if.then26

if.then26:                                        ; preds = %sw.epilog
  %type27 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %9 = load i32, i32* %type27, align 8, !tbaa !348
  %cmp28 = icmp eq i32 %9, 0
  %tobool30 = icmp ne i32 %gop_end, 0
  %or.cond7 = and i1 %cmp28, %tobool30
  br i1 %or.cond7, label %if.then31, label %if.end127

if.then31:                                        ; preds = %if.then26
  %10 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %eos_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 63
  call void @add_wait_queue(%struct.__wait_queue_head* %eos_waitq, %struct.__wait_queue* %wait)
  br label %__here

__here:                                           ; preds = %if.then31
  %call33 = call %struct.task_struct* @get_current.620()
  %task_state_change = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call33, i32 0, i32 208
  store i64 ptrtoint (i8* blockaddress(@ivtv_stop_v4l2_encode_stream, %__here) to i64), i64* %task_state_change, align 32, !tbaa !189
  %11 = bitcast i64* %__ret to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %11) #8
  store volatile i64 1, i64* %__ret, align 8, !tbaa !88
  %12 = load volatile i64, i64* %__ret, align 8, !tbaa !88
  %call35 = call %struct.task_struct* @get_current.620()
  %state = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call35, i32 0, i32 1
  %13 = call i64 asm sideeffect "xchgq ${0:q}, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64* %state, i64 %12, i64* %state) #8, !srcloc !716
  store volatile i64 %13, i64* %__ret, align 8, !tbaa !88
  %14 = load volatile i64, i64* %__ret, align 8, !tbaa !88
  %15 = bitcast i64* %__ret to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #8
  br label %while.cond

while.cond:                                       ; preds = %while.body, %__here
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  %call42 = call zeroext i1 @constant_test_bit.623(i64 4, i64* %i_flags)
  br i1 %call42, label %while.end, label %land.rhs

land.rhs:                                         ; preds = %while.cond
  %16 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %16) #8
  %17 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %17) #8
  %cmp46 = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp46 to i32
  %18 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %18) #8
  %19 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %19) #8
  %tobool48 = icmp ne i32 1, 0
  br i1 %tobool48, label %land.lhs.true49, label %while.end

land.lhs.true49:                                  ; preds = %land.rhs
  %20 = bitcast i64* %__dummy50 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %20) #8
  %21 = bitcast i64* %__dummy251 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %21) #8
  %cmp52 = icmp eq i64* %__dummy50, %__dummy251
  %conv53 = zext i1 %cmp52 to i32
  %22 = bitcast i64* %__dummy251 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %22) #8
  %23 = bitcast i64* %__dummy50 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %23) #8
  %24 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %call57 = call i64 @msecs_to_jiffies.624(i32 2000)
  %add = add i64 %10, %call57
  %sub = sub i64 %24, %add
  %cmp58 = icmp slt i64 %sub, 0
  br i1 %cmp58, label %while.body, label %while.end

while.body:                                       ; preds = %land.lhs.true49
  %call61 = call i64 @msecs_to_jiffies.624(i32 10)
  %call62 = call i64 @schedule_timeout(i64 %call61)
  br label %while.cond

while.end:                                        ; preds = %land.lhs.true49, %land.rhs, %while.cond
  %25 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %sub63 = sub i64 %25, %10
  %mul = mul i64 4, %sub63
  %i_flags65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  %call66 = call zeroext i1 @constant_test_bit.623(i64 4, i64* %i_flags65)
  %26 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  br i1 %call66, label %do.body98, label %do.body73

do.body73:                                        ; preds = %while.end
  %and74 = and i32 1, %26
  %tobool75 = icmp ne i32 %and74, 0
  br i1 %tobool75, label %if.then76, label %do.body85

if.then76:                                        ; preds = %do.body73
  %v4l2_dev77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name78 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev77, i32 0, i32 4
  %arraydecay79 = getelementptr inbounds [36 x i8], [36 x i8]* %name78, i32 0, i32 0
  %name80 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %27 = load i8*, i8** %name80, align 8, !tbaa !349
  %call81 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.6.625, i32 0, i32 0), i8* %arraydecay79, i8* %27)
  br label %do.body85

do.body85:                                        ; preds = %if.then76, %do.body73
  %28 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and86 = and i32 1, %28
  %tobool87 = icmp ne i32 %and86, 0
  br i1 %tobool87, label %if.then88, label %__here112

if.then88:                                        ; preds = %do.body85
  %v4l2_dev89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name90 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev89, i32 0, i32 4
  %arraydecay91 = getelementptr inbounds [36 x i8], [36 x i8]* %name90, i32 0, i32 0
  %name92 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %29 = load i8*, i8** %name92, align 8, !tbaa !349
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7.626, i32 0, i32 0), i8* %arraydecay91, i8* %29, i64 %mul)
  br label %__here112

do.body98:                                        ; preds = %while.end
  %and99 = and i32 2, %26
  %tobool100 = icmp ne i32 %and99, 0
  br i1 %tobool100, label %if.then101, label %__here112

if.then101:                                       ; preds = %do.body98
  %v4l2_dev102 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name103 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev102, i32 0, i32 4
  %arraydecay104 = getelementptr inbounds [36 x i8], [36 x i8]* %name103, i32 0, i32 0
  %name105 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %30 = load i8*, i8** %name105, align 8, !tbaa !349
  %call106 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8.627, i32 0, i32 0), i8* %arraydecay104, i8* %30, i64 %mul)
  br label %__here112

__here112:                                        ; preds = %if.then101, %do.body98, %if.then88, %do.body85
  %call114 = call %struct.task_struct* @get_current.620()
  %task_state_change115 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call114, i32 0, i32 208
  store i64 ptrtoint (i8* blockaddress(@ivtv_stop_v4l2_encode_stream, %__here112) to i64), i64* %task_state_change115, align 32, !tbaa !189
  %31 = bitcast i64* %__ret117 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %31) #8
  store volatile i64 0, i64* %__ret117, align 8, !tbaa !88
  %32 = load volatile i64, i64* %__ret117, align 8, !tbaa !88
  %call118 = call %struct.task_struct* @get_current.620()
  %state119 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call118, i32 0, i32 1
  %33 = call i64 asm sideeffect "xchgq ${0:q}, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64* %state119, i64 %32, i64* %state119) #8, !srcloc !717
  store volatile i64 %33, i64* %__ret117, align 8, !tbaa !88
  %34 = load volatile i64, i64* %__ret117, align 8, !tbaa !88
  %35 = bitcast i64* %__ret117 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %35) #8
  %eos_waitq125 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 63
  call void @remove_wait_queue(%struct.__wait_queue_head* %eos_waitq125, %struct.__wait_queue* %wait)
  %s_flags126 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @set_bit.628(i64 7, i64* %s_flags126)
  br label %if.end127

if.end127:                                        ; preds = %__here112, %if.then26
  %call128 = call i32 @ivtv_msleep_timeout(i32 100, i32 0)
  br label %if.end129

if.end129:                                        ; preds = %if.end127, %sw.epilog
  %capturing130 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 43
  call void @atomic_dec(%struct.atomic_t* %capturing130)
  %s_flags131 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 4, i64* %s_flags131)
  %type132 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %36 = load i32, i32* %type132, align 8, !tbaa !348
  %cmp133 = icmp eq i32 %36, 2
  br i1 %cmp133, label %if.then135, label %if.end136

if.then135:                                       ; preds = %if.end129
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 536870912)
  br label %if.end136

if.end136:                                        ; preds = %if.then135, %if.end129
  %capturing137 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 43
  %call138 = call i32 @atomic_read.622(%struct.atomic_t* %capturing137)
  %cmp139 = icmp sgt i32 %call138, 0
  br i1 %cmp139, label %cleanup, label %if.end142

if.end142:                                        ; preds = %if.end136
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 20
  call void @cx2341x_handler_set_busy(%struct.cx2341x_handler* %cxhdl, i32 0)
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 -1073741824)
  %dma_timer = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 60
  %call143 = call i32 @del_timer(%struct.timer_list* %dma_timer)
  %i_flags144 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  %call145 = call zeroext i1 @test_and_clear_bit.630(i64 6, i64* %i_flags144)
  br i1 %call145, label %if.then146, label %if.end148

if.then146:                                       ; preds = %if.end142
  %call147 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 213, i32 4, i32 0, i32 0, i32 268435456, i32 -1)
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 268435456)
  br label %if.end148

if.end148:                                        ; preds = %if.then146, %if.end142
  %call149 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 130, i32 3, i32 1, i32 2, i32 7)
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 16
  call void @__wake_up(%struct.__wait_queue_head* %waitq, i32 3, i32 1, i8* null)
  br label %cleanup

cleanup:                                          ; preds = %if.end148, %if.end136, %if.end8, %do.end, %entry
  %retval.0 = phi i32 [ 0, %if.end148 ], [ -22, %entry ], [ 0, %do.end ], [ 0, %if.end8 ], [ 0, %if.end136 ]
  %37 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %37) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current.620() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !718
  ret %struct.task_struct* %0
}

declare i32 @default_wake_function(%struct.__wait_queue*, i32, i32, i8*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.622(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.631(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.623(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

declare void @add_wait_queue(%struct.__wait_queue_head*, %struct.__wait_queue*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @msecs_to_jiffies.624(i32 %m) #1 {
entry:
  %call = call i64 @__msecs_to_jiffies(i32 %m)
  ret i64 %call
}

declare void @remove_wait_queue(%struct.__wait_queue_head*, %struct.__wait_queue*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.628(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !719
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_dec(%struct.atomic_t* %v) #1 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !720
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.629(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !721
  ret void
}

declare void @cx2341x_handler_set_busy(%struct.cx2341x_handler*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit.630(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !722
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.631(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !723
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !724
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_start_v4l2_encode_stream(%struct.ivtv_stream.1071* %s) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %1 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %2 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %2, null
  br i1 %cmp, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %do.end

if.then2:                                         ; preds = %do.body
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %4 = load i8*, i8** %name4, align 8, !tbaa !349
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.634, i32 0, i32 0), i8* %arraydecay, i8* %4)
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %5 = load i32, i32* %type, align 8, !tbaa !348
  %Pivot6 = icmp slt i32 %5, 2
  br i1 %Pivot6, label %NodeBlock, label %NodeBlock3

NodeBlock3:                                       ; preds = %do.end
  %Pivot4 = icmp slt i32 %5, 3
  br i1 %Pivot4, label %sw.bb17, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock3
  %SwitchLeaf2 = icmp eq i32 %5, 3
  br i1 %SwitchLeaf2, label %sw.epilog, label %cleanup

NodeBlock:                                        ; preds = %do.end
  %Pivot = icmp slt i32 %5, 1
  br i1 %Pivot, label %LeafBlock, label %sw.bb11

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %5, 0
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %LeafBlock
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 31
  %6 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp6 = icmp eq i32 %6, 4
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %sw.bb
  %call8 = call i32 @ivtv_passthrough_mode(%struct.ivtv.1060* %1, i32 0)
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %sw.bb
  %enable_passthrough.0 = phi i32 [ 1, %if.then7 ], [ 0, %sw.bb ]
  %vbi_data_inserted = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 85
  store i64 0, i64* %vbi_data_inserted, align 8, !tbaa !365
  %mpg_data_received = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 84
  store i64 0, i64* %mpg_data_received, align 8, !tbaa !372
  %7 = load volatile i64, i64* @jiffies, align 8, !tbaa !88
  %dualwatch_jiffies = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 87
  store i64 %7, i64* %dualwatch_jiffies, align 8, !tbaa !366
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %8 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 11
  %audio_mode = getelementptr inbounds %struct.anon.87, %struct.anon.87* %8, i32 0, i32 3
  %9 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %audio_mode, align 8, !tbaa !385
  %call10 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %9)
  %dualwatch_stereo_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 88
  store i32 %call10, i32* %dualwatch_stereo_mode, align 8, !tbaa !121
  %search_pack_header = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 81
  store i32 0, i32* %search_pack_header, align 4, !tbaa !371
  br label %sw.epilog

sw.bb11:                                          ; preds = %NodeBlock
  %output_mode12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 31
  %10 = load i32, i32* %output_mode12, align 4, !tbaa !180
  %cmp13 = icmp eq i32 %10, 4
  %. = select i1 %cmp13, i32 11, i32 1
  %.7 = select i1 %cmp13, i32 2, i32 1
  br label %sw.epilog

sw.bb17:                                          ; preds = %NodeBlock3
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 89
  %frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 17
  store i32 0, i32* %frame, align 4, !tbaa !725
  %vbi18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 89
  %inserted_frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi18, i32 0, i32 29
  store i32 0, i32* %inserted_frame, align 8, !tbaa !364
  %vbi19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 89
  %sliced_mpeg_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi19, i32 0, i32 27
  %arraydecay20 = getelementptr inbounds [32 x i32], [32 x i32]* %sliced_mpeg_size, i32 0, i32 0
  %11 = bitcast i32* %arraydecay20 to i8*
  %call21 = call i8* @__memset(i8* %11, i32 0, i64 128)
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb17, %sw.bb11, %if.end9, %LeafBlock1
  %enable_passthrough.1 = phi i32 [ %enable_passthrough.0, %if.end9 ], [ 0, %sw.bb17 ], [ 0, %sw.bb11 ], [ 0, %LeafBlock1 ]
  %subtype.0 = phi i32 [ 3, %if.end9 ], [ 4, %sw.bb17 ], [ %., %sw.bb11 ], [ 2, %LeafBlock1 ]
  %captype.0 = phi i32 [ 0, %if.end9 ], [ 1, %sw.bb17 ], [ %.7, %sw.bb11 ], [ 1, %LeafBlock1 ]
  %subtype22 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 15
  store i32 %subtype.0, i32* %subtype22, align 8, !tbaa !715
  %buffers_stolen = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 20
  store i32 0, i32* %buffers_stolen, align 4, !tbaa !686
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 7, i64* %s_flags)
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 43
  %call23 = call i32 @atomic_read.622(%struct.atomic_t* %capturing)
  %cmp24 = icmp eq i32 %call23, 0
  br i1 %cmp24, label %if.then25, label %if.end76

if.then25:                                        ; preds = %sw.epilog
  %call26 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 201, i32 2, i32 1, i32 1)
  %call27 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 219, i32 1, i32 0)
  %has_cx23415 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 4
  %12 = load i8, i8* %has_cx23415, align 8, !tbaa !170
  %tobool28 = icmp ne i8 %12, 0
  %lnot = xor i1 %tobool28, true
  %lnot.ext = zext i1 %lnot to i32
  %call29 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 220, i32 2, i32 3, i32 %lnot.ext)
  %call30 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 220, i32 2, i32 8, i32 0)
  %call31 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 220, i32 2, i32 4, i32 1)
  %call32 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 220, i32 1, i32 12)
  %call33 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 215, i32 12, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0)
  %card = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 1
  %13 = load %struct.ivtv_card*, %struct.ivtv_card** %card, align 8, !tbaa !2
  %hw_all = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %13, i32 0, i32 8
  %14 = load i32, i32* %hw_all, align 4, !tbaa !158
  %and34 = and i32 %14, 2050
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %tobool35, label %if.end44, label %if.else

if.else:                                          ; preds = %if.then25
  %card37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 1
  %15 = load %struct.ivtv_card*, %struct.ivtv_card** %card37, align 8, !tbaa !2
  %hw_all38 = getelementptr inbounds %struct.ivtv_card, %struct.ivtv_card* %15, i32 0, i32 8
  %16 = load i32, i32* %hw_all38, align 4, !tbaa !158
  %and39 = and i32 %16, 256
  %tobool40 = icmp ne i32 %and39, 0
  %.8 = select i1 %tobool40, i32 239, i32 320
  br label %if.end44

if.end44:                                         ; preds = %if.else, %if.then25
  %digitizer.1 = phi i32 [ %.8, %if.else ], [ 241, %if.then25 ]
  %call45 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 214, i32 2, i32 %digitizer.1, i32 %digitizer.1)
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 8
  %17 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and46 = and i32 %17, 16
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %if.end49

if.then48:                                        ; preds = %if.end44
  call void @ivtv_vbi_setup(%struct.ivtv.1060* %1)
  br label %if.end49

if.end49:                                         ; preds = %if.then48, %if.end44
  %arraydecay50 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call51 = call i32 (%struct.ivtv.1060*, i32*, i32, i32, ...) @ivtv_vapi_result(%struct.ivtv.1060* %1, i32* %arraydecay50, i32 199, i32 2, i32 7, i32 400)
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %18 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %pgm_info_offset = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 75
  store i32 %18, i32* %pgm_info_offset, align 8, !tbaa !377
  %arrayidx52 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %19 = load i32, i32* %arrayidx52, align 4, !tbaa !120
  %pgm_info_num = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 76
  store i32 %19, i32* %pgm_info_num, align 4, !tbaa !378
  %pgm_info_write_idx = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 77
  store i32 0, i32* %pgm_info_write_idx, align 8, !tbaa !379
  %pgm_info_read_idx = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 78
  store i32 0, i32* %pgm_info_read_idx, align 4, !tbaa !585
  %20 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and54 = and i32 2, %20
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %do.end65

if.then56:                                        ; preds = %if.end49
  %v4l2_dev57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name58 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev57, i32 0, i32 4
  %arraydecay59 = getelementptr inbounds [36 x i8], [36 x i8]* %name58, i32 0, i32 0
  %pgm_info_offset60 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 75
  %21 = load i32, i32* %pgm_info_offset60, align 8, !tbaa !377
  %pgm_info_num61 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 76
  %22 = load i32, i32* %pgm_info_num61, align 4, !tbaa !378
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.1.637, i32 0, i32 0), i8* %arraydecay59, i32 %21, i32 %22)
  br label %do.end65

do.end65:                                         ; preds = %if.then56, %if.end49
  %cxhdl66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %call67 = call i32 @cx2341x_handler_setup(%struct.cx2341x_handler* %cxhdl66)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  %call68 = call zeroext i1 @constant_test_bit.623(i64 5, i64* %i_flags)
  br i1 %call68, label %if.then71, label %if.end76

if.then71:                                        ; preds = %do.end65
  %cxhdl72 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %23 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl72, i32 0, i32 14
  %video_mute_yuv = getelementptr inbounds %struct.anon.88, %struct.anon.88* %23, i32 0, i32 1
  %24 = load %struct.v4l2_ctrl*, %struct.v4l2_ctrl** %video_mute_yuv, align 8, !tbaa !411
  %call73 = call i32 @v4l2_ctrl_g_ctrl(%struct.v4l2_ctrl* %24)
  %shl = shl i32 %call73, 8
  %or = or i32 1, %shl
  %call74 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 217, i32 1, i32 %or)
  br label %if.end76

if.end76:                                         ; preds = %if.then71, %do.end65, %sw.epilog
  %has_cx2341577 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 4
  %25 = load i8, i8* %has_cx2341577, align 8, !tbaa !170
  %conv = zext i8 %25 to i32
  %tobool78 = icmp ne i32 %conv, 0
  br i1 %tobool78, label %land.lhs.true, label %if.end83

land.lhs.true:                                    ; preds = %if.end76
  %i_flags79 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  %call80 = call zeroext i1 @test_and_set_bit.638(i64 6, i64* %i_flags79)
  br i1 %call80, label %if.end83, label %if.then81

if.then81:                                        ; preds = %land.lhs.true
  %call82 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 213, i32 4, i32 0, i32 1, i32 268435456, i32 -1)
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %1, i32 268435456)
  br label %if.end83

if.end83:                                         ; preds = %if.then81, %land.lhs.true, %if.end76
  %capturing84 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 43
  %call85 = call i32 @atomic_read.622(%struct.atomic_t* %capturing84)
  %cmp86 = icmp eq i32 %call85, 0
  br i1 %cmp86, label %if.then88, label %if.end163

if.then88:                                        ; preds = %if.end83
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %1, i32 -1073741824)
  %i_flags89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 26
  call void @clear_bit.629(i64 4, i64* %i_flags89)
  %cxhdl90 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  call void @cx2341x_handler_set_busy(%struct.cx2341x_handler* %cxhdl90, i32 1)
  %sd_audio = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 12
  %26 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_audio, align 8, !tbaa !322
  %tobool91 = icmp ne %struct.v4l2_subdev* %26, null
  br i1 %tobool91, label %cond.false93, label %cond.end109

cond.false93:                                     ; preds = %if.then88
  %sd_audio94 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 12
  %27 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_audio94, align 8, !tbaa !322
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %27, i32 0, i32 6
  %28 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %audio = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %28, i32 0, i32 2
  %29 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio, align 8, !tbaa !80
  %tobool95 = icmp ne %struct.v4l2_subdev_audio_ops* %29, null
  br i1 %tobool95, label %land.lhs.true96, label %cond.end109

land.lhs.true96:                                  ; preds = %cond.false93
  %sd_audio97 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 12
  %30 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_audio97, align 8, !tbaa !322
  %ops98 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %30, i32 0, i32 6
  %31 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops98, align 8, !tbaa !79
  %audio99 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %31, i32 0, i32 2
  %32 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio99, align 8, !tbaa !80
  %s_stream = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %32, i32 0, i32 3
  %33 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream, align 8, !tbaa !726
  %tobool100 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %33, null
  br i1 %tobool100, label %cond.true101, label %cond.end109

cond.true101:                                     ; preds = %land.lhs.true96
  %sd_audio102 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 12
  %34 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_audio102, align 8, !tbaa !322
  %ops103 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %34, i32 0, i32 6
  %35 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops103, align 8, !tbaa !79
  %audio104 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %35, i32 0, i32 2
  %36 = load %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_audio_ops** %audio104, align 8, !tbaa !80
  %s_stream105 = getelementptr inbounds %struct.v4l2_subdev_audio_ops, %struct.v4l2_subdev_audio_ops* %36, i32 0, i32 3
  %37 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream105, align 8, !tbaa !726
  %sd_audio106 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 12
  %38 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_audio106, align 8, !tbaa !322
  %call107 = call i32 %37(%struct.v4l2_subdev* %38, i32 1)
  br label %cond.end109

cond.end109:                                      ; preds = %cond.true101, %land.lhs.true96, %cond.false93, %if.then88
  %cond110 = phi i32 [ -19, %if.then88 ], [ %call107, %cond.true101 ], [ -515, %land.lhs.true96 ], [ -515, %cond.false93 ]
  %sd_video = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %39 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool111 = icmp ne %struct.v4l2_subdev* %39, null
  br i1 %tobool111, label %cond.false113, label %cond.end133

cond.false113:                                    ; preds = %cond.end109
  %sd_video114 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %40 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video114, align 8, !tbaa !90
  %ops115 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %40, i32 0, i32 6
  %41 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops115, align 8, !tbaa !79
  %video = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %41, i32 0, i32 3
  %42 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video, align 8, !tbaa !91
  %tobool116 = icmp ne %struct.v4l2_subdev_video_ops* %42, null
  br i1 %tobool116, label %land.lhs.true117, label %cond.end133

land.lhs.true117:                                 ; preds = %cond.false113
  %sd_video118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %43 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video118, align 8, !tbaa !90
  %ops119 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %43, i32 0, i32 6
  %44 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops119, align 8, !tbaa !79
  %video120 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %44, i32 0, i32 3
  %45 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video120, align 8, !tbaa !91
  %s_stream121 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %45, i32 0, i32 10
  %46 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream121, align 8, !tbaa !169
  %tobool122 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %46, null
  br i1 %tobool122, label %cond.true123, label %cond.end133

cond.true123:                                     ; preds = %land.lhs.true117
  %sd_video124 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %47 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video124, align 8, !tbaa !90
  %ops125 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %47, i32 0, i32 6
  %48 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops125, align 8, !tbaa !79
  %video126 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %48, i32 0, i32 3
  %49 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video126, align 8, !tbaa !91
  %s_stream127 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %49, i32 0, i32 10
  %50 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream127, align 8, !tbaa !169
  %sd_video128 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %51 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video128, align 8, !tbaa !90
  %call129 = call i32 %50(%struct.v4l2_subdev* %51, i32 0)
  br label %cond.end133

cond.end133:                                      ; preds = %cond.true123, %land.lhs.true117, %cond.false113, %cond.end109
  %cond134 = phi i32 [ -19, %cond.end109 ], [ %call129, %cond.true123 ], [ -515, %land.lhs.true117 ], [ -515, %cond.false113 ]
  %call135 = call i32 @ivtv_msleep_timeout(i32 300, i32 0)
  %call136 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 205, i32 0)
  %sd_video137 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %52 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video137, align 8, !tbaa !90
  %tobool138 = icmp ne %struct.v4l2_subdev* %52, null
  br i1 %tobool138, label %cond.false140, label %if.end163

cond.false140:                                    ; preds = %cond.end133
  %sd_video141 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %53 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video141, align 8, !tbaa !90
  %ops142 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %53, i32 0, i32 6
  %54 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops142, align 8, !tbaa !79
  %video143 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %54, i32 0, i32 3
  %55 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video143, align 8, !tbaa !91
  %tobool144 = icmp ne %struct.v4l2_subdev_video_ops* %55, null
  br i1 %tobool144, label %land.lhs.true145, label %if.end163

land.lhs.true145:                                 ; preds = %cond.false140
  %sd_video146 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %56 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video146, align 8, !tbaa !90
  %ops147 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %56, i32 0, i32 6
  %57 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops147, align 8, !tbaa !79
  %video148 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %57, i32 0, i32 3
  %58 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video148, align 8, !tbaa !91
  %s_stream149 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %58, i32 0, i32 10
  %59 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream149, align 8, !tbaa !169
  %tobool150 = icmp ne i32 (%struct.v4l2_subdev*, i32)* %59, null
  br i1 %tobool150, label %cond.true151, label %if.end163

cond.true151:                                     ; preds = %land.lhs.true145
  %sd_video152 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %60 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video152, align 8, !tbaa !90
  %ops153 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %60, i32 0, i32 6
  %61 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops153, align 8, !tbaa !79
  %video154 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %61, i32 0, i32 3
  %62 = load %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_video_ops** %video154, align 8, !tbaa !91
  %s_stream155 = getelementptr inbounds %struct.v4l2_subdev_video_ops, %struct.v4l2_subdev_video_ops* %62, i32 0, i32 10
  %63 = load i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)** %s_stream155, align 8, !tbaa !169
  %sd_video156 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 11
  %64 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video156, align 8, !tbaa !90
  %call157 = call i32 %63(%struct.v4l2_subdev* %64, i32 1)
  br label %if.end163

if.end163:                                        ; preds = %cond.true151, %land.lhs.true145, %cond.false140, %cond.end133, %if.end83
  %call164 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 129, i32 2, i32 %captype.0, i32 %subtype.0)
  %tobool165 = icmp ne i32 %call164, 0
  br i1 %tobool165, label %do.body167, label %if.end178

do.body167:                                       ; preds = %if.end163
  %65 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and168 = and i32 1, %65
  %tobool169 = icmp ne i32 %and168, 0
  br i1 %tobool169, label %if.then170, label %cleanup

if.then170:                                       ; preds = %do.body167
  %v4l2_dev171 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name172 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev171, i32 0, i32 4
  %arraydecay173 = getelementptr inbounds [36 x i8], [36 x i8]* %name172, i32 0, i32 0
  %call174 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.2.639, i32 0, i32 0), i8* %arraydecay173)
  br label %cleanup

if.end178:                                        ; preds = %if.end163
  %tobool179 = icmp ne i32 %enable_passthrough.1, 0
  br i1 %tobool179, label %if.then180, label %if.end182

if.then180:                                       ; preds = %if.end178
  %call181 = call i32 @ivtv_passthrough_mode(%struct.ivtv.1060* %1, i32 1)
  br label %if.end182

if.end182:                                        ; preds = %if.then180, %if.end178
  %type183 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %66 = load i32, i32* %type183, align 8, !tbaa !348
  %cmp184 = icmp eq i32 %66, 2
  br i1 %cmp184, label %if.then186, label %if.else187

if.then186:                                       ; preds = %if.end182
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %1, i32 536870912)
  br label %if.end188

if.else187:                                       ; preds = %if.end182
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %1, i32 -1073741824)
  br label %if.end188

if.end188:                                        ; preds = %if.else187, %if.then186
  %capturing189 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 43
  call void @atomic_inc(%struct.atomic_t* %capturing189)
  br label %cleanup

cleanup:                                          ; preds = %if.end188, %if.then170, %do.body167, %LeafBlock, %LeafBlock1, %entry
  %retval.0 = phi i32 [ 0, %if.end188 ], [ -22, %entry ], [ -22, %LeafBlock ], [ -22, %LeafBlock1 ], [ -22, %if.then170 ], [ -22, %do.body167 ]
  %67 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %67) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_passthrough_mode(%struct.ivtv.1060* %itv, i32 %enable) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 1
  %streams1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %arrayidx2 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams1, i64 0, i64 8
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %0 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %0, null
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %vdev3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx2, i32 0, i32 0
  %v4l2_dev4 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev3, i32 0, i32 7
  %1 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev4, align 8, !tbaa !604
  %cmp5 = icmp eq %struct.v4l2_device* %1, null
  br i1 %cmp5, label %cleanup, label %do.body

do.body:                                          ; preds = %lor.lhs.false
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then6, label %do.end

if.then6:                                         ; preds = %do.body
  %v4l2_dev7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev7, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.10.643, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then6, %do.body
  %tobool9 = icmp ne i32 %enable, 0
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  %3 = load i32, i32* %output_mode, align 4, !tbaa !180
  br i1 %tobool9, label %if.then10, label %if.end29

if.then10:                                        ; preds = %do.end
  %cmp11 = icmp eq i32 %3, 4
  br i1 %cmp11, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.then10
  %call14 = call i32 @ivtv_set_output_mode(%struct.ivtv.1060* %itv, i32 4)
  %cmp15 = icmp ne i32 %call14, 4
  br i1 %cmp15, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end13
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx2, i32 0, i32 7
  call void @set_bit.628(i64 6, i64* %s_flags)
  %s_flags18 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx2, i32 0, i32 7
  call void @set_bit.628(i64 4, i64* %s_flags18)
  %call19 = call i32 @ivtv_setup_v4l2_decode_stream(%struct.ivtv_stream.1071* %arrayidx2)
  %call20 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 1, i32 2, i32 0, i32 1)
  %decoding = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 44
  call void @atomic_inc(%struct.atomic_t* %decoding)
  %capturing = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  %call21 = call i32 @atomic_read.622(%struct.atomic_t* %capturing)
  %cmp22 = icmp eq i32 %call21, 0
  br i1 %cmp22, label %if.then23, label %if.end26

if.then23:                                        ; preds = %if.end17
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  %call24 = call i32 @cx2341x_handler_setup(%struct.cx2341x_handler* %cxhdl)
  %cxhdl25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  call void @cx2341x_handler_set_busy(%struct.cx2341x_handler* %cxhdl25, i32 1)
  br label %if.end26

if.end26:                                         ; preds = %if.then23, %if.end17
  %call27 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 129, i32 2, i32 2, i32 11)
  %capturing28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  call void @atomic_inc(%struct.atomic_t* %capturing28)
  br label %cleanup

if.end29:                                         ; preds = %do.end
  %cmp31 = icmp ne i32 %3, 4
  br i1 %cmp31, label %cleanup, label %if.end33

if.end33:                                         ; preds = %if.end29
  %call34 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 130, i32 3, i32 1, i32 2, i32 11)
  %call35 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 2, i32 3, i32 1, i32 0, i32 0)
  %capturing36 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  call void @atomic_dec(%struct.atomic_t* %capturing36)
  %decoding37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 44
  call void @atomic_dec(%struct.atomic_t* %decoding37)
  %s_flags38 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx2, i32 0, i32 7
  call void @clear_bit.629(i64 6, i64* %s_flags38)
  %s_flags39 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx2, i32 0, i32 7
  call void @clear_bit.629(i64 4, i64* %s_flags39)
  %output_mode40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  store i32 0, i32* %output_mode40, align 4, !tbaa !180
  %capturing41 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 43
  %call42 = call i32 @atomic_read.622(%struct.atomic_t* %capturing41)
  %cmp43 = icmp eq i32 %call42, 0
  br i1 %cmp43, label %if.then44, label %cleanup

if.then44:                                        ; preds = %if.end33
  %cxhdl45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 20
  call void @cx2341x_handler_set_busy(%struct.cx2341x_handler* %cxhdl45, i32 0)
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %if.end33, %if.end29, %if.end26, %if.end13, %if.then10, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end26 ], [ -22, %lor.lhs.false ], [ -22, %entry ], [ 0, %if.then10 ], [ -16, %if.end13 ], [ 0, %if.end29 ], [ 0, %if.then44 ], [ 0, %if.end33 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_vbi_setup(%struct.ivtv.1060* %itv) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %call = call i32 @ivtv_raw_vbi.640(%struct.ivtv.1060* %itv)
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %call1 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 183, i32 5, i32 65535, i32 0, i32 0, i32 0, i32 0)
  %tobool = icmp ne i32 %call, 0
  %sd_video = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %1 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool2 = icmp ne %struct.v4l2_subdev* %1, null
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br i1 %tobool2, label %cond.false, label %if.end

cond.false:                                       ; preds = %if.then
  %sd_video3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %2 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video3, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %2, i32 0, i32 6
  %3 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %3, i32 0, i32 4
  %4 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi, align 8, !tbaa !546
  %tobool4 = icmp ne %struct.v4l2_subdev_vbi_ops* %4, null
  br i1 %tobool4, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %cond.false
  %sd_video5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video5, align 8, !tbaa !90
  %ops6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %5, i32 0, i32 6
  %6 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops6, align 8, !tbaa !79
  %vbi7 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %6, i32 0, i32 4
  %7 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi7, align 8, !tbaa !546
  %s_raw_fmt = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %7, i32 0, i32 4
  %8 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)** %s_raw_fmt, align 8, !tbaa !554
  %tobool8 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)* %8, null
  br i1 %tobool8, label %cond.true9, label %if.end

cond.true9:                                       ; preds = %land.lhs.true
  %sd_video10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video10, align 8, !tbaa !90
  %ops11 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops11, align 8, !tbaa !79
  %vbi12 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 4
  %11 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi12, align 8, !tbaa !546
  %s_raw_fmt13 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %11, i32 0, i32 4
  %12 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)** %s_raw_fmt13, align 8, !tbaa !554
  %sd_video14 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video14, align 8, !tbaa !90
  %vbi15 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi15, i32 0, i32 14
  %fmt = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 1
  %vbi16 = bitcast %union.anon.62* %fmt to %struct.v4l2_vbi_format*
  %call17 = call i32 %12(%struct.v4l2_subdev* %13, %struct.v4l2_vbi_format* %vbi16)
  br label %if.end

if.else:                                          ; preds = %entry
  br i1 %tobool2, label %cond.false24, label %if.end

cond.false24:                                     ; preds = %if.else
  %sd_video25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %14 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video25, align 8, !tbaa !90
  %ops26 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %14, i32 0, i32 6
  %15 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops26, align 8, !tbaa !79
  %vbi27 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %15, i32 0, i32 4
  %16 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi27, align 8, !tbaa !546
  %tobool28 = icmp ne %struct.v4l2_subdev_vbi_ops* %16, null
  br i1 %tobool28, label %land.lhs.true29, label %if.end

land.lhs.true29:                                  ; preds = %cond.false24
  %sd_video30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video30, align 8, !tbaa !90
  %ops31 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %17, i32 0, i32 6
  %18 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops31, align 8, !tbaa !79
  %vbi32 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %18, i32 0, i32 4
  %19 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi32, align 8, !tbaa !546
  %s_sliced_fmt = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %19, i32 0, i32 6
  %20 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %s_sliced_fmt, align 8, !tbaa !555
  %tobool33 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* %20, null
  br i1 %tobool33, label %cond.true34, label %if.end

cond.true34:                                      ; preds = %land.lhs.true29
  %sd_video35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %21 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video35, align 8, !tbaa !90
  %ops36 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %21, i32 0, i32 6
  %22 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops36, align 8, !tbaa !79
  %vbi37 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %22, i32 0, i32 4
  %23 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi37, align 8, !tbaa !546
  %s_sliced_fmt38 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %23, i32 0, i32 6
  %24 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)** %s_sliced_fmt38, align 8, !tbaa !555
  %sd_video39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %25 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video39, align 8, !tbaa !90
  %vbi40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in41 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi40, i32 0, i32 14
  %fmt42 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in41, i32 0, i32 1
  %sliced = bitcast %union.anon.62* %fmt42 to %struct.v4l2_sliced_vbi_format*
  %call43 = call i32 %24(%struct.v4l2_subdev* %25, %struct.v4l2_sliced_vbi_format* %sliced)
  br label %if.end

if.end:                                           ; preds = %cond.true34, %land.lhs.true29, %cond.false24, %if.else, %cond.true9, %land.lhs.true, %cond.false, %if.then
  %tobool49 = icmp ne i32 %call, 0
  br i1 %tobool49, label %if.then50, label %if.else52

if.then50:                                        ; preds = %if.end
  %vbi51 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %count = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi51, i32 0, i32 7
  %26 = load i32, i32* %count, align 8, !tbaa !499
  %mul = mul i32 %26, 2
  br label %if.end62

if.else52:                                        ; preds = %if.end
  %is_60hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 28
  %27 = load i8, i8* %is_60hz, align 1, !tbaa !134
  %conv = zext i8 %27 to i32
  %tobool53 = icmp ne i32 %conv, 0
  %28 = zext i1 %tobool53 to i64
  %cond54 = select i1 %tobool53, i32 24, i32 38
  %is_60hz55 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 28
  %29 = load i8, i8* %is_60hz55, align 1, !tbaa !134
  %conv56 = zext i8 %29 to i32
  %tobool57 = icmp ne i32 %conv56, 0
  br i1 %tobool57, label %land.lhs.true58, label %if.end62

land.lhs.true58:                                  ; preds = %if.else52
  %hw_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %30 = load i32, i32* %hw_flags, align 8, !tbaa !320
  %and = and i32 %30, 1
  %tobool59 = icmp ne i32 %and, 0
  %add = add nsw i32 %cond54, 2
  %add.cond54 = select i1 %tobool59, i32 %add, i32 %cond54
  br label %if.end62

if.end62:                                         ; preds = %land.lhs.true58, %if.else52, %if.then50
  %lines.1 = phi i32 [ %mul, %if.then50 ], [ %cond54, %if.else52 ], [ %add.cond54, %land.lhs.true58 ]
  %tobool63 = icmp ne i32 %call, 0
  %vbi65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  br i1 %tobool63, label %cond.true64, label %cond.false66

cond.true64:                                      ; preds = %if.end62
  %raw_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi65, i32 0, i32 8
  %31 = load i32, i32* %raw_size, align 4, !tbaa !249
  br label %cond.end68

cond.false66:                                     ; preds = %if.end62
  %sliced_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi65, i32 0, i32 9
  %32 = load i32, i32* %sliced_size, align 8, !tbaa !318
  br label %cond.end68

cond.end68:                                       ; preds = %cond.false66, %cond.true64
  %cond69 = phi i32 [ %31, %cond.true64 ], [ %32, %cond.false66 ]
  %mul70 = mul i32 %lines.1, %cond69
  %vbi71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %enc_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi71, i32 0, i32 12
  store i32 %mul70, i32* %enc_size, align 4, !tbaa !682
  %or = or i32 %call, 2
  %or72 = or i32 %or, 48384
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  store i32 %or72, i32* %arrayidx, align 16, !tbaa !120
  %arrayidx73 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  store i32 1, i32* %arrayidx73, align 4, !tbaa !120
  %tobool74 = icmp ne i32 %call, 0
  br i1 %tobool74, label %cond.end82, label %cond.false76

cond.false76:                                     ; preds = %cond.end68
  %vbi77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_size78 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi77, i32 0, i32 8
  %33 = load i32, i32* %raw_size78, align 4, !tbaa !249
  %vbi79 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %enc_size80 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi79, i32 0, i32 12
  %34 = load i32, i32* %enc_size80, align 4, !tbaa !682
  %div = udiv i32 %33, %34
  %mul81 = mul i32 4, %div
  br label %cond.end82

cond.end82:                                       ; preds = %cond.false76, %cond.end68
  %cond83 = phi i32 [ %mul81, %cond.false76 ], [ 4, %cond.end68 ]
  %arrayidx84 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  store i32 %cond83, i32* %arrayidx84, align 8, !tbaa !120
  %hw_flags85 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 9
  %35 = load i32, i32* %hw_flags85, align 8, !tbaa !320
  %and86 = and i32 %35, 1
  %tobool87 = icmp ne i32 %and86, 0
  %tobool89 = icmp ne i32 %call, 0
  %arrayidx91 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  br i1 %tobool87, label %if.then88, label %if.else108

if.then88:                                        ; preds = %cond.end82
  %.sink1 = select i1 %tobool89, i32 543170656, i32 -1326403344
  %.sink = select i1 %tobool89, i32 812658800, i32 -1595891488
  store i32 %.sink1, i32* %arrayidx91, align 4, !tbaa !120
  %arrayidx95 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 4
  store i32 %.sink, i32* %arrayidx95, align 16, !tbaa !120
  %arrayidx97 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 5
  store i32 %lines.1, i32* %arrayidx97, align 4, !tbaa !120
  %tobool98 = icmp ne i32 %call, 0
  %vbi100 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  br i1 %tobool98, label %cond.true99, label %cond.false102

cond.true99:                                      ; preds = %if.then88
  %raw_size101 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi100, i32 0, i32 8
  %36 = load i32, i32* %raw_size101, align 4, !tbaa !249
  br label %if.end122

cond.false102:                                    ; preds = %if.then88
  %sliced_size104 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi100, i32 0, i32 9
  %37 = load i32, i32* %sliced_size104, align 8, !tbaa !318
  br label %if.end122

if.else108:                                       ; preds = %cond.end82
  %.sink3 = select i1 %tobool89, i32 623207010, i32 -1414796052
  %.sink2 = select i1 %tobool89, i32 947879807, i32 -1225657871
  store i32 %.sink3, i32* %arrayidx91, align 4, !tbaa !120
  %arrayidx115 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 4
  store i32 %.sink2, i32* %arrayidx115, align 16, !tbaa !120
  %arrayidx117 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 5
  store i32 %lines.1, i32* %arrayidx117, align 4, !tbaa !120
  %vbi118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %enc_size119 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi118, i32 0, i32 12
  %38 = load i32, i32* %enc_size119, align 4, !tbaa !682
  %div120 = udiv i32 %38, %lines.1
  br label %if.end122

if.end122:                                        ; preds = %if.else108, %cond.false102, %cond.true99
  %div120.sink = phi i32 [ %div120, %if.else108 ], [ %36, %cond.true99 ], [ %37, %cond.false102 ]
  %arrayidx121 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 6
  store i32 %div120.sink, i32* %arrayidx121, align 8, !tbaa !120
  %39 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and123 = and i32 2, %39
  %tobool124 = icmp ne i32 %and123, 0
  br i1 %tobool124, label %if.then125, label %do.end

if.then125:                                       ; preds = %if.end122
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %arrayidx126 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %40 = load i32, i32* %arrayidx126, align 16, !tbaa !120
  %arrayidx127 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %41 = load i32, i32* %arrayidx127, align 4, !tbaa !120
  %arrayidx128 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %42 = load i32, i32* %arrayidx128, align 8, !tbaa !120
  %arrayidx129 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 5
  %43 = load i32, i32* %arrayidx129, align 4, !tbaa !120
  %arrayidx130 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 6
  %44 = load i32, i32* %arrayidx130, align 8, !tbaa !120
  %call131 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.28.641, i32 0, i32 0), i8* %arraydecay, i32 %40, i32 %41, i32 %42, i32 %43, i32 %44)
  br label %do.end

do.end:                                           ; preds = %if.then125, %if.end122
  %arraydecay133 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call134 = call i32 @ivtv_api(%struct.ivtv.1060* %itv, i32 200, i32 7, i32* %arraydecay133)
  %arrayidx135 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 2
  %45 = load i32, i32* %arrayidx135, align 8, !tbaa !120
  %vbi136 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %enc_start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi136, i32 0, i32 11
  store i32 %45, i32* %enc_start, align 8, !tbaa !684
  %arrayidx137 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %46 = load i32, i32* %arrayidx137, align 16, !tbaa !120
  %vbi138 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %fpi = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi138, i32 0, i32 13
  store i32 %46, i32* %fpi, align 8, !tbaa !683
  %vbi139 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %fpi140 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi139, i32 0, i32 13
  %47 = load i32, i32* %fpi140, align 8, !tbaa !683
  %tobool141 = icmp ne i32 %47, 0
  br i1 %tobool141, label %do.body146, label %if.then142

if.then142:                                       ; preds = %do.end
  %vbi143 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %fpi144 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi143, i32 0, i32 13
  store i32 1, i32* %fpi144, align 8, !tbaa !683
  br label %do.body146

do.body146:                                       ; preds = %if.then142, %do.end
  %48 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and147 = and i32 2, %48
  %tobool148 = icmp ne i32 %and147, 0
  br i1 %tobool148, label %if.then149, label %do.end161

if.then149:                                       ; preds = %do.body146
  %v4l2_dev150 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name151 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev150, i32 0, i32 4
  %arraydecay152 = getelementptr inbounds [36 x i8], [36 x i8]* %name151, i32 0, i32 0
  %vbi153 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %enc_start154 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi153, i32 0, i32 11
  %49 = load i32, i32* %enc_start154, align 8, !tbaa !684
  %arrayidx155 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %50 = load i32, i32* %arrayidx155, align 4, !tbaa !120
  %vbi156 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %fpi157 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi156, i32 0, i32 13
  %51 = load i32, i32* %fpi157, align 8, !tbaa !683
  %call158 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.29.642, i32 0, i32 0), i8* %arraydecay152, i32 %49, i32 %50, i32 %51)
  br label %do.end161

do.end161:                                        ; preds = %if.then149, %do.body146
  br label %for.cond

for.cond:                                         ; preds = %for.body, %do.end161
  %i.0 = phi i32 [ 2, %do.end161 ], [ %inc, %for.body ]
  %cmp = icmp sle i32 %i.0, 24
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %is_60hz163 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 28
  %52 = load i8, i8* %is_60hz163, align 1, !tbaa !134
  %tobool164 = icmp ne i8 %52, 0
  %.sink5 = select i1 %tobool164, i32 10, i32 6
  %.sink4 = select i1 %tobool164, i32 22, i32 24
  %cmp171 = icmp sge i32 %i.0, %.sink5
  %cmp174 = icmp slt i32 %i.0, %.sink4
  %cmp174. = select i1 %cmp171, i1 %cmp174, i1 false
  %land.ext177 = zext i1 %cmp174. to i32
  %sub = sub nsw i32 %i.0, 1
  %call179 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 183, i32 5, i32 %sub, i32 %land.ext177, i32 0, i32 0, i32 0)
  %sub180 = sub nsw i32 %i.0, 1
  %or181 = or i32 %sub180, -2147483648
  %call182 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %itv, i32 183, i32 5, i32 %or181, i32 %land.ext177, i32 0, i32 0, i32 0)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %53 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %53) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit.638(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !727
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_inc(%struct.atomic_t* %v) #1 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !728
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_raw_vbi.640(%struct.ivtv.1060* %itv) #4 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !298
  %cmp = icmp eq i32 %0, 4
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_setup_v4l2_decode_stream(%struct.ivtv_stream.1071* %s) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %0 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %1 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %2 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %2, null
  br i1 %cmp, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %3 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %3
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %do.end

if.then2:                                         ; preds = %do.body
  %v4l2_dev3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev3, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.30.644, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body
  %cxhdl = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %width5 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl, i32 0, i32 2
  %4 = load i16, i16* %width5, align 8, !tbaa !426
  %cxhdl6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %height7 = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl6, i32 0, i32 3
  %5 = load i16, i16* %height7, align 2, !tbaa !427
  %audio_bilingual_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 38
  %6 = load i8, i8* %audio_bilingual_mode, align 1, !tbaa !148
  %conv = zext i8 %6 to i32
  %audio_stereo_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 37
  %7 = load i8, i8* %audio_stereo_mode, align 8, !tbaa !146
  %conv8 = zext i8 %7 to i32
  %call9 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 22, i32 2, i32 %conv, i32 %conv8)
  %call10 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 24, i32 1, i32 0)
  %call11 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 30, i32 1, i32 1)
  %arraydecay12 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call13 = call i32 (%struct.ivtv.1060*, i32*, i32, i32, ...) @ivtv_vapi_result(%struct.ivtv.1060* %1, i32* %arraydecay12, i32 25, i32 1, i32 1)
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %8 = load i32, i32* %arrayidx, align 16, !tbaa !120
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 89
  %dec_start = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 10
  store i32 %8, i32* %dec_start, align 4, !tbaa !685
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and15 = and i32 2, %9
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %do.end27

if.then17:                                        ; preds = %do.end
  %v4l2_dev18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name19 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev18, i32 0, i32 4
  %arraydecay20 = getelementptr inbounds [36 x i8], [36 x i8]* %name19, i32 0, i32 0
  %vbi21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 89
  %dec_start22 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi21, i32 0, i32 10
  %10 = load i32, i32* %dec_start22, align 4, !tbaa !685
  %arrayidx23 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 1
  %11 = load i32, i32* %arrayidx23, align 4, !tbaa !120
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.31.645, i32 0, i32 0), i8* %arraydecay20, i32 %10, i32 %11)
  br label %do.end27

do.end27:                                         ; preds = %if.then17, %do.end
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %12 = load i32, i32* %type, align 8, !tbaa !348
  %Pivot = icmp sge i32 %12, 8
  %SwitchLeaf2 = icmp eq i32 %12, 8
  %or.cond = and i1 %Pivot, %SwitchLeaf2
  br i1 %or.cond, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %do.end27
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 31
  %13 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp28 = icmp eq i32 %13, 4
  br i1 %cmp28, label %do.body35, label %if.else

if.else:                                          ; preds = %sw.bb
  %is_out_50hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 29
  %14 = load i8, i8* %is_out_50hz, align 2, !tbaa !244
  %conv31 = zext i8 %14 to i32
  %tobool32 = icmp ne i32 %conv31, 0
  %15 = zext i1 %tobool32 to i64
  %cond = select i1 %tobool32, i32 576, i32 480
  %conv33 = trunc i32 %cond to i16
  br label %do.body35

do.body35:                                        ; preds = %if.else, %sw.bb
  %width.0 = phi i16 [ 720, %if.else ], [ %4, %sw.bb ]
  %datatype.0 = phi i32 [ 2, %if.else ], [ 1, %sw.bb ]
  %height.0 = phi i16 [ %conv33, %if.else ], [ %5, %sw.bb ]
  %16 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and36 = and i32 2, %16
  %tobool37 = icmp ne i32 %and36, 0
  br i1 %tobool37, label %if.then38, label %sw.epilog

if.then38:                                        ; preds = %do.body35
  %v4l2_dev39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name40 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev39, i32 0, i32 4
  %arraydecay41 = getelementptr inbounds [36 x i8], [36 x i8]* %name40, i32 0, i32 0
  %call42 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.32.646, i32 0, i32 0), i8* %arraydecay41, i32 %datatype.0)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.then38, %do.body35, %do.end27
  %width.1 = phi i16 [ %width.0, %if.then38 ], [ %width.0, %do.body35 ], [ %4, %do.end27 ]
  %datatype.1 = phi i32 [ %datatype.0, %if.then38 ], [ %datatype.0, %do.body35 ], [ 0, %do.end27 ]
  %height.1 = phi i16 [ %height.0, %if.then38 ], [ %height.0, %do.body35 ], [ %5, %do.end27 ]
  %conv47 = zext i16 %width.1 to i32
  %conv48 = zext i16 %height.1 to i32
  %cxhdl49 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 20
  %audio_properties = getelementptr inbounds %struct.cx2341x_handler, %struct.cx2341x_handler* %cxhdl49, i32 0, i32 5
  %17 = load i32, i32* %audio_properties, align 8, !tbaa !428
  %call50 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %1, i32 26, i32 4, i32 %datatype.1, i32 %conv47, i32 %conv48, i32 %17)
  %tobool51 = icmp ne i32 %call50, 0
  br i1 %tobool51, label %do.body53, label %if.end64

do.body53:                                        ; preds = %sw.epilog
  %18 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and54 = and i32 1, %18
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %if.end64

if.then56:                                        ; preds = %do.body53
  %v4l2_dev57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %1, i32 0, i32 19
  %name58 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev57, i32 0, i32 4
  %arraydecay59 = getelementptr inbounds [36 x i8], [36 x i8]* %name58, i32 0, i32 0
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.33.647, i32 0, i32 0), i8* %arraydecay59)
  br label %if.end64

if.end64:                                         ; preds = %if.then56, %do.body53, %sw.epilog
  %call65 = call i32 @ivtv_msleep_timeout(i32 10, i32 0)
  %call66 = call i32 bitcast (i32 (%struct.ivtv*, i8*)* @ivtv_firmware_check to i32 (%struct.ivtv.1060*, i8*)*)(%struct.ivtv.1060* %1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.648, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.end64, %entry
  %retval.0 = phi i32 [ %call66, %if.end64 ], [ -22, %entry ]
  %19 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %19) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_streams_setup(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %type.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %type.0, 9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_prep_dev(%struct.ivtv.1060* %itv, i32 %type.0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %for.end, label %if.end

if.end:                                           ; preds = %for.body
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %type.0 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %0 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp1 = icmp eq %struct.v4l2_device* %0, null
  br i1 %cmp1, label %for.inc, label %if.end3

if.end3:                                          ; preds = %if.end
  %streams4 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom5 = sext i32 %type.0 to i64
  %arrayidx6 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams4, i64 0, i64 %idxprom5
  %call7 = call i32 @ivtv_stream_alloc(%struct.ivtv_stream.1071* %arrayidx6)
  %tobool8 = icmp ne i32 %call7, 0
  br i1 %tobool8, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end3, %if.end
  %inc = add nsw i32 %type.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.end3, %for.body, %for.cond
  %cmp11 = icmp eq i32 %type.0, 9
  br i1 %cmp11, label %cleanup, label %if.end13

if.end13:                                         ; preds = %for.end
  call void @ivtv_streams_cleanup(%struct.ivtv.1060* %itv)
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %for.end
  %retval.0 = phi i32 [ -12, %if.end13 ], [ 0, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_prep_dev(%struct.ivtv.1060* %itv, i32 %type) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %type to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %idxprom1 = sext i32 %type to i64
  %arrayidx2 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom1
  %num_offset3 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx2, i32 0, i32 2
  %0 = load i32, i32* %num_offset3, align 4, !tbaa !729
  %instance = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 25
  %1 = load i16, i16* %instance, align 8, !tbaa !227
  %conv = zext i16 %1 to i32
  %2 = load i32, i32* @ivtv_first_minor, align 4, !tbaa !120
  %add = add nsw i32 %conv, %2
  %add4 = add nsw i32 %add, %0
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  store %struct.v4l2_device* null, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %itv5 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 1
  store %struct.ivtv.1060* %itv, %struct.ivtv.1060** %itv5, align 8, !tbaa !340
  %type6 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  store i32 %type, i32* %type6, align 8, !tbaa !348
  %idxprom7 = sext i32 %type to i64
  %arrayidx8 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom7
  %name = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx8, i32 0, i32 0
  %3 = load i8*, i8** %name, align 8, !tbaa !731
  %name9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  store i8* %3, i8** %name9, align 8, !tbaa !349
  %cmp = icmp eq i32 %type, 4
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %4 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %4, 262144
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  %cmp11 = icmp sge i32 %type, 5
  br i1 %cmp11, label %land.lhs.true13, label %if.end18

land.lhs.true13:                                  ; preds = %if.end
  %v4l2_cap14 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %5 = load i32, i32* %v4l2_cap14, align 4, !tbaa !172
  %and15 = and i32 %5, 2
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.end18, label %cleanup

if.end18:                                         ; preds = %land.lhs.true13, %if.end
  %idxprom19 = sext i32 %type to i64
  %arrayidx20 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom19
  %dma = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx20, i32 0, i32 3
  %6 = load i32, i32* %dma, align 8, !tbaa !732
  %cmp21 = icmp ne i32 %6, 3
  br i1 %cmp21, label %land.lhs.true23, label %if.end34

land.lhs.true23:                                  ; preds = %if.end18
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 0
  %idxprom24 = sext i32 %type to i64
  %arrayidx25 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes, i64 0, i64 %idxprom24
  %7 = load i32, i32* %arrayidx25, align 4, !tbaa !120
  %cmp26 = icmp eq i32 %7, 0
  br i1 %cmp26, label %if.then28, label %if.end34

if.then28:                                        ; preds = %land.lhs.true23
  %v4l2_dev29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name30 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev29, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name30, i32 0, i32 0
  %idxprom31 = sext i32 %type to i64
  %arrayidx32 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom31
  %name33 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx32, i32 0, i32 0
  %8 = load i8*, i8** %name33, align 8, !tbaa !731
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11.653, i32 0, i32 0), i8* %arraydecay, i8* %8)
  br label %cleanup

if.end34:                                         ; preds = %land.lhs.true23, %if.end18
  call void @ivtv_stream_init(%struct.ivtv.1060* %itv, i32 %type)
  %vdev35 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %name36 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev35, i32 0, i32 12
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %name36, i32 0, i32 0
  %v4l2_dev38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name39 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev38, i32 0, i32 4
  %arraydecay40 = getelementptr inbounds [36 x i8], [36 x i8]* %name39, i32 0, i32 0
  %name41 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %9 = load i8*, i8** %name41, align 8, !tbaa !349
  %call42 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay37, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12.654, i32 0, i32 0), i8* %arraydecay40, i8* %9)
  %conv43 = trunc i32 %add4 to i16
  %vdev44 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %num45 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev44, i32 0, i32 16
  store i16 %conv43, i16* %num45, align 4, !tbaa !733
  %v4l2_dev46 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %vdev47 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev48 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev47, i32 0, i32 7
  store %struct.v4l2_device* %v4l2_dev46, %struct.v4l2_device** %v4l2_dev48, align 8, !tbaa !604
  %idxprom49 = sext i32 %type to i64
  %arrayidx50 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom49
  %v4l2_caps = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx50, i32 0, i32 5
  %10 = load i32, i32* %v4l2_caps, align 8, !tbaa !734
  %and51 = and i32 %10, 130
  %tobool52 = icmp ne i32 %and51, 0
  br i1 %tobool52, label %if.then53, label %if.end55

if.then53:                                        ; preds = %if.end34
  %vdev54 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %vfl_dir = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev54, i32 0, i32 14
  store i32 1, i32* %vfl_dir, align 4, !tbaa !497
  br label %if.end55

if.end55:                                         ; preds = %if.then53, %if.end34
  %idxprom56 = sext i32 %type to i64
  %arrayidx57 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom56
  %fops = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx57, i32 0, i32 6
  %11 = load %struct.v4l2_file_operations*, %struct.v4l2_file_operations** %fops, align 8, !tbaa !735
  %vdev58 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %fops59 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev58, i32 0, i32 3
  store %struct.v4l2_file_operations* %11, %struct.v4l2_file_operations** %fops59, align 8, !tbaa !736
  %v4l2_dev60 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %ctrl_handler = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev60, i32 0, i32 6
  %12 = load %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl_handler** %ctrl_handler, align 8, !tbaa !229
  %vdev61 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %ctrl_handler62 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev61, i32 0, i32 9
  store %struct.v4l2_ctrl_handler* %12, %struct.v4l2_ctrl_handler** %ctrl_handler62, align 8, !tbaa !737
  %vdev63 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %release = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev63, i32 0, i32 23
  store void (%struct.video_device*)* @video_device_release_empty, void (%struct.video_device*)** %release, align 8, !tbaa !738
  %vdev64 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %tvnorms = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev64, i32 0, i32 22
  store i64 16777215, i64* %tvnorms, align 8, !tbaa !496
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  %vdev65 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %lock = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev65, i32 0, i32 27
  store %struct.mutex* %serialize_lock, %struct.mutex** %lock, align 8, !tbaa !739
  %type66 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  %13 = load i32, i32* %type66, align 8, !tbaa !348
  %cmp67 = icmp eq i32 %13, 6
  br i1 %cmp67, label %if.then69, label %if.end81

if.then69:                                        ; preds = %if.end55
  %vdev70 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev70, i32 1077171746)
  %vdev71 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev71, i32 -2144053727)
  %vdev72 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev72, i32 -1070311871)
  %vdev73 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev73, i32 -1068476902)
  %vdev74 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev74, i32 -1073457625)
  %vdev75 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev75, i32 -2147199450)
  %vdev76 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev76, i32 1076647481)
  %vdev77 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev77, i32 -1070836168)
  %vdev78 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev78, i32 1079268894)
  %vdev79 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev79, i32 -1068214755)
  %vdev80 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @v4l2_disable_ioctl(%struct.video_device* %vdev80, i32 1074288152)
  br label %if.end81

if.end81:                                         ; preds = %if.then69, %if.end55
  %vdev82 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  call void @ivtv_set_funcs(%struct.video_device* %vdev82)
  br label %cleanup

cleanup:                                          ; preds = %if.end81, %if.then28, %land.lhs.true13, %land.lhs.true
  ret i32 0
}

; Function Attrs: nounwind uwtable
define void @ivtv_streams_cleanup(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock, %entry
  %type.0 = phi i32 [ 0, %entry ], [ %inc, %LeafBlock ]
  %cmp = icmp slt i32 %type.0, 9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %type.0 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %vdev1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 7
  %0 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !740
  %cmp2 = icmp eq %struct.v4l2_device* %0, null
  br i1 %cmp2, label %LeafBlock, label %if.end

if.end:                                           ; preds = %for.body
  call void @video_unregister_device(%struct.video_device* %vdev1)
  %streams3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom4 = sext i32 %type.0 to i64
  %arrayidx5 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams3, i64 0, i64 %idxprom4
  call void @ivtv_stream_free(%struct.ivtv_stream.1071* %arrayidx5)
  %streams6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom7 = sext i32 %type.0 to i64
  %arrayidx8 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams6, i64 0, i64 %idxprom7
  %vdev9 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx8, i32 0, i32 0
  %v4l2_dev10 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev9, i32 0, i32 7
  store %struct.v4l2_device* null, %struct.v4l2_device** %v4l2_dev10, align 8, !tbaa !604
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 4, %for.body ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  %inc = add nsw i32 %type.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare void @video_unregister_device(%struct.video_device*) #2

; Function Attrs: nounwind uwtable
define internal void @ivtv_stream_init(%struct.ivtv.1060* %itv, i32 %type) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %type to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %0 = bitcast %struct.ivtv_stream.1071* %arrayidx to i8*
  %call = call i8* @__memset(i8* %0, i32 0, i64 2640)
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 1
  store %struct.ivtv.1060* %itv, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %type2 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 3
  store i32 %type, i32* %type2, align 8, !tbaa !348
  %idxprom3 = sext i32 %type to i64
  %arrayidx4 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom3
  %name = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx4, i32 0, i32 0
  %1 = load i8*, i8** %name, align 8, !tbaa !731
  %name5 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  store i8* %1, i8** %name5, align 8, !tbaa !349
  %idxprom6 = sext i32 %type to i64
  %arrayidx7 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom6
  %v4l2_caps = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx7, i32 0, i32 5
  %2 = load i32, i32* %v4l2_caps, align 8, !tbaa !734
  %caps = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 4
  store i32 %2, i32* %caps, align 4, !tbaa !512
  %idxprom8 = sext i32 %type to i64
  %arrayidx9 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom8
  %pio = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx9, i32 0, i32 4
  %3 = load i32, i32* %pio, align 4, !tbaa !741
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.end, label %if.else

if.else:                                          ; preds = %entry
  %idxprom10 = sext i32 %type to i64
  %arrayidx11 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom10
  %dma12 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx11, i32 0, i32 3
  %4 = load i32, i32* %dma12, align 8, !tbaa !732
  br label %if.end

if.end:                                           ; preds = %if.else, %entry
  %.sink = phi i32 [ %4, %if.else ], [ 3, %entry ]
  %dma13 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 8
  store i32 %.sink, i32* %dma13, align 8, !tbaa !633
  %stream_buf_size = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 41
  %idxprom14 = sext i32 %type to i64
  %arrayidx15 = getelementptr inbounds [9 x i32], [9 x i32]* %stream_buf_size, i64 0, i64 %idxprom14
  %5 = load i32, i32* %arrayidx15, align 4, !tbaa !120
  %buf_size = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 19
  store i32 %5, i32* %buf_size, align 8, !tbaa !403
  %buf_size16 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 19
  %6 = load i32, i32* %buf_size16, align 8, !tbaa !403
  %tobool17 = icmp ne i32 %6, 0
  br i1 %tobool17, label %if.then18, label %do.body

if.then18:                                        ; preds = %if.end
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 0
  %idxprom19 = sext i32 %type to i64
  %arrayidx20 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes, i64 0, i64 %idxprom19
  %7 = load i32, i32* %arrayidx20, align 4, !tbaa !120
  %mul = mul nsw i32 %7, 1024
  %buf_size21 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 19
  %8 = load i32, i32* %buf_size21, align 8, !tbaa !403
  %add = add i32 %mul, %8
  %sub = sub i32 %add, 1
  %buf_size22 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 19
  %9 = load i32, i32* %buf_size22, align 8, !tbaa !403
  %div = udiv i32 %sub, %9
  %buffers = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 18
  store i32 %div, i32* %buffers, align 4, !tbaa !605
  br label %do.body

do.body:                                          ; preds = %if.then18, %if.end
  %qlock = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 6
  call void @spinlock_check.655(%struct.spinlock* %qlock)
  %qlock26 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 6
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %qlock26, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %10 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.22.656, i32 0, i32 0), %struct.lock_class_key* @ivtv_stream_init.__key)
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 16
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %waitq, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24.657, i32 0, i32 0), %struct.lock_class_key* @ivtv_stream_init.__key.23)
  %sg_handle = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 30
  store i64 4294967295, i64* %sg_handle, align 8, !tbaa !644
  %q_free = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 21
  call void @ivtv_queue_init(%struct.ivtv_queue* %q_free)
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 22
  call void @ivtv_queue_init(%struct.ivtv_queue* %q_full)
  %q_dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 24
  call void @ivtv_queue_init(%struct.ivtv_queue* %q_dma)
  %q_predma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 25
  call void @ivtv_queue_init(%struct.ivtv_queue* %q_predma)
  %q_io = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 23
  call void @ivtv_queue_init(%struct.ivtv_queue* %q_io)
  ret void
}

declare void @video_device_release_empty(%struct.video_device*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @v4l2_disable_ioctl(%struct.video_device* %vdev, i32 %cmd) #4 {
entry:
  %shr = lshr i32 %cmd, 0
  %and = and i32 %shr, 255
  %cmp = icmp ult i32 %and, 192
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = zext i32 %and to i64
  %valid_ioctls = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 25
  %arraydecay = getelementptr inbounds [3 x i64], [3 x i64]* %valid_ioctls, i32 0, i32 0
  call void @set_bit.628(i64 %conv, i64* %arraydecay)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spinlock_check.655(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret void
}

declare i64 @video_ioctl2(%struct.file*, i32, i64) #2

; Function Attrs: nounwind uwtable
define i32 @ivtv_streams_register(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %err.0 = phi i32 [ 0, %entry ], [ %or, %for.body ]
  %type.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %cmp = icmp slt i32 %type.0, 9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @ivtv_reg_dev(%struct.ivtv.1060* %itv, i32 %type.0)
  %or = or i32 %err.0, %call
  %inc = add nsw i32 %type.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp1 = icmp eq i32 %err.0, 0
  br i1 %cmp1, label %cleanup, label %if.end

if.end:                                           ; preds = %for.end
  call void @ivtv_streams_cleanup(%struct.ivtv.1060* %itv)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.end
  %retval.0 = phi i32 [ -12, %if.end ], [ 0, %for.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_reg_dev(%struct.ivtv.1060* %itv, i32 %type) #0 {
entry:
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %type to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %idxprom1 = sext i32 %type to i64
  %arrayidx2 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom1
  %vfl_type3 = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx2, i32 0, i32 1
  %0 = load i32, i32* %vfl_type3, align 8, !tbaa !742
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %1 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %vdev4 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %num5 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev4, i32 0, i32 16
  %2 = load i16, i16* %num5, align 4, !tbaa !733
  %conv = zext i16 %2 to i32
  %cmp6 = icmp ne i32 %type, 0
  br i1 %cmp6, label %if.then8, label %if.end20

if.then8:                                         ; preds = %if.end
  %streams9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %arrayidx10 = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams9, i64 0, i64 0
  %vdev11 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx10, i32 0, i32 0
  %v4l2_dev12 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev11, i32 0, i32 7
  %3 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev12, align 8, !tbaa !604
  %tobool = icmp ne %struct.v4l2_device* %3, null
  br i1 %tobool, label %if.then13, label %if.end20

if.then13:                                        ; preds = %if.then8
  %vdev14 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx10, i32 0, i32 0
  %num15 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev14, i32 0, i32 16
  %4 = load i16, i16* %num15, align 4, !tbaa !733
  %conv16 = zext i16 %4 to i32
  %idxprom17 = sext i32 %type to i64
  %arrayidx18 = getelementptr inbounds [9 x %struct.anon.106], [9 x %struct.anon.106]* @ivtv_stream_info, i64 0, i64 %idxprom17
  %num_offset = getelementptr inbounds %struct.anon.106, %struct.anon.106* %arrayidx18, i32 0, i32 2
  %5 = load i32, i32* %num_offset, align 4, !tbaa !729
  %add = add nsw i32 %conv16, %5
  br label %if.end20

if.end20:                                         ; preds = %if.then13, %if.then8, %if.end
  %num.1 = phi i32 [ %conv, %if.end ], [ %add, %if.then13 ], [ %conv, %if.then8 ]
  %vdev21 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %6 = bitcast %struct.ivtv_stream.1071* %arrayidx to i8*
  call void @video_set_drvdata(%struct.video_device* %vdev21, i8* %6)
  %vdev22 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %call = call i32 @video_register_device_no_warn(%struct.video_device* %vdev22, i32 %0, i32 %num.1)
  %tobool23 = icmp ne i32 %call, 0
  br i1 %tobool23, label %if.then24, label %if.end29

if.then24:                                        ; preds = %if.end20
  %v4l2_dev25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name26 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev25, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name26, i32 0, i32 0
  %name27 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %7 = load i8*, i8** %name27, align 8, !tbaa !349
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.669, i32 0, i32 0), i8* %arraydecay, i8* %7, i32 %num.1)
  br label %cleanup

if.end29:                                         ; preds = %if.end20
  %vdev30 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %call31 = call i8* @video_device_node_name.670(%struct.video_device* %vdev30)
  %Pivot4 = icmp slt i32 %0, 1
  br i1 %Pivot4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end29
  %Pivot = icmp slt i32 %0, 2
  br i1 %Pivot, label %sw.bb45, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %0, 2
  br i1 %SwitchLeaf2, label %sw.bb39, label %cleanup

LeafBlock:                                        ; preds = %if.end29
  %SwitchLeaf = icmp eq i32 %0, 0
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %LeafBlock
  %v4l2_dev32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name33 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev32, i32 0, i32 4
  %arraydecay34 = getelementptr inbounds [36 x i8], [36 x i8]* %name33, i32 0, i32 0
  %name35 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %8 = load i8*, i8** %name35, align 8, !tbaa !349
  %options = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options, i32 0, i32 0
  %idxprom36 = sext i32 %type to i64
  %arrayidx37 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes, i64 0, i64 %idxprom36
  %9 = load i32, i32* %arrayidx37, align 4, !tbaa !120
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26.671, i32 0, i32 0), i8* %arraydecay34, i8* %call31, i8* %8, i32 %9)
  br label %cleanup

sw.bb39:                                          ; preds = %LeafBlock1
  %v4l2_dev40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name41 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev40, i32 0, i32 4
  %arraydecay42 = getelementptr inbounds [36 x i8], [36 x i8]* %name41, i32 0, i32 0
  %name43 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %10 = load i8*, i8** %name43, align 8, !tbaa !349
  %call44 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27.672, i32 0, i32 0), i8* %arraydecay42, i8* %call31, i8* %10)
  br label %cleanup

sw.bb45:                                          ; preds = %NodeBlock
  %options46 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes47 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options46, i32 0, i32 0
  %idxprom48 = sext i32 %type to i64
  %arrayidx49 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes47, i64 0, i64 %idxprom48
  %11 = load i32, i32* %arrayidx49, align 4, !tbaa !120
  %tobool50 = icmp ne i32 %11, 0
  %v4l2_dev52 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name53 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev52, i32 0, i32 4
  %arraydecay54 = getelementptr inbounds [36 x i8], [36 x i8]* %name53, i32 0, i32 0
  %name55 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 2
  %12 = load i8*, i8** %name55, align 8, !tbaa !349
  br i1 %tobool50, label %if.then51, label %if.else

if.then51:                                        ; preds = %sw.bb45
  %options56 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 18
  %kilobytes57 = getelementptr inbounds %struct.ivtv_options, %struct.ivtv_options* %options56, i32 0, i32 0
  %idxprom58 = sext i32 %type to i64
  %arrayidx59 = getelementptr inbounds [9 x i32], [9 x i32]* %kilobytes57, i64 0, i64 %idxprom58
  %13 = load i32, i32* %arrayidx59, align 4, !tbaa !120
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.26.671, i32 0, i32 0), i8* %arraydecay54, i8* %call31, i8* %12, i32 %13)
  br label %cleanup

if.else:                                          ; preds = %sw.bb45
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.27.672, i32 0, i32 0), i8* %arraydecay54, i8* %call31, i8* %12)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then51, %sw.bb39, %sw.bb, %LeafBlock, %LeafBlock1, %if.then24, %entry
  %retval.0 = phi i32 [ -12, %if.then24 ], [ 0, %entry ], [ 0, %LeafBlock ], [ 0, %LeafBlock1 ], [ 0, %if.then51 ], [ 0, %if.else ], [ 0, %sw.bb39 ], [ 0, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @video_set_drvdata(%struct.video_device* %vdev, i8* %data) #4 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  call void @dev_set_drvdata.675(%struct.device* %dev, i8* %data)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @video_register_device_no_warn(%struct.video_device* %vdev, i32 %type, i32 %nr) #4 {
entry:
  %fops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 3
  %0 = load %struct.v4l2_file_operations*, %struct.v4l2_file_operations** %fops, align 8, !tbaa !743
  %owner = getelementptr inbounds %struct.v4l2_file_operations, %struct.v4l2_file_operations* %0, i32 0, i32 0
  %1 = load %struct.module*, %struct.module** %owner, align 8, !tbaa !744
  %call = call i32 @__video_register_device(%struct.video_device* %vdev, i32 %type, i32 %nr, i32 0, %struct.module* %1)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_device_node_name.670(%struct.video_device* %vdev) #4 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  %call = call i8* @dev_name.673(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_name.673(%struct.device* %dev) #4 {
entry:
  %init_name = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %0 = load i8*, i8** %init_name, align 8, !tbaa !416
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %init_name1 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 3
  %1 = load i8*, i8** %init_name1, align 8, !tbaa !416
  br label %return

if.end:                                           ; preds = %entry
  %kobj = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 2
  %call = call i8* @kobject_name.674(%struct.kobject* %kobj)
  br label %return

return:                                           ; preds = %if.end, %if.then
  %retval.0 = phi i8* [ %1, %if.then ], [ %call, %if.end ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kobject_name.674(%struct.kobject* %kobj) #4 {
entry:
  %name = getelementptr inbounds %struct.kobject, %struct.kobject* %kobj, i32 0, i32 0
  %0 = load i8*, i8** %name, align 8, !tbaa !417
  ret i8* %0
}

declare i32 @__video_register_device(%struct.video_device*, i32, i32, i32, %struct.module*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @dev_set_drvdata.675(%struct.device* %dev, i8* %data) #4 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  store i8* %data, i8** %driver_data, align 8, !tbaa !269
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_start_v4l2_decode_stream(%struct.ivtv_stream.1071* %s, i32 %gop_offset) #0 {
entry:
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %1 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call = call zeroext i1 @test_and_set_bit.638(i64 4, i64* %s_flags)
  br i1 %call, label %cleanup, label %do.body

do.body:                                          ; preds = %if.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then4, label %do.end

if.then4:                                         ; preds = %do.body
  %v4l2_dev5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev5, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 2
  %3 = load i8*, i8** %name6, align 8, !tbaa !349
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.3.678, i32 0, i32 0), i8* %arraydecay, i8* %3, i32 %gop_offset)
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %call9 = call i32 @ivtv_setup_v4l2_decode_stream(%struct.ivtv_stream.1071* %s)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %if.then11, label %if.end13

if.then11:                                        ; preds = %do.end
  %s_flags12 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 4, i64* %s_flags12)
  br label %cleanup

if.end13:                                         ; preds = %do.end
  %call14 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 8, i32 1, i32 65536)
  %s_flags15 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 7, i64* %s_flags15)
  %dec_mbox = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox, i32 0, i32 0
  %4 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox, align 8, !tbaa !418
  %arrayidx = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %4, i64 8
  %data = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx, i32 0, i32 4
  %arrayidx16 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 0
  %5 = bitcast i32* %arrayidx16 to i8*
  call void @writel.679(i32 0, i8* %5)
  %dec_mbox17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox18 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox17, i32 0, i32 0
  %6 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox18, align 8, !tbaa !418
  %arrayidx19 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %6, i64 8
  %data20 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx19, i32 0, i32 4
  %arrayidx21 = getelementptr inbounds [16 x i32], [16 x i32]* %data20, i64 0, i64 1
  %7 = bitcast i32* %arrayidx21 to i8*
  call void @writel.679(i32 0, i8* %7)
  %dec_mbox22 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox23 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox22, i32 0, i32 0
  %8 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox23, align 8, !tbaa !418
  %arrayidx24 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %8, i64 8
  %data25 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx24, i32 0, i32 4
  %arrayidx26 = getelementptr inbounds [16 x i32], [16 x i32]* %data25, i64 0, i64 2
  %9 = bitcast i32* %arrayidx26 to i8*
  call void @writel.679(i32 0, i8* %9)
  %dec_mbox27 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox28 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox27, i32 0, i32 0
  %10 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox28, align 8, !tbaa !418
  %arrayidx29 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %10, i64 8
  %data30 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx29, i32 0, i32 4
  %arrayidx31 = getelementptr inbounds [16 x i32], [16 x i32]* %data30, i64 0, i64 3
  %11 = bitcast i32* %arrayidx31 to i8*
  call void @writel.679(i32 0, i8* %11)
  %dec_mbox32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox33 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox32, i32 0, i32 0
  %12 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox33, align 8, !tbaa !418
  %arrayidx34 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %12, i64 9
  %data35 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx34, i32 0, i32 4
  %arrayidx36 = getelementptr inbounds [16 x i32], [16 x i32]* %data35, i64 0, i64 0
  %13 = bitcast i32* %arrayidx36 to i8*
  call void @writel.679(i32 0, i8* %13)
  %dec_mbox37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox38 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox37, i32 0, i32 0
  %14 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox38, align 8, !tbaa !418
  %arrayidx39 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %14, i64 9
  %data40 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx39, i32 0, i32 4
  %arrayidx41 = getelementptr inbounds [16 x i32], [16 x i32]* %data40, i64 0, i64 1
  %15 = bitcast i32* %arrayidx41 to i8*
  call void @writel.679(i32 0, i8* %15)
  %dec_mbox42 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox43 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox42, i32 0, i32 0
  %16 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox43, align 8, !tbaa !418
  %arrayidx44 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %16, i64 9
  %data45 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx44, i32 0, i32 4
  %arrayidx46 = getelementptr inbounds [16 x i32], [16 x i32]* %data45, i64 0, i64 2
  %17 = bitcast i32* %arrayidx46 to i8*
  call void @writel.679(i32 0, i8* %17)
  %dec_mbox47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 67
  %mbox48 = getelementptr inbounds %struct.ivtv_mailbox_data, %struct.ivtv_mailbox_data* %dec_mbox47, i32 0, i32 0
  %18 = load %struct.ivtv_mailbox*, %struct.ivtv_mailbox** %mbox48, align 8, !tbaa !418
  %arrayidx49 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %18, i64 9
  %data50 = getelementptr inbounds %struct.ivtv_mailbox, %struct.ivtv_mailbox* %arrayidx49, i32 0, i32 4
  %arrayidx51 = getelementptr inbounds [16 x i32], [16 x i32]* %data50, i64 0, i64 3
  %19 = bitcast i32* %arrayidx51 to i8*
  call void @writel.679(i32 0, i8* %19)
  %call52 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 23, i32 4, i32 0, i32 1, i32 16777216, i32 -1)
  %call53 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 1, i32 2, i32 %gop_offset, i32 0)
  %call54 = call i32 @ivtv_msleep_timeout(i32 10, i32 0)
  call void @ivtv_clear_irq_mask(%struct.ivtv.1060* %0, i32 20971520)
  %20 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and56 = and i32 64, %20
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %if.then58, label %do.end65

if.then58:                                        ; preds = %if.end13
  %v4l2_dev59 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name60 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev59, i32 0, i32 4
  %arraydecay61 = getelementptr inbounds [36 x i8], [36 x i8]* %name60, i32 0, i32 0
  %irqmask = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 48
  %21 = load i32, i32* %irqmask, align 8, !tbaa !179
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4.680, i32 0, i32 0), i8* %arraydecay61, i32 %21)
  br label %do.end65

do.end65:                                         ; preds = %if.then58, %if.end13
  %decoding = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 44
  call void @atomic_inc(%struct.atomic_t* %decoding)
  br label %cleanup

cleanup:                                          ; preds = %do.end65, %if.then11, %if.end, %entry
  %retval.0 = phi i32 [ %call9, %if.then11 ], [ 0, %do.end65 ], [ -22, %entry ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.679(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !746
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_stop_all_captures(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock, %entry
  %i.0 = phi i32 [ 8, %entry ], [ %dec, %LeafBlock ]
  %cmp = icmp sge i32 %i.0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %streams = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 42
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [9 x %struct.ivtv_stream.1071], [9 x %struct.ivtv_stream.1071]* %streams, i64 0, i64 %idxprom
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %0 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp1 = icmp eq %struct.v4l2_device* %0, null
  br i1 %cmp1, label %LeafBlock, label %cond.true

cond.true:                                        ; preds = %for.body
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %arrayidx, i32 0, i32 7
  %call = call zeroext i1 @constant_test_bit.623(i64 4, i64* %s_flags)
  br i1 %call, label %if.then4, label %LeafBlock

if.then4:                                         ; preds = %cond.true
  %call5 = call i32 @ivtv_stop_v4l2_encode_stream(%struct.ivtv_stream.1071* %arrayidx, i32 0)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then4, %cond.true, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ 0, %if.then4 ], [ 0, %cond.true ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  %dec = add nsw i32 %i.0, -1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_stop_v4l2_decode_stream(%struct.ivtv_stream.1071* %s, i32 %flags, i64 %pts) #0 {
entry:
  %data = alloca [16 x i32], align 16
  %itv1 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 1
  %0 = load %struct.ivtv.1060*, %struct.ivtv.1060** %itv1, align 8, !tbaa !340
  %vdev = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 7
  %1 = load %struct.v4l2_device*, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !604
  %cmp = icmp eq %struct.v4l2_device* %1, null
  br i1 %cmp, label %cleanup50, label %if.end

if.end:                                           ; preds = %entry
  %type = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %2 = load i32, i32* %type, align 8, !tbaa !348
  %cmp2 = icmp ne i32 %2, 8
  br i1 %cmp2, label %land.lhs.true, label %cond.true

land.lhs.true:                                    ; preds = %if.end
  %type3 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 3
  %3 = load i32, i32* %type3, align 8, !tbaa !348
  %cmp4 = icmp ne i32 %3, 5
  br i1 %cmp4, label %cleanup50, label %cond.true

cond.true:                                        ; preds = %land.lhs.true, %if.end
  %s_flags = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  %call = call zeroext i1 @constant_test_bit.623(i64 4, i64* %s_flags)
  br i1 %call, label %do.body, label %cleanup50

do.body:                                          ; preds = %cond.true
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then11, label %do.end

if.then11:                                        ; preds = %do.body
  %v4l2_dev12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev12, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.685, i32 0, i32 0), i8* %arraydecay, i64 %pts, i32 %flags)
  br label %do.end

do.end:                                           ; preds = %if.then11, %do.body
  %and15 = and i32 %flags, 2
  %tobool16 = icmp eq i32 %and15, 0
  %tobool17 = icmp ne i64 %pts, 0
  %or.cond = or i1 %tobool16, %tobool17
  br i1 %or.cond, label %if.then18, label %if.end41

if.then18:                                        ; preds = %do.end
  %tobool19 = icmp ne i64 %pts, 0
  br i1 %tobool19, label %if.then20, label %if.end24

if.then20:                                        ; preds = %if.then18
  %and21 = and i64 %pts, 4294967295
  %conv = trunc i64 %and21 to i32
  %shr = lshr i64 %pts, 32
  %conv22 = trunc i64 %shr to i32
  %call23 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 2, i32 3, i32 0, i32 %conv, i32 %conv22)
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %if.then18
  br label %while.cond

while.cond:                                       ; preds = %cleanup.cont, %if.end24
  %tmp.0 = phi i32 [ 0, %if.end24 ], [ %tmp.2, %cleanup.cont ]
  %5 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %5) #8
  %arraydecay25 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i32 0, i32 0
  %call26 = call i32 (%struct.ivtv.1060*, i32*, i32, i32, ...) @ivtv_vapi_result(%struct.ivtv.1060* %0, i32* %arraydecay25, i32 9, i32 0)
  %q_full = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 22
  %buffers = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_full, i32 0, i32 1
  %6 = load i32, i32* %buffers, align 8, !tbaa !369
  %q_dma = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 24
  %buffers27 = getelementptr inbounds %struct.ivtv_queue, %struct.ivtv_queue* %q_dma, i32 0, i32 1
  %7 = load i32, i32* %buffers27, align 8, !tbaa !747
  %add = add i32 %6, %7
  %cmp28 = icmp eq i32 %add, 0
  br i1 %cmp28, label %if.then30, label %if.end36

if.then30:                                        ; preds = %while.cond
  %arrayidx = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  %8 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %cmp31 = icmp eq i32 %tmp.0, %8
  br i1 %cmp31, label %cleanup, label %if.end34

if.end34:                                         ; preds = %if.then30
  %arrayidx35 = getelementptr inbounds [16 x i32], [16 x i32]* %data, i64 0, i64 3
  %9 = load i32, i32* %arrayidx35, align 4, !tbaa !120
  br label %if.end36

if.end36:                                         ; preds = %if.end34, %while.cond
  %tmp.1 = phi i32 [ %9, %if.end34 ], [ %tmp.0, %while.cond ]
  %call37 = call i32 @ivtv_msleep_timeout(i32 100, i32 1)
  %tobool38 = icmp ne i32 %call37, 0
  %. = select i1 %tobool38, i32 5, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end36, %if.then30
  %cleanup.dest.slot.0 = phi i32 [ 5, %if.then30 ], [ %., %if.end36 ]
  %tmp.2 = phi i32 [ %tmp.0, %if.then30 ], [ %tmp.1, %if.end36 ]
  %10 = bitcast [16 x i32]* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %10) #8
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 5
  br i1 %SwitchLeaf, label %if.end41, label %cleanup.cont

cleanup.cont:                                     ; preds = %cleanup
  br label %while.cond

if.end41:                                         ; preds = %cleanup, %do.end
  %and42 = and i32 %flags, 1
  %call43 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 2, i32 3, i32 %and42, i32 0, i32 0)
  %call44 = call i32 (%struct.ivtv.1060*, i32, i32, ...) @ivtv_vapi(%struct.ivtv.1060* %0, i32 23, i32 4, i32 0, i32 0, i32 16777216, i32 -1)
  call void @ivtv_set_irq_mask(%struct.ivtv.1060* %0, i32 20971520)
  %dma_timer = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 60
  %call45 = call i32 @del_timer(%struct.timer_list* %dma_timer)
  %s_flags46 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 2, i64* %s_flags46)
  %s_flags47 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 7
  call void @clear_bit.629(i64 4, i64* %s_flags47)
  call void @ivtv_flush_queues(%struct.ivtv_stream.1071* %s)
  %call48 = call i32 @ivtv_msleep_timeout(i32 40, i32 0)
  %decoding = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 44
  call void @atomic_dec(%struct.atomic_t* %decoding)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 26
  call void @set_bit.628(i64 28, i64* %i_flags)
  %event_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %0, i32 0, i32 64
  call void @__wake_up(%struct.__wait_queue_head* %event_waitq, i32 3, i32 1, i8* null)
  %vdev49 = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 0
  call void @v4l2_event_queue(%struct.video_device* %vdev49, %struct.v4l2_event* @ivtv_stop_v4l2_decode_stream.ev)
  %waitq = getelementptr inbounds %struct.ivtv_stream.1071, %struct.ivtv_stream.1071* %s, i32 0, i32 16
  call void @__wake_up(%struct.__wait_queue_head* %waitq, i32 3, i32 1, i8* null)
  br label %cleanup50

cleanup50:                                        ; preds = %if.end41, %cond.true, %land.lhs.true, %entry
  %retval.0 = phi i32 [ 0, %if.end41 ], [ -22, %entry ], [ -22, %land.lhs.true ], [ 0, %cond.true ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @ivtv_udma_get_page_info(%struct.ivtv_dma_page_info* %dma_page, i64 %first, i64 %size) #0 {
entry:
  %and = and i64 %first, -4096
  %uaddr = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 0
  store i64 %and, i64* %uaddr, align 8, !tbaa !748
  %and1 = and i64 %first, 4095
  %conv = trunc i64 %and1 to i32
  %offset = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 3
  store i32 %conv, i32* %offset, align 8, !tbaa !750
  %add = add i64 %first, %size
  %sub = sub i64 %add, 1
  %and2 = and i64 %sub, 4095
  %add3 = add i64 1, %and2
  %conv4 = trunc i64 %add3 to i32
  %tail = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 4
  store i32 %conv4, i32* %tail, align 4, !tbaa !751
  %and5 = and i64 %first, -4096
  %shr = lshr i64 %and5, 12
  %first6 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 1
  store i64 %shr, i64* %first6, align 8, !tbaa !752
  %add7 = add i64 %first, %size
  %sub8 = sub i64 %add7, 1
  %and9 = and i64 %sub8, -4096
  %shr10 = lshr i64 %and9, 12
  %last = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 2
  store i64 %shr10, i64* %last, align 8, !tbaa !753
  %last11 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 2
  %0 = load i64, i64* %last11, align 8, !tbaa !753
  %first12 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 1
  %1 = load i64, i64* %first12, align 8, !tbaa !752
  %sub13 = sub i64 %0, %1
  %add14 = add i64 %sub13, 1
  %conv15 = trunc i64 %add14 to i32
  %page_count = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 5
  store i32 %conv15, i32* %page_count, align 8, !tbaa !754
  %page_count16 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 5
  %2 = load i32, i32* %page_count16, align 8, !tbaa !754
  %cmp = icmp eq i32 %2, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %offset18 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 3
  %3 = load i32, i32* %offset18, align 8, !tbaa !750
  %tail19 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 4
  %4 = load i32, i32* %tail19, align 4, !tbaa !751
  %sub20 = sub i32 %4, %3
  store i32 %sub20, i32* %tail19, align 4, !tbaa !751
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_udma_fill_sg_list(%struct.ivtv_user_dma* %dma, %struct.ivtv_dma_page_info* %dma_page, i32 %map_offset) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %__dummy60 = alloca i64, align 8
  %__dummy261 = alloca i64, align 8
  %__dummy70 = alloca i64, align 8
  %__dummy271 = alloca i64, align 8
  %__dummy78 = alloca i64, align 8
  %__dummy279 = alloca i64, align 8
  %cmp = icmp slt i32 %map_offset, 0
  br i1 %cmp, label %cleanup105, label %if.end

if.end:                                           ; preds = %entry
  %offset1 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 3
  %0 = load i32, i32* %offset1, align 8, !tbaa !750
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc104, %for.inc ]
  %map_offset.addr.0 = phi i32 [ %map_offset, %if.end ], [ %map_offset.addr.1, %for.inc ]
  %offset.0 = phi i32 [ %0, %if.end ], [ %offset.1, %for.inc ]
  %retval.0 = phi i32 [ undef, %if.end ], [ %retval.3, %for.inc ]
  %page_count = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 5
  %1 = load i32, i32* %page_count, align 8, !tbaa !754
  %cmp2 = icmp slt i32 %i.0, %1
  br i1 %cmp2, label %for.body, label %cleanup105

for.body:                                         ; preds = %for.cond
  %page_count3 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 5
  %2 = load i32, i32* %page_count3, align 8, !tbaa !754
  %sub = sub nsw i32 %2, 1
  %cmp4 = icmp eq i32 %i.0, %sub
  br i1 %cmp4, label %cond.true, label %cond.false

cond.true:                                        ; preds = %for.body
  %tail = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %dma_page, i32 0, i32 4
  %3 = load i32, i32* %tail, align 4, !tbaa !751
  %conv = zext i32 %3 to i64
  br label %cond.end

cond.false:                                       ; preds = %for.body
  %conv5 = sext i32 %offset.0 to i64
  %sub6 = sub i64 4096, %conv5
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %conv, %cond.true ], [ %sub6, %cond.false ]
  %conv7 = trunc i64 %cond to i32
  %map = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom = sext i32 %map_offset.addr.0 to i64
  %arrayidx = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map, i64 0, i64 %idxprom
  %4 = load %struct.page*, %struct.page** %arrayidx, align 8, !tbaa !86
  %call = call i32 @PageHighMem()
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then8, label %if.else93

if.then8:                                         ; preds = %cond.end
  %bouncemap = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 3
  %idxprom9 = sext i32 %map_offset.addr.0 to i64
  %arrayidx10 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap, i64 0, i64 %idxprom9
  %5 = load %struct.page*, %struct.page** %arrayidx10, align 8, !tbaa !86
  %cmp11 = icmp eq %struct.page* %5, null
  br i1 %cmp11, label %if.then13, label %if.end18

if.then13:                                        ; preds = %if.then8
  %call14 = call %struct.page* @alloc_pages(i32 20971712, i32 0)
  %bouncemap15 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 3
  %idxprom16 = sext i32 %map_offset.addr.0 to i64
  %arrayidx17 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap15, i64 0, i64 %idxprom16
  store %struct.page* %call14, %struct.page** %arrayidx17, align 8, !tbaa !86
  br label %if.end18

if.end18:                                         ; preds = %if.then13, %if.then8
  %bouncemap19 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 3
  %idxprom20 = sext i32 %map_offset.addr.0 to i64
  %arrayidx21 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap19, i64 0, i64 %idxprom20
  %6 = load %struct.page*, %struct.page** %arrayidx21, align 8, !tbaa !86
  %cmp22 = icmp eq %struct.page* %6, null
  br i1 %cmp22, label %LeafBlock, label %do.body26

do.body26:                                        ; preds = %if.end18
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #8
  %cmp27 = icmp eq i64* %__dummy, %__dummy2
  %conv28 = zext i1 %cmp27 to i32
  %9 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %call29 = call i64 @arch_local_irq_save()
  call void @trace_hardirqs_off()
  %map32 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom33 = sext i32 %map_offset.addr.0 to i64
  %arrayidx34 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map32, i64 0, i64 %idxprom33
  %11 = load %struct.page*, %struct.page** %arrayidx34, align 8, !tbaa !86
  %call35 = call i8* @kmap_atomic(%struct.page* %11)
  %idx.ext = sext i32 %offset.0 to i64
  %add.ptr = getelementptr i8, i8* %call35, i64 %idx.ext
  %bouncemap36 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 3
  %idxprom37 = sext i32 %map_offset.addr.0 to i64
  %arrayidx38 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap36, i64 0, i64 %idxprom37
  %12 = load %struct.page*, %struct.page** %arrayidx38, align 8, !tbaa !86
  %call39 = call i8* @lowmem_page_address(%struct.page* %12)
  %idx.ext40 = sext i32 %offset.0 to i64
  %add.ptr41 = getelementptr i8, i8* %call39, i64 %idx.ext40
  %conv42 = zext i32 %conv7 to i64
  %call43 = call i8* @__memcpy(i8* %add.ptr41, i8* %add.ptr, i64 %conv42)
  %tobool46 = trunc i8 0 to i1
  br i1 %tobool46, label %if.then47, label %do.body49

if.then47:                                        ; preds = %do.body26
  call void @__compiletime_assert_62()
  br label %do.body49

do.body49:                                        ; preds = %if.then47, %do.body26
  %tobool50 = trunc i8 0 to i1
  %conv51 = zext i1 %tobool50 to i32
  %mul = mul nsw i32 2, %conv51
  %sub52 = sub nsw i32 1, %mul
  %13 = zext i32 %sub52 to i64
  call void @__kunmap_atomic()
  %14 = bitcast i64* %__dummy60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %14) #8
  %15 = bitcast i64* %__dummy261 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %15) #8
  %cmp62 = icmp eq i64* %__dummy60, %__dummy261
  %conv63 = zext i1 %cmp62 to i32
  %16 = bitcast i64* %__dummy261 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %16) #8
  %17 = bitcast i64* %__dummy60 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %17) #8
  %call66 = call i32 @arch_irqs_disabled_flags(i64 %call29)
  %tobool67 = icmp ne i32 %call66, 0
  br i1 %tobool67, label %do.body69, label %if.else

do.body69:                                        ; preds = %do.body49
  %18 = bitcast i64* %__dummy70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %18) #8
  %19 = bitcast i64* %__dummy271 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %19) #8
  %cmp72 = icmp eq i64* %__dummy70, %__dummy271
  %conv73 = zext i1 %cmp72 to i32
  %20 = bitcast i64* %__dummy271 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #8
  %21 = bitcast i64* %__dummy70 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #8
  call void @arch_local_irq_restore(i64 %call29)
  call void @trace_hardirqs_off()
  br label %do.end87

if.else:                                          ; preds = %do.body49
  call void @trace_hardirqs_on()
  %22 = bitcast i64* %__dummy78 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %22) #8
  %23 = bitcast i64* %__dummy279 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %23) #8
  %cmp80 = icmp eq i64* %__dummy78, %__dummy279
  %conv81 = zext i1 %cmp80 to i32
  %24 = bitcast i64* %__dummy279 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %24) #8
  %25 = bitcast i64* %__dummy78 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #8
  call void @arch_local_irq_restore(i64 %call29)
  br label %do.end87

do.end87:                                         ; preds = %if.else, %do.body69
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 7
  %idxprom88 = sext i32 %map_offset.addr.0 to i64
  %arrayidx89 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i64 0, i64 %idxprom88
  %bouncemap90 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 3
  %idxprom91 = sext i32 %map_offset.addr.0 to i64
  %arrayidx92 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap90, i64 0, i64 %idxprom91
  %26 = load %struct.page*, %struct.page** %arrayidx92, align 8, !tbaa !86
  call void @sg_set_page(%struct.scatterlist* %arrayidx89, %struct.page* %26, i32 %conv7, i32 %offset.0)
  br label %LeafBlock

LeafBlock:                                        ; preds = %do.end87, %if.end18
  %cleanup.dest.slot.0 = phi i32 [ 0, %do.end87 ], [ 1, %if.end18 ]
  %retval.1 = phi i32 [ %retval.0, %do.end87 ], [ -1, %if.end18 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end100, label %LeafBlock2

if.else93:                                        ; preds = %cond.end
  %SGlist94 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 7
  %idxprom95 = sext i32 %map_offset.addr.0 to i64
  %arrayidx96 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist94, i64 0, i64 %idxprom95
  %map97 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom98 = sext i32 %map_offset.addr.0 to i64
  %arrayidx99 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map97, i64 0, i64 %idxprom98
  %27 = load %struct.page*, %struct.page** %arrayidx99, align 8, !tbaa !86
  call void @sg_set_page(%struct.scatterlist* %arrayidx96, %struct.page* %27, i32 %conv7, i32 %offset.0)
  br label %if.end100

if.end100:                                        ; preds = %if.else93, %LeafBlock
  %retval.2 = phi i32 [ %retval.0, %if.else93 ], [ %retval.1, %LeafBlock ]
  %inc = add nsw i32 %map_offset.addr.0, 1
  br label %LeafBlock2

LeafBlock2:                                       ; preds = %if.end100, %LeafBlock
  %map_offset.addr.1 = phi i32 [ %inc, %if.end100 ], [ %map_offset.addr.0, %LeafBlock ]
  %offset.1 = phi i32 [ 0, %if.end100 ], [ %offset.0, %LeafBlock ]
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end100 ], [ %cleanup.dest.slot.0, %LeafBlock ]
  %retval.3 = phi i32 [ %retval.2, %if.end100 ], [ %retval.1, %LeafBlock ]
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %SwitchLeaf3, label %for.inc, label %cleanup105

for.inc:                                          ; preds = %LeafBlock2
  %inc104 = add nsw i32 %i.0, 1
  br label %for.cond

cleanup105:                                       ; preds = %LeafBlock2, %for.cond, %entry
  %retval.4 = phi i32 [ %map_offset, %entry ], [ %map_offset.addr.0, %for.cond ], [ %retval.3, %LeafBlock2 ]
  ret i32 %retval.4
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @PageHighMem() #4 {
entry:
  ret i32 0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.page* @alloc_pages(i32 %gfp_mask, i32 %order) #4 {
entry:
  %call = call %struct.page* @alloc_pages_current(i32 %gfp_mask, i32 %order)
  ret %struct.page* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @arch_local_irq_save() #4 {
entry:
  %call = call i64 @arch_local_save_flags()
  call void @arch_local_irq_disable()
  ret i64 %call
}

declare void @trace_hardirqs_off() #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kmap_atomic(%struct.page* %page) #4 {
entry:
  call void @__preempt_count_add(i32 1)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !755
  call void @pagefault_disable()
  %call = call i8* @lowmem_page_address(%struct.page* %page)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @lowmem_page_address(%struct.page* %page) #1 {
entry:
  %0 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %1 = inttoptr i64 %0 to %struct.page*
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %page to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64
  %shl = shl i64 %sub.ptr.div, 12
  %2 = load i64, i64* @page_offset_base, align 8, !tbaa !88
  %add = add i64 %shl, %2
  %3 = inttoptr i64 %add to i8*
  ret i8* %3
}

declare void @__compiletime_assert_62() #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @__kunmap_atomic() #4 {
entry:
  call void @pagefault_enable()
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !756
  call void @__preempt_count_sub(i32 1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @arch_irqs_disabled_flags(i64 %flags) #4 {
entry:
  %and = and i64 %flags, 512
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  ret i32 %lnot.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arch_local_irq_restore(i64 %f) #4 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 1, i32 0), align 8, !tbaa !757
  %cmp = icmp eq i8* %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %do.body2, label %do.end7

do.body2:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.687, i32 0, i32 0), i32 778, i64 12) #8, !srcloc !760
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %do.body2
  br label %do.body3

do.end7:                                          ; preds = %entry
  %1 = call { i64, i8* } asm sideeffect "771:\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,{di},1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 40, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 1, i32 0), i32 1, i64 %f, i8* undef) #8, !srcloc !761
  %asmresult = extractvalue { i64, i8* } %1, 0
  %asmresult8 = extractvalue { i64, i8* } %1, 1
  ret void
}

declare void @trace_hardirqs_on() #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @sg_set_page(%struct.scatterlist* %sg, %struct.page* %page, i32 %len, i32 %offset) #4 {
entry:
  call void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page)
  %offset1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 2
  store i32 %offset, i32* %offset1, align 8, !tbaa !762
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 3
  store i32 %len, i32* %length, align 4, !tbaa !764
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @sg_assign_page(%struct.scatterlist* %sg, %struct.page* %page) #4 {
entry:
  %page_link1 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %0 = load i64, i64* %page_link1, align 8, !tbaa !765
  %and = and i64 %0, 3
  %1 = ptrtoint %struct.page* %page to i64
  %and2 = and i64 %1, 3
  %tobool = icmp ne i64 %and2, 0
  %lnot = xor i1 %tobool, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.body11

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 90, i64 12) #8, !srcloc !766
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.body11:                                        ; preds = %entry
  %sg_magic = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 0
  %2 = load i64, i64* %sg_magic, align 8, !tbaa !767
  %cmp = icmp ne i64 %2, 2271560481
  %lnot13 = xor i1 %cmp, true
  %lnot15 = xor i1 %lnot13, true
  %lnot.ext16 = zext i1 %lnot15 to i32
  %conv17 = sext i32 %lnot.ext16 to i64
  %expval18 = call i64 @llvm.expect.i64(i64 %conv17, i64 0)
  %tobool19 = icmp ne i64 %expval18, 0
  br i1 %tobool19, label %do.body21, label %do.body30

do.body21:                                        ; preds = %do.body11
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 92, i64 12) #8, !srcloc !768
  br label %do.body22

do.body22:                                        ; preds = %do.body22, %do.body21
  br label %do.body22

do.body30:                                        ; preds = %do.body11
  %page_link31 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %3 = load i64, i64* %page_link31, align 8, !tbaa !765
  %and32 = and i64 %3, 1
  %tobool33 = icmp ne i64 %and32, 0
  %lnot34 = xor i1 %tobool33, true
  %lnot36 = xor i1 %lnot34, true
  %lnot.ext37 = zext i1 %lnot36 to i32
  %conv38 = sext i32 %lnot.ext37 to i64
  %expval39 = call i64 @llvm.expect.i64(i64 %conv38, i64 0)
  %tobool40 = icmp ne i64 %expval39, 0
  br i1 %tobool40, label %do.body42, label %do.end50

do.body42:                                        ; preds = %do.body30
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 93, i64 12) #8, !srcloc !769
  br label %do.body43

do.body43:                                        ; preds = %do.body43, %do.body42
  br label %do.body43

do.end50:                                         ; preds = %do.body30
  %4 = ptrtoint %struct.page* %page to i64
  %or = or i64 %and, %4
  %page_link51 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  store i64 %or, i64* %page_link51, align 8, !tbaa !765
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pagefault_enable() #4 {
entry:
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !770
  call void @pagefault_disabled_dec()
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__preempt_count_sub(i32 %val) #1 {
entry:
  %sub = sub nsw i32 0, %val
  call void asm "addl $1, %gs:$0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %sub, i32* @__preempt_count) #8, !srcloc !771
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @pagefault_disabled_dec() #1 {
entry:
  %call = call %struct.task_struct* @get_current.688()
  %pagefault_disabled = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call, i32 0, i32 209
  %0 = load i32, i32* %pagefault_disabled, align 8, !tbaa !772
  %dec = add nsw i32 %0, -1
  store i32 %dec, i32* %pagefault_disabled, align 8, !tbaa !772
  %call1 = call %struct.task_struct* @get_current.688()
  %pagefault_disabled2 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call1, i32 0, i32 209
  %1 = load i32, i32* %pagefault_disabled2, align 8, !tbaa !772
  %cmp = icmp slt i32 %1, 0
  %lnot = xor i1 %cmp, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %tobool = icmp ne i32 %lnot.ext, 0
  %lnot4 = xor i1 %tobool, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv = sext i32 %lnot.ext7 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool8 = icmp ne i64 %expval, 0
  br i1 %tobool8, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @warn_slowpath_null(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7.689, i32 0, i32 0), i32 15)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool9 = icmp ne i32 %lnot.ext, 0
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current.688() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !773
  ret %struct.task_struct* %0
}

declare void @warn_slowpath_null(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__preempt_count_add(i32 %val) #1 {
entry:
  call void asm "addl $1, %gs:$0", "=*m,ri,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count, i32 %val, i32* @__preempt_count) #8, !srcloc !774
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pagefault_disable() #4 {
entry:
  call void @pagefault_disabled_inc()
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !775
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @pagefault_disabled_inc() #1 {
entry:
  %call = call %struct.task_struct* @get_current.688()
  %pagefault_disabled = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call, i32 0, i32 209
  %0 = load i32, i32* %pagefault_disabled, align 8, !tbaa !772
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* %pagefault_disabled, align 8, !tbaa !772
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @arch_local_save_flags() #4 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), align 8, !tbaa !776
  %cmp = icmp eq i8* %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %do.body2, label %do.end7

do.body2:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.687, i32 0, i32 0), i32 773, i64 12) #8, !srcloc !777
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %do.body2
  br label %do.body3

do.end7:                                          ; preds = %entry
  %1 = call { i64, i8* } asm sideeffect "771:\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 39, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 0, i32 0), i32 1, i8* undef) #8, !srcloc !778
  %asmresult = extractvalue { i64, i8* } %1, 0
  %asmresult8 = extractvalue { i64, i8* } %1, 1
  %and = and i64 %asmresult, -1
  ret i64 %and
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @arch_local_irq_disable() #4 {
entry:
  %0 = load i8*, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 2, i32 0), align 8, !tbaa !779
  %cmp = icmp eq i8* %0, null
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %do.body2, label %do.end7

do.body2:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.687, i32 0, i32 0), i32 783, i64 12) #8, !srcloc !780
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %do.body2
  br label %do.body3

do.end7:                                          ; preds = %entry
  %1 = call { i64, i8* } asm sideeffect "771:\0A\09call *${3:c};\0A772:\0A.pushsection .parainstructions,\22a\22\0A .balign 8 \0A .quad  771b\0A  .byte ${2:c}\0A  .byte 772b-771b\0A  .short ${4:c}\0A.popsection\0A", "={ax},={rsp},i,i,i,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64 41, i8** getelementptr inbounds (%struct.pv_irq_ops, %struct.pv_irq_ops* @pv_irq_ops, i32 0, i32 2, i32 0), i32 1, i8* undef) #8, !srcloc !781
  %asmresult = extractvalue { i64, i8* } %1, 0
  %asmresult8 = extractvalue { i64, i8* } %1, 1
  ret void
}

declare %struct.page* @alloc_pages_current(i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ivtv_udma_fill_sg_array(%struct.ivtv_user_dma* %dma, i32 %buffer_offset, i32 %buffer_offset_2, i32 %split) #0 {
entry:
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 7
  %arraydecay = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %split.addr.0 = phi i32 [ %split, %entry ], [ %sub, %for.body ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %buffer_offset.addr.0 = phi i32 [ %buffer_offset, %entry ], [ %buffer_offset_2.add, %for.body ]
  %sg.0 = phi %struct.scatterlist* [ %arraydecay, %entry ], [ %call, %for.body ]
  %SG_length = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %0 = load i32, i32* %SG_length, align 8, !tbaa !782
  %cmp = icmp slt i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dma_length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg.0, i32 0, i32 5
  %1 = load i32, i32* %dma_length, align 8, !tbaa !783
  %SGarray = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray, i64 0, i64 %idxprom
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx, i32 0, i32 2
  store i32 %1, i32* %size, align 4, !tbaa !653
  %dma_address = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg.0, i32 0, i32 4
  %2 = load i64, i64* %dma_address, align 8, !tbaa !784
  %conv = trunc i64 %2 to i32
  %SGarray1 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %idxprom2 = sext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray1, i64 0, i64 %idxprom2
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx3, i32 0, i32 0
  store i32 %conv, i32* %src, align 4, !tbaa !650
  %SGarray4 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %idxprom5 = sext i32 %i.0 to i64
  %arrayidx6 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray4, i64 0, i64 %idxprom5
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx6, i32 0, i32 1
  store i32 %buffer_offset.addr.0, i32* %dst, align 4, !tbaa !652
  %dma_length7 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg.0, i32 0, i32 5
  %3 = load i32, i32* %dma_length7, align 8, !tbaa !783
  %add = add i32 %buffer_offset.addr.0, %3
  %dma_length8 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg.0, i32 0, i32 5
  %4 = load i32, i32* %dma_length8, align 8, !tbaa !783
  %sub = sub i32 %split.addr.0, %4
  %cmp9 = icmp eq i32 %sub, 0
  %buffer_offset_2.add = select i1 %cmp9, i32 %buffer_offset_2, i32 %add
  %inc = add nsw i32 %i.0, 1
  %call = call %struct.scatterlist* @sg_next(%struct.scatterlist* %sg.0)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

declare %struct.scatterlist* @sg_next(%struct.scatterlist*) #2

; Function Attrs: nounwind uwtable
define void @ivtv_udma_alloc(%struct.ivtv* %itv) #0 {
entry:
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %0 = load i64, i64* %SG_handle, align 8, !tbaa !785
  %cmp = icmp eq i64 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %udma1 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SGarray = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma1, i32 0, i32 4
  %arraydecay = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray, i32 0, i32 0
  %2 = bitcast %struct.exception_table_entry* %arraydecay to i8*
  %call = call i64 @pci_map_single.692(%struct.pci_dev* %1, i8* %2, i64 8448, i32 1)
  %udma2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle3 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma2, i32 0, i32 5
  store i64 %call, i64* %SG_handle3, align 8, !tbaa !785
  call void @ivtv_udma_sync_for_cpu(%struct.ivtv* %itv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @pci_map_single.692(%struct.pci_dev* %hwdev, i8* %ptr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  %call = call i64 @dma_map_single_attrs.699(%struct.device* %cond, i8* %ptr, i64 %size, i32 %direction, i64 0)
  ret i64 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_udma_sync_for_cpu(%struct.ivtv* %itv) #4 {
entry:
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %1 = load i64, i64* %SG_handle, align 8, !tbaa !785
  call void @pci_dma_sync_single_for_cpu.693(%struct.pci_dev* %0, i64 %1, i64 8448, i32 1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_cpu.693(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_cpu.694(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_cpu.694(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 337, i64 12) #8, !srcloc !786
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_cpu = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu, align 8, !tbaa !691
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_cpu13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 10
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_cpu13, align 8, !tbaa !691
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_cpu(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev) #4 {
entry:
  %magicptr = ptrtoint %struct.device* %dev to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %dma_ops = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops, align 8, !tbaa !338
  %tobool1 = icmp ne %struct.dma_map_ops* %0, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %dma_ops2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %1 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops2, align 8, !tbaa !338
  br label %return

if.end:                                           ; preds = %land.lhs.true
  %tobool3 = icmp ne %struct.device* %dev, null
  br i1 %tobool3, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !tbaa !339
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end, %entry
  %cond = phi %struct.bus_type* [ %2, %cond.true ], [ null, %entry ], [ null, %if.end ]
  %call = call %struct.dma_map_ops* @get_arch_dma_ops.698()
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.dma_map_ops* [ %1, %if.then ], [ %call, %cond.end ]
  ret %struct.dma_map_ops* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @valid_dma_direction.696(i32 %dma_direction) #4 {
entry:
  %switch = icmp ult i32 %dma_direction, 3
  %. = select i1 %switch, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_arch_dma_ops.698() #4 {
entry:
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !tbaa !86
  ret %struct.dma_map_ops* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @dma_map_single_attrs.699(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  %conv = trunc i64 %size to i32
  call void @kmemcheck_mark_initialized.700()
  %call1 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %do.body6, label %do.end11

do.body6:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 209, i64 12) #8, !srcloc !787
  br label %do.body7

do.body7:                                         ; preds = %do.body7, %do.body6
  br label %do.body7

do.end11:                                         ; preds = %entry
  %map_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 4
  %0 = load i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)** %map_page, align 8, !tbaa !714
  %1 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %2 = inttoptr i64 %1 to %struct.page*
  %3 = ptrtoint i8* %ptr to i64
  %call12 = call i64 @__phys_addr(i64 %3)
  %shr = lshr i64 %call12, 12
  %add.ptr = getelementptr inbounds %struct.page, %struct.page* %2, i64 %shr
  %4 = ptrtoint i8* %ptr to i64
  %and = and i64 %4, 4095
  %call13 = call i64 %0(%struct.device* %dev, %struct.page* %add.ptr, i64 %and, i64 %size, i32 %dir, i64 %attrs)
  %5 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %6 = inttoptr i64 %5 to %struct.page*
  %7 = ptrtoint i8* %ptr to i64
  %call14 = call i64 @__phys_addr(i64 %7)
  %shr15 = lshr i64 %call14, 12
  %add.ptr16 = getelementptr inbounds %struct.page, %struct.page* %6, i64 %shr15
  %8 = ptrtoint i8* %ptr to i64
  %and17 = and i64 %8, 4095
  call void @debug_dma_map_page(%struct.device* %dev, %struct.page* %add.ptr16, i64 %and17, i64 %size, i32 %dir, i64 %call13, i1 zeroext true)
  ret i64 %call13
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kmemcheck_mark_initialized.700() #4 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_udma_setup(%struct.ivtv* %itv, i64 %ivtv_dest_addr, i8* %userbuf, i32 %size_in_bytes) #0 {
entry:
  %user_dma = alloca %struct.ivtv_dma_page_info, align 8
  %0 = bitcast %struct.ivtv_dma_page_info* %user_dma to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %1 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %conv = trunc i64 %ivtv_dest_addr to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.703, i32 0, i32 0), i8* %arraydecay, i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %SG_length = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  %2 = load i32, i32* %SG_length, align 8, !tbaa !782
  %tobool1 = icmp ne i32 %2, 0
  br i1 %tobool1, label %do.body4, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %do.end
  %page_count = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %3 = load i32, i32* %page_count, align 8, !tbaa !788
  %tobool2 = icmp ne i32 %3, 0
  br i1 %tobool2, label %do.body4, label %if.end17

do.body4:                                         ; preds = %lor.lhs.false, %do.end
  %4 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and5 = and i32 1, %4
  %tobool6 = icmp ne i32 %and5, 0
  br i1 %tobool6, label %if.then7, label %cleanup

if.then7:                                         ; preds = %do.body4
  %v4l2_dev8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name9 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev8, i32 0, i32 4
  %arraydecay10 = getelementptr inbounds [36 x i8], [36 x i8]* %name9, i32 0, i32 0
  %SG_length11 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  %5 = load i32, i32* %SG_length11, align 8, !tbaa !782
  %page_count12 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %6 = load i32, i32* %page_count12, align 8, !tbaa !788
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1.704, i32 0, i32 0), i8* %arraydecay10, i32 %5, i32 %6)
  br label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  %7 = ptrtoint i8* %userbuf to i64
  %conv18 = sext i32 %size_in_bytes to i64
  call void @ivtv_udma_get_page_info(%struct.ivtv_dma_page_info* %user_dma, i64 %7, i64 %conv18)
  %page_count19 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %8 = load i32, i32* %page_count19, align 8, !tbaa !754
  %cmp = icmp sle i32 %8, 0
  br i1 %cmp, label %do.body22, label %if.end34

do.body22:                                        ; preds = %if.end17
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and23 = and i32 1, %9
  %tobool24 = icmp ne i32 %and23, 0
  br i1 %tobool24, label %if.then25, label %cleanup

if.then25:                                        ; preds = %do.body22
  %v4l2_dev26 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name27 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev26, i32 0, i32 4
  %arraydecay28 = getelementptr inbounds [36 x i8], [36 x i8]* %name27, i32 0, i32 0
  %page_count29 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %10 = load i32, i32* %page_count29, align 8, !tbaa !754
  %offset = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 3
  %11 = load i32, i32* %offset, align 8, !tbaa !750
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.2.705, i32 0, i32 0), i8* %arraydecay28, i32 %10, i32 %size_in_bytes, i32 %11)
  br label %cleanup

if.end34:                                         ; preds = %if.end17
  %uaddr = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 0
  %12 = load i64, i64* %uaddr, align 8, !tbaa !748
  %page_count35 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %13 = load i32, i32* %page_count35, align 8, !tbaa !754
  %conv36 = sext i32 %13 to i64
  %map = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 2
  %arraydecay37 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map, i32 0, i32 0
  %call38 = call i64 @get_user_pages_unlocked(i64 %12, i64 %conv36, %struct.page** %arraydecay37, i32 16)
  %conv39 = trunc i64 %call38 to i32
  %page_count40 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %14 = load i32, i32* %page_count40, align 8, !tbaa !754
  %cmp41 = icmp ne i32 %14, %conv39
  br i1 %cmp41, label %do.body44, label %if.end63

do.body44:                                        ; preds = %if.end34
  %15 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and45 = and i32 1, %15
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %do.end55

if.then47:                                        ; preds = %do.body44
  %v4l2_dev48 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name49 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev48, i32 0, i32 4
  %arraydecay50 = getelementptr inbounds [36 x i8], [36 x i8]* %name49, i32 0, i32 0
  %page_count51 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %16 = load i32, i32* %page_count51, align 8, !tbaa !754
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3.706, i32 0, i32 0), i8* %arraydecay50, i32 %conv39, i32 %16)
  br label %do.end55

do.end55:                                         ; preds = %if.then47, %do.body44
  %cmp56 = icmp sge i32 %conv39, 0
  br i1 %cmp56, label %if.then58, label %cleanup

if.then58:                                        ; preds = %do.end55
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.then58
  %i.0 = phi i32 [ 0, %if.then58 ], [ %inc, %for.body ]
  %cmp59 = icmp slt i32 %i.0, %conv39
  br i1 %cmp59, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %map61 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 2
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map61, i64 0, i64 %idxprom
  %17 = load %struct.page*, %struct.page** %arrayidx, align 8, !tbaa !86
  call void @put_page(%struct.page* %17)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

if.end63:                                         ; preds = %if.end34
  %page_count64 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %user_dma, i32 0, i32 5
  %18 = load i32, i32* %page_count64, align 8, !tbaa !754
  %page_count65 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  store i32 %18, i32* %page_count65, align 8, !tbaa !788
  %call66 = call i32 @ivtv_udma_fill_sg_list(%struct.ivtv_user_dma* %udma, %struct.ivtv_dma_page_info* %user_dma, i32 0)
  %cmp67 = icmp slt i32 %call66, 0
  br i1 %cmp67, label %if.then69, label %if.end82

if.then69:                                        ; preds = %if.end63
  br label %for.cond70

for.cond70:                                       ; preds = %for.body74, %if.then69
  %i.1 = phi i32 [ 0, %if.then69 ], [ %inc79, %for.body74 ]
  %page_count71 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %19 = load i32, i32* %page_count71, align 8, !tbaa !788
  %cmp72 = icmp slt i32 %i.1, %19
  br i1 %cmp72, label %for.body74, label %for.end80

for.body74:                                       ; preds = %for.cond70
  %map75 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 2
  %idxprom76 = sext i32 %i.1 to i64
  %arrayidx77 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map75, i64 0, i64 %idxprom76
  %20 = load %struct.page*, %struct.page** %arrayidx77, align 8, !tbaa !86
  call void @put_page(%struct.page* %20)
  %inc79 = add nsw i32 %i.1, 1
  br label %for.cond70

for.end80:                                        ; preds = %for.cond70
  %page_count81 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  store i32 0, i32* %page_count81, align 8, !tbaa !788
  br label %cleanup

if.end82:                                         ; preds = %if.end63
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %21 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 7
  %arraydecay83 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  %page_count84 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %22 = load i32, i32* %page_count84, align 8, !tbaa !788
  %call85 = call i32 @pci_map_sg(%struct.pci_dev* %21, %struct.scatterlist* %arraydecay83, i32 %22, i32 1)
  %SG_length86 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  store i32 %call85, i32* %SG_length86, align 8, !tbaa !782
  %conv87 = trunc i64 %ivtv_dest_addr to i32
  call void @ivtv_udma_fill_sg_array(%struct.ivtv_user_dma* %udma, i32 %conv87, i32 0, i32 -1)
  %SGarray = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 4
  %SG_length88 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  %23 = load i32, i32* %SG_length88, align 8, !tbaa !782
  %sub = sub nsw i32 %23, 1
  %idxprom89 = sext i32 %sub to i64
  %arrayidx90 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray, i64 0, i64 %idxprom89
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx90, i32 0, i32 2
  %24 = load i32, i32* %size, align 4, !tbaa !653
  %or = or i32 %24, -2147483648
  store i32 %or, i32* %size, align 4, !tbaa !653
  call void @ivtv_udma_sync_for_device(%struct.ivtv* %itv)
  %page_count91 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %25 = load i32, i32* %page_count91, align 8, !tbaa !788
  br label %cleanup

cleanup:                                          ; preds = %if.end82, %for.end80, %for.cond, %do.end55, %if.then25, %do.body22, %if.then7, %do.body4
  %retval.0 = phi i32 [ -12, %for.end80 ], [ %25, %if.end82 ], [ -16, %if.then7 ], [ -16, %do.body4 ], [ -22, %if.then25 ], [ -22, %do.body22 ], [ -22, %for.cond ], [ %conv39, %do.end55 ]
  %26 = bitcast %struct.ivtv_dma_page_info* %user_dma to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %26) #8
  ret i32 %retval.0
}

declare i64 @get_user_pages_unlocked(i64, i64, %struct.page**, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_page(%struct.page* %page) #4 {
entry:
  %call = call %struct.page* @compound_head(%struct.page* %page)
  %call1 = call i32 @put_page_testzero(%struct.page* %call)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__put_page(%struct.page* %call)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call zeroext i1 @is_zone_device_page(%struct.page* %call)
  %lnot = xor i1 %call2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @put_zone_device_page(%struct.page* %call)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pci_map_sg(%struct.pci_dev* %hwdev, %struct.scatterlist* %sg, i32 %nents, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  %call = call i32 @dma_map_sg_attrs(%struct.device* %cond, %struct.scatterlist* %sg, i32 %nents, i32 %direction, i64 0)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_udma_sync_for_device(%struct.ivtv* %itv) #4 {
entry:
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %1 = load i64, i64* %SG_handle, align 8, !tbaa !785
  call void @pci_dma_sync_single_for_device.707(%struct.pci_dev* %0, i64 %1, i64 8448, i32 1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_device.707(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_device.708(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_device.708(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 349, i64 12) #8, !srcloc !789
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_device = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device, align 8, !tbaa !657
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_device13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device13, align 8, !tbaa !657
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_device(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dma_map_sg_attrs(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %s.0 = phi %struct.scatterlist* [ %sg, %entry ], [ %call2, %for.body ]
  %cmp = icmp slt i32 %i.0, %nents
  br i1 %cmp, label %for.body, label %do.body

for.body:                                         ; preds = %for.cond
  call void @sg_virt(%struct.scatterlist* %s.0)
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %s.0, i32 0, i32 3
  %0 = load i32, i32* %length, align 4, !tbaa !764
  call void @kmemcheck_mark_initialized.700()
  %inc = add nsw i32 %i.0, 1
  %call2 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %s.0)
  br label %for.cond

do.body:                                          ; preds = %for.cond
  %call3 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call3, 0
  %lnot = xor i1 %tobool, true
  %lnot4 = xor i1 %lnot, true
  %lnot5 = xor i1 %lnot4, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool6 = icmp ne i64 %expval, 0
  br i1 %tobool6, label %do.body7, label %do.end12

do.body7:                                         ; preds = %do.body
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 246, i64 12) #8, !srcloc !790
  br label %do.body8

do.body8:                                         ; preds = %do.body8, %do.body7
  br label %do.body8

do.end12:                                         ; preds = %do.body
  %map_sg = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 6
  %1 = load i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)** %map_sg, align 8, !tbaa !791
  %call13 = call i32 %1(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs)
  %cmp15 = icmp slt i32 %call13, 0
  %lnot17 = xor i1 %cmp15, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %do.body25, label %do.end33

do.body25:                                        ; preds = %do.end12
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 248, i64 12) #8, !srcloc !792
  br label %do.body26

do.body26:                                        ; preds = %do.body26, %do.body25
  br label %do.body26

do.end33:                                         ; preds = %do.end12
  call void @debug_dma_map_sg(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %call13, i32 %dir)
  ret i32 %call13
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @sg_virt(%struct.scatterlist* %sg) #4 {
entry:
  %call = call %struct.page* @sg_page(%struct.scatterlist* %sg)
  %call1 = call i8* @lowmem_page_address(%struct.page* %call)
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 2
  %0 = load i32, i32* %offset, align 8, !tbaa !762
  %idx.ext = zext i32 %0 to i64
  %add.ptr = getelementptr i8, i8* %call1, i64 %idx.ext
  ret void
}

declare void @debug_dma_map_sg(%struct.device*, %struct.scatterlist*, i32, i32, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.page* @sg_page(%struct.scatterlist* %sg) #4 {
entry:
  %sg_magic = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 0
  %0 = load i64, i64* %sg_magic, align 8, !tbaa !767
  %cmp = icmp ne i64 %0, 2271560481
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %do.body2, label %do.body8

do.body2:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 123, i64 12) #8, !srcloc !793
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %do.body2
  br label %do.body3

do.body8:                                         ; preds = %entry
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %1 = load i64, i64* %page_link, align 8, !tbaa !765
  %and = and i64 %1, 1
  %tobool9 = icmp ne i64 %and, 0
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %do.body18, label %do.end26

do.body18:                                        ; preds = %do.body8
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 124, i64 12) #8, !srcloc !794
  br label %do.body19

do.body19:                                        ; preds = %do.body19, %do.body18
  br label %do.body19

do.end26:                                         ; preds = %do.body8
  %page_link27 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %2 = load i64, i64* %page_link27, align 8, !tbaa !765
  %and28 = and i64 %2, -4
  %3 = inttoptr i64 %and28 to %struct.page*
  ret %struct.page* %3
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.page* @compound_head(%struct.page* %page) #4 {
entry:
  %__u = alloca %union.anon.3, align 8
  %0 = bitcast %union.anon.3* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 4
  %2 = bitcast %union.anon.0* %1 to %struct.arch_uprobe_task*
  %compound_head = getelementptr inbounds %struct.arch_uprobe_task, %struct.arch_uprobe_task* %2, i32 0, i32 0
  %3 = bitcast i64* %compound_head to i8*
  %__c = bitcast %union.anon.3* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.712(i8* %3, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.3* %__u to i64*
  %4 = load i64, i64* %__val, align 8, !tbaa !142
  %5 = bitcast %union.anon.3* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %and = and i64 %4, 1
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  %sub = sub i64 %4, 1
  %6 = inttoptr i64 %sub to %struct.page*
  %retval.0 = select i1 %tobool2, %struct.page* %6, %struct.page* %page
  ret %struct.page* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_page_testzero(%struct.page* %page) #4 {
entry:
  %call = call i32 @page_ref_count(%struct.page* %page)
  %cmp = icmp eq i32 %call, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %do.end7

if.then:                                          ; preds = %entry
  call void @dump_page(%struct.page* %page, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41.849, i32 0, i32 0))
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42.850, i32 0, i32 0), i32 462, i64 12) #8, !srcloc !795
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %if.then
  br label %do.body3

do.end7:                                          ; preds = %entry
  %call8 = call i32 @page_ref_dec_and_test(%struct.page* %page)
  ret i32 %call8
}

declare void @__put_page(%struct.page*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_zone_device_page(%struct.page* %page) #4 {
entry:
  %call = call i32 @page_zonenum(%struct.page* %page)
  %cmp = icmp eq i32 %call, 4
  ret i1 %cmp
}

declare void @put_zone_device_page(%struct.page*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_zonenum(%struct.page* %page) #4 {
entry:
  %flags = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 0
  %0 = load i64, i64* %flags, align 16, !tbaa !796
  %shr = lshr i64 %0, 51
  %and = and i64 %shr, 7
  %conv = trunc i64 %and to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_ref_count(%struct.page* %page) #4 {
entry:
  %0 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 3
  %1 = bitcast %union.anon.3* %0 to %struct.anon.40*
  %_refcount = getelementptr inbounds %struct.anon.40, %struct.anon.40* %1, i32 0, i32 1
  %call = call i32 @atomic_read.711(%struct.atomic_t* %_refcount)
  ret i32 %call
}

declare void @dump_page(%struct.page*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_ref_dec_and_test(%struct.page* %page) #4 {
entry:
  %0 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 3
  %1 = bitcast %union.anon.3* %0 to %struct.anon.40*
  %_refcount = getelementptr inbounds %struct.anon.40, %struct.anon.40* %1, i32 0, i32 1
  %call = call zeroext i1 @atomic_dec_and_test(%struct.atomic_t* %_refcount)
  %conv = zext i1 %call to i32
  %call1 = call zeroext i1 @static_key_false(%struct.qspinlock* getelementptr inbounds (%struct.tracepoint, %struct.tracepoint* @__tracepoint_page_ref_mod_and_test, i32 0, i32 1))
  br i1 %call1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__page_ref_mod_and_test(%struct.page* %page, i32 -1, i32 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %conv
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @atomic_dec_and_test(%struct.atomic_t* %v) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0;\0A\09sete $1\0A", "=*m,=*qm,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i8* %c, i32* %counter) #8, !srcloc !798
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @static_key_false(%struct.qspinlock* %key) #1 {
entry:
  %call = call i32 @static_key_count(%struct.qspinlock* %key)
  %cmp = icmp sgt i32 %call, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  %. = select i1 %tobool, i1 true, i1 false
  ret i1 %.
}

declare void @__page_ref_mod_and_test(%struct.page*, i32, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @static_key_count(%struct.qspinlock* %key) #4 {
entry:
  %enabled = getelementptr inbounds %struct.qspinlock, %struct.qspinlock* %key, i32 0, i32 0
  %call = call i32 @atomic_read.711(%struct.atomic_t* %enabled)
  ret i32 %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.711(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.712(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.712(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !799
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !800
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_udma_unmap(%struct.ivtv* %itv) #0 {
entry:
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.715, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %page_count = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %1 = load i32, i32* %page_count, align 8, !tbaa !788
  %cmp = icmp eq i32 %1, 0
  br i1 %cmp, label %cleanup.cont, label %if.end2

if.end2:                                          ; preds = %do.end
  %SG_length = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  %2 = load i32, i32* %SG_length, align 8, !tbaa !782
  %tobool3 = icmp ne i32 %2, 0
  br i1 %tobool3, label %if.then4, label %if.end8

if.then4:                                         ; preds = %if.end2
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %3 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 7
  %arraydecay5 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  %page_count6 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %4 = load i32, i32* %page_count6, align 8, !tbaa !788
  call void @pci_unmap_sg(%struct.pci_dev* %3, %struct.scatterlist* %arraydecay5, i32 %4, i32 1)
  %SG_length7 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 6
  store i32 0, i32* %SG_length7, align 8, !tbaa !782
  br label %if.end8

if.end8:                                          ; preds = %if.then4, %if.end2
  call void @ivtv_udma_sync_for_cpu(%struct.ivtv* %itv)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end8
  %i.0 = phi i32 [ 0, %if.end8 ], [ %inc, %for.body ]
  %page_count9 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  %5 = load i32, i32* %page_count9, align 8, !tbaa !788
  %cmp10 = icmp slt i32 %i.0, %5
  br i1 %cmp10, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %map = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 2
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map, i64 0, i64 %idxprom
  %6 = load %struct.page*, %struct.page** %arrayidx, align 8, !tbaa !86
  call void @put_page(%struct.page* %6)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %page_count11 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 1
  store i32 0, i32* %page_count11, align 8, !tbaa !788
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %for.end, %do.end
  %cleanup.dest.slot.0 = phi i32 [ 0, %for.end ], [ 1, %do.end ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_unmap_sg(%struct.pci_dev* %hwdev, %struct.scatterlist* %sg, i32 %nents, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_unmap_sg_attrs(%struct.device* %cond, %struct.scatterlist* %sg, i32 %nents, i32 %direction, i64 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_unmap_sg_attrs(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 260, i64 12) #8, !srcloc !801
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  call void @debug_dma_unmap_sg(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir)
  %unmap_sg = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 7
  %0 = load void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)** %unmap_sg, align 8, !tbaa !802
  %tobool11 = icmp ne void (%struct.device*, %struct.scatterlist*, i32, i32, i64)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %unmap_sg13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 7
  %1 = load void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)** %unmap_sg13, align 8, !tbaa !802
  call void %1(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  ret void
}

declare void @debug_dma_unmap_sg(%struct.device*, %struct.scatterlist*, i32, i32) #2

; Function Attrs: nounwind uwtable
define void @ivtv_udma_free(%struct.ivtv* %itv) #0 {
entry:
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %0 = load i64, i64* %SG_handle, align 8, !tbaa !785
  %tobool = icmp ne i64 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %pdev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %1 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %udma1 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle2 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma1, i32 0, i32 5
  %2 = load i64, i64* %SG_handle2, align 8, !tbaa !785
  call void @pci_unmap_single.718(%struct.pci_dev* %1, i64 %2, i64 8448, i32 1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %udma3 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_length = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma3, i32 0, i32 6
  %3 = load i32, i32* %SG_length, align 8, !tbaa !803
  %tobool4 = icmp ne i32 %3, 0
  br i1 %tobool4, label %if.then5, label %if.end9

if.then5:                                         ; preds = %if.end
  %pdev6 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 0
  %4 = load %struct.pci_dev*, %struct.pci_dev** %pdev6, align 8, !tbaa !226
  %udma7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma7, i32 0, i32 7
  %arraydecay = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  %udma8 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %page_count = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma8, i32 0, i32 1
  %5 = load i32, i32* %page_count, align 8, !tbaa !804
  call void @pci_unmap_sg(%struct.pci_dev* %4, %struct.scatterlist* %arraydecay, i32 %5, i32 1)
  br label %if.end9

if.end9:                                          ; preds = %if.then5, %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end9
  %i.0 = phi i32 [ 0, %if.end9 ], [ %inc, %for.inc ]
  %conv = sext i32 %i.0 to i64
  %cmp = icmp ult i64 %conv, 704
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %udma11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %bouncemap = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma11, i32 0, i32 3
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap, i64 0, i64 %idxprom
  %6 = load %struct.page*, %struct.page** %arrayidx, align 8, !tbaa !86
  %tobool12 = icmp ne %struct.page* %6, null
  br i1 %tobool12, label %if.then13, label %for.inc

if.then13:                                        ; preds = %for.body
  %udma14 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %bouncemap15 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma14, i32 0, i32 3
  %idxprom16 = sext i32 %i.0 to i64
  %arrayidx17 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %bouncemap15, i64 0, i64 %idxprom16
  %7 = load %struct.page*, %struct.page** %arrayidx17, align 8, !tbaa !86
  call void @__free_pages(%struct.page* %7, i32 0)
  br label %for.inc

for.inc:                                          ; preds = %if.then13, %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_unmap_single.718(%struct.pci_dev* %hwdev, i64 %dma_addr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_unmap_single_attrs.719(%struct.device* %cond, i64 %dma_addr, i64 %size, i32 %direction, i64 0)
  ret void
}

declare void @__free_pages(%struct.page*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_unmap_single_attrs.719(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.695(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.696(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 226, i64 12) #8, !srcloc !805
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %unmap_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %0 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page, align 8, !tbaa !711
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32, i64)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %unmap_page13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %1 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page13, align 8, !tbaa !711
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_unmap_page(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i1 zeroext true)
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_udma_start(%struct.ivtv* %itv) #0 {
entry:
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 32, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5.722, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %udma = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %1 = load i64, i64* %SG_handle, align 8, !tbaa !785
  %conv = trunc i64 %1 to i32
  %reg_mem = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %2, i64 8
  call void @writel.723(i32 %conv, i8* %add.ptr)
  %reg_mem2 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem2, align 8, !tbaa !171
  %add.ptr3 = getelementptr i8, i8* %3, i64 0
  %call4 = call i32 @readl.724(i8* %add.ptr3)
  %or = or i32 %call4, 1
  %reg_mem5 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %4, i64 0
  call void @writel.723(i32 %or, i8* %add.ptr6)
  %reg_mem7 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem7, align 8, !tbaa !171
  %add.ptr8 = getelementptr i8, i8* %5, i64 0
  %call9 = call i32 @readl.724(i8* %add.ptr8)
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  call void @set_bit.725(i64 0, i64* %i_flags)
  %i_flags11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  call void @set_bit.725(i64 1, i64* %i_flags11)
  %i_flags12 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  call void @clear_bit.726(i64 2, i64* %i_flags12)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.723(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !806
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.724(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !807
  ret i32 %1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.725(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !808
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.726(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !809
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_udma_prepare(%struct.ivtv* %itv) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %dma_reg_lock = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 53
  %call = call %struct.raw_spinlock* @spinlock_check.729(%struct.spinlock* %dma_reg_lock)
  %call2 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %i_flags = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  %call5 = call zeroext i1 @constant_test_bit.730(i64 0, i64* %i_flags)
  br i1 %call5, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  call void @ivtv_udma_start(%struct.ivtv* %itv)
  br label %if.end

if.else:                                          ; preds = %entry
  %i_flags10 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 26
  call void @set_bit.725(i64 2, i64* %i_flags10)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %dma_reg_lock11 = getelementptr inbounds %struct.ivtv, %struct.ivtv* %itv, i32 0, i32 53
  call void @spin_unlock_irqrestore.731(%struct.spinlock* %dma_reg_lock11, i64 %call2)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check.729(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.730(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock_irqrestore.731(%struct.spinlock* %lock, i64 %flags) #1 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

; Function Attrs: nounwind uwtable
define i64 @ivtv_write_vbi_from_user(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %sliced, i64 %cnt) #0 {
entry:
  %cc = alloca %struct.vbi_cc, align 1
  %found_cc = alloca i32, align 4
  %d = alloca %struct.v4l2_sliced_vbi_data, align 4
  %0 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds (%struct.vbi_cc, %struct.vbi_cc* @ivtv_vbi_work_handler.cc, i32 0, i32 0, i32 0), i64 4, i32 1, i1 false)
  %2 = bitcast i32* %found_cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 0, i32* %found_cc, align 4, !tbaa !120
  %3 = bitcast %struct.v4l2_sliced_vbi_data* %d to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %3) #8
  %mul = mul i64 %cnt, 64
  br label %for.cond

for.cond:                                         ; preds = %if.end, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %if.end ]
  %cmp = icmp ult i64 %i.0, %cnt
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %4 = bitcast %struct.v4l2_sliced_vbi_data* %d to i8*
  %add.ptr = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %sliced, i64 %i.0
  %5 = bitcast %struct.v4l2_sliced_vbi_data* %add.ptr to i8*
  %call = call i64 @copy_from_user.734(i8* %4, i8* %5, i64 64)
  %tobool = icmp ne i64 %call, 0
  br i1 %tobool, label %for.end, label %if.end

if.end:                                           ; preds = %for.body
  call void @ivtv_write_vbi_line(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %d, %struct.vbi_cc* %cc, i32* %found_cc)
  %inc = add i64 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %ret.0 = phi i64 [ -14, %for.body ], [ %mul, %for.cond ]
  %6 = load i32, i32* %found_cc, align 4, !tbaa !120
  %tobool1 = icmp ne i32 %6, 0
  br i1 %tobool1, label %if.then2, label %if.end3

if.then2:                                         ; preds = %for.end
  call void @ivtv_write_vbi_cc_lines(%struct.ivtv.1060* %itv, %struct.vbi_cc* %cc)
  br label %if.end3

if.end3:                                          ; preds = %if.then2, %for.end
  %7 = bitcast %struct.v4l2_sliced_vbi_data* %d to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %7) #8
  %8 = bitcast i32* %found_cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #8
  %9 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #8
  ret i64 %ret.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_from_user.734(i8* %to, i8* %from, i64 %n) #1 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %to, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  call void @__might_fault(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 696)
  %conv1 = trunc i64 %n to i32
  call void @kasan_check_write(i8* %to, i32 %conv1)
  %cmp = icmp slt i32 %conv, 0
  %conv3 = sext i32 %conv to i64
  %cmp4 = icmp uge i64 %conv3, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp4
  %lnot = xor i1 %1, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @check_object_size.737(i8* %to, i64 %n, i1 zeroext false)
  %conv8 = trunc i64 %n to i32
  %call = call i64 @_copy_from_user(i8* %to, i8* %from, i32 %conv8)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @copy_user_overflow.738(i32 %conv, i64 %n)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.else ]
  ret i64 %n.addr.0
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_write_vbi_line(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %d, %struct.vbi_cc* %cc, i32* %found_cc) #0 {
entry:
  %vps = alloca %struct.vbi_vps, align 1
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 0
  %0 = load i32, i32* %id, align 4, !tbaa !810
  %cmp = icmp eq i32 %0, 4096
  br i1 %cmp, label %land.lhs.true, label %if.else15

land.lhs.true:                                    ; preds = %entry
  %line = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 2
  %1 = load i32, i32* %line, align 4, !tbaa !812
  %cmp1 = icmp eq i32 %1, 21
  br i1 %cmp1, label %if.then, label %if.else15

if.then:                                          ; preds = %land.lhs.true
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 1
  %2 = load i32, i32* %field, align 4, !tbaa !813
  %tobool = icmp ne i32 %2, 0
  %data = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %data, i64 0, i64 0
  %3 = load i8, i8* %arrayidx, align 4, !tbaa !142
  br i1 %tobool, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.then
  %even = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  %arrayidx3 = getelementptr inbounds [2 x i8], [2 x i8]* %even, i64 0, i64 0
  store i8 %3, i8* %arrayidx3, align 1, !tbaa !142
  %data4 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx5 = getelementptr inbounds [48 x i8], [48 x i8]* %data4, i64 0, i64 1
  %4 = load i8, i8* %arrayidx5, align 1, !tbaa !142
  %even6 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  br label %if.end

if.else:                                          ; preds = %if.then
  %odd = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx10 = getelementptr inbounds [2 x i8], [2 x i8]* %odd, i64 0, i64 0
  store i8 %3, i8* %arrayidx10, align 1, !tbaa !142
  %data11 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx12 = getelementptr inbounds [48 x i8], [48 x i8]* %data11, i64 0, i64 1
  %5 = load i8, i8* %arrayidx12, align 1, !tbaa !142
  %odd13 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %odd13.sink = phi [2 x i8]* [ %odd13, %if.else ], [ %even6, %if.then2 ]
  %.sink = phi i8 [ %5, %if.else ], [ %4, %if.then2 ]
  %arrayidx14 = getelementptr inbounds [2 x i8], [2 x i8]* %odd13.sink, i64 0, i64 1
  store i8 %.sink, i8* %arrayidx14, align 1, !tbaa !142
  store i32 1, i32* %found_cc, align 4, !tbaa !120
  br label %if.end72

if.else15:                                        ; preds = %land.lhs.true, %entry
  %id16 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 0
  %6 = load i32, i32* %id16, align 4, !tbaa !810
  %cmp17 = icmp eq i32 %6, 1024
  br i1 %cmp17, label %land.lhs.true18, label %if.else49

land.lhs.true18:                                  ; preds = %if.else15
  %line19 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 2
  %7 = load i32, i32* %line19, align 4, !tbaa !812
  %cmp20 = icmp eq i32 %7, 16
  br i1 %cmp20, label %land.lhs.true21, label %if.else49

land.lhs.true21:                                  ; preds = %land.lhs.true18
  %field22 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 1
  %8 = load i32, i32* %field22, align 4, !tbaa !813
  %cmp23 = icmp eq i32 %8, 0
  br i1 %cmp23, label %if.then24, label %if.else49

if.then24:                                        ; preds = %land.lhs.true21
  %9 = bitcast %struct.vbi_vps* %vps to i8*
  call void @llvm.lifetime.start.p0i8(i64 5, i8* %9) #8
  %data25 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx26 = getelementptr inbounds [48 x i8], [48 x i8]* %data25, i64 0, i64 2
  %10 = load i8, i8* %arrayidx26, align 2, !tbaa !142
  %data27 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps, i32 0, i32 0
  %arrayidx28 = getelementptr inbounds [5 x i8], [5 x i8]* %data27, i64 0, i64 0
  store i8 %10, i8* %arrayidx28, align 1, !tbaa !142
  %data29 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx30 = getelementptr inbounds [48 x i8], [48 x i8]* %data29, i64 0, i64 8
  %11 = load i8, i8* %arrayidx30, align 4, !tbaa !142
  %data31 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps, i32 0, i32 0
  %arrayidx32 = getelementptr inbounds [5 x i8], [5 x i8]* %data31, i64 0, i64 1
  store i8 %11, i8* %arrayidx32, align 1, !tbaa !142
  %data33 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx34 = getelementptr inbounds [48 x i8], [48 x i8]* %data33, i64 0, i64 9
  %12 = load i8, i8* %arrayidx34, align 1, !tbaa !142
  %data35 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps, i32 0, i32 0
  %arrayidx36 = getelementptr inbounds [5 x i8], [5 x i8]* %data35, i64 0, i64 2
  store i8 %12, i8* %arrayidx36, align 1, !tbaa !142
  %data37 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx38 = getelementptr inbounds [48 x i8], [48 x i8]* %data37, i64 0, i64 10
  %13 = load i8, i8* %arrayidx38, align 2, !tbaa !142
  %data39 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps, i32 0, i32 0
  %arrayidx40 = getelementptr inbounds [5 x i8], [5 x i8]* %data39, i64 0, i64 3
  store i8 %13, i8* %arrayidx40, align 1, !tbaa !142
  %data41 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx42 = getelementptr inbounds [48 x i8], [48 x i8]* %data41, i64 0, i64 11
  %14 = load i8, i8* %arrayidx42, align 1, !tbaa !142
  %data43 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps, i32 0, i32 0
  %arrayidx44 = getelementptr inbounds [5 x i8], [5 x i8]* %data43, i64 0, i64 4
  store i8 %14, i8* %arrayidx44, align 1, !tbaa !142
  %15 = bitcast %struct.vbi_vps* %vps to i8*
  %vps_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 23
  %16 = bitcast %struct.vbi_vps* %vps_payload to i8*
  %call = call i32 @memcmp(i8* %15, i8* %16, i64 5)
  %tobool45 = icmp ne i32 %call, 0
  br i1 %tobool45, label %if.then46, label %if.end48

if.then46:                                        ; preds = %if.then24
  %vps_payload47 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 23
  %17 = bitcast %struct.vbi_vps* %vps_payload47 to i8*
  %18 = bitcast %struct.vbi_vps* %vps to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 5, i32 1, i1 false), !tbaa.struct !814
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @set_bit.735(i64 11, i64* %i_flags)
  br label %if.end48

if.end48:                                         ; preds = %if.then46, %if.then24
  %19 = bitcast %struct.vbi_vps* %vps to i8*
  call void @llvm.lifetime.end.p0i8(i64 5, i8* %19) #8
  br label %if.end72

if.else49:                                        ; preds = %land.lhs.true21, %land.lhs.true18, %if.else15
  %id50 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 0
  %20 = load i32, i32* %id50, align 4, !tbaa !810
  %cmp51 = icmp eq i32 %20, 16384
  br i1 %cmp51, label %land.lhs.true52, label %if.end72

land.lhs.true52:                                  ; preds = %if.else49
  %line53 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 2
  %21 = load i32, i32* %line53, align 4, !tbaa !812
  %cmp54 = icmp eq i32 %21, 23
  br i1 %cmp54, label %land.lhs.true55, label %if.end72

land.lhs.true55:                                  ; preds = %land.lhs.true52
  %field56 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 1
  %22 = load i32, i32* %field56, align 4, !tbaa !813
  %cmp57 = icmp eq i32 %22, 0
  br i1 %cmp57, label %if.then58, label %if.end72

if.then58:                                        ; preds = %land.lhs.true55
  %data59 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx60 = getelementptr inbounds [48 x i8], [48 x i8]* %data59, i64 0, i64 0
  %23 = load i8, i8* %arrayidx60, align 4, !tbaa !142
  %conv = zext i8 %23 to i32
  %data61 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %d, i32 0, i32 4
  %arrayidx62 = getelementptr inbounds [48 x i8], [48 x i8]* %data61, i64 0, i64 1
  %24 = load i8, i8* %arrayidx62, align 1, !tbaa !142
  %conv63 = zext i8 %24 to i32
  %shl = shl i32 %conv63, 8
  %or = or i32 %conv, %shl
  %wss_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 21
  %25 = load i32, i32* %wss_payload, align 8, !tbaa !815
  %cmp64 = icmp ne i32 %25, %or
  br i1 %cmp64, label %if.then66, label %if.end72

if.then66:                                        ; preds = %if.then58
  %wss_payload67 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 21
  store i32 %or, i32* %wss_payload67, align 8, !tbaa !815
  %i_flags68 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @set_bit.735(i64 10, i64* %i_flags68)
  br label %if.end72

if.end72:                                         ; preds = %if.then66, %if.then58, %land.lhs.true55, %land.lhs.true52, %if.else49, %if.end48, %if.end
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_write_vbi_cc_lines(%struct.ivtv.1060* %itv, %struct.vbi_cc* %cc) #0 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %cc_payload_idx = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %0 = load i32, i32* %cc_payload_idx, align 8, !tbaa !816
  %conv = sext i32 %0 to i64
  %cmp = icmp ult i64 %conv, 256
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %cc_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 18
  %cc_payload_idx2 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %1 = load i32, i32* %cc_payload_idx2, align 8, !tbaa !816
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [256 x %struct.vbi_cc], [256 x %struct.vbi_cc]* %cc_payload, i64 0, i64 %idxprom
  %2 = bitcast %struct.vbi_cc* %arrayidx to i8*
  %3 = bitcast %struct.vbi_cc* %cc to i8*
  %call = call i8* @__memcpy(i8* %2, i8* %3, i64 4)
  %cc_payload_idx3 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %4 = load i32, i32* %cc_payload_idx3, align 8, !tbaa !816
  %inc = add nsw i32 %4, 1
  store i32 %inc, i32* %cc_payload_idx3, align 8, !tbaa !816
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @set_bit.735(i64 9, i64* %i_flags)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.735(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !817
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_object_size.737(i8* %ptr, i64 %n, i1 zeroext %to_user) #1 {
entry:
  %frombool = zext i1 %to_user to i8
  %tobool = trunc i8 %frombool to i1
  call void @__check_object_size(i8* %ptr, i64 %n, i1 zeroext %tobool)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_user_overflow.738(i32 %size, i64 %count) #4 {
entry:
  %tobool = icmp ne i32 1, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.736, i32 0, i32 0), i32 688, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1.739, i32 0, i32 0), i32 %size, i64 %count)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool3 = icmp ne i32 1, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_process_vbi_data(%struct.ivtv.1060* %itv, %struct.ivtv_buffer* %buf, i64 %pts_stamp, i32 %streamtype) #0 {
entry:
  %buf1 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %0 = load i8*, i8** %buf1, align 8, !tbaa !370
  %bytesused = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  %1 = load i32, i32* %bytesused, align 8, !tbaa !363
  switch i32 %streamtype, label %cleanup.cont [
    i32 2, label %land.lhs.true
    i32 6, label %if.then56
  ]

land.lhs.true:                                    ; preds = %entry
  %call = call i32 @ivtv_raw_vbi.742(%struct.ivtv.1060* %itv)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end12

if.then:                                          ; preds = %land.lhs.true
  call void @ivtv_buf_swap(%struct.ivtv_buffer* %buf)
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 3
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %call2 = call i32 @compress_raw_buf(%struct.ivtv.1060* %itv, i8* %0)
  %bytesused3 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  store i32 %call2, i32* %bytesused3, align 8, !tbaa !363
  %conv = zext i8 %2 to i32
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_even_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 2
  %3 = load i8, i8* %raw_decoder_sav_even_field, align 1, !tbaa !326
  %conv4 = zext i8 %3 to i32
  %cmp5 = icmp eq i32 %conv, %conv4
  br i1 %cmp5, label %if.then7, label %cleanup.cont

if.then7:                                         ; preds = %if.then
  %sub = sub i32 %call2, 4
  %idx.ext = zext i32 %sub to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  %vbi8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi8, i32 0, i32 17
  %4 = bitcast i32* %frame to i8*
  %call9 = call i8* @__memcpy(i8* %add.ptr, i8* %4, i64 4)
  %vbi10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %frame11 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi10, i32 0, i32 17
  %5 = load i32, i32* %frame11, align 4, !tbaa !725
  %inc = add i32 %5, 1
  store i32 %inc, i32* %frame11, align 4, !tbaa !725
  br label %cleanup.cont

if.end12:                                         ; preds = %land.lhs.true
  switch i32 %streamtype, label %cleanup.cont [
    i32 2, label %if.then15
    i32 6, label %if.then56
  ]

if.then15:                                        ; preds = %if.end12
  call void @ivtv_buf_swap(%struct.ivtv_buffer* %buf)
  %div = udiv i32 %1, 2
  %vbi16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_odd_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi16, i32 0, i32 4
  %6 = load i8, i8* %sliced_decoder_sav_odd_field, align 4, !tbaa !328
  %call17 = call i32 @compress_sliced_buf(%struct.ivtv.1060* %itv, i32 0, i8* %0, i32 %div, i8 zeroext %6)
  %div18 = udiv i32 %1, 2
  %idx.ext19 = zext i32 %div18 to i64
  %add.ptr20 = getelementptr inbounds i8, i8* %0, i64 %idx.ext19
  %add.ptr21 = getelementptr inbounds i8, i8* %add.ptr20, i64 -32
  %div22 = udiv i32 %1, 2
  %add = add i32 %div22, 32
  %vbi23 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_sav_even_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi23, i32 0, i32 5
  %7 = load i8, i8* %sliced_decoder_sav_even_field, align 1, !tbaa !329
  %call24 = call i32 @compress_sliced_buf(%struct.ivtv.1060* %itv, i32 %call17, i8* %add.ptr21, i32 %add, i8 zeroext %7)
  %cmp25 = icmp eq i32 %call24, 0
  br i1 %cmp25, label %if.then27, label %if.end36

if.then27:                                        ; preds = %if.then15
  %vbi28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi28, i32 0, i32 24
  %arrayidx29 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data, i64 0, i64 0
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx29, i32 0, i32 0
  store i32 0, i32* %id, align 4, !tbaa !810
  %vbi30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data31 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi30, i32 0, i32 24
  %arrayidx32 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data31, i64 0, i64 0
  %line = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx32, i32 0, i32 2
  store i32 0, i32* %line, align 4, !tbaa !812
  %vbi33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data34 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi33, i32 0, i32 24
  %arrayidx35 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data34, i64 0, i64 0
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx35, i32 0, i32 1
  store i32 0, i32* %field, align 4, !tbaa !813
  br label %if.end36

if.end36:                                         ; preds = %if.then27, %if.then15
  %lines.0 = phi i32 [ 1, %if.then27 ], [ %call24, %if.then15 ]
  %conv37 = sext i32 %lines.0 to i64
  %mul = mul i64 %conv37, 64
  %conv38 = trunc i64 %mul to i32
  %bytesused39 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  store i32 %conv38, i32* %bytesused39, align 8, !tbaa !363
  %vbi40 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data41 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi40, i32 0, i32 24
  %arrayidx42 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data41, i64 0, i64 0
  %8 = bitcast %struct.v4l2_sliced_vbi_data* %arrayidx42 to i8*
  %conv43 = zext i32 %conv38 to i64
  %call44 = call i8* @__memcpy(i8* %0, i8* %8, i64 %conv43)
  %vbi45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %insert_mpeg = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi45, i32 0, i32 16
  %9 = load i32, i32* %insert_mpeg, align 8, !tbaa !132
  %tobool46 = icmp ne i32 %9, 0
  br i1 %tobool46, label %if.then47, label %if.end49

if.then47:                                        ; preds = %if.end36
  %conv48 = trunc i64 %pts_stamp to i32
  call void @copy_vbi_data(%struct.ivtv.1060* %itv, i32 %lines.0, i32 %conv48)
  br label %if.end49

if.end49:                                         ; preds = %if.then47, %if.end36
  %vbi50 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %frame51 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi50, i32 0, i32 17
  %10 = load i32, i32* %frame51, align 4, !tbaa !725
  %inc52 = add i32 %10, 1
  store i32 %inc52, i32* %frame51, align 4, !tbaa !725
  br label %cleanup.cont

if.then56:                                        ; preds = %if.end12, %entry
  %and = and i32 %1, 3
  %tobool57 = icmp ne i32 %and, 0
  %sub59 = sub nsw i32 4, %and
  %idx.ext60 = sext i32 %sub59 to i64
  %add.ptr61 = getelementptr inbounds i8, i8* %0, i64 %idx.ext60
  %p.0 = select i1 %tobool57, i8* %add.ptr61, i8* %0
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.then56
  %y.0 = phi i32 [ 0, %if.then56 ], [ %add67, %for.body ]
  %cmp63 = icmp ult i32 %y.0, %1
  br i1 %cmp63, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idx.ext65 = sext i32 %y.0 to i64
  %add.ptr66 = getelementptr inbounds i8, i8* %p.0, i64 %idx.ext65
  %11 = bitcast i8* %add.ptr66 to i32*
  call void @__swab32s.743(i32* %11)
  %add67 = add nsw i32 %y.0, 4
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %idx.ext68 = sext i32 %and to i64
  %add.ptr69 = getelementptr inbounds i8, i8* %p.0, i64 %idx.ext68
  %call70 = call i32 @ivtv_convert_ivtv_vbi(%struct.ivtv.1060* %itv, i8* %add.ptr69)
  %buf71 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 4
  %12 = load i8*, i8** %buf71, align 8, !tbaa !370
  %vbi72 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi72, i32 0, i32 25
  %arraydecay = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data, i32 0, i32 0
  %13 = bitcast %struct.v4l2_sliced_vbi_data* %arraydecay to i8*
  %conv73 = sext i32 %call70 to i64
  %call74 = call i8* @__memcpy(i8* %12, i8* %13, i64 %conv73)
  %bytesused75 = getelementptr inbounds %struct.ivtv_buffer, %struct.ivtv_buffer* %buf, i32 0, i32 5
  store i32 %call70, i32* %bytesused75, align 8, !tbaa !363
  %vbi76 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data77 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi76, i32 0, i32 25
  %arraydecay78 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data77, i32 0, i32 0
  %conv79 = sext i32 %call70 to i64
  %div80 = udiv i64 %conv79, 64
  call void @ivtv_write_vbi(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %arraydecay78, i64 %div80)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %for.end, %if.end49, %if.end12, %if.then7, %if.then, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.end49 ], [ 1, %for.end ], [ 1, %if.then7 ], [ 1, %if.then ], [ 0, %entry ], [ 0, %if.end12 ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @ivtv_raw_vbi.742(%struct.ivtv.1060* %itv) #4 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %in = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 14
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %in, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !298
  %cmp = icmp eq i32 %0, 4
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_raw_buf(%struct.ivtv.1060* %itv, i8* %buf) #0 {
entry:
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 0
  %0 = load i32, i32* %raw_decoder_line_size, align 8, !tbaa !324
  %vbi1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %count = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi1, i32 0, i32 7
  %1 = load i32, i32* %count, align 8, !tbaa !499
  %vbi2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_odd_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi2, i32 0, i32 1
  %2 = load i8, i8* %raw_decoder_sav_odd_field, align 4, !tbaa !325
  %vbi3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %raw_decoder_sav_even_field = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi3, i32 0, i32 2
  %3 = load i8, i8* %raw_decoder_sav_even_field, align 1, !tbaa !326
  br label %for.cond

for.cond:                                         ; preds = %if.end, %entry
  %q.0 = phi i8* [ %buf, %entry ], [ %add.ptr27, %if.end ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %if.end ]
  %cmp = icmp ult i32 %i.0, %1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul = mul i32 %i.0, %0
  %idx.ext = zext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 %idx.ext
  %arrayidx = getelementptr inbounds i8, i8* %add.ptr, i64 0
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %conv = zext i8 %4 to i32
  %cmp4 = icmp ne i32 %conv, 255
  br i1 %cmp4, label %for.end, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i8, i8* %add.ptr, i64 1
  %5 = load i8, i8* %arrayidx6, align 1, !tbaa !142
  %conv7 = zext i8 %5 to i32
  %tobool = icmp ne i32 %conv7, 0
  br i1 %tobool, label %for.end, label %lor.lhs.false8

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %arrayidx9 = getelementptr inbounds i8, i8* %add.ptr, i64 2
  %6 = load i8, i8* %arrayidx9, align 1, !tbaa !142
  %conv10 = zext i8 %6 to i32
  %tobool11 = icmp ne i32 %conv10, 0
  br i1 %tobool11, label %for.end, label %lor.lhs.false12

lor.lhs.false12:                                  ; preds = %lor.lhs.false8
  %arrayidx13 = getelementptr inbounds i8, i8* %add.ptr, i64 3
  %7 = load i8, i8* %arrayidx13, align 1, !tbaa !142
  %conv14 = zext i8 %7 to i32
  %conv15 = zext i8 %2 to i32
  %cmp16 = icmp ne i32 %conv14, %conv15
  br i1 %cmp16, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %lor.lhs.false12
  %arrayidx18 = getelementptr inbounds i8, i8* %add.ptr, i64 3
  %8 = load i8, i8* %arrayidx18, align 1, !tbaa !142
  %conv19 = zext i8 %8 to i32
  %conv20 = zext i8 %3 to i32
  %cmp21 = icmp ne i32 %conv19, %conv20
  br i1 %cmp21, label %for.end, label %if.end

if.end:                                           ; preds = %land.lhs.true, %lor.lhs.false12
  %add.ptr23 = getelementptr inbounds i8, i8* %add.ptr, i64 4
  %sub = sub i32 %0, 4
  %conv24 = zext i32 %sub to i64
  %call = call i8* @__memcpy(i8* %q.0, i8* %add.ptr23, i64 %conv24)
  %sub25 = sub i32 %0, 4
  %idx.ext26 = zext i32 %sub25 to i64
  %add.ptr27 = getelementptr inbounds i8, i8* %q.0, i64 %idx.ext26
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true, %lor.lhs.false8, %lor.lhs.false, %for.body, %for.cond
  %sub28 = sub i32 %0, 4
  %mul29 = mul i32 %1, %sub28
  ret i32 %mul29
}

; Function Attrs: nounwind uwtable
define internal i32 @compress_sliced_buf(%struct.ivtv.1060* %itv, i32 %line, i8* %buf, i32 %size, i8 zeroext %sav) #0 {
entry:
  %vbi1 = alloca %struct.v4l2_decode_vbi_line, align 8
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_decoder_line_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 3
  %0 = load i32, i32* %sliced_decoder_line_size, align 8, !tbaa !327
  %1 = bitcast %struct.v4l2_decode_vbi_line* %vbi1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %1) #8
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %buf.addr.0 = phi i8* [ %buf, %entry ], [ %incdec.ptr, %for.inc ]
  %cmp = icmp ult i32 %i.0, %size
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %arrayidx = getelementptr inbounds i8, i8* %buf.addr.0, i64 0
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %conv = zext i8 %2 to i32
  %cmp2 = icmp eq i32 %conv, 255
  br i1 %cmp2, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %arrayidx4 = getelementptr inbounds i8, i8* %buf.addr.0, i64 1
  %3 = load i8, i8* %arrayidx4, align 1, !tbaa !142
  %tobool = icmp ne i8 %3, 0
  br i1 %tobool, label %for.inc, label %land.lhs.true5

land.lhs.true5:                                   ; preds = %land.lhs.true
  %arrayidx6 = getelementptr inbounds i8, i8* %buf.addr.0, i64 2
  %4 = load i8, i8* %arrayidx6, align 1, !tbaa !142
  %tobool7 = icmp ne i8 %4, 0
  br i1 %tobool7, label %for.inc, label %land.lhs.true8

land.lhs.true8:                                   ; preds = %land.lhs.true5
  %arrayidx9 = getelementptr inbounds i8, i8* %buf.addr.0, i64 3
  %5 = load i8, i8* %arrayidx9, align 1, !tbaa !142
  %conv10 = zext i8 %5 to i32
  %conv11 = zext i8 %sav to i32
  %cmp12 = icmp eq i32 %conv10, %conv11
  br i1 %cmp12, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true8, %land.lhs.true5, %land.lhs.true, %for.body
  %inc = add nsw i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds i8, i8* %buf.addr.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true8, %for.cond
  %sub = sub i32 %size, %i.0
  %cmp14 = icmp ult i32 %sub, %0
  br i1 %cmp14, label %cleanup92, label %if.end17

if.end17:                                         ; preds = %for.end
  br label %for.cond18

for.cond18:                                       ; preds = %LeafBlock, %if.end17
  %i.1 = phi i32 [ 0, %if.end17 ], [ %inc90, %LeafBlock ]
  %lines.0 = phi i32 [ 0, %if.end17 ], [ %lines.2, %LeafBlock ]
  %line.addr.0 = phi i32 [ %line, %if.end17 ], [ %line.addr.2, %LeafBlock ]
  %div = udiv i32 %sub, %0
  %cmp19 = icmp ult i32 %i.1, %div
  br i1 %cmp19, label %for.body21, label %cleanup92

for.body21:                                       ; preds = %for.cond18
  %mul = mul i32 %i.1, %0
  %idx.ext = zext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %buf.addr.0, i64 %idx.ext
  %arrayidx22 = getelementptr inbounds i8, i8* %add.ptr, i64 0
  %6 = load i8, i8* %arrayidx22, align 1, !tbaa !142
  %conv23 = zext i8 %6 to i32
  %cmp24 = icmp ne i32 %conv23, 255
  br i1 %cmp24, label %LeafBlock, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body21
  %arrayidx26 = getelementptr inbounds i8, i8* %add.ptr, i64 1
  %7 = load i8, i8* %arrayidx26, align 1, !tbaa !142
  %conv27 = zext i8 %7 to i32
  %tobool28 = icmp ne i32 %conv27, 0
  br i1 %tobool28, label %LeafBlock, label %lor.lhs.false29

lor.lhs.false29:                                  ; preds = %lor.lhs.false
  %arrayidx30 = getelementptr inbounds i8, i8* %add.ptr, i64 2
  %8 = load i8, i8* %arrayidx30, align 1, !tbaa !142
  %conv31 = zext i8 %8 to i32
  %tobool32 = icmp ne i32 %conv31, 0
  br i1 %tobool32, label %LeafBlock, label %lor.lhs.false33

lor.lhs.false33:                                  ; preds = %lor.lhs.false29
  %arrayidx34 = getelementptr inbounds i8, i8* %add.ptr, i64 3
  %9 = load i8, i8* %arrayidx34, align 1, !tbaa !142
  %conv35 = zext i8 %9 to i32
  %conv36 = zext i8 %sav to i32
  %cmp37 = icmp ne i32 %conv35, %conv36
  br i1 %cmp37, label %LeafBlock, label %if.end40

if.end40:                                         ; preds = %lor.lhs.false33
  %add.ptr41 = getelementptr inbounds i8, i8* %add.ptr, i64 4
  %p42 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 1
  store i8* %add.ptr41, i8** %p42, align 8, !tbaa !818
  %sd_video = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %10 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool43 = icmp ne %struct.v4l2_subdev* %10, null
  br i1 %tobool43, label %cond.false, label %cond.end59

cond.false:                                       ; preds = %if.end40
  %sd_video44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %11 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video44, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %11, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi45 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 4
  %13 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi45, align 8, !tbaa !546
  %tobool46 = icmp ne %struct.v4l2_subdev_vbi_ops* %13, null
  br i1 %tobool46, label %land.lhs.true47, label %cond.end59

land.lhs.true47:                                  ; preds = %cond.false
  %sd_video48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %14 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video48, align 8, !tbaa !90
  %ops49 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %14, i32 0, i32 6
  %15 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops49, align 8, !tbaa !79
  %vbi50 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %15, i32 0, i32 4
  %16 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi50, align 8, !tbaa !546
  %decode_vbi_line = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %16, i32 0, i32 0
  %17 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)** %decode_vbi_line, align 8, !tbaa !820
  %tobool51 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)* %17, null
  br i1 %tobool51, label %cond.true52, label %cond.end59

cond.true52:                                      ; preds = %land.lhs.true47
  %sd_video53 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %18 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video53, align 8, !tbaa !90
  %ops54 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %18, i32 0, i32 6
  %19 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops54, align 8, !tbaa !79
  %vbi55 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %19, i32 0, i32 4
  %20 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi55, align 8, !tbaa !546
  %decode_vbi_line56 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %20, i32 0, i32 0
  %21 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)** %decode_vbi_line56, align 8, !tbaa !820
  %sd_video57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %22 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video57, align 8, !tbaa !90
  %call = call i32 %21(%struct.v4l2_subdev* %22, %struct.v4l2_decode_vbi_line* %vbi1)
  br label %cond.end59

cond.end59:                                       ; preds = %cond.true52, %land.lhs.true47, %cond.false, %if.end40
  %cond60 = phi i32 [ -19, %if.end40 ], [ %call, %cond.true52 ], [ -515, %land.lhs.true47 ], [ -515, %cond.false ]
  %type = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 3
  %23 = load i32, i32* %type, align 4, !tbaa !821
  %tobool61 = icmp ne i32 %23, 0
  br i1 %tobool61, label %land.lhs.true62, label %LeafBlock

land.lhs.true62:                                  ; preds = %cond.end59
  %line63 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 2
  %24 = load i32, i32* %line63, align 8, !tbaa !822
  %shl = shl i32 1, %24
  %and = and i32 %lines.0, %shl
  %tobool64 = icmp ne i32 %and, 0
  br i1 %tobool64, label %LeafBlock, label %if.then65

if.then65:                                        ; preds = %land.lhs.true62
  %line66 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 2
  %25 = load i32, i32* %line66, align 8, !tbaa !822
  %shl67 = shl i32 1, %25
  %or = or i32 %lines.0, %shl67
  %type68 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 3
  %26 = load i32, i32* %type68, align 4, !tbaa !821
  %vbi69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi69, i32 0, i32 24
  %idxprom = zext i32 %line.addr.0 to i64
  %arrayidx70 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data, i64 0, i64 %idxprom
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx70, i32 0, i32 0
  store i32 %26, i32* %id, align 4, !tbaa !810
  %is_second_field = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 0
  %27 = load i32, i32* %is_second_field, align 8, !tbaa !823
  %vbi71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data72 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi71, i32 0, i32 24
  %idxprom73 = zext i32 %line.addr.0 to i64
  %arrayidx74 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data72, i64 0, i64 %idxprom73
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx74, i32 0, i32 1
  store i32 %27, i32* %field, align 4, !tbaa !813
  %line75 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 2
  %28 = load i32, i32* %line75, align 8, !tbaa !822
  %vbi76 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data77 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi76, i32 0, i32 24
  %idxprom78 = zext i32 %line.addr.0 to i64
  %arrayidx79 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data77, i64 0, i64 %idxprom78
  %line80 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx79, i32 0, i32 2
  store i32 %28, i32* %line80, align 4, !tbaa !812
  %vbi81 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data82 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi81, i32 0, i32 24
  %idxprom83 = zext i32 %line.addr.0 to i64
  %arrayidx84 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data82, i64 0, i64 %idxprom83
  %data = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx84, i32 0, i32 4
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %data, i32 0, i32 0
  %p85 = getelementptr inbounds %struct.v4l2_decode_vbi_line, %struct.v4l2_decode_vbi_line* %vbi1, i32 0, i32 1
  %29 = load i8*, i8** %p85, align 8, !tbaa !818
  %call86 = call i8* @__memcpy(i8* %arraydecay, i8* %29, i64 42)
  %inc87 = add i32 %line.addr.0, 1
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then65, %land.lhs.true62, %cond.end59, %lor.lhs.false33, %lor.lhs.false29, %lor.lhs.false, %for.body21
  %lines.2 = phi i32 [ %lines.0, %lor.lhs.false33 ], [ %lines.0, %lor.lhs.false29 ], [ %lines.0, %lor.lhs.false ], [ %lines.0, %for.body21 ], [ %lines.0, %land.lhs.true62 ], [ %or, %if.then65 ], [ %lines.0, %cond.end59 ]
  %line.addr.2 = phi i32 [ %line.addr.0, %lor.lhs.false33 ], [ %line.addr.0, %lor.lhs.false29 ], [ %line.addr.0, %lor.lhs.false ], [ %line.addr.0, %for.body21 ], [ %line.addr.0, %land.lhs.true62 ], [ %inc87, %if.then65 ], [ %line.addr.0, %cond.end59 ]
  %cleanup.dest.slot.0 = phi i32 [ 7, %lor.lhs.false33 ], [ 7, %lor.lhs.false29 ], [ 7, %lor.lhs.false ], [ 7, %for.body21 ], [ 0, %if.then65 ], [ 0, %land.lhs.true62 ], [ 0, %cond.end59 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 7
  %inc90 = add nsw i32 %i.1, 1
  br label %for.cond18

cleanup92:                                        ; preds = %for.cond18, %for.end
  %retval.0 = phi i32 [ %line, %for.end ], [ %line.addr.0, %for.cond18 ]
  %30 = bitcast %struct.v4l2_decode_vbi_line* %vbi1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %30) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @copy_vbi_data(%struct.ivtv.1060* %itv, i32 %lines, i32 %pts_stamp) #0 {
entry:
  %linemask = alloca [2 x i32], align 4
  %0 = bitcast [2 x i32]* %linemask to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast [2 x i32]* %linemask to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 8, i32 4, i1 false)
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %frame = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 17
  %2 = load i32, i32* %frame, align 4, !tbaa !725
  %rem = urem i32 %2, 32
  %vbi1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi1, i32 0, i32 26
  %idxprom = sext i32 %rem to i64
  %arrayidx = getelementptr inbounds [32 x i8*], [32 x i8*]* %sliced_mpeg_data, i64 0, i64 %idxprom
  %3 = load i8*, i8** %arrayidx, align 8, !tbaa !86
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 0
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc44, %LeafBlock ]
  %line.0 = phi i32 [ 0, %entry ], [ %line.1, %LeafBlock ]
  %cmp = icmp slt i32 %i.0, %lines
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %vbi3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi3, i32 0, i32 24
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data, i64 0, i64 %idxprom4
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx5, i32 0, i32 0
  %4 = load i32, i32* %id, align 4, !tbaa !810
  %cmp6 = icmp eq i32 %4, 0
  br i1 %cmp6, label %LeafBlock, label %if.end

if.end:                                           ; preds = %for.body
  %vbi7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data8 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi7, i32 0, i32 24
  %idxprom9 = sext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data8, i64 0, i64 %idxprom9
  %line11 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx10, i32 0, i32 2
  %5 = load i32, i32* %line11, align 4, !tbaa !812
  %sub = sub i32 %5, 6
  %vbi12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data13 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi12, i32 0, i32 24
  %idxprom14 = sext i32 %i.0 to i64
  %arrayidx15 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data13, i64 0, i64 %idxprom14
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx15, i32 0, i32 1
  %6 = load i32, i32* %field, align 4, !tbaa !813
  %tobool = icmp ne i32 %6, 0
  %add = add nsw i32 %sub, 18
  %add.sub = select i1 %tobool, i32 %add, i32 %sub
  %cmp18 = icmp slt i32 %add.sub, 32
  %sub21 = sub nsw i32 %add.sub, 32
  %shl22 = shl i32 1, %sub21
  %arrayidx23 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 1
  %shl = shl i32 1, %add.sub
  %arrayidx20 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  %arrayidx23.sink1 = select i1 %cmp18, i32* %arrayidx20, i32* %arrayidx23
  %shl22.sink = select i1 %cmp18, i32 %shl, i32 %shl22
  %7 = load i32, i32* %arrayidx23.sink1, align 4, !tbaa !120
  %or24 = or i32 %7, %shl22.sink
  store i32 %or24, i32* %arrayidx23.sink1, align 4, !tbaa !120
  %vbi26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data27 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi26, i32 0, i32 24
  %idxprom28 = sext i32 %i.0 to i64
  %arrayidx29 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data27, i64 0, i64 %idxprom28
  %id30 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx29, i32 0, i32 0
  %8 = load i32, i32* %id30, align 4, !tbaa !810
  %call = call zeroext i16 @ivtv_service2vbi(i32 %8)
  %conv = trunc i16 %call to i8
  %mul = mul nsw i32 %line.0, 43
  %add31 = add nsw i32 44, %mul
  %idxprom32 = sext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds i8, i8* %arrayidx2, i64 %idxprom32
  store i8 %conv, i8* %arrayidx33, align 1, !tbaa !142
  %add.ptr = getelementptr inbounds i8, i8* %arrayidx2, i64 32
  %add.ptr34 = getelementptr inbounds i8, i8* %add.ptr, i64 12
  %mul35 = mul nsw i32 %line.0, 43
  %idx.ext = sext i32 %mul35 to i64
  %add.ptr36 = getelementptr inbounds i8, i8* %add.ptr34, i64 %idx.ext
  %add.ptr37 = getelementptr inbounds i8, i8* %add.ptr36, i64 1
  %vbi38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_data39 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi38, i32 0, i32 24
  %idxprom40 = sext i32 %i.0 to i64
  %arrayidx41 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_data39, i64 0, i64 %idxprom40
  %data = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx41, i32 0, i32 4
  %arraydecay = getelementptr inbounds [48 x i8], [48 x i8]* %data, i32 0, i32 0
  %call42 = call i8* @__memcpy(i8* %add.ptr37, i8* %arraydecay, i64 42)
  %inc = add nsw i32 %line.0, 1
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end, %for.body
  %line.1 = phi i32 [ %inc, %if.end ], [ %line.0, %for.body ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 4, %for.body ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  %inc44 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %call45 = call i8* @__memcpy(i8* %arrayidx2, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @copy_vbi_data.mpeg_hdr_data, i32 0, i32 0), i64 32)
  %cmp46 = icmp eq i32 %line.0, 36
  %add.ptr49 = getelementptr inbounds i8, i8* %arrayidx2, i64 32
  br i1 %cmp46, label %if.then48, label %if.else62

if.then48:                                        ; preds = %for.end
  %call50 = call i8* @__memcpy(i8* %add.ptr49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.745, i32 0, i32 0), i64 4)
  %add.ptr51 = getelementptr inbounds i8, i8* %arrayidx2, i64 32
  %add.ptr52 = getelementptr inbounds i8, i8* %add.ptr51, i64 4
  %add.ptr53 = getelementptr inbounds i8, i8* %arrayidx2, i64 32
  %add.ptr54 = getelementptr inbounds i8, i8* %add.ptr53, i64 12
  %mul55 = mul nsw i32 %line.0, 43
  %conv56 = sext i32 %mul55 to i64
  %call57 = call i8* @__memmove(i8* %add.ptr52, i8* %add.ptr54, i64 %conv56)
  br label %if.end79

if.else62:                                        ; preds = %for.end
  %call64 = call i8* @__memcpy(i8* %add.ptr49, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.744, i32 0, i32 0), i64 4)
  %arrayidx65 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  %arrayidx67 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 1
  %add.ptr70 = getelementptr inbounds i8, i8* %arrayidx2, i64 32
  %add.ptr71 = getelementptr inbounds i8, i8* %add.ptr70, i64 4
  %arrayidx72 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  %9 = bitcast i32* %arrayidx72 to i8*
  %call73 = call i8* @__memcpy(i8* %add.ptr71, i8* %9, i64 8)
  br label %if.end79

if.end79:                                         ; preds = %if.else62, %if.then48
  %.sink = phi i32 [ 12, %if.else62 ], [ 4, %if.then48 ]
  %mul74 = mul nsw i32 43, %line.0
  %add75 = add nsw i32 %mul74, 3
  %and76 = and i32 %add75, -4
  %add77 = add nsw i32 %.sink, %and76
  %conv78 = trunc i32 %add77 to i16
  %conv80 = zext i16 %conv78 to i32
  %add81 = add nsw i32 %conv80, 10
  %shr = ashr i32 %add81, 8
  %conv82 = trunc i32 %shr to i8
  %arrayidx83 = getelementptr inbounds i8, i8* %arrayidx2, i64 20
  store i8 %conv82, i8* %arrayidx83, align 1, !tbaa !142
  %conv84 = zext i16 %conv78 to i32
  %add85 = add nsw i32 %conv84, 10
  %and86 = and i32 %add85, 255
  %conv87 = trunc i32 %and86 to i8
  %arrayidx88 = getelementptr inbounds i8, i8* %arrayidx2, i64 21
  store i8 %conv87, i8* %arrayidx88, align 1, !tbaa !142
  %shr89 = lshr i32 %pts_stamp, 29
  %and90 = and i32 %shr89, 6
  %or91 = or i32 33, %and90
  %conv92 = trunc i32 %or91 to i8
  %arrayidx93 = getelementptr inbounds i8, i8* %arrayidx2, i64 25
  store i8 %conv92, i8* %arrayidx93, align 1, !tbaa !142
  %shr94 = lshr i32 %pts_stamp, 22
  %and95 = and i32 %shr94, 255
  %conv96 = trunc i32 %and95 to i8
  %arrayidx97 = getelementptr inbounds i8, i8* %arrayidx2, i64 26
  store i8 %conv96, i8* %arrayidx97, align 1, !tbaa !142
  %shr98 = lshr i32 %pts_stamp, 14
  %and99 = and i32 %shr98, 255
  %or100 = or i32 1, %and99
  %conv101 = trunc i32 %or100 to i8
  %arrayidx102 = getelementptr inbounds i8, i8* %arrayidx2, i64 27
  store i8 %conv101, i8* %arrayidx102, align 1, !tbaa !142
  %shr103 = lshr i32 %pts_stamp, 7
  %and104 = and i32 %shr103, 255
  %conv105 = trunc i32 %and104 to i8
  %arrayidx106 = getelementptr inbounds i8, i8* %arrayidx2, i64 28
  store i8 %conv105, i8* %arrayidx106, align 1, !tbaa !142
  %and107 = and i32 %pts_stamp, 127
  %shl108 = shl i32 %and107, 1
  %or109 = or i32 1, %shl108
  %conv110 = trunc i32 %or109 to i8
  %arrayidx111 = getelementptr inbounds i8, i8* %arrayidx2, i64 29
  store i8 %conv110, i8* %arrayidx111, align 1, !tbaa !142
  %conv112 = zext i16 %conv78 to i32
  %add113 = add nsw i32 32, %conv112
  %vbi114 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_mpeg_size = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi114, i32 0, i32 27
  %idxprom115 = sext i32 %rem to i64
  %arrayidx116 = getelementptr inbounds [32 x i32], [32 x i32]* %sliced_mpeg_size, i64 0, i64 %idxprom115
  store i32 %add113, i32* %arrayidx116, align 4, !tbaa !120
  %10 = bitcast [2 x i32]* %linemask to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__swab32s.743(i32* %p) #1 {
entry:
  %call = call i32 @__swab32p.746(i32* %p)
  store i32 %call, i32* %p, align 4, !tbaa !120
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_convert_ivtv_vbi(%struct.ivtv.1060* %itv, i8* %p) #0 {
entry:
  %linemask = alloca [2 x i32], align 4
  %0 = bitcast [2 x i32]* %linemask to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %call = call i32 @memcmp(i8* %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3.744, i32 0, i32 0), i64 4)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %arraydecay = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i32 0, i32 0
  %1 = bitcast i32* %arraydecay to i8*
  %add.ptr = getelementptr inbounds i8, i8* %p, i64 4
  %call1 = call i8* @__memcpy(i8* %1, i8* %add.ptr, i64 8)
  %add.ptr2 = getelementptr inbounds i8, i8* %p, i64 12
  br label %if.end11

if.else:                                          ; preds = %entry
  %call3 = call i32 @memcmp(i8* %p, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2.745, i32 0, i32 0), i64 4)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %if.else8, label %if.then5

if.then5:                                         ; preds = %if.else
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  store i32 -1, i32* %arrayidx, align 4, !tbaa !120
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 1
  store i32 15, i32* %arrayidx6, align 4, !tbaa !120
  %add.ptr7 = getelementptr inbounds i8, i8* %p, i64 4
  br label %if.end11

if.else8:                                         ; preds = %if.else
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 1
  store i32 0, i32* %arrayidx9, align 4, !tbaa !120
  %arrayidx10 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  store i32 0, i32* %arrayidx10, align 4, !tbaa !120
  br label %if.end11

if.end11:                                         ; preds = %if.else8, %if.then5, %if.then
  %p.addr.1 = phi i8* [ %add.ptr2, %if.then ], [ %p, %if.else8 ], [ %add.ptr7, %if.then5 ]
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock10, %if.end11
  %line.0 = phi i32 [ 0, %if.end11 ], [ %line.2, %LeafBlock10 ]
  %i.0 = phi i32 [ 0, %if.end11 ], [ %inc63, %LeafBlock10 ]
  %p.addr.2 = phi i8* [ %p.addr.1, %if.end11 ], [ %p.addr.3, %LeafBlock10 ]
  %cmp = icmp slt i32 %i.0, 36
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %cmp12 = icmp slt i32 %i.0, 32
  br i1 %cmp12, label %land.lhs.true, label %if.end16

land.lhs.true:                                    ; preds = %for.body
  %arrayidx13 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 0
  %2 = load i32, i32* %arrayidx13, align 4, !tbaa !120
  %shl = shl i32 1, %i.0
  %and = and i32 %2, %shl
  %tobool14 = icmp ne i32 %and, 0
  br i1 %tobool14, label %if.end16, label %LeafBlock10

if.end16:                                         ; preds = %land.lhs.true, %for.body
  %cmp17 = icmp sge i32 %i.0, 32
  br i1 %cmp17, label %land.lhs.true18, label %if.end24

land.lhs.true18:                                  ; preds = %if.end16
  %arrayidx19 = getelementptr inbounds [2 x i32], [2 x i32]* %linemask, i64 0, i64 1
  %3 = load i32, i32* %arrayidx19, align 4, !tbaa !120
  %sub = sub nsw i32 %i.0, 32
  %shl20 = shl i32 1, %sub
  %and21 = and i32 %3, %shl20
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %if.end24, label %LeafBlock10

if.end24:                                         ; preds = %land.lhs.true18, %if.end16
  %4 = load i8, i8* %p.addr.2, align 1, !tbaa !142
  %conv = zext i8 %4 to i32
  %and25 = and i32 %conv, 15
  %Pivot8 = icmp slt i32 %and25, 5
  br i1 %Pivot8, label %NodeBlock, label %NodeBlock5

NodeBlock5:                                       ; preds = %if.end24
  %Pivot6 = icmp slt i32 %and25, 7
  br i1 %Pivot6, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock5
  %SwitchLeaf4 = icmp eq i32 %and25, 7
  br i1 %SwitchLeaf4, label %sw.epilog, label %sw.default

LeafBlock1:                                       ; preds = %NodeBlock5
  %SwitchLeaf2 = icmp eq i32 %and25, 5
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.default

NodeBlock:                                        ; preds = %if.end24
  %Pivot = icmp slt i32 %and25, 4
  br i1 %Pivot, label %LeafBlock, label %sw.bb26

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %and25, 1
  br i1 %SwitchLeaf, label %sw.epilog, label %sw.default

sw.bb26:                                          ; preds = %NodeBlock
  %arrayidx27 = getelementptr inbounds i8, i8* %p.addr.2, i64 1
  %5 = load i8, i8* %arrayidx27, align 1, !tbaa !142
  %call28 = call i32 @odd_parity(i8 zeroext %5)
  %tobool29 = icmp ne i32 %call28, 0
  br i1 %tobool29, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %sw.bb26
  %arrayidx30 = getelementptr inbounds i8, i8* %p.addr.2, i64 2
  %6 = load i8, i8* %arrayidx30, align 1, !tbaa !142
  %call31 = call i32 @odd_parity(i8 zeroext %6)
  %tobool32 = icmp ne i32 %call31, 0
  %lnot = xor i1 %tobool32, true
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %sw.bb26
  %7 = phi i1 [ true, %sw.bb26 ], [ %lnot, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %lor.end, %LeafBlock, %LeafBlock1, %LeafBlock3
  %id2.0 = phi i32 [ 0, %sw.default ], [ 4096, %lor.end ], [ 1, %LeafBlock ], [ 1024, %LeafBlock3 ], [ 16384, %LeafBlock1 ]
  %err.0 = phi i32 [ 0, %sw.default ], [ %lor.ext, %lor.end ], [ 0, %LeafBlock ], [ 0, %LeafBlock3 ], [ 0, %LeafBlock1 ]
  %cmp35 = icmp eq i32 %err.0, 0
  br i1 %cmp35, label %if.then37, label %if.end61

if.then37:                                        ; preds = %sw.epilog
  %cmp38 = icmp slt i32 %i.0, 18
  %sub40 = sub nsw i32 %i.0, 18
  %sub40.sink = select i1 %cmp38, i32 %i.0, i32 %sub40
  %add41 = add nsw i32 %sub40.sink, 6
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 25
  %idxprom = sext i32 %line.0 to i64
  %arrayidx42 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data, i64 0, i64 %idxprom
  %line43 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx42, i32 0, i32 2
  store i32 %add41, i32* %line43, align 4, !tbaa !812
  %cmp44 = icmp sge i32 %i.0, 18
  %conv45 = zext i1 %cmp44 to i32
  %vbi46 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data47 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi46, i32 0, i32 25
  %idxprom48 = sext i32 %line.0 to i64
  %arrayidx49 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data47, i64 0, i64 %idxprom48
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx49, i32 0, i32 1
  store i32 %conv45, i32* %field, align 4, !tbaa !813
  %vbi50 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data51 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi50, i32 0, i32 25
  %idxprom52 = sext i32 %line.0 to i64
  %arrayidx53 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data51, i64 0, i64 %idxprom52
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx53, i32 0, i32 0
  store i32 %id2.0, i32* %id, align 4, !tbaa !810
  %vbi54 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data55 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi54, i32 0, i32 25
  %idxprom56 = sext i32 %line.0 to i64
  %arrayidx57 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data55, i64 0, i64 %idxprom56
  %data = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx57, i32 0, i32 4
  %arraydecay58 = getelementptr inbounds [48 x i8], [48 x i8]* %data, i32 0, i32 0
  %add.ptr59 = getelementptr inbounds i8, i8* %p.addr.2, i64 1
  %call60 = call i8* @__memcpy(i8* %arraydecay58, i8* %add.ptr59, i64 42)
  %inc = add nsw i32 %line.0, 1
  br label %if.end61

if.end61:                                         ; preds = %if.then37, %sw.epilog
  %line.1 = phi i32 [ %inc, %if.then37 ], [ %line.0, %sw.epilog ]
  %add.ptr62 = getelementptr inbounds i8, i8* %p.addr.2, i64 43
  br label %LeafBlock10

LeafBlock10:                                      ; preds = %if.end61, %land.lhs.true18, %land.lhs.true
  %line.2 = phi i32 [ %line.1, %if.end61 ], [ %line.0, %land.lhs.true ], [ %line.0, %land.lhs.true18 ]
  %p.addr.3 = phi i8* [ %add.ptr62, %if.end61 ], [ %p.addr.2, %land.lhs.true ], [ %p.addr.2, %land.lhs.true18 ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end61 ], [ 4, %land.lhs.true ], [ 4, %land.lhs.true18 ]
  %SwitchLeaf11 = icmp eq i32 %cleanup.dest.slot.0, 4
  %inc63 = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  br label %while.cond

while.cond:                                       ; preds = %while.body, %for.end
  %line.3 = phi i32 [ %line.0, %for.end ], [ %inc81, %while.body ]
  %cmp64 = icmp slt i32 %line.3, 36
  br i1 %cmp64, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %vbi66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data67 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi66, i32 0, i32 25
  %idxprom68 = sext i32 %line.3 to i64
  %arrayidx69 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data67, i64 0, i64 %idxprom68
  %id70 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx69, i32 0, i32 0
  store i32 0, i32* %id70, align 4, !tbaa !810
  %vbi71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data72 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi71, i32 0, i32 25
  %idxprom73 = sext i32 %line.3 to i64
  %arrayidx74 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data72, i64 0, i64 %idxprom73
  %line75 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx74, i32 0, i32 2
  store i32 0, i32* %line75, align 4, !tbaa !812
  %vbi76 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %sliced_dec_data77 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi76, i32 0, i32 25
  %idxprom78 = sext i32 %line.3 to i64
  %arrayidx79 = getelementptr inbounds [36 x %struct.v4l2_sliced_vbi_data], [36 x %struct.v4l2_sliced_vbi_data]* %sliced_dec_data77, i64 0, i64 %idxprom78
  %field80 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %arrayidx79, i32 0, i32 1
  store i32 0, i32* %field80, align 4, !tbaa !813
  %inc81 = add nsw i32 %line.3, 1
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %conv82 = sext i32 %line.3 to i64
  %mul = mul i64 %conv82, 64
  %conv83 = trunc i64 %mul to i32
  %8 = bitcast [2 x i32]* %linemask to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #8
  ret i32 %conv83
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_write_vbi(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %sliced, i64 %cnt) #0 {
entry:
  %cc = alloca %struct.vbi_cc, align 1
  %found_cc = alloca i32, align 4
  %0 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds (%struct.vbi_cc, %struct.vbi_cc* @ivtv_vbi_work_handler.cc, i32 0, i32 0, i32 0), i64 4, i32 1, i1 false)
  %2 = bitcast i32* %found_cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 0, i32* %found_cc, align 4, !tbaa !120
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i64 [ 0, %entry ], [ %inc, %for.body ]
  %cmp = icmp ult i64 %i.0, %cnt
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %add.ptr = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %sliced, i64 %i.0
  call void @ivtv_write_vbi_line(%struct.ivtv.1060* %itv, %struct.v4l2_sliced_vbi_data* %add.ptr, %struct.vbi_cc* %cc, i32* %found_cc)
  %inc = add i64 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %3 = load i32, i32* %found_cc, align 4, !tbaa !120
  %tobool = icmp ne i32 %3, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  call void @ivtv_write_vbi_cc_lines(%struct.ivtv.1060* %itv, %struct.vbi_cc* %cc)
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %4 = bitcast i32* %found_cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %4) #8
  %5 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %5) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @odd_parity(i8 zeroext %c) #0 {
entry:
  %conv = zext i8 %c to i32
  %shr = ashr i32 %conv, 4
  %conv1 = zext i8 %c to i32
  %xor = xor i32 %conv1, %shr
  %conv2 = trunc i32 %xor to i8
  %conv3 = zext i8 %conv2 to i32
  %shr4 = ashr i32 %conv3, 2
  %conv5 = zext i8 %conv2 to i32
  %xor6 = xor i32 %conv5, %shr4
  %conv7 = trunc i32 %xor6 to i8
  %conv8 = zext i8 %conv7 to i32
  %shr9 = ashr i32 %conv8, 1
  %conv10 = zext i8 %conv7 to i32
  %xor11 = xor i32 %conv10, %shr9
  %conv12 = trunc i32 %xor11 to i8
  %conv13 = zext i8 %conv12 to i32
  %and = and i32 %conv13, 1
  ret i32 %and
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__swab32p.746(i32* %p) #1 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !120
  %call = call i32 @__fswab32.747(i32 %0) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @__fswab32.747(i32 %val) #9 {
entry:
  %call = call i32 @__arch_swab32.748(i32 %val) #5
  ret i32 %call
}

; Function Attrs: inlinehint nounwind readnone uwtable
define internal i32 @__arch_swab32.748(i32 %val) #9 {
entry:
  %0 = call i32 asm "bswapl $0", "=r,0,~{dirflag},~{fpsr},~{flags}"(i32 %val) #5, !srcloc !824
  ret i32 %0
}

declare i8* @__memmove(i8*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define void @ivtv_disable_cc(%struct.ivtv.1060* %itv) #0 {
entry:
  %cc = alloca %struct.vbi_cc, align 1
  %0 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* getelementptr inbounds (%struct.vbi_cc, %struct.vbi_cc* @ivtv_vbi_work_handler.cc, i32 0, i32 0, i32 0), i64 4, i32 1, i1 false)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @clear_bit.751(i64 9, i64* %i_flags)
  call void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 0, %struct.vbi_cc* %cc)
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %cc_payload_idx = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  store i32 0, i32* %cc_payload_idx, align 8, !tbaa !825
  %2 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %2) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.751(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !826
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 %mode, %struct.vbi_cc* %cc) #0 {
entry:
  %data = alloca %struct.v4l2_sliced_vbi_data, align 4
  %0 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %1 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %1, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 0
  store i32 4096, i32* %id, align 4, !tbaa !810
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 0, i32* %field, align 4, !tbaa !813
  %and1 = and i32 %mode, 1
  %tobool2 = icmp ne i32 %and1, 0
  %2 = zext i1 %tobool2 to i64
  %cond = select i1 %tobool2, i32 21, i32 0
  %line = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 2
  store i32 %cond, i32* %line, align 4, !tbaa !812
  %odd = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx = getelementptr inbounds [2 x i8], [2 x i8]* %odd, i64 0, i64 0
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %data3 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx4 = getelementptr inbounds [48 x i8], [48 x i8]* %data3, i64 0, i64 0
  store i8 %3, i8* %arrayidx4, align 4, !tbaa !142
  %odd5 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx6 = getelementptr inbounds [2 x i8], [2 x i8]* %odd5, i64 0, i64 1
  %4 = load i8, i8* %arrayidx6, align 1, !tbaa !142
  %data7 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx8 = getelementptr inbounds [48 x i8], [48 x i8]* %data7, i64 0, i64 1
  store i8 %4, i8* %arrayidx8, align 1, !tbaa !142
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %list25.sink = phi %struct.list_head* [ %list25, %for.inc ], [ %subdevs, %if.end ]
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %list25.sink, i32 0, i32 0
  %5 = load %struct.list_head*, %struct.list_head** %next26, align 8, !tbaa !86
  %6 = bitcast %struct.list_head* %5 to i8*
  %add.ptr28 = getelementptr inbounds i8, i8* %6, i64 -128
  %7 = bitcast i8* %add.ptr28 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 1
  %v4l2_dev10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs11 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev10, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs11
  br i1 %cmp, label %for.body, label %do.end30

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 10
  %8 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and12 = and i32 %8, 4
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %9 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %9, i32 0, i32 4
  %10 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi, align 8, !tbaa !546
  %tobool14 = icmp ne %struct.v4l2_subdev_vbi_ops* %10, null
  br i1 %tobool14, label %land.lhs.true15, label %for.inc

land.lhs.true15:                                  ; preds = %land.lhs.true
  %ops16 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %11 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops16, align 8, !tbaa !79
  %vbi17 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %11, i32 0, i32 4
  %12 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi17, align 8, !tbaa !546
  %s_vbi_data = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %12, i32 0, i32 1
  %13 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data, align 8, !tbaa !827
  %tobool18 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %13, null
  br i1 %tobool18, label %if.then19, label %for.inc

if.then19:                                        ; preds = %land.lhs.true15
  %ops20 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops20, align 8, !tbaa !79
  %vbi21 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 4
  %15 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi21, align 8, !tbaa !546
  %s_vbi_data22 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %15, i32 0, i32 1
  %16 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data22, align 8, !tbaa !827
  %call = call i32 %16(%struct.v4l2_subdev* %7, %struct.v4l2_sliced_vbi_data* %data)
  br label %for.inc

for.inc:                                          ; preds = %if.then19, %land.lhs.true15, %land.lhs.true, %for.body
  %list25 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %7, i32 0, i32 1
  br label %for.cond

do.end30:                                         ; preds = %for.cond
  %field31 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 1, i32* %field31, align 4, !tbaa !813
  %and32 = and i32 %mode, 2
  %tobool33 = icmp ne i32 %and32, 0
  %17 = zext i1 %tobool33 to i64
  %cond34 = select i1 %tobool33, i32 21, i32 0
  %line35 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 2
  store i32 %cond34, i32* %line35, align 4, !tbaa !812
  %even = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  %arrayidx36 = getelementptr inbounds [2 x i8], [2 x i8]* %even, i64 0, i64 0
  %18 = load i8, i8* %arrayidx36, align 1, !tbaa !142
  %data37 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx38 = getelementptr inbounds [48 x i8], [48 x i8]* %data37, i64 0, i64 0
  store i8 %18, i8* %arrayidx38, align 4, !tbaa !142
  %even39 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  %arrayidx40 = getelementptr inbounds [2 x i8], [2 x i8]* %even39, i64 0, i64 1
  %19 = load i8, i8* %arrayidx40, align 1, !tbaa !142
  %data41 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx42 = getelementptr inbounds [48 x i8], [48 x i8]* %data41, i64 0, i64 1
  store i8 %19, i8* %arrayidx42, align 1, !tbaa !142
  %v4l2_dev47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs48 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev47, i32 0, i32 2
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc76, %do.end30
  %list78.sink = phi %struct.list_head* [ %list78, %for.inc76 ], [ %subdevs48, %do.end30 ]
  %next79 = getelementptr inbounds %struct.list_head, %struct.list_head* %list78.sink, i32 0, i32 0
  %20 = load %struct.list_head*, %struct.list_head** %next79, align 8, !tbaa !86
  %21 = bitcast %struct.list_head* %20 to i8*
  %add.ptr81 = getelementptr inbounds i8, i8* %21, i64 -128
  %22 = bitcast i8* %add.ptr81 to %struct.v4l2_subdev*
  %list53 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  %v4l2_dev54 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs55 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev54, i32 0, i32 2
  %cmp56 = icmp ne %struct.list_head* %list53, %subdevs55
  br i1 %cmp56, label %for.body57, label %cleanup

for.body57:                                       ; preds = %for.cond52
  %grp_id58 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 10
  %23 = load i32, i32* %grp_id58, align 8, !tbaa !87
  %and59 = and i32 %23, 4
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %land.lhs.true61, label %for.inc76

land.lhs.true61:                                  ; preds = %for.body57
  %ops62 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %24 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops62, align 8, !tbaa !79
  %vbi63 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %24, i32 0, i32 4
  %25 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi63, align 8, !tbaa !546
  %tobool64 = icmp ne %struct.v4l2_subdev_vbi_ops* %25, null
  br i1 %tobool64, label %land.lhs.true65, label %for.inc76

land.lhs.true65:                                  ; preds = %land.lhs.true61
  %ops66 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %26 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops66, align 8, !tbaa !79
  %vbi67 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %26, i32 0, i32 4
  %27 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi67, align 8, !tbaa !546
  %s_vbi_data68 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %27, i32 0, i32 1
  %28 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data68, align 8, !tbaa !827
  %tobool69 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %28, null
  br i1 %tobool69, label %if.then70, label %for.inc76

if.then70:                                        ; preds = %land.lhs.true65
  %ops71 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %29 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops71, align 8, !tbaa !79
  %vbi72 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %29, i32 0, i32 4
  %30 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi72, align 8, !tbaa !546
  %s_vbi_data73 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %30, i32 0, i32 1
  %31 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data73, align 8, !tbaa !827
  %call74 = call i32 %31(%struct.v4l2_subdev* %22, %struct.v4l2_sliced_vbi_data* %data)
  br label %for.inc76

for.inc76:                                        ; preds = %if.then70, %land.lhs.true65, %land.lhs.true61, %for.body57
  %list78 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 1
  br label %for.cond52

cleanup:                                          ; preds = %for.cond52, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 0, %for.cond52 ]
  %32 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %32) #8
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_vbi_work_handler(%struct.ivtv.1060* %itv) #0 {
entry:
  %data = alloca %struct.v4l2_sliced_vbi_data, align 4
  %cc = alloca %struct.vbi_cc, align 1
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %0 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %1 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %2 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %2, i8* getelementptr inbounds (%struct.vbi_cc, %struct.vbi_cc* @ivtv_vbi_work_handler.cc, i32 0, i32 0, i32 0), i64 4, i32 1, i1 false)
  %output_mode = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 31
  %3 = load i32, i32* %output_mode, align 4, !tbaa !180
  %cmp = icmp eq i32 %3, 4
  br i1 %cmp, label %if.then, label %if.end123

if.then:                                          ; preds = %entry
  %is_50hz = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 27
  %4 = load i8, i8* %is_50hz, align 8, !tbaa !137
  %tobool = icmp ne i8 %4, 0
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 0
  br i1 %tobool, label %if.then1, label %if.else30

if.then1:                                         ; preds = %if.then
  store i32 16384, i32* %id, align 4, !tbaa !810
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 0, i32* %field, align 4, !tbaa !813
  %sd_video = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %5 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video, align 8, !tbaa !90
  %tobool2 = icmp ne %struct.v4l2_subdev* %5, null
  br i1 %tobool2, label %cond.false, label %cond.end17

cond.false:                                       ; preds = %if.then1
  %sd_video3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %6 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video3, align 8, !tbaa !90
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %7 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi4 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %7, i32 0, i32 4
  %8 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi4, align 8, !tbaa !546
  %tobool5 = icmp ne %struct.v4l2_subdev_vbi_ops* %8, null
  br i1 %tobool5, label %land.lhs.true, label %cond.end17

land.lhs.true:                                    ; preds = %cond.false
  %sd_video6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %9 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video6, align 8, !tbaa !90
  %ops7 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %9, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops7, align 8, !tbaa !79
  %vbi8 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 4
  %11 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi8, align 8, !tbaa !546
  %g_vbi_data = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %11, i32 0, i32 2
  %12 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data, align 8, !tbaa !828
  %tobool9 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %12, null
  br i1 %tobool9, label %cond.true10, label %cond.end17

cond.true10:                                      ; preds = %land.lhs.true
  %sd_video11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %13 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video11, align 8, !tbaa !90
  %ops12 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %13, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops12, align 8, !tbaa !79
  %vbi13 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 4
  %15 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi13, align 8, !tbaa !546
  %g_vbi_data14 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %15, i32 0, i32 2
  %16 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data14, align 8, !tbaa !828
  %sd_video15 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %17 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video15, align 8, !tbaa !90
  %call = call i32 %16(%struct.v4l2_subdev* %17, %struct.v4l2_sliced_vbi_data* %data)
  br label %cond.end17

cond.end17:                                       ; preds = %cond.true10, %land.lhs.true, %cond.false, %if.then1
  %cond18 = phi i32 [ -19, %if.then1 ], [ %call, %cond.true10 ], [ -515, %land.lhs.true ], [ -515, %cond.false ]
  %cmp19 = icmp eq i32 %cond18, 0
  br i1 %cmp19, label %if.then20, label %if.else

if.then20:                                        ; preds = %cond.end17
  %data21 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %data21, i64 0, i64 0
  %18 = load i8, i8* %arrayidx, align 4, !tbaa !142
  %conv = zext i8 %18 to i32
  %and = and i32 %conv, 15
  call void @ivtv_set_wss(%struct.ivtv.1060* %itv, i32 1, i32 %and)
  %wss_missing_cnt = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 22
  store i8 0, i8* %wss_missing_cnt, align 4, !tbaa !829
  br label %cleanup

if.else:                                          ; preds = %cond.end17
  %wss_missing_cnt22 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 22
  %19 = load i8, i8* %wss_missing_cnt22, align 4, !tbaa !829
  %conv23 = zext i8 %19 to i32
  %cmp24 = icmp eq i32 %conv23, 4
  br i1 %cmp24, label %if.then26, label %if.else27

if.then26:                                        ; preds = %if.else
  call void @ivtv_set_wss(%struct.ivtv.1060* %itv, i32 1, i32 8)
  br label %cleanup

if.else27:                                        ; preds = %if.else
  %wss_missing_cnt28 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 22
  %20 = load i8, i8* %wss_missing_cnt28, align 4, !tbaa !829
  %inc = add i8 %20, 1
  store i8 %inc, i8* %wss_missing_cnt28, align 4, !tbaa !829
  br label %cleanup

if.else30:                                        ; preds = %if.then
  store i32 4096, i32* %id, align 4, !tbaa !810
  %field32 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 0, i32* %field32, align 4, !tbaa !813
  %sd_video33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %21 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video33, align 8, !tbaa !90
  %tobool34 = icmp ne %struct.v4l2_subdev* %21, null
  br i1 %tobool34, label %cond.false36, label %cond.end57

cond.false36:                                     ; preds = %if.else30
  %sd_video37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %22 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video37, align 8, !tbaa !90
  %ops38 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %22, i32 0, i32 6
  %23 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops38, align 8, !tbaa !79
  %vbi39 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %23, i32 0, i32 4
  %24 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi39, align 8, !tbaa !546
  %tobool40 = icmp ne %struct.v4l2_subdev_vbi_ops* %24, null
  br i1 %tobool40, label %land.lhs.true41, label %cond.end57

land.lhs.true41:                                  ; preds = %cond.false36
  %sd_video42 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %25 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video42, align 8, !tbaa !90
  %ops43 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %25, i32 0, i32 6
  %26 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops43, align 8, !tbaa !79
  %vbi44 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %26, i32 0, i32 4
  %27 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi44, align 8, !tbaa !546
  %g_vbi_data45 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %27, i32 0, i32 2
  %28 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data45, align 8, !tbaa !828
  %tobool46 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %28, null
  br i1 %tobool46, label %cond.true47, label %cond.end57

cond.true47:                                      ; preds = %land.lhs.true41
  %sd_video48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %29 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video48, align 8, !tbaa !90
  %ops49 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %29, i32 0, i32 6
  %30 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops49, align 8, !tbaa !79
  %vbi50 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %30, i32 0, i32 4
  %31 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi50, align 8, !tbaa !546
  %g_vbi_data51 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %31, i32 0, i32 2
  %32 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data51, align 8, !tbaa !828
  %sd_video52 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %33 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video52, align 8, !tbaa !90
  %call53 = call i32 %32(%struct.v4l2_subdev* %33, %struct.v4l2_sliced_vbi_data* %data)
  br label %cond.end57

cond.end57:                                       ; preds = %cond.true47, %land.lhs.true41, %cond.false36, %if.else30
  %cond58 = phi i32 [ -19, %if.else30 ], [ %call53, %cond.true47 ], [ -515, %land.lhs.true41 ], [ -515, %cond.false36 ]
  %cmp59 = icmp eq i32 %cond58, 0
  br i1 %cmp59, label %if.then61, label %if.end69

if.then61:                                        ; preds = %cond.end57
  %or = or i32 0, 1
  %data62 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx63 = getelementptr inbounds [48 x i8], [48 x i8]* %data62, i64 0, i64 0
  %34 = load i8, i8* %arrayidx63, align 4, !tbaa !142
  %odd = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx64 = getelementptr inbounds [2 x i8], [2 x i8]* %odd, i64 0, i64 0
  store i8 %34, i8* %arrayidx64, align 1, !tbaa !142
  %data65 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx66 = getelementptr inbounds [48 x i8], [48 x i8]* %data65, i64 0, i64 1
  %35 = load i8, i8* %arrayidx66, align 1, !tbaa !142
  %odd67 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx68 = getelementptr inbounds [2 x i8], [2 x i8]* %odd67, i64 0, i64 1
  store i8 %35, i8* %arrayidx68, align 1, !tbaa !142
  br label %if.end69

if.end69:                                         ; preds = %if.then61, %cond.end57
  %mode.0 = phi i32 [ %or, %if.then61 ], [ 0, %cond.end57 ]
  %field70 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 1, i32* %field70, align 4, !tbaa !813
  %sd_video71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %36 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video71, align 8, !tbaa !90
  %tobool72 = icmp ne %struct.v4l2_subdev* %36, null
  br i1 %tobool72, label %cond.false74, label %cond.end95

cond.false74:                                     ; preds = %if.end69
  %sd_video75 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %37 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video75, align 8, !tbaa !90
  %ops76 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %37, i32 0, i32 6
  %38 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops76, align 8, !tbaa !79
  %vbi77 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %38, i32 0, i32 4
  %39 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi77, align 8, !tbaa !546
  %tobool78 = icmp ne %struct.v4l2_subdev_vbi_ops* %39, null
  br i1 %tobool78, label %land.lhs.true79, label %cond.end95

land.lhs.true79:                                  ; preds = %cond.false74
  %sd_video80 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %40 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video80, align 8, !tbaa !90
  %ops81 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %40, i32 0, i32 6
  %41 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops81, align 8, !tbaa !79
  %vbi82 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %41, i32 0, i32 4
  %42 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi82, align 8, !tbaa !546
  %g_vbi_data83 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %42, i32 0, i32 2
  %43 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data83, align 8, !tbaa !828
  %tobool84 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %43, null
  br i1 %tobool84, label %cond.true85, label %cond.end95

cond.true85:                                      ; preds = %land.lhs.true79
  %sd_video86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %44 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video86, align 8, !tbaa !90
  %ops87 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %44, i32 0, i32 6
  %45 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops87, align 8, !tbaa !79
  %vbi88 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %45, i32 0, i32 4
  %46 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi88, align 8, !tbaa !546
  %g_vbi_data89 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %46, i32 0, i32 2
  %47 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %g_vbi_data89, align 8, !tbaa !828
  %sd_video90 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 11
  %48 = load %struct.v4l2_subdev*, %struct.v4l2_subdev** %sd_video90, align 8, !tbaa !90
  %call91 = call i32 %47(%struct.v4l2_subdev* %48, %struct.v4l2_sliced_vbi_data* %data)
  br label %cond.end95

cond.end95:                                       ; preds = %cond.true85, %land.lhs.true79, %cond.false74, %if.end69
  %cond96 = phi i32 [ -19, %if.end69 ], [ %call91, %cond.true85 ], [ -515, %land.lhs.true79 ], [ -515, %cond.false74 ]
  %cmp97 = icmp eq i32 %cond96, 0
  br i1 %cmp97, label %if.then99, label %if.end108

if.then99:                                        ; preds = %cond.end95
  %or100 = or i32 %mode.0, 2
  %data101 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx102 = getelementptr inbounds [48 x i8], [48 x i8]* %data101, i64 0, i64 0
  %49 = load i8, i8* %arrayidx102, align 4, !tbaa !142
  %even = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  %arrayidx103 = getelementptr inbounds [2 x i8], [2 x i8]* %even, i64 0, i64 0
  store i8 %49, i8* %arrayidx103, align 1, !tbaa !142
  %data104 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx105 = getelementptr inbounds [48 x i8], [48 x i8]* %data104, i64 0, i64 1
  %50 = load i8, i8* %arrayidx105, align 1, !tbaa !142
  %even106 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 1
  %arrayidx107 = getelementptr inbounds [2 x i8], [2 x i8]* %even106, i64 0, i64 1
  store i8 %50, i8* %arrayidx107, align 1, !tbaa !142
  br label %if.end108

if.end108:                                        ; preds = %if.then99, %cond.end95
  %mode.1 = phi i32 [ %or100, %if.then99 ], [ %mode.0, %cond.end95 ]
  %tobool109 = icmp ne i32 %mode.1, 0
  %cc_missing_cnt = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 20
  br i1 %tobool109, label %if.then110, label %if.else111

if.then110:                                       ; preds = %if.end108
  store i8 0, i8* %cc_missing_cnt, align 4, !tbaa !830
  call void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 %mode.1, %struct.vbi_cc* %cc)
  br label %cleanup

if.else111:                                       ; preds = %if.end108
  %51 = load i8, i8* %cc_missing_cnt, align 4, !tbaa !830
  %conv113 = zext i8 %51 to i32
  %cmp114 = icmp eq i32 %conv113, 4
  br i1 %cmp114, label %if.then116, label %if.else117

if.then116:                                       ; preds = %if.else111
  call void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 0, %struct.vbi_cc* %cc)
  br label %cleanup

if.else117:                                       ; preds = %if.else111
  %cc_missing_cnt118 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 20
  %52 = load i8, i8* %cc_missing_cnt118, align 4, !tbaa !830
  %inc119 = add i8 %52, 1
  store i8 %inc119, i8* %cc_missing_cnt118, align 4, !tbaa !830
  br label %cleanup

if.end123:                                        ; preds = %entry
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call124 = call zeroext i1 @test_and_clear_bit.754(i64 10, i64* %i_flags)
  br i1 %call124, label %if.then125, label %cond.true128

if.then125:                                       ; preds = %if.end123
  %wss_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 21
  %53 = load i32, i32* %wss_payload, align 8, !tbaa !815
  %and126 = and i32 %53, 15
  call void @ivtv_set_wss(%struct.ivtv.1060* %itv, i32 1, i32 %and126)
  br label %cond.true128

cond.true128:                                     ; preds = %if.then125, %if.end123
  %i_flags129 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call130 = call zeroext i1 @constant_test_bit.755(i64 9, i64* %i_flags129)
  br i1 %call130, label %if.then136, label %if.end166

if.then136:                                       ; preds = %cond.true128
  %cc_payload_idx = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %54 = load i32, i32* %cc_payload_idx, align 8, !tbaa !816
  %cmp137 = icmp eq i32 %54, 0
  br i1 %cmp137, label %if.then139, label %if.end141

if.then139:                                       ; preds = %if.then136
  %i_flags140 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @clear_bit.751(i64 9, i64* %i_flags140)
  call void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 3, %struct.vbi_cc* %cc)
  br label %if.end141

if.end141:                                        ; preds = %if.then139, %if.then136
  br label %while.cond

while.cond:                                       ; preds = %if.then164, %if.end141
  %cc_payload_idx142 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %55 = load i32, i32* %cc_payload_idx142, align 8, !tbaa !816
  %tobool143 = icmp ne i32 %55, 0
  br i1 %tobool143, label %while.body, label %if.end166

while.body:                                       ; preds = %while.cond
  %cc_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 18
  %arrayidx144 = getelementptr inbounds [256 x %struct.vbi_cc], [256 x %struct.vbi_cc]* %cc_payload, i64 0, i64 0
  %56 = bitcast %struct.vbi_cc* %cc to i8*
  %57 = bitcast %struct.vbi_cc* %arrayidx144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %56, i8* %57, i64 4, i32 1, i1 false), !tbaa.struct !831
  %cc_payload145 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 18
  %arraydecay = getelementptr inbounds [256 x %struct.vbi_cc], [256 x %struct.vbi_cc]* %cc_payload145, i32 0, i32 0
  %58 = bitcast %struct.vbi_cc* %arraydecay to i8*
  %cc_payload146 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 18
  %arraydecay147 = getelementptr inbounds [256 x %struct.vbi_cc], [256 x %struct.vbi_cc]* %cc_payload146, i32 0, i32 0
  %add.ptr = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %arraydecay147, i64 1
  %59 = bitcast %struct.vbi_cc* %add.ptr to i8*
  %call148 = call i8* @__memmove(i8* %58, i8* %59, i64 1020)
  %cc_payload_idx149 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %60 = load i32, i32* %cc_payload_idx149, align 8, !tbaa !816
  %dec = add nsw i32 %60, -1
  store i32 %dec, i32* %cc_payload_idx149, align 8, !tbaa !816
  %cc_payload_idx150 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 19
  %61 = load i32, i32* %cc_payload_idx150, align 8, !tbaa !816
  %tobool151 = icmp ne i32 %61, 0
  br i1 %tobool151, label %land.lhs.true152, label %if.end165

land.lhs.true152:                                 ; preds = %while.body
  %odd153 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx154 = getelementptr inbounds [2 x i8], [2 x i8]* %odd153, i64 0, i64 0
  %62 = load i8, i8* %arrayidx154, align 1, !tbaa !142
  %conv155 = zext i8 %62 to i32
  %cmp156 = icmp eq i32 %conv155, 128
  br i1 %cmp156, label %land.lhs.true158, label %if.end165

land.lhs.true158:                                 ; preds = %land.lhs.true152
  %odd159 = getelementptr inbounds %struct.vbi_cc, %struct.vbi_cc* %cc, i32 0, i32 0
  %arrayidx160 = getelementptr inbounds [2 x i8], [2 x i8]* %odd159, i64 0, i64 1
  %63 = load i8, i8* %arrayidx160, align 1, !tbaa !142
  %conv161 = zext i8 %63 to i32
  %cmp162 = icmp eq i32 %conv161, 128
  br i1 %cmp162, label %if.then164, label %if.end165

if.then164:                                       ; preds = %land.lhs.true158
  br label %while.cond

if.end165:                                        ; preds = %land.lhs.true158, %land.lhs.true152, %while.body
  call void @ivtv_set_cc(%struct.ivtv.1060* %itv, i32 3, %struct.vbi_cc* %cc)
  br label %if.end166

if.end166:                                        ; preds = %if.end165, %while.cond, %cond.true128
  %i_flags167 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call168 = call zeroext i1 @test_and_clear_bit.754(i64 11, i64* %i_flags167)
  br i1 %call168, label %if.then169, label %cleanup

if.then169:                                       ; preds = %if.end166
  call void @ivtv_set_vps(%struct.ivtv.1060* %itv, i32 1)
  br label %cleanup

cleanup:                                          ; preds = %if.then169, %if.end166, %if.else117, %if.then116, %if.then110, %if.else27, %if.then26, %if.then20
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then110 ], [ 1, %if.else117 ], [ 1, %if.then116 ], [ 1, %if.then20 ], [ 1, %if.else27 ], [ 1, %if.then26 ], [ 0, %if.then169 ], [ 0, %if.end166 ]
  %64 = bitcast %struct.vbi_cc* %cc to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %64) #8
  %65 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %65) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_set_wss(%struct.ivtv.1060* %itv, i32 %enabled, i32 %mode) #0 {
entry:
  %data = alloca %struct.v4l2_sliced_vbi_data, align 4
  %0 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %1 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %1, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %std_out = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 36
  %2 = load i64, i64* %std_out, align 8, !tbaa !167
  %and1 = and i64 %2, 16713471
  %tobool2 = icmp eq i64 %and1, 0
  %tobool3 = icmp ne i32 %enabled, 0
  %or.cond = or i1 %tobool2, %tobool3
  %mode.addr.0 = select i1 %or.cond, i32 %mode, i32 8
  %enabled.addr.0 = select i1 %or.cond, i32 %enabled, i32 1
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 0
  store i32 16384, i32* %id, align 4, !tbaa !810
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 0, i32* %field, align 4, !tbaa !813
  %tobool6 = icmp ne i32 %enabled.addr.0, 0
  %3 = zext i1 %tobool6 to i64
  %cond = select i1 %tobool6, i32 23, i32 0
  %line = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 2
  store i32 %cond, i32* %line, align 4, !tbaa !812
  %and7 = and i32 %mode.addr.0, 255
  %conv = trunc i32 %and7 to i8
  %data8 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx = getelementptr inbounds [48 x i8], [48 x i8]* %data8, i64 0, i64 0
  store i8 %conv, i8* %arrayidx, align 4, !tbaa !142
  %shr = ashr i32 %mode.addr.0, 8
  %and9 = and i32 %shr, 255
  %conv10 = trunc i32 %and9 to i8
  %data11 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx12 = getelementptr inbounds [48 x i8], [48 x i8]* %data11, i64 0, i64 1
  store i8 %conv10, i8* %arrayidx12, align 1, !tbaa !142
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %list31.sink = phi %struct.list_head* [ %list31, %for.inc ], [ %subdevs, %if.end ]
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %list31.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next32, align 8, !tbaa !86
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr34 = getelementptr inbounds i8, i8* %5, i64 -128
  %6 = bitcast i8* %add.ptr34 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  %v4l2_dev14 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs15 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev14, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs15
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 10
  %7 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and17 = and i32 %7, 4
  %tobool18 = icmp ne i32 %and17, 0
  br i1 %tobool18, label %land.lhs.true19, label %for.inc

land.lhs.true19:                                  ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %8 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %8, i32 0, i32 4
  %9 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi, align 8, !tbaa !546
  %tobool20 = icmp ne %struct.v4l2_subdev_vbi_ops* %9, null
  br i1 %tobool20, label %land.lhs.true21, label %for.inc

land.lhs.true21:                                  ; preds = %land.lhs.true19
  %ops22 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %10 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops22, align 8, !tbaa !79
  %vbi23 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %10, i32 0, i32 4
  %11 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi23, align 8, !tbaa !546
  %s_vbi_data = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %11, i32 0, i32 1
  %12 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data, align 8, !tbaa !827
  %tobool24 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %12, null
  br i1 %tobool24, label %if.then25, label %for.inc

if.then25:                                        ; preds = %land.lhs.true21
  %ops26 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 6
  %13 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops26, align 8, !tbaa !79
  %vbi27 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %13, i32 0, i32 4
  %14 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi27, align 8, !tbaa !546
  %s_vbi_data28 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %14, i32 0, i32 1
  %15 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data28, align 8, !tbaa !827
  %call = call i32 %15(%struct.v4l2_subdev* %6, %struct.v4l2_sliced_vbi_data* %data)
  br label %for.inc

for.inc:                                          ; preds = %if.then25, %land.lhs.true21, %land.lhs.true19, %for.body
  %list31 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %6, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 0, %for.cond ]
  %16 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %16) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit.754(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !832
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.755(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_set_vps(%struct.ivtv.1060* %itv, i32 %enabled) #0 {
entry:
  %data = alloca %struct.v4l2_sliced_vbi_data, align 4
  %0 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  %v4l2_cap = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 8
  %1 = load i32, i32* %v4l2_cap, align 4, !tbaa !172
  %and = and i32 %1, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 0
  store i32 1024, i32* %id, align 4, !tbaa !810
  %field = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 1
  store i32 0, i32* %field, align 4, !tbaa !813
  %tobool1 = icmp ne i32 %enabled, 0
  %2 = zext i1 %tobool1 to i64
  %cond = select i1 %tobool1, i32 16, i32 0
  %line = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 2
  store i32 %cond, i32* %line, align 4, !tbaa !812
  %vbi = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %vps_payload = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi, i32 0, i32 23
  %data2 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps_payload, i32 0, i32 0
  %arrayidx = getelementptr inbounds [5 x i8], [5 x i8]* %data2, i64 0, i64 0
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !142
  %data3 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx4 = getelementptr inbounds [48 x i8], [48 x i8]* %data3, i64 0, i64 2
  store i8 %3, i8* %arrayidx4, align 2, !tbaa !142
  %vbi5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %vps_payload6 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi5, i32 0, i32 23
  %data7 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps_payload6, i32 0, i32 0
  %arrayidx8 = getelementptr inbounds [5 x i8], [5 x i8]* %data7, i64 0, i64 1
  %4 = load i8, i8* %arrayidx8, align 1, !tbaa !142
  %data9 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx10 = getelementptr inbounds [48 x i8], [48 x i8]* %data9, i64 0, i64 8
  store i8 %4, i8* %arrayidx10, align 4, !tbaa !142
  %vbi11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %vps_payload12 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi11, i32 0, i32 23
  %data13 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps_payload12, i32 0, i32 0
  %arrayidx14 = getelementptr inbounds [5 x i8], [5 x i8]* %data13, i64 0, i64 2
  %5 = load i8, i8* %arrayidx14, align 1, !tbaa !142
  %data15 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx16 = getelementptr inbounds [48 x i8], [48 x i8]* %data15, i64 0, i64 9
  store i8 %5, i8* %arrayidx16, align 1, !tbaa !142
  %vbi17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %vps_payload18 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi17, i32 0, i32 23
  %data19 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps_payload18, i32 0, i32 0
  %arrayidx20 = getelementptr inbounds [5 x i8], [5 x i8]* %data19, i64 0, i64 3
  %6 = load i8, i8* %arrayidx20, align 1, !tbaa !142
  %data21 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx22 = getelementptr inbounds [48 x i8], [48 x i8]* %data21, i64 0, i64 10
  store i8 %6, i8* %arrayidx22, align 2, !tbaa !142
  %vbi23 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 89
  %vps_payload24 = getelementptr inbounds %struct.vbi_info, %struct.vbi_info* %vbi23, i32 0, i32 23
  %data25 = getelementptr inbounds %struct.vbi_vps, %struct.vbi_vps* %vps_payload24, i32 0, i32 0
  %arrayidx26 = getelementptr inbounds [5 x i8], [5 x i8]* %data25, i64 0, i64 4
  %7 = load i8, i8* %arrayidx26, align 1, !tbaa !142
  %data27 = getelementptr inbounds %struct.v4l2_sliced_vbi_data, %struct.v4l2_sliced_vbi_data* %data, i32 0, i32 4
  %arrayidx28 = getelementptr inbounds [48 x i8], [48 x i8]* %data27, i64 0, i64 11
  store i8 %7, i8* %arrayidx28, align 1, !tbaa !142
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %list46.sink = phi %struct.list_head* [ %list46, %for.inc ], [ %subdevs, %if.end ]
  %next47 = getelementptr inbounds %struct.list_head, %struct.list_head* %list46.sink, i32 0, i32 0
  %8 = load %struct.list_head*, %struct.list_head** %next47, align 8, !tbaa !86
  %9 = bitcast %struct.list_head* %8 to i8*
  %add.ptr49 = getelementptr inbounds i8, i8* %9, i64 -128
  %10 = bitcast i8* %add.ptr49 to %struct.v4l2_subdev*
  %list = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 1
  %v4l2_dev30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %subdevs31 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev30, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %list, %subdevs31
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %grp_id = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 10
  %11 = load i32, i32* %grp_id, align 8, !tbaa !87
  %and32 = and i32 %11, 4
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %ops = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %12 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops, align 8, !tbaa !79
  %vbi34 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %12, i32 0, i32 4
  %13 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi34, align 8, !tbaa !546
  %tobool35 = icmp ne %struct.v4l2_subdev_vbi_ops* %13, null
  br i1 %tobool35, label %land.lhs.true36, label %for.inc

land.lhs.true36:                                  ; preds = %land.lhs.true
  %ops37 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %14 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops37, align 8, !tbaa !79
  %vbi38 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %14, i32 0, i32 4
  %15 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi38, align 8, !tbaa !546
  %s_vbi_data = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %15, i32 0, i32 1
  %16 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data, align 8, !tbaa !827
  %tobool39 = icmp ne i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)* %16, null
  br i1 %tobool39, label %if.then40, label %for.inc

if.then40:                                        ; preds = %land.lhs.true36
  %ops41 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 6
  %17 = load %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_ops** %ops41, align 8, !tbaa !79
  %vbi42 = getelementptr inbounds %struct.v4l2_subdev_ops, %struct.v4l2_subdev_ops* %17, i32 0, i32 4
  %18 = load %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_vbi_ops** %vbi42, align 8, !tbaa !546
  %s_vbi_data43 = getelementptr inbounds %struct.v4l2_subdev_vbi_ops, %struct.v4l2_subdev_vbi_ops* %18, i32 0, i32 1
  %19 = load i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)** %s_vbi_data43, align 8, !tbaa !827
  %call = call i32 %19(%struct.v4l2_subdev* %10, %struct.v4l2_sliced_vbi_data* %data)
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %land.lhs.true36, %land.lhs.true, %for.body
  %list46 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %10, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 0, %for.cond ]
  %20 = bitcast %struct.v4l2_sliced_vbi_data* %data to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %20) #8
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_yuv_filter_check(%struct.ivtv.1060* %itv) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %uv.0 = phi i32 [ 4, %entry ], [ %add11, %for.inc ]
  %y.0 = phi i32 [ 16, %entry ], [ %add10, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp slt i32 %i.0, 16
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %dec_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %0 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %add = add nsw i32 9688, %y.0
  %idx.ext = zext i32 %add to i64
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext
  %call = call i32 @readl.760(i8* %add.ptr)
  %shl = shl i32 %i.0, 16
  %cmp1 = icmp ne i32 %call, %shl
  br i1 %cmp1, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %dec_mem2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %1 = load i8*, i8** %dec_mem2, align 8, !tbaa !235
  %add3 = add nsw i32 13144, %uv.0
  %idx.ext4 = zext i32 %add3 to i64
  %add.ptr5 = getelementptr i8, i8* %1, i64 %idx.ext4
  %call6 = call i32 @readl.760(i8* %add.ptr5)
  %shl7 = shl i32 %i.0, 16
  %cmp8 = icmp ne i32 %call6, %shl7
  br i1 %cmp8, label %if.then, label %for.inc

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.761, i32 0, i32 0), i8* %arraydecay)
  br label %cleanup

for.inc:                                          ; preds = %lor.lhs.false
  %inc = add nsw i32 %i.0, 1
  %add10 = add nsw i32 %y.0, 24
  %add11 = add nsw i32 %uv.0, 12
  br label %for.cond

cleanup:                                          ; preds = %if.then, %for.cond
  %retval.0 = phi i32 [ -1, %if.then ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @readl.760(i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  %1 = call i32 asm sideeffect "movl $1,$0", "=r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %0) #8, !srcloc !833
  ret i32 %1
}

; Function Attrs: nounwind uwtable
define void @ivtv_yuv_work_handler(%struct.ivtv.1060* %itv) #0 {
entry:
  %f = alloca %struct.yuv_frame_info, align 4
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = bitcast %struct.yuv_frame_info* %f to i8*
  call void @llvm.lifetime.start.p0i8(i64 92, i8* %0) #8
  %update_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 56
  %1 = load i32, i32* %update_frame, align 8, !tbaa !670
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 256, %2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.1.764, i32 0, i32 0), i8* %arraydecay, i32 %1)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %3 = bitcast %struct.yuv_frame_info* %f to i8*
  %4 = bitcast %struct.yuv_frame_info* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 92, i32 4, i1 false), !tbaa.struct !834
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 40
  %5 = load i8, i8* %track_osd, align 8, !tbaa !568
  %tobool1 = icmp ne i8 %5, 0
  br i1 %tobool1, label %if.then2, label %if.else

if.then2:                                         ; preds = %do.end
  %osd_x_pan = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 43
  %6 = load i32, i32* %osd_x_pan, align 4, !tbaa !835
  %pan_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  store i32 %6, i32* %pan_x, align 4, !tbaa !836
  %osd_y_pan = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 44
  %7 = load i32, i32* %osd_y_pan, align 8, !tbaa !837
  %pan_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 10
  store i32 %7, i32* %pan_y, align 4, !tbaa !838
  %osd_vis_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 45
  %8 = load i32, i32* %osd_vis_w, align 4, !tbaa !839
  %vis_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 11
  store i32 %8, i32* %vis_w, align 4, !tbaa !840
  %osd_vis_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 46
  %9 = load i32, i32* %osd_vis_h, align 8, !tbaa !841
  br label %if.end7

if.else:                                          ; preds = %do.end
  %pan_x3 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  store i32 0, i32* %pan_x3, align 4, !tbaa !836
  %pan_y4 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 10
  store i32 0, i32* %pan_y4, align 4, !tbaa !838
  %vis_w5 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 11
  store i32 720, i32* %vis_w5, align 4, !tbaa !840
  %decode_height = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %10 = load i32, i32* %decode_height, align 4, !tbaa !842
  br label %if.end7

if.end7:                                          ; preds = %if.else, %if.then2
  %.sink = phi i32 [ %10, %if.else ], [ %9, %if.then2 ]
  %vis_h6 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 12
  store i32 %.sink, i32* %vis_h6, align 4, !tbaa !843
  %call8 = call i32 @ivtv_yuv_window_setup(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %if.end11, label %cleanup

if.end11:                                         ; preds = %if.end7
  %and12 = and i32 %call8, 4
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then14, label %if.else15

if.then14:                                        ; preds = %if.end11
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %11 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %11, i64 10392
  call void @writel.765(i32 16810112, i8* %add.ptr)
  br label %if.end29

if.else15:                                        ; preds = %if.end11
  %tobool16 = icmp ne i32 %call8, 0
  br i1 %tobool16, label %if.then17, label %if.end29

if.then17:                                        ; preds = %if.else15
  %reg_mem18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %12 = load i8*, i8** %reg_mem18, align 8, !tbaa !171
  %add.ptr19 = getelementptr i8, i8* %12, i64 10392
  call void @writel.765(i32 1081472, i8* %add.ptr19)
  %and20 = and i32 %call8, 1
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %if.end23

if.then22:                                        ; preds = %if.then17
  call void @ivtv_yuv_handle_horizontal(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f)
  br label %if.end23

if.end23:                                         ; preds = %if.then22, %if.then17
  %and24 = and i32 %call8, 2
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.then26, label %if.end29

if.then26:                                        ; preds = %if.end23
  call void @ivtv_yuv_handle_vertical(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f)
  br label %if.end29

if.end29:                                         ; preds = %if.then26, %if.end23, %if.else15, %if.then14
  %old_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 59
  %13 = bitcast %struct.yuv_frame_info* %old_frame_info to i8*
  %14 = bitcast %struct.yuv_frame_info* %f to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 92, i32 4, i1 false), !tbaa.struct !834
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %if.end7
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end29 ], [ 1, %if.end7 ]
  %15 = bitcast %struct.yuv_frame_info* %f to i8*
  call void @llvm.lifetime.end.p0i8(i64 92, i8* %15) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_yuv_window_setup(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %old_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 59
  %src_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %0 = load i32, i32* %src_x, align 4, !tbaa !844
  %cmp = icmp slt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %src_x1 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  store i32 0, i32* %src_x1, align 4, !tbaa !844
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %src_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %1 = load i32, i32* %src_y, align 4, !tbaa !845
  %cmp2 = icmp slt i32 %1, 0
  br i1 %cmp2, label %if.then3, label %if.end5

if.then3:                                         ; preds = %if.end
  %src_y4 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  store i32 0, i32* %src_y4, align 4, !tbaa !845
  br label %if.end5

if.end5:                                          ; preds = %if.then3, %if.end
  %src_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %2 = load i32, i32* %src_w, align 4, !tbaa !669
  %dst_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %3 = load i32, i32* %dst_w, align 4, !tbaa !846
  %mul = mul i32 4, %3
  %sub = sub i32 %2, %mul
  %cmp6 = icmp sgt i32 %sub, 0
  br i1 %cmp6, label %if.then7, label %if.end19

if.then7:                                         ; preds = %if.end5
  %div = sdiv i32 %sub, 2
  %src_x8 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %4 = load i32, i32* %src_x8, align 4, !tbaa !844
  %add = add nsw i32 %4, %div
  store i32 %add, i32* %src_x8, align 4, !tbaa !844
  %src_w9 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %5 = load i32, i32* %src_w9, align 4, !tbaa !669
  %sub10 = sub i32 %5, %sub
  %and = and i32 %sub10, -4
  %src_w11 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  store i32 %and, i32* %src_w11, align 4, !tbaa !669
  %src_w12 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %6 = load i32, i32* %src_w12, align 4, !tbaa !669
  %div13 = udiv i32 %6, 4
  %dst_w14 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  store i32 %div13, i32* %dst_w14, align 4, !tbaa !846
  %dst_w15 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %7 = load i32, i32* %dst_w15, align 4, !tbaa !846
  %and16 = and i32 %7, 1
  %dst_w17 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %8 = load i32, i32* %dst_w17, align 4, !tbaa !846
  %add18 = add i32 %8, %and16
  store i32 %add18, i32* %dst_w17, align 4, !tbaa !846
  br label %if.end19

if.end19:                                         ; preds = %if.then7, %if.end5
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %9 = load i32, i32* %src_h, align 4, !tbaa !636
  %dst_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %10 = load i32, i32* %dst_h, align 4, !tbaa !847
  %div20 = udiv i32 %9, %10
  %cmp21 = icmp uge i32 %div20, 2
  br i1 %cmp21, label %if.then22, label %if.end44

if.then22:                                        ; preds = %if.end19
  %interlaced_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  store i32 1, i32* %interlaced_y, align 4, !tbaa !848
  %src_h23 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %11 = load i32, i32* %src_h23, align 4, !tbaa !636
  %dst_h24 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %12 = load i32, i32* %dst_h24, align 4, !tbaa !847
  %mul25 = mul i32 4, %12
  %sub26 = sub i32 %11, %mul25
  %cmp27 = icmp sgt i32 %sub26, 0
  br i1 %cmp27, label %if.then28, label %if.end44

if.then28:                                        ; preds = %if.then22
  %div29 = sdiv i32 %sub26, 2
  %src_y30 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %13 = load i32, i32* %src_y30, align 4, !tbaa !845
  %add31 = add nsw i32 %13, %div29
  store i32 %add31, i32* %src_y30, align 4, !tbaa !845
  %src_h32 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %14 = load i32, i32* %src_h32, align 4, !tbaa !636
  %sub33 = sub i32 %14, %sub26
  %and34 = and i32 %sub33, -4
  %src_h35 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  store i32 %and34, i32* %src_h35, align 4, !tbaa !636
  %src_h36 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %15 = load i32, i32* %src_h36, align 4, !tbaa !636
  %div37 = udiv i32 %15, 4
  %dst_h38 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  store i32 %div37, i32* %dst_h38, align 4, !tbaa !847
  %dst_h39 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %16 = load i32, i32* %dst_h39, align 4, !tbaa !847
  %and40 = and i32 %16, 1
  %dst_h41 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %17 = load i32, i32* %dst_h41, align 4, !tbaa !847
  %add42 = add i32 %17, %and40
  store i32 %add42, i32* %dst_h41, align 4, !tbaa !847
  br label %if.end44

if.end44:                                         ; preds = %if.then28, %if.then22, %if.end19
  %dst_w45 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %18 = load i32, i32* %dst_w45, align 4, !tbaa !846
  %cmp46 = icmp sle i32 %18, 2
  br i1 %cmp46, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end44
  %dst_h47 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %19 = load i32, i32* %dst_h47, align 4, !tbaa !847
  %cmp48 = icmp sle i32 %19, 2
  br i1 %cmp48, label %cleanup, label %lor.lhs.false49

lor.lhs.false49:                                  ; preds = %lor.lhs.false
  %src_w50 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %20 = load i32, i32* %src_w50, align 4, !tbaa !669
  %cmp51 = icmp sle i32 %20, 2
  br i1 %cmp51, label %cleanup, label %lor.lhs.false52

lor.lhs.false52:                                  ; preds = %lor.lhs.false49
  %src_h53 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %21 = load i32, i32* %src_h53, align 4, !tbaa !636
  %cmp54 = icmp sle i32 %21, 2
  br i1 %cmp54, label %cleanup, label %if.end56

if.end56:                                         ; preds = %lor.lhs.false52
  %src_h57 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %22 = load i32, i32* %src_h57, align 4, !tbaa !636
  %shl = shl i32 %22, 16
  %dst_h58 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %23 = load i32, i32* %dst_h58, align 4, !tbaa !847
  %div59 = udiv i32 %shl, %23
  %pan_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 10
  %24 = load i32, i32* %pan_y, align 4, !tbaa !838
  %dst_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %25 = load i32, i32* %dst_y, align 4, !tbaa !849
  %sub60 = sub nsw i32 %24, %25
  %cmp61 = icmp sgt i32 %sub60, 0
  br i1 %cmp61, label %if.then62, label %if.else

if.then62:                                        ; preds = %if.end56
  %mul63 = mul i32 %div59, %sub60
  %shr = lshr i32 %mul63, 16
  %src_y64 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %26 = load i32, i32* %src_y64, align 4, !tbaa !845
  %add65 = add i32 %26, %shr
  store i32 %add65, i32* %src_y64, align 4, !tbaa !845
  %mul66 = mul i32 %div59, %sub60
  %shr67 = lshr i32 %mul66, 16
  %src_h68 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %27 = load i32, i32* %src_h68, align 4, !tbaa !636
  %sub69 = sub i32 %27, %shr67
  store i32 %sub69, i32* %src_h68, align 4, !tbaa !636
  %dst_h70 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %28 = load i32, i32* %dst_h70, align 4, !tbaa !847
  %sub71 = sub i32 %28, %sub60
  store i32 %sub71, i32* %dst_h70, align 4, !tbaa !847
  %dst_y72 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  store i32 0, i32* %dst_y72, align 4, !tbaa !849
  br label %if.end76

if.else:                                          ; preds = %if.end56
  %pan_y73 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 10
  %29 = load i32, i32* %pan_y73, align 4, !tbaa !838
  %dst_y74 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %30 = load i32, i32* %dst_y74, align 4, !tbaa !849
  %sub75 = sub nsw i32 %30, %29
  store i32 %sub75, i32* %dst_y74, align 4, !tbaa !849
  br label %if.end76

if.end76:                                         ; preds = %if.else, %if.then62
  %dst_h77 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %31 = load i32, i32* %dst_h77, align 4, !tbaa !847
  %dst_y78 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %32 = load i32, i32* %dst_y78, align 4, !tbaa !849
  %add79 = add i32 %31, %32
  %vis_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 12
  %33 = load i32, i32* %vis_h, align 4, !tbaa !843
  %sub80 = sub i32 %add79, %33
  %cmp81 = icmp sgt i32 %sub80, 0
  br i1 %cmp81, label %if.then82, label %if.end89

if.then82:                                        ; preds = %if.end76
  %dst_h83 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %34 = load i32, i32* %dst_h83, align 4, !tbaa !847
  %sub84 = sub i32 %34, %sub80
  store i32 %sub84, i32* %dst_h83, align 4, !tbaa !847
  %mul85 = mul i32 %div59, %sub80
  %shr86 = lshr i32 %mul85, 16
  %src_h87 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %35 = load i32, i32* %src_h87, align 4, !tbaa !636
  %sub88 = sub i32 %35, %shr86
  store i32 %sub88, i32* %src_h87, align 4, !tbaa !636
  br label %if.end89

if.end89:                                         ; preds = %if.then82, %if.end76
  %src_w90 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %36 = load i32, i32* %src_w90, align 4, !tbaa !669
  %shl91 = shl i32 %36, 16
  %dst_w92 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %37 = load i32, i32* %dst_w92, align 4, !tbaa !846
  %div93 = udiv i32 %shl91, %37
  %pan_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %38 = load i32, i32* %pan_x, align 4, !tbaa !836
  %dst_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %39 = load i32, i32* %dst_x, align 4, !tbaa !850
  %sub94 = sub nsw i32 %38, %39
  %cmp95 = icmp sgt i32 %sub94, 0
  br i1 %cmp95, label %if.then96, label %if.else108

if.then96:                                        ; preds = %if.end89
  %mul97 = mul i32 %div93, %sub94
  %shr98 = lshr i32 %mul97, 16
  %src_x99 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %40 = load i32, i32* %src_x99, align 4, !tbaa !844
  %add100 = add i32 %40, %shr98
  store i32 %add100, i32* %src_x99, align 4, !tbaa !844
  %mul101 = mul i32 %div93, %sub94
  %shr102 = lshr i32 %mul101, 16
  %src_w103 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %41 = load i32, i32* %src_w103, align 4, !tbaa !669
  %sub104 = sub i32 %41, %shr102
  store i32 %sub104, i32* %src_w103, align 4, !tbaa !669
  %dst_w105 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %42 = load i32, i32* %dst_w105, align 4, !tbaa !846
  %sub106 = sub i32 %42, %sub94
  store i32 %sub106, i32* %dst_w105, align 4, !tbaa !846
  %dst_x107 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  store i32 0, i32* %dst_x107, align 4, !tbaa !850
  br label %if.end112

if.else108:                                       ; preds = %if.end89
  %pan_x109 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %43 = load i32, i32* %pan_x109, align 4, !tbaa !836
  %dst_x110 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %44 = load i32, i32* %dst_x110, align 4, !tbaa !850
  %sub111 = sub nsw i32 %44, %43
  store i32 %sub111, i32* %dst_x110, align 4, !tbaa !850
  br label %if.end112

if.end112:                                        ; preds = %if.else108, %if.then96
  %dst_w113 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %45 = load i32, i32* %dst_w113, align 4, !tbaa !846
  %dst_x114 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %46 = load i32, i32* %dst_x114, align 4, !tbaa !850
  %add115 = add i32 %45, %46
  %vis_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 11
  %47 = load i32, i32* %vis_w, align 4, !tbaa !840
  %sub116 = sub i32 %add115, %47
  %cmp117 = icmp sgt i32 %sub116, 0
  br i1 %cmp117, label %if.then118, label %if.end125

if.then118:                                       ; preds = %if.end112
  %dst_w119 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %48 = load i32, i32* %dst_w119, align 4, !tbaa !846
  %sub120 = sub i32 %48, %sub116
  store i32 %sub120, i32* %dst_w119, align 4, !tbaa !846
  %mul121 = mul i32 %div93, %sub116
  %shr122 = lshr i32 %mul121, 16
  %src_w123 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %49 = load i32, i32* %src_w123, align 4, !tbaa !669
  %sub124 = sub i32 %49, %shr122
  store i32 %sub124, i32* %src_w123, align 4, !tbaa !669
  br label %if.end125

if.end125:                                        ; preds = %if.then118, %if.end112
  %yuv_info126 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %track_osd = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info126, i32 0, i32 40
  %50 = load i8, i8* %track_osd, align 8, !tbaa !304
  %tobool = icmp ne i8 %50, 0
  br i1 %tobool, label %if.then127, label %if.end134

if.then127:                                       ; preds = %if.end125
  %yuv_info128 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %osd_x_offset = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info128, i32 0, i32 41
  %51 = load i32, i32* %osd_x_offset, align 4, !tbaa !851
  %dst_x129 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %52 = load i32, i32* %dst_x129, align 4, !tbaa !850
  %add130 = add i32 %52, %51
  store i32 %add130, i32* %dst_x129, align 4, !tbaa !850
  %yuv_info131 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %osd_y_offset = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info131, i32 0, i32 42
  %53 = load i32, i32* %osd_y_offset, align 8, !tbaa !852
  %dst_y132 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %54 = load i32, i32* %dst_y132, align 4, !tbaa !849
  %add133 = add i32 %54, %53
  store i32 %add133, i32* %dst_y132, align 4, !tbaa !849
  br label %if.end134

if.end134:                                        ; preds = %if.then127, %if.end125
  %dst_w135 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %55 = load i32, i32* %dst_w135, align 4, !tbaa !846
  %and136 = and i32 %55, -2
  store i32 %and136, i32* %dst_w135, align 4, !tbaa !846
  %dst_x137 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %56 = load i32, i32* %dst_x137, align 4, !tbaa !850
  %and138 = and i32 %56, -2
  store i32 %and138, i32* %dst_x137, align 4, !tbaa !850
  %src_x139 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %57 = load i32, i32* %src_x139, align 4, !tbaa !844
  %and140 = and i32 %57, 1
  %src_w141 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %58 = load i32, i32* %src_w141, align 4, !tbaa !669
  %add142 = add i32 %58, %and140
  store i32 %add142, i32* %src_w141, align 4, !tbaa !669
  %src_x143 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %59 = load i32, i32* %src_x143, align 4, !tbaa !844
  %and144 = and i32 %59, -2
  store i32 %and144, i32* %src_x143, align 4, !tbaa !844
  %src_w145 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %60 = load i32, i32* %src_w145, align 4, !tbaa !669
  %and146 = and i32 %60, -2
  store i32 %and146, i32* %src_w145, align 4, !tbaa !669
  %dst_w147 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %61 = load i32, i32* %dst_w147, align 4, !tbaa !846
  %and148 = and i32 %61, -2
  store i32 %and148, i32* %dst_w147, align 4, !tbaa !846
  %dst_h149 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %62 = load i32, i32* %dst_h149, align 4, !tbaa !847
  %and150 = and i32 %62, -2
  store i32 %and150, i32* %dst_h149, align 4, !tbaa !847
  %dst_y151 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %63 = load i32, i32* %dst_y151, align 4, !tbaa !849
  %and152 = and i32 %63, -2
  store i32 %and152, i32* %dst_y151, align 4, !tbaa !849
  %src_y153 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %64 = load i32, i32* %src_y153, align 4, !tbaa !845
  %and154 = and i32 %64, 1
  %src_h155 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %65 = load i32, i32* %src_h155, align 4, !tbaa !636
  %add156 = add i32 %65, %and154
  store i32 %add156, i32* %src_h155, align 4, !tbaa !636
  %src_y157 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %66 = load i32, i32* %src_y157, align 4, !tbaa !845
  %and158 = and i32 %66, -2
  store i32 %and158, i32* %src_y157, align 4, !tbaa !845
  %src_h159 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %67 = load i32, i32* %src_h159, align 4, !tbaa !636
  %and160 = and i32 %67, -2
  store i32 %and160, i32* %src_h159, align 4, !tbaa !636
  %dst_h161 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %68 = load i32, i32* %dst_h161, align 4, !tbaa !847
  %and162 = and i32 %68, -2
  store i32 %and162, i32* %dst_h161, align 4, !tbaa !847
  %dst_w163 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %69 = load i32, i32* %dst_w163, align 4, !tbaa !846
  %src_w164 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %70 = load i32, i32* %src_w164, align 4, !tbaa !669
  %div165 = udiv i32 %70, 4
  %cmp166 = icmp ult i32 %69, %div165
  br i1 %cmp166, label %if.then167, label %if.end177

if.then167:                                       ; preds = %if.end134
  %src_w168 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %71 = load i32, i32* %src_w168, align 4, !tbaa !669
  %and169 = and i32 %71, -4
  store i32 %and169, i32* %src_w168, align 4, !tbaa !669
  %src_w170 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %72 = load i32, i32* %src_w170, align 4, !tbaa !669
  %div171 = udiv i32 %72, 4
  %dst_w172 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  store i32 %div171, i32* %dst_w172, align 4, !tbaa !846
  %dst_w173 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %73 = load i32, i32* %dst_w173, align 4, !tbaa !846
  %and174 = and i32 %73, 1
  %dst_w175 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %74 = load i32, i32* %dst_w175, align 4, !tbaa !846
  %add176 = add i32 %74, %and174
  store i32 %add176, i32* %dst_w175, align 4, !tbaa !846
  br label %if.end177

if.end177:                                        ; preds = %if.then167, %if.end134
  %dst_h178 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %75 = load i32, i32* %dst_h178, align 4, !tbaa !847
  %src_h179 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %76 = load i32, i32* %src_h179, align 4, !tbaa !636
  %div180 = udiv i32 %76, 4
  %cmp181 = icmp ult i32 %75, %div180
  br i1 %cmp181, label %if.then182, label %if.end192

if.then182:                                       ; preds = %if.end177
  %src_h183 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %77 = load i32, i32* %src_h183, align 4, !tbaa !636
  %and184 = and i32 %77, -4
  store i32 %and184, i32* %src_h183, align 4, !tbaa !636
  %src_h185 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %78 = load i32, i32* %src_h185, align 4, !tbaa !636
  %div186 = udiv i32 %78, 4
  %dst_h187 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  store i32 %div186, i32* %dst_h187, align 4, !tbaa !847
  %dst_h188 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %79 = load i32, i32* %dst_h188, align 4, !tbaa !847
  %and189 = and i32 %79, 1
  %dst_h190 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %80 = load i32, i32* %dst_h190, align 4, !tbaa !847
  %add191 = add i32 %80, %and189
  store i32 %add191, i32* %dst_h190, align 4, !tbaa !847
  br label %if.end192

if.end192:                                        ; preds = %if.then182, %if.end177
  %dst_w193 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %81 = load i32, i32* %dst_w193, align 4, !tbaa !846
  %cmp194 = icmp sle i32 %81, 2
  br i1 %cmp194, label %cleanup, label %lor.lhs.false195

lor.lhs.false195:                                 ; preds = %if.end192
  %dst_h196 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %82 = load i32, i32* %dst_h196, align 4, !tbaa !847
  %cmp197 = icmp sle i32 %82, 2
  br i1 %cmp197, label %cleanup, label %lor.lhs.false198

lor.lhs.false198:                                 ; preds = %lor.lhs.false195
  %src_w199 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %83 = load i32, i32* %src_w199, align 4, !tbaa !669
  %cmp200 = icmp sle i32 %83, 2
  br i1 %cmp200, label %cleanup, label %lor.lhs.false201

lor.lhs.false201:                                 ; preds = %lor.lhs.false198
  %src_h202 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %84 = load i32, i32* %src_h202, align 4, !tbaa !636
  %cmp203 = icmp sle i32 %84, 2
  br i1 %cmp203, label %cleanup, label %if.end205

if.end205:                                        ; preds = %lor.lhs.false201
  %dst_w206 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 7
  %85 = load i32, i32* %dst_w206, align 4, !tbaa !846
  %dst_w207 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %86 = load i32, i32* %dst_w207, align 4, !tbaa !846
  %cmp208 = icmp ne i32 %85, %86
  br i1 %cmp208, label %if.then229, label %lor.lhs.false209

lor.lhs.false209:                                 ; preds = %if.end205
  %src_w210 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 3
  %87 = load i32, i32* %src_w210, align 4, !tbaa !669
  %src_w211 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %88 = load i32, i32* %src_w211, align 4, !tbaa !669
  %cmp212 = icmp ne i32 %87, %88
  br i1 %cmp212, label %if.then229, label %lor.lhs.false213

lor.lhs.false213:                                 ; preds = %lor.lhs.false209
  %dst_x214 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 5
  %89 = load i32, i32* %dst_x214, align 4, !tbaa !850
  %dst_x215 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %90 = load i32, i32* %dst_x215, align 4, !tbaa !850
  %cmp216 = icmp ne i32 %89, %90
  br i1 %cmp216, label %if.then229, label %lor.lhs.false217

lor.lhs.false217:                                 ; preds = %lor.lhs.false213
  %src_x218 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 1
  %91 = load i32, i32* %src_x218, align 4, !tbaa !844
  %src_x219 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %92 = load i32, i32* %src_x219, align 4, !tbaa !844
  %cmp220 = icmp ne i32 %91, %92
  br i1 %cmp220, label %if.then229, label %lor.lhs.false221

lor.lhs.false221:                                 ; preds = %lor.lhs.false217
  %pan_x222 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 9
  %93 = load i32, i32* %pan_x222, align 4, !tbaa !836
  %pan_x223 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %94 = load i32, i32* %pan_x223, align 4, !tbaa !836
  %cmp224 = icmp ne i32 %93, %94
  br i1 %cmp224, label %if.then229, label %lor.lhs.false225

lor.lhs.false225:                                 ; preds = %lor.lhs.false221
  %vis_w226 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 11
  %95 = load i32, i32* %vis_w226, align 4, !tbaa !840
  %vis_w227 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 11
  %96 = load i32, i32* %vis_w227, align 4, !tbaa !840
  %cmp228 = icmp ne i32 %95, %96
  br i1 %cmp228, label %if.then229, label %if.end230

if.then229:                                       ; preds = %lor.lhs.false225, %lor.lhs.false221, %lor.lhs.false217, %lor.lhs.false213, %lor.lhs.false209, %if.end205
  %or = or i32 0, 1
  br label %if.end230

if.end230:                                        ; preds = %if.then229, %lor.lhs.false225
  %yuv_update.0 = phi i32 [ %or, %if.then229 ], [ 0, %lor.lhs.false225 ]
  %src_h231 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 4
  %97 = load i32, i32* %src_h231, align 4, !tbaa !636
  %src_h232 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %98 = load i32, i32* %src_h232, align 4, !tbaa !636
  %cmp233 = icmp ne i32 %97, %98
  br i1 %cmp233, label %if.then264, label %lor.lhs.false234

lor.lhs.false234:                                 ; preds = %if.end230
  %dst_h235 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 8
  %99 = load i32, i32* %dst_h235, align 4, !tbaa !847
  %dst_h236 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %100 = load i32, i32* %dst_h236, align 4, !tbaa !847
  %cmp237 = icmp ne i32 %99, %100
  br i1 %cmp237, label %if.then264, label %lor.lhs.false238

lor.lhs.false238:                                 ; preds = %lor.lhs.false234
  %dst_y239 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 6
  %101 = load i32, i32* %dst_y239, align 4, !tbaa !849
  %dst_y240 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %102 = load i32, i32* %dst_y240, align 4, !tbaa !849
  %cmp241 = icmp ne i32 %101, %102
  br i1 %cmp241, label %if.then264, label %lor.lhs.false242

lor.lhs.false242:                                 ; preds = %lor.lhs.false238
  %src_y243 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 2
  %103 = load i32, i32* %src_y243, align 4, !tbaa !845
  %src_y244 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %104 = load i32, i32* %src_y244, align 4, !tbaa !845
  %cmp245 = icmp ne i32 %103, %104
  br i1 %cmp245, label %if.then264, label %lor.lhs.false246

lor.lhs.false246:                                 ; preds = %lor.lhs.false242
  %pan_y247 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 10
  %105 = load i32, i32* %pan_y247, align 4, !tbaa !838
  %pan_y248 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 10
  %106 = load i32, i32* %pan_y248, align 4, !tbaa !838
  %cmp249 = icmp ne i32 %105, %106
  br i1 %cmp249, label %if.then264, label %lor.lhs.false250

lor.lhs.false250:                                 ; preds = %lor.lhs.false246
  %vis_h251 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 12
  %107 = load i32, i32* %vis_h251, align 4, !tbaa !843
  %vis_h252 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 12
  %108 = load i32, i32* %vis_h252, align 4, !tbaa !843
  %cmp253 = icmp ne i32 %107, %108
  br i1 %cmp253, label %if.then264, label %lor.lhs.false254

lor.lhs.false254:                                 ; preds = %lor.lhs.false250
  %lace_mode = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 19
  %109 = load i32, i32* %lace_mode, align 4, !tbaa !853
  %lace_mode255 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 19
  %110 = load i32, i32* %lace_mode255, align 4, !tbaa !853
  %cmp256 = icmp ne i32 %109, %110
  br i1 %cmp256, label %if.then264, label %lor.lhs.false257

lor.lhs.false257:                                 ; preds = %lor.lhs.false254
  %interlaced_y258 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 13
  %111 = load i32, i32* %interlaced_y258, align 4, !tbaa !848
  %interlaced_y259 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %112 = load i32, i32* %interlaced_y259, align 4, !tbaa !848
  %cmp260 = icmp ne i32 %111, %112
  br i1 %cmp260, label %if.then264, label %lor.lhs.false261

lor.lhs.false261:                                 ; preds = %lor.lhs.false257
  %interlaced_uv = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 14
  %113 = load i32, i32* %interlaced_uv, align 4, !tbaa !854
  %interlaced_uv262 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %114 = load i32, i32* %interlaced_uv262, align 4, !tbaa !854
  %cmp263 = icmp ne i32 %113, %114
  br i1 %cmp263, label %if.then264, label %cleanup

if.then264:                                       ; preds = %lor.lhs.false261, %lor.lhs.false257, %lor.lhs.false254, %lor.lhs.false250, %lor.lhs.false246, %lor.lhs.false242, %lor.lhs.false238, %lor.lhs.false234, %if.end230
  %or265 = or i32 %yuv_update.0, 2
  br label %cleanup

cleanup:                                          ; preds = %if.then264, %lor.lhs.false261, %lor.lhs.false201, %lor.lhs.false198, %lor.lhs.false195, %if.end192, %lor.lhs.false52, %lor.lhs.false49, %lor.lhs.false, %if.end44
  %retval.0 = phi i32 [ 4, %lor.lhs.false52 ], [ 4, %lor.lhs.false49 ], [ 4, %lor.lhs.false ], [ 4, %if.end44 ], [ 4, %lor.lhs.false201 ], [ 4, %lor.lhs.false198 ], [ 4, %lor.lhs.false195 ], [ 4, %if.end192 ], [ %or265, %if.then264 ], [ %yuv_update.0, %lor.lhs.false261 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @writel.765(i32 %val, i8* %addr) #4 {
entry:
  %0 = bitcast i8* %addr to i32*
  call void asm sideeffect "movl $0,$1", "r,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32 %val, i32* %0) #8, !srcloc !855
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_handle_horizontal(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %tru_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 16
  %1 = load i32, i32* %tru_w, align 4, !tbaa !856
  %src_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %2 = load i32, i32* %src_w, align 4, !tbaa !669
  %dst_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %3 = load i32, i32* %dst_w, align 4, !tbaa !846
  %src_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %4 = load i32, i32* %src_x, align 4, !tbaa !844
  %dst_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %5 = load i32, i32* %dst_x, align 4, !tbaa !850
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.3.788, i32 0, i32 0), i8* %arraydecay, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %src_w1 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %6 = load i32, i32* %src_w1, align 4, !tbaa !669
  %src_x2 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %7 = load i32, i32* %src_x2, align 4, !tbaa !844
  %add = add i32 %6, %7
  %dst_w3 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %8 = load i32, i32* %dst_w3, align 4, !tbaa !846
  %dst_x4 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 5
  %9 = load i32, i32* %dst_x4, align 4, !tbaa !850
  %vis_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 11
  %10 = load i32, i32* %vis_w, align 4, !tbaa !840
  %cmp = icmp eq i32 %10, 720
  br i1 %cmp, label %if.then5, label %if.end49

if.then5:                                         ; preds = %do.end
  %tru_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %11 = load i32, i32* %tru_x, align 4, !tbaa !857
  %pan_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %12 = load i32, i32* %pan_x, align 4, !tbaa !836
  %sub = sub nsw i32 %11, %12
  %cmp6 = icmp sgt i32 %sub, -1
  br i1 %cmp6, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %if.then5
  %tru_x7 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %13 = load i32, i32* %tru_x7, align 4, !tbaa !857
  %pan_x8 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %14 = load i32, i32* %pan_x8, align 4, !tbaa !836
  %sub9 = sub nsw i32 %13, %14
  %cmp10 = icmp sle i32 %sub9, 40
  br i1 %cmp10, label %land.lhs.true11, label %if.else

land.lhs.true11:                                  ; preds = %land.lhs.true
  %dst_w12 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %15 = load i32, i32* %dst_w12, align 4, !tbaa !846
  %cmp13 = icmp uge i32 %15, 680
  br i1 %cmp13, label %if.then14, label %if.else

if.then14:                                        ; preds = %land.lhs.true11
  %tru_x15 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %16 = load i32, i32* %tru_x15, align 4, !tbaa !857
  %pan_x16 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %17 = load i32, i32* %pan_x16, align 4, !tbaa !836
  %sub17 = sub nsw i32 %16, %17
  %div = sdiv i32 %sub17, 4
  %sub18 = sub nsw i32 10, %div
  br label %if.end38

if.else:                                          ; preds = %land.lhs.true11, %land.lhs.true, %if.then5
  %tru_x19 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %18 = load i32, i32* %tru_x19, align 4, !tbaa !857
  %pan_x20 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %19 = load i32, i32* %pan_x20, align 4, !tbaa !836
  %sub21 = sub nsw i32 %18, %19
  %cmp22 = icmp slt i32 %sub21, 0
  br i1 %cmp22, label %land.lhs.true23, label %if.end38

land.lhs.true23:                                  ; preds = %if.else
  %tru_x24 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %20 = load i32, i32* %tru_x24, align 4, !tbaa !857
  %pan_x25 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %21 = load i32, i32* %pan_x25, align 4, !tbaa !836
  %sub26 = sub nsw i32 %20, %21
  %cmp27 = icmp sge i32 %sub26, -20
  br i1 %cmp27, label %land.lhs.true28, label %if.end38

land.lhs.true28:                                  ; preds = %land.lhs.true23
  %dst_w29 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %22 = load i32, i32* %dst_w29, align 4, !tbaa !846
  %cmp30 = icmp uge i32 %22, 660
  br i1 %cmp30, label %if.then31, label %if.end38

if.then31:                                        ; preds = %land.lhs.true28
  %tru_x32 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 15
  %23 = load i32, i32* %tru_x32, align 4, !tbaa !857
  %pan_x33 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 9
  %24 = load i32, i32* %pan_x33, align 4, !tbaa !836
  %sub34 = sub nsw i32 %23, %24
  %div35 = sdiv i32 %sub34, 2
  %add36 = add nsw i32 10, %div35
  br label %if.end38

if.end38:                                         ; preds = %if.then31, %land.lhs.true28, %land.lhs.true23, %if.else, %if.then14
  %reg_2870.1 = phi i32 [ %sub18, %if.then14 ], [ %add36, %if.then31 ], [ 0, %land.lhs.true28 ], [ 0, %land.lhs.true23 ], [ 0, %if.else ]
  %dst_w39 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %25 = load i32, i32* %dst_w39, align 4, !tbaa !846
  %src_w40 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %26 = load i32, i32* %src_w40, align 4, !tbaa !669
  %cmp41 = icmp uge i32 %25, %26
  br i1 %cmp41, label %if.then42, label %if.else43

if.then42:                                        ; preds = %if.end38
  %shl = shl i32 %reg_2870.1, 16
  %or = or i32 %shl, %reg_2870.1
  br label %if.end49

if.else43:                                        ; preds = %if.end38
  %and44 = and i32 %reg_2870.1, -2
  %shl45 = shl i32 %and44, 15
  %and46 = and i32 %reg_2870.1, -2
  %or47 = or i32 %shl45, %and46
  br label %if.end49

if.end49:                                         ; preds = %if.else43, %if.then42, %do.end
  %reg_2870.3 = phi i32 [ 0, %do.end ], [ %or, %if.then42 ], [ %or47, %if.else43 ]
  %dst_w50 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %27 = load i32, i32* %dst_w50, align 4, !tbaa !846
  %src_w51 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %28 = load i32, i32* %src_w51, align 4, !tbaa !669
  %cmp52 = icmp ult i32 %27, %28
  %.sink = select i1 %cmp52, i32 851982, i32 1179662
  %sub56 = sub i32 %.sink, %reg_2870.3
  %src_x58 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 1
  %29 = load i32, i32* %src_x58, align 4, !tbaa !844
  %dst_w59 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %30 = load i32, i32* %dst_w59, align 4, !tbaa !846
  %shl60 = shl i32 %30, 21
  %src_w61 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %31 = load i32, i32* %src_w61, align 4, !tbaa !669
  %div62 = udiv i32 %shl60, %31
  %mul = mul i32 %29, %div62
  %shr = lshr i32 %mul, 19
  %dst_w63 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %32 = load i32, i32* %dst_w63, align 4, !tbaa !846
  %src_w64 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %33 = load i32, i32* %src_w64, align 4, !tbaa !669
  %cmp65 = icmp uge i32 %32, %33
  br i1 %cmp65, label %if.then66, label %if.else108

if.then66:                                        ; preds = %if.end49
  %and67 = and i32 %add, -2
  %src_w68 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %34 = load i32, i32* %src_w68, align 4, !tbaa !669
  %mul69 = mul i32 %34, 2097152
  %dst_w70 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %35 = load i32, i32* %dst_w70, align 4, !tbaa !846
  %div71 = udiv i32 %mul69, %35
  %dst_w72 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %36 = load i32, i32* %dst_w72, align 4, !tbaa !846
  %mul73 = mul i32 %div71, %36
  %src_w74 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %37 = load i32, i32* %src_w74, align 4, !tbaa !669
  %mul75 = mul i32 %37, 2097152
  %cmp76 = icmp ne i32 %mul73, %mul75
  %inc = add i32 %div71, 1
  %inc.div71 = select i1 %cmp76, i32 %inc, i32 %div71
  %shl79 = shl i32 %8, 16
  %or80 = or i32 %shl79, %and67
  %shl81 = shl i32 %8, 16
  %or82 = or i32 %shl81, %and67
  %shr83 = lshr i32 %inc.div71, 2
  %shr84 = lshr i32 %inc.div71, 2
  %shr85 = lshr i32 %inc.div71, 1
  %shr86 = lshr i32 %inc.div71, 1
  %dst_w87 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %38 = load i32, i32* %dst_w87, align 4, !tbaa !846
  %src_w88 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %39 = load i32, i32* %src_w88, align 4, !tbaa !669
  %cmp89 = icmp ugt i32 %38, %39
  br i1 %cmp89, label %if.then90, label %if.end99

if.then90:                                        ; preds = %if.then66
  %dst_w91 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %40 = load i32, i32* %dst_w91, align 4, !tbaa !846
  %src_w92 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %41 = load i32, i32* %src_w92, align 4, !tbaa !669
  %sub93 = sub i32 %40, %41
  %shl94 = shl i32 %sub93, 16
  %src_w95 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %42 = load i32, i32* %src_w95, align 4, !tbaa !669
  %shl96 = shl i32 %42, 14
  %div97 = udiv i32 %shl94, %shl96
  br label %if.end99

if.end99:                                         ; preds = %if.then90, %if.then66
  %reg_2870_base.0 = phi i32 [ %div97, %if.then90 ], [ 0, %if.then66 ]
  %shl100 = shl i32 %shr, 14
  %and101 = and i32 %shl100, -65536
  %shr102 = lshr i32 %shr, 2
  %or103 = or i32 %and101, %shr102
  %shl104 = shl i32 %reg_2870_base.0, 17
  %or105 = or i32 %shl104, %reg_2870_base.0
  %add106 = add i32 %or103, %or105
  %add107 = add i32 %sub56, %add106
  br label %if.end183

if.else108:                                       ; preds = %if.end49
  %dst_w109 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %43 = load i32, i32* %dst_w109, align 4, !tbaa !846
  %src_w110 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %44 = load i32, i32* %src_w110, align 4, !tbaa !669
  %div111 = udiv i32 %44, 2
  %cmp112 = icmp ult i32 %43, %div111
  %src_w114 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %45 = load i32, i32* %src_w114, align 4, !tbaa !669
  br i1 %cmp112, label %if.then113, label %if.else148

if.then113:                                       ; preds = %if.else108
  %mul115 = mul i32 %45, 524288
  %dst_w116 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %46 = load i32, i32* %dst_w116, align 4, !tbaa !846
  %div117 = udiv i32 %mul115, %46
  %dst_w118 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %47 = load i32, i32* %dst_w118, align 4, !tbaa !846
  %mul119 = mul i32 %div117, %47
  %src_w120 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %48 = load i32, i32* %src_w120, align 4, !tbaa !669
  %mul121 = mul i32 %48, 524288
  %cmp122 = icmp ne i32 %mul119, %mul121
  %inc124 = add i32 %div117, 1
  %inc124.div117 = select i1 %cmp122, i32 %inc124, i32 %div117
  %shl126 = shl i32 %8, 16
  %or127 = or i32 %shl126, %add
  %shl128 = shl i32 %8, 16
  %or129 = or i32 %shl128, %add
  %shr130 = lshr i32 %inc124.div117, 2
  %shr131 = lshr i32 %inc124.div117, 1
  %shr132 = lshr i32 %inc124.div117, 1
  %shr133 = lshr i32 %inc124.div117, 1
  %shl134 = shl i32 %shr, 15
  %and135 = and i32 %shl134, -65536
  %or136 = or i32 %and135, %shr
  %add137 = add i32 %sub56, %or136
  %src_w138 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %49 = load i32, i32* %src_w138, align 4, !tbaa !669
  %src_w139 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %50 = load i32, i32* %src_w139, align 4, !tbaa !669
  %div140 = udiv i32 %50, 2
  %add141 = add i32 %49, %div140
  %sub142 = sub i32 %add141, 1
  %dst_w143 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %51 = load i32, i32* %dst_w143, align 4, !tbaa !846
  %div144 = udiv i32 %sub142, %51
  %sub145 = sub i32 5, %div144
  %shl146 = shl i32 %sub145, 16
  %add147 = add i32 %add137, %shl146
  br label %if.end183

if.else148:                                       ; preds = %if.else108
  %mul150 = mul i32 %45, 1048576
  %dst_w151 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %52 = load i32, i32* %dst_w151, align 4, !tbaa !846
  %div152 = udiv i32 %mul150, %52
  %dst_w153 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %53 = load i32, i32* %dst_w153, align 4, !tbaa !846
  %mul154 = mul i32 %div152, %53
  %src_w155 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %54 = load i32, i32* %src_w155, align 4, !tbaa !669
  %mul156 = mul i32 %54, 1048576
  %cmp157 = icmp ne i32 %mul154, %mul156
  %inc159 = add i32 %div152, 1
  %inc159.div152 = select i1 %cmp157, i32 %inc159, i32 %div152
  %shl161 = shl i32 %8, 16
  %or162 = or i32 %shl161, %add
  %shl163 = shl i32 %8, 16
  %or164 = or i32 %shl163, %add
  %shr165 = lshr i32 %inc159.div152, 2
  %shr166 = lshr i32 %inc159.div152, 1
  %shr167 = lshr i32 %inc159.div152, 1
  %shr168 = lshr i32 %inc159.div152, 1
  %shl169 = shl i32 %shr, 14
  %and170 = and i32 %shl169, -65536
  %shr171 = lshr i32 %shr, 1
  %or172 = or i32 %and170, %shr171
  %add173 = add i32 %sub56, %or172
  %src_w174 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %55 = load i32, i32* %src_w174, align 4, !tbaa !669
  %mul175 = mul i32 %55, 3
  %sub176 = sub i32 %mul175, 1
  %dst_w177 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %56 = load i32, i32* %dst_w177, align 4, !tbaa !846
  %div178 = udiv i32 %sub176, %56
  %sub179 = sub i32 5, %div178
  %shl180 = shl i32 %sub179, 16
  %add181 = add i32 %add173, %shl180
  br label %if.end183

if.end183:                                        ; preds = %if.else148, %if.then113, %if.end99
  %reg_2870.6 = phi i32 [ %add107, %if.end99 ], [ %add147, %if.then113 ], [ %add181, %if.else148 ]
  %reg_2874.1 = phi i32 [ 0, %if.end99 ], [ 18, %if.then113 ], [ 1, %if.else148 ]
  %reg_2864.1 = phi i32 [ %shr86, %if.end99 ], [ %shr133, %if.then113 ], [ %shr168, %if.else148 ]
  %reg_285c.1 = phi i32 [ %shr85, %if.end99 ], [ %shr132, %if.then113 ], [ %shr167, %if.else148 ]
  %reg_2854.1 = phi i32 [ %inc.div71, %if.end99 ], [ %inc124.div117, %if.then113 ], [ %inc159.div152, %if.else148 ]
  %reg_2844.1 = phi i32 [ %shr84, %if.end99 ], [ %shr131, %if.then113 ], [ %shr166, %if.else148 ]
  %reg_283c.1 = phi i32 [ %shr83, %if.end99 ], [ %shr130, %if.then113 ], [ %shr165, %if.else148 ]
  %reg_2838.1 = phi i32 [ %or82, %if.end99 ], [ %or129, %if.then113 ], [ %or164, %if.else148 ]
  %reg_2834.1 = phi i32 [ %or80, %if.end99 ], [ %or127, %if.then113 ], [ %or162, %if.else148 ]
  %src_w184 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %57 = load i32, i32* %src_w184, align 4, !tbaa !669
  %dst_w185 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %58 = load i32, i32* %dst_w185, align 4, !tbaa !846
  %cmp186 = icmp eq i32 %57, %58
  br i1 %cmp186, label %if.end199, label %if.else188

if.else188:                                       ; preds = %if.end183
  %src_w189 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 3
  %59 = load i32, i32* %src_w189, align 4, !tbaa !669
  %shl190 = shl i32 %59, 16
  %dst_w191 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 7
  %60 = load i32, i32* %dst_w191, align 4, !tbaa !846
  %div192 = udiv i32 %shl190, %60
  %shr193 = lshr i32 %div192, 15
  %shr194 = ashr i32 %shr193, 1
  %and195 = and i32 %shr193, 1
  %add196 = add nsw i32 %shr194, %and195
  %tobool197 = icmp ne i32 %add196, 0
  %lnot = xor i1 %tobool197, true
  %lnot.ext = zext i1 %lnot to i32
  %add198 = add nsw i32 %add196, %lnot.ext
  br label %if.end199

if.end199:                                        ; preds = %if.else188, %if.end183
  %h_filter.0 = phi i32 [ %add198, %if.else188 ], [ 0, %if.end183 ]
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %61 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %61, i64 10292
  call void @writel.765(i32 %reg_2834.1, i8* %add.ptr)
  %reg_mem200 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %62 = load i8*, i8** %reg_mem200, align 8, !tbaa !171
  %add.ptr201 = getelementptr i8, i8* %62, i64 10296
  call void @writel.765(i32 %reg_2838.1, i8* %add.ptr201)
  %63 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and203 = and i32 256, %63
  %tobool204 = icmp ne i32 %and203, 0
  br i1 %tobool204, label %if.then205, label %do.end214

if.then205:                                       ; preds = %if.end199
  %v4l2_dev206 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name207 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev206, i32 0, i32 4
  %arraydecay208 = getelementptr inbounds [36 x i8], [36 x i8]* %name207, i32 0, i32 0
  %reg_2834209 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %64 = load i32, i32* %reg_2834209, align 8, !tbaa !858
  %reg_2838210 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 1
  %65 = load i32, i32* %reg_2838210, align 4, !tbaa !859
  %call211 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.4.789, i32 0, i32 0), i8* %arraydecay208, i32 %64, i32 %reg_2834.1, i32 %65, i32 %reg_2838.1)
  br label %do.end214

do.end214:                                        ; preds = %if.then205, %if.end199
  %reg_mem215 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %66 = load i8*, i8** %reg_mem215, align 8, !tbaa !171
  %add.ptr216 = getelementptr i8, i8* %66, i64 10300
  call void @writel.765(i32 %reg_283c.1, i8* %add.ptr216)
  %reg_mem217 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %67 = load i8*, i8** %reg_mem217, align 8, !tbaa !171
  %add.ptr218 = getelementptr i8, i8* %67, i64 10308
  call void @writel.765(i32 %reg_2844.1, i8* %add.ptr218)
  %68 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and220 = and i32 256, %68
  %tobool221 = icmp ne i32 %and220, 0
  br i1 %tobool221, label %if.then222, label %do.end231

if.then222:                                       ; preds = %do.end214
  %v4l2_dev223 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name224 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev223, i32 0, i32 4
  %arraydecay225 = getelementptr inbounds [36 x i8], [36 x i8]* %name224, i32 0, i32 0
  %reg_283c226 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 2
  %69 = load i32, i32* %reg_283c226, align 8, !tbaa !860
  %reg_2844227 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 4
  %70 = load i32, i32* %reg_2844227, align 8, !tbaa !861
  %call228 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.5.790, i32 0, i32 0), i8* %arraydecay225, i32 %69, i32 %reg_283c.1, i32 %70, i32 %reg_2844.1)
  br label %do.end231

do.end231:                                        ; preds = %if.then222, %do.end214
  %reg_mem232 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %71 = load i8*, i8** %reg_mem232, align 8, !tbaa !171
  %add.ptr233 = getelementptr i8, i8* %71, i64 10304
  call void @writel.765(i32 525588, i8* %add.ptr233)
  %reg_mem234 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %72 = load i8*, i8** %reg_mem234, align 8, !tbaa !171
  %add.ptr235 = getelementptr i8, i8* %72, i64 10312
  call void @writel.765(i32 1049876, i8* %add.ptr235)
  %73 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and237 = and i32 256, %73
  %tobool238 = icmp ne i32 %and237, 0
  br i1 %tobool238, label %if.then239, label %do.end246

if.then239:                                       ; preds = %do.end231
  %v4l2_dev240 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name241 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev240, i32 0, i32 4
  %arraydecay242 = getelementptr inbounds [36 x i8], [36 x i8]* %name241, i32 0, i32 0
  %reg_2840 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 3
  %74 = load i32, i32* %reg_2840, align 4, !tbaa !862
  %reg_2848 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 5
  %75 = load i32, i32* %reg_2848, align 4, !tbaa !863
  %call243 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.6.791, i32 0, i32 0), i8* %arraydecay242, i32 %74, i32 525588, i32 %75, i32 1049876)
  br label %do.end246

do.end246:                                        ; preds = %if.then239, %do.end231
  %reg_mem247 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %76 = load i8*, i8** %reg_mem247, align 8, !tbaa !171
  %add.ptr248 = getelementptr i8, i8* %76, i64 10324
  call void @writel.765(i32 %reg_2854.1, i8* %add.ptr248)
  %77 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and250 = and i32 256, %77
  %tobool251 = icmp ne i32 %and250, 0
  br i1 %tobool251, label %if.then252, label %do.end260

if.then252:                                       ; preds = %do.end246
  %v4l2_dev253 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name254 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev253, i32 0, i32 4
  %arraydecay255 = getelementptr inbounds [36 x i8], [36 x i8]* %name254, i32 0, i32 0
  %reg_2854256 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 6
  %78 = load i32, i32* %reg_2854256, align 8, !tbaa !864
  %call257 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7.792, i32 0, i32 0), i8* %arraydecay255, i32 %78, i32 %reg_2854.1)
  br label %do.end260

do.end260:                                        ; preds = %if.then252, %do.end246
  %reg_mem261 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %79 = load i8*, i8** %reg_mem261, align 8, !tbaa !171
  %add.ptr262 = getelementptr i8, i8* %79, i64 10332
  call void @writel.765(i32 %reg_285c.1, i8* %add.ptr262)
  %reg_mem263 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %80 = load i8*, i8** %reg_mem263, align 8, !tbaa !171
  %add.ptr264 = getelementptr i8, i8* %80, i64 10340
  call void @writel.765(i32 %reg_2864.1, i8* %add.ptr264)
  %81 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and266 = and i32 256, %81
  %tobool267 = icmp ne i32 %and266, 0
  br i1 %tobool267, label %if.then268, label %do.end277

if.then268:                                       ; preds = %do.end260
  %v4l2_dev269 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name270 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev269, i32 0, i32 4
  %arraydecay271 = getelementptr inbounds [36 x i8], [36 x i8]* %name270, i32 0, i32 0
  %reg_285c272 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 7
  %82 = load i32, i32* %reg_285c272, align 4, !tbaa !865
  %reg_2864273 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 8
  %83 = load i32, i32* %reg_2864273, align 8, !tbaa !866
  %call274 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.8.793, i32 0, i32 0), i8* %arraydecay271, i32 %82, i32 %reg_285c.1, i32 %83, i32 %reg_2864.1)
  br label %do.end277

do.end277:                                        ; preds = %if.then268, %do.end260
  %reg_mem278 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %84 = load i8*, i8** %reg_mem278, align 8, !tbaa !171
  %add.ptr279 = getelementptr i8, i8* %84, i64 10356
  call void @writel.765(i32 %reg_2874.1, i8* %add.ptr279)
  %85 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and281 = and i32 256, %85
  %tobool282 = icmp ne i32 %and281, 0
  br i1 %tobool282, label %if.then283, label %do.end291

if.then283:                                       ; preds = %do.end277
  %v4l2_dev284 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name285 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev284, i32 0, i32 4
  %arraydecay286 = getelementptr inbounds [36 x i8], [36 x i8]* %name285, i32 0, i32 0
  %reg_2874287 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 10
  %86 = load i32, i32* %reg_2874287, align 8, !tbaa !867
  %call288 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9.794, i32 0, i32 0), i8* %arraydecay286, i32 %86, i32 %reg_2874.1)
  br label %do.end291

do.end291:                                        ; preds = %if.then283, %do.end277
  %reg_mem292 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %87 = load i8*, i8** %reg_mem292, align 8, !tbaa !171
  %add.ptr293 = getelementptr i8, i8* %87, i64 10352
  call void @writel.765(i32 %reg_2870.6, i8* %add.ptr293)
  %88 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and295 = and i32 256, %88
  %tobool296 = icmp ne i32 %and295, 0
  br i1 %tobool296, label %if.then297, label %do.end305

if.then297:                                       ; preds = %do.end291
  %v4l2_dev298 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name299 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev298, i32 0, i32 4
  %arraydecay300 = getelementptr inbounds [36 x i8], [36 x i8]* %name299, i32 0, i32 0
  %reg_2870301 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 9
  %89 = load i32, i32* %reg_2870301, align 4, !tbaa !868
  %call302 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10.795, i32 0, i32 0), i8* %arraydecay300, i32 %89, i32 %reg_2870.6)
  br label %do.end305

do.end305:                                        ; preds = %if.then297, %do.end291
  %reg_mem306 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %90 = load i8*, i8** %reg_mem306, align 8, !tbaa !171
  %add.ptr307 = getelementptr i8, i8* %90, i64 10384
  call void @writel.765(i32 %9, i8* %add.ptr307)
  %91 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and309 = and i32 256, %91
  %tobool310 = icmp ne i32 %and309, 0
  br i1 %tobool310, label %if.then311, label %do.end319

if.then311:                                       ; preds = %do.end305
  %v4l2_dev312 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name313 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev312, i32 0, i32 4
  %arraydecay314 = getelementptr inbounds [36 x i8], [36 x i8]* %name313, i32 0, i32 0
  %reg_2890315 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 11
  %92 = load i32, i32* %reg_2890315, align 4, !tbaa !869
  %call316 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.11.796, i32 0, i32 0), i8* %arraydecay314, i32 %92, i32 %9)
  br label %do.end319

do.end319:                                        ; preds = %if.then311, %do.end305
  %h_filter320 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 39
  %93 = load i32, i32* %h_filter320, align 4, !tbaa !870
  %cmp321 = icmp ne i32 %h_filter.0, %93
  br i1 %cmp321, label %if.then322, label %if.end324

if.then322:                                       ; preds = %do.end319
  call void @ivtv_yuv_filter(%struct.ivtv.1060* %itv, i32 %h_filter.0, i32 -1, i32 -1)
  %h_filter323 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 39
  store i32 %h_filter.0, i32* %h_filter323, align 4, !tbaa !870
  br label %if.end324

if.end324:                                        ; preds = %if.then322, %do.end319
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_handle_vertical(%struct.ivtv.1060* %itv, %struct.yuv_frame_info* %f) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 1, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.body1

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %tru_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 17
  %1 = load i32, i32* %tru_h, align 4, !tbaa !871
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %2 = load i32, i32* %src_h, align 4, !tbaa !636
  %dst_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %3 = load i32, i32* %dst_h, align 4, !tbaa !847
  %src_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %4 = load i32, i32* %src_y, align 4, !tbaa !845
  %dst_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %5 = load i32, i32* %dst_y, align 4, !tbaa !849
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.12.766, i32 0, i32 0), i8* %arraydecay, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5)
  br label %do.body1

do.body1:                                         ; preds = %if.then, %entry
  %6 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and2 = and i32 256, %6
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %do.body13

if.then4:                                         ; preds = %do.body1
  %v4l2_dev5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name6 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev5, i32 0, i32 4
  %arraydecay7 = getelementptr inbounds [36 x i8], [36 x i8]* %name6, i32 0, i32 0
  %interlaced_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %7 = load i32, i32* %interlaced_y, align 4, !tbaa !848
  %tobool8 = icmp ne i32 %7, 0
  %8 = zext i1 %tobool8 to i64
  %cond = select i1 %tobool8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.767, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.768, i32 0, i32 0)
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13.769, i32 0, i32 0), i8* %arraydecay7, i8* %cond)
  br label %do.body13

do.body13:                                        ; preds = %if.then4, %do.body1
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and14 = and i32 256, %9
  %tobool15 = icmp ne i32 %and14, 0
  br i1 %tobool15, label %if.then16, label %do.body26

if.then16:                                        ; preds = %do.body13
  %v4l2_dev17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name18 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev17, i32 0, i32 4
  %arraydecay19 = getelementptr inbounds [36 x i8], [36 x i8]* %name18, i32 0, i32 0
  %interlaced_uv = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %10 = load i32, i32* %interlaced_uv, align 4, !tbaa !854
  %tobool20 = icmp ne i32 %10, 0
  %11 = zext i1 %tobool20 to i64
  %cond21 = select i1 %tobool20, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.767, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.768, i32 0, i32 0)
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.16.770, i32 0, i32 0), i8* %arraydecay19, i8* %cond21)
  br label %do.body26

do.body26:                                        ; preds = %if.then16, %do.body13
  %12 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and27 = and i32 1, %12
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %do.end38

if.then29:                                        ; preds = %do.body26
  %v4l2_dev30 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name31 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev30, i32 0, i32 4
  %arraydecay32 = getelementptr inbounds [36 x i8], [36 x i8]* %name31, i32 0, i32 0
  %interlaced = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 22
  %13 = load i32, i32* %interlaced, align 4, !tbaa !663
  %tobool33 = icmp ne i32 %13, 0
  %14 = zext i1 %tobool33 to i64
  %cond34 = select i1 %tobool33, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14.767, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.15.768, i32 0, i32 0)
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.17.771, i32 0, i32 0), i8* %arraydecay32, i8* %cond34)
  br label %do.end38

do.end38:                                         ; preds = %if.then29, %do.body26
  %src_y39 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %15 = load i32, i32* %src_y39, align 4, !tbaa !845
  %cmp = icmp slt i32 %15, 8
  %src_y41 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 2
  %16 = load i32, i32* %src_y41, align 4, !tbaa !845
  %sub = sub nsw i32 %16, 8
  %src_major_uv.0 = select i1 %cmp, i32 0, i32 %sub
  %src_minor_uv.0 = select i1 %cmp, i32 %16, i32 8
  %offset_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 18
  %17 = load i32, i32* %offset_y, align 4, !tbaa !638
  %tobool44 = icmp ne i32 %17, 0
  %add = add i32 %src_minor_uv.0, 16
  %add.src_minor_uv.0 = select i1 %tobool44, i32 %add, i32 %src_minor_uv.0
  %interlaced_y47 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %18 = load i32, i32* %interlaced_y47, align 4, !tbaa !848
  %tobool48 = icmp ne i32 %18, 0
  %dst_h50 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %19 = load i32, i32* %dst_h50, align 4, !tbaa !847
  %shl = shl i32 %19, 16
  %src_h51 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %20 = load i32, i32* %src_h51, align 4, !tbaa !636
  %add52 = add i32 %20, %add.src_minor_uv.0
  %shl58 = shl i32 %add52, 1
  %shl58.sink = select i1 %tobool48, i32 %add52, i32 %shl58
  %or59 = or i32 %shl, %shl58.sink
  %interlaced_uv61 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %21 = load i32, i32* %interlaced_uv61, align 4, !tbaa !854
  %tobool62 = icmp ne i32 %21, 0
  %dst_h64 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %22 = load i32, i32* %dst_h64, align 4, !tbaa !847
  %shl65 = shl i32 %22, 16
  %src_h66 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %23 = load i32, i32* %src_h66, align 4, !tbaa !636
  %add67 = add i32 %23, %src_minor_uv.0
  %shr = lshr i32 %add67, 1
  %add67.sink = select i1 %tobool62, i32 %shr, i32 %add67
  %or74 = or i32 %shl65, %add67.sink
  %dst_h76 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %24 = load i32, i32* %dst_h76, align 4, !tbaa !847
  %shl77 = shl i32 %24, 16
  %src_h78 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %25 = load i32, i32* %src_h78, align 4, !tbaa !636
  %div = udiv i32 %shl77, %25
  %mul = mul i32 %add.src_minor_uv.0, %div
  %shr79 = lshr i32 %mul, 14
  %dst_h80 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %26 = load i32, i32* %dst_h80, align 4, !tbaa !847
  %shl81 = shl i32 %26, 16
  %src_h82 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %27 = load i32, i32* %src_h82, align 4, !tbaa !636
  %div83 = udiv i32 %shl81, %27
  %mul84 = mul i32 %src_minor_uv.0, %div83
  %shr85 = lshr i32 %mul84, 14
  %dst_h86 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %28 = load i32, i32* %dst_h86, align 4, !tbaa !847
  %div87 = udiv i32 %28, 2
  %src_h88 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %29 = load i32, i32* %src_h88, align 4, !tbaa !636
  %cmp89 = icmp uge i32 %div87, %29
  br i1 %cmp89, label %land.lhs.true, label %if.else112

land.lhs.true:                                    ; preds = %do.end38
  %interlaced_y90 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %30 = load i32, i32* %interlaced_y90, align 4, !tbaa !848
  %tobool91 = icmp ne i32 %30, 0
  br i1 %tobool91, label %if.else112, label %if.then92

if.then92:                                        ; preds = %land.lhs.true
  %src_h93 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %31 = load i32, i32* %src_h93, align 4, !tbaa !636
  %mul94 = mul i32 %31, 4194304
  %dst_h95 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %32 = load i32, i32* %dst_h95, align 4, !tbaa !847
  %div96 = udiv i32 %mul94, %32
  %src_h97 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %33 = load i32, i32* %src_h97, align 4, !tbaa !636
  %mul98 = mul i32 %33, 4194304
  %dst_h99 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %34 = load i32, i32* %dst_h99, align 4, !tbaa !847
  %mul100 = mul i32 %div96, %34
  %sub101 = sub i32 %mul98, %mul100
  %dst_h102 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %35 = load i32, i32* %dst_h102, align 4, !tbaa !847
  %div103 = udiv i32 %35, 2
  %cmp104 = icmp uge i32 %sub101, %div103
  %inc = add i32 %div96, 1
  %inc.div96 = select i1 %cmp104, i32 %inc, i32 %div96
  %shr107 = lshr i32 %inc.div96, 2
  %shr108 = lshr i32 %inc.div96, 3
  %shr109 = lshr i32 %inc.div96, 1
  %shr110 = lshr i32 %shr79, 3
  br label %if.end184

if.else112:                                       ; preds = %land.lhs.true, %do.end38
  %dst_h113 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %36 = load i32, i32* %dst_h113, align 4, !tbaa !847
  %src_h114 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %37 = load i32, i32* %src_h114, align 4, !tbaa !636
  %cmp115 = icmp uge i32 %36, %37
  br i1 %cmp115, label %if.then116, label %if.else141

if.then116:                                       ; preds = %if.else112
  %src_h117 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %38 = load i32, i32* %src_h117, align 4, !tbaa !636
  %mul118 = mul i32 %38, 4194304
  %dst_h119 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %39 = load i32, i32* %dst_h119, align 4, !tbaa !847
  %div120 = udiv i32 %mul118, %39
  %shr121 = lshr i32 %div120, 1
  %and122 = and i32 %div120, 1
  %add123 = add i32 %shr121, %and122
  %shr124 = lshr i32 %add123, 2
  %shr125 = lshr i32 %add123, 2
  %shr126 = lshr i32 %add123, 1
  %interlaced_y127 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %40 = load i32, i32* %interlaced_y127, align 4, !tbaa !848
  %tobool128 = icmp ne i32 %40, 0
  %inc132 = add i32 0, 1
  %.sink = select i1 %tobool128, i32 3, i32 2
  %reg_296c.0 = select i1 %tobool128, i32 0, i32 %inc132
  %shr133 = lshr i32 %shr79, %.sink
  %interlaced_uv135 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %41 = load i32, i32* %interlaced_uv135, align 4, !tbaa !854
  %tobool136 = icmp ne i32 %41, 0
  %shr138 = lshr i32 %shr125, 1
  %shr138.shr125 = select i1 %tobool136, i32 %shr138, i32 %shr125
  br label %if.end184

if.else141:                                       ; preds = %if.else112
  %dst_h142 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %42 = load i32, i32* %dst_h142, align 4, !tbaa !847
  %src_h143 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %43 = load i32, i32* %src_h143, align 4, !tbaa !636
  %div144 = udiv i32 %43, 2
  %cmp145 = icmp uge i32 %42, %div144
  %src_h147 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %44 = load i32, i32* %src_h147, align 4, !tbaa !636
  br i1 %cmp145, label %if.then146, label %if.else170

if.then146:                                       ; preds = %if.else141
  %mul148 = mul i32 %44, 2097152
  %dst_h149 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %45 = load i32, i32* %dst_h149, align 4, !tbaa !847
  %div150 = udiv i32 %mul148, %45
  %shr151 = lshr i32 %div150, 1
  %and152 = and i32 %div150, 1
  %add153 = add i32 %shr151, %and152
  %shr154 = lshr i32 %add153, 2
  %shr155 = lshr i32 %add153, 2
  %interlaced_y156 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %46 = load i32, i32* %interlaced_y156, align 4, !tbaa !848
  %tobool157 = icmp ne i32 %46, 0
  %inc161 = add i32 257, 1
  %.sink1 = select i1 %tobool157, i32 2, i32 1
  %reg_296c.1 = select i1 %tobool157, i32 257, i32 %inc161
  %shr162 = lshr i32 %shr79, %.sink1
  %interlaced_uv164 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %47 = load i32, i32* %interlaced_uv164, align 4, !tbaa !854
  %tobool165 = icmp ne i32 %47, 0
  %shr167 = lshr i32 %shr155, 1
  %shr167.shr155 = select i1 %tobool165, i32 %shr167, i32 %shr155
  br label %if.end184

if.else170:                                       ; preds = %if.else141
  %mul172 = mul i32 %44, 1048576
  %dst_h173 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %48 = load i32, i32* %dst_h173, align 4, !tbaa !847
  %div174 = udiv i32 %mul172, %48
  %shr175 = lshr i32 %div174, 1
  %and176 = and i32 %div174, 1
  %add177 = add i32 %shr175, %and176
  %shr178 = lshr i32 %add177, 2
  %shr179 = lshr i32 %add177, 2
  %shr180 = lshr i32 %shr79, 1
  br label %if.end184

if.end184:                                        ; preds = %if.else170, %if.then146, %if.then116, %if.then92
  %.sink2.sink = phi i32 [ 3, %if.then92 ], [ 3, %if.then116 ], [ 2, %if.else170 ], [ 2, %if.then146 ]
  %reg_296c.4 = phi i32 [ 0, %if.then92 ], [ %reg_296c.0, %if.then116 ], [ %reg_296c.1, %if.then146 ], [ 258, %if.else170 ]
  %reg_2964_base.4 = phi i32 [ %shr110, %if.then92 ], [ %shr133, %if.then116 ], [ %shr162, %if.then146 ], [ %shr180, %if.else170 ]
  %reg_2940.2 = phi i32 [ %shr109, %if.then92 ], [ %shr126, %if.then116 ], [ %add153, %if.then146 ], [ %add177, %if.else170 ]
  %reg_2930.2 = phi i32 [ %inc.div96, %if.then92 ], [ %add123, %if.then116 ], [ %add153, %if.then146 ], [ %add177, %if.else170 ]
  %reg_2928.4 = phi i32 [ %shr108, %if.then92 ], [ %shr138.shr125, %if.then116 ], [ %shr167.shr155, %if.then146 ], [ %shr179, %if.else170 ]
  %reg_2920.2 = phi i32 [ %shr107, %if.then92 ], [ %shr124, %if.then116 ], [ %shr154, %if.then146 ], [ %shr178, %if.else170 ]
  %shr181 = lshr i32 %shr85, %.sink2.sink
  %src_h185 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %49 = load i32, i32* %src_h185, align 4, !tbaa !636
  %dst_h186 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %50 = load i32, i32* %dst_h186, align 4, !tbaa !847
  %cmp187 = icmp eq i32 %49, %50
  %. = select i1 %cmp187, i32 720896, i32 4080
  %.3 = select i1 %cmp187, i32 262144, i32 4080
  %.4 = select i1 %cmp187, i32 1048576, i32 4080
  %.5 = select i1 %cmp187, i32 131072, i32 4080
  %add191 = add i32 65536, %src_major_uv.0
  %interlaced_y192 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %51 = load i32, i32* %interlaced_y192, align 4, !tbaa !848
  %tobool193 = icmp ne i32 %51, 0
  %add195 = add i32 %add191, 65536
  %reg_2950.0 = select i1 %tobool193, i32 %add195, i32 %add191
  %add197 = add i32 %reg_2950.0, 1
  %shr198 = lshr i32 %src_major_uv.0, 1
  %add199 = add i32 65536, %shr198
  %interlaced_uv200 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %52 = load i32, i32* %interlaced_uv200, align 4, !tbaa !854
  %tobool201 = icmp ne i32 %52, 0
  %add203 = add i32 %add199, 65536
  %add203.add199 = select i1 %tobool201, i32 %add203, i32 %add199
  %add205 = add i32 %add203.add199, 1
  %decode_height = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %53 = load i32, i32* %decode_height, align 4, !tbaa !842
  %cmp206 = icmp eq i32 %53, 480
  %reg_289c.0 = select i1 %cmp206, i32 18743319, i32 22020119
  %dst_y210 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %54 = load i32, i32* %dst_y210, align 4, !tbaa !849
  %cmp211 = icmp slt i32 %54, 0
  %dst_y213 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %55 = load i32, i32* %dst_y213, align 4, !tbaa !849
  %and214 = and i32 %55, -2
  %shl215 = shl i32 %and214, 15
  br i1 %cmp211, label %if.then212, label %if.else220

if.then212:                                       ; preds = %if.end184
  %sub216 = sub i32 %reg_289c.0, %shl215
  %dst_y217 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %56 = load i32, i32* %dst_y217, align 4, !tbaa !849
  %shr218 = ashr i32 %56, 1
  %sub219 = sub i32 %sub216, %shr218
  br label %if.end228

if.else220:                                       ; preds = %if.end184
  %add224 = add i32 %reg_289c.0, %shl215
  %dst_y225 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 6
  %57 = load i32, i32* %dst_y225, align 4, !tbaa !849
  %shr226 = ashr i32 %57, 1
  %add227 = add i32 %add224, %shr226
  br label %if.end228

if.end228:                                        ; preds = %if.else220, %if.then212
  %reg_289c.1 = phi i32 [ %sub219, %if.then212 ], [ %add227, %if.else220 ]
  %src_h229 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %58 = load i32, i32* %src_h229, align 4, !tbaa !636
  %add230 = add i32 %add.src_minor_uv.0, %58
  %add231 = add i32 %add230, %src_major_uv.0
  %sub232 = sub i32 %add231, 1
  %src_h233 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %59 = load i32, i32* %src_h233, align 4, !tbaa !636
  %add234 = add i32 %src_minor_uv.0, %59
  %add235 = add i32 %add234, %src_major_uv.0
  %sub236 = sub i32 %add235, 1
  %and237 = and i32 %sub236, -2
  %shl238 = shl i32 %and237, 15
  %or239 = or i32 %sub232, %shl238
  %src_h240 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %60 = load i32, i32* %src_h240, align 4, !tbaa !636
  %dst_h241 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %61 = load i32, i32* %dst_h241, align 4, !tbaa !847
  %cmp242 = icmp eq i32 %60, %61
  br i1 %cmp242, label %if.end253, label %if.else244

if.else244:                                       ; preds = %if.end228
  %dst_h245 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %62 = load i32, i32* %dst_h245, align 4, !tbaa !847
  %shl246 = shl i32 %62, 1
  %src_h247 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %63 = load i32, i32* %src_h247, align 4, !tbaa !636
  %div248 = udiv i32 %shl246, %63
  %add249 = add i32 2, %div248
  %shr250 = lshr i32 %add249, 1
  %and251 = and i32 %add249, 1
  %add252 = add i32 %shr250, %and251
  br label %if.end253

if.end253:                                        ; preds = %if.else244, %if.end228
  %reg_2964.0 = phi i32 [ %add252, %if.else244 ], [ 1, %if.end228 ]
  %shl254 = shl i32 %reg_2964.0, 16
  %add255 = add i32 %shl254, %reg_2964.0
  %shr256 = lshr i32 %reg_2964.0, 1
  %add257 = add i32 %add255, %shr256
  %shl258 = shl i32 %reg_2964.0, 16
  %add259 = add i32 %shl258, %reg_2964.0
  %mul260 = mul i32 %reg_2964.0, 46
  %div261 = udiv i32 %mul260, 94
  %add262 = add i32 %add259, %div261
  %and263 = and i32 %add262, 65535
  %shr264 = lshr i32 %add262, 16
  %sub265 = sub i32 %and263, %shr264
  %add266 = add i32 65537, %sub265
  %and267 = and i32 %add257, 65535
  %shr268 = lshr i32 %add257, 16
  %sub269 = sub i32 %and267, %shr268
  %add270 = add i32 65537, %sub269
  %cmp271 = icmp ne i32 %add266, 65537
  br i1 %cmp271, label %land.lhs.true272, label %if.end282

land.lhs.true272:                                 ; preds = %if.end253
  %dst_h273 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %64 = load i32, i32* %dst_h273, align 4, !tbaa !847
  %div274 = udiv i32 %64, 2
  %src_h275 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %65 = load i32, i32* %src_h275, align 4, !tbaa !636
  %cmp276 = icmp ule i32 %div274, %65
  br i1 %cmp276, label %if.then277, label %if.end282

if.then277:                                       ; preds = %land.lhs.true272
  %and278 = and i32 %add266, -65536
  %and279 = and i32 %add266, 65535
  %div280 = udiv i32 %and279, 2
  %add281 = add i32 %and278, %div280
  br label %if.end282

if.end282:                                        ; preds = %if.then277, %land.lhs.true272, %if.end253
  %reg_2964.1 = phi i32 [ %add281, %if.then277 ], [ %add266, %land.lhs.true272 ], [ %add266, %if.end253 ]
  %interlaced_y283 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 13
  %66 = load i32, i32* %interlaced_y283, align 4, !tbaa !848
  %tobool284 = icmp ne i32 %66, 0
  %sub286 = sub i32 %reg_2964.1, 65537
  %reg_2964.1.sub286 = select i1 %tobool284, i32 %reg_2964.1, i32 %sub286
  %interlaced_uv288 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 14
  %67 = load i32, i32* %interlaced_uv288, align 4, !tbaa !854
  %tobool289 = icmp ne i32 %67, 0
  %sub291 = sub i32 %add270, 65537
  %reg_2968.0 = select i1 %tobool289, i32 %add270, i32 %sub291
  %shl293 = shl i32 %reg_2964_base.4, 16
  %or294 = or i32 %shl293, %reg_2964_base.4
  %add295 = add i32 %reg_2964.1.sub286, %or294
  %shl296 = shl i32 %shr181, 16
  %or297 = or i32 %shl296, %shr181
  %add298 = add i32 %reg_2968.0, %or297
  %src_h299 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %68 = load i32, i32* %src_h299, align 4, !tbaa !636
  %dst_h300 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %69 = load i32, i32* %dst_h300, align 4, !tbaa !847
  %cmp301 = icmp eq i32 %68, %69
  br i1 %cmp301, label %if.end314, label %if.else303

if.else303:                                       ; preds = %if.end282
  %src_h304 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 4
  %70 = load i32, i32* %src_h304, align 4, !tbaa !636
  %shl305 = shl i32 %70, 16
  %dst_h306 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %f, i32 0, i32 8
  %71 = load i32, i32* %dst_h306, align 4, !tbaa !847
  %div307 = udiv i32 %shl305, %71
  %shr308 = lshr i32 %div307, 15
  %shr309 = ashr i32 %shr308, 1
  %and310 = and i32 %shr308, 1
  %add311 = add nsw i32 %shr309, %and310
  %tobool312 = icmp ne i32 %add311, 0
  %lnot = xor i1 %tobool312, true
  %lnot.ext = zext i1 %lnot to i32
  %add313 = add nsw i32 %add311, %lnot.ext
  br label %if.end314

if.end314:                                        ; preds = %if.else303, %if.end282
  %v_filter_1.0 = phi i32 [ %add313, %if.else303 ], [ 0, %if.end282 ]
  %v_filter_2.0 = phi i32 [ %add313, %if.else303 ], [ 1, %if.end282 ]
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %72 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %72, i64 10548
  call void @writel.765(i32 %.5, i8* %add.ptr)
  %reg_mem315 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %73 = load i8*, i8** %reg_mem315, align 8, !tbaa !171
  %add.ptr316 = getelementptr i8, i8* %73, i64 10556
  call void @writel.765(i32 %.4, i8* %add.ptr316)
  %74 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and318 = and i32 256, %74
  %tobool319 = icmp ne i32 %and318, 0
  br i1 %tobool319, label %if.then320, label %do.end329

if.then320:                                       ; preds = %if.end314
  %v4l2_dev321 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name322 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev321, i32 0, i32 4
  %arraydecay323 = getelementptr inbounds [36 x i8], [36 x i8]* %name322, i32 0, i32 0
  %reg_2934324 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 21
  %75 = load i32, i32* %reg_2934324, align 4, !tbaa !872
  %reg_293c325 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 23
  %76 = load i32, i32* %reg_293c325, align 4, !tbaa !873
  %call326 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.18.772, i32 0, i32 0), i8* %arraydecay323, i32 %75, i32 %.5, i32 %76, i32 %.4)
  br label %do.end329

do.end329:                                        ; preds = %if.then320, %if.end314
  %reg_mem330 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %77 = load i8*, i8** %reg_mem330, align 8, !tbaa !171
  %add.ptr331 = getelementptr i8, i8* %77, i64 10564
  call void @writel.765(i32 %.3, i8* %add.ptr331)
  %reg_mem332 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %78 = load i8*, i8** %reg_mem332, align 8, !tbaa !171
  %add.ptr333 = getelementptr i8, i8* %78, i64 10572
  call void @writel.765(i32 %., i8* %add.ptr333)
  %79 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and335 = and i32 256, %79
  %tobool336 = icmp ne i32 %and335, 0
  br i1 %tobool336, label %if.then337, label %do.end346

if.then337:                                       ; preds = %do.end329
  %v4l2_dev338 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name339 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev338, i32 0, i32 4
  %arraydecay340 = getelementptr inbounds [36 x i8], [36 x i8]* %name339, i32 0, i32 0
  %reg_2944341 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 25
  %80 = load i32, i32* %reg_2944341, align 4, !tbaa !874
  %reg_294c342 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 27
  %81 = load i32, i32* %reg_294c342, align 4, !tbaa !875
  %call343 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19.773, i32 0, i32 0), i8* %arraydecay340, i32 %80, i32 %.3, i32 %81, i32 %.)
  br label %do.end346

do.end346:                                        ; preds = %if.then337, %do.end329
  %reg_mem347 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %82 = load i8*, i8** %reg_mem347, align 8, !tbaa !171
  %add.ptr348 = getelementptr i8, i8* %82, i64 10552
  call void @writel.765(i32 %reg_2930.2, i8* %add.ptr348)
  %reg_mem349 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %83 = load i8*, i8** %reg_mem349, align 8, !tbaa !171
  %add.ptr350 = getelementptr i8, i8* %83, i64 10544
  call void @writel.765(i32 %reg_2930.2, i8* %add.ptr350)
  %84 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and352 = and i32 256, %84
  %tobool353 = icmp ne i32 %and352, 0
  br i1 %tobool353, label %if.then354, label %do.end362

if.then354:                                       ; preds = %do.end346
  %v4l2_dev355 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name356 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev355, i32 0, i32 4
  %arraydecay357 = getelementptr inbounds [36 x i8], [36 x i8]* %name356, i32 0, i32 0
  %reg_2930358 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 20
  %85 = load i32, i32* %reg_2930358, align 8, !tbaa !876
  %reg_2938 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 22
  %86 = load i32, i32* %reg_2938, align 8, !tbaa !877
  %call359 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.20.774, i32 0, i32 0), i8* %arraydecay357, i32 %85, i32 %reg_2930.2, i32 %86, i32 %reg_2930.2)
  br label %do.end362

do.end362:                                        ; preds = %if.then354, %do.end346
  %reg_mem363 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %87 = load i8*, i8** %reg_mem363, align 8, !tbaa !171
  %add.ptr364 = getelementptr i8, i8* %87, i64 10536
  call void @writel.765(i32 %reg_2928.4, i8* %add.ptr364)
  %add365 = add i32 %reg_2928.4, 1300
  %reg_mem366 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %88 = load i8*, i8** %reg_mem366, align 8, !tbaa !171
  %add.ptr367 = getelementptr i8, i8* %88, i64 10540
  call void @writel.765(i32 %add365, i8* %add.ptr367)
  %89 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and369 = and i32 256, %89
  %tobool370 = icmp ne i32 %and369, 0
  br i1 %tobool370, label %if.then371, label %do.end380

if.then371:                                       ; preds = %do.end362
  %v4l2_dev372 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name373 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev372, i32 0, i32 4
  %arraydecay374 = getelementptr inbounds [36 x i8], [36 x i8]* %name373, i32 0, i32 0
  %reg_2928375 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 18
  %90 = load i32, i32* %reg_2928375, align 8, !tbaa !878
  %reg_292c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 19
  %91 = load i32, i32* %reg_292c, align 4, !tbaa !879
  %add376 = add i32 %reg_2928.4, 1300
  %call377 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.21.775, i32 0, i32 0), i8* %arraydecay374, i32 %90, i32 %reg_2928.4, i32 %91, i32 %add376)
  br label %do.end380

do.end380:                                        ; preds = %if.then371, %do.end362
  %reg_mem381 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %92 = load i8*, i8** %reg_mem381, align 8, !tbaa !171
  %add.ptr382 = getelementptr i8, i8* %92, i64 10528
  call void @writel.765(i32 %reg_2920.2, i8* %add.ptr382)
  %add383 = add i32 %reg_2920.2, 1300
  %reg_mem384 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %93 = load i8*, i8** %reg_mem384, align 8, !tbaa !171
  %add.ptr385 = getelementptr i8, i8* %93, i64 10532
  call void @writel.765(i32 %add383, i8* %add.ptr385)
  %94 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and387 = and i32 256, %94
  %tobool388 = icmp ne i32 %and387, 0
  br i1 %tobool388, label %if.then389, label %do.end398

if.then389:                                       ; preds = %do.end380
  %v4l2_dev390 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name391 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev390, i32 0, i32 4
  %arraydecay392 = getelementptr inbounds [36 x i8], [36 x i8]* %name391, i32 0, i32 0
  %reg_2920393 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 16
  %95 = load i32, i32* %reg_2920393, align 8, !tbaa !880
  %reg_2924 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 17
  %96 = load i32, i32* %reg_2924, align 4, !tbaa !881
  %add394 = add i32 %reg_2920.2, 1300
  %call395 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.22.776, i32 0, i32 0), i8* %arraydecay392, i32 %95, i32 %reg_2920.2, i32 %96, i32 %add394)
  br label %do.end398

do.end398:                                        ; preds = %if.then389, %do.end380
  %reg_mem399 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %97 = load i8*, i8** %reg_mem399, align 8, !tbaa !171
  %add.ptr400 = getelementptr i8, i8* %97, i64 10520
  call void @writel.765(i32 %or59, i8* %add.ptr400)
  %reg_mem401 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %98 = load i8*, i8** %reg_mem401, align 8, !tbaa !171
  %add.ptr402 = getelementptr i8, i8* %98, i64 10524
  call void @writel.765(i32 %or74, i8* %add.ptr402)
  %99 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and404 = and i32 256, %99
  %tobool405 = icmp ne i32 %and404, 0
  br i1 %tobool405, label %if.then406, label %do.end415

if.then406:                                       ; preds = %do.end398
  %v4l2_dev407 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name408 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev407, i32 0, i32 4
  %arraydecay409 = getelementptr inbounds [36 x i8], [36 x i8]* %name408, i32 0, i32 0
  %reg_2918410 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %100 = load i32, i32* %reg_2918410, align 8, !tbaa !882
  %reg_291c411 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 15
  %101 = load i32, i32* %reg_291c411, align 4, !tbaa !883
  %call412 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.23.777, i32 0, i32 0), i8* %arraydecay409, i32 %100, i32 %or59, i32 %101, i32 %or74)
  br label %do.end415

do.end415:                                        ; preds = %if.then406, %do.end398
  %reg_mem416 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %102 = load i8*, i8** %reg_mem416, align 8, !tbaa !171
  %add.ptr417 = getelementptr i8, i8* %102, i64 10604
  call void @writel.765(i32 %reg_296c.4, i8* %add.ptr417)
  %103 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and419 = and i32 256, %103
  %tobool420 = icmp ne i32 %and419, 0
  br i1 %tobool420, label %if.then421, label %do.end429

if.then421:                                       ; preds = %do.end415
  %v4l2_dev422 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name423 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev422, i32 0, i32 4
  %arraydecay424 = getelementptr inbounds [36 x i8], [36 x i8]* %name423, i32 0, i32 0
  %reg_296c425 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 35
  %104 = load i32, i32* %reg_296c425, align 4, !tbaa !884
  %call426 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.24.778, i32 0, i32 0), i8* %arraydecay424, i32 %104, i32 %reg_296c.4)
  br label %do.end429

do.end429:                                        ; preds = %if.then421, %do.end415
  %reg_mem430 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %105 = load i8*, i8** %reg_mem430, align 8, !tbaa !171
  %add.ptr431 = getelementptr i8, i8* %105, i64 10568
  call void @writel.765(i32 %reg_2940.2, i8* %add.ptr431)
  %reg_mem432 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %106 = load i8*, i8** %reg_mem432, align 8, !tbaa !171
  %add.ptr433 = getelementptr i8, i8* %106, i64 10560
  call void @writel.765(i32 %reg_2940.2, i8* %add.ptr433)
  %107 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and435 = and i32 256, %107
  %tobool436 = icmp ne i32 %and435, 0
  br i1 %tobool436, label %if.then437, label %do.end445

if.then437:                                       ; preds = %do.end429
  %v4l2_dev438 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name439 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev438, i32 0, i32 4
  %arraydecay440 = getelementptr inbounds [36 x i8], [36 x i8]* %name439, i32 0, i32 0
  %reg_2940441 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 24
  %108 = load i32, i32* %reg_2940441, align 8, !tbaa !885
  %reg_2948 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 26
  %109 = load i32, i32* %reg_2948, align 8, !tbaa !886
  %call442 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.25.779, i32 0, i32 0), i8* %arraydecay440, i32 %108, i32 %reg_2940.2, i32 %109, i32 %reg_2940.2)
  br label %do.end445

do.end445:                                        ; preds = %if.then437, %do.end429
  %reg_mem446 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %110 = load i8*, i8** %reg_mem446, align 8, !tbaa !171
  %add.ptr447 = getelementptr i8, i8* %110, i64 10576
  call void @writel.765(i32 %reg_2950.0, i8* %add.ptr447)
  %reg_mem448 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %111 = load i8*, i8** %reg_mem448, align 8, !tbaa !171
  %add.ptr449 = getelementptr i8, i8* %111, i64 10580
  call void @writel.765(i32 %add197, i8* %add.ptr449)
  %112 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and451 = and i32 256, %112
  %tobool452 = icmp ne i32 %and451, 0
  br i1 %tobool452, label %if.then453, label %do.end462

if.then453:                                       ; preds = %do.end445
  %v4l2_dev454 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name455 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev454, i32 0, i32 4
  %arraydecay456 = getelementptr inbounds [36 x i8], [36 x i8]* %name455, i32 0, i32 0
  %reg_2950457 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 28
  %113 = load i32, i32* %reg_2950457, align 8, !tbaa !887
  %reg_2954458 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 29
  %114 = load i32, i32* %reg_2954458, align 4, !tbaa !888
  %call459 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.26.780, i32 0, i32 0), i8* %arraydecay456, i32 %113, i32 %reg_2950.0, i32 %114, i32 %add197)
  br label %do.end462

do.end462:                                        ; preds = %if.then453, %do.end445
  %reg_mem463 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %115 = load i8*, i8** %reg_mem463, align 8, !tbaa !171
  %add.ptr464 = getelementptr i8, i8* %115, i64 10584
  call void @writel.765(i32 %add203.add199, i8* %add.ptr464)
  %reg_mem465 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %116 = load i8*, i8** %reg_mem465, align 8, !tbaa !171
  %add.ptr466 = getelementptr i8, i8* %116, i64 10588
  call void @writel.765(i32 %add205, i8* %add.ptr466)
  %117 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and468 = and i32 256, %117
  %tobool469 = icmp ne i32 %and468, 0
  br i1 %tobool469, label %if.then470, label %do.end479

if.then470:                                       ; preds = %do.end462
  %v4l2_dev471 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name472 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev471, i32 0, i32 4
  %arraydecay473 = getelementptr inbounds [36 x i8], [36 x i8]* %name472, i32 0, i32 0
  %reg_2958474 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 30
  %118 = load i32, i32* %reg_2958474, align 8, !tbaa !889
  %reg_295c475 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 31
  %119 = load i32, i32* %reg_295c475, align 4, !tbaa !890
  %call476 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.27.781, i32 0, i32 0), i8* %arraydecay473, i32 %118, i32 %add203.add199, i32 %119, i32 %add205)
  br label %do.end479

do.end479:                                        ; preds = %if.then470, %do.end462
  %reg_mem480 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %120 = load i8*, i8** %reg_mem480, align 8, !tbaa !171
  %add.ptr481 = getelementptr i8, i8* %120, i64 10592
  call void @writel.765(i32 %or239, i8* %add.ptr481)
  %121 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and483 = and i32 256, %121
  %tobool484 = icmp ne i32 %and483, 0
  br i1 %tobool484, label %if.then485, label %do.end493

if.then485:                                       ; preds = %do.end479
  %v4l2_dev486 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name487 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev486, i32 0, i32 4
  %arraydecay488 = getelementptr inbounds [36 x i8], [36 x i8]* %name487, i32 0, i32 0
  %reg_2960489 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 32
  %122 = load i32, i32* %reg_2960489, align 8, !tbaa !891
  %call490 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.28.782, i32 0, i32 0), i8* %arraydecay488, i32 %122, i32 %or239)
  br label %do.end493

do.end493:                                        ; preds = %if.then485, %do.end479
  %reg_mem494 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %123 = load i8*, i8** %reg_mem494, align 8, !tbaa !171
  %add.ptr495 = getelementptr i8, i8* %123, i64 10596
  call void @writel.765(i32 %add295, i8* %add.ptr495)
  %reg_mem496 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %124 = load i8*, i8** %reg_mem496, align 8, !tbaa !171
  %add.ptr497 = getelementptr i8, i8* %124, i64 10600
  call void @writel.765(i32 %add298, i8* %add.ptr497)
  %125 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and499 = and i32 256, %125
  %tobool500 = icmp ne i32 %and499, 0
  br i1 %tobool500, label %if.then501, label %do.end510

if.then501:                                       ; preds = %do.end493
  %v4l2_dev502 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name503 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev502, i32 0, i32 4
  %arraydecay504 = getelementptr inbounds [36 x i8], [36 x i8]* %name503, i32 0, i32 0
  %reg_2964505 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 33
  %126 = load i32, i32* %reg_2964505, align 4, !tbaa !892
  %reg_2968506 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 34
  %127 = load i32, i32* %reg_2968506, align 8, !tbaa !893
  %call507 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.29.783, i32 0, i32 0), i8* %arraydecay504, i32 %126, i32 %add295, i32 %127, i32 %add298)
  br label %do.end510

do.end510:                                        ; preds = %if.then501, %do.end493
  %reg_mem511 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %128 = load i8*, i8** %reg_mem511, align 8, !tbaa !171
  %add.ptr512 = getelementptr i8, i8* %128, i64 10396
  call void @writel.765(i32 %reg_289c.1, i8* %add.ptr512)
  %129 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and514 = and i32 256, %129
  %tobool515 = icmp ne i32 %and514, 0
  br i1 %tobool515, label %if.then516, label %do.end524

if.then516:                                       ; preds = %do.end510
  %v4l2_dev517 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name518 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev517, i32 0, i32 4
  %arraydecay519 = getelementptr inbounds [36 x i8], [36 x i8]* %name518, i32 0, i32 0
  %reg_289c520 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 13
  %130 = load i32, i32* %reg_289c520, align 4, !tbaa !894
  %call521 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.30.784, i32 0, i32 0), i8* %arraydecay519, i32 %130, i32 %reg_289c.1)
  br label %do.end524

do.end524:                                        ; preds = %if.then516, %do.end510
  %v_filter_1525 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 37
  %131 = load i32, i32* %v_filter_1525, align 4, !tbaa !895
  %cmp526 = icmp ne i32 %v_filter_1.0, %131
  br i1 %cmp526, label %if.then527, label %if.end529

if.then527:                                       ; preds = %do.end524
  call void @ivtv_yuv_filter(%struct.ivtv.1060* %itv, i32 -1, i32 %v_filter_1.0, i32 -1)
  %v_filter_1528 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 37
  store i32 %v_filter_1.0, i32* %v_filter_1528, align 4, !tbaa !895
  br label %if.end529

if.end529:                                        ; preds = %if.then527, %do.end524
  %v_filter_2530 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 38
  %132 = load i32, i32* %v_filter_2530, align 8, !tbaa !896
  %cmp531 = icmp ne i32 %v_filter_2.0, %132
  br i1 %cmp531, label %if.then532, label %if.end534

if.then532:                                       ; preds = %if.end529
  call void @ivtv_yuv_filter(%struct.ivtv.1060* %itv, i32 -1, i32 -1, i32 %v_filter_2.0)
  %v_filter_2533 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 38
  store i32 %v_filter_2.0, i32* %v_filter_2533, align 8, !tbaa !896
  br label %if.end534

if.end534:                                        ; preds = %if.then532, %if.end529
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_filter(%struct.ivtv.1060* %itv, i32 %h_filter, i32 %v_filter_1, i32 %v_filter_2) #0 {
entry:
  %cmp = icmp sgt i32 %h_filter, -1
  br i1 %cmp, label %if.then, label %if.end71

if.then:                                          ; preds = %entry
  %cmp1 = icmp sgt i32 %h_filter, 4
  %.h_filter = select i1 %cmp1, i32 4, i32 %h_filter
  %mul = mul nsw i32 %.h_filter, 384
  %add = add nsw i32 9688, %mul
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.then
  %i.0 = phi i32 [ %add, %if.then ], [ %add63, %for.body ]
  %line.0 = phi i32 [ 0, %if.then ], [ %inc, %for.body ]
  %cmp3 = icmp ult i32 %line.0, 16
  br i1 %cmp3, label %for.body, label %do.body

for.body:                                         ; preds = %for.cond
  %dec_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %0 = load i8*, i8** %dec_mem, align 8, !tbaa !235
  %idx.ext = zext i32 %i.0 to i64
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext
  %call = call i32 @readl.760(i8* %add.ptr)
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr4 = getelementptr i8, i8* %1, i64 10244
  call void @writel.765(i32 %call, i8* %add.ptr4)
  %dec_mem5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %2 = load i8*, i8** %dec_mem5, align 8, !tbaa !235
  %idx.ext6 = zext i32 %i.0 to i64
  %add.ptr7 = getelementptr i8, i8* %2, i64 %idx.ext6
  %call8 = call i32 @readl.760(i8* %add.ptr7)
  %reg_mem9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem9, align 8, !tbaa !171
  %add.ptr10 = getelementptr i8, i8* %3, i64 10268
  call void @writel.765(i32 %call8, i8* %add.ptr10)
  %add11 = add i32 %i.0, 4
  %dec_mem12 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %4 = load i8*, i8** %dec_mem12, align 8, !tbaa !235
  %idx.ext13 = zext i32 %add11 to i64
  %add.ptr14 = getelementptr i8, i8* %4, i64 %idx.ext13
  %call15 = call i32 @readl.760(i8* %add.ptr14)
  %reg_mem16 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem16, align 8, !tbaa !171
  %add.ptr17 = getelementptr i8, i8* %5, i64 10248
  call void @writel.765(i32 %call15, i8* %add.ptr17)
  %dec_mem18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %6 = load i8*, i8** %dec_mem18, align 8, !tbaa !235
  %idx.ext19 = zext i32 %add11 to i64
  %add.ptr20 = getelementptr i8, i8* %6, i64 %idx.ext19
  %call21 = call i32 @readl.760(i8* %add.ptr20)
  %reg_mem22 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem22, align 8, !tbaa !171
  %add.ptr23 = getelementptr i8, i8* %7, i64 10272
  call void @writel.765(i32 %call21, i8* %add.ptr23)
  %add24 = add i32 %add11, 4
  %dec_mem25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %8 = load i8*, i8** %dec_mem25, align 8, !tbaa !235
  %idx.ext26 = zext i32 %add24 to i64
  %add.ptr27 = getelementptr i8, i8* %8, i64 %idx.ext26
  %call28 = call i32 @readl.760(i8* %add.ptr27)
  %reg_mem29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %9 = load i8*, i8** %reg_mem29, align 8, !tbaa !171
  %add.ptr30 = getelementptr i8, i8* %9, i64 10252
  call void @writel.765(i32 %call28, i8* %add.ptr30)
  %dec_mem31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %10 = load i8*, i8** %dec_mem31, align 8, !tbaa !235
  %idx.ext32 = zext i32 %add24 to i64
  %add.ptr33 = getelementptr i8, i8* %10, i64 %idx.ext32
  %call34 = call i32 @readl.760(i8* %add.ptr33)
  %reg_mem35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %11 = load i8*, i8** %reg_mem35, align 8, !tbaa !171
  %add.ptr36 = getelementptr i8, i8* %11, i64 10276
  call void @writel.765(i32 %call34, i8* %add.ptr36)
  %add37 = add i32 %add24, 4
  %dec_mem38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %12 = load i8*, i8** %dec_mem38, align 8, !tbaa !235
  %idx.ext39 = zext i32 %add37 to i64
  %add.ptr40 = getelementptr i8, i8* %12, i64 %idx.ext39
  %call41 = call i32 @readl.760(i8* %add.ptr40)
  %reg_mem42 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %13 = load i8*, i8** %reg_mem42, align 8, !tbaa !171
  %add.ptr43 = getelementptr i8, i8* %13, i64 10256
  call void @writel.765(i32 %call41, i8* %add.ptr43)
  %dec_mem44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %14 = load i8*, i8** %dec_mem44, align 8, !tbaa !235
  %idx.ext45 = zext i32 %add37 to i64
  %add.ptr46 = getelementptr i8, i8* %14, i64 %idx.ext45
  %call47 = call i32 @readl.760(i8* %add.ptr46)
  %reg_mem48 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %15 = load i8*, i8** %reg_mem48, align 8, !tbaa !171
  %add.ptr49 = getelementptr i8, i8* %15, i64 10280
  call void @writel.765(i32 %call47, i8* %add.ptr49)
  %add50 = add i32 %add37, 4
  %dec_mem51 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %16 = load i8*, i8** %dec_mem51, align 8, !tbaa !235
  %idx.ext52 = zext i32 %add50 to i64
  %add.ptr53 = getelementptr i8, i8* %16, i64 %idx.ext52
  %call54 = call i32 @readl.760(i8* %add.ptr53)
  %reg_mem55 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %17 = load i8*, i8** %reg_mem55, align 8, !tbaa !171
  %add.ptr56 = getelementptr i8, i8* %17, i64 10260
  call void @writel.765(i32 %call54, i8* %add.ptr56)
  %dec_mem57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %18 = load i8*, i8** %dec_mem57, align 8, !tbaa !235
  %idx.ext58 = zext i32 %add50 to i64
  %add.ptr59 = getelementptr i8, i8* %18, i64 %idx.ext58
  %call60 = call i32 @readl.760(i8* %add.ptr59)
  %reg_mem61 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %19 = load i8*, i8** %reg_mem61, align 8, !tbaa !171
  %add.ptr62 = getelementptr i8, i8* %19, i64 10284
  call void @writel.765(i32 %call60, i8* %add.ptr62)
  %add63 = add i32 %add50, 8
  %reg_mem64 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %20 = load i8*, i8** %reg_mem64, align 8, !tbaa !171
  %add.ptr65 = getelementptr i8, i8* %20, i64 10264
  call void @writel.765(i32 0, i8* %add.ptr65)
  %reg_mem66 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %21 = load i8*, i8** %reg_mem66, align 8, !tbaa !171
  %add.ptr67 = getelementptr i8, i8* %21, i64 10288
  call void @writel.765(i32 0, i8* %add.ptr67)
  %inc = add i32 %line.0, 1
  br label %for.cond

do.body:                                          ; preds = %for.cond
  %22 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 256, %22
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then68, label %if.end71

if.then68:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call69 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.44.785, i32 0, i32 0), i8* %arraydecay, i32 %.h_filter)
  br label %if.end71

if.end71:                                         ; preds = %if.then68, %do.body, %entry
  %cmp72 = icmp sgt i32 %v_filter_1, -1
  br i1 %cmp72, label %if.then73, label %if.end112

if.then73:                                        ; preds = %if.end71
  %cmp74 = icmp sgt i32 %v_filter_1, 4
  %.v_filter_1 = select i1 %cmp74, i32 4, i32 %v_filter_1
  %mul77 = mul nsw i32 %.v_filter_1, 192
  %add78 = add nsw i32 13144, %mul77
  br label %for.cond79

for.cond79:                                       ; preds = %for.body81, %if.then73
  %i.1 = phi i32 [ %add78, %if.then73 ], [ %add95, %for.body81 ]
  %line.1 = phi i32 [ 0, %if.then73 ], [ %inc99, %for.body81 ]
  %cmp80 = icmp ult i32 %line.1, 16
  br i1 %cmp80, label %for.body81, label %do.body101

for.body81:                                       ; preds = %for.cond79
  %dec_mem82 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %23 = load i8*, i8** %dec_mem82, align 8, !tbaa !235
  %idx.ext83 = zext i32 %i.1 to i64
  %add.ptr84 = getelementptr i8, i8* %23, i64 %idx.ext83
  %call85 = call i32 @readl.760(i8* %add.ptr84)
  %reg_mem86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %24 = load i8*, i8** %reg_mem86, align 8, !tbaa !171
  %add.ptr87 = getelementptr i8, i8* %24, i64 10496
  call void @writel.765(i32 %call85, i8* %add.ptr87)
  %add88 = add i32 %i.1, 4
  %dec_mem89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %25 = load i8*, i8** %dec_mem89, align 8, !tbaa !235
  %idx.ext90 = zext i32 %add88 to i64
  %add.ptr91 = getelementptr i8, i8* %25, i64 %idx.ext90
  %call92 = call i32 @readl.760(i8* %add.ptr91)
  %reg_mem93 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %26 = load i8*, i8** %reg_mem93, align 8, !tbaa !171
  %add.ptr94 = getelementptr i8, i8* %26, i64 10500
  call void @writel.765(i32 %call92, i8* %add.ptr94)
  %add95 = add i32 %add88, 8
  %reg_mem96 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %27 = load i8*, i8** %reg_mem96, align 8, !tbaa !171
  %add.ptr97 = getelementptr i8, i8* %27, i64 10504
  call void @writel.765(i32 0, i8* %add.ptr97)
  %inc99 = add i32 %line.1, 1
  br label %for.cond79

do.body101:                                       ; preds = %for.cond79
  %28 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and102 = and i32 256, %28
  %tobool103 = icmp ne i32 %and102, 0
  br i1 %tobool103, label %if.then104, label %if.end112

if.then104:                                       ; preds = %do.body101
  %v4l2_dev105 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name106 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev105, i32 0, i32 4
  %arraydecay107 = getelementptr inbounds [36 x i8], [36 x i8]* %name106, i32 0, i32 0
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.45.786, i32 0, i32 0), i8* %arraydecay107, i32 %.v_filter_1)
  br label %if.end112

if.end112:                                        ; preds = %if.then104, %do.body101, %if.end71
  %cmp113 = icmp sgt i32 %v_filter_2, -1
  br i1 %cmp113, label %if.then114, label %if.end153

if.then114:                                       ; preds = %if.end112
  %cmp115 = icmp sgt i32 %v_filter_2, 4
  %.v_filter_2 = select i1 %cmp115, i32 4, i32 %v_filter_2
  %mul118 = mul nsw i32 %.v_filter_2, 192
  %add119 = add nsw i32 13144, %mul118
  br label %for.cond120

for.cond120:                                      ; preds = %for.body122, %if.then114
  %i.2 = phi i32 [ %add119, %if.then114 ], [ %add136, %for.body122 ]
  %line.2 = phi i32 [ 0, %if.then114 ], [ %inc140, %for.body122 ]
  %cmp121 = icmp ult i32 %line.2, 16
  br i1 %cmp121, label %for.body122, label %do.body142

for.body122:                                      ; preds = %for.cond120
  %dec_mem123 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %29 = load i8*, i8** %dec_mem123, align 8, !tbaa !235
  %idx.ext124 = zext i32 %i.2 to i64
  %add.ptr125 = getelementptr i8, i8* %29, i64 %idx.ext124
  %call126 = call i32 @readl.760(i8* %add.ptr125)
  %reg_mem127 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %30 = load i8*, i8** %reg_mem127, align 8, !tbaa !171
  %add.ptr128 = getelementptr i8, i8* %30, i64 10508
  call void @writel.765(i32 %call126, i8* %add.ptr128)
  %add129 = add i32 %i.2, 4
  %dec_mem130 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 16
  %31 = load i8*, i8** %dec_mem130, align 8, !tbaa !235
  %idx.ext131 = zext i32 %add129 to i64
  %add.ptr132 = getelementptr i8, i8* %31, i64 %idx.ext131
  %call133 = call i32 @readl.760(i8* %add.ptr132)
  %reg_mem134 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %32 = load i8*, i8** %reg_mem134, align 8, !tbaa !171
  %add.ptr135 = getelementptr i8, i8* %32, i64 10512
  call void @writel.765(i32 %call133, i8* %add.ptr135)
  %add136 = add i32 %add129, 8
  %reg_mem137 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %33 = load i8*, i8** %reg_mem137, align 8, !tbaa !171
  %add.ptr138 = getelementptr i8, i8* %33, i64 10516
  call void @writel.765(i32 0, i8* %add.ptr138)
  %inc140 = add i32 %line.2, 1
  br label %for.cond120

do.body142:                                       ; preds = %for.cond120
  %34 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and143 = and i32 256, %34
  %tobool144 = icmp ne i32 %and143, 0
  br i1 %tobool144, label %if.then145, label %if.end153

if.then145:                                       ; preds = %do.body142
  %v4l2_dev146 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name147 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev146, i32 0, i32 4
  %arraydecay148 = getelementptr inbounds [36 x i8], [36 x i8]* %name147, i32 0, i32 0
  %call149 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.46.787, i32 0, i32 0), i8* %arraydecay148, i32 %.v_filter_2)
  br label %if.end153

if.end153:                                        ; preds = %if.then145, %do.body142, %if.end112
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_yuv_frame_complete(%struct.ivtv.1060* %itv) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %next_fill_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 54
  %yuv_info1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info1, i32 0, i32 64
  %0 = load i8, i8* %draw_frame, align 4, !tbaa !897
  %conv = zext i8 %0 to i32
  %add = add nsw i32 %conv, 1
  %rem = srem i32 %add, 8
  call void @atomic_set.799(%struct.atomic_t* %next_fill_frame, i32 %rem)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_set.799(%struct.atomic_t* %v, i32 %i) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %__val = bitcast %struct.atomic_t* %__u to i32*
  store i32 %i, i32* %__val, align 4, !tbaa !142
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.800(i8* %1, i8* %arraydecay, i32 4)
  %__val1 = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val1, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.800(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load i8, i8* %res, align 1, !tbaa !142
  store volatile i8 %0, i8* %p, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !898
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !899
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define void @ivtv_yuv_setup_stream_frame(%struct.ivtv.1060* %itv) #0 {
entry:
  %dma_args = alloca %struct.ivtv_dma_frame, align 8
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = bitcast %struct.ivtv_dma_frame* %dma_args to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  call void @ivtv_yuv_next_free(%struct.ivtv.1060* %itv)
  %y_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 2
  store i8* null, i8** %y_source, align 8, !tbaa !617
  %uv_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 3
  store i8* null, i8** %uv_source, align 8, !tbaa !900
  %src = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 4
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src, i32 0, i32 0
  store i32 0, i32* %left, align 8, !tbaa !901
  %src1 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 4
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src1, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !902
  %v4l2_src_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 67
  %1 = load i32, i32* %v4l2_src_w, align 8, !tbaa !550
  %src2 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 4
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src2, i32 0, i32 2
  store i32 %1, i32* %width, align 8, !tbaa !903
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %2 = load i32, i32* %v4l2_src_h, align 4, !tbaa !551
  %src3 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 4
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src3, i32 0, i32 3
  store i32 %2, i32* %height, align 4, !tbaa !904
  %dst = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 5
  %main_rect = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 66
  %3 = bitcast %struct.v4l2_rect* %dst to i8*
  %4 = bitcast %struct.v4l2_rect* %main_rect to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %3, i8* %4, i64 16, i32 8, i1 false), !tbaa.struct !504
  %v4l2_src_w4 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 67
  %5 = load i32, i32* %v4l2_src_w4, align 8, !tbaa !550
  %src_width = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 6
  store i32 %5, i32* %src_width, align 8, !tbaa !905
  %v4l2_src_h5 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %6 = load i32, i32* %v4l2_src_h5, align 4, !tbaa !551
  %src_height = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 7
  store i32 %6, i32* %src_height, align 4, !tbaa !906
  call void @ivtv_yuv_setup_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %dma_args)
  %dma_data_req_offset = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 56
  %7 = load i32, i32* %dma_data_req_offset, align 8, !tbaa !404
  %tobool = icmp ne i32 %7, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 64
  %8 = load i8, i8* %draw_frame, align 4, !tbaa !635
  %idxprom = zext i8 %8 to i64
  %arrayidx = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom
  %9 = load i32, i32* %arrayidx, align 4, !tbaa !120
  %dma_data_req_offset6 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 56
  store i32 %9, i32* %dma_data_req_offset6, align 8, !tbaa !404
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %10 = bitcast %struct.ivtv_dma_frame* %dma_args to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %10) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_next_free(%struct.ivtv.1060* %itv) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  %call = call i32 @atomic_read.804(%struct.atomic_t* %next_dma_frame)
  %cmp = icmp eq i32 %call, -1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @ivtv_yuv_init(%struct.ivtv.1060* %itv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %next_fill_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 54
  %call1 = call i32 @atomic_read.804(%struct.atomic_t* %next_fill_frame)
  %next_dma_frame2 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  %call3 = call i32 @atomic_read.804(%struct.atomic_t* %next_dma_frame2)
  %cmp4 = icmp sgt i32 %call3, %call1
  %sub = sub nsw i32 %call3, 8
  %sub.call3 = select i1 %cmp4, i32 %sub, i32 %call3
  %sub7 = sub nsw i32 %call1, %sub.call3
  %max_frames_buffered = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 65
  %0 = load i8, i8* %max_frames_buffered, align 1, !tbaa !907
  %conv = zext i8 %0 to i32
  %cmp8 = icmp sge i32 %sub7, %conv
  br i1 %cmp8, label %if.then10, label %if.else

if.then10:                                        ; preds = %if.end
  %sub11 = sub nsw i32 %call1, 1
  %conv12 = trunc i32 %sub11 to i8
  %conv13 = zext i8 %conv12 to i32
  %rem = srem i32 %conv13, 8
  br label %if.end14

if.else:                                          ; preds = %if.end
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = sext i32 %call1 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %update = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  store i32 0, i32* %update, align 4, !tbaa !668
  br label %if.end14

if.end14:                                         ; preds = %if.else, %if.then10
  %draw.0 = phi i32 [ %rem, %if.then10 ], [ %call1, %if.else ]
  %conv15 = trunc i32 %draw.0 to i8
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 64
  store i8 %conv15, i8* %draw_frame, align 4, !tbaa !635
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_setup_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %args) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 64
  %0 = load i8, i8* %draw_frame, align 4, !tbaa !635
  %conv = zext i8 %0 to i32
  %sub = sub nsw i32 %conv, 1
  %conv1 = trunc i32 %sub to i8
  %conv2 = zext i8 %conv1 to i32
  %rem = srem i32 %conv2, 8
  %conv3 = trunc i32 %rem to i8
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = zext i8 %0 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %new_frame_info4 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom5 = zext i8 %conv3 to i64
  %arrayidx6 = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info4, i64 0, i64 %idxprom5
  %lace_threshold7 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 51
  %1 = load i32, i32* %lace_threshold7, align 4, !tbaa !908
  %update8 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  %2 = load i32, i32* %update8, align 4, !tbaa !668
  %src = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 4
  %left = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src, i32 0, i32 0
  %3 = load i32, i32* %left, align 8, !tbaa !901
  %src_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 1
  store i32 %3, i32* %src_x, align 4, !tbaa !844
  %src9 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 4
  %top = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src9, i32 0, i32 1
  %4 = load i32, i32* %top, align 4, !tbaa !902
  %src_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 2
  store i32 %4, i32* %src_y, align 4, !tbaa !845
  %src10 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 4
  %width = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src10, i32 0, i32 2
  %5 = load i32, i32* %width, align 8, !tbaa !903
  %src_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 3
  store i32 %5, i32* %src_w, align 4, !tbaa !669
  %src11 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 4
  %height = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %src11, i32 0, i32 3
  %6 = load i32, i32* %height, align 4, !tbaa !904
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 4
  store i32 %6, i32* %src_h, align 4, !tbaa !636
  %dst = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 5
  %left12 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %dst, i32 0, i32 0
  %7 = load i32, i32* %left12, align 8, !tbaa !909
  %dst_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 5
  store i32 %7, i32* %dst_x, align 4, !tbaa !850
  %dst13 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 5
  %top14 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %dst13, i32 0, i32 1
  %8 = load i32, i32* %top14, align 4, !tbaa !910
  %dst_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 6
  store i32 %8, i32* %dst_y, align 4, !tbaa !849
  %dst15 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 5
  %width16 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %dst15, i32 0, i32 2
  %9 = load i32, i32* %width16, align 8, !tbaa !911
  %dst_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 7
  store i32 %9, i32* %dst_w, align 4, !tbaa !846
  %dst17 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 5
  %height18 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %dst17, i32 0, i32 3
  %10 = load i32, i32* %height18, align 4, !tbaa !912
  %dst_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 8
  store i32 %10, i32* %dst_h, align 4, !tbaa !847
  %dst19 = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 5
  %left20 = getelementptr inbounds %struct.v4l2_rect, %struct.v4l2_rect* %dst19, i32 0, i32 0
  %11 = load i32, i32* %left20, align 8, !tbaa !909
  %tru_x = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 15
  store i32 %11, i32* %tru_x, align 4, !tbaa !857
  %src_width = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 6
  %12 = load i32, i32* %src_width, align 8, !tbaa !905
  %tru_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 16
  store i32 %12, i32* %tru_w, align 4, !tbaa !856
  %src_height = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 7
  %13 = load i32, i32* %src_height, align 4, !tbaa !906
  %tru_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  store i32 %13, i32* %tru_h, align 4, !tbaa !871
  %tru_h21 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %14 = load i32, i32* %tru_h21, align 4, !tbaa !871
  %src_x22 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 1
  %15 = load i32, i32* %src_x22, align 4, !tbaa !844
  %add = add i32 %14, %15
  %cmp = icmp ult i32 %add, 496
  %16 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 1, i32 0
  %offset_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 18
  store i32 %cond, i32* %offset_y, align 4, !tbaa !638
  %update24 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  store i32 0, i32* %update24, align 4, !tbaa !668
  %interlaced_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 13
  store i32 0, i32* %interlaced_y, align 4, !tbaa !848
  %interlaced_uv = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 14
  store i32 0, i32* %interlaced_uv, align 4, !tbaa !854
  %delay = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 21
  store i32 0, i32* %delay, align 4, !tbaa !664
  %sync_field = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 20
  store i32 0, i32* %sync_field, align 4, !tbaa !662
  %lace_mode = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 50
  %17 = load i32, i32* %lace_mode, align 8, !tbaa !552
  %and = and i32 %17, 3
  %lace_mode25 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 19
  store i32 %and, i32* %lace_mode25, align 4, !tbaa !853
  %cmp26 = icmp slt i32 %1, 0
  br i1 %cmp26, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %decode_height = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %18 = load i32, i32* %decode_height, align 4, !tbaa !842
  %sub28 = sub nsw i32 %18, 1
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %lace_threshold.0 = phi i32 [ %sub28, %if.then ], [ %1, %entry ]
  %lace_mode29 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 19
  %19 = load i32, i32* %lace_mode29, align 4, !tbaa !853
  %Pivot4 = icmp slt i32 %19, 1
  br i1 %Pivot4, label %sw.default, label %NodeBlock

NodeBlock:                                        ; preds = %if.end
  %Pivot = icmp slt i32 %19, 2
  br i1 %Pivot, label %sw.bb, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %19, 2
  br i1 %SwitchLeaf2, label %sw.bb56, label %sw.default

sw.bb:                                            ; preds = %NodeBlock
  %interlaced = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  store i32 0, i32* %interlaced, align 4, !tbaa !663
  %tru_h30 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %20 = load i32, i32* %tru_h30, align 4, !tbaa !871
  %cmp31 = icmp ult i32 %20, 512
  br i1 %cmp31, label %if.then39, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %tru_h33 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %21 = load i32, i32* %tru_h33, align 4, !tbaa !871
  %cmp34 = icmp ugt i32 %21, 576
  br i1 %cmp34, label %land.lhs.true, label %if.end42

land.lhs.true:                                    ; preds = %lor.lhs.false
  %tru_h36 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %22 = load i32, i32* %tru_h36, align 4, !tbaa !871
  %cmp37 = icmp ult i32 %22, 1021
  br i1 %cmp37, label %if.then39, label %if.end42

if.then39:                                        ; preds = %land.lhs.true, %sw.bb
  br label %if.end42

if.end42:                                         ; preds = %if.then39, %land.lhs.true, %lor.lhs.false
  %.sink = phi i32 [ 0, %if.then39 ], [ 1, %land.lhs.true ], [ 1, %lor.lhs.false ]
  %interlaced_y41 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 13
  store i32 %.sink, i32* %interlaced_y41, align 4, !tbaa !848
  %tru_h43 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %23 = load i32, i32* %tru_h43, align 4, !tbaa !871
  %cmp44 = icmp ult i32 %23, 1021
  br i1 %cmp44, label %land.lhs.true46, label %sw.epilog

land.lhs.true46:                                  ; preds = %if.end42
  %dst_h47 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 8
  %24 = load i32, i32* %dst_h47, align 4, !tbaa !847
  %src_h48 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 4
  %25 = load i32, i32* %src_h48, align 4, !tbaa !636
  %div = udiv i32 %25, 2
  %cmp49 = icmp uge i32 %24, %div
  %. = select i1 %cmp49, i32 0, i32 1
  br label %sw.epilog

sw.bb56:                                          ; preds = %LeafBlock1
  %tru_h57 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %26 = load i32, i32* %tru_h57, align 4, !tbaa !871
  %cmp58 = icmp ule i32 %26, %lace_threshold.0
  br i1 %cmp58, label %if.then68, label %lor.lhs.false60

lor.lhs.false60:                                  ; preds = %sw.bb56
  %tru_h61 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %27 = load i32, i32* %tru_h61, align 4, !tbaa !871
  %cmp62 = icmp ugt i32 %27, 576
  br i1 %cmp62, label %if.then68, label %lor.lhs.false64

lor.lhs.false64:                                  ; preds = %lor.lhs.false60
  %tru_w65 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 16
  %28 = load i32, i32* %tru_w65, align 4, !tbaa !856
  %cmp66 = icmp ugt i32 %28, 720
  br i1 %cmp66, label %if.then68, label %if.else108

if.then68:                                        ; preds = %lor.lhs.false64, %lor.lhs.false60, %sw.bb56
  %interlaced69 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  store i32 0, i32* %interlaced69, align 4, !tbaa !663
  %tru_h70 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %29 = load i32, i32* %tru_h70, align 4, !tbaa !871
  %cmp71 = icmp ult i32 %29, 512
  br i1 %cmp71, label %if.then89, label %lor.lhs.false73

lor.lhs.false73:                                  ; preds = %if.then68
  %tru_h74 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %30 = load i32, i32* %tru_h74, align 4, !tbaa !871
  %cmp75 = icmp ugt i32 %30, 576
  br i1 %cmp75, label %land.lhs.true77, label %lor.lhs.false81

land.lhs.true77:                                  ; preds = %lor.lhs.false73
  %tru_h78 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %31 = load i32, i32* %tru_h78, align 4, !tbaa !871
  %cmp79 = icmp ult i32 %31, 1021
  br i1 %cmp79, label %if.then89, label %lor.lhs.false81

lor.lhs.false81:                                  ; preds = %land.lhs.true77, %lor.lhs.false73
  %tru_w82 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 16
  %32 = load i32, i32* %tru_w82, align 4, !tbaa !856
  %cmp83 = icmp ugt i32 %32, 720
  br i1 %cmp83, label %land.lhs.true85, label %if.end93

land.lhs.true85:                                  ; preds = %lor.lhs.false81
  %tru_h86 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %33 = load i32, i32* %tru_h86, align 4, !tbaa !871
  %cmp87 = icmp ult i32 %33, 1021
  br i1 %cmp87, label %if.then89, label %if.end93

if.then89:                                        ; preds = %land.lhs.true85, %land.lhs.true77, %if.then68
  br label %if.end93

if.end93:                                         ; preds = %if.then89, %land.lhs.true85, %lor.lhs.false81
  %.sink6 = phi i32 [ 0, %if.then89 ], [ 1, %land.lhs.true85 ], [ 1, %lor.lhs.false81 ]
  %interlaced_y92 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 13
  store i32 %.sink6, i32* %interlaced_y92, align 4, !tbaa !848
  %tru_h94 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 17
  %34 = load i32, i32* %tru_h94, align 4, !tbaa !871
  %cmp95 = icmp ult i32 %34, 1021
  br i1 %cmp95, label %land.lhs.true97, label %sw.epilog

land.lhs.true97:                                  ; preds = %if.end93
  %dst_h98 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 8
  %35 = load i32, i32* %dst_h98, align 4, !tbaa !847
  %src_h99 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 4
  %36 = load i32, i32* %src_h99, align 4, !tbaa !636
  %div100 = udiv i32 %36, 2
  %cmp101 = icmp uge i32 %35, %div100
  %.10 = select i1 %cmp101, i32 0, i32 1
  br label %sw.epilog

if.else108:                                       ; preds = %lor.lhs.false64
  %interlaced109 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  store i32 1, i32* %interlaced109, align 4, !tbaa !663
  %interlaced_y110 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 13
  store i32 1, i32* %interlaced_y110, align 4, !tbaa !848
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock1, %if.end
  %interlaced114 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 22
  store i32 1, i32* %interlaced114, align 4, !tbaa !663
  %interlaced_y115 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 13
  store i32 1, i32* %interlaced_y115, align 4, !tbaa !848
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.else108, %land.lhs.true97, %if.end93, %land.lhs.true46, %if.end42
  %.sink9 = phi i32 [ 1, %sw.default ], [ 1, %if.end42 ], [ %., %land.lhs.true46 ], [ 1, %if.else108 ], [ 1, %if.end93 ], [ %.10, %land.lhs.true97 ]
  %interlaced_uv116 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 14
  store i32 %.sink9, i32* %interlaced_uv116, align 4, !tbaa !854
  %old_frame_info_args = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 60
  %37 = bitcast %struct.yuv_frame_info* %old_frame_info_args to i8*
  %38 = bitcast %struct.yuv_frame_info* %arrayidx to i8*
  %call = call i32 @memcmp(i8* %37, i8* %38, i64 92)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then117, label %if.end126

if.then117:                                       ; preds = %sw.epilog
  %old_frame_info_args118 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 60
  %39 = bitcast %struct.yuv_frame_info* %old_frame_info_args118 to i8*
  %40 = bitcast %struct.yuv_frame_info* %arrayidx to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 92, i32 4, i1 false), !tbaa.struct !834
  %update119 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  store i32 1, i32* %update119, align 4, !tbaa !668
  %41 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and120 = and i32 256, %41
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then122, label %if.end126

if.then122:                                       ; preds = %if.then117
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %conv123 = zext i8 %0 to i32
  %call124 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.35.803, i32 0, i32 0), i8* %arraydecay, i32 %conv123)
  br label %if.end126

if.end126:                                        ; preds = %if.then122, %if.then117, %sw.epilog
  %update127 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 0
  %42 = load i32, i32* %update127, align 4, !tbaa !668
  %or = or i32 %42, %2
  store i32 %or, i32* %update127, align 4, !tbaa !668
  %lace_sync_field = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 52
  %43 = load i32, i32* %lace_sync_field, align 8, !tbaa !553
  %sync_field128 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 20
  store i32 %43, i32* %sync_field128, align 4, !tbaa !662
  %sync_field129 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 20
  %44 = load i32, i32* %sync_field129, align 4, !tbaa !662
  %sync_field130 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx6, i32 0, i32 20
  %45 = load i32, i32* %sync_field130, align 4, !tbaa !662
  %cmp131 = icmp ne i32 %44, %45
  %conv132 = zext i1 %cmp131 to i32
  %delay133 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 21
  store i32 %conv132, i32* %delay133, align 4, !tbaa !664
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_read.804(%struct.atomic_t* %v) #1 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.818(i8* %1, i8* %arraydecay, i32 4)
  %__val = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val, align 4, !tbaa !142
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret i32 %2
}

; Function Attrs: nounwind uwtable
define internal void @ivtv_yuv_init(%struct.ivtv.1060* %itv) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 256, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.31.805, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %1 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %1, i64 10292
  %call1 = call i32 @readl.760(i8* %add.ptr)
  %reg_2834 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  store i32 %call1, i32* %reg_2834, align 8, !tbaa !858
  %reg_mem2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem2, align 8, !tbaa !171
  %add.ptr3 = getelementptr i8, i8* %2, i64 10296
  %call4 = call i32 @readl.760(i8* %add.ptr3)
  %reg_2838 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 1
  store i32 %call4, i32* %reg_2838, align 4, !tbaa !859
  %reg_mem5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %3 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %3, i64 10300
  %call7 = call i32 @readl.760(i8* %add.ptr6)
  %reg_283c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 2
  store i32 %call7, i32* %reg_283c, align 8, !tbaa !860
  %reg_mem8 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem8, align 8, !tbaa !171
  %add.ptr9 = getelementptr i8, i8* %4, i64 10304
  %call10 = call i32 @readl.760(i8* %add.ptr9)
  %reg_2840 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 3
  store i32 %call10, i32* %reg_2840, align 4, !tbaa !862
  %reg_mem11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %5 = load i8*, i8** %reg_mem11, align 8, !tbaa !171
  %add.ptr12 = getelementptr i8, i8* %5, i64 10308
  %call13 = call i32 @readl.760(i8* %add.ptr12)
  %reg_2844 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 4
  store i32 %call13, i32* %reg_2844, align 8, !tbaa !861
  %reg_mem14 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem14, align 8, !tbaa !171
  %add.ptr15 = getelementptr i8, i8* %6, i64 10312
  %call16 = call i32 @readl.760(i8* %add.ptr15)
  %reg_2848 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 5
  store i32 %call16, i32* %reg_2848, align 4, !tbaa !863
  %reg_mem17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %7 = load i8*, i8** %reg_mem17, align 8, !tbaa !171
  %add.ptr18 = getelementptr i8, i8* %7, i64 10324
  %call19 = call i32 @readl.760(i8* %add.ptr18)
  %reg_2854 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 6
  store i32 %call19, i32* %reg_2854, align 8, !tbaa !864
  %reg_mem20 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem20, align 8, !tbaa !171
  %add.ptr21 = getelementptr i8, i8* %8, i64 10332
  %call22 = call i32 @readl.760(i8* %add.ptr21)
  %reg_285c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 7
  store i32 %call22, i32* %reg_285c, align 4, !tbaa !865
  %reg_mem23 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %9 = load i8*, i8** %reg_mem23, align 8, !tbaa !171
  %add.ptr24 = getelementptr i8, i8* %9, i64 10340
  %call25 = call i32 @readl.760(i8* %add.ptr24)
  %reg_2864 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 8
  store i32 %call25, i32* %reg_2864, align 8, !tbaa !866
  %reg_mem26 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %10 = load i8*, i8** %reg_mem26, align 8, !tbaa !171
  %add.ptr27 = getelementptr i8, i8* %10, i64 10352
  %call28 = call i32 @readl.760(i8* %add.ptr27)
  %reg_2870 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 9
  store i32 %call28, i32* %reg_2870, align 4, !tbaa !868
  %reg_mem29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %11 = load i8*, i8** %reg_mem29, align 8, !tbaa !171
  %add.ptr30 = getelementptr i8, i8* %11, i64 10356
  %call31 = call i32 @readl.760(i8* %add.ptr30)
  %reg_2874 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 10
  store i32 %call31, i32* %reg_2874, align 8, !tbaa !867
  %reg_mem32 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %12 = load i8*, i8** %reg_mem32, align 8, !tbaa !171
  %add.ptr33 = getelementptr i8, i8* %12, i64 10392
  %call34 = call i32 @readl.760(i8* %add.ptr33)
  %reg_2898 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 12
  store i32 %call34, i32* %reg_2898, align 8, !tbaa !913
  %reg_mem35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %13 = load i8*, i8** %reg_mem35, align 8, !tbaa !171
  %add.ptr36 = getelementptr i8, i8* %13, i64 10384
  %call37 = call i32 @readl.760(i8* %add.ptr36)
  %reg_2890 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 11
  store i32 %call37, i32* %reg_2890, align 4, !tbaa !869
  %reg_mem38 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %14 = load i8*, i8** %reg_mem38, align 8, !tbaa !171
  %add.ptr39 = getelementptr i8, i8* %14, i64 10396
  %call40 = call i32 @readl.760(i8* %add.ptr39)
  %reg_289c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 13
  store i32 %call40, i32* %reg_289c, align 4, !tbaa !894
  %reg_mem41 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %15 = load i8*, i8** %reg_mem41, align 8, !tbaa !171
  %add.ptr42 = getelementptr i8, i8* %15, i64 10520
  %call43 = call i32 @readl.760(i8* %add.ptr42)
  %reg_2918 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  store i32 %call43, i32* %reg_2918, align 8, !tbaa !882
  %reg_mem44 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem44, align 8, !tbaa !171
  %add.ptr45 = getelementptr i8, i8* %16, i64 10524
  %call46 = call i32 @readl.760(i8* %add.ptr45)
  %reg_291c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 15
  store i32 %call46, i32* %reg_291c, align 4, !tbaa !883
  %reg_mem47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %17 = load i8*, i8** %reg_mem47, align 8, !tbaa !171
  %add.ptr48 = getelementptr i8, i8* %17, i64 10528
  %call49 = call i32 @readl.760(i8* %add.ptr48)
  %reg_2920 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 16
  store i32 %call49, i32* %reg_2920, align 8, !tbaa !880
  %reg_mem50 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %18 = load i8*, i8** %reg_mem50, align 8, !tbaa !171
  %add.ptr51 = getelementptr i8, i8* %18, i64 10532
  %call52 = call i32 @readl.760(i8* %add.ptr51)
  %reg_2924 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 17
  store i32 %call52, i32* %reg_2924, align 4, !tbaa !881
  %reg_mem53 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %19 = load i8*, i8** %reg_mem53, align 8, !tbaa !171
  %add.ptr54 = getelementptr i8, i8* %19, i64 10536
  %call55 = call i32 @readl.760(i8* %add.ptr54)
  %reg_2928 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 18
  store i32 %call55, i32* %reg_2928, align 8, !tbaa !878
  %reg_mem56 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %20 = load i8*, i8** %reg_mem56, align 8, !tbaa !171
  %add.ptr57 = getelementptr i8, i8* %20, i64 10540
  %call58 = call i32 @readl.760(i8* %add.ptr57)
  %reg_292c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 19
  store i32 %call58, i32* %reg_292c, align 4, !tbaa !879
  %reg_mem59 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %21 = load i8*, i8** %reg_mem59, align 8, !tbaa !171
  %add.ptr60 = getelementptr i8, i8* %21, i64 10544
  %call61 = call i32 @readl.760(i8* %add.ptr60)
  %reg_2930 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 20
  store i32 %call61, i32* %reg_2930, align 8, !tbaa !876
  %reg_mem62 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %22 = load i8*, i8** %reg_mem62, align 8, !tbaa !171
  %add.ptr63 = getelementptr i8, i8* %22, i64 10548
  %call64 = call i32 @readl.760(i8* %add.ptr63)
  %reg_2934 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 21
  store i32 %call64, i32* %reg_2934, align 4, !tbaa !872
  %reg_mem65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %23 = load i8*, i8** %reg_mem65, align 8, !tbaa !171
  %add.ptr66 = getelementptr i8, i8* %23, i64 10552
  %call67 = call i32 @readl.760(i8* %add.ptr66)
  %reg_2938 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 22
  store i32 %call67, i32* %reg_2938, align 8, !tbaa !877
  %reg_mem68 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %24 = load i8*, i8** %reg_mem68, align 8, !tbaa !171
  %add.ptr69 = getelementptr i8, i8* %24, i64 10556
  %call70 = call i32 @readl.760(i8* %add.ptr69)
  %reg_293c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 23
  store i32 %call70, i32* %reg_293c, align 4, !tbaa !873
  %reg_mem71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %25 = load i8*, i8** %reg_mem71, align 8, !tbaa !171
  %add.ptr72 = getelementptr i8, i8* %25, i64 10560
  %call73 = call i32 @readl.760(i8* %add.ptr72)
  %reg_2940 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 24
  store i32 %call73, i32* %reg_2940, align 8, !tbaa !885
  %reg_mem74 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %26 = load i8*, i8** %reg_mem74, align 8, !tbaa !171
  %add.ptr75 = getelementptr i8, i8* %26, i64 10564
  %call76 = call i32 @readl.760(i8* %add.ptr75)
  %reg_2944 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 25
  store i32 %call76, i32* %reg_2944, align 4, !tbaa !874
  %reg_mem77 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %27 = load i8*, i8** %reg_mem77, align 8, !tbaa !171
  %add.ptr78 = getelementptr i8, i8* %27, i64 10568
  %call79 = call i32 @readl.760(i8* %add.ptr78)
  %reg_2948 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 26
  store i32 %call79, i32* %reg_2948, align 8, !tbaa !886
  %reg_mem80 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %28 = load i8*, i8** %reg_mem80, align 8, !tbaa !171
  %add.ptr81 = getelementptr i8, i8* %28, i64 10572
  %call82 = call i32 @readl.760(i8* %add.ptr81)
  %reg_294c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 27
  store i32 %call82, i32* %reg_294c, align 4, !tbaa !875
  %reg_mem83 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %29 = load i8*, i8** %reg_mem83, align 8, !tbaa !171
  %add.ptr84 = getelementptr i8, i8* %29, i64 10576
  %call85 = call i32 @readl.760(i8* %add.ptr84)
  %reg_2950 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 28
  store i32 %call85, i32* %reg_2950, align 8, !tbaa !887
  %reg_mem86 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %30 = load i8*, i8** %reg_mem86, align 8, !tbaa !171
  %add.ptr87 = getelementptr i8, i8* %30, i64 10580
  %call88 = call i32 @readl.760(i8* %add.ptr87)
  %reg_2954 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 29
  store i32 %call88, i32* %reg_2954, align 4, !tbaa !888
  %reg_mem89 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %31 = load i8*, i8** %reg_mem89, align 8, !tbaa !171
  %add.ptr90 = getelementptr i8, i8* %31, i64 10584
  %call91 = call i32 @readl.760(i8* %add.ptr90)
  %reg_2958 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 30
  store i32 %call91, i32* %reg_2958, align 8, !tbaa !889
  %reg_mem92 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %32 = load i8*, i8** %reg_mem92, align 8, !tbaa !171
  %add.ptr93 = getelementptr i8, i8* %32, i64 10588
  %call94 = call i32 @readl.760(i8* %add.ptr93)
  %reg_295c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 31
  store i32 %call94, i32* %reg_295c, align 4, !tbaa !890
  %reg_mem95 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %33 = load i8*, i8** %reg_mem95, align 8, !tbaa !171
  %add.ptr96 = getelementptr i8, i8* %33, i64 10592
  %call97 = call i32 @readl.760(i8* %add.ptr96)
  %reg_2960 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 32
  store i32 %call97, i32* %reg_2960, align 8, !tbaa !891
  %reg_mem98 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %34 = load i8*, i8** %reg_mem98, align 8, !tbaa !171
  %add.ptr99 = getelementptr i8, i8* %34, i64 10596
  %call100 = call i32 @readl.760(i8* %add.ptr99)
  %reg_2964 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 33
  store i32 %call100, i32* %reg_2964, align 4, !tbaa !892
  %reg_mem101 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %35 = load i8*, i8** %reg_mem101, align 8, !tbaa !171
  %add.ptr102 = getelementptr i8, i8* %35, i64 10600
  %call103 = call i32 @readl.760(i8* %add.ptr102)
  %reg_2968 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 34
  store i32 %call103, i32* %reg_2968, align 8, !tbaa !893
  %reg_mem104 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %36 = load i8*, i8** %reg_mem104, align 8, !tbaa !171
  %add.ptr105 = getelementptr i8, i8* %36, i64 10604
  %call106 = call i32 @readl.760(i8* %add.ptr105)
  %reg_296c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 35
  store i32 %call106, i32* %reg_296c, align 4, !tbaa !884
  %reg_mem107 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %37 = load i8*, i8** %reg_mem107, align 8, !tbaa !171
  %add.ptr108 = getelementptr i8, i8* %37, i64 10608
  %call109 = call i32 @readl.760(i8* %add.ptr108)
  %reg_2970 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 36
  store i32 %call109, i32* %reg_2970, align 8, !tbaa !914
  %v_filter_1 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 37
  store i32 -1, i32* %v_filter_1, align 4, !tbaa !895
  %v_filter_2 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 38
  store i32 -1, i32* %v_filter_2, align 8, !tbaa !896
  %h_filter = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 39
  store i32 -1, i32* %h_filter, align 4, !tbaa !870
  %reg_mem110 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %38 = load i8*, i8** %reg_mem110, align 8, !tbaa !171
  %add.ptr111 = getelementptr i8, i8* %38, i64 10756
  %call112 = call i32 @readl.760(i8* %add.ptr111)
  %and113 = and i32 %call112, 4095
  %osd_x_offset = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 41
  store i32 %and113, i32* %osd_x_offset, align 4, !tbaa !915
  %reg_mem114 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %39 = load i8*, i8** %reg_mem114, align 8, !tbaa !171
  %add.ptr115 = getelementptr i8, i8* %39, i64 10756
  %call116 = call i32 @readl.760(i8* %add.ptr115)
  %shr = lshr i32 %call116, 16
  %and117 = and i32 %shr, 4095
  %osd_y_offset = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 42
  store i32 %and117, i32* %osd_y_offset, align 8, !tbaa !916
  %reg_mem118 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %40 = load i8*, i8** %reg_mem118, align 8, !tbaa !171
  %add.ptr119 = getelementptr i8, i8* %40, i64 10360
  %call120 = call i32 @readl.760(i8* %add.ptr119)
  %and121 = and i32 %call120, 4
  %tobool122 = icmp ne i32 %and121, 0
  %decode_height = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %.sink = select i1 %tobool122, i32 576, i32 480
  store i32 %.sink, i32* %decode_height, align 4, !tbaa !842
  %osd_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 99
  %41 = load %struct.osd_info*, %struct.osd_info** %osd_info, align 8, !tbaa !505
  %tobool126 = icmp ne %struct.osd_info* %41, null
  br i1 %tobool126, label %if.else132, label %if.then127

if.then127:                                       ; preds = %do.end
  %osd_x_offset128 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 41
  %42 = load i32, i32* %osd_x_offset128, align 4, !tbaa !915
  %sub = sub i32 720, %42
  %osd_vis_w = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 45
  store i32 %sub, i32* %osd_vis_w, align 4, !tbaa !839
  br label %if.end173.sink.split

if.else132:                                       ; preds = %do.end
  %osd_vis_w133 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 45
  %43 = load i32, i32* %osd_vis_w133, align 4, !tbaa !839
  %tobool134 = icmp ne i32 %43, 0
  br i1 %tobool134, label %if.end139, label %if.then135

if.then135:                                       ; preds = %if.else132
  %osd_x_offset136 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 41
  %44 = load i32, i32* %osd_x_offset136, align 4, !tbaa !915
  %sub137 = sub i32 720, %44
  %osd_vis_w138 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 45
  store i32 %sub137, i32* %osd_vis_w138, align 4, !tbaa !839
  br label %if.end139

if.end139:                                        ; preds = %if.then135, %if.else132
  %osd_vis_h140 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 46
  %45 = load i32, i32* %osd_vis_h140, align 8, !tbaa !841
  %tobool141 = icmp ne i32 %45, 0
  br i1 %tobool141, label %if.else147, label %if.end173.sink.split

if.else147:                                       ; preds = %if.end139
  %osd_vis_h148 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 46
  %46 = load i32, i32* %osd_vis_h148, align 8, !tbaa !841
  %osd_y_offset149 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 42
  %47 = load i32, i32* %osd_y_offset149, align 8, !tbaa !916
  %add = add i32 %46, %47
  %decode_height150 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %48 = load i32, i32* %decode_height150, align 4, !tbaa !842
  %cmp = icmp ugt i32 %add, %48
  br i1 %cmp, label %do.body152, label %if.end173

do.body152:                                       ; preds = %if.else147
  %49 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and153 = and i32 1, %49
  %tobool154 = icmp ne i32 %and153, 0
  br i1 %tobool154, label %if.then155, label %if.end173.sink.split

if.then155:                                       ; preds = %do.body152
  %v4l2_dev156 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name157 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev156, i32 0, i32 4
  %arraydecay158 = getelementptr inbounds [36 x i8], [36 x i8]* %name157, i32 0, i32 0
  %osd_vis_h159 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 46
  %50 = load i32, i32* %osd_vis_h159, align 8, !tbaa !841
  %osd_y_offset160 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 42
  %51 = load i32, i32* %osd_y_offset160, align 8, !tbaa !916
  %add161 = add i32 %50, %51
  %decode_height162 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %52 = load i32, i32* %decode_height162, align 4, !tbaa !842
  %call163 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.32.806, i32 0, i32 0), i8* %arraydecay158, i32 %add161, i32 %52)
  br label %if.end173.sink.split

if.end173.sink.split:                             ; preds = %if.then155, %do.body152, %if.end139, %if.then127
  %decode_height143 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 49
  %53 = load i32, i32* %decode_height143, align 4, !tbaa !842
  %osd_y_offset144 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 42
  %54 = load i32, i32* %osd_y_offset144, align 8, !tbaa !916
  %sub145 = sub i32 %53, %54
  %osd_vis_h146 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 46
  store i32 %sub145, i32* %osd_vis_h146, align 8, !tbaa !841
  br label %if.end173

if.end173:                                        ; preds = %if.end173.sink.split, %if.else147
  %call174 = call i8* @kzalloc.807(i64 11520, i32 20972224)
  %blanking_ptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  store i8* %call174, i8** %blanking_ptr, align 8, !tbaa !917
  %blanking_ptr175 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  %55 = load i8*, i8** %blanking_ptr175, align 8, !tbaa !917
  %tobool176 = icmp ne i8* %55, null
  br i1 %tobool176, label %if.then177, label %if.else180

if.then177:                                       ; preds = %if.end173
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %56 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %blanking_ptr178 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  %57 = load i8*, i8** %blanking_ptr178, align 8, !tbaa !917
  %call179 = call i64 @pci_map_single.808(%struct.pci_dev* %56, i8* %57, i64 11520, i32 1)
  %blanking_dmaptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  store i64 %call179, i64* %blanking_dmaptr, align 8, !tbaa !639
  br label %do.body194

if.else180:                                       ; preds = %if.end173
  %blanking_dmaptr181 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  store i64 0, i64* %blanking_dmaptr181, align 8, !tbaa !639
  %58 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and183 = and i32 1, %58
  %tobool184 = icmp ne i32 %and183, 0
  br i1 %tobool184, label %if.then185, label %do.body194

if.then185:                                       ; preds = %if.else180
  %v4l2_dev186 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name187 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev186, i32 0, i32 4
  %arraydecay188 = getelementptr inbounds [36 x i8], [36 x i8]* %name187, i32 0, i32 0
  %call189 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.33.809, i32 0, i32 0), i8* %arraydecay188)
  br label %do.body194

do.body194:                                       ; preds = %if.then185, %if.else180, %if.then177
  %reg_mem195 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %59 = load i8*, i8** %reg_mem195, align 8, !tbaa !171
  %add.ptr196 = getelementptr i8, i8* %59, i64 10240
  call void @writel.765(i32 1, i8* %add.ptr196)
  %reg_mem197 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %60 = load i8*, i8** %reg_mem197, align 8, !tbaa !171
  %add.ptr198 = getelementptr i8, i8* %60, i64 10240
  %call199 = call i32 @readl.760(i8* %add.ptr198)
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @set_bit.810(i64 12, i64* %i_flags)
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  call void @atomic_set.799(%struct.atomic_t* %next_dma_frame, i32 0)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.807(i64 %size, i32 %flags) #4 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.817(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @pci_map_single.808(%struct.pci_dev* %hwdev, i8* %ptr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  %call = call i64 @dma_map_single_attrs.811(%struct.device* %cond, i8* %ptr, i64 %size, i32 %direction, i64 0)
  ret i64 %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit.810(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !918
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @dma_map_single_attrs.811(%struct.device* %dev, i8* %ptr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.812(%struct.device* %dev)
  %conv = trunc i64 %size to i32
  call void @kmemcheck_mark_initialized.813()
  %call1 = call i32 @valid_dma_direction.814(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv4 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv4, i64 0)
  %tobool5 = icmp ne i64 %expval, 0
  br i1 %tobool5, label %do.body6, label %do.end11

do.body6:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 209, i64 12) #8, !srcloc !919
  br label %do.body7

do.body7:                                         ; preds = %do.body7, %do.body6
  br label %do.body7

do.end11:                                         ; preds = %entry
  %map_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 4
  %0 = load i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)** %map_page, align 8, !tbaa !714
  %1 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %2 = inttoptr i64 %1 to %struct.page*
  %3 = ptrtoint i8* %ptr to i64
  %call12 = call i64 @__phys_addr(i64 %3)
  %shr = lshr i64 %call12, 12
  %add.ptr = getelementptr inbounds %struct.page, %struct.page* %2, i64 %shr
  %4 = ptrtoint i8* %ptr to i64
  %and = and i64 %4, 4095
  %call13 = call i64 %0(%struct.device* %dev, %struct.page* %add.ptr, i64 %and, i64 %size, i32 %dir, i64 %attrs)
  %5 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %6 = inttoptr i64 %5 to %struct.page*
  %7 = ptrtoint i8* %ptr to i64
  %call14 = call i64 @__phys_addr(i64 %7)
  %shr15 = lshr i64 %call14, 12
  %add.ptr16 = getelementptr inbounds %struct.page, %struct.page* %6, i64 %shr15
  %8 = ptrtoint i8* %ptr to i64
  %and17 = and i64 %8, 4095
  call void @debug_dma_map_page(%struct.device* %dev, %struct.page* %add.ptr16, i64 %and17, i64 %size, i32 %dir, i64 %call13, i1 zeroext true)
  ret i64 %call13
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_dma_ops.812(%struct.device* %dev) #4 {
entry:
  %magicptr = ptrtoint %struct.device* %dev to i64
  %cond1 = icmp eq i64 %magicptr, 0
  br i1 %cond1, label %cond.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %dma_ops = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops, align 8, !tbaa !338
  %tobool1 = icmp ne %struct.dma_map_ops* %0, null
  br i1 %tobool1, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %dma_ops2 = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 17
  %1 = load %struct.dma_map_ops*, %struct.dma_map_ops** %dma_ops2, align 8, !tbaa !338
  br label %return

if.end:                                           ; preds = %land.lhs.true
  %tobool3 = icmp ne %struct.device* %dev, null
  br i1 %tobool3, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %bus = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 6
  %2 = load %struct.bus_type*, %struct.bus_type** %bus, align 8, !tbaa !339
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end, %entry
  %cond = phi %struct.bus_type* [ %2, %cond.true ], [ null, %entry ], [ null, %if.end ]
  %call = call %struct.dma_map_ops* @get_arch_dma_ops.816()
  br label %return

return:                                           ; preds = %cond.end, %if.then
  %retval.0 = phi %struct.dma_map_ops* [ %1, %if.then ], [ %call, %cond.end ]
  ret %struct.dma_map_ops* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @kmemcheck_mark_initialized.813() #4 {
entry:
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @valid_dma_direction.814(i32 %dma_direction) #4 {
entry:
  %switch = icmp ult i32 %dma_direction, 3
  %. = select i1 %switch, i1 true, i1 false
  %lor.ext = zext i1 %. to i32
  ret i32 %lor.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.dma_map_ops* @get_arch_dma_ops.816() #4 {
entry:
  %0 = load %struct.dma_map_ops*, %struct.dma_map_ops** @dma_ops, align 8, !tbaa !86
  ret %struct.dma_map_ops* %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.817(i64 %size, i32 %flags) #1 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.818(i8* %p, i8* %res, i32 %size) #1 {
entry:
  %Pivot10 = icmp slt i32 %size, 4
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %size, 8
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %size, 8
  br i1 %SwitchLeaf6, label %sw.bb3, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %size, 4
  br i1 %SwitchLeaf4, label %sw.bb2, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %size, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %size, 2
  br i1 %SwitchLeaf2, label %sw.bb1, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %size, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %0 = load volatile i8, i8* %p, align 1, !tbaa !142
  store i8 %0, i8* %res, align 1, !tbaa !142
  br label %sw.epilog

sw.bb1:                                           ; preds = %LeafBlock1
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !151
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !151
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock3
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !120
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !120
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock5
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !149
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !149
  br label %sw.epilog

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !920
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !921
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_yuv_udma_stream_frame(%struct.ivtv.1060* %itv, i8* %src) #0 {
entry:
  %dma_args = alloca %struct.ivtv_dma_frame, align 8
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = bitcast %struct.ivtv_dma_frame* %dma_args to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* %0) #8
  call void @ivtv_yuv_setup_stream_frame(%struct.ivtv.1060* %itv)
  %y_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 2
  store i8* %src, i8** %y_source, align 8, !tbaa !617
  %v4l2_src_h = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 68
  %1 = load i32, i32* %v4l2_src_h, align 4, !tbaa !551
  %add = add i32 %1, 31
  %and = and i32 %add, -32
  %mul = mul i32 720, %and
  %idx.ext = zext i32 %mul to i64
  %add.ptr = getelementptr i8, i8* %src, i64 %idx.ext
  %uv_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %dma_args, i32 0, i32 3
  store i8* %add.ptr, i8** %uv_source, align 8, !tbaa !900
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %call = call i32 @ivtv_yuv_udma_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %dma_args)
  %serialize_lock1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock1, i32 0)
  %2 = bitcast %struct.ivtv_dma_frame* %dma_args to i8*
  call void @llvm.lifetime.end.p0i8(i64 64, i8* %2) #8
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_yuv_udma_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %args) #0 {
entry:
  %wait = alloca %struct.__wait_queue, align 8
  %0 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %flags = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 0
  store i32 0, i32* %flags, align 8, !tbaa !181
  %private = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 1
  %call = call %struct.task_struct* @get_current.821()
  %1 = bitcast %struct.task_struct* %call to i8*
  store i8* %1, i8** %private, align 8, !tbaa !183
  %func = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @autoremove_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %func, align 8, !tbaa !184
  %task_list = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 0
  %task_list1 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list1, %struct.list_head** %next, align 8, !tbaa !185
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %task_list, i32 0, i32 1
  %task_list2 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %wait, i32 0, i32 3
  store %struct.list_head* %task_list2, %struct.list_head** %prev, align 8, !tbaa !186
  %udma = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %lock = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 0
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %udma3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %call4 = call i32 @ivtv_yuv_prep_user_dma(%struct.ivtv.1060* %itv, %struct.ivtv_user_dma* %udma3, %struct.ivtv_dma_frame* %args)
  %cmp = icmp ne i32 %call4, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %udma5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %lock6 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma5, i32 0, i32 0
  call void @mutex_unlock(%struct.mutex* %lock6)
  br label %cleanup

if.end:                                           ; preds = %entry
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_prepare to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  %dma_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 62
  call void @prepare_to_wait(%struct.__wait_queue_head* %dma_waitq, %struct.__wait_queue* %wait, i32 1)
  br label %while.cond

while.cond:                                       ; preds = %if.end17, %if.end
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call7 = call zeroext i1 @constant_test_bit.822(i64 2, i64* %i_flags)
  br i1 %call7, label %while.body, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond
  %i_flags10 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call11 = call zeroext i1 @constant_test_bit.822(i64 1, i64* %i_flags10)
  br i1 %call11, label %while.body, label %while.end

while.body:                                       ; preds = %lor.rhs, %while.cond
  %call12 = call %struct.task_struct* @get_current.821()
  %call13 = call i32 @signal_pending.823(%struct.task_struct* %call12)
  %tobool = icmp ne i32 %call13, 0
  br i1 %tobool, label %land.lhs.true, label %if.end17

land.lhs.true:                                    ; preds = %while.body
  %i_flags14 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  %call15 = call zeroext i1 @test_and_clear_bit.824(i64 2, i64* %i_flags14)
  br i1 %call15, label %while.end, label %if.end17

if.end17:                                         ; preds = %land.lhs.true, %while.body
  call void @schedule()
  br label %while.cond

while.end:                                        ; preds = %land.lhs.true, %lor.rhs
  %got_sig.1 = phi i32 [ %call13, %land.lhs.true ], [ 0, %lor.rhs ]
  %dma_waitq18 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 62
  call void @finish_wait(%struct.__wait_queue_head* %dma_waitq18, %struct.__wait_queue* %wait)
  call void bitcast (void (%struct.ivtv*)* @ivtv_udma_unmap to void (%struct.ivtv.1060*)*)(%struct.ivtv.1060* %itv)
  %tobool19 = icmp ne i32 %got_sig.1, 0
  br i1 %tobool19, label %do.body, label %if.end27

do.body:                                          ; preds = %while.end
  %2 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 2, %2
  %tobool21 = icmp ne i32 %and, 0
  br i1 %tobool21, label %if.then22, label %do.end

if.then22:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.36.825, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then22, %do.body
  %udma25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %lock26 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma25, i32 0, i32 0
  call void @mutex_unlock(%struct.mutex* %lock26)
  br label %cleanup

if.end27:                                         ; preds = %while.end
  call void @ivtv_yuv_frame_complete(%struct.ivtv.1060* %itv)
  %udma28 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %lock29 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma28, i32 0, i32 0
  call void @mutex_unlock(%struct.mutex* %lock29)
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %do.end, %if.then
  %retval.0 = phi i32 [ %call4, %if.then ], [ -4, %do.end ], [ %call4, %if.end27 ]
  %3 = bitcast %struct.__wait_queue* %wait to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %3) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current.821() #1 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #5, !srcloc !922
  ret %struct.task_struct* %0
}

; Function Attrs: nounwind uwtable
define internal i32 @ivtv_yuv_prep_user_dma(%struct.ivtv.1060* %itv, %struct.ivtv_user_dma* %dma, %struct.ivtv_dma_frame* %args) #0 {
entry:
  %y_dma = alloca %struct.ivtv_dma_page_info, align 8
  %uv_dma = alloca %struct.ivtv_dma_page_info, align 8
  %0 = bitcast %struct.ivtv_dma_page_info* %y_dma to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %1 = bitcast %struct.ivtv_dma_page_info* %uv_dma to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %1) #8
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %draw_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 64
  %2 = load i8, i8* %draw_frame, align 4, !tbaa !635
  %new_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 58
  %idxprom = zext i8 %2 to i64
  %arrayidx = getelementptr inbounds [8 x %struct.yuv_frame_info], [8 x %struct.yuv_frame_info]* %new_frame_info, i64 0, i64 %idxprom
  %idxprom1 = zext i8 %2 to i64
  %arrayidx2 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom1
  %3 = load i32, i32* %arrayidx2, align 4, !tbaa !120
  %add = add i32 16777216, %3
  %conv = zext i32 %add to i64
  %add3 = add i64 %conv, 414720
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %src_h, align 4, !tbaa !636
  %src_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 2
  %5 = load i32, i32* %src_y, align 4, !tbaa !845
  %add4 = add i32 %4, %5
  %offset_y = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 18
  %6 = load i32, i32* %offset_y, align 4, !tbaa !638
  %tobool = icmp ne i32 %6, 0
  %add5 = add i64 %conv, 11520
  %add5.conv = select i1 %tobool, i64 %add5, i64 %conv
  %and = and i32 %add4, 15
  %tobool6 = icmp ne i32 %and, 0
  %add8 = add nsw i32 %add4, 16
  %and9 = and i32 %add8, -16
  %y_decode_height.0 = select i1 %tobool6, i32 %and9, i32 %add4
  %and11 = and i32 %add4, 31
  %tobool12 = icmp ne i32 %and11, 0
  %add14 = add nsw i32 %add4, 32
  %and15 = and i32 %add14, -32
  %uv_decode_height.0 = select i1 %tobool12, i32 %and15, i32 %add4
  %mul = mul nsw i32 720, %y_decode_height.0
  %SG_length = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %7 = load i32, i32* %SG_length, align 8, !tbaa !782
  %tobool17 = icmp ne i32 %7, 0
  br i1 %tobool17, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %page_count = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  %8 = load i32, i32* %page_count, align 8, !tbaa !788
  %tobool18 = icmp ne i32 %8, 0
  br i1 %tobool18, label %do.body, label %if.end26

do.body:                                          ; preds = %lor.lhs.false, %entry
  %9 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and20 = and i32 1, %9
  %tobool21 = icmp ne i32 %and20, 0
  br i1 %tobool21, label %if.then22, label %cleanup

if.then22:                                        ; preds = %do.body
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %SG_length23 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %10 = load i32, i32* %SG_length23, align 8, !tbaa !782
  %page_count24 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  %11 = load i32, i32* %page_count24, align 8, !tbaa !788
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.37.830, i32 0, i32 0), i8* %arraydecay, i32 %10, i32 %11)
  br label %cleanup

if.end26:                                         ; preds = %lor.lhs.false
  %y_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 2
  %12 = load i8*, i8** %y_source, align 8, !tbaa !617
  %13 = ptrtoint i8* %12 to i64
  %mul27 = mul nsw i32 720, %y_decode_height.0
  %conv28 = sext i32 %mul27 to i64
  call void @ivtv_udma_get_page_info(%struct.ivtv_dma_page_info* %y_dma, i64 %13, i64 %conv28)
  %uv_source = getelementptr inbounds %struct.ivtv_dma_frame, %struct.ivtv_dma_frame* %args, i32 0, i32 3
  %14 = load i8*, i8** %uv_source, align 8, !tbaa !900
  %15 = ptrtoint i8* %14 to i64
  %mul29 = mul nsw i32 360, %uv_decode_height.0
  %conv30 = sext i32 %mul29 to i64
  call void @ivtv_udma_get_page_info(%struct.ivtv_dma_page_info* %uv_dma, i64 %15, i64 %conv30)
  %uaddr = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 0
  %16 = load i64, i64* %uaddr, align 8, !tbaa !748
  %page_count31 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 5
  %17 = load i32, i32* %page_count31, align 8, !tbaa !754
  %conv32 = sext i32 %17 to i64
  %map = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %arrayidx33 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map, i64 0, i64 0
  %call34 = call i64 @get_user_pages_unlocked(i64 %16, i64 %conv32, %struct.page** %arrayidx33, i32 16)
  %conv35 = trunc i64 %call34 to i32
  %page_count36 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 5
  %18 = load i32, i32* %page_count36, align 8, !tbaa !754
  %cmp = icmp eq i32 %conv35, %18
  br i1 %cmp, label %if.then38, label %if.end47

if.then38:                                        ; preds = %if.end26
  %uaddr39 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %uv_dma, i32 0, i32 0
  %19 = load i64, i64* %uaddr39, align 8, !tbaa !748
  %page_count40 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %uv_dma, i32 0, i32 5
  %20 = load i32, i32* %page_count40, align 8, !tbaa !754
  %conv41 = sext i32 %20 to i64
  %map42 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom43 = sext i32 %conv35 to i64
  %arrayidx44 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map42, i64 0, i64 %idxprom43
  %call45 = call i64 @get_user_pages_unlocked(i64 %19, i64 %conv41, %struct.page** %arrayidx44, i32 16)
  %conv46 = trunc i64 %call45 to i32
  br label %if.end47

if.end47:                                         ; preds = %if.then38, %if.end26
  %uv_pages.0 = phi i32 [ %conv46, %if.then38 ], [ 0, %if.end26 ]
  %page_count48 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 5
  %21 = load i32, i32* %page_count48, align 8, !tbaa !754
  %cmp49 = icmp ne i32 %conv35, %21
  br i1 %cmp49, label %if.then55, label %lor.lhs.false51

lor.lhs.false51:                                  ; preds = %if.end47
  %page_count52 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %uv_dma, i32 0, i32 5
  %22 = load i32, i32* %page_count52, align 8, !tbaa !754
  %cmp53 = icmp ne i32 %uv_pages.0, %22
  br i1 %cmp53, label %if.then55, label %if.end111

if.then55:                                        ; preds = %lor.lhs.false51, %if.end47
  %page_count56 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 5
  %23 = load i32, i32* %page_count56, align 8, !tbaa !754
  %cmp57 = icmp eq i32 %conv35, %23
  %24 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and61 = and i32 1, %24
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %cmp57, label %do.body60, label %do.body83

do.body60:                                        ; preds = %if.then55
  br i1 %tobool62, label %if.then63, label %do.end71

if.then63:                                        ; preds = %do.body60
  %v4l2_dev64 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name65 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev64, i32 0, i32 4
  %arraydecay66 = getelementptr inbounds [36 x i8], [36 x i8]* %name65, i32 0, i32 0
  %page_count67 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %uv_dma, i32 0, i32 5
  %25 = load i32, i32* %page_count67, align 8, !tbaa !754
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.38.831, i32 0, i32 0), i8* %arraydecay66, i32 %uv_pages.0, i32 %25)
  br label %do.end71

do.end71:                                         ; preds = %if.then63, %do.body60
  %cmp72 = icmp sge i32 %uv_pages.0, 0
  br i1 %cmp72, label %if.then74, label %if.end95

if.then74:                                        ; preds = %do.end71
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.then74
  %i.0 = phi i32 [ 0, %if.then74 ], [ %inc, %for.body ]
  %cmp75 = icmp slt i32 %i.0, %uv_pages.0
  br i1 %cmp75, label %for.body, label %if.end95

for.body:                                         ; preds = %for.cond
  %map77 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %add78 = add nsw i32 %conv35, %i.0
  %idxprom79 = sext i32 %add78 to i64
  %arrayidx80 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map77, i64 0, i64 %idxprom79
  %26 = load %struct.page*, %struct.page** %arrayidx80, align 8, !tbaa !86
  call void @put_page.832(%struct.page* %26)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

do.body83:                                        ; preds = %if.then55
  br i1 %tobool62, label %if.then86, label %if.end95

if.then86:                                        ; preds = %do.body83
  %v4l2_dev87 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name88 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev87, i32 0, i32 4
  %arraydecay89 = getelementptr inbounds [36 x i8], [36 x i8]* %name88, i32 0, i32 0
  %page_count90 = getelementptr inbounds %struct.ivtv_dma_page_info, %struct.ivtv_dma_page_info* %y_dma, i32 0, i32 5
  %27 = load i32, i32* %page_count90, align 8, !tbaa !754
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.39.833, i32 0, i32 0), i8* %arraydecay89, i32 %conv35, i32 %27)
  br label %if.end95

if.end95:                                         ; preds = %if.then86, %do.body83, %for.cond, %do.end71
  %rc.1 = phi i32 [ -14, %for.cond ], [ %uv_pages.0, %do.end71 ], [ -14, %if.then86 ], [ -14, %do.body83 ]
  %cmp96 = icmp sge i32 %conv35, 0
  br i1 %cmp96, label %if.then98, label %cleanup

if.then98:                                        ; preds = %if.end95
  br label %for.cond99

for.cond99:                                       ; preds = %for.body102, %if.then98
  %i.1 = phi i32 [ 0, %if.then98 ], [ %inc107, %for.body102 ]
  %cmp100 = icmp slt i32 %i.1, %conv35
  br i1 %cmp100, label %for.body102, label %cleanup

for.body102:                                      ; preds = %for.cond99
  %map103 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom104 = sext i32 %i.1 to i64
  %arrayidx105 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map103, i64 0, i64 %idxprom104
  %28 = load %struct.page*, %struct.page** %arrayidx105, align 8, !tbaa !86
  call void @put_page.832(%struct.page* %28)
  %inc107 = add nsw i32 %i.1, 1
  br label %for.cond99

if.end111:                                        ; preds = %lor.lhs.false51
  %add112 = add nsw i32 %conv35, %uv_pages.0
  %page_count113 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  store i32 %add112, i32* %page_count113, align 8, !tbaa !788
  %call114 = call i32 @ivtv_udma_fill_sg_list(%struct.ivtv_user_dma* %dma, %struct.ivtv_dma_page_info* %y_dma, i32 0)
  %call115 = call i32 @ivtv_udma_fill_sg_list(%struct.ivtv_user_dma* %dma, %struct.ivtv_dma_page_info* %uv_dma, i32 %call114)
  %cmp116 = icmp slt i32 %call115, 0
  br i1 %cmp116, label %do.body119, label %if.end142

do.body119:                                       ; preds = %if.end111
  %29 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and120 = and i32 1, %29
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then122, label %do.end129

if.then122:                                       ; preds = %do.body119
  %v4l2_dev123 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name124 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev123, i32 0, i32 4
  %arraydecay125 = getelementptr inbounds [36 x i8], [36 x i8]* %name124, i32 0, i32 0
  %call126 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.40.834, i32 0, i32 0), i8* %arraydecay125)
  br label %do.end129

do.end129:                                        ; preds = %if.then122, %do.body119
  br label %for.cond130

for.cond130:                                      ; preds = %for.body134, %do.end129
  %i.2 = phi i32 [ 0, %do.end129 ], [ %inc139, %for.body134 ]
  %page_count131 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  %30 = load i32, i32* %page_count131, align 8, !tbaa !788
  %cmp132 = icmp slt i32 %i.2, %30
  br i1 %cmp132, label %for.body134, label %for.end140

for.body134:                                      ; preds = %for.cond130
  %map135 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 2
  %idxprom136 = sext i32 %i.2 to i64
  %arrayidx137 = getelementptr inbounds [704 x %struct.page*], [704 x %struct.page*]* %map135, i64 0, i64 %idxprom136
  %31 = load %struct.page*, %struct.page** %arrayidx137, align 8, !tbaa !86
  call void @put_page.832(%struct.page* %31)
  %inc139 = add nsw i32 %i.2, 1
  br label %for.cond130

for.end140:                                       ; preds = %for.cond130
  %page_count141 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  store i32 0, i32* %page_count141, align 8, !tbaa !788
  br label %cleanup

if.end142:                                        ; preds = %if.end111
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %32 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %SGlist = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 7
  %arraydecay143 = getelementptr inbounds [704 x %struct.scatterlist], [704 x %struct.scatterlist]* %SGlist, i32 0, i32 0
  %page_count144 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 1
  %33 = load i32, i32* %page_count144, align 8, !tbaa !788
  %call145 = call i32 @pci_map_sg.835(%struct.pci_dev* %32, %struct.scatterlist* %arraydecay143, i32 %33, i32 1)
  %SG_length146 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  store i32 %call145, i32* %SG_length146, align 8, !tbaa !782
  %conv147 = trunc i64 %add5.conv to i32
  %conv148 = trunc i64 %add3 to i32
  call void @ivtv_udma_fill_sg_array(%struct.ivtv_user_dma* %dma, i32 %conv147, i32 %conv148, i32 %mul)
  %offset_y149 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %arrayidx, i32 0, i32 18
  %34 = load i32, i32* %offset_y149, align 4, !tbaa !638
  %tobool150 = icmp ne i32 %34, 0
  br i1 %tobool150, label %land.lhs.true, label %if.end171

land.lhs.true:                                    ; preds = %if.end142
  %blanking_dmaptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  %35 = load i64, i64* %blanking_dmaptr, align 8, !tbaa !639
  %tobool151 = icmp ne i64 %35, 0
  br i1 %tobool151, label %if.then152, label %if.end171

if.then152:                                       ; preds = %land.lhs.true
  %SGarray = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %SG_length153 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %36 = load i32, i32* %SG_length153, align 8, !tbaa !782
  %idxprom154 = sext i32 %36 to i64
  %arrayidx155 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray, i64 0, i64 %idxprom154
  %size = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx155, i32 0, i32 2
  store i32 11520, i32* %size, align 4, !tbaa !653
  %blanking_dmaptr156 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  %37 = load i64, i64* %blanking_dmaptr156, align 8, !tbaa !639
  %conv157 = trunc i64 %37 to i32
  %SGarray158 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %SG_length159 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %38 = load i32, i32* %SG_length159, align 8, !tbaa !782
  %idxprom160 = sext i32 %38 to i64
  %arrayidx161 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray158, i64 0, i64 %idxprom160
  %src = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx161, i32 0, i32 0
  store i32 %conv157, i32* %src, align 4, !tbaa !650
  %idxprom162 = zext i8 %2 to i64
  %arrayidx163 = getelementptr inbounds [8 x i32], [8 x i32]* @yuv_offset, i64 0, i64 %idxprom162
  %39 = load i32, i32* %arrayidx163, align 4, !tbaa !120
  %add164 = add i32 16777216, %39
  %SGarray165 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %SG_length166 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %40 = load i32, i32* %SG_length166, align 8, !tbaa !782
  %idxprom167 = sext i32 %40 to i64
  %arrayidx168 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray165, i64 0, i64 %idxprom167
  %dst = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx168, i32 0, i32 1
  store i32 %add164, i32* %dst, align 4, !tbaa !652
  %SG_length169 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %41 = load i32, i32* %SG_length169, align 8, !tbaa !782
  %inc170 = add nsw i32 %41, 1
  store i32 %inc170, i32* %SG_length169, align 8, !tbaa !782
  br label %if.end171

if.end171:                                        ; preds = %if.then152, %land.lhs.true, %if.end142
  %SGarray172 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 4
  %SG_length173 = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %dma, i32 0, i32 6
  %42 = load i32, i32* %SG_length173, align 8, !tbaa !782
  %sub = sub nsw i32 %42, 1
  %idxprom174 = sext i32 %sub to i64
  %arrayidx175 = getelementptr inbounds [704 x %struct.exception_table_entry], [704 x %struct.exception_table_entry]* %SGarray172, i64 0, i64 %idxprom174
  %size176 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %arrayidx175, i32 0, i32 2
  %43 = load i32, i32* %size176, align 4, !tbaa !653
  %or = or i32 %43, -2147483648
  store i32 %or, i32* %size176, align 4, !tbaa !653
  call void @ivtv_udma_sync_for_device.836(%struct.ivtv.1060* %itv)
  br label %cleanup

cleanup:                                          ; preds = %if.end171, %for.end140, %for.cond99, %if.end95, %if.then22, %do.body
  %retval.0 = phi i32 [ -12, %for.end140 ], [ 0, %if.end171 ], [ -16, %if.then22 ], [ -16, %do.body ], [ %rc.1, %for.cond99 ], [ %conv35, %if.end95 ]
  %44 = bitcast %struct.ivtv_dma_page_info* %uv_dma to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %44) #8
  %45 = bitcast %struct.ivtv_dma_page_info* %y_dma to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %45) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit.822(i64 %nr, i64* %addr) #1 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !88
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @signal_pending.823(%struct.task_struct* %p) #4 {
entry:
  %call = call i32 @test_tsk_thread_flag.826(%struct.task_struct* %p, i32 2)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %conv2 = trunc i64 %expval to i32
  ret i32 %conv2
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_clear_bit.824(i64 %nr, i64* %addr) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !923
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_tsk_thread_flag.826(%struct.task_struct* %tsk, i32 %flag) #4 {
entry:
  %call = call %union.anon.3* @task_thread_info.827(%struct.task_struct* %tsk)
  %call1 = call i32 @test_ti_thread_flag.828(%union.anon.3* %call, i32 %flag)
  ret i32 %call1
}

; Function Attrs: inlinehint nounwind uwtable
define internal %union.anon.3* @task_thread_info.827(%struct.task_struct* %task) #4 {
entry:
  %thread_info = getelementptr inbounds %struct.task_struct, %struct.task_struct* %task, i32 0, i32 0
  ret %union.anon.3* %thread_info
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_ti_thread_flag.828(%union.anon.3* %ti, i32 %flag) #4 {
entry:
  %conv = sext i32 %flag to i64
  %flags = getelementptr inbounds %union.anon.3, %union.anon.3* %ti, i32 0, i32 0
  %call = call zeroext i1 @variable_test_bit.829(i64 %conv, i64* %flags)
  %conv1 = zext i1 %call to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @variable_test_bit.829(i64 %nr, i64* %addr) #1 {
entry:
  %oldbit = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %oldbit) #8
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %oldbit, i64* %addr, i64 %nr) #8, !srcloc !924
  %0 = load i8, i8* %oldbit, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %oldbit) #8
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_page.832(%struct.page* %page) #4 {
entry:
  %call = call %struct.page* @compound_head.844(%struct.page* %page)
  %call1 = call i32 @put_page_testzero.845(%struct.page* %call)
  %tobool = icmp ne i32 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__put_page(%struct.page* %call)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call zeroext i1 @is_zone_device_page.846(%struct.page* %call)
  %lnot = xor i1 %call2, true
  %lnot3 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %if.then5, label %if.end6

if.then5:                                         ; preds = %if.end
  call void @put_zone_device_page(%struct.page* %call)
  br label %if.end6

if.end6:                                          ; preds = %if.then5, %if.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @pci_map_sg.835(%struct.pci_dev* %hwdev, %struct.scatterlist* %sg, i32 %nents, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  %call = call i32 @dma_map_sg_attrs.839(%struct.device* %cond, %struct.scatterlist* %sg, i32 %nents, i32 %direction, i64 0)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ivtv_udma_sync_for_device.836(%struct.ivtv.1060* %itv) #4 {
entry:
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %0 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %udma = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 59
  %SG_handle = getelementptr inbounds %struct.ivtv_user_dma, %struct.ivtv_user_dma* %udma, i32 0, i32 5
  %1 = load i64, i64* %SG_handle, align 8, !tbaa !785
  call void @pci_dma_sync_single_for_device.837(%struct.pci_dev* %0, i64 %1, i64 8448, i32 1)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_dma_sync_single_for_device.837(%struct.pci_dev* %hwdev, i64 %dma_handle, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_sync_single_for_device.838(%struct.device* %cond, i64 %dma_handle, i64 %size, i32 %direction)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_sync_single_for_device.838(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.812(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.814(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 349, i64 12) #8, !srcloc !925
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %sync_single_for_device = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %0 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device, align 8, !tbaa !657
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %sync_single_for_device13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 11
  %1 = load void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)** %sync_single_for_device13, align 8, !tbaa !657
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_sync_single_for_device(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @dma_map_sg_attrs.839(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.812(%struct.device* %dev)
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.body ]
  %s.0 = phi %struct.scatterlist* [ %sg, %entry ], [ %call2, %for.body ]
  %cmp = icmp slt i32 %i.0, %nents
  br i1 %cmp, label %for.body, label %do.body

for.body:                                         ; preds = %for.cond
  call void @sg_virt.840(%struct.scatterlist* %s.0)
  %length = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %s.0, i32 0, i32 3
  %0 = load i32, i32* %length, align 4, !tbaa !764
  call void @kmemcheck_mark_initialized.813()
  %inc = add nsw i32 %i.0, 1
  %call2 = call %struct.scatterlist* @sg_next(%struct.scatterlist* %s.0)
  br label %for.cond

do.body:                                          ; preds = %for.cond
  %call3 = call i32 @valid_dma_direction.814(i32 %dir)
  %tobool = icmp ne i32 %call3, 0
  %lnot = xor i1 %tobool, true
  %lnot4 = xor i1 %lnot, true
  %lnot5 = xor i1 %lnot4, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool6 = icmp ne i64 %expval, 0
  br i1 %tobool6, label %do.body7, label %do.end12

do.body7:                                         ; preds = %do.body
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 246, i64 12) #8, !srcloc !926
  br label %do.body8

do.body8:                                         ; preds = %do.body8, %do.body7
  br label %do.body8

do.end12:                                         ; preds = %do.body
  %map_sg = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 6
  %1 = load i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)** %map_sg, align 8, !tbaa !791
  %call13 = call i32 %1(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %dir, i64 %attrs)
  %cmp15 = icmp slt i32 %call13, 0
  %lnot17 = xor i1 %cmp15, true
  %lnot19 = xor i1 %lnot17, true
  %lnot.ext20 = zext i1 %lnot19 to i32
  %conv21 = sext i32 %lnot.ext20 to i64
  %expval22 = call i64 @llvm.expect.i64(i64 %conv21, i64 0)
  %tobool23 = icmp ne i64 %expval22, 0
  br i1 %tobool23, label %do.body25, label %do.end33

do.body25:                                        ; preds = %do.end12
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 248, i64 12) #8, !srcloc !927
  br label %do.body26

do.body26:                                        ; preds = %do.body26, %do.body25
  br label %do.body26

do.end33:                                         ; preds = %do.end12
  call void @debug_dma_map_sg(%struct.device* %dev, %struct.scatterlist* %sg, i32 %nents, i32 %call13, i32 %dir)
  ret i32 %call13
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @sg_virt.840(%struct.scatterlist* %sg) #4 {
entry:
  %call = call %struct.page* @sg_page.841(%struct.scatterlist* %sg)
  %call1 = call i8* @lowmem_page_address.842(%struct.page* %call)
  %offset = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 2
  %0 = load i32, i32* %offset, align 8, !tbaa !762
  %idx.ext = zext i32 %0 to i64
  %add.ptr = getelementptr i8, i8* %call1, i64 %idx.ext
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.page* @sg_page.841(%struct.scatterlist* %sg) #4 {
entry:
  %sg_magic = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 0
  %0 = load i64, i64* %sg_magic, align 8, !tbaa !767
  %cmp = icmp ne i64 %0, 2271560481
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %do.body2, label %do.body8

do.body2:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 123, i64 12) #8, !srcloc !928
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %do.body2
  br label %do.body3

do.body8:                                         ; preds = %entry
  %page_link = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %1 = load i64, i64* %page_link, align 8, !tbaa !765
  %and = and i64 %1, 1
  %tobool9 = icmp ne i64 %and, 0
  %lnot10 = xor i1 %tobool9, true
  %lnot12 = xor i1 %lnot10, true
  %lnot.ext13 = zext i1 %lnot12 to i32
  %conv14 = sext i32 %lnot.ext13 to i64
  %expval15 = call i64 @llvm.expect.i64(i64 %conv14, i64 0)
  %tobool16 = icmp ne i64 %expval15, 0
  br i1 %tobool16, label %do.body18, label %do.end26

do.body18:                                        ; preds = %do.body8
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.43.843, i32 0, i32 0), i32 124, i64 12) #8, !srcloc !929
  br label %do.body19

do.body19:                                        ; preds = %do.body19, %do.body18
  br label %do.body19

do.end26:                                         ; preds = %do.body8
  %page_link27 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %sg, i32 0, i32 1
  %2 = load i64, i64* %page_link27, align 8, !tbaa !765
  %and28 = and i64 %2, -4
  %3 = inttoptr i64 %and28 to %struct.page*
  ret %struct.page* %3
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @lowmem_page_address.842(%struct.page* %page) #1 {
entry:
  %0 = load i64, i64* @vmemmap_base, align 8, !tbaa !88
  %1 = inttoptr i64 %0 to %struct.page*
  %sub.ptr.lhs.cast = ptrtoint %struct.page* %page to i64
  %sub.ptr.rhs.cast = ptrtoint %struct.page* %1 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 64
  %shl = shl i64 %sub.ptr.div, 12
  %2 = load i64, i64* @page_offset_base, align 8, !tbaa !88
  %add = add i64 %shl, %2
  %3 = inttoptr i64 %add to i8*
  ret i8* %3
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.page* @compound_head.844(%struct.page* %page) #4 {
entry:
  %__u = alloca %union.anon.3, align 8
  %0 = bitcast %union.anon.3* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 4
  %2 = bitcast %union.anon.0* %1 to %struct.arch_uprobe_task*
  %compound_head = getelementptr inbounds %struct.arch_uprobe_task, %struct.arch_uprobe_task* %2, i32 0, i32 0
  %3 = bitcast i64* %compound_head to i8*
  %__c = bitcast %union.anon.3* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.818(i8* %3, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.3* %__u to i64*
  %4 = load i64, i64* %__val, align 8, !tbaa !142
  %5 = bitcast %union.anon.3* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %and = and i64 %4, 1
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  %sub = sub i64 %4, 1
  %6 = inttoptr i64 %sub to %struct.page*
  %retval.0 = select i1 %tobool2, %struct.page* %6, %struct.page* %page
  ret %struct.page* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @put_page_testzero.845(%struct.page* %page) #4 {
entry:
  %call = call i32 @page_ref_count.848(%struct.page* %page)
  %cmp = icmp eq i32 %call, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %do.end7

if.then:                                          ; preds = %entry
  call void @dump_page(%struct.page* %page, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41.849, i32 0, i32 0))
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.42.850, i32 0, i32 0), i32 462, i64 12) #8, !srcloc !930
  br label %do.body3

do.body3:                                         ; preds = %do.body3, %if.then
  br label %do.body3

do.end7:                                          ; preds = %entry
  %call8 = call i32 @page_ref_dec_and_test.851(%struct.page* %page)
  ret i32 %call8
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @is_zone_device_page.846(%struct.page* %page) #4 {
entry:
  %call = call i32 @page_zonenum.847(%struct.page* %page)
  %cmp = icmp eq i32 %call, 4
  ret i1 %cmp
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_zonenum.847(%struct.page* %page) #4 {
entry:
  %flags = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 0
  %0 = load i64, i64* %flags, align 16, !tbaa !796
  %shr = lshr i64 %0, 51
  %and = and i64 %shr, 7
  %conv = trunc i64 %and to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_ref_count.848(%struct.page* %page) #4 {
entry:
  %0 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 3
  %1 = bitcast %union.anon.3* %0 to %struct.anon.40*
  %_refcount = getelementptr inbounds %struct.anon.40, %struct.anon.40* %1, i32 0, i32 1
  %call = call i32 @atomic_read.804(%struct.atomic_t* %_refcount)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @page_ref_dec_and_test.851(%struct.page* %page) #4 {
entry:
  %0 = getelementptr inbounds %struct.page, %struct.page* %page, i32 0, i32 3
  %1 = bitcast %union.anon.3* %0 to %struct.anon.40*
  %_refcount = getelementptr inbounds %struct.anon.40, %struct.anon.40* %1, i32 0, i32 1
  %call = call zeroext i1 @atomic_dec_and_test.852(%struct.atomic_t* %_refcount)
  %conv = zext i1 %call to i32
  %call1 = call zeroext i1 @static_key_false.853(%struct.qspinlock* getelementptr inbounds (%struct.tracepoint, %struct.tracepoint* @__tracepoint_page_ref_mod_and_test, i32 0, i32 1))
  br i1 %call1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @__page_ref_mod_and_test(%struct.page* %page, i32 -1, i32 %conv)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 %conv
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @atomic_dec_and_test.852(%struct.atomic_t* %v) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0;\0A\09sete $1\0A", "=*m,=*qm,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i8* %c, i32* %counter) #8, !srcloc !931
  %0 = load i8, i8* %c, align 1, !tbaa !174, !range !175
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @static_key_false.853(%struct.qspinlock* %key) #1 {
entry:
  %call = call i32 @static_key_count.854(%struct.qspinlock* %key)
  %cmp = icmp sgt i32 %call, 0
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  %. = select i1 %tobool, i1 true, i1 false
  ret i1 %.
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @static_key_count.854(%struct.qspinlock* %key) #4 {
entry:
  %enabled = getelementptr inbounds %struct.qspinlock, %struct.qspinlock* %key, i32 0, i32 0
  %call = call i32 @atomic_read.804(%struct.atomic_t* %enabled)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define i32 @ivtv_yuv_prep_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %args) #0 {
entry:
  call void @ivtv_yuv_next_free(%struct.ivtv.1060* %itv)
  call void @ivtv_yuv_setup_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %args)
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %call = call i32 @ivtv_yuv_udma_frame(%struct.ivtv.1060* %itv, %struct.ivtv_dma_frame* %args)
  %serialize_lock1 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock1, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define void @ivtv_yuv_close(%struct.ivtv.1060* %itv) #0 {
entry:
  %yuv_info = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 90
  %0 = load i32, i32* @ivtv_debug, align 4, !tbaa !120
  %and = and i32 256, %0
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %v4l2_dev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 19
  %name = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %v4l2_dev, i32 0, i32 4
  %arraydecay = getelementptr inbounds [36 x i8], [36 x i8]* %name, i32 0, i32 0
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.859, i32 0, i32 0), i8* %arraydecay)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %serialize_lock = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_unlock(%struct.mutex* %serialize_lock)
  %vsync_waitq = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 65
  %call1 = call i32 @ivtv_waitq(%struct.__wait_queue_head* %vsync_waitq)
  %serialize_lock2 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 40
  call void @mutex_lock_nested(%struct.mutex* %serialize_lock2, i32 0)
  %running = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 69
  store i8 0, i8* %running, align 8, !tbaa !666
  %next_dma_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 53
  call void @atomic_set.799(%struct.atomic_t* %next_dma_frame, i32 -1)
  %next_fill_frame = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 54
  call void @atomic_set.799(%struct.atomic_t* %next_fill_frame, i32 0)
  %reg_2898 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 12
  %1 = load i32, i32* %reg_2898, align 8, !tbaa !913
  %or = or i32 %1, 16777216
  %reg_mem = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %2 = load i8*, i8** %reg_mem, align 8, !tbaa !171
  %add.ptr = getelementptr i8, i8* %2, i64 10392
  call void @writel.765(i32 %or, i8* %add.ptr)
  %reg_2834 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %3 = load i32, i32* %reg_2834, align 8, !tbaa !858
  %reg_mem3 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %4 = load i8*, i8** %reg_mem3, align 8, !tbaa !171
  %add.ptr4 = getelementptr i8, i8* %4, i64 10292
  call void @writel.765(i32 %3, i8* %add.ptr4)
  %reg_2838 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 1
  %5 = load i32, i32* %reg_2838, align 4, !tbaa !859
  %reg_mem5 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %6 = load i8*, i8** %reg_mem5, align 8, !tbaa !171
  %add.ptr6 = getelementptr i8, i8* %6, i64 10296
  call void @writel.765(i32 %5, i8* %add.ptr6)
  %reg_283c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 2
  %7 = load i32, i32* %reg_283c, align 8, !tbaa !860
  %reg_mem7 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %8 = load i8*, i8** %reg_mem7, align 8, !tbaa !171
  %add.ptr8 = getelementptr i8, i8* %8, i64 10300
  call void @writel.765(i32 %7, i8* %add.ptr8)
  %reg_2840 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 3
  %9 = load i32, i32* %reg_2840, align 4, !tbaa !862
  %reg_mem9 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %10 = load i8*, i8** %reg_mem9, align 8, !tbaa !171
  %add.ptr10 = getelementptr i8, i8* %10, i64 10304
  call void @writel.765(i32 %9, i8* %add.ptr10)
  %reg_2844 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 4
  %11 = load i32, i32* %reg_2844, align 8, !tbaa !861
  %reg_mem11 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %12 = load i8*, i8** %reg_mem11, align 8, !tbaa !171
  %add.ptr12 = getelementptr i8, i8* %12, i64 10308
  call void @writel.765(i32 %11, i8* %add.ptr12)
  %reg_2848 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 5
  %13 = load i32, i32* %reg_2848, align 4, !tbaa !863
  %reg_mem13 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %14 = load i8*, i8** %reg_mem13, align 8, !tbaa !171
  %add.ptr14 = getelementptr i8, i8* %14, i64 10312
  call void @writel.765(i32 %13, i8* %add.ptr14)
  %reg_2854 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 6
  %15 = load i32, i32* %reg_2854, align 8, !tbaa !864
  %reg_mem15 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %16 = load i8*, i8** %reg_mem15, align 8, !tbaa !171
  %add.ptr16 = getelementptr i8, i8* %16, i64 10324
  call void @writel.765(i32 %15, i8* %add.ptr16)
  %reg_285c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 7
  %17 = load i32, i32* %reg_285c, align 4, !tbaa !865
  %reg_mem17 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %18 = load i8*, i8** %reg_mem17, align 8, !tbaa !171
  %add.ptr18 = getelementptr i8, i8* %18, i64 10332
  call void @writel.765(i32 %17, i8* %add.ptr18)
  %reg_2864 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 8
  %19 = load i32, i32* %reg_2864, align 8, !tbaa !866
  %reg_mem19 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %20 = load i8*, i8** %reg_mem19, align 8, !tbaa !171
  %add.ptr20 = getelementptr i8, i8* %20, i64 10340
  call void @writel.765(i32 %19, i8* %add.ptr20)
  %reg_2870 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 9
  %21 = load i32, i32* %reg_2870, align 4, !tbaa !868
  %reg_mem21 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %22 = load i8*, i8** %reg_mem21, align 8, !tbaa !171
  %add.ptr22 = getelementptr i8, i8* %22, i64 10352
  call void @writel.765(i32 %21, i8* %add.ptr22)
  %reg_2874 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 10
  %23 = load i32, i32* %reg_2874, align 8, !tbaa !867
  %reg_mem23 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %24 = load i8*, i8** %reg_mem23, align 8, !tbaa !171
  %add.ptr24 = getelementptr i8, i8* %24, i64 10356
  call void @writel.765(i32 %23, i8* %add.ptr24)
  %reg_2890 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 11
  %25 = load i32, i32* %reg_2890, align 4, !tbaa !869
  %reg_mem25 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %26 = load i8*, i8** %reg_mem25, align 8, !tbaa !171
  %add.ptr26 = getelementptr i8, i8* %26, i64 10384
  call void @writel.765(i32 %25, i8* %add.ptr26)
  %reg_289c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 13
  %27 = load i32, i32* %reg_289c, align 4, !tbaa !894
  %reg_mem27 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %28 = load i8*, i8** %reg_mem27, align 8, !tbaa !171
  %add.ptr28 = getelementptr i8, i8* %28, i64 10396
  call void @writel.765(i32 %27, i8* %add.ptr28)
  %reg_2918 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %29 = load i32, i32* %reg_2918, align 8, !tbaa !882
  %reg_mem29 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %30 = load i8*, i8** %reg_mem29, align 8, !tbaa !171
  %add.ptr30 = getelementptr i8, i8* %30, i64 10520
  call void @writel.765(i32 %29, i8* %add.ptr30)
  %reg_291c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 15
  %31 = load i32, i32* %reg_291c, align 4, !tbaa !883
  %reg_mem31 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %32 = load i8*, i8** %reg_mem31, align 8, !tbaa !171
  %add.ptr32 = getelementptr i8, i8* %32, i64 10524
  call void @writel.765(i32 %31, i8* %add.ptr32)
  %reg_2920 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 16
  %33 = load i32, i32* %reg_2920, align 8, !tbaa !880
  %reg_mem33 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %34 = load i8*, i8** %reg_mem33, align 8, !tbaa !171
  %add.ptr34 = getelementptr i8, i8* %34, i64 10528
  call void @writel.765(i32 %33, i8* %add.ptr34)
  %reg_2924 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 17
  %35 = load i32, i32* %reg_2924, align 4, !tbaa !881
  %reg_mem35 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %36 = load i8*, i8** %reg_mem35, align 8, !tbaa !171
  %add.ptr36 = getelementptr i8, i8* %36, i64 10532
  call void @writel.765(i32 %35, i8* %add.ptr36)
  %reg_2928 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 18
  %37 = load i32, i32* %reg_2928, align 8, !tbaa !878
  %reg_mem37 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %38 = load i8*, i8** %reg_mem37, align 8, !tbaa !171
  %add.ptr38 = getelementptr i8, i8* %38, i64 10536
  call void @writel.765(i32 %37, i8* %add.ptr38)
  %reg_292c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 19
  %39 = load i32, i32* %reg_292c, align 4, !tbaa !879
  %reg_mem39 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %40 = load i8*, i8** %reg_mem39, align 8, !tbaa !171
  %add.ptr40 = getelementptr i8, i8* %40, i64 10540
  call void @writel.765(i32 %39, i8* %add.ptr40)
  %reg_2930 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 20
  %41 = load i32, i32* %reg_2930, align 8, !tbaa !876
  %reg_mem41 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %42 = load i8*, i8** %reg_mem41, align 8, !tbaa !171
  %add.ptr42 = getelementptr i8, i8* %42, i64 10544
  call void @writel.765(i32 %41, i8* %add.ptr42)
  %reg_2934 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 21
  %43 = load i32, i32* %reg_2934, align 4, !tbaa !872
  %reg_mem43 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %44 = load i8*, i8** %reg_mem43, align 8, !tbaa !171
  %add.ptr44 = getelementptr i8, i8* %44, i64 10548
  call void @writel.765(i32 %43, i8* %add.ptr44)
  %reg_2938 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 22
  %45 = load i32, i32* %reg_2938, align 8, !tbaa !877
  %reg_mem45 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %46 = load i8*, i8** %reg_mem45, align 8, !tbaa !171
  %add.ptr46 = getelementptr i8, i8* %46, i64 10552
  call void @writel.765(i32 %45, i8* %add.ptr46)
  %reg_293c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 23
  %47 = load i32, i32* %reg_293c, align 4, !tbaa !873
  %reg_mem47 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %48 = load i8*, i8** %reg_mem47, align 8, !tbaa !171
  %add.ptr48 = getelementptr i8, i8* %48, i64 10556
  call void @writel.765(i32 %47, i8* %add.ptr48)
  %reg_2940 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 24
  %49 = load i32, i32* %reg_2940, align 8, !tbaa !885
  %reg_mem49 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %50 = load i8*, i8** %reg_mem49, align 8, !tbaa !171
  %add.ptr50 = getelementptr i8, i8* %50, i64 10560
  call void @writel.765(i32 %49, i8* %add.ptr50)
  %reg_2944 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 25
  %51 = load i32, i32* %reg_2944, align 4, !tbaa !874
  %reg_mem51 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %52 = load i8*, i8** %reg_mem51, align 8, !tbaa !171
  %add.ptr52 = getelementptr i8, i8* %52, i64 10564
  call void @writel.765(i32 %51, i8* %add.ptr52)
  %reg_2948 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 26
  %53 = load i32, i32* %reg_2948, align 8, !tbaa !886
  %reg_mem53 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %54 = load i8*, i8** %reg_mem53, align 8, !tbaa !171
  %add.ptr54 = getelementptr i8, i8* %54, i64 10568
  call void @writel.765(i32 %53, i8* %add.ptr54)
  %reg_294c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 27
  %55 = load i32, i32* %reg_294c, align 4, !tbaa !875
  %reg_mem55 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %56 = load i8*, i8** %reg_mem55, align 8, !tbaa !171
  %add.ptr56 = getelementptr i8, i8* %56, i64 10572
  call void @writel.765(i32 %55, i8* %add.ptr56)
  %reg_2950 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 28
  %57 = load i32, i32* %reg_2950, align 8, !tbaa !887
  %reg_mem57 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %58 = load i8*, i8** %reg_mem57, align 8, !tbaa !171
  %add.ptr58 = getelementptr i8, i8* %58, i64 10576
  call void @writel.765(i32 %57, i8* %add.ptr58)
  %reg_2954 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 29
  %59 = load i32, i32* %reg_2954, align 4, !tbaa !888
  %reg_mem59 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %60 = load i8*, i8** %reg_mem59, align 8, !tbaa !171
  %add.ptr60 = getelementptr i8, i8* %60, i64 10580
  call void @writel.765(i32 %59, i8* %add.ptr60)
  %reg_2958 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 30
  %61 = load i32, i32* %reg_2958, align 8, !tbaa !889
  %reg_mem61 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %62 = load i8*, i8** %reg_mem61, align 8, !tbaa !171
  %add.ptr62 = getelementptr i8, i8* %62, i64 10584
  call void @writel.765(i32 %61, i8* %add.ptr62)
  %reg_295c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 31
  %63 = load i32, i32* %reg_295c, align 4, !tbaa !890
  %reg_mem63 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %64 = load i8*, i8** %reg_mem63, align 8, !tbaa !171
  %add.ptr64 = getelementptr i8, i8* %64, i64 10588
  call void @writel.765(i32 %63, i8* %add.ptr64)
  %reg_2960 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 32
  %65 = load i32, i32* %reg_2960, align 8, !tbaa !891
  %reg_mem65 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %66 = load i8*, i8** %reg_mem65, align 8, !tbaa !171
  %add.ptr66 = getelementptr i8, i8* %66, i64 10592
  call void @writel.765(i32 %65, i8* %add.ptr66)
  %reg_2964 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 33
  %67 = load i32, i32* %reg_2964, align 4, !tbaa !892
  %reg_mem67 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %68 = load i8*, i8** %reg_mem67, align 8, !tbaa !171
  %add.ptr68 = getelementptr i8, i8* %68, i64 10596
  call void @writel.765(i32 %67, i8* %add.ptr68)
  %reg_2968 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 34
  %69 = load i32, i32* %reg_2968, align 8, !tbaa !893
  %reg_mem69 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %70 = load i8*, i8** %reg_mem69, align 8, !tbaa !171
  %add.ptr70 = getelementptr i8, i8* %70, i64 10600
  call void @writel.765(i32 %69, i8* %add.ptr70)
  %reg_296c = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 35
  %71 = load i32, i32* %reg_296c, align 4, !tbaa !884
  %reg_mem71 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %72 = load i8*, i8** %reg_mem71, align 8, !tbaa !171
  %add.ptr72 = getelementptr i8, i8* %72, i64 10604
  call void @writel.765(i32 %71, i8* %add.ptr72)
  %reg_2970 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 36
  %73 = load i32, i32* %reg_2970, align 8, !tbaa !914
  %reg_mem73 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %74 = load i8*, i8** %reg_mem73, align 8, !tbaa !171
  %add.ptr74 = getelementptr i8, i8* %74, i64 10608
  call void @writel.765(i32 %73, i8* %add.ptr74)
  %reg_283475 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %75 = load i32, i32* %reg_283475, align 8, !tbaa !858
  %and76 = and i32 %75, 65535
  %reg_283477 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %76 = load i32, i32* %reg_283477, align 8, !tbaa !858
  %shr = lshr i32 %76, 16
  %cmp = icmp eq i32 %and76, %shr
  br i1 %cmp, label %if.end87, label %if.else

if.else:                                          ; preds = %do.end
  %reg_283479 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %77 = load i32, i32* %reg_283479, align 8, !tbaa !858
  %shl = shl i32 %77, 16
  %reg_283480 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 0
  %78 = load i32, i32* %reg_283480, align 8, !tbaa !858
  %shr81 = lshr i32 %78, 16
  %div = udiv i32 %shl, %shr81
  %shr82 = lshr i32 %div, 15
  %shr83 = ashr i32 %shr82, 1
  %and84 = and i32 %shr82, 1
  %add = add nsw i32 %shr83, %and84
  %tobool85 = icmp ne i32 %add, 0
  %lnot = xor i1 %tobool85, true
  %lnot.ext = zext i1 %lnot to i32
  %add86 = add nsw i32 %add, %lnot.ext
  br label %if.end87

if.end87:                                         ; preds = %if.else, %do.end
  %h_filter.0 = phi i32 [ %add86, %if.else ], [ 0, %do.end ]
  %reg_291888 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %79 = load i32, i32* %reg_291888, align 8, !tbaa !882
  %and89 = and i32 %79, 65535
  %reg_291890 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %80 = load i32, i32* %reg_291890, align 8, !tbaa !882
  %shr91 = lshr i32 %80, 16
  %cmp92 = icmp eq i32 %and89, %shr91
  br i1 %cmp92, label %if.end108, label %if.else94

if.else94:                                        ; preds = %if.end87
  %reg_291895 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %81 = load i32, i32* %reg_291895, align 8, !tbaa !882
  %shl96 = shl i32 %81, 16
  %reg_291897 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 14
  %82 = load i32, i32* %reg_291897, align 8, !tbaa !882
  %shr98 = lshr i32 %82, 16
  %div99 = udiv i32 %shl96, %shr98
  %shr100 = lshr i32 %div99, 15
  %shr101 = ashr i32 %shr100, 1
  %and102 = and i32 %shr100, 1
  %add103 = add nsw i32 %shr101, %and102
  %tobool104 = icmp ne i32 %add103, 0
  %lnot105 = xor i1 %tobool104, true
  %lnot.ext106 = zext i1 %lnot105 to i32
  %add107 = add nsw i32 %add103, %lnot.ext106
  br label %if.end108

if.end108:                                        ; preds = %if.else94, %if.end87
  %v_filter_1.0 = phi i32 [ %add107, %if.else94 ], [ 0, %if.end87 ]
  %v_filter_2.0 = phi i32 [ %add107, %if.else94 ], [ 1, %if.end87 ]
  call void @ivtv_yuv_filter(%struct.ivtv.1060* %itv, i32 %h_filter.0, i32 %v_filter_1.0, i32 %v_filter_2.0)
  %reg_mem109 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %83 = load i8*, i8** %reg_mem109, align 8, !tbaa !171
  %add.ptr110 = getelementptr i8, i8* %83, i64 10260
  call void @writel.765(i32 0, i8* %add.ptr110)
  %reg_mem111 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %84 = load i8*, i8** %reg_mem111, align 8, !tbaa !171
  %add.ptr112 = getelementptr i8, i8* %84, i64 10284
  call void @writel.765(i32 0, i8* %add.ptr112)
  %reg_mem113 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %85 = load i8*, i8** %reg_mem113, align 8, !tbaa !171
  %add.ptr114 = getelementptr i8, i8* %85, i64 10500
  call void @writel.765(i32 0, i8* %add.ptr114)
  %reg_mem115 = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 17
  %86 = load i8*, i8** %reg_mem115, align 8, !tbaa !171
  %add.ptr116 = getelementptr i8, i8* %86, i64 10512
  call void @writel.765(i32 0, i8* %add.ptr116)
  %blanking_ptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  %87 = load i8*, i8** %blanking_ptr, align 8, !tbaa !917
  %tobool117 = icmp ne i8* %87, null
  br i1 %tobool117, label %if.then118, label %if.end121

if.then118:                                       ; preds = %if.end108
  %blanking_ptr119 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  %88 = load i8*, i8** %blanking_ptr119, align 8, !tbaa !917
  call void @kfree(i8* %88)
  %blanking_ptr120 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 61
  store i8* null, i8** %blanking_ptr120, align 8, !tbaa !917
  %pdev = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 0
  %89 = load %struct.pci_dev*, %struct.pci_dev** %pdev, align 8, !tbaa !226
  %blanking_dmaptr = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 62
  %90 = load i64, i64* %blanking_dmaptr, align 8, !tbaa !639
  call void @pci_unmap_single.860(%struct.pci_dev* %89, i64 %90, i64 11520, i32 1)
  br label %if.end121

if.end121:                                        ; preds = %if.then118, %if.end108
  %old_frame_info = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 59
  %src_w = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info, i32 0, i32 3
  store i32 0, i32* %src_w, align 4, !tbaa !932
  %old_frame_info122 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 59
  %src_h = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info122, i32 0, i32 4
  store i32 0, i32* %src_h, align 8, !tbaa !933
  %old_frame_info_args = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 60
  %src_w123 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info_args, i32 0, i32 3
  store i32 0, i32* %src_w123, align 4, !tbaa !934
  %old_frame_info_args124 = getelementptr inbounds %struct.yuv_playback_info, %struct.yuv_playback_info* %yuv_info, i32 0, i32 60
  %src_h125 = getelementptr inbounds %struct.yuv_frame_info, %struct.yuv_frame_info* %old_frame_info_args124, i32 0, i32 4
  store i32 0, i32* %src_h125, align 4, !tbaa !935
  %i_flags = getelementptr inbounds %struct.ivtv.1060, %struct.ivtv.1060* %itv, i32 0, i32 26
  call void @clear_bit.861(i64 12, i64* %i_flags)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @pci_unmap_single.860(%struct.pci_dev* %hwdev, i64 %dma_addr, i64 %size, i32 %direction) #4 {
entry:
  %cmp = icmp eq %struct.pci_dev* %hwdev, null
  %dev = getelementptr inbounds %struct.pci_dev, %struct.pci_dev* %hwdev, i32 0, i32 35
  %cond = select i1 %cmp, %struct.device* null, %struct.device* %dev
  call void @dma_unmap_single_attrs.862(%struct.device* %cond, i64 %dma_addr, i64 %size, i32 %direction, i64 0)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clear_bit.861(i64 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !936
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @dma_unmap_single_attrs.862(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs) #4 {
entry:
  %call = call %struct.dma_map_ops* @get_dma_ops.812(%struct.device* %dev)
  %call1 = call i32 @valid_dma_direction.814(i32 %dir)
  %tobool = icmp ne i32 %call1, 0
  %lnot = xor i1 %tobool, true
  %lnot2 = xor i1 %lnot, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool4 = icmp ne i64 %expval, 0
  br i1 %tobool4, label %do.body5, label %do.end10

do.body5:                                         ; preds = %entry
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.34.815, i32 0, i32 0), i32 226, i64 12) #8, !srcloc !937
  br label %do.body6

do.body6:                                         ; preds = %do.body6, %do.body5
  br label %do.body6

do.end10:                                         ; preds = %entry
  %unmap_page = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %0 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page, align 8, !tbaa !711
  %tobool11 = icmp ne void (%struct.device*, i64, i64, i32, i64)* %0, null
  br i1 %tobool11, label %if.then12, label %if.end14

if.then12:                                        ; preds = %do.end10
  %unmap_page13 = getelementptr inbounds %struct.dma_map_ops, %struct.dma_map_ops* %call, i32 0, i32 5
  %1 = load void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)** %unmap_page13, align 8, !tbaa !711
  call void %1(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i64 %attrs)
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %do.end10
  call void @debug_dma_unmap_page(%struct.device* %dev, i64 %addr, i64 %size, i32 %dir, i1 zeroext true)
  ret void
}

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "counting-function"="mcount" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone }
attributes #6 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { inlinehint nounwind readnone uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 5.0.1 (tags/RELEASE_500/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!3, !4, i64 8}
!3 = !{!"ivtv", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !5, i64 32, !5, i64 33, !5, i64 34, !5, i64 35, !7, i64 36, !7, i64 40, !8, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !8, i64 80, !4, i64 88, !4, i64 96, !4, i64 104, !9, i64 112, !10, i64 168, !17, i64 360, !26, i64 880, !26, i64 896, !19, i64 912, !30, i64 1152, !18, i64 1464, !22, i64 1472, !5, i64 1480, !5, i64 1481, !5, i64 1482, !5, i64 1483, !7, i64 1484, !7, i64 1488, !7, i64 1492, !7, i64 1496, !8, i64 1504, !8, i64 1512, !5, i64 1520, !5, i64 1521, !12, i64 1528, !20, i64 1600, !5, i64 1760, !5, i64 1800, !16, i64 25560, !16, i64 25564, !4, i64 25568, !4, i64 25576, !34, i64 25584, !7, i64 25664, !7, i64 25668, !35, i64 25672, !4, i64 25800, !36, i64 25808, !12, i64 25848, !7, i64 25920, !7, i64 25924, !7, i64 25928, !7, i64 25932, !7, i64 25936, !37, i64 25944, !38, i64 74000, !7, i64 74096, !40, i64 74104, !40, i64 74192, !40, i64 74280, !40, i64 74368, !41, i64 74456, !41, i64 74480, !5, i64 74504, !42, i64 92936, !56, i64 95032, !57, i64 95096, !7, i64 96584, !20, i64 96592, !58, i64 96752, !7, i64 96808, !7, i64 96812, !7, i64 96816, !7, i64 96820, !5, i64 96824, !7, i64 109624, !7, i64 109628, !7, i64 109632, !5, i64 109636, !8, i64 109640, !8, i64 109648, !5, i64 109656, !22, i64 109672, !7, i64 109680, !59, i64 109688, !63, i64 116064, !22, i64 117272, !7, i64 117280, !7, i64 117284, !7, i64 117288, !5, i64 117292, !7, i64 117296, !65, i64 117300, !65, i64 117316, !4, i64 117336, !4, i64 117344}
!4 = !{!"any pointer", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!"int", !5, i64 0}
!8 = !{!"long long", !5, i64 0}
!9 = !{!"ivtv_options", !5, i64 0, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52}
!10 = !{!"v4l2_device", !4, i64 0, !4, i64 8, !11, i64 16, !12, i64 32, !5, i64 104, !4, i64 144, !4, i64 152, !13, i64 160, !14, i64 176, !4, i64 184}
!11 = !{!"list_head", !4, i64 0, !4, i64 8}
!12 = !{!"spinlock", !5, i64 0}
!13 = !{!"v4l2_prio_state", !5, i64 0}
!14 = !{!"kref", !15, i64 0}
!15 = !{!"refcount_struct", !16, i64 0}
!16 = !{!"", !7, i64 0}
!17 = !{!"cx2341x_handler", !7, i64 0, !5, i64 4, !18, i64 8, !18, i64 10, !18, i64 12, !7, i64 16, !19, i64 24, !4, i64 264, !4, i64 272, !4, i64 280, !4, i64 288, !25, i64 296, !26, i64 360, !27, i64 376, !26, i64 416, !28, i64 432, !26, i64 456, !26, i64 472, !29, i64 488}
!18 = !{!"short", !5, i64 0}
!19 = !{!"v4l2_ctrl_handler", !20, i64 0, !4, i64 160, !11, i64 168, !11, i64 184, !4, i64 200, !4, i64 208, !4, i64 216, !4, i64 224, !18, i64 232, !7, i64 236}
!20 = !{!"mutex", !21, i64 0, !12, i64 8, !23, i64 80, !11, i64 88, !4, i64 104, !24, i64 112}
!21 = !{!"", !22, i64 0}
!22 = !{!"long", !5, i64 0}
!23 = !{!"optimistic_spin_queue", !16, i64 0}
!24 = !{!"lockdep_map", !4, i64 0, !5, i64 8, !4, i64 24, !7, i64 32, !22, i64 40}
!25 = !{!"", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56}
!26 = !{!"", !4, i64 0, !4, i64 8}
!27 = !{!"", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32}
!28 = !{!"", !4, i64 0, !4, i64 8, !4, i64 16}
!29 = !{!"", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24}
!30 = !{!"v4l2_subdev", !31, i64 0, !11, i64 128, !4, i64 144, !33, i64 152, !7, i64 156, !4, i64 160, !4, i64 168, !4, i64 176, !4, i64 184, !5, i64 192, !7, i64 224, !4, i64 232, !4, i64 240, !4, i64 248, !4, i64 256, !4, i64 264, !11, i64 272, !4, i64 288, !4, i64 296, !4, i64 304}
!31 = !{!"media_entity", !32, i64 0, !4, i64 32, !5, i64 40, !7, i64 44, !22, i64 48, !18, i64 56, !18, i64 58, !18, i64 60, !7, i64 64, !4, i64 72, !11, i64 80, !4, i64 96, !7, i64 104, !7, i64 108, !4, i64 112, !5, i64 120}
!32 = !{!"media_gobj", !4, i64 0, !7, i64 8, !11, i64 16}
!33 = !{!"_Bool", !5, i64 0}
!34 = !{!"work_struct", !21, i64 0, !11, i64 8, !4, i64 24, !24, i64 32}
!35 = !{!"kthread_worker", !7, i64 0, !12, i64 8, !11, i64 80, !11, i64 96, !4, i64 112, !4, i64 120}
!36 = !{!"kthread_work", !11, i64 0, !4, i64 16, !4, i64 24, !7, i64 32}
!37 = !{!"ivtv_user_dma", !20, i64 0, !7, i64 160, !5, i64 168, !5, i64 5800, !5, i64 11432, !8, i64 19880, !7, i64 19888, !5, i64 19896}
!38 = !{!"timer_list", !39, i64 0, !22, i64 16, !4, i64 24, !22, i64 32, !7, i64 40, !24, i64 48}
!39 = !{!"hlist_node", !4, i64 0, !4, i64 8}
!40 = !{!"__wait_queue_head", !12, i64 0, !11, i64 72}
!41 = !{!"ivtv_mailbox_data", !4, i64 0, !22, i64 8, !5, i64 16}
!42 = !{!"i2c_adapter", !4, i64 0, !7, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !43, i64 40, !43, i64 176, !7, i64 312, !7, i64 316, !47, i64 320, !7, i64 1744, !5, i64 1748, !53, i64 1800, !20, i64 1896, !11, i64 2056, !4, i64 2072, !4, i64 2080, !4, i64 2088}
!43 = !{!"rt_mutex", !44, i64 0, !46, i64 72, !4, i64 80, !4, i64 88, !7, i64 96, !4, i64 104, !4, i64 112, !7, i64 120, !4, i64 128}
!44 = !{!"raw_spinlock", !45, i64 0, !7, i64 4, !7, i64 8, !4, i64 16, !24, i64 24}
!45 = !{!"qspinlock", !16, i64 0}
!46 = !{!"rb_root", !4, i64 0}
!47 = !{!"device", !4, i64 0, !4, i64 8, !48, i64 16, !4, i64 280, !4, i64 288, !20, i64 296, !4, i64 456, !4, i64 464, !4, i64 472, !4, i64 480, !50, i64 488, !51, i64 528, !4, i64 1104, !4, i64 1112, !4, i64 1120, !11, i64 1128, !7, i64 1144, !4, i64 1152, !4, i64 1160, !8, i64 1168, !22, i64 1176, !4, i64 1184, !11, i64 1192, !4, i64 1208, !4, i64 1216, !54, i64 1224, !4, i64 1232, !4, i64 1240, !7, i64 1248, !7, i64 1252, !12, i64 1256, !11, i64 1328, !55, i64 1344, !4, i64 1376, !4, i64 1384, !4, i64 1392, !4, i64 1400, !4, i64 1408, !33, i64 1416, !33, i64 1416}
!48 = !{!"kobject", !4, i64 0, !11, i64 8, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !14, i64 56, !49, i64 64, !7, i64 256, !7, i64 256, !7, i64 256, !7, i64 256, !7, i64 256}
!49 = !{!"delayed_work", !34, i64 0, !38, i64 80, !4, i64 176, !7, i64 184}
!50 = !{!"dev_links_info", !11, i64 0, !11, i64 16, !5, i64 32}
!51 = !{!"dev_pm_info", !52, i64 0, !7, i64 4, !7, i64 4, !33, i64 4, !33, i64 4, !33, i64 4, !33, i64 4, !33, i64 4, !33, i64 4, !33, i64 5, !12, i64 8, !11, i64 80, !53, i64 96, !4, i64 192, !33, i64 200, !33, i64 200, !33, i64 200, !38, i64 208, !22, i64 304, !34, i64 312, !40, i64 392, !4, i64 480, !16, i64 488, !16, i64 492, !7, i64 496, !7, i64 496, !7, i64 496, !7, i64 496, !7, i64 496, !7, i64 496, !33, i64 497, !7, i64 497, !7, i64 497, !7, i64 497, !7, i64 497, !7, i64 497, !7, i64 500, !5, i64 504, !5, i64 508, !7, i64 512, !7, i64 516, !22, i64 520, !22, i64 528, !22, i64 536, !22, i64 544, !4, i64 552, !4, i64 560, !4, i64 568}
!52 = !{!"pm_message", !7, i64 0}
!53 = !{!"completion", !7, i64 0, !40, i64 8}
!54 = !{!"dev_archdata", !4, i64 0}
!55 = !{!"klist_node", !4, i64 0, !11, i64 8, !14, i64 24}
!56 = !{!"i2c_algo_bit_data", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !7, i64 56, !7, i64 60}
!57 = !{!"i2c_client", !18, i64 0, !18, i64 2, !5, i64 4, !4, i64 24, !47, i64 32, !7, i64 1456, !11, i64 1464, !4, i64 1480}
!58 = !{!"IR_i2c_init_data", !4, i64 0, !4, i64 8, !8, i64 16, !7, i64 24, !4, i64 32, !5, i64 40, !4, i64 48}
!59 = !{!"vbi_info", !7, i64 0, !5, i64 4, !5, i64 5, !7, i64 8, !5, i64 12, !5, i64 13, !5, i64 16, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !60, i64 56, !4, i64 264, !7, i64 272, !7, i64 276, !5, i64 280, !7, i64 1304, !5, i64 1308, !7, i64 1312, !5, i64 1316, !61, i64 1317, !5, i64 1324, !5, i64 3628, !5, i64 5936, !5, i64 6192, !62, i64 6320, !7, i64 6368}
!60 = !{!"v4l2_format", !7, i64 0, !5, i64 8}
!61 = !{!"vbi_vps", !5, i64 0}
!62 = !{!"ivtv_buffer", !11, i64 0, !8, i64 16, !18, i64 24, !18, i64 26, !4, i64 32, !7, i64 40, !7, i64 44}
!63 = !{!"yuv_playback_info", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72, !7, i64 76, !7, i64 80, !7, i64 84, !7, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !7, i64 104, !7, i64 108, !7, i64 112, !7, i64 116, !7, i64 120, !7, i64 124, !7, i64 128, !7, i64 132, !7, i64 136, !7, i64 140, !7, i64 144, !7, i64 148, !7, i64 152, !7, i64 156, !5, i64 160, !7, i64 164, !7, i64 168, !7, i64 172, !7, i64 176, !7, i64 180, !7, i64 184, !7, i64 188, !7, i64 192, !7, i64 196, !7, i64 200, !7, i64 204, !7, i64 208, !16, i64 212, !16, i64 216, !7, i64 220, !7, i64 224, !5, i64 228, !5, i64 232, !64, i64 968, !64, i64 1060, !4, i64 1152, !8, i64 1160, !7, i64 1168, !5, i64 1172, !5, i64 1173, !65, i64 1176, !7, i64 1192, !7, i64 1196, !5, i64 1200}
!64 = !{!"yuv_frame_info", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72, !7, i64 76, !7, i64 80, !7, i64 84, !7, i64 88}
!65 = !{!"v4l2_rect", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12}
!66 = !{!3, !7, i64 1488}
!67 = !{!68, !18, i64 8}
!68 = !{!"ivtv_card_audio_input", !5, i64 0, !7, i64 4, !18, i64 8}
!69 = !{!70, !7, i64 40}
!70 = !{!"ivtv_card", !7, i64 0, !4, i64 8, !4, i64 16, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !5, i64 48, !5, i64 72, !68, i64 108, !7, i64 120, !4, i64 128, !5, i64 136, !5, i64 137, !71, i64 138, !72, i64 142, !73, i64 150, !74, i64 158, !75, i64 162, !76, i64 174, !77, i64 182, !5, i64 192, !4, i64 240, !4, i64 248}
!71 = !{!"ivtv_gpio_init", !18, i64 0, !18, i64 2}
!72 = !{!"ivtv_gpio_video_input", !18, i64 0, !18, i64 2, !18, i64 4, !18, i64 6}
!73 = !{!"ivtv_gpio_audio_input", !18, i64 0, !18, i64 2, !18, i64 4, !18, i64 6}
!74 = !{!"ivtv_gpio_audio_mute", !18, i64 0, !18, i64 2}
!75 = !{!"ivtv_gpio_audio_mode", !18, i64 0, !18, i64 2, !18, i64 4, !18, i64 6, !18, i64 8, !18, i64 10}
!76 = !{!"ivtv_gpio_audio_freq", !18, i64 0, !18, i64 2, !18, i64 4, !18, i64 6}
!77 = !{!"ivtv_gpio_audio_detect", !18, i64 0, !18, i64 2}
!78 = !{!3, !4, i64 72}
!79 = !{!30, !4, i64 168}
!80 = !{!81, !4, i64 16}
!81 = !{!"v4l2_subdev_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56}
!82 = !{!83, !4, i64 16}
!83 = !{!"v4l2_subdev_audio_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24}
!84 = !{!68, !7, i64 4}
!85 = !{!70, !7, i64 32}
!86 = !{!4, !4, i64 0}
!87 = !{!30, !7, i64 224}
!88 = !{!22, !22, i64 0}
!89 = !{!3, !7, i64 1492}
!90 = !{!3, !4, i64 56}
!91 = !{!81, !4, i64 24}
!92 = !{!93, !4, i64 0}
!93 = !{!"v4l2_subdev_video_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !4, i64 96, !4, i64 104, !4, i64 112, !4, i64 120, !4, i64 128, !4, i64 136, !4, i64 144, !4, i64 152, !4, i64 160, !4, i64 168}
!94 = !{!95, !18, i64 2}
!95 = !{!"ivtv_card_video_input", !5, i64 0, !5, i64 1, !18, i64 2}
!96 = !{!95, !5, i64 0}
!97 = !{!70, !7, i64 28}
!98 = !{!70, !5, i64 136}
!99 = !{!70, !7, i64 0}
!100 = !{!3, !5, i64 34}
!101 = !{!102, !7, i64 0}
!102 = !{!"v4l2_input", !7, i64 0, !5, i64 4, !7, i64 36, !7, i64 40, !7, i64 44, !8, i64 48, !7, i64 56, !7, i64 60, !5, i64 64}
!103 = !{!102, !7, i64 36}
!104 = !{!3, !5, i64 35}
!105 = !{!102, !7, i64 40}
!106 = !{!3, !8, i64 48}
!107 = !{!102, !8, i64 48}
!108 = !{!70, !4, i64 128}
!109 = !{!70, !7, i64 120}
!110 = !{!111, !7, i64 0}
!111 = !{!"v4l2_output", !7, i64 0, !5, i64 4, !7, i64 36, !7, i64 40, !7, i64 44, !8, i64 48, !7, i64 56, !5, i64 60}
!112 = !{!111, !7, i64 36}
!113 = !{!111, !7, i64 40}
!114 = !{!111, !8, i64 48}
!115 = !{!68, !5, i64 0}
!116 = !{!117, !7, i64 0}
!117 = !{!"v4l2_audio", !7, i64 0, !5, i64 4, !7, i64 36, !7, i64 40, !5, i64 44}
!118 = !{!117, !7, i64 36}
!119 = !{!83, !4, i64 0}
!120 = !{!7, !7, i64 0}
!121 = !{!3, !7, i64 109680}
!122 = !{!17, !18, i64 8}
!123 = !{!124, !7, i64 8}
!124 = !{!"v4l2_subdev_format", !7, i64 0, !7, i64 4, !125, i64 8, !5, i64 56}
!125 = !{!"v4l2_mbus_framefmt", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !18, i64 20, !18, i64 22, !18, i64 24, !5, i64 26}
!126 = !{!17, !18, i64 10}
!127 = !{!124, !7, i64 12}
!128 = !{!124, !7, i64 16}
!129 = !{!81, !4, i64 56}
!130 = !{!131, !4, i64 40}
!131 = !{!"v4l2_subdev_pad_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !4, i64 96, !4, i64 104, !4, i64 112}
!132 = !{!3, !7, i64 109960}
!133 = !{!3, !4, i64 109952}
!134 = !{!3, !5, i64 1481}
!135 = !{!136, !18, i64 0}
!136 = !{!"v4l2_sliced_vbi_format", !18, i64 0, !5, i64 2, !7, i64 100, !5, i64 104}
!137 = !{!3, !5, i64 1480}
!138 = !{!139, !4, i64 32}
!139 = !{!"v4l2_ctrl", !11, i64 0, !11, i64 16, !4, i64 32, !4, i64 40, !7, i64 48, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 52, !7, i64 53, !7, i64 53, !7, i64 53, !7, i64 53, !4, i64 56, !4, i64 64, !7, i64 72, !4, i64 80, !5, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !7, i64 120, !7, i64 124, !5, i64 128, !7, i64 144, !5, i64 152, !5, i64 160, !22, i64 168, !4, i64 176, !7, i64 184, !16, i64 188, !5, i64 192, !5, i64 200}
!140 = !{!139, !7, i64 72}
!141 = !{!3, !4, i64 880}
!142 = !{!5, !5, i64 0}
!143 = !{!3, !4, i64 888}
!144 = !{!3, !4, i64 896}
!145 = !{!139, !7, i64 184}
!146 = !{!3, !5, i64 1520}
!147 = !{!3, !4, i64 904}
!148 = !{!3, !5, i64 1521}
!149 = !{!8, !8, i64 0}
!150 = !{i32 -2146912195, i32 -2146912156, i32 -2146912135, i32 -2146912098, i32 -2146912075, i32 -2146912205}
!151 = !{!18, !18, i64 0}
!152 = !{i32 -2147007160}
!153 = !{i32 -2147007122}
!154 = !{!155, !4, i64 184}
!155 = !{!"ivtv_open_id", !156, i64 0, !7, i64 176, !7, i64 180, !4, i64 184}
!156 = !{!"v4l2_fh", !11, i64 0, !4, i64 16, !4, i64 24, !5, i64 32, !40, i64 40, !11, i64 128, !11, i64 144, !7, i64 160, !7, i64 164, !4, i64 168}
!157 = !{!155, !7, i64 176}
!158 = !{!70, !7, i64 44}
!159 = !{!81, !4, i64 0}
!160 = !{!161, !4, i64 24}
!161 = !{!"v4l2_subdev_core_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !4, i64 96, !4, i64 104}
!162 = !{!163, !7, i64 0}
!163 = !{!"v4l2_frequency", !7, i64 0, !7, i64 4, !7, i64 8, !5, i64 12}
!164 = !{!163, !7, i64 4}
!165 = !{!163, !7, i64 8}
!166 = !{!3, !8, i64 1504}
!167 = !{!3, !8, i64 1512}
!168 = !{!70, !7, i64 24}
!169 = !{!93, !4, i64 80}
!170 = !{!3, !5, i64 32}
!171 = !{!3, !4, i64 104}
!172 = !{!3, !7, i64 36}
!173 = !{i32 -2146862856, i32 -2146862817, i32 -2146862796, i32 -2146862759, i32 -2146862736, i32 -2146862727, i32 -2146862673}
!174 = !{!33, !33, i64 0}
!175 = !{i8 0, i8 2}
!176 = !{i32 -2146869988, i32 -2146869949, i32 -2146869928, i32 -2146869891, i32 -2146869868, i32 -2146869998}
!177 = !{i32 -2145104367}
!178 = !{i32 -2145106106}
!179 = !{!3, !7, i64 25664}
!180 = !{!3, !7, i64 1484}
!181 = !{!182, !7, i64 0}
!182 = !{!"__wait_queue", !7, i64 0, !4, i64 8, !4, i64 16, !11, i64 24}
!183 = !{!182, !4, i64 8}
!184 = !{!182, !4, i64 16}
!185 = !{!11, !4, i64 0}
!186 = !{!11, !4, i64 8}
!187 = !{i32 -2146593628}
!188 = !{i32 583218, i32 583229, i32 -2146859928}
!189 = !{!190, !22, i64 11680}
!190 = !{!"task_struct", !191, i64 0, !22, i64 8, !4, i64 16, !16, i64 24, !7, i64 28, !7, i64 32, !192, i64 40, !7, i64 48, !7, i64 52, !7, i64 56, !22, i64 64, !4, i64 72, !7, i64 80, !7, i64 84, !7, i64 88, !7, i64 92, !7, i64 96, !7, i64 100, !4, i64 104, !193, i64 128, !198, i64 576, !4, i64 648, !199, i64 656, !202, i64 808, !7, i64 816, !7, i64 820, !7, i64 824, !203, i64 832, !22, i64 1856, !33, i64 1864, !11, i64 1872, !7, i64 1888, !204, i64 1896, !11, i64 1928, !205, i64 1944, !195, i64 1984, !4, i64 2008, !4, i64 2016, !206, i64 2024, !207, i64 2064, !7, i64 2084, !7, i64 2088, !7, i64 2092, !7, i64 2096, !22, i64 2104, !7, i64 2112, !7, i64 2116, !7, i64 2116, !7, i64 2116, !7, i64 2116, !7, i64 2120, !7, i64 2120, !7, i64 2120, !7, i64 2120, !7, i64 2120, !7, i64 2120, !7, i64 2120, !7, i64 2120, !22, i64 2128, !208, i64 2136, !7, i64 2184, !7, i64 2188, !4, i64 2192, !4, i64 2200, !11, i64 2208, !11, i64 2224, !4, i64 2240, !11, i64 2248, !11, i64 2264, !5, i64 2280, !11, i64 2352, !11, i64 2368, !4, i64 2384, !4, i64 2392, !4, i64 2400, !8, i64 2408, !8, i64 2416, !8, i64 2424, !209, i64 2432, !22, i64 2520, !22, i64 2528, !8, i64 2536, !8, i64 2544, !22, i64 2552, !22, i64 2560, !210, i64 2568, !5, i64 2592, !4, i64 2640, !4, i64 2648, !4, i64 2656, !5, i64 2664, !4, i64 2680, !211, i64 2688, !212, i64 2696, !22, i64 2712, !4, i64 2720, !4, i64 2728, !4, i64 2736, !4, i64 2744, !4, i64 2752, !213, i64 2760, !213, i64 2768, !213, i64 2776, !214, i64 2784, !22, i64 2808, !22, i64 2816, !7, i64 2824, !4, i64 2832, !4, i64 2840, !16, i64 2848, !7, i64 2852, !215, i64 2856, !7, i64 2872, !7, i64 2876, !12, i64 2880, !44, i64 2952, !216, i64 3024, !46, i64 3032, !4, i64 3040, !4, i64 3048, !4, i64 3056, !7, i64 3064, !22, i64 3072, !22, i64 3080, !7, i64 3088, !7, i64 3092, !7, i64 3096, !7, i64 3100, !22, i64 3104, !22, i64 3112, !7, i64 3120, !7, i64 3124, !7, i64 3128, !7, i64 3132, !8, i64 3136, !7, i64 3144, !7, i64 3148, !5, i64 3152, !7, i64 5840, !7, i64 5844, !4, i64 5848, !4, i64 5856, !4, i64 5864, !4, i64 5872, !4, i64 5880, !4, i64 5888, !22, i64 5896, !4, i64 5904, !217, i64 5912, !8, i64 5968, !8, i64 5976, !8, i64 5984, !213, i64 5992, !218, i64 6120, !7, i64 6176, !7, i64 6180, !4, i64 6184, !11, i64 6192, !7, i64 6208, !4, i64 6216, !4, i64 6224, !11, i64 6232, !4, i64 6248, !5, i64 6256, !20, i64 6272, !11, i64 6432, !4, i64 6448, !18, i64 6456, !18, i64 6458, !7, i64 6460, !7, i64 6464, !7, i64 6468, !7, i64 6472, !22, i64 6480, !8, i64 6488, !8, i64 6496, !8, i64 6504, !219, i64 6512, !11, i64 6528, !4, i64 6544, !4, i64 6552, !22, i64 6560, !5, i64 6568, !22, i64 6592, !220, i64 6600, !219, i64 7632, !4, i64 7648, !221, i64 7656, !4, i64 7672, !7, i64 7680, !7, i64 7684, !7, i64 7688, !22, i64 7696, !7, i64 7704, !5, i64 7712, !8, i64 11552, !8, i64 11560, !7, i64 11568, !7, i64 11572, !4, i64 11576, !8, i64 11584, !16, i64 11592, !16, i64 11596, !22, i64 11600, !22, i64 11608, !5, i64 11616, !7, i64 11620, !4, i64 11624, !4, i64 11632, !4, i64 11640, !7, i64 11648, !7, i64 11652, !7, i64 11656, !4, i64 11664, !7, i64 11672, !7, i64 11676, !22, i64 11680, !7, i64 11688, !4, i64 11696, !16, i64 11704, !222, i64 11712}
!191 = !{!"thread_info", !22, i64 0}
!192 = !{!"llist_node", !4, i64 0}
!193 = !{!"sched_entity", !194, i64 0, !195, i64 16, !11, i64 40, !7, i64 56, !8, i64 64, !8, i64 72, !8, i64 80, !8, i64 88, !8, i64 96, !196, i64 104, !7, i64 320, !4, i64 328, !4, i64 336, !4, i64 344, !197, i64 384}
!194 = !{!"load_weight", !22, i64 0, !7, i64 8}
!195 = !{!"rb_node", !22, i64 0, !4, i64 8, !4, i64 16}
!196 = !{!"sched_statistics", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !8, i64 72, !8, i64 80, !8, i64 88, !8, i64 96, !8, i64 104, !8, i64 112, !8, i64 120, !8, i64 128, !8, i64 136, !8, i64 144, !8, i64 152, !8, i64 160, !8, i64 168, !8, i64 176, !8, i64 184, !8, i64 192, !8, i64 200, !8, i64 208}
!197 = !{!"sched_avg", !8, i64 0, !8, i64 8, !7, i64 16, !7, i64 20, !22, i64 24, !22, i64 32}
!198 = !{!"sched_rt_entity", !11, i64 0, !22, i64 16, !22, i64 24, !7, i64 32, !18, i64 36, !18, i64 38, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64}
!199 = !{!"sched_dl_entity", !195, i64 0, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48, !8, i64 56, !8, i64 64, !7, i64 72, !7, i64 76, !7, i64 80, !7, i64 84, !200, i64 88}
!200 = !{!"hrtimer", !201, i64 0, !8, i64 32, !4, i64 40, !4, i64 48, !5, i64 56, !5, i64 57}
!201 = !{!"timerqueue_node", !195, i64 0, !8, i64 24}
!202 = !{!"hlist_head", !4, i64 0}
!203 = !{!"cpumask", !5, i64 0}
!204 = !{!"sched_info", !22, i64 0, !8, i64 8, !8, i64 16, !8, i64 24}
!205 = !{!"plist_node", !7, i64 0, !11, i64 8, !11, i64 24}
!206 = !{!"vmacache", !7, i64 0, !5, i64 8}
!207 = !{!"task_rss_stat", !7, i64 0, !5, i64 4}
!208 = !{!"restart_block", !4, i64 0, !5, i64 8}
!209 = !{!"prev_cputime", !8, i64 0, !8, i64 8, !44, i64 16}
!210 = !{!"task_cputime", !8, i64 0, !8, i64 8, !8, i64 16}
!211 = !{!"sysv_sem", !4, i64 0}
!212 = !{!"sysv_shm", !11, i64 0}
!213 = !{!"", !5, i64 0}
!214 = !{!"sigpending", !11, i64 0, !213, i64 16}
!215 = !{!"seccomp", !7, i64 0, !4, i64 8}
!216 = !{!"wake_q_node", !4, i64 0}
!217 = !{!"task_io_accounting", !8, i64 0, !8, i64 8, !8, i64 16, !8, i64 24, !8, i64 32, !8, i64 40, !8, i64 48}
!218 = !{!"seqcount", !7, i64 0, !24, i64 8}
!219 = !{!"callback_head", !4, i64 0, !4, i64 8}
!220 = !{!"tlbflush_unmap_batch", !203, i64 0, !33, i64 1024, !33, i64 1025}
!221 = !{!"page_frag", !4, i64 0, !7, i64 8, !7, i64 12}
!222 = !{!"thread_struct", !5, i64 0, !22, i64 24, !22, i64 32, !18, i64 40, !18, i64 42, !18, i64 44, !18, i64 46, !7, i64 48, !22, i64 56, !22, i64 64, !5, i64 72, !22, i64 104, !22, i64 112, !22, i64 120, !22, i64 128, !22, i64 136, !4, i64 144, !22, i64 152, !7, i64 160, !21, i64 168, !7, i64 176, !7, i64 176, !223, i64 192}
!223 = !{!"fpu", !7, i64 0, !5, i64 4, !5, i64 5, !5, i64 64}
!224 = !{i32 -2141279932}
!225 = !{!3, !18, i64 95098}
!226 = !{!3, !4, i64 0}
!227 = !{!3, !18, i64 1464}
!228 = !{!3, !7, i64 148}
!229 = !{!3, !4, i64 320}
!230 = !{!3, !4, i64 640}
!231 = !{!3, !4, i64 624}
!232 = !{!3, !4, i64 632}
!233 = !{!3, !8, i64 80}
!234 = !{!3, !4, i64 88}
!235 = !{!3, !4, i64 96}
!236 = !{!70, !4, i64 16}
!237 = !{!3, !7, i64 152}
!238 = !{!239, !8, i64 0}
!239 = !{!"ivtv_card_tuner", !8, i64 0, !7, i64 8}
!240 = !{!239, !7, i64 8}
!241 = !{!3, !7, i64 156}
!242 = !{!70, !5, i64 108}
!243 = !{!3, !5, i64 1483}
!244 = !{!3, !5, i64 1482}
!245 = !{!3, !7, i64 116252}
!246 = !{!3, !7, i64 116256}
!247 = !{!3, !7, i64 117256}
!248 = !{!3, !7, i64 117260}
!249 = !{!3, !7, i64 109716}
!250 = !{!251, !18, i64 0}
!251 = !{!"tuner_setup", !18, i64 0, !7, i64 4, !7, i64 8, !4, i64 16, !4, i64 24}
!252 = !{!251, !7, i64 4}
!253 = !{!251, !7, i64 8}
!254 = !{!251, !4, i64 24}
!255 = !{!81, !4, i64 8}
!256 = !{!257, !4, i64 64}
!257 = !{!"v4l2_subdev_tuner_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72}
!258 = !{!259, !7, i64 0}
!259 = !{!"v4l2_priv_tun_config", !7, i64 0, !4, i64 8}
!260 = !{!259, !4, i64 8}
!261 = !{!257, !4, i64 72}
!262 = !{!19, !7, i64 236}
!263 = !{!93, !4, i64 32}
!264 = !{!265, !7, i64 1588}
!265 = !{!"pci_dev", !11, i64 0, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !7, i64 56, !18, i64 60, !18, i64 62, !18, i64 64, !18, i64 66, !7, i64 68, !5, i64 72, !5, i64 73, !18, i64 74, !5, i64 76, !5, i64 77, !5, i64 78, !5, i64 79, !5, i64 80, !5, i64 81, !18, i64 82, !4, i64 88, !4, i64 96, !8, i64 104, !266, i64 112, !7, i64 128, !5, i64 132, !7, i64 133, !7, i64 133, !7, i64 133, !7, i64 133, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 134, !7, i64 135, !7, i64 135, !7, i64 136, !7, i64 140, !4, i64 144, !7, i64 152, !47, i64 160, !7, i64 1584, !7, i64 1588, !5, i64 1592, !33, i64 2680, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2681, !7, i64 2682, !7, i64 2682, !7, i64 2682, !7, i64 2682, !7, i64 2682, !7, i64 2682, !7, i64 2682, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2683, !7, i64 2684, !7, i64 2684, !7, i64 2684, !7, i64 2684, !18, i64 2686, !16, i64 2688, !5, i64 2692, !202, i64 2760, !4, i64 2768, !7, i64 2776, !5, i64 2784, !5, i64 2920, !7, i64 3056, !7, i64 3056, !5, i64 3057, !4, i64 3064, !4, i64 3072, !5, i64 3080, !18, i64 3088, !5, i64 3090, !16, i64 3092, !8, i64 3096, !22, i64 3104, !4, i64 3112}
!266 = !{!"device_dma_parameters", !7, i64 0, !22, i64 8}
!267 = !{!3, !4, i64 16}
!268 = !{!3, !4, i64 25800}
!269 = !{!47, !4, i64 480}
!270 = !{i32 -2146964953}
!271 = !{i32 -2146964915}
!272 = !{!3, !7, i64 164}
!273 = !{!3, !7, i64 160}
!274 = !{!265, !18, i64 62}
!275 = !{!70, !4, i64 8}
!276 = !{!265, !18, i64 64}
!277 = !{!70, !4, i64 248}
!278 = !{!279, !18, i64 0}
!279 = !{!"ivtv_card_pci_info", !18, i64 0, !18, i64 2, !18, i64 4}
!280 = !{!279, !18, i64 2}
!281 = !{!265, !18, i64 66}
!282 = !{!279, !18, i64 4}
!283 = !{!265, !18, i64 60}
!284 = !{!70, !4, i64 240}
!285 = !{!3, !4, i64 24}
!286 = !{!287, !8, i64 0}
!287 = !{!"resource", !8, i64 0, !8, i64 8, !4, i64 16, !22, i64 24, !22, i64 32, !4, i64 40, !4, i64 48, !4, i64 56}
!288 = !{!3, !5, i64 74472}
!289 = !{!3, !5, i64 74496}
!290 = !{!36, !4, i64 16}
!291 = !{!3, !5, i64 364}
!292 = !{!3, !7, i64 360}
!293 = !{!3, !4, i64 74024}
!294 = !{!3, !22, i64 74032}
!295 = !{!3, !7, i64 25920}
!296 = !{!3, !7, i64 25924}
!297 = !{!3, !7, i64 109632}
!298 = !{!3, !7, i64 109744}
!299 = !{!3, !7, i64 117280}
!300 = !{!3, !5, i64 117292}
!301 = !{!3, !7, i64 116264}
!302 = !{!3, !7, i64 116268}
!303 = !{!3, !5, i64 117237}
!304 = !{!3, !5, i64 116224}
!305 = !{!265, !5, i64 72}
!306 = !{!265, !4, i64 16}
!307 = !{!308, !5, i64 224}
!308 = !{!"pci_bus", !11, i64 0, !4, i64 16, !11, i64 24, !11, i64 40, !4, i64 56, !11, i64 64, !5, i64 80, !11, i64 112, !287, i64 128, !4, i64 192, !4, i64 200, !4, i64 208, !4, i64 216, !5, i64 224, !5, i64 225, !5, i64 226, !5, i64 227, !5, i64 228, !18, i64 276, !18, i64 278, !4, i64 280, !47, i64 288, !4, i64 1712, !4, i64 1720, !7, i64 1728}
!309 = !{!265, !7, i64 56}
!310 = !{!311, !7, i64 44}
!311 = !{!"tveeprom", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !5, i64 56, !5, i64 61}
!312 = !{!311, !7, i64 0}
!313 = !{!311, !7, i64 20}
!314 = !{!3, !5, i64 33}
!315 = !{!311, !7, i64 12}
!316 = !{!311, !7, i64 4}
!317 = !{!311, !7, i64 16}
!318 = !{!3, !7, i64 109720}
!319 = !{!95, !5, i64 1}
!320 = !{!3, !7, i64 40}
!321 = !{!70, !7, i64 36}
!322 = !{!3, !4, i64 64}
!323 = !{!93, !4, i64 8}
!324 = !{!3, !7, i64 109688}
!325 = !{!3, !5, i64 109692}
!326 = !{!3, !5, i64 109693}
!327 = !{!3, !7, i64 109696}
!328 = !{!3, !5, i64 109700}
!329 = !{!3, !5, i64 109701}
!330 = !{!21, !22, i64 0}
!331 = !{i64 0, i64 8, !88}
!332 = !{!34, !4, i64 24}
!333 = !{i32 -2146964286}
!334 = !{i32 -2146964248}
!335 = !{!336, !4, i64 128}
!336 = !{!"dma_map_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72, !4, i64 80, !4, i64 88, !4, i64 96, !4, i64 104, !4, i64 112, !4, i64 120, !4, i64 128, !7, i64 136}
!337 = !{!47, !4, i64 1160}
!338 = !{!47, !4, i64 1152}
!339 = !{!47, !4, i64 456}
!340 = !{!341, !4, i64 2152}
!341 = !{!"ivtv_stream", !342, i64 0, !4, i64 2152, !4, i64 2160, !7, i64 2168, !7, i64 2172, !4, i64 2176, !12, i64 2184, !22, i64 2256, !7, i64 2264, !7, i64 2268, !7, i64 2272, !8, i64 2280, !7, i64 2288, !7, i64 2292, !8, i64 2296, !7, i64 2304, !40, i64 2312, !7, i64 2400, !7, i64 2404, !7, i64 2408, !7, i64 2412, !346, i64 2416, !346, i64 2448, !346, i64 2480, !346, i64 2512, !346, i64 2544, !18, i64 2576, !4, i64 2584, !4, i64 2592, !4, i64 2600, !8, i64 2608, !7, i64 2616, !7, i64 2620, !7, i64 2624, !4, i64 2632}
!342 = !{!"video_device", !31, i64 0, !4, i64 128, !343, i64 136, !4, i64 424, !7, i64 432, !47, i64 440, !4, i64 1864, !4, i64 1872, !4, i64 1880, !4, i64 1888, !4, i64 1896, !4, i64 1904, !5, i64 1912, !7, i64 1944, !7, i64 1948, !7, i64 1952, !18, i64 1956, !22, i64 1960, !7, i64 1968, !12, i64 1976, !11, i64 2048, !7, i64 2064, !8, i64 2072, !4, i64 2080, !4, i64 2088, !5, i64 2096, !5, i64 2120, !4, i64 2144}
!343 = !{!"media_pipeline", !7, i64 0, !344, i64 8}
!344 = !{!"media_graph", !5, i64 0, !345, i64 256, !7, i64 272}
!345 = !{!"media_entity_enum", !4, i64 0, !7, i64 8}
!346 = !{!"ivtv_queue", !11, i64 0, !7, i64 16, !7, i64 20, !7, i64 24}
!347 = !{!341, !4, i64 2176}
!348 = !{!341, !7, i64 2168}
!349 = !{!341, !4, i64 2160}
!350 = !{i32 -2146876551, i32 -2146876512, i32 -2146876491, i32 -2146876454, i32 -2146876431, i32 -2146876422, i32 -2146876368}
!351 = !{i32 -2146884125, i32 -2146884086, i32 -2146884065, i32 -2146884028, i32 -2146884005, i32 -2146884135}
!352 = !{i32 -2146877739, i32 -2146877700, i32 -2146877679, i32 -2146877642, i32 -2146877619, i32 -2146877610, i32 -2146877556}
!353 = !{i32 -2146884871, i32 -2146884832, i32 -2146884811, i32 -2146884774, i32 -2146884751, i32 -2146884881}
!354 = !{!355, !4, i64 456}
!355 = !{!"file", !5, i64 0, !356, i64 16, !4, i64 32, !4, i64 40, !12, i64 48, !21, i64 120, !7, i64 128, !7, i64 132, !20, i64 136, !8, i64 296, !357, i64 304, !4, i64 400, !360, i64 408, !8, i64 440, !4, i64 448, !4, i64 456, !11, i64 464, !11, i64 480, !4, i64 496}
!356 = !{!"path", !4, i64 0, !4, i64 8}
!357 = !{!"fown_struct", !358, i64 0, !4, i64 72, !5, i64 80, !16, i64 84, !16, i64 88, !7, i64 92}
!358 = !{!"", !359, i64 0, !7, i64 8, !7, i64 12, !4, i64 16, !24, i64 24}
!359 = !{!"qrwlock", !16, i64 0, !45, i64 4}
!360 = !{!"file_ra_state", !22, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !8, i64 24}
!361 = !{!355, !7, i64 128}
!362 = !{!62, !7, i64 44}
!363 = !{!62, !7, i64 40}
!364 = !{!3, !7, i64 116056}
!365 = !{!3, !8, i64 109648}
!366 = !{!3, !22, i64 109672}
!367 = !{!341, !8, i64 2296}
!368 = !{!62, !18, i64 24}
!369 = !{!341, !7, i64 2464}
!370 = !{!62, !4, i64 32}
!371 = !{!3, !7, i64 109628}
!372 = !{!3, !8, i64 109640}
!373 = !{!3, !4, i64 116040}
!374 = !{!3, !7, i64 116048}
!375 = !{!3, !7, i64 116052}
!376 = !{i32 -2146608511}
!377 = !{!3, !7, i64 96808}
!378 = !{!3, !7, i64 96812}
!379 = !{!3, !7, i64 96816}
!380 = !{!381, !8, i64 0}
!381 = !{!"v4l2_enc_idx_entry", !8, i64 0, !8, i64 8, !7, i64 16, !7, i64 20, !5, i64 24}
!382 = !{!381, !7, i64 16}
!383 = !{!381, !8, i64 8}
!384 = !{!381, !7, i64 20}
!385 = !{!3, !4, i64 680}
!386 = !{!257, !4, i64 32}
!387 = !{!388, !7, i64 56}
!388 = !{!"v4l2_tuner", !7, i64 0, !5, i64 4, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !5, i64 68}
!389 = !{!388, !7, i64 52}
!390 = !{i32 568335, i32 568346, i32 -2146874811}
!391 = !{!19, !4, i64 160}
!392 = !{i32 -2145120989}
!393 = !{i32 -2146979836}
!394 = !{i32 -2146979798}
!395 = !{!341, !7, i64 2468}
!396 = !{!3, !7, i64 25932}
!397 = !{!341, !7, i64 2472}
!398 = !{!346, !7, i64 20}
!399 = !{!346, !7, i64 24}
!400 = !{!346, !7, i64 16}
!401 = !{!341, !7, i64 2432}
!402 = !{!63, !7, i64 1168}
!403 = !{!341, !7, i64 2408}
!404 = !{!3, !7, i64 25928}
!405 = !{!406, !4, i64 0}
!406 = !{!"poll_table_struct", !4, i64 0, !22, i64 8}
!407 = !{!341, !7, i64 2500}
!408 = !{!406, !22, i64 8}
!409 = !{!93, !4, i64 24}
!410 = !{!3, !4, i64 776}
!411 = !{!3, !4, i64 784}
!412 = !{!155, !7, i64 180}
!413 = !{!342, !4, i64 2144}
!414 = !{!257, !4, i64 0}
!415 = !{!3, !7, i64 117232}
!416 = !{!47, !4, i64 280}
!417 = !{!48, !4, i64 0}
!418 = !{!3, !4, i64 74480}
!419 = !{!3, !4, i64 74456}
!420 = !{i32 -2145139721}
!421 = !{i32 -2145141460}
!422 = !{!423, !4, i64 8}
!423 = !{!"firmware", !22, i64 0, !4, i64 8, !4, i64 16, !4, i64 24}
!424 = !{!423, !22, i64 0}
!425 = !{i32 -2145138912}
!426 = !{!3, !18, i64 368}
!427 = !{!3, !18, i64 370}
!428 = !{!3, !7, i64 376}
!429 = !{!3, !7, i64 1496}
!430 = !{!431, !18, i64 32}
!431 = !{!"ivtv_card_output", !5, i64 0, !18, i64 32}
!432 = !{!3, !4, i64 117344}
!433 = !{i32 -2147000307}
!434 = !{i32 -2147000269}
!435 = !{i32 -2145143041}
!436 = !{i32 -2145141302}
!437 = !{!56, !4, i64 0}
!438 = !{!70, !5, i64 137}
!439 = !{!70, !18, i64 138}
!440 = !{!70, !18, i64 140}
!441 = !{!3, !7, i64 1376}
!442 = !{!3, !7, i64 1148}
!443 = !{!3, !4, i64 1336}
!444 = !{!70, !18, i64 158}
!445 = !{!70, !18, i64 160}
!446 = !{!70, !18, i64 142}
!447 = !{!70, !18, i64 174}
!448 = !{!70, !18, i64 150}
!449 = !{!70, !18, i64 156}
!450 = !{!70, !18, i64 182}
!451 = !{!70, !18, i64 162}
!452 = !{i64 0, i64 20, !142}
!453 = !{!454, !18, i64 20}
!454 = !{!"i2c_board_info", !5, i64 0, !18, i64 20, !18, i64 22, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !7, i64 64}
!455 = !{!454, !18, i64 22}
!456 = !{!454, !4, i64 24}
!457 = !{!454, !4, i64 32}
!458 = !{!454, !4, i64 40}
!459 = !{!454, !4, i64 48}
!460 = !{!454, !4, i64 56}
!461 = !{!454, !7, i64 64}
!462 = !{!463, !7, i64 0}
!463 = !{!"cx25840_platform_data", !7, i64 0}
!464 = !{!58, !4, i64 0}
!465 = !{!58, !5, i64 40}
!466 = !{!58, !8, i64 16}
!467 = !{!58, !4, i64 8}
!468 = !{!58, !4, i64 32}
!469 = !{!470, !4, i64 8}
!470 = !{!"IR_i2c", !4, i64 0, !4, i64 8, !4, i64 16, !5, i64 24, !7, i64 28, !49, i64 32, !5, i64 224, !5, i64 256, !4, i64 288}
!471 = !{i64 0, i64 8, !86, i64 8, i64 4, !120, i64 16, i64 8, !86, i64 24, i64 8, !86, i64 32, i64 8, !86, i64 40, i64 4, !120, i64 44, i64 4, !120, i64 48, i64 4, !120, i64 56, i64 8, !86, i64 64, i64 8, !86, i64 72, i64 16, !142, i64 88, i64 8, !86, i64 96, i64 4, !120, i64 104, i64 8, !88, i64 112, i64 8, !86, i64 120, i64 8, !86, i64 128, i64 8, !86, i64 136, i64 4, !120, i64 144, i64 8, !86, i64 152, i64 8, !86, i64 160, i64 4, !120, i64 168, i64 8, !86, i64 176, i64 4, !120, i64 180, i64 4, !120, i64 184, i64 4, !120, i64 192, i64 8, !86, i64 200, i64 8, !86, i64 208, i64 16, !142, i64 224, i64 8, !86, i64 232, i64 4, !120, i64 240, i64 8, !88, i64 248, i64 8, !86, i64 256, i64 8, !86, i64 264, i64 8, !86, i64 272, i64 4, !120, i64 280, i64 8, !86, i64 288, i64 8, !86, i64 296, i64 4, !120, i64 304, i64 8, !86, i64 312, i64 4, !120, i64 316, i64 4, !120, i64 320, i64 8, !86, i64 328, i64 8, !86, i64 336, i64 8, !86, i64 344, i64 8, !86, i64 352, i64 8, !86, i64 360, i64 8, !86, i64 368, i64 8, !86, i64 376, i64 8, !86, i64 384, i64 8, !86, i64 392, i64 4, !120, i64 400, i64 8, !88, i64 408, i64 8, !86, i64 416, i64 8, !86, i64 424, i64 8, !86, i64 432, i64 8, !86, i64 440, i64 16, !142, i64 456, i64 8, !86, i64 464, i64 4, !120, i64 472, i64 8, !88, i64 480, i64 8, !86, i64 488, i64 8, !86, i64 496, i64 8, !88, i64 504, i64 8, !86, i64 512, i64 8, !88, i64 520, i64 4, !120, i64 528, i64 8, !86, i64 536, i64 16, !142, i64 552, i64 8, !86, i64 560, i64 4, !120, i64 568, i64 8, !88, i64 576, i64 8, !86, i64 584, i64 4, !120, i64 592, i64 4, !120, i64 592, i64 4, !120, i64 592, i64 4, !120, i64 592, i64 4, !120, i64 592, i64 4, !120, i64 600, i64 8, !86, i64 608, i64 8, !86, i64 616, i64 8, !88, i64 624, i64 4, !120, i64 628, i64 4, !120, i64 632, i64 4, !120, i64 640, i64 8, !86, i64 648, i64 8, !86, i64 656, i64 16, !142, i64 672, i64 8, !86, i64 680, i64 4, !120, i64 688, i64 8, !88, i64 624, i64 24, !142, i64 648, i64 8, !86, i64 656, i64 16, !142, i64 672, i64 8, !86, i64 680, i64 4, !120, i64 688, i64 8, !88, i64 696, i64 4, !120, i64 704, i64 8, !86, i64 712, i64 8, !86, i64 720, i64 8, !86, i64 728, i64 8, !86, i64 736, i64 16, !142, i64 752, i64 8, !86, i64 760, i64 4, !120, i64 768, i64 8, !88, i64 776, i64 8, !86, i64 784, i64 8, !86, i64 792, i64 8, !86, i64 800, i64 8, !86, i64 808, i64 8, !86, i64 816, i64 8, !86, i64 824, i64 8, !86, i64 832, i64 8, !86, i64 840, i64 4, !142, i64 848, i64 4, !120, i64 852, i64 4, !120, i64 852, i64 4, !120, i64 852, i64 1, !174, i64 852, i64 1, !174, i64 852, i64 1, !174, i64 852, i64 1, !174, i64 852, i64 1, !174, i64 852, i64 1, !174, i64 853, i64 1, !174, i64 856, i64 4, !120, i64 860, i64 4, !120, i64 864, i64 4, !120, i64 872, i64 8, !86, i64 880, i64 8, !86, i64 888, i64 16, !142, i64 904, i64 8, !86, i64 912, i64 4, !120, i64 920, i64 8, !88, i64 856, i64 24, !142, i64 880, i64 8, !86, i64 888, i64 16, !142, i64 904, i64 8, !86, i64 912, i64 4, !120, i64 920, i64 8, !88, i64 928, i64 8, !86, i64 936, i64 8, !86, i64 944, i64 4, !120, i64 952, i64 4, !120, i64 956, i64 4, !120, i64 960, i64 4, !120, i64 968, i64 8, !86, i64 976, i64 8, !86, i64 984, i64 16, !142, i64 1000, i64 8, !86, i64 1008, i64 4, !120, i64 1016, i64 8, !88, i64 952, i64 24, !142, i64 976, i64 8, !86, i64 984, i64 16, !142, i64 1000, i64 8, !86, i64 1008, i64 4, !120, i64 1016, i64 8, !88, i64 1024, i64 8, !86, i64 1032, i64 8, !86, i64 1040, i64 8, !86, i64 1048, i64 1, !174, i64 1048, i64 1, !174, i64 1048, i64 1, !174, i64 1056, i64 8, !86, i64 1064, i64 8, !86, i64 1072, i64 8, !88, i64 1080, i64 8, !86, i64 1088, i64 8, !88, i64 1096, i64 4, !120, i64 1104, i64 8, !86, i64 1112, i64 16, !142, i64 1128, i64 8, !86, i64 1136, i64 4, !120, i64 1144, i64 8, !88, i64 1152, i64 8, !88, i64 1160, i64 8, !88, i64 1168, i64 8, !86, i64 1176, i64 8, !86, i64 1184, i64 8, !86, i64 1192, i64 8, !86, i64 1200, i64 16, !142, i64 1216, i64 8, !86, i64 1224, i64 4, !120, i64 1232, i64 8, !88, i64 1240, i64 4, !120, i64 1244, i64 4, !120, i64 1248, i64 4, !120, i64 1256, i64 8, !86, i64 1264, i64 8, !86, i64 1272, i64 16, !142, i64 1288, i64 8, !86, i64 1296, i64 4, !120, i64 1304, i64 8, !88, i64 1240, i64 24, !142, i64 1264, i64 8, !86, i64 1272, i64 16, !142, i64 1288, i64 8, !86, i64 1296, i64 4, !120, i64 1304, i64 8, !88, i64 1312, i64 8, !86, i64 1320, i64 8, !86, i64 1328, i64 8, !86, i64 1336, i64 4, !120, i64 1340, i64 4, !120, i64 1344, i64 4, !120, i64 1344, i64 4, !120, i64 1344, i64 4, !120, i64 1344, i64 4, !120, i64 1344, i64 4, !120, i64 1344, i64 4, !120, i64 1345, i64 1, !174, i64 1345, i64 4, !120, i64 1345, i64 4, !120, i64 1345, i64 4, !120, i64 1345, i64 4, !120, i64 1345, i64 4, !120, i64 1348, i64 4, !120, i64 1352, i64 4, !142, i64 1356, i64 4, !142, i64 1360, i64 4, !120, i64 1364, i64 4, !120, i64 1368, i64 8, !88, i64 1376, i64 8, !88, i64 1384, i64 8, !88, i64 1392, i64 8, !88, i64 1400, i64 8, !86, i64 1408, i64 8, !86, i64 1416, i64 8, !86, i64 1424, i64 8, !86, i64 1432, i64 8, !86, i64 1440, i64 8, !86, i64 1448, i64 8, !86, i64 1456, i64 8, !86, i64 1464, i64 4, !120, i64 1472, i64 8, !86, i64 1480, i64 8, !86, i64 1488, i64 8, !149, i64 1496, i64 8, !88, i64 1504, i64 8, !86, i64 1512, i64 8, !86, i64 1520, i64 8, !86, i64 1528, i64 8, !86, i64 1536, i64 8, !86, i64 1544, i64 8, !86, i64 1552, i64 8, !86, i64 1560, i64 8, !86, i64 1568, i64 4, !120, i64 1572, i64 4, !120, i64 1576, i64 4, !120, i64 1580, i64 4, !120, i64 1584, i64 4, !120, i64 1592, i64 8, !86, i64 1600, i64 8, !86, i64 1608, i64 16, !142, i64 1624, i64 8, !86, i64 1632, i64 4, !120, i64 1640, i64 8, !88, i64 1576, i64 24, !142, i64 1600, i64 8, !86, i64 1608, i64 16, !142, i64 1624, i64 8, !86, i64 1632, i64 4, !120, i64 1640, i64 8, !88, i64 1648, i64 8, !86, i64 1656, i64 8, !86, i64 1664, i64 8, !86, i64 1672, i64 8, !86, i64 1680, i64 8, !86, i64 1688, i64 4, !120, i64 1696, i64 8, !86, i64 1704, i64 8, !86, i64 1712, i64 8, !86, i64 1720, i64 8, !86, i64 1728, i64 8, !86, i64 1736, i64 1, !174, i64 1736, i64 1, !174, i64 1744, i64 4, !120, i64 1748, i64 48, !142, i64 1800, i64 4, !120, i64 1808, i64 4, !120, i64 1812, i64 4, !120, i64 1816, i64 4, !120, i64 1824, i64 8, !86, i64 1832, i64 8, !86, i64 1840, i64 16, !142, i64 1856, i64 8, !86, i64 1864, i64 4, !120, i64 1872, i64 8, !88, i64 1808, i64 24, !142, i64 1832, i64 8, !86, i64 1840, i64 16, !142, i64 1856, i64 8, !86, i64 1864, i64 4, !120, i64 1872, i64 8, !88, i64 1880, i64 8, !86, i64 1888, i64 8, !86, i64 1896, i64 8, !88, i64 1904, i64 4, !120, i64 1908, i64 4, !120, i64 1912, i64 4, !120, i64 1920, i64 8, !86, i64 1928, i64 8, !86, i64 1936, i64 16, !142, i64 1952, i64 8, !86, i64 1960, i64 4, !120, i64 1968, i64 8, !88, i64 1904, i64 24, !142, i64 1928, i64 8, !86, i64 1936, i64 16, !142, i64 1952, i64 8, !86, i64 1960, i64 4, !120, i64 1968, i64 8, !88, i64 1976, i64 4, !120, i64 1984, i64 8, !86, i64 1992, i64 8, !86, i64 2000, i64 8, !86, i64 2008, i64 8, !86, i64 2016, i64 16, !142, i64 2032, i64 8, !86, i64 2040, i64 4, !120, i64 2048, i64 8, !88, i64 2056, i64 8, !86, i64 2064, i64 8, !86, i64 2072, i64 8, !86, i64 2080, i64 8, !86, i64 2088, i64 8, !86}
!472 = !{i64 0, i64 8, !86, i64 8, i64 8, !86, i64 16, i64 8, !86, i64 24, i64 8, !86, i64 32, i64 8, !86, i64 40, i64 8, !86, i64 48, i64 8, !86, i64 56, i64 4, !120, i64 60, i64 4, !120}
!473 = !{!3, !7, i64 95088}
!474 = !{!3, !4, i64 95032}
!475 = !{!3, !4, i64 92960}
!476 = !{i64 0, i64 2, !151, i64 2, i64 2, !151, i64 4, i64 20, !142, i64 24, i64 8, !86, i64 32, i64 8, !86, i64 40, i64 8, !86, i64 48, i64 8, !86, i64 56, i64 8, !86, i64 64, i64 8, !86, i64 72, i64 8, !86, i64 80, i64 8, !86, i64 88, i64 8, !86, i64 96, i64 8, !86, i64 104, i64 4, !120, i64 112, i64 8, !88, i64 120, i64 8, !86, i64 128, i64 8, !86, i64 136, i64 8, !86, i64 144, i64 8, !86, i64 152, i64 16, !142, i64 168, i64 8, !86, i64 176, i64 4, !120, i64 184, i64 8, !88, i64 192, i64 8, !86, i64 200, i64 8, !86, i64 208, i64 8, !88, i64 216, i64 8, !86, i64 224, i64 8, !88, i64 232, i64 4, !120, i64 240, i64 8, !86, i64 248, i64 16, !142, i64 264, i64 8, !86, i64 272, i64 4, !120, i64 280, i64 8, !88, i64 288, i64 8, !86, i64 296, i64 4, !120, i64 304, i64 4, !120, i64 304, i64 4, !120, i64 304, i64 4, !120, i64 304, i64 4, !120, i64 304, i64 4, !120, i64 312, i64 8, !86, i64 320, i64 8, !86, i64 328, i64 8, !88, i64 336, i64 4, !120, i64 340, i64 4, !120, i64 344, i64 4, !120, i64 352, i64 8, !86, i64 360, i64 8, !86, i64 368, i64 16, !142, i64 384, i64 8, !86, i64 392, i64 4, !120, i64 400, i64 8, !88, i64 336, i64 24, !142, i64 360, i64 8, !86, i64 368, i64 16, !142, i64 384, i64 8, !86, i64 392, i64 4, !120, i64 400, i64 8, !88, i64 408, i64 4, !120, i64 416, i64 8, !86, i64 424, i64 8, !86, i64 432, i64 8, !86, i64 440, i64 8, !86, i64 448, i64 16, !142, i64 464, i64 8, !86, i64 472, i64 4, !120, i64 480, i64 8, !88, i64 488, i64 8, !86, i64 496, i64 8, !86, i64 504, i64 8, !86, i64 512, i64 8, !86, i64 520, i64 8, !86, i64 528, i64 8, !86, i64 536, i64 8, !86, i64 544, i64 8, !86, i64 552, i64 4, !142, i64 560, i64 4, !120, i64 564, i64 4, !120, i64 564, i64 4, !120, i64 564, i64 1, !174, i64 564, i64 1, !174, i64 564, i64 1, !174, i64 564, i64 1, !174, i64 564, i64 1, !174, i64 564, i64 1, !174, i64 565, i64 1, !174, i64 568, i64 4, !120, i64 572, i64 4, !120, i64 576, i64 4, !120, i64 584, i64 8, !86, i64 592, i64 8, !86, i64 600, i64 16, !142, i64 616, i64 8, !86, i64 624, i64 4, !120, i64 632, i64 8, !88, i64 568, i64 24, !142, i64 592, i64 8, !86, i64 600, i64 16, !142, i64 616, i64 8, !86, i64 624, i64 4, !120, i64 632, i64 8, !88, i64 640, i64 8, !86, i64 648, i64 8, !86, i64 656, i64 4, !120, i64 664, i64 4, !120, i64 668, i64 4, !120, i64 672, i64 4, !120, i64 680, i64 8, !86, i64 688, i64 8, !86, i64 696, i64 16, !142, i64 712, i64 8, !86, i64 720, i64 4, !120, i64 728, i64 8, !88, i64 664, i64 24, !142, i64 688, i64 8, !86, i64 696, i64 16, !142, i64 712, i64 8, !86, i64 720, i64 4, !120, i64 728, i64 8, !88, i64 736, i64 8, !86, i64 744, i64 8, !86, i64 752, i64 8, !86, i64 760, i64 1, !174, i64 760, i64 1, !174, i64 760, i64 1, !174, i64 768, i64 8, !86, i64 776, i64 8, !86, i64 784, i64 8, !88, i64 792, i64 8, !86, i64 800, i64 8, !88, i64 808, i64 4, !120, i64 816, i64 8, !86, i64 824, i64 16, !142, i64 840, i64 8, !86, i64 848, i64 4, !120, i64 856, i64 8, !88, i64 864, i64 8, !88, i64 872, i64 8, !88, i64 880, i64 8, !86, i64 888, i64 8, !86, i64 896, i64 8, !86, i64 904, i64 8, !86, i64 912, i64 16, !142, i64 928, i64 8, !86, i64 936, i64 4, !120, i64 944, i64 8, !88, i64 952, i64 4, !120, i64 956, i64 4, !120, i64 960, i64 4, !120, i64 968, i64 8, !86, i64 976, i64 8, !86, i64 984, i64 16, !142, i64 1000, i64 8, !86, i64 1008, i64 4, !120, i64 1016, i64 8, !88, i64 952, i64 24, !142, i64 976, i64 8, !86, i64 984, i64 16, !142, i64 1000, i64 8, !86, i64 1008, i64 4, !120, i64 1016, i64 8, !88, i64 1024, i64 8, !86, i64 1032, i64 8, !86, i64 1040, i64 8, !86, i64 1048, i64 4, !120, i64 1052, i64 4, !120, i64 1056, i64 4, !120, i64 1056, i64 4, !120, i64 1056, i64 4, !120, i64 1056, i64 4, !120, i64 1056, i64 4, !120, i64 1056, i64 4, !120, i64 1057, i64 1, !174, i64 1057, i64 4, !120, i64 1057, i64 4, !120, i64 1057, i64 4, !120, i64 1057, i64 4, !120, i64 1057, i64 4, !120, i64 1060, i64 4, !120, i64 1064, i64 4, !142, i64 1068, i64 4, !142, i64 1072, i64 4, !120, i64 1076, i64 4, !120, i64 1080, i64 8, !88, i64 1088, i64 8, !88, i64 1096, i64 8, !88, i64 1104, i64 8, !88, i64 1112, i64 8, !86, i64 1120, i64 8, !86, i64 1128, i64 8, !86, i64 1136, i64 8, !86, i64 1144, i64 8, !86, i64 1152, i64 8, !86, i64 1160, i64 8, !86, i64 1168, i64 8, !86, i64 1176, i64 4, !120, i64 1184, i64 8, !86, i64 1192, i64 8, !86, i64 1200, i64 8, !149, i64 1208, i64 8, !88, i64 1216, i64 8, !86, i64 1224, i64 8, !86, i64 1232, i64 8, !86, i64 1240, i64 8, !86, i64 1248, i64 8, !86, i64 1256, i64 8, !86, i64 1264, i64 8, !86, i64 1272, i64 8, !86, i64 1280, i64 4, !120, i64 1284, i64 4, !120, i64 1288, i64 4, !120, i64 1292, i64 4, !120, i64 1296, i64 4, !120, i64 1304, i64 8, !86, i64 1312, i64 8, !86, i64 1320, i64 16, !142, i64 1336, i64 8, !86, i64 1344, i64 4, !120, i64 1352, i64 8, !88, i64 1288, i64 24, !142, i64 1312, i64 8, !86, i64 1320, i64 16, !142, i64 1336, i64 8, !86, i64 1344, i64 4, !120, i64 1352, i64 8, !88, i64 1360, i64 8, !86, i64 1368, i64 8, !86, i64 1376, i64 8, !86, i64 1384, i64 8, !86, i64 1392, i64 8, !86, i64 1400, i64 4, !120, i64 1408, i64 8, !86, i64 1416, i64 8, !86, i64 1424, i64 8, !86, i64 1432, i64 8, !86, i64 1440, i64 8, !86, i64 1448, i64 1, !174, i64 1448, i64 1, !174, i64 1456, i64 4, !120, i64 1464, i64 8, !86, i64 1472, i64 8, !86, i64 1480, i64 8, !86}
!477 = !{!3, !4, i64 95120}
!478 = !{!3, !4, i64 93256}
!479 = !{i32 -2145130290}
!480 = !{!3, !7, i64 96584}
!481 = !{i32 -2145132029}
!482 = !{!483, !18, i64 2}
!483 = !{!"i2c_msg", !18, i64 0, !18, i64 2, !18, i64 4, !4, i64 8}
!484 = !{!483, !18, i64 0}
!485 = !{!483, !4, i64 8}
!486 = !{!483, !18, i64 4}
!487 = !{!3, !7, i64 117284}
!488 = !{!3, !7, i64 117288}
!489 = !{!3, !7, i64 117296}
!490 = !{!3, !4, i64 720}
!491 = !{!3, !5, i64 109636}
!492 = !{i32 -2146586390}
!493 = !{i32 590456, i32 590467, i32 -2146852690}
!494 = !{i32 -2146957715}
!495 = !{i32 -2146957677}
!496 = !{!341, !8, i64 2072}
!497 = !{!341, !7, i64 1948}
!498 = !{!257, !4, i64 8}
!499 = !{!3, !7, i64 109712}
!500 = !{!3, !7, i64 117316}
!501 = !{!3, !7, i64 117320}
!502 = !{!3, !7, i64 117324}
!503 = !{!3, !7, i64 117328}
!504 = !{i64 0, i64 4, !120, i64 4, i64 4, !120, i64 8, i64 4, !120, i64 12, i64 4, !120}
!505 = !{!3, !4, i64 117336}
!506 = !{!63, !7, i64 188}
!507 = !{!63, !7, i64 192}
!508 = !{i32 -2145098868}
!509 = !{!342, !4, i64 2088}
!510 = !{!511, !7, i64 84}
!511 = !{!"v4l2_capability", !5, i64 0, !5, i64 16, !5, i64 48, !7, i64 80, !7, i64 84, !7, i64 88, !5, i64 92}
!512 = !{!341, !7, i64 2172}
!513 = !{!511, !7, i64 88}
!514 = !{!3, !22, i64 117272}
!515 = !{!516, !7, i64 0}
!516 = !{!"v4l2_fmtdesc", !7, i64 0, !7, i64 4, !7, i64 8, !5, i64 12, !7, i64 44, !5, i64 48}
!517 = !{i64 0, i64 4, !120, i64 4, i64 4, !120, i64 8, i64 4, !120, i64 12, i64 32, !142, i64 44, i64 4, !120, i64 48, i64 16, !142}
!518 = !{!519, !7, i64 0}
!519 = !{!"v4l2_pix_format", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !5, i64 36, !7, i64 40, !7, i64 44}
!520 = !{!519, !7, i64 4}
!521 = !{!519, !7, i64 24}
!522 = !{!519, !7, i64 12}
!523 = !{!519, !7, i64 8}
!524 = !{!519, !7, i64 20}
!525 = !{!519, !7, i64 16}
!526 = !{!527, !7, i64 20}
!527 = !{!"v4l2_window", !65, i64 0, !7, i64 16, !7, i64 20, !4, i64 24, !7, i64 32, !4, i64 40, !5, i64 48}
!528 = !{!527, !5, i64 48}
!529 = !{!527, !7, i64 16}
!530 = !{!527, !4, i64 24}
!531 = !{!527, !7, i64 32}
!532 = !{!527, !4, i64 40}
!533 = !{!527, !7, i64 0}
!534 = !{!527, !7, i64 4}
!535 = !{!3, !7, i64 117308}
!536 = !{!527, !7, i64 8}
!537 = !{!3, !7, i64 117312}
!538 = !{!527, !7, i64 12}
!539 = !{!540, !7, i64 0}
!540 = !{!"v4l2_vbi_format", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !5, i64 16, !5, i64 24, !7, i64 32, !5, i64 36}
!541 = !{!540, !7, i64 4}
!542 = !{!540, !7, i64 8}
!543 = !{!540, !7, i64 12}
!544 = !{!540, !7, i64 32}
!545 = !{!136, !7, i64 100}
!546 = !{!81, !4, i64 32}
!547 = !{!548, !4, i64 40}
!548 = !{!"v4l2_subdev_vbi_ops", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48}
!549 = !{!3, !4, i64 744}
!550 = !{!63, !7, i64 1192}
!551 = !{!63, !7, i64 1196}
!552 = !{!63, !7, i64 200}
!553 = !{!63, !7, i64 208}
!554 = !{!548, !4, i64 32}
!555 = !{!548, !4, i64 48}
!556 = !{!557, !7, i64 0}
!557 = !{!"v4l2_framebuffer", !7, i64 0, !7, i64 4, !4, i64 8, !558, i64 16}
!558 = !{!"", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28}
!559 = !{!557, !7, i64 24}
!560 = !{!557, !7, i64 16}
!561 = !{!557, !7, i64 20}
!562 = !{!557, !7, i64 28}
!563 = !{!557, !7, i64 32}
!564 = !{!557, !7, i64 40}
!565 = !{!557, !7, i64 36}
!566 = !{!557, !4, i64 8}
!567 = !{!557, !7, i64 4}
!568 = !{!63, !5, i64 160}
!569 = !{!570, !7, i64 0}
!570 = !{!"v4l2_audioout", !7, i64 0, !5, i64 4, !7, i64 36, !7, i64 40, !5, i64 44}
!571 = !{!572, !7, i64 0}
!572 = !{!"v4l2_cropcap", !7, i64 0, !65, i64 4, !65, i64 20, !573, i64 36}
!573 = !{!"v4l2_fract", !7, i64 0, !7, i64 4}
!574 = !{!572, !7, i64 36}
!575 = !{!572, !7, i64 40}
!576 = !{!577, !7, i64 0}
!577 = !{!"v4l2_selection", !7, i64 0, !7, i64 4, !7, i64 8, !65, i64 12, !5, i64 28}
!578 = !{!577, !7, i64 4}
!579 = !{!577, !7, i64 12}
!580 = !{!577, !7, i64 16}
!581 = !{!577, !7, i64 20}
!582 = !{!577, !7, i64 24}
!583 = !{!65, !7, i64 12}
!584 = !{!65, !7, i64 8}
!585 = !{!3, !7, i64 96820}
!586 = !{!587, !7, i64 0}
!587 = !{!"v4l2_enc_idx", !7, i64 0, !7, i64 4, !5, i64 8, !5, i64 24}
!588 = !{!587, !7, i64 4}
!589 = !{i64 0, i64 8, !149, i64 8, i64 8, !149, i64 16, i64 4, !120, i64 20, i64 4, !120, i64 24, i64 8, !142}
!590 = !{!591, !7, i64 0}
!591 = !{!"v4l2_encoder_cmd", !7, i64 0, !7, i64 4, !5, i64 8}
!592 = !{!591, !7, i64 4}
!593 = !{!594, !7, i64 0}
!594 = !{!"v4l2_decoder_cmd", !7, i64 0, !7, i64 4, !5, i64 8}
!595 = !{!388, !7, i64 0}
!596 = !{!388, !7, i64 36}
!597 = !{!257, !4, i64 40}
!598 = !{!257, !4, i64 16}
!599 = !{!600, !7, i64 100}
!600 = !{!"v4l2_sliced_vbi_cap", !18, i64 0, !5, i64 2, !7, i64 100, !5, i64 104}
!601 = !{!600, !18, i64 0}
!602 = !{!161, !4, i64 0}
!603 = !{!3, !22, i64 1472}
!604 = !{!341, !4, i64 1872}
!605 = !{!341, !7, i64 2404}
!606 = !{!341, !22, i64 2256}
!607 = !{!608, !7, i64 36}
!608 = !{!"v4l2_dbg_register", !609, i64 0, !7, i64 36, !8, i64 40, !8, i64 48}
!609 = !{!"v4l2_dbg_match", !7, i64 0, !5, i64 4}
!610 = !{!608, !8, i64 40}
!611 = !{!608, !8, i64 48}
!612 = !{!613, !7, i64 0}
!613 = !{!"v4l2_event_subscription", !7, i64 0, !7, i64 4, !7, i64 8, !5, i64 12}
!614 = !{!161, !4, i64 32}
!615 = !{!616, !5, i64 0}
!616 = !{!"ivtv_dma_frame", !5, i64 0, !7, i64 4, !4, i64 8, !4, i64 16, !65, i64 24, !65, i64 40, !7, i64 56, !7, i64 60}
!617 = !{!616, !4, i64 8}
!618 = !{!594, !7, i64 4}
!619 = !{!620, !7, i64 0}
!620 = !{!"video_event", !7, i64 0, !22, i64 8, !5, i64 16}
!621 = !{i32 -2146862750, i32 -2146862711, i32 -2146862690, i32 -2146862653, i32 -2146862630, i32 -2146862760}
!622 = !{i32 -2146854430, i32 -2146854391, i32 -2146854370, i32 -2146854333, i32 -2146854310, i32 -2146854301, i32 -2146854247}
!623 = !{i32 -2145097129}
!624 = !{i32 -2146855618, i32 -2146855579, i32 -2146855558, i32 -2146855521, i32 -2146855498, i32 -2146855489, i32 -2146855435}
!625 = !{i32 -2146875553, i32 -2146875514, i32 -2146875493, i32 -2146875456, i32 -2146875433, i32 -2146875424, i32 -2146875370}
!626 = !{!341, !4, i64 2592}
!627 = !{!628, !7, i64 8}
!628 = !{!"ivtv_sg_host_element", !7, i64 0, !7, i64 4, !7, i64 8}
!629 = !{!628, !7, i64 0}
!630 = !{!341, !7, i64 2620}
!631 = !{!3, !4, i64 25576}
!632 = !{!3, !4, i64 25568}
!633 = !{!341, !7, i64 2264}
!634 = !{i32 -2145118252}
!635 = !{!63, !5, i64 1172}
!636 = !{!64, !7, i64 16}
!637 = !{!341, !7, i64 2568}
!638 = !{!64, !7, i64 72}
!639 = !{!63, !8, i64 1160}
!640 = !{!341, !4, i64 2584}
!641 = !{!628, !7, i64 4}
!642 = !{!62, !8, i64 16}
!643 = !{!341, !7, i64 2616}
!644 = !{!341, !8, i64 2608}
!645 = !{!341, !18, i64 2576}
!646 = !{!341, !7, i64 2624}
!647 = !{!3, !7, i64 25936}
!648 = !{i32 -2146883873, i32 -2146883834, i32 -2146883813, i32 -2146883776, i32 -2146883753, i32 -2146883883}
!649 = !{!341, !4, i64 2600}
!650 = !{!651, !7, i64 0}
!651 = !{!"ivtv_sg_element", !7, i64 0, !7, i64 4, !7, i64 8}
!652 = !{!651, !7, i64 4}
!653 = !{!651, !7, i64 8}
!654 = !{!3, !22, i64 74016}
!655 = !{i32 -2145119991}
!656 = !{i32 -2142840070, i32 -2142840045, i32 -2142839775, i32 -2142839978, i32 -2142839947, i32 -2142839917}
!657 = !{!336, !4, i64 88}
!658 = !{!3, !7, i64 74096}
!659 = !{!3, !7, i64 25668}
!660 = !{!341, !7, i64 2536}
!661 = !{!341, !7, i64 2288}
!662 = !{!64, !7, i64 80}
!663 = !{!64, !7, i64 88}
!664 = !{!64, !7, i64 84}
!665 = !{!63, !5, i64 228}
!666 = !{!63, !5, i64 1200}
!667 = !{!63, !7, i64 220}
!668 = !{!64, !7, i64 0}
!669 = !{!64, !7, i64 12}
!670 = !{!63, !7, i64 224}
!671 = !{i64 0, i64 4, !120, i64 4, i64 4, !120, i64 8, i64 4, !120}
!672 = !{!341, !7, i64 2268}
!673 = !{!341, !7, i64 2272}
!674 = !{!341, !7, i64 2292}
!675 = !{!341, !8, i64 2280}
!676 = !{i32 -2146883127, i32 -2146883088, i32 -2146883067, i32 -2146883030, i32 -2146883007, i32 -2146883137}
!677 = !{i32 -2146978171}
!678 = !{i32 -2146978133}
!679 = !{i32 -2146978838}
!680 = !{i32 -2146978800}
!681 = !{!341, !7, i64 2560}
!682 = !{!3, !7, i64 109732}
!683 = !{!3, !7, i64 109736}
!684 = !{!3, !7, i64 109728}
!685 = !{!3, !7, i64 109724}
!686 = !{!341, !7, i64 2412}
!687 = !{!341, !4, i64 2544}
!688 = !{!62, !18, i64 26}
!689 = !{!341, !7, i64 2400}
!690 = !{i32 -2142840663, i32 -2142840638, i32 -2142840368, i32 -2142840571, i32 -2142840540, i32 -2142840510}
!691 = !{!336, !4, i64 80}
!692 = !{!693, !4, i64 8}
!693 = !{!"ivtv_api_info", !7, i64 0, !4, i64 8}
!694 = !{!693, !7, i64 0}
!695 = !{!696, !22, i64 0}
!696 = !{!"ivtv_api_cache", !22, i64 0, !5, i64 8}
!697 = !{!41, !5, i64 16}
!698 = !{!41, !4, i64 0}
!699 = !{i32 -2146902863, i32 -2146902824, i32 -2146902803, i32 -2146902766, i32 -2146902743, i32 -2146902873}
!700 = !{i32 -2145139727}
!701 = !{i32 -2145137988}
!702 = !{i32 -2146896477, i32 -2146896438, i32 -2146896417, i32 -2146896380, i32 -2146896357, i32 -2146896348, i32 -2146896294}
!703 = !{i32 632288}
!704 = !{i32 -2147002656}
!705 = !{i32 -2147002618}
!706 = !{!346, !4, i64 0}
!707 = !{i32 -2147003323}
!708 = !{i32 -2147003285}
!709 = !{!346, !4, i64 8}
!710 = !{i32 -2142870561, i32 -2142870536, i32 -2142870266, i32 -2142870469, i32 -2142870438, i32 -2142870408}
!711 = !{!336, !4, i64 40}
!712 = !{i32 -2142865148, i32 -2142865123, i32 -2142864853, i32 -2142865056, i32 -2142865025, i32 -2142864995}
!713 = !{i32 -2142871784, i32 -2142871759, i32 -2142871489, i32 -2142871692, i32 -2142871661, i32 -2142871631}
!714 = !{!336, !4, i64 32}
!715 = !{!341, !7, i64 2304}
!716 = !{i32 -2141761822}
!717 = !{i32 -2141757874}
!718 = !{i32 -2146610667}
!719 = !{i32 -2146887027, i32 -2146886988, i32 -2146886967, i32 -2146886930, i32 -2146886907, i32 -2146887037}
!720 = !{i32 -2146316084, i32 -2146316045, i32 -2146316024, i32 -2146315987, i32 -2146315964, i32 -2146316094}
!721 = !{i32 -2146886281, i32 -2146886242, i32 -2146886221, i32 -2146886184, i32 -2146886161, i32 -2146886291}
!722 = !{i32 -2146878707, i32 -2146878668, i32 -2146878647, i32 -2146878610, i32 -2146878587, i32 -2146878578, i32 -2146878524}
!723 = !{i32 -2146981992}
!724 = !{i32 -2146981954}
!725 = !{!3, !7, i64 109964}
!726 = !{!83, !4, i64 24}
!727 = !{i32 -2146879895, i32 -2146879856, i32 -2146879835, i32 -2146879798, i32 -2146879775, i32 -2146879766, i32 -2146879712}
!728 = !{i32 -2146316334, i32 -2146316295, i32 -2146316274, i32 -2146316237, i32 -2146316214, i32 -2146316344}
!729 = !{!730, !7, i64 12}
!730 = !{!"", !4, i64 0, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !4, i64 32}
!731 = !{!730, !4, i64 0}
!732 = !{!730, !7, i64 16}
!733 = !{!341, !18, i64 1956}
!734 = !{!730, !7, i64 24}
!735 = !{!730, !4, i64 32}
!736 = !{!341, !4, i64 424}
!737 = !{!341, !4, i64 1888}
!738 = !{!341, !4, i64 2080}
!739 = !{!341, !4, i64 2144}
!740 = !{!342, !4, i64 1872}
!741 = !{!730, !7, i64 20}
!742 = !{!730, !7, i64 8}
!743 = !{!342, !4, i64 424}
!744 = !{!745, !4, i64 0}
!745 = !{!"v4l2_file_operations", !4, i64 0, !4, i64 8, !4, i64 16, !4, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 56, !4, i64 64, !4, i64 72}
!746 = !{i32 -2145121406}
!747 = !{!341, !7, i64 2528}
!748 = !{!749, !22, i64 0}
!749 = !{!"ivtv_dma_page_info", !22, i64 0, !22, i64 8, !22, i64 16, !7, i64 24, !7, i64 28, !7, i64 32}
!750 = !{!749, !7, i64 24}
!751 = !{!749, !7, i64 28}
!752 = !{!749, !22, i64 8}
!753 = !{!749, !22, i64 16}
!754 = !{!749, !7, i64 32}
!755 = !{i32 -2142513062}
!756 = !{i32 -2142512878}
!757 = !{!758, !4, i64 8}
!758 = !{!"pv_irq_ops", !759, i64 0, !759, i64 8, !759, i64 16, !759, i64 24, !4, i64 32, !4, i64 40, !4, i64 48}
!759 = !{!"paravirt_callee_save", !4, i64 0}
!760 = !{i32 -2145865389, i32 -2145865364, i32 -2145865094, i32 -2145865297, i32 -2145865266, i32 -2145865236}
!761 = !{i32 -2145865890, i32 -2145864868, i32 -2145864846, i32 -2145864833, i32 -2145864510, i32 -2145864443, i32 -2145864741, i32 -2145864714, i32 -2145864686, i32 -2145864656}
!762 = !{!763, !7, i64 16}
!763 = !{!"scatterlist", !22, i64 0, !22, i64 8, !7, i64 16, !7, i64 20, !8, i64 24, !7, i64 32}
!764 = !{!763, !7, i64 20}
!765 = !{!763, !22, i64 8}
!766 = !{i32 -2142944611, i32 -2142944586, i32 -2142944316, i32 -2142944519, i32 -2142944488, i32 -2142944458}
!767 = !{!763, !22, i64 0}
!768 = !{i32 -2142944062, i32 -2142944037, i32 -2142943767, i32 -2142943970, i32 -2142943939, i32 -2142943909}
!769 = !{i32 -2142943496, i32 -2142943471, i32 -2142943201, i32 -2142943404, i32 -2142943373, i32 -2142943343}
!770 = !{i32 -2142519532}
!771 = !{i32 -2145781269}
!772 = !{!190, !7, i64 11688}
!773 = !{i32 -2146634322}
!774 = !{i32 -2145784407}
!775 = !{i32 -2142519626}
!776 = !{!758, !4, i64 0}
!777 = !{i32 -2145869269, i32 -2145869244, i32 -2145868974, i32 -2145869177, i32 -2145869146, i32 -2145869116}
!778 = !{i32 -2145869740, i32 -2145867735, i32 -2145867713, i32 -2145867700, i32 -2145867377, i32 -2145867310, i32 -2145867608, i32 -2145867581, i32 -2145867553, i32 -2145867523}
!779 = !{!758, !4, i64 16}
!780 = !{i32 -2145862813, i32 -2145862788, i32 -2145862518, i32 -2145862721, i32 -2145862690, i32 -2145862660}
!781 = !{i32 -2145863298, i32 -2145862292, i32 -2145862270, i32 -2145862257, i32 -2145861934, i32 -2145861867, i32 -2145862165, i32 -2145862138, i32 -2145862110, i32 -2145862080}
!782 = !{!37, !7, i64 19888}
!783 = !{!763, !7, i64 32}
!784 = !{!763, !8, i64 24}
!785 = !{!3, !8, i64 45824}
!786 = !{i32 -2142867472, i32 -2142867447, i32 -2142867177, i32 -2142867380, i32 -2142867349, i32 -2142867319}
!787 = !{i32 -2142874108, i32 -2142874083, i32 -2142873813, i32 -2142874016, i32 -2142873985, i32 -2142873955}
!788 = !{!37, !7, i64 160}
!789 = !{i32 -2142866879, i32 -2142866854, i32 -2142866584, i32 -2142866787, i32 -2142866756, i32 -2142866726}
!790 = !{i32 -2142872205, i32 -2142872180, i32 -2142871910, i32 -2142872113, i32 -2142872082, i32 -2142872052}
!791 = !{!336, !4, i64 48}
!792 = !{i32 -2142871702, i32 -2142871677, i32 -2142871407, i32 -2142871610, i32 -2142871579, i32 -2142871549}
!793 = !{i32 -2142942835, i32 -2142942810, i32 -2142942540, i32 -2142942743, i32 -2142942712, i32 -2142942682}
!794 = !{i32 -2142942268, i32 -2142942243, i32 -2142941973, i32 -2142942176, i32 -2142942145, i32 -2142942115}
!795 = !{i32 -2143125134, i32 -2143125109, i32 -2143124839, i32 -2143125042, i32 -2143125011, i32 -2143124981}
!796 = !{!797, !22, i64 0}
!797 = !{!"page", !22, i64 0, !5, i64 8, !5, i64 16, !5, i64 24, !5, i64 32, !5, i64 48, !4, i64 56}
!798 = !{i32 -2146338987, i32 -2146338948, i32 -2146338927, i32 -2146338890, i32 -2146338867, i32 -2146338858, i32 -2146338814}
!799 = !{i32 -2147005647}
!800 = !{i32 -2147005609}
!801 = !{i32 -2142871109, i32 -2142871084, i32 -2142870814, i32 -2142871017, i32 -2142870986, i32 -2142870956}
!802 = !{!336, !4, i64 56}
!803 = !{!3, !7, i64 45832}
!804 = !{!3, !7, i64 26104}
!805 = !{i32 -2142872885, i32 -2142872860, i32 -2142872590, i32 -2142872793, i32 -2142872762, i32 -2142872732}
!806 = !{i32 -2145145061}
!807 = !{i32 -2145146800}
!808 = !{i32 -2146910682, i32 -2146910643, i32 -2146910622, i32 -2146910585, i32 -2146910562, i32 -2146910692}
!809 = !{i32 -2146909936, i32 -2146909897, i32 -2146909876, i32 -2146909839, i32 -2146909816, i32 -2146909946}
!810 = !{!811, !7, i64 0}
!811 = !{!"v4l2_sliced_vbi_data", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !5, i64 16}
!812 = !{!811, !7, i64 8}
!813 = !{!811, !7, i64 4}
!814 = !{i64 0, i64 5, !142}
!815 = !{!59, !7, i64 1312}
!816 = !{!59, !7, i64 1304}
!817 = !{i32 -2146902495, i32 -2146902456, i32 -2146902435, i32 -2146902398, i32 -2146902375, i32 -2146902505}
!818 = !{!819, !4, i64 8}
!819 = !{!"v4l2_decode_vbi_line", !7, i64 0, !4, i64 8, !7, i64 16, !7, i64 20}
!820 = !{!548, !4, i64 0}
!821 = !{!819, !7, i64 20}
!822 = !{!819, !7, i64 16}
!823 = !{!819, !7, i64 0}
!824 = !{i32 638151}
!825 = !{!3, !7, i64 110992}
!826 = !{i32 -2146901749, i32 -2146901710, i32 -2146901689, i32 -2146901652, i32 -2146901629, i32 -2146901759}
!827 = !{!548, !4, i64 8}
!828 = !{!548, !4, i64 16}
!829 = !{!59, !5, i64 1316}
!830 = !{!59, !5, i64 1308}
!831 = !{i64 0, i64 2, !142, i64 2, i64 2, !142}
!832 = !{i32 -2146894175, i32 -2146894136, i32 -2146894115, i32 -2146894078, i32 -2146894055, i32 -2146894046, i32 -2146893992}
!833 = !{i32 -2145114625}
!834 = !{i64 0, i64 4, !120, i64 4, i64 4, !120, i64 8, i64 4, !120, i64 12, i64 4, !120, i64 16, i64 4, !120, i64 20, i64 4, !120, i64 24, i64 4, !120, i64 28, i64 4, !120, i64 32, i64 4, !120, i64 36, i64 4, !120, i64 40, i64 4, !120, i64 44, i64 4, !120, i64 48, i64 4, !120, i64 52, i64 4, !120, i64 56, i64 4, !120, i64 60, i64 4, !120, i64 64, i64 4, !120, i64 68, i64 4, !120, i64 72, i64 4, !120, i64 76, i64 4, !120, i64 80, i64 4, !120, i64 84, i64 4, !120, i64 88, i64 4, !120}
!835 = !{!63, !7, i64 172}
!836 = !{!64, !7, i64 36}
!837 = !{!63, !7, i64 176}
!838 = !{!64, !7, i64 40}
!839 = !{!63, !7, i64 180}
!840 = !{!64, !7, i64 44}
!841 = !{!63, !7, i64 184}
!842 = !{!63, !7, i64 196}
!843 = !{!64, !7, i64 48}
!844 = !{!64, !7, i64 4}
!845 = !{!64, !7, i64 8}
!846 = !{!64, !7, i64 28}
!847 = !{!64, !7, i64 32}
!848 = !{!64, !7, i64 52}
!849 = !{!64, !7, i64 24}
!850 = !{!64, !7, i64 20}
!851 = !{!3, !7, i64 116228}
!852 = !{!3, !7, i64 116232}
!853 = !{!64, !7, i64 76}
!854 = !{!64, !7, i64 56}
!855 = !{i32 -2145112886}
!856 = !{!64, !7, i64 64}
!857 = !{!64, !7, i64 60}
!858 = !{!63, !7, i64 0}
!859 = !{!63, !7, i64 4}
!860 = !{!63, !7, i64 8}
!861 = !{!63, !7, i64 16}
!862 = !{!63, !7, i64 12}
!863 = !{!63, !7, i64 20}
!864 = !{!63, !7, i64 24}
!865 = !{!63, !7, i64 28}
!866 = !{!63, !7, i64 32}
!867 = !{!63, !7, i64 40}
!868 = !{!63, !7, i64 36}
!869 = !{!63, !7, i64 44}
!870 = !{!63, !7, i64 156}
!871 = !{!64, !7, i64 68}
!872 = !{!63, !7, i64 84}
!873 = !{!63, !7, i64 92}
!874 = !{!63, !7, i64 100}
!875 = !{!63, !7, i64 108}
!876 = !{!63, !7, i64 80}
!877 = !{!63, !7, i64 88}
!878 = !{!63, !7, i64 72}
!879 = !{!63, !7, i64 76}
!880 = !{!63, !7, i64 64}
!881 = !{!63, !7, i64 68}
!882 = !{!63, !7, i64 56}
!883 = !{!63, !7, i64 60}
!884 = !{!63, !7, i64 140}
!885 = !{!63, !7, i64 96}
!886 = !{!63, !7, i64 104}
!887 = !{!63, !7, i64 112}
!888 = !{!63, !7, i64 116}
!889 = !{!63, !7, i64 120}
!890 = !{!63, !7, i64 124}
!891 = !{!63, !7, i64 128}
!892 = !{!63, !7, i64 132}
!893 = !{!63, !7, i64 136}
!894 = !{!63, !7, i64 52}
!895 = !{!63, !7, i64 148}
!896 = !{!63, !7, i64 152}
!897 = !{!3, !5, i64 117236}
!898 = !{i32 -2146972805}
!899 = !{i32 -2146972767}
!900 = !{!616, !4, i64 16}
!901 = !{!616, !7, i64 24}
!902 = !{!616, !7, i64 28}
!903 = !{!616, !7, i64 32}
!904 = !{!616, !7, i64 36}
!905 = !{!616, !7, i64 56}
!906 = !{!616, !7, i64 60}
!907 = !{!63, !5, i64 1173}
!908 = !{!63, !7, i64 204}
!909 = !{!616, !7, i64 40}
!910 = !{!616, !7, i64 44}
!911 = !{!616, !7, i64 48}
!912 = !{!616, !7, i64 52}
!913 = !{!63, !7, i64 48}
!914 = !{!63, !7, i64 144}
!915 = !{!63, !7, i64 164}
!916 = !{!63, !7, i64 168}
!917 = !{!63, !4, i64 1152}
!918 = !{i32 -2146878507, i32 -2146878468, i32 -2146878447, i32 -2146878410, i32 -2146878387, i32 -2146878517}
!919 = !{i32 -2142841933, i32 -2142841908, i32 -2142841638, i32 -2142841841, i32 -2142841810, i32 -2142841780}
!920 = !{i32 -2146973472}
!921 = !{i32 -2146973434}
!922 = !{i32 -2146602147}
!923 = !{i32 -2146870187, i32 -2146870148, i32 -2146870127, i32 -2146870090, i32 -2146870067, i32 -2146870058, i32 -2146870004}
!924 = !{i32 574699, i32 574710, i32 -2146868447}
!925 = !{i32 -2142834704, i32 -2142834679, i32 -2142834409, i32 -2142834612, i32 -2142834581, i32 -2142834551}
!926 = !{i32 -2142840030, i32 -2142840005, i32 -2142839735, i32 -2142839938, i32 -2142839907, i32 -2142839877}
!927 = !{i32 -2142839527, i32 -2142839502, i32 -2142839232, i32 -2142839435, i32 -2142839404, i32 -2142839374}
!928 = !{i32 -2142910660, i32 -2142910635, i32 -2142910365, i32 -2142910568, i32 -2142910537, i32 -2142910507}
!929 = !{i32 -2142910093, i32 -2142910068, i32 -2142909798, i32 -2142910001, i32 -2142909970, i32 -2142909940}
!930 = !{i32 -2143092959, i32 -2143092934, i32 -2143092664, i32 -2143092867, i32 -2143092836, i32 -2143092806}
!931 = !{i32 -2146306812, i32 -2146306773, i32 -2146306752, i32 -2146306715, i32 -2146306692, i32 -2146306683, i32 -2146306639}
!932 = !{!63, !7, i64 980}
!933 = !{!63, !7, i64 984}
!934 = !{!63, !7, i64 1072}
!935 = !{!63, !7, i64 1076}
!936 = !{i32 -2146877761, i32 -2146877722, i32 -2146877701, i32 -2146877664, i32 -2146877641, i32 -2146877771}
!937 = !{i32 -2142840710, i32 -2142840685, i32 -2142840415, i32 -2142840618, i32 -2142840587, i32 -2142840557}
