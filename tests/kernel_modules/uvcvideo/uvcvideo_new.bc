; ModuleID = 'drivers/media/usb/uvc/uvcvideo.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.uvc_driver = type { %struct.usb_driver }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.__wait_queue_head, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.atomic_t, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.device*, %struct.device_private*, %struct.kobject, i8*, %struct.device_type*, %struct.mutex, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.dev_pin_info*, %struct.list_head, i32, %struct.dma_map_ops*, i64*, i64, i64, %struct.device_dma_parameters*, %struct.list_head, %struct.dma_coherent_mem*, %struct.cma*, %union.anon.79, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.klist_node, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.iommu_fwspec*, i8 }
%struct.device_private = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, %struct.delayed_work, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [32 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16, i8, %struct.lock_class_key*, %struct.lock_class_key }
%struct.lock_class_key = type { [8 x %struct.lockdep_subclass_key] }
%struct.lockdep_subclass_key = type { i8 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.lockdep_map, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon, i8*, i16, i16, i32, %struct.kernfs_iattrs* }
%struct.lockdep_map = type { %struct.lock_class_key*, [2 x %struct.lock_class*], i8*, i32, i64 }
%struct.lock_class = type { %struct.hlist_node, %struct.list_head, %struct.lockdep_subclass_key*, i32, i32, i64, [13 x %struct.stack_trace], %struct.list_head, %struct.list_head, i32, i64, i8*, i32, [4 x i64], [4 x i64] }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.stack_trace = type { i32, i32, i64*, i32 }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)*, %struct.lock_class_key }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, %union.anon.3, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, i8*, %struct.list_head, %struct.list_head, %struct.address_space* }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.0, %struct.list_head, %struct.list_head, %union.anon.50 }
%struct.seqcount = type { i32, %struct.lockdep_map }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%struct.lockref = type { %union.anon.47 }
%union.anon.47 = type { %struct.anon.48 }
%struct.anon.48 = type { %struct.spinlock, i32 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*, i32)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, i8*, %struct.xattr_handler**, %struct.fscrypt_operations*, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, [32 x i8], [16 x i8], i8*, i32, i32, i32, %struct.mutex, i8*, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %union.anon.3, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, [32 x i8], %struct.list_lru, [40 x i8], %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [36 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [16 x i8] }
%struct.file_system_type = type { i8*, i32, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.module = type { i32, %struct.list_head, [56 x i8], %struct.module_kobject, %struct.module_attribute*, i8*, i8*, %struct.kobject*, %struct.kernel_symbol*, i32*, i32, %struct.mutex, %struct.kernel_param*, i32, i32, %struct.kernel_symbol*, i32*, %struct.kernel_symbol*, i32*, i32, i32, %struct.kernel_symbol*, i32*, i8, i8, %struct.kernel_symbol*, i32*, i32, i32, %struct.exception_table_entry*, i32 ()*, [56 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i64, i32, %struct.list_head, %struct.bug_entry*, %struct.mod_kallsyms*, %struct.mod_kallsyms, %struct.module_sect_attrs*, %struct.module_notes_attrs*, i8*, i8*, i32, i32, %struct.tracepoint**, i32, i8**, %struct.trace_event_call**, i32, %struct.trace_enum_map**, i32, i32, i64*, i8, i8, %struct.klp_modinfo*, %struct.list_head, %struct.list_head, void ()*, %struct.atomic_t, void ()**, i32, [36 x i8] }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.module_param_attrs = type opaque
%struct.completion = type { i32, %struct.__wait_queue_head }
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.79 }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_symbol = type { i64, i8* }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.module_layout = type { i8*, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { %struct.module*, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.mod_arch_specific = type {}
%struct.bug_entry = type { i32, i32, i16, i16 }
%struct.mod_kallsyms = type { %struct.elf64_sym*, i32, i8* }
%struct.elf64_sym = type { i32, i8, i8, i16, i64, i64 }
%struct.module_sect_attrs = type opaque
%struct.module_notes_attrs = type opaque
%struct.tracepoint = type { i8*, %struct.qspinlock, i32 ()*, void ()*, %struct.tracepoint_func* }
%struct.qspinlock = type { %struct.atomic_t }
%struct.tracepoint_func = type { i8*, i8*, i32 }
%struct.trace_event_call = type opaque
%struct.trace_enum_map = type opaque
%struct.klp_modinfo = type { %struct.elf64_hdr, %struct.elf64_shdr*, i8*, i32 }
%struct.elf64_hdr = type { [16 x i8], i16, i16, i32, i64, i64, i64, i32, i16, i16, i16, i16, i16, i16 }
%struct.elf64_shdr = type { i32, i32, i64, i64, i64, i64, i32, i32, i64, i64 }
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, %struct.dquot** (%struct.inode*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.atomic_t, %struct.__wait_queue_head, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %struct.qspinlock, i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.page = type { i64, %union.anon.6, %union.anon.3, %union.anon.3, %union.anon.0, %union.anon.3, %struct.mem_cgroup* }
%union.anon.6 = type { %struct.address_space* }
%struct.mem_cgroup = type opaque
%struct.shrink_control = type { i32, i64, i32, %struct.mem_cgroup* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.atomic_t*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %union.anon.3, %struct.list_head, %struct.raw_spinlock, %struct.qspinlock, %struct.task_struct*, %struct.lockdep_map }
%struct.raw_spinlock = type { %struct.qspinlock, i32, i32, i8*, %struct.lockdep_map }
%struct.task_struct = type { %union.anon.3, i64, i8*, %struct.atomic_t, i32, i32, %struct.llist_node, i32, i32, i32, i64, %struct.task_struct*, i32, i32, i32, i32, i32, i32, %struct.sched_class*, [16 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.task_group*, %struct.sched_dl_entity, %struct.hlist_head, i32, i32, i32, %struct.cpumask, i64, i8, %struct.list_head, i32, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, [3 x %struct.pid_link], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.task_cputime, [3 x %struct.list_head], %struct.cred*, %struct.cred*, %struct.cred*, [16 x i8], %struct.nameidata*, %struct.sysv_sem, %union.anon.0, i64, %struct.fs_struct*, %struct.files_struct*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.audit_context*, %struct.atomic_t, i32, %struct.seccomp, i32, i32, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root, %struct.rb_node*, %struct.rt_mutex_waiter*, %struct.mutex_waiter*, i32, i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, i32, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, i64, %struct.siginfo*, %struct.task_io_accounting, i64, i64, i64, %struct.nodemask_t, %struct.seqcount, i32, i32, %struct.css_set*, %struct.list_head, i32, %struct.robust_list_head*, %struct.compat_robust_list_head*, %struct.list_head, %struct.futex_pi_state*, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.mempolicy*, i16, i16, i32, i32, i32, i32, i64, i64, i64, i64, %struct.callback_head, %struct.list_head, %struct.numa_group*, i64*, i64, [3 x i64], i64, %struct.tlbflush_unmap_batch, %struct.callback_head, %struct.pipe_inode_info*, %struct.page_frag, %struct.task_delay_info*, i32, i32, i32, i64, i32, [32 x %struct.latency_record], i64, i64, i32, i32, %struct.ftrace_ret_stack*, i64, %struct.atomic_t, %struct.atomic_t, i64, i64, i32, i32, i8*, %struct.kcov*, %struct.mem_cgroup*, i32, i32, i32, %struct.uprobe_task*, i32, i32, i64, i32, %struct.task_struct*, %struct.atomic_t, %struct.thread_struct }
%struct.llist_node = type { %struct.llist_node* }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics, i32, %struct.sched_entity*, %struct.cfs_rq*, %struct.cfs_rq*, [32 x i8], %struct.sched_avg, [24 x i8] }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.cfs_rq = type opaque
%struct.sched_avg = type { i64, i64, i32, i32, i64, i64 }
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity*, %struct.sched_rt_entity*, %struct.rt_rq*, %struct.rt_rq* }
%struct.rt_rq = type opaque
%struct.task_group = type opaque
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, %struct.hrtimer }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.timerqueue_head, i64 ()*, i64, [16 x i8] }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, %struct.seqcount, %struct.hrtimer*, i32, i32, i32, i8, i8, i8, i64, %struct.hrtimer*, i32, i32, i32, i32, [8 x i8], [4 x %struct.hrtimer_clock_base] }
%struct.timerqueue_head = type { %struct.rb_root, %struct.timerqueue_node* }
%struct.cpumask = type { [128 x i64] }
%struct.sched_info = type { i64, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.mm_struct = type { %struct.vm_area_struct*, %struct.rb_root, i32, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %union.anon.3*, %struct.atomic_t, %struct.atomic_t, %union.anon.3, %union.anon.3, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [46 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.cpumask*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.task_struct*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_mm*, %struct.cpumask, i64, i64, i32, i8, %struct.uprobes_state, %union.anon.3, %struct.work_struct }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %union.anon.3, i64, %struct.timerqueue_node, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.mempolicy*, %struct.vm_userfaultfd_ctx }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type { %struct.userfaultfd_ctx* }
%struct.userfaultfd_ctx = type opaque
%struct.mm_rss_stat = type { [4 x %union.anon.3] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16, i8* }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_mm = type opaque
%struct.uprobes_state = type { %struct.xol_area* }
%struct.xol_area = type opaque
%struct.vmacache = type { i32, [4 x %struct.vm_area_struct*] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.8 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid_link = type { %struct.hlist_node, %struct.pid* }
%struct.pid = type { %struct.atomic_t, i32, [3 x %struct.hlist_head], %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace*, %struct.hlist_node }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.task_cputime = type { i64, i64, i64 }
%struct.nameidata = type opaque
%struct.sysv_sem = type { %struct.sem_undo_list* }
%struct.sem_undo_list = type opaque
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %struct.atomic_t, %struct.atomic_t, i32, %struct.list_head, %struct.__wait_queue_head, %struct.task_struct*, %struct.sigpending, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.timespec], %struct.thread_group_cputimer, %struct.task_cputime, [3 x %struct.list_head], %struct.pid*, %struct.pid*, i32, %struct.tty_struct*, %struct.autogroup*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.timespec], %struct.pacct_struct, %struct.taskstats*, i32, %struct.tty_audit_buf*, i8, i16, i16, %struct.mm_struct*, %struct.mutex }
%struct.timespec = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic, i8, i8 }
%struct.task_cputime_atomic = type { %union.anon.3, %union.anon.3, %union.anon.3 }
%struct.tty_struct = type opaque
%struct.autogroup = type opaque
%struct.seqlock_t = type { %struct.seqcount, %struct.spinlock }
%struct.pacct_struct = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.taskstats = type opaque
%struct.tty_audit_buf = type opaque
%struct.sighand_struct = type { %struct.atomic_t, [64 x %struct.k_sigaction], %struct.spinlock, %struct.__wait_queue_head }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.audit_context = type opaque
%struct.seccomp = type { i32, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.mutex_waiter = type { %struct.list_head, %struct.task_struct*, %struct.ww_acquire_ctx*, i8* }
%struct.ww_acquire_ctx = type opaque
%struct.held_lock = type { i64, i64, %struct.lockdep_map*, %struct.lockdep_map*, i64, i64, i32, i32 }
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type opaque
%struct.siginfo = type { i32, i32, i32, %union.anon.12 }
%union.anon.12 = type { %struct.anon.16, [80 x i8] }
%struct.anon.16 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [16 x i64] }
%struct.css_set = type opaque
%struct.robust_list_head = type opaque
%struct.compat_robust_list_head = type { %struct.atomic_t, i32, i32 }
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mempolicy = type opaque
%struct.numa_group = type opaque
%struct.tlbflush_unmap_batch = type { %struct.cpumask, i8, i8 }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.task_delay_info = type opaque
%struct.latency_record = type { [12 x i64], i32, i64, i64 }
%struct.ftrace_ret_stack = type opaque
%struct.kcov = type opaque
%struct.uprobe_task = type { i32, %union.anon.22, %struct.uprobe*, i64, %struct.return_instance*, i32 }
%union.anon.22 = type { %struct.anon.23 }
%struct.anon.23 = type { %struct.arch_uprobe_task, i64 }
%struct.arch_uprobe_task = type { i64, i32, i32 }
%struct.uprobe = type opaque
%struct.return_instance = type { %struct.uprobe*, i64, i64, i64, i8, %struct.return_instance* }
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i64, i16, i16, i16, i16, i32, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, i64*, i64, i32, %union.anon.3, i8, [15 x i8], %struct.fpu }
%struct.desc_struct = type { %union.anon.25 }
%union.anon.25 = type { %struct.anon.26 }
%struct.anon.26 = type { i32, i32 }
%struct.perf_event = type opaque
%struct.fpu = type { i32, i8, i8, [58 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.28, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.31 }
%union.anon.28 = type { %struct.timespec }
%union.anon.31 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.xattr_handler = type opaque
%struct.fscrypt_operations = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i32, %struct.hd_struct*, i32, i32, %struct.gendisk*, %struct.request_queue*, %struct.backing_dev_info*, %struct.list_head, i64, i32, %struct.mutex }
%struct.hd_struct = type opaque
%struct.gendisk = type opaque
%struct.request_queue = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.mutex, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.__wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rw_semaphore, %struct.rcuwait, i32 }
%struct.rcu_sync = type { i32, i32, %struct.__wait_queue_head, i32, %struct.callback_head, i32 }
%struct.rcuwait = type { %struct.task_struct* }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i32, i64, i64, %struct.list_head, %union.anon.3* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type opaque
%struct.list_lru = type { %struct.list_lru_node*, %struct.list_head }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, %struct.list_lru_memcg*, [24 x i8] }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.list_lru_memcg = type { [0 x %struct.list_lru_one*] }
%union.anon.0 = type { %struct.list_head }
%union.anon.50 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.atomic_t, %struct.atomic_t, i32, %struct.posix_acl*, %struct.posix_acl*, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i8*, i64, %struct.atomic_t, i32, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.spinlock, i16, i32, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.bdi_writeback*, i32, i16, i16, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.2, i64, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.file_operations*, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.46, i32, i32, %struct.hlist_head, %struct.fscrypt_info*, i8* }
%struct.posix_acl = type opaque
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16, i32*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.iattr = type { i32, i16, %struct.atomic_t, %struct.atomic_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.atomic_t, %struct.atomic_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64 }
%struct.fiemap_extent_info = type { i32, i32, i32, %struct.fiemap_extent* }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.bdi_writeback = type opaque
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.radix_tree_root, %struct.spinlock, %struct.atomic_t, %struct.rb_root, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, %struct.spinlock, i32, %struct.list_head, i8* }
%struct.radix_tree_root = type { i32, %struct.radix_tree_node* }
%struct.radix_tree_node = type { i8, i8, i8, i8, %struct.radix_tree_node*, %struct.radix_tree_root*, %union.anon.0, [64 x i8*], [3 x [1 x i64]] }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32 }
%struct.iov_iter = type { i32, i64, i64, %union.anon.45, %union.anon.3 }
%union.anon.45 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%struct.swap_info_struct = type opaque
%union.anon.46 = type { %struct.pipe_inode_info* }
%struct.fscrypt_info = type opaque
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, %struct.file*, i64, i64)*, i64 (%struct.file*, i64, i64, %struct.file*, i64)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, i8*, i32, i8, i32, i32, %struct.pid*, %struct.__wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.44 }
%struct.fasync_struct = type { %struct.spinlock, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i32 (%struct.file_lock*, %struct.file_lock*)*, i64 (%struct.file_lock*)*, i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)* }
%union.anon.44 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%union.anon.3 = type { i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.atomic_t, %struct.atomic_t, i32 }
%struct.rwlock_t = type { %struct.qrwlock, i32, i32, i8*, %struct.lockdep_map }
%struct.qrwlock = type { %struct.atomic_t, %struct.qspinlock }
%struct.cred = type { %struct.atomic_t, %struct.atomic_t, i8*, i32, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, i8*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %struct.callback_head }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.key = type { %struct.atomic_t, i32, %union.anon.73, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.3, i64, %struct.atomic_t, %struct.atomic_t, i32, i16, i16, i64, %union.anon.75, %union.anon.77, i32 (%struct.key*, %struct.key_type*, %union.key_payload*)* }
%union.anon.73 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.75 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { %struct.key_type*, i8*, i64 }
%struct.key_type = type opaque
%union.anon.77 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.user_struct = type { %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %union.anon.3, i64, i64, i64, %union.anon.3, %struct.key*, %struct.key*, %struct.hlist_node, %struct.atomic_t, %union.anon.3 }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.atomic_t] }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, %struct.file*, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, %struct.mempolicy*)*, %struct.mempolicy* (%struct.vm_area_struct*, i64)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %union.anon.3*, %union.anon.3*, %union.anon.3, %struct.page*, %struct.mem_cgroup*, %struct.page*, %union.anon.3*, %struct.spinlock*, %struct.page* }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.qspinlock }
%struct.delayed_work = type { %struct.work_struct, %struct.timer_list, %struct.workqueue_struct*, i32 }
%struct.timer_list = type { %struct.hlist_node, i64, void (i64)*, i64, i32, %struct.lockdep_map }
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.atomic_t*, %struct.atomic_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.mutex = type { %union.anon.3, %struct.spinlock, %struct.qspinlock, %struct.list_head, i8*, %struct.lockdep_map }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.device_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.dev_pm_ops*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.atomic_t, i16, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.timer_list, i64, %struct.work_struct, %struct.__wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.wakeup_source = type { i8*, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head, %struct.pm_domain_data* }
%struct.pm_domain_data = type opaque
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dev_pin_info = type { %struct.pinctrl*, %struct.pinctrl_state*, %struct.pinctrl_state*, %struct.pinctrl_state*, %struct.pinctrl_state* }
%struct.pinctrl = type opaque
%struct.pinctrl_state = type opaque
%struct.dma_map_ops = type { i8* (%struct.device*, i64, i64*, i32, i64)*, void (%struct.device*, i64, i8*, i64, i64)*, i32 (%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64)*, i32 (%struct.device*, %struct.sg_table*, i8*, i64, i64, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i64 (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i64, i32, i32, i64, i32 }
%struct.device_dma_parameters = type { i32, i64 }
%struct.dma_coherent_mem = type opaque
%struct.cma = type opaque
%union.anon.79 = type { i8* }
%struct.device_node = type opaque
%struct.fwnode_handle = type opaque
%struct.spinlock = type { %union.anon.1 }
%union.anon.1 = type { %struct.raw_spinlock }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.class = type { i8*, %struct.module*, %struct.class_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.class_attribute = type { %struct.attribute, i64 (%struct.class*, %struct.class_attribute*, i8*)*, i64 (%struct.class*, %struct.class_attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.iommu_fwspec = type opaque
%struct.atomic_t = type { i32 }
%struct.work_struct = type { %union.anon.3, %struct.list_head, void (%struct.work_struct*)*, %struct.lockdep_map }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.__wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.uvc_format_desc = type { i8*, [16 x i8], i32 }
%struct.vb2_ops = type { i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)*, void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)*, i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)*, i32 (%struct.vb2_queue*, i32)*, void (%struct.vb2_queue*)*, void (%struct.vb2_buffer*)* }
%struct.vb2_queue = type { i32, i32, %struct.device*, i64, i8, %struct.mutex*, i8*, %struct.vb2_ops*, %struct.vb2_mem_ops*, %struct.vb2_buf_ops*, i8*, i32, i32, i32, i32, %struct.mutex, i32, [32 x %struct.vb2_buffer*], i32, %struct.list_head, i32, %struct.atomic_t, %struct.list_head, %struct.spinlock, %struct.__wait_queue_head, [8 x %struct.device*], i8, %struct.vb2_fileio_data*, %struct.vb2_threadio_data*, i32, i32, i32, i32, i32 }
%struct.vb2_mem_ops = type { i8* (%struct.device*, i64, i64, i32, i32)*, void (i8*)*, %struct.dma_buf* (i8*, i64)*, i8* (%struct.device*, i64, i64, i32)*, void (i8*)*, void (i8*)*, void (i8*)*, i8* (%struct.device*, %struct.dma_buf*, i64, i32)*, void (i8*)*, i32 (i8*)*, void (i8*)*, i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*, %struct.vm_area_struct*)* }
%struct.dma_buf = type { i64, %struct.file*, %struct.list_head, %struct.dma_buf_ops*, %struct.mutex, i32, i8*, i8*, %struct.module*, %struct.list_head, i8*, %struct.reservation_object*, %struct.__wait_queue_head, %struct.dma_buf_poll_cb_t, %struct.dma_buf_poll_cb_t }
%struct.dma_buf_ops = type { i32 (%struct.dma_buf*, %struct.device*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf*)*, i32 (%struct.dma_buf*, i32)*, i32 (%struct.dma_buf*, i32)*, i8* (%struct.dma_buf*, i64)*, void (%struct.dma_buf*, i64, i8*)*, i8* (%struct.dma_buf*, i64)*, void (%struct.dma_buf*, i64, i8*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i8* (%struct.dma_buf*)*, void (%struct.dma_buf*, i8*)* }
%struct.dma_buf_attachment = type { %struct.dma_buf*, %struct.device*, %struct.list_head, i8* }
%struct.reservation_object = type opaque
%struct.dma_buf_poll_cb_t = type { %struct.dma_fence_cb, %struct.__wait_queue_head*, i64 }
%struct.dma_fence_cb = type { %struct.list_head, void (%struct.dma_fence*, %struct.dma_fence_cb*)* }
%struct.dma_fence = type { %struct.kref, %struct.dma_fence_ops*, %struct.callback_head, %struct.list_head, %struct.spinlock*, i64, i32, i64, i64, i32 }
%struct.dma_fence_ops = type { i8* (%struct.dma_fence*)*, i8* (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i1 (%struct.dma_fence*)*, i64 (%struct.dma_fence*, i1, i64)*, void (%struct.dma_fence*)*, i32 (%struct.dma_fence*, i8*, i32)*, void (%struct.dma_fence*, i8*, i32)*, void (%struct.dma_fence*, i8*, i32)* }
%struct.vb2_buf_ops = type { i32 (%struct.vb2_buffer*, i8*)*, void (%struct.vb2_buffer*, i8*)*, i32 (%struct.vb2_buffer*, i8*, %struct.vb2_plane*)*, void (%struct.vb2_buffer*, i8*)* }
%struct.vb2_buffer = type { %struct.vb2_queue*, i32, i32, i32, i32, [8 x %struct.vb2_plane], i64, i32, %struct.list_head, %struct.list_head, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.vb2_plane = type { i8*, %struct.dma_buf*, i32, i32, i32, i32, %union.anon.3, i32 }
%struct.vb2_fileio_data = type opaque
%struct.vb2_threadio_data = type opaque
%struct.v4l2_ioctl_ops = type { i32 (%struct.file*, i8*, %struct.v4l2_capability*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, i64)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, %struct.v4l2_input*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_output*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)*, i32 (%struct.file*, i8*, %struct.v4l2_query_ext_ctrl*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency_band*)*, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.file*, i8*)*, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)*, i64 (%struct.file*, i8*, i1, i32, i8*)* }
%struct.v4l2_capability = type { [16 x i8], [32 x i8], [32 x i8], i32, i32, i32, [3 x i32] }
%struct.v4l2_fmtdesc = type { i32, i32, i32, [32 x i8], i32, [4 x i32] }
%struct.v4l2_format = type { i32, %union.anon.61 }
%union.anon.61 = type { %struct.v4l2_window, [144 x i8] }
%struct.v4l2_window = type { %struct.usb3_lpm_parameters, i32, i32, %struct.v4l2_clip*, i32, i8*, i8 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.v4l2_clip = type { %struct.usb3_lpm_parameters, %struct.v4l2_clip* }
%struct.v4l2_requestbuffers = type { i32, i32, i32, [2 x i32] }
%struct.v4l2_exportbuffer = type { i32, i32, i32, i32, i32, [11 x i32] }
%struct.v4l2_create_buffers = type { i32, i32, i32, %struct.v4l2_format, [8 x i32] }
%struct.v4l2_buffer = type { i32, i32, i32, i32, i32, %struct.timespec, %struct.v4l2_timecode, i32, i32, %union.anon.3, i32, i32, i32 }
%struct.v4l2_timecode = type { i32, i32, i8, i8, i8, i8, [4 x i8] }
%struct.v4l2_framebuffer = type { i32, i32, i8*, %struct.qc_info }
%struct.v4l2_input = type { i32, [32 x i8], i32, i32, i32, i64, i32, i32, [3 x i32] }
%struct.v4l2_output = type { i32, [32 x i8], i32, i32, i32, i64, i32, [3 x i32] }
%struct.v4l2_queryctrl = type { i32, i32, [32 x i8], i32, i32, i32, i32, i32, [2 x i32] }
%struct.v4l2_query_ext_ctrl = type { i32, i32, [32 x i8], i64, i64, i64, i64, i32, i32, i32, i32, [4 x i32], [32 x i32] }
%struct.v4l2_ext_controls = type { %struct.atomic_t, i32, i32, [2 x i32], %struct.v4l2_ext_control* }
%struct.v4l2_ext_control = type <{ i32, i32, [1 x i32], %union.anon.3 }>
%struct.v4l2_querymenu = type <{ i32, i32, %union.anon.69, i32 }>
%union.anon.69 = type { i64, [24 x i8] }
%struct.v4l2_audio = type { i32, [32 x i8], i32, i32, [2 x i32] }
%struct.v4l2_modulator = type { i32, [32 x i8], i32, i32, i32, i32, i32, [3 x i32] }
%struct.v4l2_cropcap = type { i32, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, %struct.anon.26 }
%struct.v4l2_crop = type { i32, %struct.usb3_lpm_parameters }
%struct.v4l2_selection = type { i32, i32, i32, %struct.usb3_lpm_parameters, [9 x i32] }
%struct.v4l2_jpegcompression = type { i32, i32, i32, [60 x i8], i32, [60 x i8], i32 }
%struct.v4l2_enc_idx = type { i32, i32, [4 x i32], [64 x %struct.v4l2_enc_idx_entry] }
%struct.v4l2_enc_idx_entry = type { i64, i64, i32, i32, [2 x i32] }
%struct.v4l2_encoder_cmd = type { i32, i32, %union.anon.70 }
%union.anon.70 = type { %struct.anon.71 }
%struct.anon.71 = type { [8 x i32] }
%struct.v4l2_decoder_cmd = type { i32, i32, %union.anon.72 }
%union.anon.72 = type { %union.anon.3, [56 x i8] }
%struct.v4l2_streamparm = type { i32, %union.anon.55 }
%union.anon.55 = type { %struct.v4l2_captureparm, [160 x i8] }
%struct.v4l2_captureparm = type { i32, i32, %struct.anon.26, i32, i32, [4 x i32] }
%struct.v4l2_tuner = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.v4l2_frequency = type { i32, i32, i32, [8 x i32] }
%struct.v4l2_frequency_band = type { i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.v4l2_sliced_vbi_cap = type { i16, [2 x [24 x i16]], i32, [3 x i32] }
%struct.v4l2_hw_freq_seek = type { i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.v4l2_dbg_register = type { %struct.v4l2_dbg_match, i32, i64, i64 }
%struct.v4l2_dbg_match = type { i32, %union.anon.54 }
%union.anon.54 = type { i32, [28 x i8] }
%struct.v4l2_dbg_chip_info = type { %struct.v4l2_dbg_match, [32 x i8], i32, [32 x i32] }
%struct.v4l2_frmsizeenum = type { i32, i32, i32, %union.anon.78, [2 x i32] }
%union.anon.78 = type { %struct.v4l2_frmsize_stepwise }
%struct.v4l2_frmsize_stepwise = type { i32, i32, i32, i32, i32, i32 }
%struct.v4l2_frmivalenum = type { i32, i32, i32, i32, i32, %union.anon.79.747, [2 x i32] }
%union.anon.79.747 = type { %struct.v4l2_frmival_stepwise }
%struct.v4l2_frmival_stepwise = type { %struct.anon.26, %struct.anon.26, %struct.anon.26 }
%struct.v4l2_dv_timings = type { i32, %union.anon.56 }
%union.anon.56 = type { [32 x i32] }
%struct.v4l2_enum_dv_timings = type { i32, i32, [2 x i32], %struct.v4l2_dv_timings }
%struct.v4l2_dv_timings_cap = type { i32, i32, [2 x i32], %union.anon.57 }
%union.anon.57 = type { %struct.v4l2_bt_timings_cap, [24 x i8] }
%struct.v4l2_bt_timings_cap = type { i32, i32, i32, i32, i64, i64, i32, i32, [16 x i32] }
%struct.v4l2_edid = type { i32, i32, i32, [5 x i32], i8* }
%struct.v4l2_fh.753 = type { %struct.list_head, %struct.video_device.754*, %struct.v4l2_ctrl_handler*, i32, %struct.__wait_queue_head, %struct.list_head, %struct.list_head, i32, i32, %struct.v4l2_m2m_ctx* }
%struct.video_device.754 = type { %struct.media_entity, %struct.media_intf_devnode*, %struct.media_pipeline, %struct.v4l2_file_operations*, i32, %struct.device, %struct.cdev*, %struct.v4l2_device.763*, %struct.device*, %struct.v4l2_ctrl_handler*, %struct.vb2_queue*, %struct.v4l2_prio_state*, [32 x i8], i32, i32, i32, i16, i64, i32, %struct.spinlock, %struct.list_head, i32, i64, void (%struct.video_device.754*)*, %struct.v4l2_ioctl_ops.766*, [3 x i64], [3 x i64], %struct.mutex* }
%struct.media_entity = type { %struct.media_gobj, i8*, i32, i32, i64, i16, i16, i16, i32, %struct.media_pad*, %struct.list_head, %struct.media_entity_operations*, i32, i32, %struct.media_pipeline*, %union.anon.25 }
%struct.media_gobj = type { %struct.media_device*, i32, %struct.list_head }
%struct.media_device = type { %struct.device*, %struct.media_devnode*, [32 x i8], [32 x i8], [40 x i8], [32 x i8], i32, i32, i64, i32, %struct.ida, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.media_graph, i8*, i32 (%struct.media_entity*, %struct.media_pipeline*)*, void (%struct.media_entity*)*, %struct.media_device_ops* }
%struct.media_devnode = type { %struct.media_device*, %struct.media_file_operations*, %struct.device, %struct.cdev, %struct.device*, i32, i64, void (%struct.media_devnode*)* }
%struct.media_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.ida = type { %struct.radix_tree_root }
%struct.media_graph = type { [16 x %struct.anon.51], %struct.media_entity_enum, i32 }
%struct.anon.51 = type { %struct.media_entity*, %struct.list_head* }
%struct.media_entity_enum = type { i64*, i32 }
%struct.media_device_ops = type { i32 (%struct.media_link*, i32, i32)* }
%struct.media_link = type { %struct.media_gobj, %struct.list_head, %union.anon.71, %union.anon.71, %struct.media_link*, i64, i8 }
%union.anon.71 = type { %struct.media_gobj* }
%struct.media_pad = type { %struct.media_gobj, %struct.media_entity*, i16, i64 }
%struct.media_entity_operations = type { i32 (%struct.media_entity*, %struct.media_pad*, %struct.media_pad*, i32)*, i32 (%struct.media_link*)* }
%struct.media_intf_devnode = type { %struct.media_interface, i32, i32 }
%struct.media_interface = type { %struct.media_gobj, %struct.list_head, i32, i32 }
%struct.media_pipeline = type { i32, %struct.media_graph }
%struct.v4l2_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.v4l2_device.763 = type { %struct.device*, %struct.media_device*, %struct.list_head, %struct.spinlock, [36 x i8], void (%struct.v4l2_subdev.818*, i32, i8*)*, %struct.v4l2_ctrl_handler*, %struct.v4l2_prio_state, %struct.kref, void (%struct.v4l2_device.763*)* }
%struct.v4l2_subdev.818 = type { %struct.media_entity, %struct.list_head, %struct.module*, i8, i32, %struct.v4l2_device.763*, %struct.v4l2_subdev_ops.819*, %struct.v4l2_subdev_internal_ops.820*, %struct.v4l2_ctrl_handler*, [32 x i8], i32, i8*, i8*, %struct.video_device.754*, %struct.device*, %struct.device_node*, %struct.list_head, %struct.v4l2_async_subdev*, %struct.v4l2_async_notifier.822*, %struct.v4l2_subdev_platform_data* }
%struct.v4l2_subdev_ops.819 = type { %struct.v4l2_subdev_core_ops.824*, %struct.v4l2_subdev_tuner_ops.825*, %struct.v4l2_subdev_audio_ops.826*, %struct.v4l2_subdev_video_ops.827*, %struct.v4l2_subdev_vbi_ops.828*, %struct.v4l2_subdev_ir_ops.829*, %struct.v4l2_subdev_sensor_ops.830*, %struct.v4l2_subdev_pad_ops.831* }
%struct.v4l2_subdev_core_ops.824 = type { i32 (%struct.v4l2_subdev.818*)*, i32 (%struct.v4l2_subdev.818*, i64, %struct.v4l2_subdev_io_pin_config*)*, i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*)*, i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*, i32)*, i64 (%struct.v4l2_subdev.818*, i32, i8*)*, i64 (%struct.v4l2_subdev.818*, i32, i64)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*, i32, i8*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)* }
%struct.v4l2_subdev_io_pin_config = type { i32, i8, i8, i8, i8 }
%struct.v4l2_subdev_tuner_ops.825 = type { i32 (%struct.v4l2_subdev.818*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_frequency_band*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev.818*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_priv_tun_config*)* }
%struct.tuner_setup = type opaque
%struct.v4l2_priv_tun_config = type { i32, i8* }
%struct.v4l2_subdev_audio_ops.826 = type { i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*, i32, i32, i32)*, i32 (%struct.v4l2_subdev.818*, i32)* }
%struct.v4l2_subdev_video_ops.827 = type { i32 (%struct.v4l2_subdev.818*, i32, i32, i32)*, i32 (%struct.v4l2_subdev.818*, i32, i32)*, i32 (%struct.v4l2_subdev.818*, i64*)*, i32 (%struct.v4l2_subdev.818*, i64)*, i32 (%struct.v4l2_subdev.818*, i64)*, i32 (%struct.v4l2_subdev.818*, i64*)*, i32 (%struct.v4l2_subdev.818*, i64*)*, i32 (%struct.v4l2_subdev.818*, i64*)*, i32 (%struct.v4l2_subdev.818*, i64*)*, i32 (%struct.v4l2_subdev.818*, i32*)*, i32 (%struct.v4l2_subdev.818*, i32)*, i32 (%struct.v4l2_subdev.818*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev.818*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev.818*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev.818*, i8*, i32*)* }
%struct.v4l2_subdev_frame_interval = type { i32, %struct.anon.26, [9 x i32] }
%struct.v4l2_subdev_vbi_ops.828 = type { i32 (%struct.v4l2_subdev.818*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_sliced_vbi_format*)* }
%struct.v4l2_decode_vbi_line = type { i32, i8*, i32, i32 }
%struct.v4l2_sliced_vbi_data = type { i32, i32, i32, i32, [48 x i8] }
%struct.v4l2_vbi_format = type { i32, i32, i32, i32, [2 x i32], [2 x i32], i32, [2 x i32] }
%struct.v4l2_sliced_vbi_format = type { i16, [2 x [24 x i16]], i32, [2 x i32] }
%struct.v4l2_subdev_ir_ops.829 = type { i32 (%struct.v4l2_subdev.818*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev.818*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_ir_parameters*)* }
%struct.v4l2_subdev_ir_parameters = type { i32, i32, i8, i8, i8, i8, i32, i32, i32, i8, i8, i32, i32, i32, i32 }
%struct.v4l2_subdev_sensor_ops.830 = type { i32 (%struct.v4l2_subdev.818*, i32*)*, i32 (%struct.v4l2_subdev.818*, i32*)* }
%struct.v4l2_subdev_pad_ops.831 = type { i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_mbus_code_enum*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_size_enum*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_interval_enum*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.v4l2_subdev.818*, %struct.media_link*, %struct.v4l2_subdev_format*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev.818*, i32, %struct.v4l2_mbus_frame_desc*)*, i32 (%struct.v4l2_subdev.818*, i32, %struct.v4l2_mbus_frame_desc*)* }
%struct.v4l2_subdev_pad_config = type { %struct.v4l2_mbus_framefmt, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters }
%struct.v4l2_mbus_framefmt = type { i32, i32, i32, i32, i32, i16, i16, i16, [11 x i16] }
%struct.v4l2_subdev_mbus_code_enum = type { i32, i32, i32, i32, [8 x i32] }
%struct.v4l2_subdev_frame_size_enum = type { i32, i32, i32, i32, i32, i32, i32, i32, [8 x i32] }
%struct.v4l2_subdev_frame_interval_enum = type { i32, i32, i32, i32, i32, %struct.anon.26, i32, [8 x i32] }
%struct.v4l2_subdev_format = type { i32, i32, %struct.v4l2_mbus_framefmt, [8 x i32] }
%struct.v4l2_subdev_selection = type { i32, i32, i32, i32, %struct.usb3_lpm_parameters, [8 x i32] }
%struct.v4l2_mbus_frame_desc = type { [4 x %struct.v4l2_mbus_frame_desc_entry], i16 }
%struct.v4l2_mbus_frame_desc_entry = type { i16, i32, i32 }
%struct.v4l2_subdev_internal_ops.820 = type { i32 (%struct.v4l2_subdev.818*)*, void (%struct.v4l2_subdev.818*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_fh.851*)*, i32 (%struct.v4l2_subdev.818*, %struct.v4l2_subdev_fh.851*)* }
%struct.v4l2_subdev_fh.851 = type { %struct.v4l2_fh.753, %struct.v4l2_subdev_pad_config* }
%struct.v4l2_async_subdev = type { i32, %union.anon.58, %struct.list_head }
%union.anon.58 = type { %struct.anon.62 }
%struct.anon.62 = type { i1 (%struct.device*, %struct.v4l2_async_subdev*)*, i8* }
%struct.v4l2_async_notifier.822 = type { i32, %struct.v4l2_async_subdev**, %struct.v4l2_device.763*, %struct.list_head, %struct.list_head, %struct.list_head, i32 (%struct.v4l2_async_notifier.822*, %struct.v4l2_subdev.818*, %struct.v4l2_async_subdev*)*, i32 (%struct.v4l2_async_notifier.822*)*, void (%struct.v4l2_async_notifier.822*, %struct.v4l2_subdev.818*, %struct.v4l2_async_subdev*)* }
%struct.v4l2_subdev_platform_data = type { %struct.regulator_bulk_data*, i32, i8* }
%struct.regulator_bulk_data = type opaque
%struct.v4l2_prio_state = type { [4 x %struct.atomic_t] }
%struct.v4l2_ioctl_ops.766 = type { i32 (%struct.file*, i8*, %struct.v4l2_capability*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, i64)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, %struct.v4l2_input*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_output*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)*, i32 (%struct.file*, i8*, %struct.v4l2_query_ext_ctrl*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.anon.26*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency_band*)*, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.file*, i8*)*, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, i32 (%struct.file*, i8*, %struct.v4l2_edid*)*, {}*, {}*, i64 (%struct.file*, i8*, i1, i32, i8*)* }
%struct.v4l2_ctrl_handler = type { %struct.mutex, %struct.mutex*, %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl_ref**, void (%struct.v4l2_ctrl*, i8*)*, i8*, i16, i32 }
%struct.v4l2_ctrl_ref = type { %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl_helper* }
%struct.v4l2_ctrl = type { %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl**, i32, i24, %struct.v4l2_ctrl_ops*, %struct.v4l2_ctrl_type_ops*, i32, i8*, i32, i64, i64, i64, i32, i32, [4 x i32], i32, %union.anon.3, %union.anon.86, i64, i8*, i32, %struct.atomic_t, %union.v4l2_ctrl_ptr, %union.v4l2_ctrl_ptr }
%struct.v4l2_ctrl_ops = type { i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)* }
%struct.v4l2_ctrl_type_ops = type { i1 (%struct.v4l2_ctrl*, i32, i32*, i32*)*, void (%struct.v4l2_ctrl*, i32, i32*)*, void (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*, i32, i32*)* }
%union.anon.86 = type { i8** }
%union.v4l2_ctrl_ptr = type { i32* }
%struct.v4l2_ctrl_helper = type opaque
%struct.v4l2_m2m_ctx = type opaque
%struct.v4l2_event_subscription = type { i32, i32, i32, [5 x i32] }
%struct.v4l2_subscribed_event.1377 = type { %struct.list_head, i32, i32, i32, %struct.v4l2_fh.753*, %struct.list_head, %struct.v4l2_subscribed_event_ops.1380*, i32, i32, i32, [0 x %struct.v4l2_kevent.1381] }
%struct.v4l2_subscribed_event_ops.1380 = type { {}*, void (%struct.v4l2_subscribed_event.1377*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }
%struct.v4l2_kevent.1381 = type { %struct.list_head, %struct.v4l2_subscribed_event.1377*, %struct.v4l2_event }
%struct.v4l2_event = type { i32, %union.anon.105, i32, i32, %struct.timespec, i32, [8 x i32] }
%union.anon.105 = type { %struct.v4l2_event_ctrl, [24 x i8] }
%struct.v4l2_event_ctrl = type { i32, i32, %union.anon.3, i32, i32, i32, i32, i32 }
%struct.uvc_ctrl_fixup = type { %struct.usb_device_id, i8, i8, i8 }
%struct.uvc_control_info = type { %struct.list_head, [16 x i8], i8, i8, i16, i32 }
%struct.uvc_control_mapping = type { %struct.list_head, %struct.list_head, i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, %struct.uvc_menu_info*, i32, i32, i32, [2 x i32], i32 (%struct.uvc_control_mapping*, i8, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)* }
%struct.uvc_menu_info = type { i32, [32 x i8] }
%struct.uvc_ctrl_blacklist = type { %struct.usb_device_id, i8 }
%struct.v4l2_subdev_ops = type { %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_ir_ops*, %struct.v4l2_subdev_sensor_ops*, %struct.v4l2_subdev_pad_ops* }
%struct.v4l2_subdev_core_ops = type { i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i64, %struct.v4l2_subdev_io_pin_config*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i64 (%struct.v4l2_subdev*, i32, i8*)*, i64 (%struct.v4l2_subdev*, i32, i64)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i8*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)* }
%struct.v4l2_subdev = type { %struct.media_entity, %struct.list_head, %struct.module*, i8, i32, %struct.v4l2_device*, %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_internal_ops*, %struct.v4l2_ctrl_handler*, [32 x i8], i32, i8*, i8*, %struct.video_device*, %struct.device*, %struct.device_node*, %struct.list_head, %struct.v4l2_async_subdev*, %struct.v4l2_async_notifier*, %struct.v4l2_subdev_platform_data* }
%struct.v4l2_device = type { %struct.device*, %struct.media_device*, %struct.list_head, %struct.spinlock, [36 x i8], void (%struct.v4l2_subdev*, i32, i8*)*, %struct.v4l2_ctrl_handler*, %struct.v4l2_prio_state, %struct.kref, void (%struct.v4l2_device*)* }
%struct.v4l2_subdev_internal_ops = type { i32 (%struct.v4l2_subdev*)*, void (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)* }
%struct.v4l2_subdev_fh = type { %struct.v4l2_fh, %struct.v4l2_subdev_pad_config* }
%struct.v4l2_fh = type { %struct.list_head, %struct.video_device*, %struct.v4l2_ctrl_handler*, i32, %struct.__wait_queue_head, %struct.list_head, %struct.list_head, i32, i32, %struct.v4l2_m2m_ctx* }
%struct.video_device = type { %struct.media_entity, %struct.media_intf_devnode*, %struct.media_pipeline, %struct.v4l2_file_operations*, i32, %struct.device, %struct.cdev*, %struct.v4l2_device*, %struct.device*, %struct.v4l2_ctrl_handler*, %struct.vb2_queue*, %struct.v4l2_prio_state*, [32 x i8], i32, i32, i32, i16, i64, i32, %struct.spinlock, %struct.list_head, i32, i64, void (%struct.video_device*)*, %struct.v4l2_ioctl_ops*, [3 x i64], [3 x i64], %struct.mutex* }
%struct.v4l2_async_notifier = type { i32, %struct.v4l2_async_subdev**, %struct.v4l2_device*, %struct.list_head, %struct.list_head, %struct.list_head, i32 (%struct.v4l2_async_notifier*, %struct.v4l2_subdev*, %struct.v4l2_async_subdev*)*, i32 (%struct.v4l2_async_notifier*)*, void (%struct.v4l2_async_notifier*, %struct.v4l2_subdev*, %struct.v4l2_async_subdev*)* }
%struct.v4l2_subdev_tuner_ops = type { i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency_band*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)* }
%struct.v4l2_subdev_audio_ops = type { i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32)* }
%struct.v4l2_subdev_video_ops = type { i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, %struct.anon.26*)*, i32 (%struct.v4l2_subdev*, i8*, i32*)* }
%struct.v4l2_subdev_vbi_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* }
%struct.v4l2_subdev_ir_ops = type { i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)* }
%struct.v4l2_subdev_sensor_ops = type { i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32*)* }
%struct.v4l2_subdev_pad_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_mbus_code_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_size_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_frame_interval_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_pad_config*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_edid*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.media_link*, %struct.v4l2_subdev_format*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)* }
%struct.usb_device = type { i32, [16 x i8], i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i16, i32, i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, i64, i64, i8, %struct.wusb_dev*, i32, i32, %struct.anon.26, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32 }
%struct.usb_tt = type opaque
%struct.usb_bus = type { %struct.device*, i32, i8*, i8, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32, %struct.mon_bus*, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.mon_bus = type opaque
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.uvc_device = type { %struct.usb_device*, %struct.usb_interface*, i64, i32, i32, [32 x i8], %struct.mutex, i32, %struct.atomic_t, %struct.media_device, %struct.v4l2_device, i16, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.usb_host_endpoint*, %struct.urb*, i8*, %struct.input_dev*, [64 x i8] }
%struct.urb = type { %struct.kref, i8*, %struct.atomic_t, %struct.atomic_t, i32, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb3_lpm_parameters] }
%struct.usb_anchor = type { %struct.list_head, %struct.__wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.v4l2_frmsize_stepwise*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8 }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_trigger, %union.anon.66 }
%struct.ff_trigger = type { i16, i16 }
%union.anon.66 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.input_id, i32, i16* }
%struct.input_mt = type opaque
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.uvc_streaming = type { %struct.list_head, %struct.uvc_device*, %struct.video_device, %struct.uvc_video_chain*, %struct.atomic_t, %struct.usb_interface*, i32, i16, %struct.uvc_streaming_header, i32, i32, %struct.uvc_format*, %struct.uvc_streaming_control, %struct.uvc_format*, %struct.uvc_format*, %struct.uvc_frame*, %struct.mutex, i8, %struct.uvc_video_queue, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)*, %struct.anon.83, [5 x %struct.urb*], [5 x i8*], [5 x i64], i32, i32, i8, %struct.dentry*, %struct.anon.84, %struct.uvc_clock }
%struct.uvc_video_chain = type { %struct.uvc_device*, %struct.list_head, %struct.list_head, %struct.uvc_entity*, %struct.uvc_entity*, %struct.mutex, %struct.v4l2_prio_state, i32 }
%struct.uvc_entity = type { %struct.list_head, %struct.list_head, i32, i8, i16, [64 x i8], %struct.video_device*, %struct.v4l2_subdev, i32, i32, %struct.media_pad*, %union.anon.64, i8, i8*, i32, %struct.uvc_control* }
%union.anon.64 = type { %struct.anon.70 }
%struct.anon.70 = type { [16 x i8], i8, i8, i8*, i8* }
%struct.uvc_control = type { %struct.uvc_entity*, %struct.uvc_control_info, i8, i8, i8* }
%struct.uvc_streaming_header = type { i8, i8, i8, i8, i8*, i8, i8, i8, i8 }
%struct.uvc_streaming_control = type <{ i16, i8, i8, i32, i16, i16, i16, i16, i16, i32, i32, i32, i8, i8, i8, i8 }>
%struct.uvc_format = type { i8, i8, i8, i8, i32, i32, [32 x i8], i32, %struct.uvc_frame* }
%struct.uvc_frame = type { i8, i8, i16, i16, i32, i32, i32, i8, i32, i32* }
%struct.uvc_video_queue = type { %struct.vb2_queue, %struct.mutex, i32, i32, %struct.spinlock, %struct.list_head }
%struct.uvc_buffer = type { %struct.vb2_v4l2_buffer, %struct.list_head, i32, i32, i8*, i32, i32, i32 }
%struct.vb2_v4l2_buffer = type { %struct.vb2_buffer, i32, i32, %struct.v4l2_timecode, i32 }
%struct.anon.83 = type { [256 x i8], i32, i32, i32, i32 }
%struct.anon.84 = type { %struct.uvc_stats_frame, %struct.uvc_stats_stream }
%struct.uvc_stats_frame = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i16, i32 }
%struct.uvc_stats_stream = type { %struct.timespec, %struct.timespec, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.uvc_clock = type { %struct.uvc_clock_sample*, i32, i32, i32, i16, i16, %struct.spinlock }
%struct.uvc_clock_sample = type { i32, i16, %struct.timespec, i16 }
%union.anon.85 = type { %struct.list_head* }
%struct.anon.65 = type { i16, i16, i16, i8, i8* }
%struct.anon.66 = type { i8, i8*, i8, i8* }
%struct.anon.68 = type { i16, i8, i8*, i8 }
%struct.uvc_fh = type { %struct.v4l2_fh.753, %struct.uvc_video_chain.869*, %struct.uvc_streaming.870*, i32 }
%struct.uvc_video_chain.869 = type { %struct.uvc_device.871*, %struct.list_head, %struct.list_head, %struct.uvc_entity.872*, %struct.uvc_entity.872*, %struct.mutex, %struct.v4l2_prio_state, i32 }
%struct.uvc_device.871 = type { %struct.usb_device*, %struct.usb_interface*, i64, i32, i32, [32 x i8], %struct.mutex, i32, %struct.atomic_t, %struct.media_device, %struct.v4l2_device.763, i16, i32, %struct.list_head, %struct.list_head, %struct.list_head, %struct.atomic_t, %struct.usb_host_endpoint*, %struct.urb*, i8*, %struct.input_dev*, [64 x i8] }
%struct.uvc_entity.872 = type { %struct.list_head, %struct.list_head, i32, i8, i16, [64 x i8], %struct.video_device.754*, %struct.v4l2_subdev.818, i32, i32, %struct.media_pad*, %union.anon.64, i8, i8*, i32, %struct.uvc_control.903* }
%struct.uvc_control.903 = type { %struct.uvc_entity.872*, %struct.uvc_control_info, i8, i8, i8* }
%struct.uvc_streaming.870 = type { %struct.list_head, %struct.uvc_device.871*, %struct.video_device.754, %struct.uvc_video_chain.869*, %struct.atomic_t, %struct.usb_interface*, i32, i16, %struct.uvc_streaming_header, i32, i32, %struct.uvc_format*, %struct.uvc_streaming_control, %struct.uvc_format*, %struct.uvc_format*, %struct.uvc_frame*, %struct.mutex, i8, %struct.uvc_video_queue, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)*, %struct.anon.83, [5 x %struct.urb*], [5 x i8*], [5 x i64], i32, i32, i8, %struct.dentry*, %struct.anon.84, %struct.uvc_clock }
%struct.v4l2_subscribed_event_ops = type { i32 (%struct.v4l2_subscribed_event*, i32)*, void (%struct.v4l2_subscribed_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }
%struct.v4l2_subscribed_event = type { %struct.list_head, i32, i32, i32, %struct.v4l2_fh.753*, %struct.list_head, %struct.v4l2_subscribed_event_ops*, i32, i32, i32, [0 x %struct.v4l2_kevent] }
%struct.v4l2_kevent = type { %struct.list_head, %struct.v4l2_subscribed_event*, %struct.v4l2_event }
%struct.uvc_xu_control_mapping = type { i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, %struct.uvc_menu_info*, i32, [4 x i32] }
%struct.uvc_xu_control_query = type { i8, i8, i8, i16, i8* }
%struct.v4l2_pix_format = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.atomic_t, i32, i32 }
%union.anon.107 = type { %struct.uvc_xu_control_mapping }
%struct.uvc_xu_control_mapping32 = type { i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, i32, i32, [4 x i32] }
%struct.uvc_xu_control_query32 = type { i8, i8, i8, i16, i32 }
%struct.__large_struct = type { [100 x i64] }
%struct.uvc_streaming.2601 = type { %struct.list_head, %struct.uvc_device*, %struct.video_device, %struct.uvc_video_chain*, %struct.atomic_t, %struct.usb_interface*, i32, i16, %struct.uvc_streaming_header, i32, i32, %struct.uvc_format*, %struct.uvc_streaming_control, %struct.uvc_format*, %struct.uvc_format*, %struct.uvc_frame*, %struct.mutex, i8, %struct.uvc_video_queue, {}*, %struct.anon.83, [5 x %struct.urb*], [5 x i8*], [5 x i64], i32, i32, i8, %struct.dentry*, %struct.anon.84, %struct.uvc_clock }
%struct.uvc_debugfs_buffer = type { i64, [1024 x i8] }

@uvc_clock_param = global i32 1, align 4
@uvc_timeout_param = global i32 5000, align 4
@uvc_hw_timestamps_param = common global i32 0, align 4
@uvc_no_drop_param = common global i32 0, align 4
@uvc_trace_param = common global i32 0, align 4
@uvc_driver = global %struct.uvc_driver { %struct.usb_driver { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @uvc_probe, void (%struct.usb_interface*)* @uvc_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* @uvc_suspend, i32 (%struct.usb_interface*)* @uvc_resume, i32 (%struct.usb_interface*)* @uvc_reset_resume, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* getelementptr inbounds ([53 x %struct.usb_device_id], [53 x %struct.usb_device_id]* @uvc_ids, i32 0, i32 0), %struct.__wait_queue_head zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 2 } }, align 8
@uvc_ids = internal global [53 x %struct.usb_device_id] [%struct.usb_device_id { i16 899, i16 1046, i16 -22246, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1112, i16 28782, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1118, i16 248, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1118, i16 1825, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1118, i16 1827, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1133, i16 2241, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2242, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2243, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2245, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2246, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2247, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2093, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 1024 }, %struct.usb_device_id { i16 899, i16 1266, i16 -20367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 512 }, %struct.usb_device_id { i16 899, i16 1423, i16 14368, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1449, i16 9792, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1449, i16 9793, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1449, i16 9795, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1449, i16 9802, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1449, i16 30320, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1452, i16 -31487, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 10 }, %struct.usb_device_id { i16 899, i16 1480, i16 1027, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 1507, i16 1285, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 1784, i16 12300, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13101, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13328, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13344, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 3027, i16 1365, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 3725, i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 258 }, %struct.usb_device_id { i16 899, i16 5075, i16 20739, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5421, i16 784, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 5967, i16 21010, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 22833, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30190, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30159, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30157, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30156, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6108, i16 514, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6127, i16 18443, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6257, i16 774, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 6 }, %struct.usb_device_id { i16 899, i16 6257, i16 1302, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 6349, i16 -13570, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 4 }, %struct.usb_device_id { i16 899, i16 6380, i16 12680, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 6380, i16 12936, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 6380, i16 12944, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 6558, i16 -32510, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 907, i16 6571, i16 4096, i16 0, i16 294, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 1 }, %struct.usb_device_id { i16 899, i16 6971, i16 10577, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 7247, i16 12288, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 34 }, %struct.usb_device_id { i16 899, i16 10291, i16 513, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2048 }, %struct.usb_device_id { i16 899, i16 10291, i16 529, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 2048 }, %struct.usb_device_id { i16 896, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 896, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 1, i8 0, i64 0 }, %struct.usb_device_id zeroinitializer], align 16
@.str.121 = private unnamed_addr constant [35 x i8] c"\017uvcvideo: Resuming interface %u\0A\00", align 1
@.str.122 = private unnamed_addr constant [61 x i8] c"\017uvcvideo: Resume: video streaming USB interface mismatch.\0A\00", align 1
@.str.119 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: Suspending interface %u\0A\00", align 1
@.str.120 = private unnamed_addr constant [62 x i8] c"\017uvcvideo: Suspend: video streaming USB interface mismatch.\0A\00", align 1
@.str.6 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Probing known UVC device %s (%04x:%04x)\0A\00", align 1
@.str.7 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: Probing generic UVC device %s\0A\00", align 1
@.str.8 = private unnamed_addr constant [11 x i8] c"&dev->lock\00", align 1
@uvc_probe.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@uvc_quirks_param = internal global i32 -1, align 4
@.str.9 = private unnamed_addr constant [23 x i8] c"UVC Camera (%04x:%04x)\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"\017uvcvideo: Unable to parse UVC descriptors.\0A\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"<unnamed>\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"\016uvcvideo: Found UVC %u.%02x device %s (%04x:%04x)\0A\00", align 1
@.str.13 = private unnamed_addr constant [84 x i8] c"\016uvcvideo: Forcing device quirks to 0x%x by module parameter for testing purpose.\0A\00", align 1
@.str.14 = private unnamed_addr constant [80 x i8] c"\016uvcvideo: Please report required quirks to the linux-uvc-devel mailing list.\0A\00", align 1
@__this_module = external global %struct.module, align 64
@.str.15 = private unnamed_addr constant [100 x i8] c"\016uvcvideo: Unable to initialize the status endpoint (%d), status interrupt will not be supported.\0A\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: UVC device initialized.\0A\00", align 1
@.str.115 = private unnamed_addr constant [46 x i8] c"\016uvcvideo: Failed to register entites (%d).\0A\00", align 1
@.str.116 = private unnamed_addr constant [58 x i8] c"\016uvcvideo: No streaming interface found for terminal %u.\00", align 1
@.str.117 = private unnamed_addr constant [51 x i8] c"\013uvcvideo: Failed to initialize the device (%d).\0A\00", align 1
@.str.118 = private unnamed_addr constant [51 x i8] c"\013uvcvideo: Failed to register video device (%d).\0A\00", align 1
@.str.87 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Found a valid video chain (%s).\0A\00", align 1
@.str.88 = private unnamed_addr constant [41 x i8] c"\016uvcvideo: No valid video chain found.\0A\00", align 1
@.str.114 = private unnamed_addr constant [61 x i8] c"\017uvcvideo: Found a video chain by fallback heuristic (%s).\0A\00", align 1
@.str.92 = private unnamed_addr constant [12 x i8] c"\01c <- XU %d\00", align 1
@.str.93 = private unnamed_addr constant [58 x i8] c"\017uvcvideo: Extension unit %d has more than 1 input pin.\0A\00", align 1
@.str.94 = private unnamed_addr constant [12 x i8] c"\01c <- PU %d\00", align 1
@.str.95 = private unnamed_addr constant [55 x i8] c"\017uvcvideo: Found multiple Processing Units in chain.\0A\00", align 1
@.str.96 = private unnamed_addr constant [12 x i8] c"\01c <- SU %d\00", align 1
@.str.97 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Found multiple Selector Units in chain.\0A\00", align 1
@.str.98 = private unnamed_addr constant [13 x i8] c"\01c <- IT %d\0A\00", align 1
@.str.99 = private unnamed_addr constant [9 x i8] c"\01c OT %d\00", align 1
@.str.100 = private unnamed_addr constant [60 x i8] c"\017uvcvideo: Unsupported entity type 0x%04x found in chain.\0A\00", align 1
@uvc_print_chain.buffer = internal global [43 x i8] zeroinitializer, align 16
@.str.110 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.111 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.112 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.113 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.90 = private unnamed_addr constant [32 x i8] c"\017uvcvideo: Scanning UVC chain:\00", align 1
@.str.91 = private unnamed_addr constant [60 x i8] c"\017uvcvideo: Found reference to entity %d already in chain.\0A\00", align 1
@.str.105 = private unnamed_addr constant [9 x i8] c"\01c <- IT\00", align 1
@.str.106 = private unnamed_addr constant [76 x i8] c"\017uvcvideo: Selector unit %d input %d isn't connected to an input terminal\0A\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"\01c %d\00", align 1
@.str.108 = private unnamed_addr constant [4 x i8] c"\01c\0A\00", align 1
@.str.109 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: Found reference to unknown entity %d.\0A\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"\01c (->\00", align 1
@.str.102 = private unnamed_addr constant [9 x i8] c"\01c XU %d\00", align 1
@.str.103 = private unnamed_addr constant [44 x i8] c"\017uvcvideo: Unsupported input terminal %u.\0A\00", align 1
@.str.104 = private unnamed_addr constant [4 x i8] c"\01c)\00", align 1
@.str.89 = private unnamed_addr constant [19 x i8] c"&chain->ctrl_mutex\00", align 1
@uvc_alloc_chain.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.17 = private unnamed_addr constant [50 x i8] c"\017uvcvideo: Found a Status endpoint (addr %02x).\0A\00", align 1
@.str.20 = private unnamed_addr constant [62 x i8] c"\017uvcvideo: device %d videocontrol interface %d HEADER error\0A\00", align 1
@.str.21 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: device %d interface %d doesn't exists\0A\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d videocontrol interface %d INPUT_TERMINAL error\0A\00", align 1
@.str.23 = private unnamed_addr constant [101 x i8] c"\017uvcvideo: device %d videocontrol interface %d INPUT_TERMINAL %d has invalid type 0x%04x, skipping\0A\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"Camera %u\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"Media %u\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"Input %u\00", align 1
@.str.27 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: device %d videocontrol interface %d OUTPUT_TERMINAL error\0A\00", align 1
@.str.28 = private unnamed_addr constant [102 x i8] c"\017uvcvideo: device %d videocontrol interface %d OUTPUT_TERMINAL %d has invalid type 0x%04x, skipping\0A\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"Output %u\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"\017uvcvideo: device %d videocontrol interface %d SELECTOR_UNIT error\0A\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"Selector %u\00", align 1
@.str.32 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: device %d videocontrol interface %d PROCESSING_UNIT error\0A\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Processing %u\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d videocontrol interface %d EXTENSION_UNIT error\0A\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Extension %u\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"\017uvcvideo: Found an unknown CS_INTERFACE descriptor (%u)\0A\00", align 1
@.str.35 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d interface %d isn't a video streaming interface\0A\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"\017uvcvideo: device %d interface %d is already claimed\0A\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"&streaming->mutex\00", align 1
@uvc_parse_streaming.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"\017uvcvideo: trying extra data from endpoint %u.\0A\00", align 1
@.str.39 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: no class-specific streaming interface descriptors found.\0A\00", align 1
@.str.40 = private unnamed_addr constant [80 x i8] c"\017uvcvideo: device %d videostreaming interface %d HEADER descriptor not found.\0A\00", align 1
@.str.41 = private unnamed_addr constant [81 x i8] c"\017uvcvideo: device %d videostreaming interface %d HEADER descriptor is invalid.\0A\00", align 1
@.str.42 = private unnamed_addr constant [79 x i8] c"\017uvcvideo: device %d videostreaming interface %d FORMAT %u is not supported.\0A\00", align 1
@.str.43 = private unnamed_addr constant [85 x i8] c"\017uvcvideo: device %d videostreaming interface %d has no supported formats defined.\0A\00", align 1
@.str.44 = private unnamed_addr constant [96 x i8] c"\017uvcvideo: device %d videostreaming interface %d has %u bytes of trailing descriptor garbage.\0A\00", align 1
@.str.45 = private unnamed_addr constant [64 x i8] c"\017uvcvideo: device %d videostreaming interface %d FORMAT error\0A\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"\016uvcvideo: Unknown video format %pUl\0A\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"%pUl\0A\00", align 1
@.str.48 = private unnamed_addr constant [23 x i8] c"Greyscale 8-bit (Y8  )\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"MJPEG\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"SD-DV\00", align 1
@.str.51 = private unnamed_addr constant [7 x i8] c"SDL-DV\00", align 1
@.str.52 = private unnamed_addr constant [6 x i8] c"HD-DV\00", align 1
@.str.53 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: device %d videostreaming interface %d: unknown DV format %u\0A\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c" 60Hz\00", align 1
@.str.55 = private unnamed_addr constant [6 x i8] c" 50Hz\00", align 1
@.str.56 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: device %d videostreaming interface %d unsupported format %u\0A\00", align 1
@.str.57 = private unnamed_addr constant [30 x i8] c"\017uvcvideo: Found format %s.\0A\00", align 1
@.str.58 = private unnamed_addr constant [63 x i8] c"\017uvcvideo: device %d videostreaming interface %d FRAME error\0A\00", align 1
@.str.59 = private unnamed_addr constant [33 x i8] c"\017uvcvideo: - %ux%u (%u.%u fps)\0A\00", align 1
@.str.60 = private unnamed_addr constant [69 x i8] c"\017uvcvideo: device %d videostreaming interface %d COLORFORMAT error\0A\00", align 1
@uvc_colorspace.colorprimaries = internal constant [6 x i8] c"\00\08\05\06\01\02", align 1
@uvc_fmts = internal global [29 x %struct.uvc_format_desc] [%struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i32 0, i32 0), [16 x i8] c"YUY2\00\00\10\00\80\00\00\AA\008\9Bq", i32 1448695129 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i32 0, i32 0), [16 x i8] c"YUY2\00\00\10\00\80\00\00\00\008\9Bq", i32 1448695129 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), [16 x i8] c"NV12\00\00\10\00\80\00\00\AA\008\9Bq", i32 842094158 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), [16 x i8] c"MJPG\00\00\10\00\80\00\00\AA\008\9Bq", i32 1196444237 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i32 0, i32 0), [16 x i8] c"YV12\00\00\10\00\80\00\00\AA\008\9Bq", i32 842094169 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i32 0, i32 0), [16 x i8] c"I420\00\00\10\00\80\00\00\AA\008\9Bq", i32 842093913 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i32 0, i32 0), [16 x i8] c"M420\00\00\10\00\80\00\00\AA\008\9Bq", i32 808596557 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.66, i32 0, i32 0), [16 x i8] c"UYVY\00\00\10\00\80\00\00\AA\008\9Bq", i32 1498831189 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i32 0, i32 0), [16 x i8] c"Y800\00\00\10\00\80\00\00\AA\008\9Bq", i32 1497715271 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i32 0, i32 0), [16 x i8] c"Y8  \00\00\10\00\80\00\00\AA\008\9Bq", i32 1497715271 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i32 0, i32 0), [16 x i8] c"Y10 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540029273 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i32 0, i32 0), [16 x i8] c"Y12 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540160345 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i32 0, i32 0), [16 x i8] c"Y16 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540422489 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.71, i32 0, i32 0), [16 x i8] c"BY8 \00\00\10\00\80\00\00\AA\008\9Bq", i32 825770306 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.72, i32 0, i32 0), [16 x i8] c"BA81\00\00\10\00\80\00\00\AA\008\9Bq", i32 825770306 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.73, i32 0, i32 0), [16 x i8] c"GBRG\00\00\10\00\80\00\00\AA\008\9Bq", i32 1196573255 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.74, i32 0, i32 0), [16 x i8] c"GRBG\00\00\10\00\80\00\00\AA\008\9Bq", i32 1195528775 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.75, i32 0, i32 0), [16 x i8] c"RGGB\00\00\10\00\80\00\00\AA\008\9Bq", i32 1111967570 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.76, i32 0, i32 0), [16 x i8] c"RGBP\00\00\10\00\80\00\00\AA\008\9Bq", i32 1346520914 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.77, i32 0, i32 0), [16 x i8] c"}\EB6\E4OR\CE\11\9FS\00 \AF\0B\A7p", i32 861030210 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.78, i32 0, i32 0), [16 x i8] c"H264\00\00\10\00\80\00\00\AA\008\9Bq", i32 875967048 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.79, i32 0, i32 0), [16 x i8] c"Y8I \00\00\10\00\80\00\00\AA\008\9Bq", i32 541669465 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.80, i32 0, i32 0), [16 x i8] c"Y12I\00\00\10\00\80\00\00\AA\008\9Bq", i32 1228026201 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.81, i32 0, i32 0), [16 x i8] c"Z16 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540422490 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.82, i32 0, i32 0), [16 x i8] c"RW10\00\00\10\00\80\00\00\AA\008\9Bq", i32 1094799984 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.83, i32 0, i32 0), [16 x i8] c"BG16\00\00\10\00\80\00\00\AA\008\9Bq", i32 844257602 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.84, i32 0, i32 0), [16 x i8] c"GB16\00\00\10\00\80\00\00\AA\008\9Bq", i32 909197895 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.85, i32 0, i32 0), [16 x i8] c"RG16\00\00\10\00\80\00\00\AA\008\9Bq", i32 909199186 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.86, i32 0, i32 0), [16 x i8] c"GR16\00\00\10\00\80\00\00\AA\008\9Bq", i32 909201991 }], align 16
@.str.61 = private unnamed_addr constant [17 x i8] c"YUV 4:2:2 (YUYV)\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (NV12)\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"YVU 4:2:0 (YV12)\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (I420)\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (M420)\00", align 1
@.str.66 = private unnamed_addr constant [17 x i8] c"YUV 4:2:2 (UYVY)\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"Greyscale 8-bit (Y800)\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"Greyscale 10-bit (Y10 )\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"Greyscale 12-bit (Y12 )\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"Greyscale 16-bit (Y16 )\00", align 1
@.str.71 = private unnamed_addr constant [18 x i8] c"BGGR Bayer (BY8 )\00", align 1
@.str.72 = private unnamed_addr constant [18 x i8] c"BGGR Bayer (BA81)\00", align 1
@.str.73 = private unnamed_addr constant [18 x i8] c"GBRG Bayer (GBRG)\00", align 1
@.str.74 = private unnamed_addr constant [18 x i8] c"GRBG Bayer (GRBG)\00", align 1
@.str.75 = private unnamed_addr constant [18 x i8] c"RGGB Bayer (RGGB)\00", align 1
@.str.76 = private unnamed_addr constant [7 x i8] c"RGB565\00", align 1
@.str.77 = private unnamed_addr constant [17 x i8] c"BGR 8:8:8 (BGR3)\00", align 1
@.str.78 = private unnamed_addr constant [6 x i8] c"H.264\00", align 1
@.str.79 = private unnamed_addr constant [22 x i8] c"Greyscale 8 L/R (Y8I)\00", align 1
@.str.80 = private unnamed_addr constant [24 x i8] c"Greyscale 12 L/R (Y12I)\00", align 1
@.str.81 = private unnamed_addr constant [24 x i8] c"Depth data 16-bit (Z16)\00", align 1
@.str.82 = private unnamed_addr constant [24 x i8] c"Bayer 10-bit (SRGGB10P)\00", align 1
@.str.83 = private unnamed_addr constant [23 x i8] c"Bayer 16-bit (SBGGR16)\00", align 1
@.str.84 = private unnamed_addr constant [23 x i8] c"Bayer 16-bit (SGBRG16)\00", align 1
@.str.85 = private unnamed_addr constant [23 x i8] c"Bayer 16-bit (SRGGB16)\00", align 1
@.str.86 = private unnamed_addr constant [23 x i8] c"Bayer 16-bit (SGRBG16)\00", align 1
@llvm.used = appending global [21 x i8*] [i8* bitcast (%struct.kernel_param* @__param_clock to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_clock24, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_hwtimestamps to i8*), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__UNIQUE_ID_hwtimestampstype25, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @__UNIQUE_ID_hwtimestamps26, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_nodrop to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_nodroptype27, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_nodrop28, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_quirks to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_quirkstype29, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_quirks30, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_trace to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_tracetype31, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_trace32, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_timeout to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_timeouttype33, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_timeout34, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_author35, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_description36, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__UNIQUE_ID_license37, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__UNIQUE_ID_version38, i32 0, i32 0)], section "llvm.metadata"
@__param_clock = internal constant %struct.kernel_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_clock, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @__param_ops_clock, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_clock_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_clock24 = internal constant [41 x i8] c"parm=clock:Video buffers timestamp clock\00", section ".modinfo", align 1
@__param_hwtimestamps = internal constant %struct.kernel_param { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @__param_str_hwtimestamps, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_hw_timestamps_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_hwtimestampstype25 = internal constant [27 x i8] c"parmtype=hwtimestamps:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_hwtimestamps26 = internal constant [42 x i8] c"parm=hwtimestamps:Use hardware timestamps\00", section ".modinfo", align 1
@__param_nodrop = internal constant %struct.kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__param_str_nodrop, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_no_drop_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_nodroptype27 = internal constant [21 x i8] c"parmtype=nodrop:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_nodrop28 = internal constant [41 x i8] c"parm=nodrop:Don't drop incomplete frames\00", section ".modinfo", align 1
@__param_quirks = internal constant %struct.kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__param_str_quirks, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_quirks_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_quirkstype29 = internal constant [21 x i8] c"parmtype=quirks:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_quirks30 = internal constant [33 x i8] c"parm=quirks:Forced device quirks\00", section ".modinfo", align 1
@__param_trace = internal constant %struct.kernel_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_trace, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_trace_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_tracetype31 = internal constant [20 x i8] c"parmtype=trace:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_trace32 = internal constant [31 x i8] c"parm=trace:Trace level bitmask\00", section ".modinfo", align 1
@__param_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__param_str_timeout, i32 0, i32 0), %struct.module* @__this_module, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.79 { i8* bitcast (i32* @uvc_timeout_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_timeouttype33 = internal constant [22 x i8] c"parmtype=timeout:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_timeout34 = internal constant [48 x i8] c"parm=timeout:Streaming control requests timeout\00", section ".modinfo", align 1
@__UNIQUE_ID_author35 = internal constant [60 x i8] c"author=Laurent Pinchart <laurent.pinchart@ideasonboard.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description36 = internal constant [35 x i8] c"description=USB Video Class driver\00", section ".modinfo", align 1
@__UNIQUE_ID_license37 = internal constant [12 x i8] c"license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_version38 = internal constant [14 x i8] c"version=1.1.1\00", section ".modinfo", align 1
@__param_str_timeout = internal constant [8 x i8] c"timeout\00", align 1
@param_ops_uint = external constant %struct.kernel_param_ops, align 8
@__param_str_trace = internal constant [6 x i8] c"trace\00", align 1
@__param_str_quirks = internal constant [7 x i8] c"quirks\00", align 1
@__param_str_nodrop = internal constant [7 x i8] c"nodrop\00", align 1
@__param_str_hwtimestamps = internal constant [13 x i8] c"hwtimestamps\00", align 1
@__param_str_clock = internal constant [6 x i8] c"clock\00", align 1
@__param_ops_clock = internal constant %struct.kernel_param_ops { i32 0, i32 (i8*, %struct.kernel_param*)* @uvc_clock_param_set, i32 (i8*, %struct.kernel_param*)* @uvc_clock_param_get, void (i8*)* null }, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"CLOCK_MONOTONIC\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"CLOCK_REALTIME\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"clock_\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"monotonic\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"realtime\00", align 1
@.str.123 = private unnamed_addr constant [34 x i8] c"\016USB Video Class driver (1.1.1)\0A\00", align 1
@uvc_queue_qops = internal constant %struct.vb2_ops { i32 (%struct.vb2_queue*, i32*, i32*, i32*, %struct.device**)* @uvc_queue_setup, void (%struct.vb2_queue*)* @vb2_ops_wait_prepare, void (%struct.vb2_queue*)* @vb2_ops_wait_finish, i32 (%struct.vb2_buffer*)* null, i32 (%struct.vb2_buffer*)* @uvc_buffer_prepare, void (%struct.vb2_buffer*)* @uvc_buffer_finish, void (%struct.vb2_buffer*)* null, i32 (%struct.vb2_queue*, i32)* @uvc_start_streaming, void (%struct.vb2_queue*)* @uvc_stop_streaming, void (%struct.vb2_buffer*)* @uvc_buffer_queue }, align 8
@vb2_vmalloc_memops = external constant %struct.vb2_mem_ops, align 8
@.str.124 = private unnamed_addr constant [14 x i8] c"&queue->mutex\00", align 1
@uvc_queue_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.2.125 = private unnamed_addr constant [26 x i8] c"&(&queue->irqlock)->rlock\00", align 1
@uvc_queue_init.__key.1 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.3.132 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: [E] Bytes used out of bounds.\0A\00", align 1
@uvc_ioctl_ops = constant %struct.v4l2_ioctl_ops { i32 (%struct.file*, i8*, %struct.v4l2_capability*)* @uvc_ioctl_querycap, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* @uvc_ioctl_enum_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* @uvc_ioctl_enum_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_g_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_g_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_s_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_s_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_try_fmt_vid_cap, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* @uvc_ioctl_try_fmt_vid_out, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_format*)* null, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)* @uvc_ioctl_reqbufs, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* @uvc_ioctl_querybuf, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* @uvc_ioctl_qbuf, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)* @uvc_ioctl_expbuf, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* @uvc_ioctl_dqbuf, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)* @uvc_ioctl_create_bufs, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)* null, i32 (%struct.file*, i8*, i32)* null, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)* null, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)* null, i32 (%struct.file*, i8*, i32)* @uvc_ioctl_streamon, i32 (%struct.file*, i8*, i32)* @uvc_ioctl_streamoff, i32 (%struct.file*, i8*, i64*)* null, i32 (%struct.file*, i8*, i64)* null, i32 (%struct.file*, i8*, i64*)* null, i32 (%struct.file*, i8*, %struct.v4l2_input*)* @uvc_ioctl_enum_input, i32 (%struct.file*, i8*, i32*)* @uvc_ioctl_g_input, i32 (%struct.file*, i8*, i32)* @uvc_ioctl_s_input, i32 (%struct.file*, i8*, %struct.v4l2_output*)* null, i32 (%struct.file*, i8*, i32*)* null, i32 (%struct.file*, i8*, i32)* null, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)* @uvc_ioctl_queryctrl, i32 (%struct.file*, i8*, %struct.v4l2_query_ext_ctrl*)* @uvc_ioctl_query_ext_ctrl, i32 (%struct.file*, i8*, %struct.anon.26*)* @uvc_ioctl_g_ctrl, i32 (%struct.file*, i8*, %struct.anon.26*)* @uvc_ioctl_s_ctrl, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* @uvc_ioctl_g_ext_ctrls, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* @uvc_ioctl_s_ext_ctrls, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)* @uvc_ioctl_try_ext_ctrls, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)* @uvc_ioctl_querymenu, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_audio*)* null, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)* null, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)* null, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)* null, i32 (%struct.file*, i8*, %struct.v4l2_crop*)* null, i32 (%struct.file*, i8*, %struct.v4l2_crop*)* null, i32 (%struct.file*, i8*, %struct.v4l2_selection*)* @uvc_ioctl_g_selection, i32 (%struct.file*, i8*, %struct.v4l2_selection*)* null, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)* null, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)* null, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)* null, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)* null, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)* null, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)* null, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)* null, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)* @uvc_ioctl_g_parm, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)* @uvc_ioctl_s_parm, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)* null, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frequency_band*)* null, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)* null, i32 (%struct.file*, i8*)* null, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)* null, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)* @uvc_ioctl_enum_framesizes, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)* @uvc_ioctl_enum_frameintervals, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)* null, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)* null, i32 (%struct.file*, i8*, %struct.v4l2_edid*)* null, i32 (%struct.file*, i8*, %struct.v4l2_edid*)* null, i32 (%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)* @uvc_ioctl_subscribe_event, i32 (%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*)* @v4l2_event_unsubscribe, i64 (%struct.file*, i8*, i1, i32, i8*)* @uvc_ioctl_default }, align 8
@.str.6.138 = private unnamed_addr constant [47 x i8] c"\017uvcvideo: Unsupported V4L2 control type %u.\0A\00", align 1
@.str.5.140 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: Setting frame interval to %u/%u (%u).\0A\00", align 1
@.str.2.141 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Trying format 0x%08x (%c%c%c%c): %ux%u.\0A\00", align 1
@.str.3.142 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: Unsupported size %ux%u.\0A\00", align 1
@.str.4.143 = private unnamed_addr constant [64 x i8] c"\017uvcvideo: Using default frame interval %u.%u us (%u.%u fps).\0A\00", align 1
@uvc_fops = constant %struct.v4l2_file_operations { %struct.module* @__this_module, i64 (%struct.file*, i8*, i64, i64*)* @uvc_v4l2_read, i64 (%struct.file*, i8*, i64, i64*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @uvc_v4l2_poll, i64 (%struct.file*, i32, i64)* @video_ioctl2, i64 (%struct.file*, i32, i64)* @uvc_v4l2_compat_ioctl32, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* @uvc_v4l2_mmap, i32 (%struct.file*)* @uvc_v4l2_open, i32 (%struct.file*)* @uvc_v4l2_release }, align 8
@.str.13.148 = private unnamed_addr constant [30 x i8] c"\017uvcvideo: uvc_v4l2_release\0A\00", align 1
@.str.12.149 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_open\0A\00", align 1
@.str.11.152 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_mmap\0A\00", align 1
@uvc_v4l2_put_xu_query.__warned = internal global i8 0, section ".data.unlikely", align 1
@.str.9.153 = private unnamed_addr constant [33 x i8] c"drivers/media/usb/uvc/uvc_v4l2.c\00", align 1
@.str.10.154 = private unnamed_addr constant [36 x i8] c"./arch/x86/include/asm/uaccess_64.h\00", align 1
@current_task = external global %struct.task_struct*, align 8
@__preempt_count = external global i32, align 4
@uvc_v4l2_get_xu_query.__warned = internal global i8 0, section ".data.unlikely", align 1
@uvc_v4l2_put_xu_mapping.__warned = internal global i8 0, section ".data.unlikely", align 1
@uvc_v4l2_get_xu_mapping.__warned = internal global i8 0, section ".data.unlikely", align 1
@.str.8.155 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_poll\0A\00", align 1
@.str.7.156 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: uvc_v4l2_read: not implemented.\0A\00", align 1
@.str.159 = private unnamed_addr constant [75 x i8] c"\013uvcvideo: Failed to query (%s) UVC control %u on unit %u: %d (exp. %u).\0A\00", align 1
@.str.18.160 = private unnamed_addr constant [10 x i8] c"<invalid>\00", align 1
@.str.17.161 = private unnamed_addr constant [8 x i8] c"GET_DEF\00", align 1
@.str.16.162 = private unnamed_addr constant [9 x i8] c"GET_INFO\00", align 1
@.str.15.163 = private unnamed_addr constant [8 x i8] c"GET_LEN\00", align 1
@.str.14.164 = private unnamed_addr constant [8 x i8] c"GET_RES\00", align 1
@.str.13.165 = private unnamed_addr constant [8 x i8] c"GET_MAX\00", align 1
@.str.12.166 = private unnamed_addr constant [8 x i8] c"GET_MIN\00", align 1
@.str.11.167 = private unnamed_addr constant [8 x i8] c"GET_CUR\00", align 1
@.str.10.168 = private unnamed_addr constant [8 x i8] c"SET_CUR\00", align 1
@.str.22.172 = private unnamed_addr constant [97 x i8] c"\016uvcvideo: UVC non compliance - GET_MIN/MAX(PROBE) incorrectly supported. Enabling workaround.\0A\00", align 1
@.str.23.174 = private unnamed_addr constant [85 x i8] c"\016uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround.\0A\00", align 1
@.str.20.175 = private unnamed_addr constant [6 x i8] c"probe\00", align 1
@.str.21.176 = private unnamed_addr constant [7 x i8] c"commit\00", align 1
@.str.24.177 = private unnamed_addr constant [65 x i8] c"\013uvcvideo: Failed to query (%u) UVC %s control : %d (exp. %u).\0A\00", align 1
@.str.19.181 = private unnamed_addr constant [58 x i8] c"\013uvcvideo: Failed to set UVC %s control : %d (exp. %u).\0A\00", align 1
@.str.1.185 = private unnamed_addr constant [92 x i8] c"\017uvcvideo: %s: PTS %u y %llu.%06llu SOF %u.%06llu (x1 %u x2 %u y1 %u y2 %u SOF offset %u)\0A\00", align 1
@.str.2.186 = private unnamed_addr constant [96 x i8] c"\017uvcvideo: %s: SOF %u.%06llu y %llu ts %llu buf ts %llu (x1 %u/%u/%u x2 %u/%u/%u y1 %u y2 %u)\0A\00", align 1
@.str.3.188 = private unnamed_addr constant [61 x i8] c"frames:  %u\0Apackets: %u\0Aempty:   %u\0Aerrors:  %u\0Ainvalid: %u\0A\00", align 1
@.str.4.189 = private unnamed_addr constant [34 x i8] c"pts: %u early, %u initial, %u ok\0A\00", align 1
@.str.5.190 = private unnamed_addr constant [30 x i8] c"scr: %u count ok, %u diff ok\0A\00", align 1
@.str.6.191 = private unnamed_addr constant [40 x i8] c"sof: %u <= sof <= %u, freq %u.%03u kHz\0A\00", align 1
@.str.25.198 = private unnamed_addr constant [68 x i8] c"\017uvcvideo: Device requested null bandwidth, defaulting to lowest.\0A\00", align 1
@.str.26.199 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Device requested %u B/frame bandwidth.\0A\00", align 1
@.str.27.200 = private unnamed_addr constant [65 x i8] c"\017uvcvideo: No fast enough alt setting for requested bandwidth.\0A\00", align 1
@.str.28.201 = private unnamed_addr constant [68 x i8] c"\017uvcvideo: Selecting alternate setting %u (%u B/frame bandwidth).\0A\00", align 1
@.str.29.202 = private unnamed_addr constant [43 x i8] c"\013uvcvideo: Failed to submit URB %u (%d).\0A\00", align 1
@.str.32.204 = private unnamed_addr constant [63 x i8] c"\014uvcvideo: Non-zero status (%d) in video completion handler.\0A\00", align 1
@.str.33.206 = private unnamed_addr constant [48 x i8] c"\013uvcvideo: Failed to resubmit video URB (%d).\0A\00", align 1
@.str.30.208 = private unnamed_addr constant [59 x i8] c"\017uvcvideo: Allocated %u URB buffers of %ux%u bytes each.\0A\00", align 1
@.str.31.209 = private unnamed_addr constant [67 x i8] c"\017uvcvideo: Failed to allocate URB buffers (%u bytes per packet).\0A\00", align 1
@.str.7.212 = private unnamed_addr constant [47 x i8] c"\016uvcvideo: No supported video formats found.\0A\00", align 1
@.str.8.214 = private unnamed_addr constant [63 x i8] c"\016uvcvideo: No frame descriptor found for the default format.\0A\00", align 1
@.str.9.215 = private unnamed_addr constant [79 x i8] c"\016uvcvideo: Isochronous endpoints are not supported for video output devices.\0A\00", align 1
@.str.42.216 = private unnamed_addr constant [41 x i8] c"\017uvcvideo: Frame complete (EOF found).\0A\00", align 1
@.str.43.217 = private unnamed_addr constant [35 x i8] c"\017uvcvideo: EOF in empty payload.\0A\00", align 1
@.str.35.219 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Marking buffer as bad (error bit set).\0A\00", align 1
@.str.36.220 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Dropping payload (out of sync).\0A\00", align 1
@.str.37.221 = private unnamed_addr constant [47 x i8] c"\017uvcvideo: Frame complete (FID bit toggled).\0A\00", align 1
@.str.39.223 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40.224 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.38.225 = private unnamed_addr constant [118 x i8] c"\017uvcvideo: frame %u stats: %u/%u/%u packets, %u/%u/%u pts (%searly %sinitial), %u/%u scr, last pts/stc/sof %u/%u/%u\0A\00", align 1
@.str.44.230 = private unnamed_addr constant [23 x i8] c"&(&clock->lock)->rlock\00", align 1
@uvc_video_clock_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@uvc_ctrl_sub_ev_ops = constant { i32 (%struct.v4l2_subscribed_event.1377*, i32)*, void (%struct.v4l2_subscribed_event.1377*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* } { i32 (%struct.v4l2_subscribed_event.1377*, i32)* @uvc_ctrl_add_event, void (%struct.v4l2_subscribed_event.1377*)* @uvc_ctrl_del_event, void (%struct.v4l2_event*, %struct.v4l2_event*)* @v4l2_ctrl_replace, void (%struct.v4l2_event*, %struct.v4l2_event*)* @v4l2_ctrl_merge }, align 8
@.str.7.239 = private unnamed_addr constant [88 x i8] c"\016uvcvideo: UVC non compliance - GET_RES failed on an XU control. Enabling workaround.\0A\00", align 1
@.str.6.241 = private unnamed_addr constant [39 x i8] c"\017uvcvideo: Control 0x%08x not found.\0A\00", align 1
@.str.258 = private unnamed_addr constant [42 x i8] c"\017uvcvideo: Extension unit %u not found.\0A\00", align 1
@.str.1.259 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Control %pUl/%u not found.\0A\00", align 1
@.str.13.261 = private unnamed_addr constant [33 x i8] c"./arch/x86/include/asm/uaccess.h\00", align 1
@.str.14.263 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.8.264 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: Failed to initialize control %pUl/%u on device %s entity %u\0A\00", align 1
@.str.12.267 = private unnamed_addr constant [58 x i8] c"\017uvcvideo: Added control %pUl/%u to device %s entity %u\0A\00", align 1
@.str.9.268 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: GET_LEN failed on control %pUl/%u (%d).\0A\00", align 1
@.str.10.270 = private unnamed_addr constant [54 x i8] c"\017uvcvideo: GET_INFO failed on control %pUl/%u (%d).\0A\00", align 1
@.str.11.271 = private unnamed_addr constant [82 x i8] c"\017uvcvideo: XU control %pUl/%u queried: len %u, flags { get %u set %u auto %u }.\0A\00", align 1
@uvc_ctrl_fixup_xu_info.fixups = internal constant [3 x %struct.uvc_ctrl_fixup] [%struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2242, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }, %struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2252, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }, %struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2452, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }], align 16
@.str.2.274 = private unnamed_addr constant [32 x i8] c"\016restoring control %pUl/%u/%u\0A\00", align 1
@.str.3.277 = private unnamed_addr constant [67 x i8] c"\017uvcvideo: Can't add mapping '%s', control id 0x%08x is invalid.\0A\00", align 1
@.str.4.278 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: Can't add mapping '%s', control id 0x%08x already exists.\0A\00", align 1
@.str.5.281 = private unnamed_addr constant [75 x i8] c"\017uvcvideo: Can't add mapping '%s', maximum mappings count (%u) exceeded.\0A\00", align 1
@.str.15.282 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Adding mapping '%s' to control %pUl/%u.\0A\00", align 1
@uvc_processing_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", align 16
@uvc_camera_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", align 16
@uvc_media_transport_input_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03", align 16
@uvc_ctrls = internal global [35 x %struct.uvc_control_info] [%struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 0, i8 2, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 1, i8 3, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 2, i8 6, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 3, i8 7, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 4, i8 8, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 5, i8 9, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 6, i8 10, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 7, i8 12, i16 4, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 8, i8 1, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 9, i8 4, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 10, i8 5, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 11, i8 16, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 11, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 13, i8 13, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 14, i8 14, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 15, i8 15, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 16, i8 17, i16 1, i32 2 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 17, i8 18, i16 1, i32 2 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 0, i8 1, i16 1, i32 67 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 1, i8 2, i16 1, i32 115 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 2, i8 3, i16 1, i32 67 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 3, i8 4, i16 4, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 4, i8 5, i16 1, i32 65 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 5, i8 6, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 6, i8 7, i16 2, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 7, i8 9, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 8, i8 10, i16 1, i32 129 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 9, i8 11, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 10, i8 12, i16 3, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 11, i8 13, i16 8, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 12, i8 14, i16 4, i32 191 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 15, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 14, i8 16, i16 2, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 17, i8 8, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 18, i8 17, i16 1, i32 195 }], align 16
@uvc_ctrl_mappings = internal global [29 x %struct.uvc_control_mapping] [%struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963776, [32 x i8] c"Brightness\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 2, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963777, [32 x i8] c"Contrast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 3, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963779, [32 x i8] c"Hue\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 6, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963801, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963778, [32 x i8] c"Saturation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 7, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963803, [32 x i8] c"Sharpness\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 8, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963792, [32 x i8] c"Gamma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 9, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963804, [32 x i8] c"Backlight Compensation\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 1, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963795, [32 x i8] c"Gain\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 4, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963800, [32 x i8] c"Power Line Frequency\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 5, i8 2, i8 0, i32 3, i32 4, %struct.uvc_menu_info* getelementptr inbounds ([3 x %struct.uvc_menu_info], [3 x %struct.uvc_menu_info]* @power_line_frequency_controls, i32 0, i32 0), i32 3, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963801, [32 x i8] c"Hue, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 16, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963779, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094849, [32 x i8] c"Exposure, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 2, i8 4, i8 0, i32 3, i32 5, %struct.uvc_menu_info* getelementptr inbounds ([4 x %struct.uvc_menu_info], [4 x %struct.uvc_menu_info]* @exposure_auto_controls, i32 0, i32 0), i32 4, i32 0, i32 0, [2 x i32] [i32 10094850, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094851, [32 x i8] c"Exposure, Auto Priority\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 3, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094850, [32 x i8] c"Exposure (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 4, i8 32, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 10094849, i32 1, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963788, [32 x i8] c"White Balance Temperature, Auto\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 11, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963802, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963802, [32 x i8] c"White Balance Temperature\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 10, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963788, [32 x i8] c"White Balance Component, Auto\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 13, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963791, i32 9963790], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963791, [32 x i8] c"White Balance Blue Component\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963790, [32 x i8] c"White Balance Red Component\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 16, i8 16, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094858, [32 x i8] c"Focus (absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 6, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 10094860, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094860, [32 x i8] c"Focus, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 8, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 10094858, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094865, [32 x i8] c"Iris, Absolute\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 9, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094866, [32 x i8] c"Iris, Relative\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 10, i8 8, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094861, [32 x i8] c"Zoom, Absolute\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 11, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094863, [32 x i8] c"Zoom, Continuous\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 12, i8 0, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_ctrl_get_zoom, void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_ctrl_set_zoom }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094856, [32 x i8] c"Pan (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 32, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094857, [32 x i8] c"Tilt (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 32, i8 32, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094880, [32 x i8] c"Pan (Speed)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 14, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_ctrl_get_rel_speed, void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_ctrl_set_rel_speed }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094881, [32 x i8] c"Tilt (Speed)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 14, i8 16, i8 16, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_ctrl_get_rel_speed, void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_ctrl_set_rel_speed }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094864, [32 x i8] c"Privacy\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 17, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }], align 16
@power_line_frequency_controls = internal global [3 x %struct.uvc_menu_info] [%struct.uvc_menu_info { i32 0, [32 x i8] c"Disabled\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 1, [32 x i8] c"50 Hz\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 2, [32 x i8] c"60 Hz\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }], align 16
@exposure_auto_controls = internal global [4 x %struct.uvc_menu_info] [%struct.uvc_menu_info { i32 2, [32 x i8] c"Auto Mode\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 1, [32 x i8] c"Manual Mode\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 4, [32 x i8] c"Shutter Priority Mode\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 8, [32 x i8] c"Aperture Priority Mode\00\00\00\00\00\00\00\00\00\00" }], align 16
@uvc_ctrl_prune_entity.camera_blacklist = internal constant [1 x %struct.uvc_ctrl_blacklist] [%struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 1784, i16 12293, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9 }], align 16
@uvc_ctrl_prune_entity.processing_blacklist = internal constant [3 x %struct.uvc_ctrl_blacklist] [%struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 5075, i16 20635, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9 }, %struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 7247, i16 12288, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 6 }, %struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 22918, i16 577, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 2 }], align 16
@.str.16.285 = private unnamed_addr constant [57 x i8] c"\017uvcvideo: %u/%u control is black listed, removing it.\0A\00", align 1
@.str.2.292 = private unnamed_addr constant [64 x i8] c"\014uvcvideo: Non-zero status (%d) in status completion handler.\0A\00", align 1
@.str.3.293 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: Unknown status event type %u.\0A\00", align 1
@.str.4.294 = private unnamed_addr constant [49 x i8] c"\013uvcvideo: Failed to resubmit status URB (%d).\0A\00", align 1
@.str.10.295 = private unnamed_addr constant [54 x i8] c"\017uvcvideo: Invalid streaming status event received.\0A\00", align 1
@.str.12.296 = private unnamed_addr constant [8 x i8] c"pressed\00", align 1
@.str.13.297 = private unnamed_addr constant [9 x i8] c"released\00", align 1
@.str.11.298 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Button (intf %u) %s len %d\0A\00", align 1
@.str.14.299 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Stream %u error event %02x %02x len %d.\0A\00", align 1
@uvc_event_control.attrs = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.302, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.303, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.304, i32 0, i32 0)], align 16
@.str.8.300 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Invalid control status event received.\0A\00", align 1
@.str.9.301 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Control %u/%u %s change len %d.\0A\00", align 1
@.str.5.302 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.6.303 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.7.304 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str.307 = private unnamed_addr constant [8 x i8] c"/button\00", align 1
@.str.1.308 = private unnamed_addr constant [10 x i8] c"usb-%s-%s\00", align 1
@.str.317 = private unnamed_addr constant [46 x i8] c"\017uvcvideo: USB isochronous frame lost (%d).\0A\00", align 1
@isight_decode.hdr = internal constant [12 x i8] c"\11\223D\DE\AD\BE\EF\DE\AD\FA\CE", align 1
@.str.1.318 = private unnamed_addr constant [33 x i8] c"\017uvcvideo: iSight header found\0A\00", align 1
@.str.2.319 = private unnamed_addr constant [44 x i8] c"\017uvcvideo: Dropping packet (out of sync).\0A\00", align 1
@.str.3.320 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Frame complete (overflow).\0A\00", align 1
@uvc_debugfs_root_dir = internal global %struct.dentry* null, align 8
@.str.323 = private unnamed_addr constant [6 x i8] c"%u-%u\00", align 1
@.str.1.324 = private unnamed_addr constant [52 x i8] c"\016uvcvideo: Unable to create debugfs %s directory.\0A\00", align 1
@.str.2.325 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@uvc_debugfs_stats_fops = internal constant %struct.file_operations { %struct.module* @__this_module, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @uvc_debugfs_stats_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i32 (%struct.inode*, %struct.file*)* @uvc_debugfs_stats_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @uvc_debugfs_stats_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, %struct.file*, i64, i64)* null, i64 (%struct.file*, i64, i64, %struct.file*, i64)* null }, align 8
@.str.3.326 = private unnamed_addr constant [50 x i8] c"\016uvcvideo: Unable to create debugfs stats file.\0A\00", align 1
@usb_debug_root = external global %struct.dentry*, align 8
@.str.4.332 = private unnamed_addr constant [9 x i8] c"uvcvideo\00", align 1
@.str.5.333 = private unnamed_addr constant [48 x i8] c"\016uvcvideo: Unable to create debugfs directory\0A\00", align 1
@.str.340 = private unnamed_addr constant [55 x i8] c"\016uvcvideo: Failed to initialize entity for entity %u\0A\00", align 1
@.str.1.341 = private unnamed_addr constant [50 x i8] c"\016uvcvideo: Failed to create links for entity %u\0A\00", align 1
@uvc_subdev_ops = internal global %struct.v4l2_subdev_ops zeroinitializer, align 8

@__mod_usb__uvc_ids_device_table = alias [53 x %struct.usb_device_id], [53 x %struct.usb_device_id]* @uvc_ids
@init_module = alias i32 (), i32 ()* @uvc_init
@cleanup_module = alias void (), void ()* @uvc_cleanup

; Function Attrs: nounwind uwtable
define internal i32 @uvc_probe(%struct.usb_interface* %intf, %struct.usb_device_id* %id) #0 {
entry:
  %call = call %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %intf)
  %idVendor = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 1
  %0 = load i16, i16* %idVendor, align 2, !tbaa !2
  %conv = zext i16 %0 to i32
  %tobool = icmp ne i32 %conv, 0
  br i1 %tobool, label %land.lhs.true, label %do.body10

land.lhs.true:                                    ; preds = %entry
  %idProduct = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 2
  %1 = load i16, i16* %idProduct, align 4, !tbaa !8
  %conv1 = zext i16 %1 to i32
  %tobool2 = icmp ne i32 %conv1, 0
  br i1 %tobool2, label %do.body, label %do.body10

do.body:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %2, 1
  %tobool3 = icmp ne i32 %and, 0
  br i1 %tobool3, label %if.then4, label %if.end20

if.then4:                                         ; preds = %do.body
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %idVendor5 = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 1
  %3 = load i16, i16* %idVendor5, align 2, !tbaa !2
  %conv6 = zext i16 %3 to i32
  %idProduct7 = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 2
  %4 = load i16, i16* %idProduct7, align 4, !tbaa !8
  %conv8 = zext i16 %4 to i32
  %call9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.6, i32 0, i32 0), i8* %arraydecay, i32 %conv6, i32 %conv8)
  br label %if.end20

do.body10:                                        ; preds = %land.lhs.true, %entry
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and11 = and i32 %5, 1
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end20

if.then13:                                        ; preds = %do.body10
  %devpath14 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 1
  %arraydecay15 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath14, i32 0, i32 0
  %call16 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.7, i32 0, i32 0), i8* %arraydecay15)
  br label %if.end20

if.end20:                                         ; preds = %if.then13, %do.body10, %if.then4, %do.body
  %call21 = call i8* @kzalloc(i64 1336, i32 20971712)
  %6 = bitcast i8* %call21 to %struct.uvc_device*
  %cmp = icmp eq %struct.uvc_device* %6, null
  br i1 %cmp, label %cleanup, label %if.end24

if.end24:                                         ; preds = %if.end20
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 13
  call void @INIT_LIST_HEAD(%struct.list_head* %entities)
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 14
  call void @INIT_LIST_HEAD(%struct.list_head* %chains)
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 15
  call void @INIT_LIST_HEAD(%struct.list_head* %streams)
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 16
  call void @atomic_set(%struct.atomic_t* %nstreams, i32 0)
  %nmappings = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 8
  call void @atomic_set(%struct.atomic_t* %nmappings, i32 0)
  %lock = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 6
  call void @__mutex_init(%struct.mutex* %lock, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.8, i32 0, i32 0), %struct.lock_class_key* @uvc_probe.__key)
  %call28 = call %struct.usb_device* @usb_get_dev(%struct.usb_device* %call)
  %udev29 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 0
  store %struct.usb_device* %call28, %struct.usb_device** %udev29, align 8, !tbaa !11
  %call30 = call %struct.usb_interface* @usb_get_intf(%struct.usb_interface* %intf)
  %intf31 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 1
  store %struct.usb_interface* %call30, %struct.usb_interface** %intf31, align 8, !tbaa !31
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %7 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %7, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %8 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv32 = zext i8 %8 to i32
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 4
  store i32 %conv32, i32* %intfnum, align 4, !tbaa !51
  %9 = load i32, i32* @uvc_quirks_param, align 4, !tbaa !9
  %cmp33 = icmp eq i32 %9, -1
  br i1 %cmp33, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end24
  %driver_info = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 12
  %10 = load i64, i64* %driver_info, align 8, !tbaa !52
  br label %cond.end

cond.false:                                       ; preds = %if.end24
  %11 = load i32, i32* @uvc_quirks_param, align 4, !tbaa !9
  %conv35 = zext i32 %11 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %10, %cond.true ], [ %conv35, %cond.false ]
  %conv36 = trunc i64 %cond to i32
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 3
  store i32 %conv36, i32* %quirks, align 8, !tbaa !53
  %product = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 24
  %12 = load i8*, i8** %product, align 8, !tbaa !54
  %cmp37 = icmp ne i8* %12, null
  %name = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 5
  %arraydecay40 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  br i1 %cmp37, label %if.then39, label %if.else43

if.then39:                                        ; preds = %cond.end
  %product41 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 24
  %13 = load i8*, i8** %product41, align 8, !tbaa !54
  %call42 = call i64 @strlcpy(i8* %arraydecay40, i8* %13, i64 32)
  br label %if.end52

if.else43:                                        ; preds = %cond.end
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 12
  %idVendor46 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7
  %14 = load i16, i16* %idVendor46, align 8, !tbaa !63
  %conv47 = zext i16 %14 to i32
  %descriptor48 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 12
  %idProduct49 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor48, i32 0, i32 8
  %15 = load i16, i16* %idProduct49, align 2, !tbaa !64
  %conv50 = zext i16 %15 to i32
  %call51 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay40, i64 32, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i32 0, i32 0), i32 %conv47, i32 %conv50)
  br label %if.end52

if.end52:                                         ; preds = %if.else43, %if.then39
  %call53 = call i32 @uvc_parse_control(%struct.uvc_device* %6)
  %cmp54 = icmp slt i32 %call53, 0
  br i1 %cmp54, label %do.body57, label %if.end65

do.body57:                                        ; preds = %if.end52
  %16 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and58 = and i32 %16, 1
  %tobool59 = icmp ne i32 %and58, 0
  br i1 %tobool59, label %if.then60, label %error

if.then60:                                        ; preds = %do.body57
  %call61 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.10, i32 0, i32 0))
  br label %error

if.end65:                                         ; preds = %if.end52
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 11
  %17 = load i16, i16* %uvc_version, align 8, !tbaa !65
  %conv66 = zext i16 %17 to i32
  %shr = ashr i32 %conv66, 8
  %uvc_version67 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 11
  %18 = load i16, i16* %uvc_version67, align 8, !tbaa !65
  %conv68 = zext i16 %18 to i32
  %and69 = and i32 %conv68, 255
  %product70 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 24
  %19 = load i8*, i8** %product70, align 8, !tbaa !54
  %tobool71 = icmp ne i8* %19, null
  br i1 %tobool71, label %cond.true72, label %cond.end75

cond.true72:                                      ; preds = %if.end65
  %product73 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 24
  %20 = load i8*, i8** %product73, align 8, !tbaa !54
  br label %cond.end75

cond.end75:                                       ; preds = %cond.true72, %if.end65
  %cond76 = phi i8* [ %20, %cond.true72 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), %if.end65 ]
  %descriptor77 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 12
  %idVendor78 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor77, i32 0, i32 7
  %21 = load i16, i16* %idVendor78, align 8, !tbaa !63
  %conv79 = zext i16 %21 to i32
  %descriptor80 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 12
  %idProduct81 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor80, i32 0, i32 8
  %22 = load i16, i16* %idProduct81, align 2, !tbaa !64
  %conv82 = zext i16 %22 to i32
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.11, i32 0, i32 0), i32 %shr, i32 %and69, i8* %cond76, i32 %conv79, i32 %conv82)
  %quirks84 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 3
  %23 = load i32, i32* %quirks84, align 8, !tbaa !53
  %conv85 = zext i32 %23 to i64
  %driver_info86 = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 12
  %24 = load i64, i64* %driver_info86, align 8, !tbaa !52
  %cmp87 = icmp ne i64 %conv85, %24
  br i1 %cmp87, label %if.then89, label %if.end93

if.then89:                                        ; preds = %cond.end75
  %quirks90 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 3
  %25 = load i32, i32* %quirks90, align 8, !tbaa !53
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([84 x i8], [84 x i8]* @.str.13, i32 0, i32 0), i32 %25)
  %call92 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.14, i32 0, i32 0))
  br label %if.end93

if.end93:                                         ; preds = %if.then89, %cond.end75
  %dev94 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %mdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %dev95 = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev, i32 0, i32 0
  store %struct.device* %dev94, %struct.device** %dev95, align 8, !tbaa !66
  %mdev96 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %model = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev96, i32 0, i32 2
  %arraydecay97 = getelementptr inbounds [32 x i8], [32 x i8]* %model, i32 0, i32 0
  %name98 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 5
  %arraydecay99 = getelementptr inbounds [32 x i8], [32 x i8]* %name98, i32 0, i32 0
  %call100 = call i64 @strlcpy(i8* %arraydecay97, i8* %arraydecay99, i64 32)
  %serial = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 26
  %26 = load i8*, i8** %serial, align 8, !tbaa !67
  %tobool101 = icmp ne i8* %26, null
  br i1 %tobool101, label %if.then102, label %if.end108

if.then102:                                       ; preds = %if.end93
  %mdev103 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %serial104 = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev103, i32 0, i32 4
  %arraydecay105 = getelementptr inbounds [40 x i8], [40 x i8]* %serial104, i32 0, i32 0
  %serial106 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 26
  %27 = load i8*, i8** %serial106, align 8, !tbaa !67
  %call107 = call i64 @strlcpy(i8* %arraydecay105, i8* %27, i64 40)
  br label %if.end108

if.end108:                                        ; preds = %if.then102, %if.end93
  %mdev109 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %bus_info = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev109, i32 0, i32 5
  %arraydecay110 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i32 0, i32 0
  %devpath111 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 1
  %arraydecay112 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath111, i32 0, i32 0
  %call113 = call i8* @strcpy(i8* %arraydecay110, i8* %arraydecay112)
  %descriptor114 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %call, i32 0, i32 12
  %bcdDevice = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor114, i32 0, i32 9
  %28 = load i16, i16* %bcdDevice, align 4, !tbaa !68
  %conv115 = zext i16 %28 to i32
  %mdev116 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %hw_revision = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev116, i32 0, i32 6
  store i32 %conv115, i32* %hw_revision, align 8, !tbaa !69
  %mdev117 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %driver_version = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev117, i32 0, i32 7
  store i32 264960, i32* %driver_version, align 4, !tbaa !70
  %mdev118 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  call void @media_device_init(%struct.media_device* %mdev118)
  %mdev119 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %vdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 10
  %mdev120 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %vdev, i32 0, i32 1
  store %struct.media_device* %mdev119, %struct.media_device** %mdev120, align 8, !tbaa !71
  %dev121 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %vdev122 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 10
  %call123 = call i32 @v4l2_device_register(%struct.device* %dev121, %struct.v4l2_device* %vdev122)
  %cmp124 = icmp slt i32 %call123, 0
  br i1 %cmp124, label %error, label %if.end127

if.end127:                                        ; preds = %if.end108
  %call128 = call i32 bitcast (i32 (%struct.uvc_device.871*)* @uvc_ctrl_init_device to i32 (%struct.uvc_device*)*)(%struct.uvc_device* %6)
  %cmp129 = icmp slt i32 %call128, 0
  br i1 %cmp129, label %error, label %if.end132

if.end132:                                        ; preds = %if.end127
  %call133 = call i32 @uvc_scan_device(%struct.uvc_device* %6)
  %cmp134 = icmp slt i32 %call133, 0
  br i1 %cmp134, label %error, label %if.end137

if.end137:                                        ; preds = %if.end132
  %call138 = call i32 @uvc_register_chains(%struct.uvc_device* %6)
  %cmp139 = icmp slt i32 %call138, 0
  br i1 %cmp139, label %error, label %if.end142

if.end142:                                        ; preds = %if.end137
  %mdev143 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 9
  %call144 = call i32 @__media_device_register(%struct.media_device* %mdev143, %struct.module* @__this_module)
  %cmp145 = icmp slt i32 %call144, 0
  br i1 %cmp145, label %error, label %if.end148

if.end148:                                        ; preds = %if.end142
  %29 = bitcast %struct.uvc_device* %6 to i8*
  call void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %29)
  %call149 = call i32 @uvc_status_init(%struct.uvc_device* %6)
  %cmp150 = icmp slt i32 %call149, 0
  br i1 %cmp150, label %if.then152, label %do.body155

if.then152:                                       ; preds = %if.end148
  %call153 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([100 x i8], [100 x i8]* @.str.15, i32 0, i32 0), i32 %call149)
  br label %do.body155

do.body155:                                       ; preds = %if.then152, %if.end148
  %30 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and156 = and i32 %30, 1
  %tobool157 = icmp ne i32 %and156, 0
  br i1 %tobool157, label %if.then158, label %do.end162

if.then158:                                       ; preds = %do.body155
  %call159 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i32 0, i32 0))
  br label %do.end162

do.end162:                                        ; preds = %if.then158, %do.body155
  call void @usb_enable_autosuspend(%struct.usb_device* %call)
  br label %cleanup

error:                                            ; preds = %if.end142, %if.end137, %if.end132, %if.end127, %if.end108, %if.then60, %do.body57
  call void @uvc_unregister_video(%struct.uvc_device* %6)
  br label %cleanup

cleanup:                                          ; preds = %error, %do.end162, %if.end20
  %retval.0 = phi i32 [ -19, %error ], [ 0, %do.end162 ], [ -12, %if.end20 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_disconnect(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  call void @usb_set_intfdata(%struct.usb_interface* %intf, i8* null)
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 6
  %2 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !72
  %conv = zext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  call void @uvc_unregister_video(%struct.uvc_device* %0)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_suspend(%struct.usb_interface* %intf, i32 %message.coerce) #0 {
entry:
  %message = alloca %struct.atomic_t, align 4
  %coerce.dive = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %message, i32 0, i32 0
  store i32 %message.coerce, i32* %coerce.dive, align 4
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %1, 256
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %3 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv = zext i8 %3 to i32
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.119, i32 0, i32 0), i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %cur_altsetting2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting2, align 8, !tbaa !32
  %desc3 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc3, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !72
  %conv4 = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv4, 1
  br i1 %cmp, label %if.then6, label %if.end11

if.then6:                                         ; preds = %do.end
  %lock = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 6
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 7
  %6 = load i32, i32* %users, align 8, !tbaa !73
  %tobool7 = icmp ne i32 %6, 0
  br i1 %tobool7, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.then6
  call void @uvc_status_stop(%struct.uvc_device* %0)
  br label %if.end9

if.end9:                                          ; preds = %if.then8, %if.then6
  %lock10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 6
  call void @mutex_unlock(%struct.mutex* %lock10)
  br label %cleanup

if.end11:                                         ; preds = %do.end
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end11
  %list22.sink = phi %struct.list_head* [ %list22, %for.inc ], [ %streams, %if.end11 ]
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %list22.sink, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %next23, align 8, !tbaa !74
  %8 = bitcast %struct.list_head* %7 to i8*
  %add.ptr25 = getelementptr inbounds i8, i8* %8, i64 0
  %9 = bitcast i8* %add.ptr25 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 0
  %streams12 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  %cmp13 = icmp ne %struct.list_head* %list, %streams12
  br i1 %cmp13, label %for.body, label %do.body26

for.body:                                         ; preds = %for.cond
  %intf15 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 5
  %10 = load %struct.usb_interface*, %struct.usb_interface** %intf15, align 8, !tbaa !75
  %cmp16 = icmp eq %struct.usb_interface* %10, %intf
  br i1 %cmp16, label %if.then18, label %for.inc

if.then18:                                        ; preds = %for.body
  %call19 = call i32 bitcast (i32 (%struct.uvc_streaming.870*)* @uvc_video_suspend to i32 (%struct.uvc_streaming*)*)(%struct.uvc_streaming* %9)
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %list22 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 0
  br label %for.cond

do.body26:                                        ; preds = %for.cond
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and27 = and i32 %11, 256
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %cleanup

if.then29:                                        ; preds = %do.body26
  %call30 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.120, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %do.body26, %if.then18, %if.end9
  %retval.0 = phi i32 [ 0, %if.end9 ], [ %call19, %if.then18 ], [ -22, %if.then29 ], [ -22, %do.body26 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_resume(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i32 @__uvc_resume(%struct.usb_interface* %intf, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_reset_resume(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i32 @__uvc_resume(%struct.usb_interface* %intf, i32 1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_resume(%struct.usb_interface* %intf, i32 %reset) #0 {
entry:
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %1, 256
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %3 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv = zext i8 %3 to i32
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.121, i32 0, i32 0), i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %cur_altsetting2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting2, align 8, !tbaa !32
  %desc3 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc3, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !72
  %conv4 = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv4, 1
  br i1 %cmp, label %if.then6, label %if.end20

if.then6:                                         ; preds = %do.end
  %tobool7 = icmp ne i32 %reset, 0
  br i1 %tobool7, label %if.then8, label %if.end14

if.then8:                                         ; preds = %if.then6
  %call9 = call i32 bitcast (i32 (%struct.uvc_device.871*)* @uvc_ctrl_restore_values to i32 (%struct.uvc_device*)*)(%struct.uvc_device* %0)
  %cmp10 = icmp slt i32 %call9, 0
  br i1 %cmp10, label %cleanup, label %if.end14

if.end14:                                         ; preds = %if.then8, %if.then6
  %ret.0 = phi i32 [ 0, %if.then6 ], [ %call9, %if.then8 ]
  %lock = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 6
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 7
  %6 = load i32, i32* %users, align 8, !tbaa !73
  %tobool15 = icmp ne i32 %6, 0
  br i1 %tobool15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  %call17 = call i32 @uvc_status_start(%struct.uvc_device* %0, i32 20971520)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %ret.1 = phi i32 [ %call17, %if.then16 ], [ %ret.0, %if.end14 ]
  %lock19 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 6
  call void @mutex_unlock(%struct.mutex* %lock19)
  br label %cleanup

if.end20:                                         ; preds = %do.end
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end20
  %list38.sink = phi %struct.list_head* [ %list38, %for.inc ], [ %streams, %if.end20 ]
  %next39 = getelementptr inbounds %struct.list_head, %struct.list_head* %list38.sink, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %next39, align 8, !tbaa !74
  %8 = bitcast %struct.list_head* %7 to i8*
  %add.ptr41 = getelementptr inbounds i8, i8* %8, i64 0
  %9 = bitcast i8* %add.ptr41 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 0
  %streams21 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  %cmp22 = icmp ne %struct.list_head* %list, %streams21
  br i1 %cmp22, label %for.body, label %do.body42

for.body:                                         ; preds = %for.cond
  %intf24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 5
  %10 = load %struct.usb_interface*, %struct.usb_interface** %intf24, align 8, !tbaa !75
  %cmp25 = icmp eq %struct.usb_interface* %10, %intf
  br i1 %cmp25, label %if.then27, label %for.inc

if.then27:                                        ; preds = %for.body
  %call28 = call i32 bitcast (i32 (%struct.uvc_streaming.870*, i32)* @uvc_video_resume to i32 (%struct.uvc_streaming*, i32)*)(%struct.uvc_streaming* %9, i32 %reset)
  %cmp29 = icmp slt i32 %call28, 0
  br i1 %cmp29, label %if.then31, label %cleanup

if.then31:                                        ; preds = %if.then27
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 18
  %queue32 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 18
  %queue33 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue32, i32 0, i32 0
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue33, i32 0, i32 0
  %11 = load i32, i32* %type, align 8, !tbaa !91
  %call34 = call i32 @uvc_queue_streamoff(%struct.uvc_video_queue* %queue, i32 %11)
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %list38 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %9, i32 0, i32 0
  br label %for.cond

do.body42:                                        ; preds = %for.cond
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and43 = and i32 %12, 256
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then45, label %cleanup

if.then45:                                        ; preds = %do.body42
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.122, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then45, %do.body42, %if.then31, %if.then27, %if.end18, %if.then8
  %retval.0 = phi i32 [ %ret.1, %if.end18 ], [ %call9, %if.then8 ], [ %call28, %if.then31 ], [ %call28, %if.then27 ], [ -22, %if.then45 ], [ -22, %do.body42 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  ret i8* %call
}

declare i32 @printk(i8*, ...) #2

declare void @mutex_lock_nested(%struct.mutex*, i32) #2

declare void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_get_drvdata(%struct.device* %dev) #1 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  %0 = load i8*, i8** %driver_data, align 8, !tbaa !92
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  call void @dev_set_drvdata(%struct.device* %dev, i8* %data)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_unregister_video(%struct.uvc_device* %dev) #0 {
entry:
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  call void @atomic_inc(%struct.atomic_t* %nstreams)
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list4.sink = phi %struct.list_head* [ %list4, %for.inc ], [ %streams, %entry ]
  %next5 = getelementptr inbounds %struct.list_head, %struct.list_head* %list4.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next5, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr7 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr7 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  %streams1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp = icmp ne %struct.list_head* %list, %streams1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %vdev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 2
  %call = call i32 @video_is_registered(%struct.video_device* %vdev)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %vdev2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 2
  call void @video_unregister_device(%struct.video_device* %vdev2)
  call void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %2)
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body
  %list4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %nstreams8 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  %call9 = call zeroext i1 @atomic_dec_and_test(%struct.atomic_t* %nstreams8)
  br i1 %call9, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.end
  call void @uvc_delete(%struct.uvc_device* %dev)
  br label %if.end11

if.end11:                                         ; preds = %if.then10, %for.end
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_inc(%struct.atomic_t* %v) #3 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !93
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @video_is_registered(%struct.video_device* %vdev) #1 {
entry:
  %flags = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 17
  %call = call zeroext i1 @constant_test_bit(i64 0, i64* %flags)
  %conv = zext i1 %call to i32
  ret i32 %conv
}

declare void @video_unregister_device(%struct.video_device*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @atomic_dec_and_test(%struct.atomic_t* %v) #3 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0;\0A\09sete $1\0A", "=*m,=*qm,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i8* %c, i32* %counter) #8, !srcloc !94
  %0 = load i8, i8* %c, align 1, !tbaa !95, !range !96
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define internal void @uvc_delete(%struct.uvc_device* %dev) #0 {
entry:
  call void @uvc_status_cleanup(%struct.uvc_device* %dev)
  call void bitcast (void (%struct.uvc_device.871*)* @uvc_ctrl_cleanup_device to void (%struct.uvc_device*)*)(%struct.uvc_device* %dev)
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  call void @usb_put_intf(%struct.usb_interface* %0)
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  call void @usb_put_dev(%struct.usb_device* %1)
  %vdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  %dev1 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %vdev, i32 0, i32 0
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !tbaa !97
  %tobool = icmp ne %struct.device* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %vdev2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  call void @v4l2_device_unregister(%struct.v4l2_device* %vdev2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %mdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 9
  %devnode = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev, i32 0, i32 1
  %3 = load %struct.media_devnode*, %struct.media_devnode** %devnode, align 8, !tbaa !98
  %call = call i32 @media_devnode_is_registered(%struct.media_devnode* %3)
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %mdev5 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 9
  call void @media_device_unregister(%struct.media_device* %mdev5)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %mdev7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 9
  call void @media_device_cleanup(%struct.media_device* %mdev7)
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %chains, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end6
  %.sink = phi %struct.list_head* [ %5, %for.body ], [ %4, %if.end6 ]
  %p.0 = phi %struct.list_head* [ %4, %if.end6 ], [ %5, %for.body ]
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %5 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !99
  %chains9 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %cmp = icmp ne %struct.list_head* %p.0, %chains9
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %6 = bitcast %struct.list_head* %p.0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %6, i64 -8
  %7 = bitcast i8* %add.ptr to %struct.uvc_video_chain*
  %8 = bitcast %struct.uvc_video_chain* %7 to i8*
  call void @kfree(i8* %8)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %entities, i32 0, i32 0
  %9 = load %struct.list_head*, %struct.list_head** %next11, align 8, !tbaa !99
  br label %for.cond13

for.cond13:                                       ; preds = %for.body16, %for.end
  %.sink1 = phi %struct.list_head* [ %10, %for.body16 ], [ %9, %for.end ]
  %p.1 = phi %struct.list_head* [ %9, %for.end ], [ %10, %for.body16 ]
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink1, i32 0, i32 0
  %10 = load %struct.list_head*, %struct.list_head** %next21, align 8, !tbaa !99
  %entities14 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp15 = icmp ne %struct.list_head* %p.1, %entities14
  br i1 %cmp15, label %for.body16, label %for.end22

for.body16:                                       ; preds = %for.cond13
  %11 = bitcast %struct.list_head* %p.1 to i8*
  %add.ptr19 = getelementptr inbounds i8, i8* %11, i64 0
  %12 = bitcast i8* %add.ptr19 to %struct.uvc_entity*
  call void @uvc_mc_cleanup_entity(%struct.uvc_entity* %12)
  %13 = bitcast %struct.uvc_entity* %12 to i8*
  call void @kfree(i8* %13)
  br label %for.cond13

for.end22:                                        ; preds = %for.cond13
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %next23 = getelementptr inbounds %struct.list_head, %struct.list_head* %streams, i32 0, i32 0
  %14 = load %struct.list_head*, %struct.list_head** %next23, align 8, !tbaa !99
  br label %for.cond25

for.cond25:                                       ; preds = %for.body28, %for.end22
  %.sink2 = phi %struct.list_head* [ %15, %for.body28 ], [ %14, %for.end22 ]
  %p.2 = phi %struct.list_head* [ %14, %for.end22 ], [ %15, %for.body28 ]
  %next35 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink2, i32 0, i32 0
  %15 = load %struct.list_head*, %struct.list_head** %next35, align 8, !tbaa !99
  %streams26 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp27 = icmp ne %struct.list_head* %p.2, %streams26
  br i1 %cmp27, label %for.body28, label %for.end36

for.body28:                                       ; preds = %for.cond25
  %16 = bitcast %struct.list_head* %p.2 to i8*
  %add.ptr31 = getelementptr inbounds i8, i8* %16, i64 0
  %17 = bitcast i8* %add.ptr31 to %struct.uvc_streaming*
  %intf32 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 5
  %18 = load %struct.usb_interface*, %struct.usb_interface** %intf32, align 8, !tbaa !75
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %18)
  %intf33 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 5
  %19 = load %struct.usb_interface*, %struct.usb_interface** %intf33, align 8, !tbaa !75
  call void @usb_put_intf(%struct.usb_interface* %19)
  %format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 11
  %20 = load %struct.uvc_format*, %struct.uvc_format** %format, align 8, !tbaa !100
  %21 = bitcast %struct.uvc_format* %20 to i8*
  call void @kfree(i8* %21)
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 4
  %22 = load i8*, i8** %bmaControls, align 8, !tbaa !101
  call void @kfree(i8* %22)
  %23 = bitcast %struct.uvc_streaming* %17 to i8*
  call void @kfree(i8* %23)
  br label %for.cond25

for.end36:                                        ; preds = %for.cond25
  %24 = bitcast %struct.uvc_device* %dev to i8*
  call void @kfree(i8* %24)
  ret void
}

declare void @usb_put_intf(%struct.usb_interface*) #2

declare void @usb_put_dev(%struct.usb_device*) #2

declare void @v4l2_device_unregister(%struct.v4l2_device*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @media_devnode_is_registered(%struct.media_devnode* %devnode) #1 {
entry:
  %tobool = icmp ne %struct.media_devnode* %devnode, null
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %flags = getelementptr inbounds %struct.media_devnode, %struct.media_devnode* %devnode, i32 0, i32 6
  %call = call zeroext i1 @constant_test_bit(i64 0, i64* %flags)
  %conv = zext i1 %call to i32
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %conv, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

declare void @media_device_unregister(%struct.media_device*) #2

declare void @media_device_cleanup(%struct.media_device*) #2

declare void @kfree(i8*) #2

declare void @usb_driver_release_interface(%struct.usb_driver*, %struct.usb_interface*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @constant_test_bit(i64 %nr, i64* %addr) #3 {
entry:
  %and = and i64 %nr, 63
  %shl = shl i64 1, %and
  %shr = ashr i64 %nr, 6
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %shr
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !102
  %and1 = and i64 %shl, %0
  %cmp = icmp ne i64 %and1, 0
  ret i1 %cmp
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @dev_set_drvdata(%struct.device* %dev, i8* %data) #1 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  store i8* %data, i8** %driver_data, align 8, !tbaa !92
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.usb_device* @interface_to_usbdev(%struct.usb_interface* %intf) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 0
  %0 = load %struct.device*, %struct.device** %parent, align 8, !tbaa !103
  %1 = bitcast %struct.device* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -152
  %2 = bitcast i8* %add.ptr to %struct.usb_device*
  ret %struct.usb_device* %2
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %list, %struct.list_head** %__val, align 8, !tbaa !104
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size(i8* %1, i8* %arraydecay, i32 8)
  %__val1 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val1, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !105
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_set(%struct.atomic_t* %v, i32 %i) #3 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %__val = bitcast %struct.atomic_t* %__u to i32*
  store i32 %i, i32* %__val, align 4, !tbaa !104
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size(i8* %1, i8* %arraydecay, i32 4)
  %__val1 = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val1, align 4, !tbaa !104
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret void
}

declare void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

declare %struct.usb_device* @usb_get_dev(%struct.usb_device*) #2

declare %struct.usb_interface* @usb_get_intf(%struct.usb_interface*) #2

declare i64 @strlcpy(i8*, i8*, i64) #2

declare i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_control(%struct.uvc_device* %dev) #0 {
entry:
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %extra = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 2
  %2 = load i8*, i8** %extra, align 8, !tbaa !106
  %extralen = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 1
  %3 = load i32, i32* %extralen, align 4, !tbaa !107
  br label %while.cond

while.cond:                                       ; preds = %next_descriptor, %entry
  %buffer.0 = phi i8* [ %2, %entry ], [ %add.ptr, %next_descriptor ]
  %buflen.0 = phi i32 [ %3, %entry ], [ %sub, %next_descriptor ]
  %cmp = icmp sgt i32 %buflen.0, 2
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call i32 @uvc_parse_vendor_control(%struct.uvc_device* %dev, i8* %buffer.0, i32 %buflen.0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %next_descriptor, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %arrayidx = getelementptr inbounds i8, i8* %buffer.0, i64 1
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %4 to i32
  %cmp1 = icmp ne i32 %conv, 36
  br i1 %cmp1, label %next_descriptor, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %call3 = call i32 @uvc_parse_standard_control(%struct.uvc_device* %dev, i8* %buffer.0, i32 %buflen.0)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %cleanup, label %next_descriptor

next_descriptor:                                  ; preds = %if.end, %lor.lhs.false, %while.body
  %arrayidx8 = getelementptr inbounds i8, i8* %buffer.0, i64 0
  %5 = load i8, i8* %arrayidx8, align 1, !tbaa !104
  %conv9 = zext i8 %5 to i32
  %sub = sub nsw i32 %buflen.0, %conv9
  %arrayidx10 = getelementptr inbounds i8, i8* %buffer.0, i64 0
  %6 = load i8, i8* %arrayidx10, align 1, !tbaa !104
  %conv11 = zext i8 %6 to i32
  %idx.ext = sext i32 %conv11 to i64
  %add.ptr = getelementptr inbounds i8, i8* %buffer.0, i64 %idx.ext
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 4
  %7 = load i8, i8* %bNumEndpoints, align 4, !tbaa !108
  %conv12 = zext i8 %7 to i32
  %cmp13 = icmp eq i32 %conv12, 1
  br i1 %cmp13, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %while.end
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %8 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %8, 8
  %tobool15 = icmp ne i32 %and, 0
  br i1 %tobool15, label %cleanup, label %if.then16

if.then16:                                        ; preds = %land.lhs.true
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 3
  %9 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !109
  %arrayidx17 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %9, i64 0
  %desc19 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx17, i32 0, i32 0
  %call20 = call i32 @usb_endpoint_is_int_in(%struct.usb_endpoint_descriptor* %desc19)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %land.lhs.true22, label %cleanup

land.lhs.true22:                                  ; preds = %if.then16
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 4
  %10 = load i16, i16* %wMaxPacketSize, align 1, !tbaa !110
  %conv23 = zext i16 %10 to i32
  %cmp24 = icmp sge i32 %conv23, 8
  br i1 %cmp24, label %land.lhs.true26, label %cleanup

land.lhs.true26:                                  ; preds = %land.lhs.true22
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 5
  %11 = load i8, i8* %bInterval, align 1, !tbaa !111
  %conv27 = zext i8 %11 to i32
  %cmp28 = icmp ne i32 %conv27, 0
  br i1 %cmp28, label %do.body, label %cleanup

do.body:                                          ; preds = %land.lhs.true26
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and31 = and i32 %12, 2
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %do.end

if.then33:                                        ; preds = %do.body
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 2
  %13 = load i8, i8* %bEndpointAddress, align 1, !tbaa !112
  %conv34 = zext i8 %13 to i32
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.17, i32 0, i32 0), i32 %conv34)
  br label %do.end

do.end:                                           ; preds = %if.then33, %do.body
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 17
  store %struct.usb_host_endpoint* %arrayidx17, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !113
  br label %cleanup

cleanup:                                          ; preds = %do.end, %land.lhs.true26, %land.lhs.true22, %if.then16, %land.lhs.true, %while.end, %if.end
  %retval.0 = phi i32 [ %call3, %if.end ], [ 0, %if.then16 ], [ 0, %land.lhs.true22 ], [ 0, %land.lhs.true26 ], [ 0, %do.end ], [ 0, %land.lhs.true ], [ 0, %while.end ]
  ret i32 %retval.0
}

declare i8* @strcpy(i8*, i8*) #2

declare void @media_device_init(%struct.media_device*) #2

declare i32 @v4l2_device_register(%struct.device*, %struct.v4l2_device*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_device(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list32.sink = phi %struct.list_head* [ %list32, %for.inc ], [ %entities, %entry ]
  %next33 = getelementptr inbounds %struct.list_head, %struct.list_head* %list32.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next33, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr35 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr35 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 65280
  %cmp2 = icmp ne i32 %and, 0
  br i1 %cmp2, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %type4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %4 = load i16, i16* %type4, align 2, !tbaa !114
  %conv5 = zext i16 %4 to i32
  %and6 = and i32 %conv5, 32768
  %cmp7 = icmp eq i32 %and6, 32768
  br i1 %cmp7, label %if.end, label %for.inc

if.end:                                           ; preds = %land.lhs.true
  %chain9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain9, i32 0, i32 0
  %5 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !117
  %tobool = icmp ne %struct.list_head* %5, null
  br i1 %tobool, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %chain11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %chain11, i32 0, i32 1
  %6 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !118
  %tobool12 = icmp ne %struct.list_head* %6, null
  br i1 %tobool12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %lor.lhs.false
  %call = call %struct.uvc_video_chain* @uvc_alloc_chain(%struct.uvc_device* %dev)
  %cmp15 = icmp eq %struct.uvc_video_chain* %call, null
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end14
  %flags = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 2
  %7 = load i32, i32* %flags, align 8, !tbaa !119
  %or = or i32 %7, 1
  store i32 %or, i32* %flags, align 8, !tbaa !119
  %call19 = call i32 @uvc_scan_chain(%struct.uvc_video_chain* %call, %struct.uvc_entity* %2)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then22, label %do.body

if.then22:                                        ; preds = %if.end18
  %8 = bitcast %struct.uvc_video_chain* %call to i8*
  call void @kfree(i8* %8)
  br label %for.inc

do.body:                                          ; preds = %if.end18
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and24 = and i32 %9, 1
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.then26, label %do.end

if.then26:                                        ; preds = %do.body
  %call27 = call i8* @uvc_print_chain(%struct.uvc_video_chain* %call)
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.87, i32 0, i32 0), i8* %call27)
  br label %do.end

do.end:                                           ; preds = %if.then26, %do.body
  %list30 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %call, i32 0, i32 1
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  call void @list_add_tail(%struct.list_head* %list30, %struct.list_head* %chains)
  br label %for.inc

for.inc:                                          ; preds = %do.end, %if.then22, %lor.lhs.false, %if.end, %land.lhs.true, %for.body
  %list32 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %chains36 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %call37 = call i32 @list_empty(%struct.list_head* %chains36)
  %tobool38 = icmp ne i32 %call37, 0
  br i1 %tobool38, label %if.then39, label %if.end41

if.then39:                                        ; preds = %for.end
  %call40 = call i32 @uvc_scan_fallback(%struct.uvc_device* %dev)
  br label %if.end41

if.end41:                                         ; preds = %if.then39, %for.end
  %chains42 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %call43 = call i32 @list_empty(%struct.list_head* %chains42)
  %tobool44 = icmp ne i32 %call43, 0
  br i1 %tobool44, label %if.then45, label %cleanup

if.then45:                                        ; preds = %if.end41
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.88, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then45, %if.end41, %if.end14
  %retval.0 = phi i32 [ -1, %if.then45 ], [ -12, %if.end14 ], [ 0, %if.end41 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_register_chains(%struct.uvc_device* %dev) #0 {
entry:
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list9.sink = phi %struct.list_head* [ %list9, %for.inc ], [ %chains, %entry ]
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr12 = getelementptr inbounds i8, i8* %1, i64 -8
  %2 = bitcast i8* %add.ptr12 to %struct.uvc_video_chain*
  %list = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 1
  %chains1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %cmp = icmp ne %struct.list_head* %list, %chains1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call = call i32 @uvc_register_terms(%struct.uvc_device* %dev, %struct.uvc_video_chain* %2)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  %call3 = call i32 @uvc_mc_register_entities(%struct.uvc_video_chain* %2)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %for.inc

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.115, i32 0, i32 0), i32 %call3)
  br label %for.inc

for.inc:                                          ; preds = %if.then5, %if.end
  %list9 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i32 [ %call, %for.body ], [ 0, %for.cond ]
  ret i32 %retval.0
}

declare i32 @__media_device_register(%struct.media_device*, %struct.module*) #2

declare void @usb_enable_autosuspend(%struct.usb_device*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_register_terms(%struct.uvc_device* %dev, %struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain21.sink = phi %struct.list_head* [ %chain21, %for.inc ], [ %entities, %entry ]
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain21.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next22, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr24 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr24 to %struct.uvc_entity*
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp3 = icmp ne i32 %and, 257
  br i1 %cmp3, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %4 = load i8, i8* %id, align 4, !tbaa !120
  %conv5 = zext i8 %4 to i32
  %call = call %struct.uvc_streaming* @uvc_stream_by_id(%struct.uvc_device* %dev, i32 %conv5)
  %cmp6 = icmp eq %struct.uvc_streaming* %call, null
  br i1 %cmp6, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end
  %id9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %5 = load i8, i8* %id9, align 4, !tbaa !120
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.116, i32 0, i32 0), i32 %conv10)
  br label %for.inc

if.end12:                                         ; preds = %if.end
  %chain13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %call, i32 0, i32 3
  store %struct.uvc_video_chain* %chain, %struct.uvc_video_chain** %chain13, align 8, !tbaa !121
  %call14 = call i32 @uvc_register_video(%struct.uvc_device* %dev, %struct.uvc_streaming* %call)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end12
  %vdev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %call, i32 0, i32 2
  %vdev19 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 6
  store %struct.video_device* %vdev, %struct.video_device** %vdev19, align 8, !tbaa !122
  br label %for.inc

for.inc:                                          ; preds = %if.end18, %if.then8, %for.body
  %chain21 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %if.end12, %for.cond
  %retval.0 = phi i32 [ %call14, %if.end12 ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_streaming* @uvc_stream_by_id(%struct.uvc_device* %dev, i32 %id) #0 {
entry:
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list5.sink = phi %struct.list_head* [ %list5, %for.inc ], [ %streams, %entry ]
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %list5.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next6, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr8 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr8 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  %streams1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp = icmp ne %struct.list_head* %list, %streams1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 8
  %bTerminalLink = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 2
  %3 = load i8, i8* %bTerminalLink, align 2, !tbaa !123
  %conv = zext i8 %3 to i32
  %cmp2 = icmp eq i32 %conv, %id
  br i1 %cmp2, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %list5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.uvc_streaming* [ %2, %for.body ], [ null, %for.cond ]
  ret %struct.uvc_streaming* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_register_video(%struct.uvc_device* %dev, %struct.uvc_streaming* %stream) #0 {
entry:
  %vdev1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 2
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %type = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %0 = load i32, i32* %type, align 8, !tbaa !124
  %1 = load i32, i32* @uvc_no_drop_param, align 4, !tbaa !9
  %tobool = icmp ne i32 %1, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %call = call i32 @uvc_queue_init(%struct.uvc_video_queue* %queue, i32 %0, i32 %lnot.ext)
  %tobool2 = icmp ne i32 %call, 0
  br i1 %tobool2, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call3 = call i32 bitcast (i32 (%struct.uvc_streaming.870*)* @uvc_video_init to i32 (%struct.uvc_streaming*)*)(%struct.uvc_streaming* %stream)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.117, i32 0, i32 0), i32 %call3)
  br label %cleanup

if.end6:                                          ; preds = %if.end
  call void @uvc_debugfs_init_stream(%struct.uvc_streaming* %stream)
  %vdev7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 7
  store %struct.v4l2_device* %vdev7, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !125
  %fops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 3
  store %struct.v4l2_file_operations* @uvc_fops, %struct.v4l2_file_operations** %fops, align 8, !tbaa !126
  %ioctl_ops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 24
  store %struct.v4l2_ioctl_ops* @uvc_ioctl_ops, %struct.v4l2_ioctl_ops** %ioctl_ops, align 8, !tbaa !127
  %release = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 23
  store void (%struct.video_device*)* @uvc_release, void (%struct.video_device*)** %release, align 8, !tbaa !128
  %chain = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 3
  %2 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !121
  %prio = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 6
  %prio8 = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 11
  store %struct.v4l2_prio_state* %prio, %struct.v4l2_prio_state** %prio8, align 8, !tbaa !129
  %type9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %3 = load i32, i32* %type9, align 8, !tbaa !124
  %cmp10 = icmp eq i32 %3, 2
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end6
  %vfl_dir = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 14
  store i32 1, i32* %vfl_dir, align 4, !tbaa !130
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end6
  %name = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev1, i32 0, i32 12
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name13 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 5
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %name13, i32 0, i32 0
  %call15 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay14, i64 32)
  %4 = bitcast %struct.uvc_streaming* %stream to i8*
  call void @video_set_drvdata(%struct.video_device* %vdev1, i8* %4)
  %call16 = call i32 @video_register_device(%struct.video_device* %vdev1, i32 0, i32 -1)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end12
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.118, i32 0, i32 0), i32 %call16)
  br label %cleanup

if.end20:                                         ; preds = %if.end12
  %type21 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %5 = load i32, i32* %type21, align 8, !tbaa !124
  %cmp22 = icmp eq i32 %5, 1
  %chain24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 3
  %6 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain24, align 8, !tbaa !121
  %caps = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %6, i32 0, i32 7
  %7 = load i32, i32* %caps, align 8, !tbaa !131
  %.sink = select i1 %cmp22, i32 1, i32 2
  %or27 = or i32 %7, %.sink
  store i32 %or27, i32* %caps, align 8, !tbaa !131
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  call void @atomic_inc(%struct.atomic_t* %nstreams)
  br label %cleanup

cleanup:                                          ; preds = %if.end20, %if.then18, %if.then4, %entry
  %retval.0 = phi i32 [ %call3, %if.then4 ], [ %call16, %if.then18 ], [ 0, %if.end20 ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_release(%struct.video_device* %vdev) #0 {
entry:
  %call = call i8* @video_get_drvdata(%struct.video_device* %vdev)
  %0 = bitcast i8* %call to %struct.uvc_streaming*
  %dev1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %0, i32 0, i32 1
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev1, align 8, !tbaa !133
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 16
  %call2 = call zeroext i1 @atomic_dec_and_test(%struct.atomic_t* %nstreams)
  br i1 %call2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @uvc_delete(%struct.uvc_device* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @video_set_drvdata(%struct.video_device* %vdev, i8* %data) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  call void @dev_set_drvdata(%struct.device* %dev, i8* %data)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @video_register_device(%struct.video_device* %vdev, i32 %type, i32 %nr) #1 {
entry:
  %fops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 3
  %0 = load %struct.v4l2_file_operations*, %struct.v4l2_file_operations** %fops, align 8, !tbaa !126
  %owner = getelementptr inbounds %struct.v4l2_file_operations, %struct.v4l2_file_operations* %0, i32 0, i32 0
  %1 = load %struct.module*, %struct.module** %owner, align 8, !tbaa !134
  %call = call i32 @__video_register_device(%struct.video_device* %vdev, i32 %type, i32 %nr, i32 1, %struct.module* %1)
  ret i32 %call
}

declare i32 @__video_register_device(%struct.video_device*, i32, i32, i32, %struct.module*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_get_drvdata(%struct.video_device* %vdev) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 5
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_video_chain* @uvc_alloc_chain(%struct.uvc_device* %dev) #0 {
entry:
  %call = call i8* @kzalloc(i64 240, i32 20971712)
  %0 = bitcast i8* %call to %struct.uvc_video_chain*
  %cmp = icmp eq %struct.uvc_video_chain* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 2
  call void @INIT_LIST_HEAD(%struct.list_head* %entities)
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 5
  call void @__mutex_init(%struct.mutex* %ctrl_mutex, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.89, i32 0, i32 0), %struct.lock_class_key* @uvc_alloc_chain.__key)
  %dev1 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 0
  store %struct.uvc_device* %dev, %struct.uvc_device** %dev1, align 8, !tbaa !136
  %prio = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 6
  call void @v4l2_prio_init(%struct.v4l2_prio_state* %prio)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi %struct.uvc_video_chain* [ %0, %if.end ], [ null, %entry ]
  ret %struct.uvc_video_chain* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %term) #0 {
entry:
  %entity = alloca %struct.uvc_entity*, align 8
  %0 = bitcast %struct.uvc_entity** %entity to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.90, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  store %struct.uvc_entity* %term, %struct.uvc_entity** %entity, align 8, !tbaa !74
  br label %while.cond

while.cond:                                       ; preds = %if.end30, %do.end
  %prev.0 = phi %struct.uvc_entity* [ null, %do.end ], [ %12, %if.end30 ]
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %cmp = icmp ne %struct.uvc_entity* %2, null
  br i1 %cmp, label %while.body, label %cleanup

while.body:                                       ; preds = %while.cond
  %3 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %chain1, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !117
  %tobool2 = icmp ne %struct.list_head* %4, null
  br i1 %tobool2, label %do.body7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %5 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %chain3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %5, i32 0, i32 1
  %prev4 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain3, i32 0, i32 1
  %6 = load %struct.list_head*, %struct.list_head** %prev4, align 8, !tbaa !118
  %tobool5 = icmp ne %struct.list_head* %6, null
  br i1 %tobool5, label %do.body7, label %if.end15

do.body7:                                         ; preds = %lor.lhs.false, %while.body
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and8 = and i32 %7, 2
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %do.body7
  %8 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %8, i32 0, i32 3
  %9 = load i8, i8* %id, align 4, !tbaa !120
  %conv = zext i8 %9 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.91, i32 0, i32 0), i32 %conv)
  br label %cleanup

if.end15:                                         ; preds = %lor.lhs.false
  %10 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %call16 = call i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %10)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.end15
  %11 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %call21 = call i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %11, %struct.uvc_entity* %prev.0)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %cleanup, label %if.end25

if.end25:                                         ; preds = %if.end20
  %12 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !74
  %call26 = call i32 @uvc_scan_chain_backward(%struct.uvc_video_chain* %chain, %struct.uvc_entity** %entity)
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %cleanup, label %if.end30

if.end30:                                         ; preds = %if.end25
  br label %while.cond

cleanup:                                          ; preds = %if.end25, %if.end20, %if.end15, %if.then10, %do.body7, %while.cond
  %retval.0 = phi i32 [ -22, %if.then10 ], [ -22, %do.body7 ], [ -22, %if.end15 ], [ -22, %if.end20 ], [ -22, %if.end25 ], [ 0, %while.cond ]
  %13 = bitcast %struct.uvc_entity** %entity to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i8* @uvc_print_chain(%struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %call = call i32 @uvc_print_terms(%struct.list_head* %entities, i16 zeroext 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0))
  %idx.ext = zext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0), i64 %idx.ext
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.110, i32 0, i32 0))
  %idx.ext2 = sext i32 %call1 to i64
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext2
  %entities4 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %call5 = call i32 @uvc_print_terms(%struct.list_head* %entities4, i16 zeroext -32768, i8* %add.ptr3)
  ret i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0)
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !105
  call void @__list_add(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty(%struct.list_head* %head) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_fallback(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list28.sink = phi %struct.list_head* [ %list28, %for.inc ], [ %entities, %entry ]
  %oterm.0 = phi %struct.uvc_entity* [ null, %entry ], [ %oterm.1, %for.inc ]
  %iterm.0 = phi %struct.uvc_entity* [ null, %entry ], [ %iterm.1, %for.inc ]
  %next29 = getelementptr inbounds %struct.list_head, %struct.list_head* %list28.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next29, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr31 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr31 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 65280
  %cmp2 = icmp ne i32 %and, 0
  br i1 %cmp2, label %land.lhs.true, label %if.end10

land.lhs.true:                                    ; preds = %for.body
  %type4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %4 = load i16, i16* %type4, align 2, !tbaa !114
  %conv5 = zext i16 %4 to i32
  %and6 = and i32 %conv5, 32768
  %cmp7 = icmp eq i32 %and6, 0
  br i1 %cmp7, label %if.then, label %if.end10

if.then:                                          ; preds = %land.lhs.true
  %tobool = icmp ne %struct.uvc_entity* %iterm.0, null
  br i1 %tobool, label %cleanup, label %if.end10

if.end10:                                         ; preds = %if.then, %land.lhs.true, %for.body
  %iterm.1 = phi %struct.uvc_entity* [ %iterm.0, %land.lhs.true ], [ %iterm.0, %for.body ], [ %2, %if.then ]
  %type11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %5 = load i16, i16* %type11, align 2, !tbaa !114
  %conv12 = zext i16 %5 to i32
  %and13 = and i32 %conv12, 65280
  %cmp14 = icmp ne i32 %and13, 0
  br i1 %cmp14, label %land.lhs.true16, label %for.inc

land.lhs.true16:                                  ; preds = %if.end10
  %type17 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %6 = load i16, i16* %type17, align 2, !tbaa !114
  %conv18 = zext i16 %6 to i32
  %and19 = and i32 %conv18, 32768
  %cmp20 = icmp eq i32 %and19, 32768
  br i1 %cmp20, label %if.then22, label %for.inc

if.then22:                                        ; preds = %land.lhs.true16
  %tobool23 = icmp ne %struct.uvc_entity* %oterm.0, null
  br i1 %tobool23, label %cleanup, label %for.inc

for.inc:                                          ; preds = %if.then22, %land.lhs.true16, %if.end10
  %oterm.1 = phi %struct.uvc_entity* [ %oterm.0, %land.lhs.true16 ], [ %oterm.0, %if.end10 ], [ %2, %if.then22 ]
  %list28 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp32 = icmp eq %struct.uvc_entity* %iterm.0, null
  %cmp34 = icmp eq %struct.uvc_entity* %oterm.0, null
  %or.cond = or i1 %cmp32, %cmp34
  br i1 %or.cond, label %cleanup, label %if.end37

if.end37:                                         ; preds = %for.end
  %call = call %struct.uvc_video_chain* @uvc_alloc_chain(%struct.uvc_device* %dev)
  %cmp38 = icmp eq %struct.uvc_video_chain* %call, null
  br i1 %cmp38, label %cleanup, label %if.end41

if.end41:                                         ; preds = %if.end37
  %call42 = call i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %call, %struct.uvc_entity* %oterm.0)
  %cmp43 = icmp slt i32 %call42, 0
  br i1 %cmp43, label %error, label %if.end46

if.end46:                                         ; preds = %if.end41
  %entities48 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond52

for.cond52:                                       ; preds = %for.inc78, %if.end46
  %list80.sink = phi %struct.list_head* [ %list80, %for.inc78 ], [ %entities48, %if.end46 ]
  %prev.0 = phi %struct.uvc_entity* [ %oterm.0, %if.end46 ], [ %prev.1, %for.inc78 ]
  %prev81 = getelementptr inbounds %struct.list_head, %struct.list_head* %list80.sink, i32 0, i32 1
  %7 = load %struct.list_head*, %struct.list_head** %prev81, align 8, !tbaa !74
  %8 = bitcast %struct.list_head* %7 to i8*
  %add.ptr83 = getelementptr inbounds i8, i8* %8, i64 0
  %9 = bitcast i8* %add.ptr83 to %struct.uvc_entity*
  %list53 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 0
  %entities54 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp55 = icmp ne %struct.list_head* %list53, %entities54
  br i1 %cmp55, label %for.body57, label %for.end84

for.body57:                                       ; preds = %for.cond52
  %type58 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 4
  %10 = load i16, i16* %type58, align 2, !tbaa !114
  %conv59 = zext i16 %10 to i32
  %cmp60 = icmp ne i32 %conv59, 5
  br i1 %cmp60, label %land.lhs.true62, label %if.end68

land.lhs.true62:                                  ; preds = %for.body57
  %type63 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 4
  %11 = load i16, i16* %type63, align 2, !tbaa !114
  %conv64 = zext i16 %11 to i32
  %cmp65 = icmp ne i32 %conv64, 6
  br i1 %cmp65, label %for.inc78, label %if.end68

if.end68:                                         ; preds = %land.lhs.true62, %for.body57
  %num_pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 8
  %12 = load i32, i32* %num_pads, align 8, !tbaa !137
  %cmp69 = icmp ne i32 %12, 2
  br i1 %cmp69, label %for.inc78, label %if.end72

if.end72:                                         ; preds = %if.end68
  %call73 = call i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %call, %struct.uvc_entity* %9)
  %cmp74 = icmp slt i32 %call73, 0
  br i1 %cmp74, label %error, label %if.end77

if.end77:                                         ; preds = %if.end72
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 3
  %13 = load i8, i8* %id, align 4, !tbaa !120
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %prev.0, i32 0, i32 13
  %14 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %arrayidx = getelementptr inbounds i8, i8* %14, i64 0
  store i8 %13, i8* %arrayidx, align 1, !tbaa !104
  br label %for.inc78

for.inc78:                                        ; preds = %if.end77, %if.end68, %land.lhs.true62
  %prev.1 = phi %struct.uvc_entity* [ %9, %if.end77 ], [ %prev.0, %land.lhs.true62 ], [ %prev.0, %if.end68 ]
  %list80 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %9, i32 0, i32 0
  br label %for.cond52

for.end84:                                        ; preds = %for.cond52
  %call85 = call i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %call, %struct.uvc_entity* %iterm.0)
  %cmp86 = icmp slt i32 %call85, 0
  br i1 %cmp86, label %error, label %if.end89

if.end89:                                         ; preds = %for.end84
  %id90 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %iterm.0, i32 0, i32 3
  %15 = load i8, i8* %id90, align 4, !tbaa !120
  %baSourceID91 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %prev.0, i32 0, i32 13
  %16 = load i8*, i8** %baSourceID91, align 8, !tbaa !138
  %arrayidx92 = getelementptr inbounds i8, i8* %16, i64 0
  store i8 %15, i8* %arrayidx92, align 1, !tbaa !104
  %list93 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %call, i32 0, i32 1
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  call void @list_add_tail(%struct.list_head* %list93, %struct.list_head* %chains)
  %17 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and94 = and i32 %17, 1
  %tobool95 = icmp ne i32 %and94, 0
  br i1 %tobool95, label %if.then96, label %cleanup

if.then96:                                        ; preds = %if.end89
  %call97 = call i8* @uvc_print_chain(%struct.uvc_video_chain* %call)
  %call98 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.114, i32 0, i32 0), i8* %call97)
  br label %cleanup

error:                                            ; preds = %for.end84, %if.end72, %if.end41
  %18 = bitcast %struct.uvc_video_chain* %call to i8*
  call void @kfree(i8* %18)
  br label %cleanup

cleanup:                                          ; preds = %error, %if.then96, %if.end89, %if.end37, %for.end, %if.then22, %if.then
  %retval.0 = phi i32 [ -22, %error ], [ -22, %if.then ], [ -22, %if.then22 ], [ -22, %for.end ], [ -12, %if.end37 ], [ 0, %if.then96 ], [ 0, %if.end89 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  switch i32 %and, label %do.body103 [
    i32 6, label %sw.bb
    i32 5, label %sw.bb14
    i32 4, label %sw.bb34
    i32 512, label %sw.bb60
    i32 513, label %sw.bb60
    i32 514, label %sw.bb60
    i32 768, label %sw.bb68
    i32 769, label %sw.bb68
    i32 770, label %sw.bb68
    i32 257, label %sw.bb76
  ]

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and1 = and i32 %1, 1
  %tobool = icmp ne i32 %and1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %2 = load i8, i8* %id, align 4, !tbaa !120
  %conv2 = zext i8 %2 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.92, i32 0, i32 0), i32 %conv2)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 12
  %3 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv3 = zext i8 %3 to i32
  %cmp = icmp ne i32 %conv3, 1
  br i1 %cmp, label %do.body, label %sw.epilog

do.body:                                          ; preds = %if.end
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and6 = and i32 %4, 2
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %return

if.then8:                                         ; preds = %do.body
  %id9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %5 = load i8, i8* %id9, align 4, !tbaa !120
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.93, i32 0, i32 0), i32 %conv10)
  br label %return

sw.bb14:                                          ; preds = %entry
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and15 = and i32 %6, 1
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end21

if.then17:                                        ; preds = %sw.bb14
  %id18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %7 = load i8, i8* %id18, align 4, !tbaa !120
  %conv19 = zext i8 %7 to i32
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.94, i32 0, i32 0), i32 %conv19)
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %sw.bb14
  %processing = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 3
  %8 = load %struct.uvc_entity*, %struct.uvc_entity** %processing, align 8, !tbaa !140
  %cmp22 = icmp ne %struct.uvc_entity* %8, null
  br i1 %cmp22, label %do.body25, label %if.end32

do.body25:                                        ; preds = %if.end21
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and26 = and i32 %9, 2
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.then28, label %return

if.then28:                                        ; preds = %do.body25
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.95, i32 0, i32 0))
  br label %return

if.end32:                                         ; preds = %if.end21
  %processing33 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 3
  store %struct.uvc_entity* %entity, %struct.uvc_entity** %processing33, align 8, !tbaa !140
  br label %sw.epilog

sw.bb34:                                          ; preds = %entry
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and35 = and i32 %10, 1
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %if.then37, label %if.end41

if.then37:                                        ; preds = %sw.bb34
  %id38 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %11 = load i8, i8* %id38, align 4, !tbaa !120
  %conv39 = zext i8 %11 to i32
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.96, i32 0, i32 0), i32 %conv39)
  br label %if.end41

if.end41:                                         ; preds = %if.then37, %sw.bb34
  %bNrInPins42 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 12
  %12 = load i8, i8* %bNrInPins42, align 8, !tbaa !139
  %conv43 = zext i8 %12 to i32
  %cmp44 = icmp eq i32 %conv43, 1
  br i1 %cmp44, label %sw.epilog, label %if.end47

if.end47:                                         ; preds = %if.end41
  %selector = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  %13 = load %struct.uvc_entity*, %struct.uvc_entity** %selector, align 8, !tbaa !141
  %cmp48 = icmp ne %struct.uvc_entity* %13, null
  br i1 %cmp48, label %do.body51, label %if.end58

do.body51:                                        ; preds = %if.end47
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and52 = and i32 %14, 2
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.then54, label %return

if.then54:                                        ; preds = %do.body51
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.97, i32 0, i32 0))
  br label %return

if.end58:                                         ; preds = %if.end47
  %selector59 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  store %struct.uvc_entity* %entity, %struct.uvc_entity** %selector59, align 8, !tbaa !141
  br label %sw.epilog

sw.bb60:                                          ; preds = %entry, %entry, %entry
  %15 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and61 = and i32 %15, 1
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then63, label %sw.epilog

if.then63:                                        ; preds = %sw.bb60
  %id64 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %16 = load i8, i8* %id64, align 4, !tbaa !120
  %conv65 = zext i8 %16 to i32
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i32 %conv65)
  br label %sw.epilog

sw.bb68:                                          ; preds = %entry, %entry, %entry
  %17 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and69 = and i32 %17, 1
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %sw.epilog

if.then71:                                        ; preds = %sw.bb68
  %id72 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %18 = load i8, i8* %id72, align 4, !tbaa !120
  %conv73 = zext i8 %18 to i32
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i32 %conv73)
  br label %sw.epilog

sw.bb76:                                          ; preds = %entry
  %type77 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %19 = load i16, i16* %type77, align 2, !tbaa !114
  %conv78 = zext i16 %19 to i32
  %and79 = and i32 %conv78, 65280
  %cmp80 = icmp ne i32 %and79, 0
  br i1 %cmp80, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb76
  %type82 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %20 = load i16, i16* %type82, align 2, !tbaa !114
  %conv83 = zext i16 %20 to i32
  %and84 = and i32 %conv83, 32768
  %cmp85 = icmp eq i32 %and84, 0
  br i1 %cmp85, label %if.then87, label %if.else

if.then87:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and88 = and i32 %21, 1
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.then90, label %sw.epilog

if.then90:                                        ; preds = %if.then87
  %id91 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %22 = load i8, i8* %id91, align 4, !tbaa !120
  %conv92 = zext i8 %22 to i32
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.98, i32 0, i32 0), i32 %conv92)
  br label %sw.epilog

if.else:                                          ; preds = %land.lhs.true, %sw.bb76
  %23 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and95 = and i32 %23, 1
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %if.then97, label %sw.epilog

if.then97:                                        ; preds = %if.else
  %id98 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %24 = load i8, i8* %id98, align 4, !tbaa !120
  %conv99 = zext i8 %24 to i32
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i32 %conv99)
  br label %sw.epilog

do.body103:                                       ; preds = %entry
  %25 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and104 = and i32 %25, 2
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %if.then106, label %return

if.then106:                                       ; preds = %do.body103
  %type107 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %26 = load i16, i16* %type107, align 2, !tbaa !114
  %conv108 = zext i16 %26 to i32
  %and109 = and i32 %conv108, 32767
  %call110 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.100, i32 0, i32 0), i32 %and109)
  br label %return

sw.epilog:                                        ; preds = %if.then97, %if.else, %if.then90, %if.then87, %if.then71, %sw.bb68, %if.then63, %sw.bb60, %if.end58, %if.end41, %if.end32, %if.end
  %chain113 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain113, %struct.list_head* %entities)
  br label %return

return:                                           ; preds = %sw.epilog, %if.then106, %do.body103, %if.then54, %do.body51, %if.then28, %do.body25, %if.then8, %do.body
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -1, %do.body ], [ -1, %if.then8 ], [ -1, %do.body25 ], [ -1, %if.then28 ], [ -1, %do.body51 ], [ -1, %if.then54 ], [ -1, %do.body103 ], [ -1, %if.then106 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load volatile i8, i8* %p, align 1, !tbaa !104
  store i8 %0, i8* %res, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !144
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !145
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_add(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %new, %struct.list_head** %prev1, align 8, !tbaa !105
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 0
  store %struct.list_head* %next, %struct.list_head** %next2, align 8, !tbaa !99
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev3, align 8, !tbaa !105
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %new, %struct.list_head** %__val, align 8, !tbaa !104
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next4 to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size(i8* %1, i8* %arraydecay, i32 8)
  %__val5 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val5, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare zeroext i1 @__list_add_valid(%struct.list_head*, %struct.list_head*, %struct.list_head*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i8, i8* %res, align 1, !tbaa !104
  store volatile i8 %0, i8* %p, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !146
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !147
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_print_terms(%struct.list_head* %terms, i16 zeroext %dir, i8* %buffer) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain24.sink = phi %struct.list_head* [ %chain24, %for.inc ], [ %terms, %entry ]
  %nterms.0 = phi i32 [ 0, %entry ], [ %nterms.1, %for.inc ]
  %p.0 = phi i8* [ %buffer, %entry ], [ %p.2, %for.inc ]
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain24.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next25, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr27 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr27 to %struct.uvc_entity*
  %chain = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %cmp = icmp ne %struct.list_head* %chain, %terms
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 65280
  %cmp1 = icmp ne i32 %and, 0
  br i1 %cmp1, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %type3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %4 = load i16, i16* %type3, align 2, !tbaa !114
  %conv4 = zext i16 %4 to i32
  %and5 = and i32 %conv4, 32768
  %conv6 = zext i16 %dir to i32
  %cmp7 = icmp ne i32 %and5, %conv6
  br i1 %cmp7, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %tobool = icmp ne i32 %nterms.0, 0
  br i1 %tobool, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %p.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.111, i32 0, i32 0))
  %idx.ext = sext i32 %call to i64
  %add.ptr10 = getelementptr inbounds i8, i8* %p.0, i64 %idx.ext
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end
  %p.1 = phi i8* [ %add.ptr10, %if.then9 ], [ %p.0, %if.end ]
  %inc = add i32 %nterms.0, 1
  %cmp12 = icmp uge i32 %inc, 4
  br i1 %cmp12, label %if.then14, label %if.end18

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, i8*, ...) @sprintf(i8* %p.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.112, i32 0, i32 0))
  %idx.ext16 = sext i32 %call15 to i64
  %add.ptr17 = getelementptr inbounds i8, i8* %p.1, i64 %idx.ext16
  br label %for.end

if.end18:                                         ; preds = %if.end11
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !120
  %conv19 = zext i8 %5 to i32
  %call20 = call i32 (i8*, i8*, ...) @sprintf(i8* %p.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.113, i32 0, i32 0), i32 %conv19)
  %idx.ext21 = sext i32 %call20 to i64
  %add.ptr22 = getelementptr inbounds i8, i8* %p.1, i64 %idx.ext21
  br label %for.inc

for.inc:                                          ; preds = %if.end18, %lor.lhs.false, %for.body
  %nterms.1 = phi i32 [ %inc, %if.end18 ], [ %nterms.0, %lor.lhs.false ], [ %nterms.0, %for.body ]
  %p.2 = phi i8* [ %add.ptr22, %if.end18 ], [ %p.0, %lor.lhs.false ], [ %p.0, %for.body ]
  %chain24 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %if.then14, %for.cond
  %p.3 = phi i8* [ %add.ptr17, %if.then14 ], [ %p.0, %for.cond ]
  %sub.ptr.lhs.cast = ptrtoint i8* %p.3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %buffer to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv28 = trunc i64 %sub.ptr.sub to i32
  ret i32 %conv28
}

declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity, %struct.uvc_entity* %prev) #0 {
entry:
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %sw.epilog, %entry
  %forward.0.ph = phi %struct.uvc_entity* [ %call, %sw.epilog ], [ null, %entry ]
  %found.0.ph = phi i32 [ %found.3, %sw.epilog ], [ 0, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %if.then4, %while.cond.outer
  %forward.0 = phi %struct.uvc_entity* [ %call, %if.then4 ], [ %forward.0.ph, %while.cond.outer ]
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !136
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %1 = load i8, i8* %id, align 4, !tbaa !120
  %conv = zext i8 %1 to i32
  %call = call %struct.uvc_entity* @uvc_entity_by_reference(%struct.uvc_device* %0, i32 %conv, %struct.uvc_entity* %forward.0)
  %cmp = icmp eq %struct.uvc_entity* %call, null
  br i1 %cmp, label %while.end, label %if.end

if.end:                                           ; preds = %while.cond
  %cmp2 = icmp eq %struct.uvc_entity* %call, %prev
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %while.cond

if.end5:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %2 = load i16, i16* %type, align 2, !tbaa !114
  %conv6 = zext i16 %2 to i32
  %and = and i32 %conv6, 32767
  switch i32 %and, label %sw.epilog [
    i32 6, label %sw.bb
    i32 768, label %sw.bb30
    i32 769, label %sw.bb30
    i32 770, label %sw.bb30
    i32 257, label %sw.bb30
  ]

sw.bb:                                            ; preds = %if.end5
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 12
  %3 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv7 = zext i8 %3 to i32
  %cmp8 = icmp ne i32 %conv7, 1
  br i1 %cmp8, label %do.body, label %if.end17

do.body:                                          ; preds = %sw.bb
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and11 = and i32 %4, 2
  %tobool = icmp ne i32 %and11, 0
  br i1 %tobool, label %if.then12, label %cleanup

if.then12:                                        ; preds = %do.body
  %id13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %5 = load i8, i8* %id13, align 4, !tbaa !120
  %conv14 = zext i8 %5 to i32
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.93, i32 0, i32 0), i32 %conv14)
  br label %cleanup

if.end17:                                         ; preds = %sw.bb
  %chain18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain18, %struct.list_head* %entities)
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and19 = and i32 %6, 1
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %sw.epilog

if.then21:                                        ; preds = %if.end17
  %tobool22 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool22, label %if.end25, label %if.then23

if.then23:                                        ; preds = %if.then21
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0))
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.then21
  %id26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %7 = load i8, i8* %id26, align 4, !tbaa !120
  %conv27 = zext i8 %7 to i32
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.102, i32 0, i32 0), i32 %conv27)
  br label %sw.epilog

sw.bb30:                                          ; preds = %if.end5, %if.end5, %if.end5, %if.end5
  %type31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %8 = load i16, i16* %type31, align 2, !tbaa !114
  %conv32 = zext i16 %8 to i32
  %and33 = and i32 %conv32, 65280
  %cmp34 = icmp ne i32 %and33, 0
  br i1 %cmp34, label %land.lhs.true, label %if.end52

land.lhs.true:                                    ; preds = %sw.bb30
  %type36 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %9 = load i16, i16* %type36, align 2, !tbaa !114
  %conv37 = zext i16 %9 to i32
  %and38 = and i32 %conv37, 32768
  %cmp39 = icmp eq i32 %and38, 0
  br i1 %cmp39, label %do.body42, label %if.end52

do.body42:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and43 = and i32 %10, 2
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then45, label %cleanup

if.then45:                                        ; preds = %do.body42
  %id46 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %11 = load i8, i8* %id46, align 4, !tbaa !120
  %conv47 = zext i8 %11 to i32
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.103, i32 0, i32 0), i32 %conv47)
  br label %cleanup

if.end52:                                         ; preds = %land.lhs.true, %sw.bb30
  %chain53 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 1
  %entities54 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain53, %struct.list_head* %entities54)
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and55 = and i32 %12, 1
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %sw.epilog

if.then57:                                        ; preds = %if.end52
  %tobool58 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool58, label %if.end61, label %if.then59

if.then59:                                        ; preds = %if.then57
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i32 0, i32 0))
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.then57
  %id62 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %13 = load i8, i8* %id62, align 4, !tbaa !120
  %conv63 = zext i8 %13 to i32
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.99, i32 0, i32 0), i32 %conv63)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end61, %if.end52, %if.end25, %if.end17, %if.end5
  %found.3 = phi i32 [ %found.0.ph, %if.end5 ], [ 1, %if.end25 ], [ %found.0.ph, %if.end17 ], [ 1, %if.end61 ], [ %found.0.ph, %if.end52 ]
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %tobool66 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool66, label %if.then67, label %cleanup

if.then67:                                        ; preds = %while.end
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.104, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then67, %while.end, %if.then45, %do.body42, %if.then12, %do.body
  %retval.0 = phi i32 [ -22, %if.then12 ], [ -22, %do.body ], [ -22, %if.then45 ], [ -22, %do.body42 ], [ 0, %if.then67 ], [ 0, %while.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_backward(%struct.uvc_video_chain* %chain, %struct.uvc_entity** %_entity) #0 {
entry:
  %0 = load %struct.uvc_entity*, %struct.uvc_entity** %_entity, align 8, !tbaa !74
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %1 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 32767
  switch i32 %and, label %sw.epilog [
    i32 6, label %sw.bb
    i32 5, label %sw.bb
    i32 4, label %sw.bb2
    i32 512, label %sw.bb54
    i32 513, label %sw.bb54
    i32 514, label %sw.bb54
    i32 768, label %sw.bb54
    i32 769, label %sw.bb54
    i32 770, label %sw.bb54
    i32 257, label %sw.bb54
  ]

sw.bb:                                            ; preds = %entry, %entry
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %2 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv1 = zext i8 %3 to i32
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  %4 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv3 = zext i8 %4 to i32
  %cmp = icmp eq i32 %conv3, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb2
  %baSourceID5 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %5 = load i8*, i8** %baSourceID5, align 8, !tbaa !138
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx6, align 1, !tbaa !104
  %conv7 = zext i8 %6 to i32
  br label %sw.epilog

if.end:                                           ; preds = %sw.bb2
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and8 = and i32 %7, 1
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.105, i32 0, i32 0))
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %selector = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  store %struct.uvc_entity* %0, %struct.uvc_entity** %selector, align 8, !tbaa !141
  br label %for.cond

for.cond:                                         ; preds = %if.end46, %if.end10
  %i.0 = phi i32 [ 0, %if.end10 ], [ %inc, %if.end46 ]
  %bNrInPins11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  %8 = load i8, i8* %bNrInPins11, align 8, !tbaa !139
  %conv12 = zext i8 %8 to i32
  %cmp13 = icmp slt i32 %i.0, %conv12
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %baSourceID15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %9 = load i8*, i8** %baSourceID15, align 8, !tbaa !138
  %idxprom = sext i32 %i.0 to i64
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 %idxprom
  %10 = load i8, i8* %arrayidx16, align 1, !tbaa !104
  %conv17 = zext i8 %10 to i32
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %11 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !136
  %call18 = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %11, i32 %conv17)
  %cmp19 = icmp eq %struct.uvc_entity* %call18, null
  br i1 %cmp19, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %type21 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 4
  %12 = load i16, i16* %type21, align 2, !tbaa !114
  %conv22 = zext i16 %12 to i32
  %and23 = and i32 %conv22, 65280
  %cmp24 = icmp ne i32 %and23, 0
  br i1 %cmp24, label %land.lhs.true, label %do.body

land.lhs.true:                                    ; preds = %lor.lhs.false
  %type26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 4
  %13 = load i16, i16* %type26, align 2, !tbaa !114
  %conv27 = zext i16 %13 to i32
  %and28 = and i32 %conv27, 32768
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end39, label %do.body

do.body:                                          ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and32 = and i32 %14, 2
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %cleanup

if.then34:                                        ; preds = %do.body
  %id35 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 3
  %15 = load i8, i8* %id35, align 4, !tbaa !120
  %conv36 = zext i8 %15 to i32
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.106, i32 0, i32 0), i32 %conv36, i32 %i.0)
  br label %cleanup

if.end39:                                         ; preds = %land.lhs.true
  %16 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and40 = and i32 %16, 1
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %if.end46

if.then42:                                        ; preds = %if.end39
  %id43 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 3
  %17 = load i8, i8* %id43, align 4, !tbaa !120
  %conv44 = zext i8 %17 to i32
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i32 0, i32 0), i32 %conv44)
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %if.end39
  %chain47 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain47, %struct.list_head* %entities)
  %call48 = call i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %call18, %struct.uvc_entity* %0)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and49 = and i32 %18, 1
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %sw.epilog

if.then51:                                        ; preds = %for.end
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.108, i32 0, i32 0))
  br label %sw.epilog

sw.bb54:                                          ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry
  %type55 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %19 = load i16, i16* %type55, align 2, !tbaa !114
  %conv56 = zext i16 %19 to i32
  %and57 = and i32 %conv56, 65280
  %cmp58 = icmp ne i32 %and57, 0
  br i1 %cmp58, label %land.lhs.true60, label %sw.epilog

land.lhs.true60:                                  ; preds = %sw.bb54
  %type61 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %20 = load i16, i16* %type61, align 2, !tbaa !114
  %conv62 = zext i16 %20 to i32
  %and63 = and i32 %conv62, 32768
  %cmp64 = icmp eq i32 %and63, 32768
  br i1 %cmp64, label %cond.true, label %sw.epilog

cond.true:                                        ; preds = %land.lhs.true60
  %baSourceID66 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %21 = load i8*, i8** %baSourceID66, align 8, !tbaa !138
  %arrayidx67 = getelementptr inbounds i8, i8* %21, i64 0
  %22 = load i8, i8* %arrayidx67, align 1, !tbaa !104
  %conv68 = zext i8 %22 to i32
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.true, %land.lhs.true60, %sw.bb54, %if.then51, %for.end, %if.then, %sw.bb, %entry
  %id.0 = phi i32 [ -22, %entry ], [ %conv7, %if.then ], [ %conv1, %sw.bb ], [ 0, %if.then51 ], [ 0, %for.end ], [ %conv68, %cond.true ], [ 0, %land.lhs.true60 ], [ 0, %sw.bb54 ]
  %cmp69 = icmp sle i32 %id.0, 0
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %sw.epilog
  store %struct.uvc_entity* null, %struct.uvc_entity** %_entity, align 8, !tbaa !74
  br label %cleanup

if.end72:                                         ; preds = %sw.epilog
  %dev73 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %23 = load %struct.uvc_device*, %struct.uvc_device** %dev73, align 8, !tbaa !136
  %call74 = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %23, i32 %id.0)
  %cmp75 = icmp eq %struct.uvc_entity* %call74, null
  br i1 %cmp75, label %do.body78, label %if.end86

do.body78:                                        ; preds = %if.end72
  %24 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and79 = and i32 %24, 2
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %if.then81, label %cleanup

if.then81:                                        ; preds = %do.body78
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.109, i32 0, i32 0), i32 %id.0)
  br label %cleanup

if.end86:                                         ; preds = %if.end72
  store %struct.uvc_entity* %call74, %struct.uvc_entity** %_entity, align 8, !tbaa !74
  br label %cleanup

cleanup:                                          ; preds = %if.end86, %if.then81, %do.body78, %if.then71, %if.then34, %do.body
  %retval.0 = phi i32 [ %id.0, %if.then71 ], [ 0, %if.end86 ], [ -1, %if.then34 ], [ -1, %do.body ], [ -22, %if.then81 ], [ -22, %do.body78 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %dev, i32 %id) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list6.sink = phi %struct.list_head* [ %list6, %for.inc ], [ %entities, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr9 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %id2 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id2, align 4, !tbaa !120
  %conv = zext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv, %id
  br i1 %cmp3, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %list6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.uvc_entity* [ %2, %for.body ], [ null, %for.cond ]
  ret %struct.uvc_entity* %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_entity* @uvc_entity_by_reference(%struct.uvc_device* %dev, i32 %id, %struct.uvc_entity* %entity) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity* %entity, null
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %0 = bitcast %struct.list_head* %entities to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.uvc_entity*
  %entity.addr.0 = select i1 %cmp, %struct.uvc_entity* %1, %struct.uvc_entity* %entity
  br label %for.cond

for.cond:                                         ; preds = %for.inc16, %entry
  %.sink = phi %struct.uvc_entity* [ %4, %for.inc16 ], [ %entity.addr.0, %entry ]
  %list18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %.sink, i32 0, i32 0
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %list18, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next19, align 8, !tbaa !148
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr21 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = bitcast i8* %add.ptr21 to %struct.uvc_entity*
  %list4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 0
  %entities5 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp6 = icmp ne %struct.list_head* %list4, %entities5
  br i1 %cmp6, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 12
  %5 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv = zext i8 %5 to i32
  %cmp8 = icmp ult i32 %i.0, %conv
  br i1 %cmp8, label %for.body10, label %for.inc16

for.body10:                                       ; preds = %for.cond7
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 13
  %6 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv11 = zext i8 %7 to i32
  %cmp12 = icmp eq i32 %conv11, %id
  br i1 %cmp12, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body10
  %inc = add i32 %i.0, 1
  br label %for.cond7

for.inc16:                                        ; preds = %for.cond7
  br label %for.cond

cleanup:                                          ; preds = %for.body10, %for.cond
  %retval.0 = phi %struct.uvc_entity* [ %4, %for.body10 ], [ null, %for.cond ]
  ret %struct.uvc_entity* %retval.0
}

declare void @v4l2_prio_init(%struct.v4l2_prio_state*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_vendor_control(%struct.uvc_device* %dev, i8* %buffer, i32 %buflen) #0 {
entry:
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !11
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %1, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %udev2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev2, align 8, !tbaa !11
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 12
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7
  %4 = load i16, i16* %idVendor, align 8, !tbaa !63
  %conv = zext i16 %4 to i32
  %cond1 = icmp eq i32 %conv, 1133
  br i1 %cond1, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv3 = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv3, 65
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx5 = getelementptr inbounds i8, i8* %buffer, i64 2
  %6 = load i8, i8* %arrayidx5, align 1, !tbaa !104
  %conv6 = zext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 1
  br i1 %cmp7, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %cmp9 = icmp sge i32 %buflen, 22
  br i1 %cmp9, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %arrayidx11 = getelementptr inbounds i8, i8* %buffer, i64 21
  %7 = load i8, i8* %arrayidx11, align 1, !tbaa !104
  %conv12 = zext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end
  %cond = phi i32 [ %conv12, %cond.true ], [ 0, %if.end ]
  %add = add i32 25, %cond
  %cmp13 = icmp uge i32 %buflen, %add
  br i1 %cmp13, label %cond.true15, label %cond.end20

cond.true15:                                      ; preds = %cond.end
  %add16 = add i32 22, %cond
  %idxprom = zext i32 %add16 to i64
  %arrayidx17 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom
  %8 = load i8, i8* %arrayidx17, align 1, !tbaa !104
  %conv18 = zext i8 %8 to i32
  br label %cond.end20

cond.end20:                                       ; preds = %cond.true15, %cond.end
  %cond21 = phi i32 [ %conv18, %cond.true15 ], [ 0, %cond.end ]
  %add22 = add i32 25, %cond
  %mul = mul i32 2, %cond21
  %add23 = add i32 %add22, %mul
  %cmp24 = icmp ult i32 %buflen, %add23
  br i1 %cmp24, label %do.body, label %if.end30

do.body:                                          ; preds = %cond.end20
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %9, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then27, label %cleanup

if.then27:                                        ; preds = %do.body
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %10 = load i32, i32* %devnum, align 8, !tbaa !149
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %11 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv28 = zext i8 %11 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i32 0, i32 0), i32 %10, i32 %conv28)
  br label %cleanup

if.end30:                                         ; preds = %cond.end20
  %arrayidx31 = getelementptr inbounds i8, i8* %buffer, i64 3
  %12 = load i8, i8* %arrayidx31, align 1, !tbaa !104
  %add32 = add i32 %cond, 1
  %mul33 = mul i32 2, %cond21
  %call34 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext 6, i8 zeroext %12, i32 %add32, i32 %mul33)
  %cmp35 = icmp eq %struct.uvc_entity* %call34, null
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.end30
  %13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension = bitcast %union.anon.64* %13 to %struct.anon.70*
  %guidExtensionCode = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %arrayidx39 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call40 = call i8* @__memcpy(i8* %arraydecay, i8* %arrayidx39, i64 16)
  %arrayidx41 = getelementptr inbounds i8, i8* %buffer, i64 20
  %14 = load i8, i8* %arrayidx41, align 1, !tbaa !104
  %15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension42 = bitcast %union.anon.64* %15 to %struct.anon.70*
  %bNumControls = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension42, i32 0, i32 1
  store i8 %14, i8* %bNumControls, align 8, !tbaa !104
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 13
  %16 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %arrayidx43 = getelementptr inbounds i8, i8* %buffer, i64 22
  %conv44 = zext i32 %cond to i64
  %call45 = call i8* @__memcpy(i8* %16, i8* %arrayidx43, i64 %conv44)
  %add46 = add i32 22, %cond
  %idxprom47 = zext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom47
  %17 = load i8, i8* %arrayidx48, align 1, !tbaa !104
  %18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension49 = bitcast %union.anon.64* %18 to %struct.anon.70*
  %bControlSize = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension49, i32 0, i32 2
  store i8 %17, i8* %bControlSize, align 1, !tbaa !104
  %19 = bitcast %struct.uvc_entity* %call34 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 512
  %20 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension50 = bitcast %union.anon.64* %20 to %struct.anon.70*
  %bmControls = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension50, i32 0, i32 3
  store i8* %add.ptr, i8** %bmControls, align 8, !tbaa !104
  %21 = bitcast %struct.uvc_entity* %call34 to i8*
  %add.ptr51 = getelementptr inbounds i8, i8* %21, i64 512
  %idx.ext = zext i32 %cond21 to i64
  %add.ptr52 = getelementptr inbounds i8, i8* %add.ptr51, i64 %idx.ext
  %22 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension53 = bitcast %union.anon.64* %22 to %struct.anon.70*
  %bmControlsType = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension53, i32 0, i32 4
  store i8* %add.ptr52, i8** %bmControlsType, align 8, !tbaa !104
  %23 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension54 = bitcast %union.anon.64* %23 to %struct.anon.70*
  %bmControls55 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension54, i32 0, i32 3
  %24 = load i8*, i8** %bmControls55, align 8, !tbaa !104
  %add56 = add i32 23, %cond
  %idxprom57 = zext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom57
  %mul59 = mul i32 2, %cond21
  %conv60 = zext i32 %mul59 to i64
  %call61 = call i8* @__memcpy(i8* %24, i8* %arrayidx58, i64 %conv60)
  %add62 = add i32 24, %cond
  %mul63 = mul i32 2, %cond21
  %add64 = add i32 %add62, %mul63
  %idxprom65 = zext i32 %add64 to i64
  %arrayidx66 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom65
  %25 = load i8, i8* %arrayidx66, align 1, !tbaa !104
  %conv67 = zext i8 %25 to i32
  %cmp68 = icmp ne i32 %conv67, 0
  br i1 %cmp68, label %if.then70, label %if.else

if.then70:                                        ; preds = %if.end38
  %add71 = add i32 24, %cond
  %mul72 = mul i32 2, %cond21
  %add73 = add i32 %add71, %mul72
  %idxprom74 = zext i32 %add73 to i64
  %arrayidx75 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom74
  %26 = load i8, i8* %arrayidx75, align 1, !tbaa !104
  %conv76 = zext i8 %26 to i32
  %name = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 5
  %arraydecay77 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0
  %call78 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv76, i8* %arraydecay77, i64 64)
  br label %if.end84

if.else:                                          ; preds = %if.end38
  %name79 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 5
  %arraydecay80 = getelementptr inbounds [64 x i8], [64 x i8]* %name79, i32 0, i32 0
  %arrayidx81 = getelementptr inbounds i8, i8* %buffer, i64 3
  %27 = load i8, i8* %arrayidx81, align 1, !tbaa !104
  %conv82 = zext i8 %27 to i32
  %call83 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay80, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i32 %conv82)
  br label %if.end84

if.end84:                                         ; preds = %if.else, %if.then70
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 0
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %entities)
  br label %cleanup

cleanup:                                          ; preds = %if.end84, %if.end30, %if.then27, %do.body, %lor.lhs.false, %sw.bb, %entry
  %retval.0 = phi i32 [ -12, %if.end30 ], [ 0, %entry ], [ 1, %if.end84 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb ], [ 0, %if.then27 ], [ 0, %do.body ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_standard_control(%struct.uvc_device* %dev, i8* %buffer, i32 %buflen) #0 {
entry:
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !11
  %intf2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf2, align 8, !tbaa !31
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %1, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 2
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %3 to i32
  switch i32 %conv, label %do.body550 [
    i32 1, label %sw.bb
    i32 2, label %sw.bb35
    i32 3, label %sw.bb233
    i32 4, label %sw.bb302
    i32 5, label %sw.bb366
    i32 6, label %sw.bb454
  ]

sw.bb:                                            ; preds = %entry
  %cmp = icmp sge i32 %buflen, 12
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %sw.bb
  %arrayidx4 = getelementptr inbounds i8, i8* %buffer, i64 11
  %4 = load i8, i8* %arrayidx4, align 1, !tbaa !104
  %conv5 = zext i8 %4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.bb
  %cond = phi i32 [ %conv5, %cond.true ], [ 0, %sw.bb ]
  %add = add i32 12, %cond
  %cmp6 = icmp ult i32 %buflen, %add
  br i1 %cmp6, label %do.body, label %if.end10

do.body:                                          ; preds = %cond.end
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %5, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then8, label %cleanup

if.then8:                                         ; preds = %do.body
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %6 = load i32, i32* %devnum, align 8, !tbaa !149
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %7 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv9 = zext i8 %7 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20, i32 0, i32 0), i32 %6, i32 %conv9)
  br label %cleanup

if.end10:                                         ; preds = %cond.end
  %arrayidx11 = getelementptr inbounds i8, i8* %buffer, i64 3
  %call12 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx11)
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  store i16 %call12, i16* %uvc_version, align 8, !tbaa !65
  %arrayidx13 = getelementptr inbounds i8, i8* %buffer, i64 7
  %call14 = call i32 @get_unaligned_le32(i8* %arrayidx13)
  %clock_frequency = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 12
  store i32 %call14, i32* %clock_frequency, align 4, !tbaa !150
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end10
  %i.0 = phi i32 [ 0, %if.end10 ], [ %inc, %for.inc ]
  %cmp15 = icmp ult i32 %i.0, %cond
  br i1 %cmp15, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %add17 = add i32 12, %i.0
  %idxprom = zext i32 %add17 to i64
  %arrayidx18 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom
  %8 = load i8, i8* %arrayidx18, align 1, !tbaa !104
  %conv19 = zext i8 %8 to i32
  %call20 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %0, i32 %conv19)
  %cmp21 = icmp eq %struct.usb_interface* %call20, null
  br i1 %cmp21, label %do.body24, label %if.end33

do.body24:                                        ; preds = %for.body
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and25 = and i32 %9, 2
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %for.inc

if.then27:                                        ; preds = %do.body24
  %devnum28 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %10 = load i32, i32* %devnum28, align 8, !tbaa !149
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.21, i32 0, i32 0), i32 %10, i32 %i.0)
  br label %for.inc

if.end33:                                         ; preds = %for.body
  %call34 = call i32 @uvc_parse_streaming(%struct.uvc_device* %dev, %struct.usb_interface* %call20)
  br label %for.inc

for.inc:                                          ; preds = %if.end33, %if.then27, %do.body24
  %inc = add i32 %i.0, 1
  br label %for.cond

sw.bb35:                                          ; preds = %entry
  %cmp36 = icmp slt i32 %buflen, 8
  br i1 %cmp36, label %do.body39, label %if.end51

do.body39:                                        ; preds = %sw.bb35
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and40 = and i32 %11, 2
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %cleanup

if.then42:                                        ; preds = %do.body39
  %devnum43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %12 = load i32, i32* %devnum43, align 8, !tbaa !149
  %desc44 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber45 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc44, i32 0, i32 2
  %13 = load i8, i8* %bInterfaceNumber45, align 2, !tbaa !48
  %conv46 = zext i8 %13 to i32
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i32 0, i32 0), i32 %12, i32 %conv46)
  br label %cleanup

if.end51:                                         ; preds = %sw.bb35
  %arrayidx52 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call53 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx52)
  %conv54 = zext i16 %call53 to i32
  %and55 = and i32 %conv54, 65280
  %cmp56 = icmp eq i32 %and55, 0
  br i1 %cmp56, label %do.body59, label %if.end74

do.body59:                                        ; preds = %if.end51
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and60 = and i32 %14, 2
  %tobool61 = icmp ne i32 %and60, 0
  br i1 %tobool61, label %if.then62, label %cleanup

if.then62:                                        ; preds = %do.body59
  %devnum63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %15 = load i32, i32* %devnum63, align 8, !tbaa !149
  %desc64 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber65 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc64, i32 0, i32 2
  %16 = load i8, i8* %bInterfaceNumber65, align 2, !tbaa !48
  %conv66 = zext i8 %16 to i32
  %arrayidx67 = getelementptr inbounds i8, i8* %buffer, i64 3
  %17 = load i8, i8* %arrayidx67, align 1, !tbaa !104
  %conv68 = zext i8 %17 to i32
  %conv69 = zext i16 %call53 to i32
  %call70 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.23, i32 0, i32 0), i32 %15, i32 %conv66, i32 %conv68, i32 %conv69)
  br label %cleanup

if.end74:                                         ; preds = %if.end51
  %conv75 = zext i16 %call53 to i32
  %cmp76 = icmp eq i32 %conv75, 513
  br i1 %cmp76, label %if.then78, label %if.else

if.then78:                                        ; preds = %if.end74
  %cmp79 = icmp sge i32 %buflen, 15
  br i1 %cmp79, label %cond.true81, label %if.end111

cond.true81:                                      ; preds = %if.then78
  %arrayidx82 = getelementptr inbounds i8, i8* %buffer, i64 14
  %18 = load i8, i8* %arrayidx82, align 1, !tbaa !104
  %conv83 = zext i8 %18 to i32
  br label %if.end111

if.else:                                          ; preds = %if.end74
  %conv87 = zext i16 %call53 to i32
  %cmp88 = icmp eq i32 %conv87, 514
  br i1 %cmp88, label %if.then90, label %if.end111

if.then90:                                        ; preds = %if.else
  %cmp91 = icmp sge i32 %buflen, 9
  br i1 %cmp91, label %cond.true93, label %cond.end97

cond.true93:                                      ; preds = %if.then90
  %arrayidx94 = getelementptr inbounds i8, i8* %buffer, i64 8
  %19 = load i8, i8* %arrayidx94, align 1, !tbaa !104
  %conv95 = zext i8 %19 to i32
  br label %cond.end97

cond.end97:                                       ; preds = %cond.true93, %if.then90
  %cond98 = phi i32 [ %conv95, %cond.true93 ], [ 0, %if.then90 ]
  %add99 = add i32 10, %cond98
  %cmp100 = icmp uge i32 %buflen, %add99
  br i1 %cmp100, label %cond.true102, label %if.end111

cond.true102:                                     ; preds = %cond.end97
  %add103 = add i32 9, %cond98
  %idxprom104 = zext i32 %add103 to i64
  %arrayidx105 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom104
  %20 = load i8, i8* %arrayidx105, align 1, !tbaa !104
  %conv106 = zext i8 %20 to i32
  br label %if.end111

if.end111:                                        ; preds = %cond.true102, %cond.end97, %if.else, %cond.true81, %if.then78
  %n.1 = phi i32 [ %conv83, %cond.true81 ], [ 0, %if.then78 ], [ 0, %if.else ], [ %cond98, %cond.end97 ], [ %cond98, %cond.true102 ]
  %p.1 = phi i32 [ 0, %if.then78 ], [ 0, %cond.true81 ], [ 0, %if.else ], [ %conv106, %cond.true102 ], [ 0, %cond.end97 ]
  %len.1 = phi i32 [ 15, %if.then78 ], [ 15, %cond.true81 ], [ 8, %if.else ], [ 10, %cond.end97 ], [ 10, %cond.true102 ]
  %add112 = add i32 %len.1, %n.1
  %add113 = add i32 %add112, %p.1
  %cmp114 = icmp ult i32 %buflen, %add113
  br i1 %cmp114, label %do.body117, label %if.end129

do.body117:                                       ; preds = %if.end111
  %21 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and118 = and i32 %21, 2
  %tobool119 = icmp ne i32 %and118, 0
  br i1 %tobool119, label %if.then120, label %cleanup

if.then120:                                       ; preds = %do.body117
  %devnum121 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %22 = load i32, i32* %devnum121, align 8, !tbaa !149
  %desc122 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber123 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc122, i32 0, i32 2
  %23 = load i8, i8* %bInterfaceNumber123, align 2, !tbaa !48
  %conv124 = zext i8 %23 to i32
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i32 0, i32 0), i32 %22, i32 %conv124)
  br label %cleanup

if.end129:                                        ; preds = %if.end111
  %conv130 = zext i16 %call53 to i32
  %conv131 = trunc i32 %conv130 to i16
  %arrayidx132 = getelementptr inbounds i8, i8* %buffer, i64 3
  %24 = load i8, i8* %arrayidx132, align 1, !tbaa !104
  %add133 = add i32 %n.1, %p.1
  %call134 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv131, i8 zeroext %24, i32 1, i32 %add133)
  %cmp135 = icmp eq %struct.uvc_entity* %call134, null
  br i1 %cmp135, label %cleanup, label %if.end138

if.end138:                                        ; preds = %if.end129
  %type139 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 4
  %25 = load i16, i16* %type139, align 2, !tbaa !114
  %conv140 = zext i16 %25 to i32
  %and141 = and i32 %conv140, 32767
  %cmp142 = icmp eq i32 %and141, 513
  br i1 %cmp142, label %if.then144, label %if.else161

if.then144:                                       ; preds = %if.end138
  %conv145 = trunc i32 %n.1 to i8
  %26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera = bitcast %union.anon.64* %26 to %struct.anon.65*
  %bControlSize = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera, i32 0, i32 3
  store i8 %conv145, i8* %bControlSize, align 2, !tbaa !104
  %27 = bitcast %struct.uvc_entity* %call134 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 512
  %28 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera146 = bitcast %union.anon.64* %28 to %struct.anon.65*
  %bmControls = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera146, i32 0, i32 4
  store i8* %add.ptr, i8** %bmControls, align 8, !tbaa !104
  %arrayidx147 = getelementptr inbounds i8, i8* %buffer, i64 8
  %call148 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx147)
  %29 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera149 = bitcast %union.anon.64* %29 to %struct.anon.65*
  %wObjectiveFocalLengthMin = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera149, i32 0, i32 0
  store i16 %call148, i16* %wObjectiveFocalLengthMin, align 8, !tbaa !104
  %arrayidx150 = getelementptr inbounds i8, i8* %buffer, i64 10
  %call151 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx150)
  %30 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera152 = bitcast %union.anon.64* %30 to %struct.anon.65*
  %wObjectiveFocalLengthMax = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera152, i32 0, i32 1
  store i16 %call151, i16* %wObjectiveFocalLengthMax, align 2, !tbaa !104
  %arrayidx153 = getelementptr inbounds i8, i8* %buffer, i64 12
  %call154 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx153)
  %31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera155 = bitcast %union.anon.64* %31 to %struct.anon.65*
  %wOcularFocalLength = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera155, i32 0, i32 2
  store i16 %call154, i16* %wOcularFocalLength, align 4, !tbaa !104
  %32 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %camera156 = bitcast %union.anon.64* %32 to %struct.anon.65*
  %bmControls157 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera156, i32 0, i32 4
  %33 = load i8*, i8** %bmControls157, align 8, !tbaa !104
  %arrayidx158 = getelementptr inbounds i8, i8* %buffer, i64 15
  %conv159 = zext i32 %n.1 to i64
  %call160 = call i8* @__memcpy(i8* %33, i8* %arrayidx158, i64 %conv159)
  br label %if.end191

if.else161:                                       ; preds = %if.end138
  %type162 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 4
  %34 = load i16, i16* %type162, align 2, !tbaa !114
  %conv163 = zext i16 %34 to i32
  %and164 = and i32 %conv163, 32767
  %cmp165 = icmp eq i32 %and164, 514
  br i1 %cmp165, label %if.then167, label %if.end191

if.then167:                                       ; preds = %if.else161
  %conv168 = trunc i32 %n.1 to i8
  %35 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media = bitcast %union.anon.64* %35 to %struct.anon.66*
  %bControlSize169 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media, i32 0, i32 0
  store i8 %conv168, i8* %bControlSize169, align 8, !tbaa !104
  %36 = bitcast %struct.uvc_entity* %call134 to i8*
  %add.ptr170 = getelementptr inbounds i8, i8* %36, i64 512
  %37 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media171 = bitcast %union.anon.64* %37 to %struct.anon.66*
  %bmControls172 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media171, i32 0, i32 1
  store i8* %add.ptr170, i8** %bmControls172, align 8, !tbaa !104
  %conv173 = trunc i32 %p.1 to i8
  %38 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media174 = bitcast %union.anon.64* %38 to %struct.anon.66*
  %bTransportModeSize = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media174, i32 0, i32 2
  store i8 %conv173, i8* %bTransportModeSize, align 8, !tbaa !104
  %39 = bitcast %struct.uvc_entity* %call134 to i8*
  %add.ptr175 = getelementptr inbounds i8, i8* %39, i64 512
  %idx.ext = zext i32 %n.1 to i64
  %add.ptr176 = getelementptr inbounds i8, i8* %add.ptr175, i64 %idx.ext
  %40 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media177 = bitcast %union.anon.64* %40 to %struct.anon.66*
  %bmTransportModes = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media177, i32 0, i32 3
  store i8* %add.ptr176, i8** %bmTransportModes, align 8, !tbaa !104
  %41 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media178 = bitcast %union.anon.64* %41 to %struct.anon.66*
  %bmControls179 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media178, i32 0, i32 1
  %42 = load i8*, i8** %bmControls179, align 8, !tbaa !104
  %arrayidx180 = getelementptr inbounds i8, i8* %buffer, i64 9
  %conv181 = zext i32 %n.1 to i64
  %call182 = call i8* @__memcpy(i8* %42, i8* %arrayidx180, i64 %conv181)
  %43 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 11
  %media183 = bitcast %union.anon.64* %43 to %struct.anon.66*
  %bmTransportModes184 = getelementptr inbounds %struct.anon.66, %struct.anon.66* %media183, i32 0, i32 3
  %44 = load i8*, i8** %bmTransportModes184, align 8, !tbaa !104
  %add185 = add i32 10, %n.1
  %idxprom186 = zext i32 %add185 to i64
  %arrayidx187 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom186
  %conv188 = zext i32 %p.1 to i64
  %call189 = call i8* @__memcpy(i8* %44, i8* %arrayidx187, i64 %conv188)
  br label %if.end191

if.end191:                                        ; preds = %if.then167, %if.else161, %if.then144
  %arrayidx192 = getelementptr inbounds i8, i8* %buffer, i64 7
  %45 = load i8, i8* %arrayidx192, align 1, !tbaa !104
  %conv193 = zext i8 %45 to i32
  %cmp194 = icmp ne i32 %conv193, 0
  br i1 %cmp194, label %if.then196, label %if.else200

if.then196:                                       ; preds = %if.end191
  %arrayidx197 = getelementptr inbounds i8, i8* %buffer, i64 7
  %46 = load i8, i8* %arrayidx197, align 1, !tbaa !104
  %conv198 = zext i8 %46 to i32
  %name = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 5
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0
  %call199 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv198, i8* %arraydecay, i64 64)
  br label %if.end232

if.else200:                                       ; preds = %if.end191
  %type201 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 4
  %47 = load i16, i16* %type201, align 2, !tbaa !114
  %conv202 = zext i16 %47 to i32
  %and203 = and i32 %conv202, 32767
  %cmp204 = icmp eq i32 %and203, 513
  br i1 %cmp204, label %if.then206, label %if.else212

if.then206:                                       ; preds = %if.else200
  %name207 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 5
  %arraydecay208 = getelementptr inbounds [64 x i8], [64 x i8]* %name207, i32 0, i32 0
  %arrayidx209 = getelementptr inbounds i8, i8* %buffer, i64 3
  %48 = load i8, i8* %arrayidx209, align 1, !tbaa !104
  %conv210 = zext i8 %48 to i32
  %call211 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay208, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 %conv210)
  br label %if.end232

if.else212:                                       ; preds = %if.else200
  %type213 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 4
  %49 = load i16, i16* %type213, align 2, !tbaa !114
  %conv214 = zext i16 %49 to i32
  %and215 = and i32 %conv214, 32767
  %cmp216 = icmp eq i32 %and215, 514
  %name219 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 5
  %arraydecay220 = getelementptr inbounds [64 x i8], [64 x i8]* %name219, i32 0, i32 0
  %arrayidx221 = getelementptr inbounds i8, i8* %buffer, i64 3
  %50 = load i8, i8* %arrayidx221, align 1, !tbaa !104
  %conv222 = zext i8 %50 to i32
  br i1 %cmp216, label %if.then218, label %if.else224

if.then218:                                       ; preds = %if.else212
  %call223 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay220, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i32 %conv222)
  br label %if.end232

if.else224:                                       ; preds = %if.else212
  %call229 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay220, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i32 %conv222)
  br label %if.end232

if.end232:                                        ; preds = %if.else224, %if.then218, %if.then206, %if.then196
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call134, i32 0, i32 0
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %entities)
  br label %cleanup

sw.bb233:                                         ; preds = %entry
  %cmp234 = icmp slt i32 %buflen, 9
  br i1 %cmp234, label %do.body237, label %if.end249

do.body237:                                       ; preds = %sw.bb233
  %51 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and238 = and i32 %51, 2
  %tobool239 = icmp ne i32 %and238, 0
  br i1 %tobool239, label %if.then240, label %cleanup

if.then240:                                       ; preds = %do.body237
  %devnum241 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %52 = load i32, i32* %devnum241, align 8, !tbaa !149
  %desc242 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber243 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc242, i32 0, i32 2
  %53 = load i8, i8* %bInterfaceNumber243, align 2, !tbaa !48
  %conv244 = zext i8 %53 to i32
  %call245 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.27, i32 0, i32 0), i32 %52, i32 %conv244)
  br label %cleanup

if.end249:                                        ; preds = %sw.bb233
  %arrayidx250 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call251 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx250)
  %conv252 = zext i16 %call251 to i32
  %and253 = and i32 %conv252, 65280
  %cmp254 = icmp eq i32 %and253, 0
  br i1 %cmp254, label %do.body257, label %if.end272

do.body257:                                       ; preds = %if.end249
  %54 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and258 = and i32 %54, 2
  %tobool259 = icmp ne i32 %and258, 0
  br i1 %tobool259, label %if.then260, label %cleanup

if.then260:                                       ; preds = %do.body257
  %devnum261 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %55 = load i32, i32* %devnum261, align 8, !tbaa !149
  %desc262 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber263 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc262, i32 0, i32 2
  %56 = load i8, i8* %bInterfaceNumber263, align 2, !tbaa !48
  %conv264 = zext i8 %56 to i32
  %arrayidx265 = getelementptr inbounds i8, i8* %buffer, i64 3
  %57 = load i8, i8* %arrayidx265, align 1, !tbaa !104
  %conv266 = zext i8 %57 to i32
  %conv267 = zext i16 %call251 to i32
  %call268 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.28, i32 0, i32 0), i32 %55, i32 %conv264, i32 %conv266, i32 %conv267)
  br label %cleanup

if.end272:                                        ; preds = %if.end249
  %conv273 = zext i16 %call251 to i32
  %or = or i32 %conv273, 32768
  %conv274 = trunc i32 %or to i16
  %arrayidx275 = getelementptr inbounds i8, i8* %buffer, i64 3
  %58 = load i8, i8* %arrayidx275, align 1, !tbaa !104
  %call276 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv274, i8 zeroext %58, i32 1, i32 0)
  %cmp277 = icmp eq %struct.uvc_entity* %call276, null
  br i1 %cmp277, label %cleanup, label %if.end280

if.end280:                                        ; preds = %if.end272
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call276, i32 0, i32 13
  %59 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %arrayidx281 = getelementptr inbounds i8, i8* %buffer, i64 7
  %call282 = call i8* @__memcpy(i8* %59, i8* %arrayidx281, i64 1)
  %arrayidx283 = getelementptr inbounds i8, i8* %buffer, i64 8
  %60 = load i8, i8* %arrayidx283, align 1, !tbaa !104
  %conv284 = zext i8 %60 to i32
  %cmp285 = icmp ne i32 %conv284, 0
  br i1 %cmp285, label %if.then287, label %if.else293

if.then287:                                       ; preds = %if.end280
  %arrayidx288 = getelementptr inbounds i8, i8* %buffer, i64 8
  %61 = load i8, i8* %arrayidx288, align 1, !tbaa !104
  %conv289 = zext i8 %61 to i32
  %name290 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call276, i32 0, i32 5
  %arraydecay291 = getelementptr inbounds [64 x i8], [64 x i8]* %name290, i32 0, i32 0
  %call292 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv289, i8* %arraydecay291, i64 64)
  br label %if.end299

if.else293:                                       ; preds = %if.end280
  %name294 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call276, i32 0, i32 5
  %arraydecay295 = getelementptr inbounds [64 x i8], [64 x i8]* %name294, i32 0, i32 0
  %arrayidx296 = getelementptr inbounds i8, i8* %buffer, i64 3
  %62 = load i8, i8* %arrayidx296, align 1, !tbaa !104
  %conv297 = zext i8 %62 to i32
  %call298 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay295, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i32 %conv297)
  br label %if.end299

if.end299:                                        ; preds = %if.else293, %if.then287
  %list300 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call276, i32 0, i32 0
  %entities301 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list300, %struct.list_head* %entities301)
  br label %cleanup

sw.bb302:                                         ; preds = %entry
  %cmp303 = icmp sge i32 %buflen, 5
  br i1 %cmp303, label %cond.true305, label %cond.end309

cond.true305:                                     ; preds = %sw.bb302
  %arrayidx306 = getelementptr inbounds i8, i8* %buffer, i64 4
  %63 = load i8, i8* %arrayidx306, align 1, !tbaa !104
  %conv307 = zext i8 %63 to i32
  br label %cond.end309

cond.end309:                                      ; preds = %cond.true305, %sw.bb302
  %cond310 = phi i32 [ %conv307, %cond.true305 ], [ 0, %sw.bb302 ]
  %cmp311 = icmp slt i32 %buflen, 5
  %add313 = add i32 6, %cond310
  %cmp314 = icmp ult i32 %buflen, %add313
  %or.cond = or i1 %cmp311, %cmp314
  br i1 %or.cond, label %do.body317, label %if.end329

do.body317:                                       ; preds = %cond.end309
  %64 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and318 = and i32 %64, 2
  %tobool319 = icmp ne i32 %and318, 0
  br i1 %tobool319, label %if.then320, label %cleanup

if.then320:                                       ; preds = %do.body317
  %devnum321 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %65 = load i32, i32* %devnum321, align 8, !tbaa !149
  %desc322 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber323 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc322, i32 0, i32 2
  %66 = load i8, i8* %bInterfaceNumber323, align 2, !tbaa !48
  %conv324 = zext i8 %66 to i32
  %call325 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i32 0, i32 0), i32 %65, i32 %conv324)
  br label %cleanup

if.end329:                                        ; preds = %cond.end309
  %arrayidx330 = getelementptr inbounds i8, i8* %buffer, i64 2
  %67 = load i8, i8* %arrayidx330, align 1, !tbaa !104
  %conv331 = zext i8 %67 to i16
  %arrayidx332 = getelementptr inbounds i8, i8* %buffer, i64 3
  %68 = load i8, i8* %arrayidx332, align 1, !tbaa !104
  %add333 = add i32 %cond310, 1
  %call334 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv331, i8 zeroext %68, i32 %add333, i32 0)
  %cmp335 = icmp eq %struct.uvc_entity* %call334, null
  br i1 %cmp335, label %cleanup, label %if.end338

if.end338:                                        ; preds = %if.end329
  %baSourceID339 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call334, i32 0, i32 13
  %69 = load i8*, i8** %baSourceID339, align 8, !tbaa !138
  %arrayidx340 = getelementptr inbounds i8, i8* %buffer, i64 5
  %conv341 = zext i32 %cond310 to i64
  %call342 = call i8* @__memcpy(i8* %69, i8* %arrayidx340, i64 %conv341)
  %add343 = add i32 5, %cond310
  %idxprom344 = zext i32 %add343 to i64
  %arrayidx345 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom344
  %70 = load i8, i8* %arrayidx345, align 1, !tbaa !104
  %conv346 = zext i8 %70 to i32
  %cmp347 = icmp ne i32 %conv346, 0
  br i1 %cmp347, label %if.then349, label %if.else357

if.then349:                                       ; preds = %if.end338
  %add350 = add i32 5, %cond310
  %idxprom351 = zext i32 %add350 to i64
  %arrayidx352 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom351
  %71 = load i8, i8* %arrayidx352, align 1, !tbaa !104
  %conv353 = zext i8 %71 to i32
  %name354 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call334, i32 0, i32 5
  %arraydecay355 = getelementptr inbounds [64 x i8], [64 x i8]* %name354, i32 0, i32 0
  %call356 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv353, i8* %arraydecay355, i64 64)
  br label %if.end363

if.else357:                                       ; preds = %if.end338
  %name358 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call334, i32 0, i32 5
  %arraydecay359 = getelementptr inbounds [64 x i8], [64 x i8]* %name358, i32 0, i32 0
  %arrayidx360 = getelementptr inbounds i8, i8* %buffer, i64 3
  %72 = load i8, i8* %arrayidx360, align 1, !tbaa !104
  %conv361 = zext i8 %72 to i32
  %call362 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay359, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), i32 %conv361)
  br label %if.end363

if.end363:                                        ; preds = %if.else357, %if.then349
  %list364 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call334, i32 0, i32 0
  %entities365 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list364, %struct.list_head* %entities365)
  br label %cleanup

sw.bb366:                                         ; preds = %entry
  %cmp367 = icmp sge i32 %buflen, 8
  br i1 %cmp367, label %cond.true369, label %cond.end373

cond.true369:                                     ; preds = %sw.bb366
  %arrayidx370 = getelementptr inbounds i8, i8* %buffer, i64 7
  %73 = load i8, i8* %arrayidx370, align 1, !tbaa !104
  %conv371 = zext i8 %73 to i32
  br label %cond.end373

cond.end373:                                      ; preds = %cond.true369, %sw.bb366
  %cond374 = phi i32 [ %conv371, %cond.true369 ], [ 0, %sw.bb366 ]
  %uvc_version375 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  %74 = load i16, i16* %uvc_version375, align 8, !tbaa !65
  %conv376 = zext i16 %74 to i32
  %cmp377 = icmp sge i32 %conv376, 272
  %75 = zext i1 %cmp377 to i64
  %cond379 = select i1 %cmp377, i32 10, i32 9
  %add380 = add i32 %cond379, %cond374
  %cmp381 = icmp ult i32 %buflen, %add380
  br i1 %cmp381, label %do.body384, label %if.end396

do.body384:                                       ; preds = %cond.end373
  %76 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and385 = and i32 %76, 2
  %tobool386 = icmp ne i32 %and385, 0
  br i1 %tobool386, label %if.then387, label %cleanup

if.then387:                                       ; preds = %do.body384
  %devnum388 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %77 = load i32, i32* %devnum388, align 8, !tbaa !149
  %desc389 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber390 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc389, i32 0, i32 2
  %78 = load i8, i8* %bInterfaceNumber390, align 2, !tbaa !48
  %conv391 = zext i8 %78 to i32
  %call392 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.32, i32 0, i32 0), i32 %77, i32 %conv391)
  br label %cleanup

if.end396:                                        ; preds = %cond.end373
  %arrayidx397 = getelementptr inbounds i8, i8* %buffer, i64 2
  %79 = load i8, i8* %arrayidx397, align 1, !tbaa !104
  %conv398 = zext i8 %79 to i16
  %arrayidx399 = getelementptr inbounds i8, i8* %buffer, i64 3
  %80 = load i8, i8* %arrayidx399, align 1, !tbaa !104
  %call400 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv398, i8 zeroext %80, i32 2, i32 %cond374)
  %cmp401 = icmp eq %struct.uvc_entity* %call400, null
  br i1 %cmp401, label %cleanup, label %if.end404

if.end404:                                        ; preds = %if.end396
  %baSourceID405 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 13
  %81 = load i8*, i8** %baSourceID405, align 8, !tbaa !138
  %arrayidx406 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call407 = call i8* @__memcpy(i8* %81, i8* %arrayidx406, i64 1)
  %arrayidx408 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call409 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx408)
  %82 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 11
  %processing = bitcast %union.anon.64* %82 to %struct.anon.68*
  %wMaxMultiplier = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing, i32 0, i32 0
  store i16 %call409, i16* %wMaxMultiplier, align 8, !tbaa !104
  %arrayidx410 = getelementptr inbounds i8, i8* %buffer, i64 7
  %83 = load i8, i8* %arrayidx410, align 1, !tbaa !104
  %84 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 11
  %processing411 = bitcast %union.anon.64* %84 to %struct.anon.68*
  %bControlSize412 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing411, i32 0, i32 1
  store i8 %83, i8* %bControlSize412, align 2, !tbaa !104
  %85 = bitcast %struct.uvc_entity* %call400 to i8*
  %add.ptr413 = getelementptr inbounds i8, i8* %85, i64 512
  %86 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 11
  %processing414 = bitcast %union.anon.64* %86 to %struct.anon.68*
  %bmControls415 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing414, i32 0, i32 2
  store i8* %add.ptr413, i8** %bmControls415, align 8, !tbaa !104
  %87 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 11
  %processing416 = bitcast %union.anon.64* %87 to %struct.anon.68*
  %bmControls417 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing416, i32 0, i32 2
  %88 = load i8*, i8** %bmControls417, align 8, !tbaa !104
  %arrayidx418 = getelementptr inbounds i8, i8* %buffer, i64 8
  %conv419 = zext i32 %cond374 to i64
  %call420 = call i8* @__memcpy(i8* %88, i8* %arrayidx418, i64 %conv419)
  %uvc_version421 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  %89 = load i16, i16* %uvc_version421, align 8, !tbaa !65
  %conv422 = zext i16 %89 to i32
  %cmp423 = icmp sge i32 %conv422, 272
  br i1 %cmp423, label %if.then425, label %if.end430

if.then425:                                       ; preds = %if.end404
  %add426 = add i32 9, %cond374
  %idxprom427 = zext i32 %add426 to i64
  %arrayidx428 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom427
  %90 = load i8, i8* %arrayidx428, align 1, !tbaa !104
  %91 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 11
  %processing429 = bitcast %union.anon.64* %91 to %struct.anon.68*
  %bmVideoStandards = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing429, i32 0, i32 3
  store i8 %90, i8* %bmVideoStandards, align 8, !tbaa !104
  br label %if.end430

if.end430:                                        ; preds = %if.then425, %if.end404
  %add431 = add i32 8, %cond374
  %idxprom432 = zext i32 %add431 to i64
  %arrayidx433 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom432
  %92 = load i8, i8* %arrayidx433, align 1, !tbaa !104
  %conv434 = zext i8 %92 to i32
  %cmp435 = icmp ne i32 %conv434, 0
  br i1 %cmp435, label %if.then437, label %if.else445

if.then437:                                       ; preds = %if.end430
  %add438 = add i32 8, %cond374
  %idxprom439 = zext i32 %add438 to i64
  %arrayidx440 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom439
  %93 = load i8, i8* %arrayidx440, align 1, !tbaa !104
  %conv441 = zext i8 %93 to i32
  %name442 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 5
  %arraydecay443 = getelementptr inbounds [64 x i8], [64 x i8]* %name442, i32 0, i32 0
  %call444 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv441, i8* %arraydecay443, i64 64)
  br label %if.end451

if.else445:                                       ; preds = %if.end430
  %name446 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 5
  %arraydecay447 = getelementptr inbounds [64 x i8], [64 x i8]* %name446, i32 0, i32 0
  %arrayidx448 = getelementptr inbounds i8, i8* %buffer, i64 3
  %94 = load i8, i8* %arrayidx448, align 1, !tbaa !104
  %conv449 = zext i8 %94 to i32
  %call450 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay447, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i32 %conv449)
  br label %if.end451

if.end451:                                        ; preds = %if.else445, %if.then437
  %list452 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call400, i32 0, i32 0
  %entities453 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list452, %struct.list_head* %entities453)
  br label %cleanup

sw.bb454:                                         ; preds = %entry
  %cmp455 = icmp sge i32 %buflen, 22
  br i1 %cmp455, label %cond.true457, label %cond.end461

cond.true457:                                     ; preds = %sw.bb454
  %arrayidx458 = getelementptr inbounds i8, i8* %buffer, i64 21
  %95 = load i8, i8* %arrayidx458, align 1, !tbaa !104
  %conv459 = zext i8 %95 to i32
  br label %cond.end461

cond.end461:                                      ; preds = %cond.true457, %sw.bb454
  %cond462 = phi i32 [ %conv459, %cond.true457 ], [ 0, %sw.bb454 ]
  %add463 = add i32 24, %cond462
  %cmp464 = icmp uge i32 %buflen, %add463
  br i1 %cmp464, label %cond.true466, label %cond.end472

cond.true466:                                     ; preds = %cond.end461
  %add467 = add i32 22, %cond462
  %idxprom468 = zext i32 %add467 to i64
  %arrayidx469 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom468
  %96 = load i8, i8* %arrayidx469, align 1, !tbaa !104
  %conv470 = zext i8 %96 to i32
  br label %cond.end472

cond.end472:                                      ; preds = %cond.true466, %cond.end461
  %cond473 = phi i32 [ %conv470, %cond.true466 ], [ 0, %cond.end461 ]
  %add474 = add i32 24, %cond462
  %add475 = add i32 %add474, %cond473
  %cmp476 = icmp ult i32 %buflen, %add475
  br i1 %cmp476, label %do.body479, label %if.end491

do.body479:                                       ; preds = %cond.end472
  %97 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and480 = and i32 %97, 2
  %tobool481 = icmp ne i32 %and480, 0
  br i1 %tobool481, label %if.then482, label %cleanup

if.then482:                                       ; preds = %do.body479
  %devnum483 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %98 = load i32, i32* %devnum483, align 8, !tbaa !149
  %desc484 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber485 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc484, i32 0, i32 2
  %99 = load i8, i8* %bInterfaceNumber485, align 2, !tbaa !48
  %conv486 = zext i8 %99 to i32
  %call487 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i32 0, i32 0), i32 %98, i32 %conv486)
  br label %cleanup

if.end491:                                        ; preds = %cond.end472
  %arrayidx492 = getelementptr inbounds i8, i8* %buffer, i64 2
  %100 = load i8, i8* %arrayidx492, align 1, !tbaa !104
  %conv493 = zext i8 %100 to i16
  %arrayidx494 = getelementptr inbounds i8, i8* %buffer, i64 3
  %101 = load i8, i8* %arrayidx494, align 1, !tbaa !104
  %add495 = add i32 %cond462, 1
  %call496 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv493, i8 zeroext %101, i32 %add495, i32 %cond473)
  %cmp497 = icmp eq %struct.uvc_entity* %call496, null
  br i1 %cmp497, label %cleanup, label %if.end500

if.end500:                                        ; preds = %if.end491
  %102 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 11
  %extension = bitcast %union.anon.64* %102 to %struct.anon.70*
  %guidExtensionCode = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 0
  %arraydecay501 = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %arrayidx502 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call503 = call i8* @__memcpy(i8* %arraydecay501, i8* %arrayidx502, i64 16)
  %arrayidx504 = getelementptr inbounds i8, i8* %buffer, i64 20
  %103 = load i8, i8* %arrayidx504, align 1, !tbaa !104
  %104 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 11
  %extension505 = bitcast %union.anon.64* %104 to %struct.anon.70*
  %bNumControls = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension505, i32 0, i32 1
  store i8 %103, i8* %bNumControls, align 8, !tbaa !104
  %baSourceID506 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 13
  %105 = load i8*, i8** %baSourceID506, align 8, !tbaa !138
  %arrayidx507 = getelementptr inbounds i8, i8* %buffer, i64 22
  %conv508 = zext i32 %cond462 to i64
  %call509 = call i8* @__memcpy(i8* %105, i8* %arrayidx507, i64 %conv508)
  %add510 = add i32 22, %cond462
  %idxprom511 = zext i32 %add510 to i64
  %arrayidx512 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom511
  %106 = load i8, i8* %arrayidx512, align 1, !tbaa !104
  %107 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 11
  %extension513 = bitcast %union.anon.64* %107 to %struct.anon.70*
  %bControlSize514 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension513, i32 0, i32 2
  store i8 %106, i8* %bControlSize514, align 1, !tbaa !104
  %108 = bitcast %struct.uvc_entity* %call496 to i8*
  %add.ptr515 = getelementptr inbounds i8, i8* %108, i64 512
  %109 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 11
  %extension516 = bitcast %union.anon.64* %109 to %struct.anon.70*
  %bmControls517 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension516, i32 0, i32 3
  store i8* %add.ptr515, i8** %bmControls517, align 8, !tbaa !104
  %110 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 11
  %extension518 = bitcast %union.anon.64* %110 to %struct.anon.70*
  %bmControls519 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension518, i32 0, i32 3
  %111 = load i8*, i8** %bmControls519, align 8, !tbaa !104
  %add520 = add i32 23, %cond462
  %idxprom521 = zext i32 %add520 to i64
  %arrayidx522 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom521
  %conv523 = zext i32 %cond473 to i64
  %call524 = call i8* @__memcpy(i8* %111, i8* %arrayidx522, i64 %conv523)
  %add525 = add i32 23, %cond462
  %add526 = add i32 %add525, %cond473
  %idxprom527 = zext i32 %add526 to i64
  %arrayidx528 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom527
  %112 = load i8, i8* %arrayidx528, align 1, !tbaa !104
  %conv529 = zext i8 %112 to i32
  %cmp530 = icmp ne i32 %conv529, 0
  br i1 %cmp530, label %if.then532, label %if.else541

if.then532:                                       ; preds = %if.end500
  %add533 = add i32 23, %cond462
  %add534 = add i32 %add533, %cond473
  %idxprom535 = zext i32 %add534 to i64
  %arrayidx536 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom535
  %113 = load i8, i8* %arrayidx536, align 1, !tbaa !104
  %conv537 = zext i8 %113 to i32
  %name538 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 5
  %arraydecay539 = getelementptr inbounds [64 x i8], [64 x i8]* %name538, i32 0, i32 0
  %call540 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv537, i8* %arraydecay539, i64 64)
  br label %if.end547

if.else541:                                       ; preds = %if.end500
  %name542 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 5
  %arraydecay543 = getelementptr inbounds [64 x i8], [64 x i8]* %name542, i32 0, i32 0
  %arrayidx544 = getelementptr inbounds i8, i8* %buffer, i64 3
  %114 = load i8, i8* %arrayidx544, align 1, !tbaa !104
  %conv545 = zext i8 %114 to i32
  %call546 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay543, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i32 %conv545)
  br label %if.end547

if.end547:                                        ; preds = %if.else541, %if.then532
  %list548 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call496, i32 0, i32 0
  %entities549 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list548, %struct.list_head* %entities549)
  br label %cleanup

do.body550:                                       ; preds = %entry
  %115 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and551 = and i32 %115, 2
  %tobool552 = icmp ne i32 %and551, 0
  br i1 %tobool552, label %if.then553, label %cleanup

if.then553:                                       ; preds = %do.body550
  %arrayidx554 = getelementptr inbounds i8, i8* %buffer, i64 2
  %116 = load i8, i8* %arrayidx554, align 1, !tbaa !104
  %conv555 = zext i8 %116 to i32
  %call556 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i32 0, i32 0), i32 %conv555)
  br label %cleanup

cleanup:                                          ; preds = %if.then553, %do.body550, %if.end547, %if.end491, %if.then482, %do.body479, %if.end451, %if.end396, %if.then387, %do.body384, %if.end363, %if.end329, %if.then320, %do.body317, %if.end299, %if.end272, %if.then260, %do.body257, %if.then240, %do.body237, %if.end232, %if.end129, %if.then120, %do.body117, %if.then62, %do.body59, %if.then42, %do.body39, %for.cond, %if.then8, %do.body
  %retval.0 = phi i32 [ -22, %if.then8 ], [ -22, %do.body ], [ -22, %if.then42 ], [ -22, %do.body39 ], [ 0, %if.then62 ], [ 0, %do.body59 ], [ -22, %if.then120 ], [ -22, %do.body117 ], [ -12, %if.end129 ], [ -22, %if.then240 ], [ -22, %do.body237 ], [ 0, %if.then260 ], [ 0, %do.body257 ], [ -12, %if.end272 ], [ -22, %if.then320 ], [ -22, %do.body317 ], [ -12, %if.end329 ], [ -22, %if.then387 ], [ -22, %do.body384 ], [ -12, %if.end396 ], [ -22, %if.then482 ], [ -22, %do.body479 ], [ -12, %if.end491 ], [ 0, %do.body550 ], [ 0, %if.then553 ], [ 0, %for.cond ], [ 0, %if.end547 ], [ 0, %if.end451 ], [ 0, %if.end363 ], [ 0, %if.end299 ], [ 0, %if.end232 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_is_int_in(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %call = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %call1 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd)
  %tobool2 = icmp ne i32 %call1, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %0 to i32
  ret i32 %land.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 3
  %0 = load i8, i8* %bmAttributes, align 1, !tbaa !151
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 3
  %cmp = icmp eq i32 %and, 3
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 2
  %0 = load i8, i8* %bEndpointAddress, align 1, !tbaa !112
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 128
  %cmp = icmp eq i32 %and, 128
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @get_unaligned_le16(i8* %p) #3 {
entry:
  %0 = bitcast i8* %p to i16*
  %call = call zeroext i16 @__le16_to_cpup(i16* %0)
  ret i16 %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @get_unaligned_le32(i8* %p) #3 {
entry:
  %0 = bitcast i8* %p to i32*
  %call = call i32 @__le32_to_cpup(i32* %0)
  ret i32 %call
}

declare %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_streaming(%struct.uvc_device* %dev, %struct.usb_interface* %intf) #0 {
entry:
  %interval = alloca i32*, align 8
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %0 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !tbaa !152
  %arrayidx = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %0, i64 0
  %extra = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 2
  %1 = load i8*, i8** %extra, align 8, !tbaa !106
  %extralen = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 1
  %2 = load i32, i32* %extralen, align 4, !tbaa !107
  %3 = bitcast i32** %interval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !72
  %conv = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv, 2
  br i1 %cmp, label %do.body, label %if.end7

do.body:                                          ; preds = %entry
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %6, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %cleanup398

if.then2:                                         ; preds = %do.body
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 0
  %8 = load i32, i32* %devnum, align 8, !tbaa !149
  %altsetting3 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %9 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting3, align 8, !tbaa !152
  %arrayidx4 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %9, i64 0
  %desc5 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx4, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc5, i32 0, i32 2
  %10 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv6 = zext i8 %10 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.35, i32 0, i32 0), i32 %8, i32 %conv6)
  br label %cleanup398

if.end7:                                          ; preds = %entry
  %11 = bitcast %struct.uvc_device* %dev to i8*
  %call8 = call i32 @usb_driver_claim_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf, i8* %11)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %do.body11, label %if.end26

do.body11:                                        ; preds = %if.end7
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and12 = and i32 %12, 2
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then14, label %cleanup398

if.then14:                                        ; preds = %do.body11
  %udev15 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %13 = load %struct.usb_device*, %struct.usb_device** %udev15, align 8, !tbaa !11
  %devnum16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 0
  %14 = load i32, i32* %devnum16, align 8, !tbaa !149
  %altsetting17 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %15 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting17, align 8, !tbaa !152
  %arrayidx18 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %15, i64 0
  %desc19 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx18, i32 0, i32 0
  %bInterfaceNumber20 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc19, i32 0, i32 2
  %16 = load i8, i8* %bInterfaceNumber20, align 2, !tbaa !48
  %conv21 = zext i8 %16 to i32
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i32 0, i32 0), i32 %14, i32 %conv21)
  br label %cleanup398

if.end26:                                         ; preds = %if.end7
  %call27 = call i8* @kzalloc(i64 4248, i32 20971712)
  %17 = bitcast i8* %call27 to %struct.uvc_streaming*
  %cmp28 = icmp eq %struct.uvc_streaming* %17, null
  br i1 %cmp28, label %if.then30, label %do.body32

if.then30:                                        ; preds = %if.end26
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf)
  br label %cleanup398

do.body32:                                        ; preds = %if.end26
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 16
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i32 0, i32 0), %struct.lock_class_key* @uvc_parse_streaming.__key)
  %dev35 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 1
  store %struct.uvc_device* %dev, %struct.uvc_device** %dev35, align 8, !tbaa !133
  %call36 = call %struct.usb_interface* @usb_get_intf(%struct.usb_interface* %intf)
  %intf37 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 5
  store %struct.usb_interface* %call36, %struct.usb_interface** %intf37, align 8, !tbaa !75
  %cur_altsetting38 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %18 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting38, align 8, !tbaa !32
  %desc39 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %18, i32 0, i32 0
  %bInterfaceNumber40 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc39, i32 0, i32 2
  %19 = load i8, i8* %bInterfaceNumber40, align 2, !tbaa !48
  %conv41 = zext i8 %19 to i32
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 6
  store i32 %conv41, i32* %intfnum, align 8, !tbaa !153
  %cmp42 = icmp eq i32 %2, 0
  br i1 %cmp42, label %if.then44, label %if.end81

if.then44:                                        ; preds = %do.body32
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then44
  %i.0 = phi i32 [ 0, %if.then44 ], [ %inc, %for.inc ]
  %buflen.0 = phi i32 [ %2, %if.then44 ], [ %buflen.1, %for.inc ]
  %buffer.0 = phi i8* [ %1, %if.then44 ], [ %buffer.1, %for.inc ]
  %desc45 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc45, i32 0, i32 4
  %20 = load i8, i8* %bNumEndpoints, align 4, !tbaa !108
  %conv46 = zext i8 %20 to i32
  %cmp47 = icmp ult i32 %i.0, %conv46
  br i1 %cmp47, label %for.body, label %if.end81

for.body:                                         ; preds = %for.cond
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !109
  %idxprom = zext i32 %i.0 to i64
  %arrayidx49 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i64 %idxprom
  %extralen50 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 8
  %22 = load i32, i32* %extralen50, align 8, !tbaa !154
  %cmp51 = icmp eq i32 %22, 0
  br i1 %cmp51, label %cleanup, label %if.end54

if.end54:                                         ; preds = %for.body
  %extralen55 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 8
  %23 = load i32, i32* %extralen55, align 8, !tbaa !154
  %cmp56 = icmp sgt i32 %23, 2
  br i1 %cmp56, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %if.end54
  %extra58 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 7
  %24 = load i8*, i8** %extra58, align 8, !tbaa !155
  %arrayidx59 = getelementptr inbounds i8, i8* %24, i64 1
  %25 = load i8, i8* %arrayidx59, align 1, !tbaa !104
  %conv60 = zext i8 %25 to i32
  %cmp61 = icmp eq i32 %conv60, 36
  br i1 %cmp61, label %do.body64, label %cleanup

do.body64:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and65 = and i32 %26, 2
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.then67, label %do.end71

if.then67:                                        ; preds = %do.body64
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i32 0, i32 0), i32 %i.0)
  br label %do.end71

do.end71:                                         ; preds = %if.then67, %do.body64
  %endpoint72 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %27 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint72, align 8, !tbaa !109
  %idxprom73 = zext i32 %i.0 to i64
  %arrayidx74 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %27, i64 %idxprom73
  %extra75 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx74, i32 0, i32 7
  %28 = load i8*, i8** %extra75, align 8, !tbaa !155
  %endpoint76 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %29 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint76, align 8, !tbaa !109
  %idxprom77 = zext i32 %i.0 to i64
  %arrayidx78 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %29, i64 %idxprom77
  %extralen79 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx78, i32 0, i32 8
  %30 = load i32, i32* %extralen79, align 8, !tbaa !154
  br label %cleanup

cleanup:                                          ; preds = %do.end71, %land.lhs.true, %if.end54, %for.body
  %buflen.1 = phi i32 [ %30, %do.end71 ], [ %buflen.0, %for.body ], [ %buflen.0, %land.lhs.true ], [ %buflen.0, %if.end54 ]
  %buffer.1 = phi i8* [ %28, %do.end71 ], [ %buffer.0, %for.body ], [ %buffer.0, %land.lhs.true ], [ %buffer.0, %if.end54 ]
  %cleanup.dest.slot.0 = phi i32 [ 8, %do.end71 ], [ 10, %for.body ], [ 0, %land.lhs.true ], [ 0, %if.end54 ]
  %cleanup.dest.slot.0.off = add i32 %cleanup.dest.slot.0, -8
  %switch = icmp ult i32 %cleanup.dest.slot.0.off, 1
  br i1 %switch, label %if.end81, label %for.inc

for.inc:                                          ; preds = %cleanup
  %inc = add i32 %i.0, 1
  br label %for.cond

if.end81:                                         ; preds = %cleanup, %for.cond, %do.body32
  %buflen.3 = phi i32 [ %2, %do.body32 ], [ %buflen.1, %cleanup ], [ %buflen.0, %for.cond ]
  %buffer.3 = phi i8* [ %1, %do.body32 ], [ %buffer.1, %cleanup ], [ %buffer.0, %for.cond ]
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end81
  %buflen.4 = phi i32 [ %buflen.3, %if.end81 ], [ %sub, %while.body ]
  %buffer.4 = phi i8* [ %buffer.3, %if.end81 ], [ %add.ptr, %while.body ]
  %cmp82 = icmp sgt i32 %buflen.4, 2
  br i1 %cmp82, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond
  %arrayidx84 = getelementptr inbounds i8, i8* %buffer.4, i64 1
  %31 = load i8, i8* %arrayidx84, align 1, !tbaa !104
  %conv85 = zext i8 %31 to i32
  %cmp86 = icmp ne i32 %conv85, 36
  br i1 %cmp86, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %arrayidx88 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %32 = load i8, i8* %arrayidx88, align 1, !tbaa !104
  %conv89 = zext i8 %32 to i32
  %sub = sub nsw i32 %buflen.4, %conv89
  %arrayidx90 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %33 = load i8, i8* %arrayidx90, align 1, !tbaa !104
  %conv91 = zext i8 %33 to i32
  %idx.ext = sext i32 %conv91 to i64
  %add.ptr = getelementptr inbounds i8, i8* %buffer.4, i64 %idx.ext
  br label %while.cond

while.end:                                        ; preds = %land.rhs, %while.cond
  %cmp92 = icmp sle i32 %buflen.4, 2
  br i1 %cmp92, label %do.body95, label %if.end103

do.body95:                                        ; preds = %while.end
  %34 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and96 = and i32 %34, 2
  %tobool97 = icmp ne i32 %and96, 0
  br i1 %tobool97, label %if.then98, label %error

if.then98:                                        ; preds = %do.body95
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i32 0, i32 0))
  br label %error

if.end103:                                        ; preds = %while.end
  %arrayidx104 = getelementptr inbounds i8, i8* %buffer.4, i64 2
  %35 = load i8, i8* %arrayidx104, align 1, !tbaa !104
  %conv105 = zext i8 %35 to i32
  switch i32 %conv105, label %do.body108 [
    i32 2, label %sw.bb
    i32 1, label %sw.epilog
  ]

sw.bb:                                            ; preds = %if.end103
  br label %sw.epilog

do.body108:                                       ; preds = %if.end103
  %36 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and109 = and i32 %36, 2
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %if.then111, label %error

if.then111:                                       ; preds = %do.body108
  %udev112 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %37 = load %struct.usb_device*, %struct.usb_device** %udev112, align 8, !tbaa !11
  %devnum113 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 0
  %38 = load i32, i32* %devnum113, align 8, !tbaa !149
  %desc114 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber115 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc114, i32 0, i32 2
  %39 = load i8, i8* %bInterfaceNumber115, align 2, !tbaa !48
  %conv116 = zext i8 %39 to i32
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.40, i32 0, i32 0), i32 %38, i32 %conv116)
  br label %error

sw.epilog:                                        ; preds = %sw.bb, %if.end103
  %.sink = phi i32 [ 2, %sw.bb ], [ 1, %if.end103 ]
  %size.0 = phi i32 [ 9, %sw.bb ], [ 13, %if.end103 ]
  %type107 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 9
  store i32 %.sink, i32* %type107, align 8, !tbaa !124
  %cmp121 = icmp sge i32 %buflen.4, 4
  br i1 %cmp121, label %cond.true, label %cond.end

cond.true:                                        ; preds = %sw.epilog
  %arrayidx123 = getelementptr inbounds i8, i8* %buffer.4, i64 3
  %40 = load i8, i8* %arrayidx123, align 1, !tbaa !104
  %conv124 = zext i8 %40 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.epilog
  %cond = phi i32 [ %conv124, %cond.true ], [ 0, %sw.epilog ]
  %cmp125 = icmp uge i32 %buflen.4, %size.0
  br i1 %cmp125, label %cond.true127, label %cond.end133

cond.true127:                                     ; preds = %cond.end
  %sub128 = sub i32 %size.0, 1
  %idxprom129 = zext i32 %sub128 to i64
  %arrayidx130 = getelementptr inbounds i8, i8* %buffer.4, i64 %idxprom129
  %41 = load i8, i8* %arrayidx130, align 1, !tbaa !104
  %conv131 = zext i8 %41 to i32
  br label %cond.end133

cond.end133:                                      ; preds = %cond.true127, %cond.end
  %cond134 = phi i32 [ %conv131, %cond.true127 ], [ 0, %cond.end ]
  %mul = mul i32 %cond, %cond134
  %add = add i32 %size.0, %mul
  %cmp135 = icmp ult i32 %buflen.4, %add
  br i1 %cmp135, label %do.body138, label %if.end151

do.body138:                                       ; preds = %cond.end133
  %42 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and139 = and i32 %42, 2
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %if.then141, label %error

if.then141:                                       ; preds = %do.body138
  %udev142 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %43 = load %struct.usb_device*, %struct.usb_device** %udev142, align 8, !tbaa !11
  %devnum143 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %43, i32 0, i32 0
  %44 = load i32, i32* %devnum143, align 8, !tbaa !149
  %desc144 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber145 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc144, i32 0, i32 2
  %45 = load i8, i8* %bInterfaceNumber145, align 2, !tbaa !48
  %conv146 = zext i8 %45 to i32
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.41, i32 0, i32 0), i32 %44, i32 %conv146)
  br label %error

if.end151:                                        ; preds = %cond.end133
  %conv152 = trunc i32 %cond to i8
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bNumFormats = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 0
  store i8 %conv152, i8* %bNumFormats, align 8, !tbaa !156
  %arrayidx153 = getelementptr inbounds i8, i8* %buffer.4, i64 6
  %46 = load i8, i8* %arrayidx153, align 1, !tbaa !104
  %header154 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bEndpointAddress = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header154, i32 0, i32 1
  store i8 %46, i8* %bEndpointAddress, align 1, !tbaa !157
  %arrayidx155 = getelementptr inbounds i8, i8* %buffer.4, i64 2
  %47 = load i8, i8* %arrayidx155, align 1, !tbaa !104
  %conv156 = zext i8 %47 to i32
  %cmp157 = icmp eq i32 %conv156, 1
  %arrayidx160 = getelementptr inbounds i8, i8* %buffer.4, i64 7
  %48 = load i8, i8* %arrayidx160, align 1, !tbaa !104
  %header161 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  br i1 %cmp157, label %if.then159, label %if.else

if.then159:                                       ; preds = %if.end151
  %bmInfo = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header161, i32 0, i32 5
  store i8 %48, i8* %bmInfo, align 8, !tbaa !158
  %arrayidx162 = getelementptr inbounds i8, i8* %buffer.4, i64 8
  %49 = load i8, i8* %arrayidx162, align 1, !tbaa !104
  %header163 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTerminalLink = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header163, i32 0, i32 2
  store i8 %49, i8* %bTerminalLink, align 2, !tbaa !123
  %arrayidx164 = getelementptr inbounds i8, i8* %buffer.4, i64 9
  %50 = load i8, i8* %arrayidx164, align 1, !tbaa !104
  %header165 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bStillCaptureMethod = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header165, i32 0, i32 6
  store i8 %50, i8* %bStillCaptureMethod, align 1, !tbaa !159
  %arrayidx166 = getelementptr inbounds i8, i8* %buffer.4, i64 10
  %51 = load i8, i8* %arrayidx166, align 1, !tbaa !104
  %header167 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTriggerSupport = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header167, i32 0, i32 7
  store i8 %51, i8* %bTriggerSupport, align 2, !tbaa !160
  %arrayidx168 = getelementptr inbounds i8, i8* %buffer.4, i64 11
  %52 = load i8, i8* %arrayidx168, align 1, !tbaa !104
  %header169 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTriggerUsage = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header169, i32 0, i32 8
  store i8 %52, i8* %bTriggerUsage, align 1, !tbaa !161
  br label %if.end173

if.else:                                          ; preds = %if.end151
  %bTerminalLink172 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header161, i32 0, i32 2
  store i8 %48, i8* %bTerminalLink172, align 2, !tbaa !123
  br label %if.end173

if.end173:                                        ; preds = %if.else, %if.then159
  %conv174 = trunc i32 %cond134 to i8
  %header175 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bControlSize = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header175, i32 0, i32 3
  store i8 %conv174, i8* %bControlSize, align 1, !tbaa !162
  %idxprom176 = zext i32 %size.0 to i64
  %arrayidx177 = getelementptr inbounds i8, i8* %buffer.4, i64 %idxprom176
  %mul178 = mul i32 %cond, %cond134
  %conv179 = zext i32 %mul178 to i64
  %call180 = call i8* @kmemdup(i8* %arrayidx177, i64 %conv179, i32 20971712)
  %header181 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header181, i32 0, i32 4
  store i8* %call180, i8** %bmaControls, align 8, !tbaa !101
  %header182 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls183 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header182, i32 0, i32 4
  %53 = load i8*, i8** %bmaControls183, align 8, !tbaa !101
  %cmp184 = icmp eq i8* %53, null
  br i1 %cmp184, label %error, label %if.end187

if.end187:                                        ; preds = %if.end173
  %arrayidx188 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %54 = load i8, i8* %arrayidx188, align 1, !tbaa !104
  %conv189 = zext i8 %54 to i32
  %sub190 = sub nsw i32 %buflen.4, %conv189
  %arrayidx191 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %55 = load i8, i8* %arrayidx191, align 1, !tbaa !104
  %conv192 = zext i8 %55 to i32
  %idx.ext193 = sext i32 %conv192 to i64
  %add.ptr194 = getelementptr inbounds i8, i8* %buffer.4, i64 %idx.ext193
  br label %while.cond195

while.cond195:                                    ; preds = %sw.epilog261, %if.end187
  %nintervals.0 = phi i32 [ 0, %if.end187 ], [ %nintervals.3, %sw.epilog261 ]
  %nframes.0 = phi i32 [ 0, %if.end187 ], [ %nframes.1, %sw.epilog261 ]
  %nformats.0 = phi i32 [ 0, %if.end187 ], [ %nformats.1, %sw.epilog261 ]
  %_buflen.0 = phi i32 [ %sub190, %if.end187 ], [ %sub264, %sw.epilog261 ]
  %_buffer.0 = phi i8* [ %add.ptr194, %if.end187 ], [ %add.ptr268, %sw.epilog261 ]
  %cmp196 = icmp sgt i32 %_buflen.0, 2
  br i1 %cmp196, label %land.rhs198, label %while.end269

land.rhs198:                                      ; preds = %while.cond195
  %arrayidx199 = getelementptr inbounds i8, i8* %_buffer.0, i64 1
  %56 = load i8, i8* %arrayidx199, align 1, !tbaa !104
  %conv200 = zext i8 %56 to i32
  %cmp201 = icmp eq i32 %conv200, 36
  br i1 %cmp201, label %while.body204, label %while.end269

while.body204:                                    ; preds = %land.rhs198
  %arrayidx205 = getelementptr inbounds i8, i8* %_buffer.0, i64 2
  %57 = load i8, i8* %arrayidx205, align 1, !tbaa !104
  %conv206 = zext i8 %57 to i32
  switch i32 %conv206, label %sw.epilog261 [
    i32 4, label %sw.bb207
    i32 6, label %sw.bb207
    i32 16, label %sw.bb207
    i32 12, label %sw.bb209
    i32 10, label %do.body214
    i32 18, label %do.body214
    i32 5, label %sw.bb229
    i32 7, label %sw.bb229
    i32 17, label %sw.bb245
  ]

sw.bb207:                                         ; preds = %while.body204, %while.body204, %while.body204
  %inc208 = add i32 %nformats.0, 1
  br label %sw.epilog261

sw.bb209:                                         ; preds = %while.body204
  %inc210 = add i32 %nformats.0, 1
  %inc211 = add i32 %nframes.0, 1
  %inc212 = add i32 %nintervals.0, 1
  br label %sw.epilog261

do.body214:                                       ; preds = %while.body204, %while.body204
  %58 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and215 = and i32 %58, 2
  %tobool216 = icmp ne i32 %and215, 0
  br i1 %tobool216, label %if.then217, label %sw.epilog261

if.then217:                                       ; preds = %do.body214
  %udev218 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %59 = load %struct.usb_device*, %struct.usb_device** %udev218, align 8, !tbaa !11
  %devnum219 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %59, i32 0, i32 0
  %60 = load i32, i32* %devnum219, align 8, !tbaa !149
  %desc220 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber221 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc220, i32 0, i32 2
  %61 = load i8, i8* %bInterfaceNumber221, align 2, !tbaa !48
  %conv222 = zext i8 %61 to i32
  %arrayidx223 = getelementptr inbounds i8, i8* %_buffer.0, i64 2
  %62 = load i8, i8* %arrayidx223, align 1, !tbaa !104
  %conv224 = zext i8 %62 to i32
  %call225 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.42, i32 0, i32 0), i32 %60, i32 %conv222, i32 %conv224)
  br label %sw.epilog261

sw.bb229:                                         ; preds = %while.body204, %while.body204
  %inc230 = add i32 %nframes.0, 1
  %cmp231 = icmp sgt i32 %_buflen.0, 25
  br i1 %cmp231, label %if.then233, label %sw.epilog261

if.then233:                                       ; preds = %sw.bb229
  %arrayidx234 = getelementptr inbounds i8, i8* %_buffer.0, i64 25
  %63 = load i8, i8* %arrayidx234, align 1, !tbaa !104
  %conv235 = zext i8 %63 to i32
  %tobool236 = icmp ne i32 %conv235, 0
  br i1 %tobool236, label %cond.true237, label %cond.end241

cond.true237:                                     ; preds = %if.then233
  %arrayidx238 = getelementptr inbounds i8, i8* %_buffer.0, i64 25
  %64 = load i8, i8* %arrayidx238, align 1, !tbaa !104
  %conv239 = zext i8 %64 to i32
  br label %cond.end241

cond.end241:                                      ; preds = %cond.true237, %if.then233
  %cond242 = phi i32 [ %conv239, %cond.true237 ], [ 3, %if.then233 ]
  %add243 = add i32 %nintervals.0, %cond242
  br label %sw.epilog261

sw.bb245:                                         ; preds = %while.body204
  %inc246 = add i32 %nframes.0, 1
  %cmp247 = icmp sgt i32 %_buflen.0, 21
  br i1 %cmp247, label %if.then249, label %sw.epilog261

if.then249:                                       ; preds = %sw.bb245
  %arrayidx250 = getelementptr inbounds i8, i8* %_buffer.0, i64 21
  %65 = load i8, i8* %arrayidx250, align 1, !tbaa !104
  %conv251 = zext i8 %65 to i32
  %tobool252 = icmp ne i32 %conv251, 0
  br i1 %tobool252, label %cond.true253, label %cond.end257

cond.true253:                                     ; preds = %if.then249
  %arrayidx254 = getelementptr inbounds i8, i8* %_buffer.0, i64 21
  %66 = load i8, i8* %arrayidx254, align 1, !tbaa !104
  %conv255 = zext i8 %66 to i32
  br label %cond.end257

cond.end257:                                      ; preds = %cond.true253, %if.then249
  %cond258 = phi i32 [ %conv255, %cond.true253 ], [ 3, %if.then249 ]
  %add259 = add i32 %nintervals.0, %cond258
  br label %sw.epilog261

sw.epilog261:                                     ; preds = %cond.end257, %sw.bb245, %cond.end241, %sw.bb229, %if.then217, %do.body214, %sw.bb209, %sw.bb207, %while.body204
  %nintervals.3 = phi i32 [ %nintervals.0, %while.body204 ], [ %inc212, %sw.bb209 ], [ %nintervals.0, %sw.bb207 ], [ %nintervals.0, %if.then217 ], [ %nintervals.0, %do.body214 ], [ %add243, %cond.end241 ], [ %nintervals.0, %sw.bb229 ], [ %add259, %cond.end257 ], [ %nintervals.0, %sw.bb245 ]
  %nframes.1 = phi i32 [ %nframes.0, %while.body204 ], [ %inc211, %sw.bb209 ], [ %nframes.0, %sw.bb207 ], [ %nframes.0, %if.then217 ], [ %nframes.0, %do.body214 ], [ %inc230, %cond.end241 ], [ %inc230, %sw.bb229 ], [ %inc246, %cond.end257 ], [ %inc246, %sw.bb245 ]
  %nformats.1 = phi i32 [ %nformats.0, %while.body204 ], [ %inc210, %sw.bb209 ], [ %inc208, %sw.bb207 ], [ %nformats.0, %if.then217 ], [ %nformats.0, %do.body214 ], [ %nformats.0, %cond.end241 ], [ %nformats.0, %sw.bb229 ], [ %nformats.0, %cond.end257 ], [ %nformats.0, %sw.bb245 ]
  %arrayidx262 = getelementptr inbounds i8, i8* %_buffer.0, i64 0
  %67 = load i8, i8* %arrayidx262, align 1, !tbaa !104
  %conv263 = zext i8 %67 to i32
  %sub264 = sub nsw i32 %_buflen.0, %conv263
  %arrayidx265 = getelementptr inbounds i8, i8* %_buffer.0, i64 0
  %68 = load i8, i8* %arrayidx265, align 1, !tbaa !104
  %conv266 = zext i8 %68 to i32
  %idx.ext267 = sext i32 %conv266 to i64
  %add.ptr268 = getelementptr inbounds i8, i8* %_buffer.0, i64 %idx.ext267
  br label %while.cond195

while.end269:                                     ; preds = %land.rhs198, %while.cond195
  %cmp270 = icmp eq i32 %nformats.0, 0
  br i1 %cmp270, label %do.body273, label %if.end286

do.body273:                                       ; preds = %while.end269
  %69 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and274 = and i32 %69, 2
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %if.then276, label %error

if.then276:                                       ; preds = %do.body273
  %udev277 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %70 = load %struct.usb_device*, %struct.usb_device** %udev277, align 8, !tbaa !11
  %devnum278 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 0
  %71 = load i32, i32* %devnum278, align 8, !tbaa !149
  %desc279 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber280 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc279, i32 0, i32 2
  %72 = load i8, i8* %bInterfaceNumber280, align 2, !tbaa !48
  %conv281 = zext i8 %72 to i32
  %call282 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.43, i32 0, i32 0), i32 %71, i32 %conv281)
  br label %error

if.end286:                                        ; preds = %while.end269
  %conv287 = zext i32 %nformats.0 to i64
  %mul288 = mul i64 %conv287, 56
  %conv289 = zext i32 %nframes.0 to i64
  %mul290 = mul i64 %conv289, 40
  %add291 = add i64 %mul288, %mul290
  %conv292 = zext i32 %nintervals.0 to i64
  %mul293 = mul i64 %conv292, 4
  %add294 = add i64 %add291, %mul293
  %conv295 = trunc i64 %add294 to i32
  %conv296 = zext i32 %conv295 to i64
  %call297 = call i8* @kzalloc(i64 %conv296, i32 20971712)
  %73 = bitcast i8* %call297 to %struct.uvc_format*
  %cmp298 = icmp eq %struct.uvc_format* %73, null
  br i1 %cmp298, label %error, label %if.end301

if.end301:                                        ; preds = %if.end286
  %idxprom302 = zext i32 %nformats.0 to i64
  %arrayidx303 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %73, i64 %idxprom302
  %74 = bitcast %struct.uvc_format* %arrayidx303 to %struct.uvc_frame*
  %idxprom304 = zext i32 %nframes.0 to i64
  %arrayidx305 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %74, i64 %idxprom304
  %75 = bitcast %struct.uvc_frame* %arrayidx305 to i32*
  store i32* %75, i32** %interval, align 8, !tbaa !74
  %format306 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 11
  store %struct.uvc_format* %73, %struct.uvc_format** %format306, align 8, !tbaa !100
  %nformats307 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 10
  store i32 %nformats.0, i32* %nformats307, align 4, !tbaa !163
  br label %while.cond308.outer

while.cond308.outer:                              ; preds = %if.end326, %if.end301
  %buflen.5.ph = phi i32 [ %sub330, %if.end326 ], [ %sub190, %if.end301 ]
  %buffer.5.ph = phi i8* [ %add.ptr332, %if.end326 ], [ %add.ptr194, %if.end301 ]
  %frame.0.ph = phi %struct.uvc_frame* [ %add.ptr329, %if.end326 ], [ %74, %if.end301 ]
  %format.0.ph = phi %struct.uvc_format* [ %incdec.ptr, %if.end326 ], [ %73, %if.end301 ]
  br label %while.cond308

while.cond308:                                    ; preds = %sw.epilog334, %while.cond308.outer
  %buflen.5 = phi i32 [ %sub337, %sw.epilog334 ], [ %buflen.5.ph, %while.cond308.outer ]
  %buffer.5 = phi i8* [ %add.ptr341, %sw.epilog334 ], [ %buffer.5.ph, %while.cond308.outer ]
  %cmp309 = icmp sgt i32 %buflen.5, 2
  br i1 %cmp309, label %land.rhs311, label %while.end342

land.rhs311:                                      ; preds = %while.cond308
  %arrayidx312 = getelementptr inbounds i8, i8* %buffer.5, i64 1
  %76 = load i8, i8* %arrayidx312, align 1, !tbaa !104
  %conv313 = zext i8 %76 to i32
  %cmp314 = icmp eq i32 %conv313, 36
  br i1 %cmp314, label %while.body317, label %while.end342

while.body317:                                    ; preds = %land.rhs311
  %arrayidx318 = getelementptr inbounds i8, i8* %buffer.5, i64 2
  %77 = load i8, i8* %arrayidx318, align 1, !tbaa !104
  %conv319 = zext i8 %77 to i32
  %78 = sub i32 %conv319, 4
  %79 = lshr i32 %78, 1
  %80 = shl i32 %78, 31
  %81 = or i32 %79, %80
  switch i32 %81, label %sw.epilog334 [
    i32 0, label %sw.bb320
    i32 1, label %sw.bb320
    i32 4, label %sw.bb320
    i32 6, label %sw.bb320
  ]

sw.bb320:                                         ; preds = %while.body317, %while.body317, %while.body317, %while.body317
  %frame321 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 0, i32 8
  store %struct.uvc_frame* %frame.0.ph, %struct.uvc_frame** %frame321, align 8, !tbaa !164
  %call322 = call i32 @uvc_parse_format(%struct.uvc_device* %dev, %struct.uvc_streaming* %17, %struct.uvc_format* %format.0.ph, i32** %interval, i8* %buffer.5, i32 %buflen.5)
  %cmp323 = icmp slt i32 %call322, 0
  br i1 %cmp323, label %error, label %if.end326

if.end326:                                        ; preds = %sw.bb320
  %nframes327 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 0, i32 7
  %82 = load i32, i32* %nframes327, align 4, !tbaa !166
  %idx.ext328 = zext i32 %82 to i64
  %add.ptr329 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0.ph, i64 %idx.ext328
  %incdec.ptr = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 1
  %sub330 = sub nsw i32 %buflen.5, %call322
  %idx.ext331 = sext i32 %call322 to i64
  %add.ptr332 = getelementptr inbounds i8, i8* %buffer.5, i64 %idx.ext331
  br label %while.cond308.outer

sw.epilog334:                                     ; preds = %while.body317
  %arrayidx335 = getelementptr inbounds i8, i8* %buffer.5, i64 0
  %83 = load i8, i8* %arrayidx335, align 1, !tbaa !104
  %conv336 = zext i8 %83 to i32
  %sub337 = sub nsw i32 %buflen.5, %conv336
  %arrayidx338 = getelementptr inbounds i8, i8* %buffer.5, i64 0
  %84 = load i8, i8* %arrayidx338, align 1, !tbaa !104
  %conv339 = zext i8 %84 to i32
  %idx.ext340 = sext i32 %conv339 to i64
  %add.ptr341 = getelementptr inbounds i8, i8* %buffer.5, i64 %idx.ext340
  br label %while.cond308

while.end342:                                     ; preds = %land.rhs311, %while.cond308
  %tobool343 = icmp ne i32 %buflen.5, 0
  br i1 %tobool343, label %do.body345, label %if.end358

do.body345:                                       ; preds = %while.end342
  %85 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and346 = and i32 %85, 2
  %tobool347 = icmp ne i32 %and346, 0
  br i1 %tobool347, label %if.then348, label %if.end358

if.then348:                                       ; preds = %do.body345
  %udev349 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %86 = load %struct.usb_device*, %struct.usb_device** %udev349, align 8, !tbaa !11
  %devnum350 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %86, i32 0, i32 0
  %87 = load i32, i32* %devnum350, align 8, !tbaa !149
  %desc351 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber352 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc351, i32 0, i32 2
  %88 = load i8, i8* %bInterfaceNumber352, align 2, !tbaa !48
  %conv353 = zext i8 %88 to i32
  %call354 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.44, i32 0, i32 0), i32 %87, i32 %conv353, i32 %buflen.5)
  br label %if.end358

if.end358:                                        ; preds = %if.then348, %do.body345, %while.end342
  br label %for.cond359

for.cond359:                                      ; preds = %for.inc392, %if.end358
  %i.1 = phi i32 [ 0, %if.end358 ], [ %inc393, %for.inc392 ]
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 2
  %89 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp360 = icmp ult i32 %i.1, %89
  br i1 %cmp360, label %for.body362, label %for.end394

for.body362:                                      ; preds = %for.cond359
  %altsetting364 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %90 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting364, align 8, !tbaa !152
  %idxprom365 = zext i32 %i.1 to i64
  %arrayidx366 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %90, i64 %idxprom365
  %header367 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bEndpointAddress368 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header367, i32 0, i32 1
  %91 = load i8, i8* %bEndpointAddress368, align 1, !tbaa !157
  %call369 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx366, i8 zeroext %91)
  %cmp370 = icmp eq %struct.usb_host_endpoint* %call369, null
  br i1 %cmp370, label %for.inc392, label %if.end373

if.end373:                                        ; preds = %for.body362
  %desc374 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %call369, i32 0, i32 0
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc374, i32 0, i32 4
  %92 = load i16, i16* %wMaxPacketSize, align 4, !tbaa !168
  %conv375 = zext i16 %92 to i32
  %and376 = and i32 %conv375, 2047
  %conv377 = zext i16 %92 to i32
  %shr = ashr i32 %conv377, 11
  %and378 = and i32 %shr, 3
  %add379 = add nsw i32 1, %and378
  %mul380 = mul nsw i32 %and376, %add379
  %conv381 = trunc i32 %mul380 to i16
  %conv382 = zext i16 %conv381 to i32
  %maxpsize = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 7
  %93 = load i16, i16* %maxpsize, align 4, !tbaa !169
  %conv383 = zext i16 %93 to i32
  %cmp384 = icmp sgt i32 %conv382, %conv383
  br i1 %cmp384, label %if.then386, label %for.inc392

if.then386:                                       ; preds = %if.end373
  %maxpsize387 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 7
  store i16 %conv381, i16* %maxpsize387, align 4, !tbaa !169
  br label %for.inc392

for.inc392:                                       ; preds = %if.then386, %if.end373, %for.body362
  %inc393 = add i32 %i.1, 1
  br label %for.cond359

for.end394:                                       ; preds = %for.cond359
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 0
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %streams)
  br label %cleanup398

error:                                            ; preds = %sw.bb320, %if.end286, %if.then276, %do.body273, %if.end173, %if.then141, %do.body138, %if.then111, %do.body108, %if.then98, %do.body95
  %ret.0 = phi i32 [ -22, %if.then98 ], [ -22, %do.body95 ], [ -22, %if.then111 ], [ -22, %do.body108 ], [ -22, %if.then141 ], [ -22, %do.body138 ], [ -12, %if.end173 ], [ -22, %if.then276 ], [ -22, %do.body273 ], [ -12, %if.end286 ], [ %call322, %sw.bb320 ]
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf)
  call void @usb_put_intf(%struct.usb_interface* %intf)
  %format395 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 11
  %94 = load %struct.uvc_format*, %struct.uvc_format** %format395, align 8, !tbaa !100
  %95 = bitcast %struct.uvc_format* %94 to i8*
  call void @kfree(i8* %95)
  %header396 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls397 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header396, i32 0, i32 4
  %96 = load i8*, i8** %bmaControls397, align 8, !tbaa !101
  call void @kfree(i8* %96)
  %97 = bitcast %struct.uvc_streaming* %17 to i8*
  call void @kfree(i8* %97)
  br label %cleanup398

cleanup398:                                       ; preds = %error, %for.end394, %if.then30, %if.then14, %do.body11, %if.then2, %do.body
  %retval.0 = phi i32 [ -22, %if.then30 ], [ %ret.0, %error ], [ 0, %for.end394 ], [ -22, %if.then2 ], [ -22, %do.body ], [ -22, %if.then14 ], [ -22, %do.body11 ]
  %98 = bitcast i32** %interval to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %98) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %type, i8 zeroext %id, i32 %num_pads, i32 %extra_size) #0 {
entry:
  %add = add i32 %extra_size, 55
  %and = and i32 %add, -56
  %conv = zext i16 %type to i32
  %and1 = and i32 %conv, 32768
  %tobool = icmp ne i32 %and1, 0
  %sub = sub i32 %num_pads, 1
  %cond = select i1 %tobool, i32 %num_pads, i32 %sub
  %conv2 = zext i32 %and to i64
  %add3 = add i64 512, %conv2
  %conv4 = zext i32 %num_pads to i64
  %mul = mul i64 56, %conv4
  %add5 = add i64 %add3, %mul
  %conv6 = zext i32 %cond to i64
  %add7 = add i64 %add5, %conv6
  %conv8 = trunc i64 %add7 to i32
  %conv9 = zext i32 %conv8 to i64
  %call = call i8* @kzalloc(i64 %conv9, i32 20971712)
  %0 = bitcast i8* %call to %struct.uvc_entity*
  %cmp = icmp eq %struct.uvc_entity* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 3
  store i8 %id, i8* %id11, align 4, !tbaa !120
  %type12 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  store i16 %type, i16* %type12, align 2, !tbaa !114
  %num_links = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 9
  store i32 0, i32* %num_links, align 4, !tbaa !170
  %num_pads13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 8
  store i32 %num_pads, i32* %num_pads13, align 8, !tbaa !137
  %add.ptr = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i64 1
  %1 = bitcast %struct.uvc_entity* %add.ptr to i8*
  %idx.ext = zext i32 %and to i64
  %add.ptr14 = getelementptr i8, i8* %1, i64 %idx.ext
  %2 = bitcast i8* %add.ptr14 to %struct.media_pad*
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  store %struct.media_pad* %2, %struct.media_pad** %pads, align 8, !tbaa !171
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ]
  %cmp15 = icmp ult i32 %i.0, %cond
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %pads17 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %3 = load %struct.media_pad*, %struct.media_pad** %pads17, align 8, !tbaa !171
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.media_pad, %struct.media_pad* %3, i64 %idxprom
  %flags = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx, i32 0, i32 3
  store i64 1, i64* %flags, align 8, !tbaa !172
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %type18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %4 = load i16, i16* %type18, align 2, !tbaa !114
  %conv19 = zext i16 %4 to i32
  %and20 = and i32 %conv19, 65280
  %cmp21 = icmp ne i32 %and20, 0
  br i1 %cmp21, label %land.lhs.true, label %if.then28

land.lhs.true:                                    ; preds = %for.end
  %type23 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %5 = load i16, i16* %type23, align 2, !tbaa !114
  %conv24 = zext i16 %5 to i32
  %and25 = and i32 %conv24, 32768
  %cmp26 = icmp eq i32 %and25, 32768
  br i1 %cmp26, label %if.end34, label %if.then28

if.then28:                                        ; preds = %land.lhs.true, %for.end
  %pads29 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %6 = load %struct.media_pad*, %struct.media_pad** %pads29, align 8, !tbaa !171
  %sub30 = sub i32 %num_pads, 1
  %idxprom31 = zext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %6, i64 %idxprom31
  %flags33 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx32, i32 0, i32 3
  store i64 2, i64* %flags33, align 8, !tbaa !172
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %land.lhs.true
  %conv35 = trunc i32 %cond to i8
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  store i8 %conv35, i8* %bNrInPins, align 8, !tbaa !139
  %pads36 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %7 = load %struct.media_pad*, %struct.media_pad** %pads36, align 8, !tbaa !171
  %idxprom37 = zext i32 %num_pads to i64
  %arrayidx38 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %7, i64 %idxprom37
  %8 = bitcast %struct.media_pad* %arrayidx38 to i8*
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  store i8* %8, i8** %baSourceID, align 8, !tbaa !138
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %entry
  %retval.0 = phi %struct.uvc_entity* [ %0, %if.end34 ], [ null, %entry ]
  ret %struct.uvc_entity* %retval.0
}

declare i8* @__memcpy(i8*, i8*, i64) #2

declare i32 @usb_string(%struct.usb_device*, i32, i8*, i64) #2

declare i32 @usb_driver_claim_interface(%struct.usb_driver*, %struct.usb_interface*, i8*) #2

declare i8* @kmemdup(i8*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_format(%struct.uvc_device* %dev, %struct.uvc_streaming* %streaming, %struct.uvc_format* %format, i32** %intervals, i8* %buffer, i32 %buflen) #0 {
entry:
  %__UNIQUE_ID_min1_22 = alloca i32, align 4
  %__UNIQUE_ID_min2_23 = alloca i32, align 4
  %__UNIQUE_ID_max1_20 = alloca i32, align 4
  %__UNIQUE_ID_max2_21 = alloca i32, align 4
  %intf1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %streaming, i32 0, i32 5
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf1, align 8, !tbaa !75
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !32
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 2
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %type = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 0
  store i8 %2, i8* %type, align 8, !tbaa !174
  %arrayidx2 = getelementptr inbounds i8, i8* %buffer, i64 3
  %3 = load i8, i8* %arrayidx2, align 1, !tbaa !104
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 1
  store i8 %3, i8* %index, align 1, !tbaa !175
  %arrayidx3 = getelementptr inbounds i8, i8* %buffer, i64 2
  %4 = load i8, i8* %arrayidx3, align 1, !tbaa !104
  %conv = zext i8 %4 to i32
  %5 = sub i32 %conv, 4
  %6 = lshr i32 %5, 1
  %7 = shl i32 %5, 31
  %8 = or i32 %6, %7
  switch i32 %8, label %do.body144 [
    i32 0, label %sw.bb
    i32 6, label %sw.bb
    i32 1, label %sw.bb54
    i32 4, label %sw.bb78
  ]

sw.bb:                                            ; preds = %entry, %entry
  %arrayidx4 = getelementptr inbounds i8, i8* %buffer, i64 2
  %9 = load i8, i8* %arrayidx4, align 1, !tbaa !104
  %conv5 = zext i8 %9 to i32
  %cmp = icmp eq i32 %conv5, 4
  %10 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 27, i32 28
  %cmp7 = icmp ult i32 %buflen, %cond
  br i1 %cmp7, label %do.body, label %if.end11

do.body:                                          ; preds = %sw.bb
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %11, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then9, label %cleanup

if.then9:                                         ; preds = %do.body
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %12 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 0
  %13 = load i32, i32* %devnum, align 8, !tbaa !149
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %14 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !48
  %conv10 = zext i8 %14 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %13, i32 %conv10)
  br label %cleanup

if.end11:                                         ; preds = %sw.bb
  %arrayidx12 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call13 = call %struct.uvc_format_desc* @uvc_format_by_guid(i8* %arrayidx12)
  %cmp14 = icmp ne %struct.uvc_format_desc* %call13, null
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end11
  %name = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name17 = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %call13, i32 0, i32 0
  %15 = load i8*, i8** %name17, align 8, !tbaa !176
  %call18 = call i64 @strlcpy(i8* %arraydecay, i8* %15, i64 32)
  %fcc = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %call13, i32 0, i32 2
  %16 = load i32, i32* %fcc, align 8, !tbaa !178
  br label %if.end27

if.else:                                          ; preds = %if.end11
  %arrayidx20 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i32 0, i32 0), i8* %arrayidx20)
  %name22 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %name22, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay23, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i8* %arrayidx24)
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then16
  %.sink = phi i32 [ 0, %if.else ], [ %16, %if.then16 ]
  %fcc26 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 %.sink, i32* %fcc26, align 4, !tbaa !179
  %arrayidx28 = getelementptr inbounds i8, i8* %buffer, i64 21
  %17 = load i8, i8* %arrayidx28, align 1, !tbaa !104
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 %17, i8* %bpp, align 2, !tbaa !180
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %18 = load i32, i32* %quirks, align 8, !tbaa !53
  %and29 = and i32 %18, 2048
  %tobool30 = icmp ne i32 %and29, 0
  br i1 %tobool30, label %if.then31, label %if.end42

if.then31:                                        ; preds = %if.end27
  %fcc32 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  %19 = load i32, i32* %fcc32, align 4, !tbaa !179
  %cmp33 = icmp eq i32 %19, 1448695129
  br i1 %cmp33, label %if.then35, label %if.end42

if.then35:                                        ; preds = %if.then31
  %name36 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay37 = getelementptr inbounds [32 x i8], [32 x i8]* %name36, i32 0, i32 0
  %call38 = call i64 @strlcpy(i8* %arraydecay37, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.48, i32 0, i32 0), i64 32)
  %fcc39 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 1497715271, i32* %fcc39, align 4, !tbaa !179
  %bpp40 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 8, i8* %bpp40, align 2, !tbaa !180
  br label %if.end42

if.end42:                                         ; preds = %if.then35, %if.then31, %if.end27
  %width_multiplier.1 = phi i32 [ 1, %if.end27 ], [ 2, %if.then35 ], [ 1, %if.then31 ]
  %arrayidx43 = getelementptr inbounds i8, i8* %buffer, i64 2
  %20 = load i8, i8* %arrayidx43, align 1, !tbaa !104
  %conv44 = zext i8 %20 to i32
  %cmp45 = icmp eq i32 %conv44, 4
  br i1 %cmp45, label %do.body160, label %if.else48

if.else48:                                        ; preds = %if.end42
  %arrayidx49 = getelementptr inbounds i8, i8* %buffer, i64 27
  %21 = load i8, i8* %arrayidx49, align 1, !tbaa !104
  %tobool50 = icmp ne i8 %21, 0
  br i1 %tobool50, label %if.then51, label %do.body160

if.then51:                                        ; preds = %if.else48
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 1, i32* %flags, align 8, !tbaa !181
  br label %do.body160

sw.bb54:                                          ; preds = %entry
  %cmp55 = icmp slt i32 %buflen, 11
  br i1 %cmp55, label %do.body58, label %if.end71

do.body58:                                        ; preds = %sw.bb54
  %22 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and59 = and i32 %22, 2
  %tobool60 = icmp ne i32 %and59, 0
  br i1 %tobool60, label %if.then61, label %cleanup

if.then61:                                        ; preds = %do.body58
  %udev62 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %23 = load %struct.usb_device*, %struct.usb_device** %udev62, align 8, !tbaa !11
  %devnum63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %23, i32 0, i32 0
  %24 = load i32, i32* %devnum63, align 8, !tbaa !149
  %desc64 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber65 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc64, i32 0, i32 2
  %25 = load i8, i8* %bInterfaceNumber65, align 2, !tbaa !48
  %conv66 = zext i8 %25 to i32
  %call67 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %24, i32 %conv66)
  br label %cleanup

if.end71:                                         ; preds = %sw.bb54
  %name72 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay73 = getelementptr inbounds [32 x i8], [32 x i8]* %name72, i32 0, i32 0
  %call74 = call i64 @strlcpy(i8* %arraydecay73, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i64 32)
  %fcc75 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 1196444237, i32* %fcc75, align 4, !tbaa !179
  %flags76 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 1, i32* %flags76, align 8, !tbaa !181
  %bpp77 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 0, i8* %bpp77, align 2, !tbaa !180
  br label %do.body160

sw.bb78:                                          ; preds = %entry
  %cmp79 = icmp slt i32 %buflen, 9
  br i1 %cmp79, label %do.body82, label %if.end95

do.body82:                                        ; preds = %sw.bb78
  %26 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and83 = and i32 %26, 2
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.then85, label %cleanup

if.then85:                                        ; preds = %do.body82
  %udev86 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %27 = load %struct.usb_device*, %struct.usb_device** %udev86, align 8, !tbaa !11
  %devnum87 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %27, i32 0, i32 0
  %28 = load i32, i32* %devnum87, align 8, !tbaa !149
  %desc88 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber89 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc88, i32 0, i32 2
  %29 = load i8, i8* %bInterfaceNumber89, align 2, !tbaa !48
  %conv90 = zext i8 %29 to i32
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %28, i32 %conv90)
  br label %cleanup

if.end95:                                         ; preds = %sw.bb78
  %arrayidx96 = getelementptr inbounds i8, i8* %buffer, i64 8
  %30 = load i8, i8* %arrayidx96, align 1, !tbaa !104
  %conv97 = zext i8 %30 to i32
  %and98 = and i32 %conv97, 127
  switch i32 %and98, label %do.body111 [
    i32 0, label %sw.bb99
    i32 1, label %sw.bb103
    i32 2, label %sw.bb107
  ]

sw.bb99:                                          ; preds = %if.end95
  %name100 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay101 = getelementptr inbounds [32 x i8], [32 x i8]* %name100, i32 0, i32 0
  %call102 = call i64 @strlcpy(i8* %arraydecay101, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.50, i32 0, i32 0), i64 32)
  br label %sw.epilog

sw.bb103:                                         ; preds = %if.end95
  %name104 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay105 = getelementptr inbounds [32 x i8], [32 x i8]* %name104, i32 0, i32 0
  %call106 = call i64 @strlcpy(i8* %arraydecay105, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.51, i32 0, i32 0), i64 32)
  br label %sw.epilog

sw.bb107:                                         ; preds = %if.end95
  %name108 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay109 = getelementptr inbounds [32 x i8], [32 x i8]* %name108, i32 0, i32 0
  %call110 = call i64 @strlcpy(i8* %arraydecay109, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.52, i32 0, i32 0), i64 32)
  br label %sw.epilog

do.body111:                                       ; preds = %if.end95
  %31 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and112 = and i32 %31, 2
  %tobool113 = icmp ne i32 %and112, 0
  br i1 %tobool113, label %if.then114, label %cleanup

if.then114:                                       ; preds = %do.body111
  %udev115 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %32 = load %struct.usb_device*, %struct.usb_device** %udev115, align 8, !tbaa !11
  %devnum116 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %32, i32 0, i32 0
  %33 = load i32, i32* %devnum116, align 8, !tbaa !149
  %desc117 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber118 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc117, i32 0, i32 2
  %34 = load i8, i8* %bInterfaceNumber118, align 2, !tbaa !48
  %conv119 = zext i8 %34 to i32
  %arrayidx120 = getelementptr inbounds i8, i8* %buffer, i64 8
  %35 = load i8, i8* %arrayidx120, align 1, !tbaa !104
  %conv121 = zext i8 %35 to i32
  %call122 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.53, i32 0, i32 0), i32 %33, i32 %conv119, i32 %conv121)
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb107, %sw.bb103, %sw.bb99
  %name126 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay127 = getelementptr inbounds [32 x i8], [32 x i8]* %name126, i32 0, i32 0
  %arrayidx128 = getelementptr inbounds i8, i8* %buffer, i64 8
  %36 = load i8, i8* %arrayidx128, align 1, !tbaa !104
  %conv129 = zext i8 %36 to i32
  %and130 = and i32 %conv129, 128
  %tobool131 = icmp ne i32 %and130, 0
  %37 = zext i1 %tobool131 to i64
  %cond132 = select i1 %tobool131, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.55, i32 0, i32 0)
  %call133 = call i64 @strlcat(i8* %arraydecay127, i8* %cond132, i64 32)
  %fcc134 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 1685288548, i32* %fcc134, align 4, !tbaa !179
  %flags135 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 3, i32* %flags135, align 8, !tbaa !181
  %bpp136 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 0, i8* %bpp136, align 2, !tbaa !180
  %frame137 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %38 = load %struct.uvc_frame*, %struct.uvc_frame** %frame137, align 8, !tbaa !164
  %arrayidx138 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %38, i64 0
  %frame139 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %39 = load %struct.uvc_frame*, %struct.uvc_frame** %frame139, align 8, !tbaa !164
  %arrayidx140 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %39, i64 0
  %40 = bitcast %struct.uvc_frame* %arrayidx140 to i8*
  %call141 = call i8* @__memset(i8* %40, i32 0, i64 40)
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx138, i32 0, i32 7
  store i8 1, i8* %bFrameIntervalType, align 4, !tbaa !182
  %dwDefaultFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx138, i32 0, i32 8
  store i32 1, i32* %dwDefaultFrameInterval, align 8, !tbaa !184
  %41 = load i32*, i32** %intervals, align 8, !tbaa !74
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx138, i32 0, i32 9
  store i32* %41, i32** %dwFrameInterval, align 8, !tbaa !185
  %42 = load i32*, i32** %intervals, align 8, !tbaa !74
  %incdec.ptr = getelementptr inbounds i32, i32* %42, i32 1
  store i32* %incdec.ptr, i32** %intervals, align 8, !tbaa !74
  store i32 1, i32* %42, align 4, !tbaa !9
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  store i32 1, i32* %nframes, align 4, !tbaa !166
  br label %do.body160

do.body144:                                       ; preds = %entry
  %43 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and145 = and i32 %43, 2
  %tobool146 = icmp ne i32 %and145, 0
  br i1 %tobool146, label %if.then147, label %cleanup

if.then147:                                       ; preds = %do.body144
  %udev148 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %44 = load %struct.usb_device*, %struct.usb_device** %udev148, align 8, !tbaa !11
  %devnum149 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %44, i32 0, i32 0
  %45 = load i32, i32* %devnum149, align 8, !tbaa !149
  %desc150 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber151 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc150, i32 0, i32 2
  %46 = load i8, i8* %bInterfaceNumber151, align 2, !tbaa !48
  %conv152 = zext i8 %46 to i32
  %arrayidx153 = getelementptr inbounds i8, i8* %buffer, i64 2
  %47 = load i8, i8* %arrayidx153, align 1, !tbaa !104
  %conv154 = zext i8 %47 to i32
  %call155 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.56, i32 0, i32 0), i32 %45, i32 %conv152, i32 %conv154)
  br label %cleanup

do.body160:                                       ; preds = %sw.epilog, %if.end71, %if.then51, %if.else48, %if.end42
  %width_multiplier.2 = phi i32 [ 1, %sw.epilog ], [ 1, %if.end71 ], [ %width_multiplier.1, %if.else48 ], [ %width_multiplier.1, %if.then51 ], [ %width_multiplier.1, %if.end42 ]
  %ftype.1 = phi i8 [ 0, %sw.epilog ], [ 7, %if.end71 ], [ 5, %if.end42 ], [ 17, %if.then51 ], [ 17, %if.else48 ]
  %48 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and161 = and i32 %48, 2
  %tobool162 = icmp ne i32 %and161, 0
  br i1 %tobool162, label %if.then163, label %do.end169

if.then163:                                       ; preds = %do.body160
  %name164 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay165 = getelementptr inbounds [32 x i8], [32 x i8]* %name164, i32 0, i32 0
  %call166 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57, i32 0, i32 0), i8* %arraydecay165)
  br label %do.end169

do.end169:                                        ; preds = %if.then163, %do.body160
  br label %while.cond

while.cond:                                       ; preds = %do.end342, %do.end169
  %add.ptr351.sink3 = phi i8* [ %add.ptr351, %do.end342 ], [ %buffer, %do.end169 ]
  %buflen.addr.0.sink = phi i32 [ %sub347, %do.end342 ], [ %buflen, %do.end169 ]
  %arrayidx345 = getelementptr inbounds i8, i8* %add.ptr351.sink3, i64 0
  %49 = load i8, i8* %arrayidx345, align 1, !tbaa !104
  %conv346 = zext i8 %49 to i32
  %sub347 = sub nsw i32 %buflen.addr.0.sink, %conv346
  %arrayidx348 = getelementptr inbounds i8, i8* %add.ptr351.sink3, i64 0
  %50 = load i8, i8* %arrayidx348, align 1, !tbaa !104
  %conv349 = zext i8 %50 to i32
  %idx.ext350 = sext i32 %conv349 to i64
  %add.ptr351 = getelementptr inbounds i8, i8* %add.ptr351.sink3, i64 %idx.ext350
  %cmp174 = icmp sgt i32 %sub347, 2
  br i1 %cmp174, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx176 = getelementptr inbounds i8, i8* %add.ptr351, i64 1
  %51 = load i8, i8* %arrayidx176, align 1, !tbaa !104
  %conv177 = zext i8 %51 to i32
  %cmp178 = icmp eq i32 %conv177, 36
  br i1 %cmp178, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true
  %arrayidx180 = getelementptr inbounds i8, i8* %add.ptr351, i64 2
  %52 = load i8, i8* %arrayidx180, align 1, !tbaa !104
  %conv181 = zext i8 %52 to i32
  %conv182 = zext i8 %ftype.1 to i32
  %cmp183 = icmp eq i32 %conv181, %conv182
  br i1 %cmp183, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %frame185 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %53 = load %struct.uvc_frame*, %struct.uvc_frame** %frame185, align 8, !tbaa !164
  %nframes186 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  %54 = load i32, i32* %nframes186, align 4, !tbaa !166
  %idxprom = zext i32 %54 to i64
  %arrayidx187 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %53, i64 %idxprom
  %conv188 = zext i8 %ftype.1 to i32
  %cmp189 = icmp ne i32 %conv188, 17
  br i1 %cmp189, label %if.then191, label %if.else197

if.then191:                                       ; preds = %while.body
  %cmp192 = icmp sgt i32 %sub347, 25
  br i1 %cmp192, label %cond.true, label %if.end206

cond.true:                                        ; preds = %if.then191
  %arrayidx194 = getelementptr inbounds i8, i8* %add.ptr351, i64 25
  %55 = load i8, i8* %arrayidx194, align 1, !tbaa !104
  %conv195 = zext i8 %55 to i32
  br label %if.end206

if.else197:                                       ; preds = %while.body
  %cmp198 = icmp sgt i32 %sub347, 21
  br i1 %cmp198, label %cond.true200, label %if.end206

cond.true200:                                     ; preds = %if.else197
  %arrayidx201 = getelementptr inbounds i8, i8* %add.ptr351, i64 21
  %56 = load i8, i8* %arrayidx201, align 1, !tbaa !104
  %conv202 = zext i8 %56 to i32
  br label %if.end206

if.end206:                                        ; preds = %cond.true200, %if.else197, %cond.true, %if.then191
  %n.0 = phi i32 [ %conv195, %cond.true ], [ 0, %if.then191 ], [ %conv202, %cond.true200 ], [ 0, %if.else197 ]
  %tobool207 = icmp ne i32 %n.0, 0
  %n.0. = select i1 %tobool207, i32 %n.0, i32 3
  %mul = mul i32 4, %n.0.
  %add = add i32 26, %mul
  %cmp212 = icmp ult i32 %sub347, %add
  br i1 %cmp212, label %do.body215, label %if.end228

do.body215:                                       ; preds = %if.end206
  %57 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and216 = and i32 %57, 2
  %tobool217 = icmp ne i32 %and216, 0
  br i1 %tobool217, label %if.then218, label %cleanup

if.then218:                                       ; preds = %do.body215
  %udev219 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %58 = load %struct.usb_device*, %struct.usb_device** %udev219, align 8, !tbaa !11
  %devnum220 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %58, i32 0, i32 0
  %59 = load i32, i32* %devnum220, align 8, !tbaa !149
  %desc221 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber222 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc221, i32 0, i32 2
  %60 = load i8, i8* %bInterfaceNumber222, align 2, !tbaa !48
  %conv223 = zext i8 %60 to i32
  %call224 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.58, i32 0, i32 0), i32 %59, i32 %conv223)
  br label %cleanup

if.end228:                                        ; preds = %if.end206
  %arrayidx229 = getelementptr inbounds i8, i8* %add.ptr351, i64 3
  %61 = load i8, i8* %arrayidx229, align 1, !tbaa !104
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 0
  store i8 %61, i8* %bFrameIndex, align 8, !tbaa !186
  %arrayidx230 = getelementptr inbounds i8, i8* %add.ptr351, i64 4
  %62 = load i8, i8* %arrayidx230, align 1, !tbaa !104
  %bmCapabilities = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 1
  store i8 %62, i8* %bmCapabilities, align 1, !tbaa !187
  %arrayidx231 = getelementptr inbounds i8, i8* %add.ptr351, i64 5
  %call232 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx231)
  %conv233 = zext i16 %call232 to i32
  %mul234 = mul i32 %conv233, %width_multiplier.2
  %conv235 = trunc i32 %mul234 to i16
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 2
  store i16 %conv235, i16* %wWidth, align 2, !tbaa !188
  %arrayidx236 = getelementptr inbounds i8, i8* %add.ptr351, i64 7
  %call237 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx236)
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 3
  store i16 %call237, i16* %wHeight, align 4, !tbaa !189
  %arrayidx238 = getelementptr inbounds i8, i8* %add.ptr351, i64 9
  %call239 = call i32 @get_unaligned_le32(i8* %arrayidx238)
  %dwMinBitRate = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 4
  store i32 %call239, i32* %dwMinBitRate, align 8, !tbaa !190
  %arrayidx240 = getelementptr inbounds i8, i8* %add.ptr351, i64 13
  %call241 = call i32 @get_unaligned_le32(i8* %arrayidx240)
  %dwMaxBitRate = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 5
  store i32 %call241, i32* %dwMaxBitRate, align 4, !tbaa !191
  %conv242 = zext i8 %ftype.1 to i32
  %cmp243 = icmp ne i32 %conv242, 17
  br i1 %cmp243, label %if.then245, label %if.end260

if.then245:                                       ; preds = %if.end228
  %arrayidx246 = getelementptr inbounds i8, i8* %add.ptr351, i64 17
  %call247 = call i32 @get_unaligned_le32(i8* %arrayidx246)
  br label %if.end260

if.end260:                                        ; preds = %if.then245, %if.end228
  %.sink8 = phi i32 [ %call247, %if.then245 ], [ 0, %if.end228 ]
  %.sink7 = phi i64 [ 21, %if.then245 ], [ 17, %if.end228 ]
  %.sink6 = phi i64 [ 25, %if.then245 ], [ 21, %if.end228 ]
  %dwMaxVideoFrameBufferSize254 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 6
  store i32 %.sink8, i32* %dwMaxVideoFrameBufferSize254, align 8, !tbaa !192
  %arrayidx255 = getelementptr inbounds i8, i8* %add.ptr351, i64 %.sink7
  %call256 = call i32 @get_unaligned_le32(i8* %arrayidx255)
  %dwDefaultFrameInterval257 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  store i32 %call256, i32* %dwDefaultFrameInterval257, align 8, !tbaa !184
  %arrayidx258 = getelementptr inbounds i8, i8* %add.ptr351, i64 %.sink6
  %63 = load i8, i8* %arrayidx258, align 1, !tbaa !104
  %bFrameIntervalType259 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 7
  store i8 %63, i8* %bFrameIntervalType259, align 4, !tbaa !182
  %64 = load i32*, i32** %intervals, align 8, !tbaa !74
  %dwFrameInterval261 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 9
  store i32* %64, i32** %dwFrameInterval261, align 8, !tbaa !185
  %flags262 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  %65 = load i32, i32* %flags262, align 8, !tbaa !181
  %and263 = and i32 %65, 1
  %tobool264 = icmp ne i32 %and263, 0
  br i1 %tobool264, label %if.end275, label %if.then265

if.then265:                                       ; preds = %if.end260
  %bpp266 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  %66 = load i8, i8* %bpp266, align 2, !tbaa !180
  %conv267 = zext i8 %66 to i32
  %wWidth268 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 2
  %67 = load i16, i16* %wWidth268, align 2, !tbaa !188
  %conv269 = zext i16 %67 to i32
  %mul270 = mul nsw i32 %conv267, %conv269
  %wHeight271 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 3
  %68 = load i16, i16* %wHeight271, align 4, !tbaa !189
  %conv272 = zext i16 %68 to i32
  %mul273 = mul nsw i32 %mul270, %conv272
  %div = sdiv i32 %mul273, 8
  %dwMaxVideoFrameBufferSize274 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 6
  store i32 %div, i32* %dwMaxVideoFrameBufferSize274, align 8, !tbaa !192
  br label %if.end275

if.end275:                                        ; preds = %if.then265, %if.end260
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end275
  %i.0 = phi i32 [ 0, %if.end275 ], [ %inc, %for.body ]
  %cmp276 = icmp ult i32 %i.0, %n.0.
  br i1 %cmp276, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul278 = mul i32 4, %i.0
  %add279 = add i32 26, %mul278
  %idxprom280 = zext i32 %add279 to i64
  %arrayidx281 = getelementptr inbounds i8, i8* %add.ptr351, i64 %idxprom280
  %call282 = call i32 @get_unaligned_le32(i8* %arrayidx281)
  %tobool283 = icmp ne i32 %call282, 0
  %call282. = select i1 %tobool283, i32 %call282, i32 1
  %69 = load i32*, i32** %intervals, align 8, !tbaa !74
  %incdec.ptr288 = getelementptr inbounds i32, i32* %69, i32 1
  store i32* %incdec.ptr288, i32** %intervals, align 8, !tbaa !74
  store i32 %call282., i32* %69, align 4, !tbaa !9
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %bFrameIntervalType289 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 7
  %70 = load i8, i8* %bFrameIntervalType289, align 4, !tbaa !182
  %conv290 = zext i8 %70 to i32
  %tobool291 = icmp ne i32 %conv290, 0
  %71 = zext i1 %tobool291 to i64
  %cond292 = select i1 %tobool291, i32 1, i32 2
  %sub293 = sub i32 %n.0., %cond292
  %72 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %72) #8
  %dwFrameInterval294 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 9
  %73 = load i32*, i32** %dwFrameInterval294, align 8, !tbaa !185
  %idxprom295 = zext i32 %sub293 to i64
  %arrayidx296 = getelementptr inbounds i32, i32* %73, i64 %idxprom295
  %74 = load i32, i32* %arrayidx296, align 4, !tbaa !9
  store i32 %74, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %75 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %75) #8
  %76 = bitcast i32* %__UNIQUE_ID_max1_20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %76) #8
  %dwFrameInterval297 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 9
  %77 = load i32*, i32** %dwFrameInterval297, align 8, !tbaa !185
  %arrayidx298 = getelementptr inbounds i32, i32* %77, i64 0
  %78 = load i32, i32* %arrayidx298, align 4, !tbaa !9
  store i32 %78, i32* %__UNIQUE_ID_max1_20, align 4, !tbaa !9
  %79 = bitcast i32* %__UNIQUE_ID_max2_21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %79) #8
  %dwDefaultFrameInterval299 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  %80 = load i32, i32* %dwDefaultFrameInterval299, align 8, !tbaa !184
  store i32 %80, i32* %__UNIQUE_ID_max2_21, align 4, !tbaa !9
  %cmp300 = icmp eq i32* %__UNIQUE_ID_max1_20, %__UNIQUE_ID_max2_21
  %conv301 = zext i1 %cmp300 to i32
  %81 = load i32, i32* %__UNIQUE_ID_max1_20, align 4, !tbaa !9
  %82 = load i32, i32* %__UNIQUE_ID_max2_21, align 4, !tbaa !9
  %cmp302 = icmp ugt i32 %81, %82
  %83 = load i32, i32* %__UNIQUE_ID_max1_20, align 4
  %84 = load i32, i32* %__UNIQUE_ID_max2_21, align 4
  %cond307 = select i1 %cmp302, i32 %83, i32 %84
  %85 = bitcast i32* %__UNIQUE_ID_max2_21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %85) #8
  %86 = bitcast i32* %__UNIQUE_ID_max1_20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #8
  store i32 %cond307, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp308 = icmp eq i32* %__UNIQUE_ID_min1_22, %__UNIQUE_ID_min2_23
  %conv309 = zext i1 %cmp308 to i32
  %87 = load i32, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %88 = load i32, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp311 = icmp ult i32 %87, %88
  %89 = load i32, i32* %__UNIQUE_ID_min1_22, align 4
  %90 = load i32, i32* %__UNIQUE_ID_min2_23, align 4
  %cond316 = select i1 %cmp311, i32 %89, i32 %90
  %91 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %91) #8
  %92 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %92) #8
  %dwDefaultFrameInterval317 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  store i32 %cond316, i32* %dwDefaultFrameInterval317, align 8, !tbaa !184
  %quirks318 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %93 = load i32, i32* %quirks318, align 8, !tbaa !53
  %and319 = and i32 %93, 512
  %tobool320 = icmp ne i32 %and319, 0
  br i1 %tobool320, label %if.then321, label %do.body327

if.then321:                                       ; preds = %for.end
  %bFrameIntervalType322 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 7
  store i8 1, i8* %bFrameIntervalType322, align 4, !tbaa !182
  %dwDefaultFrameInterval323 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  %94 = load i32, i32* %dwDefaultFrameInterval323, align 8, !tbaa !184
  %dwFrameInterval324 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 9
  %95 = load i32*, i32** %dwFrameInterval324, align 8, !tbaa !185
  %arrayidx325 = getelementptr inbounds i32, i32* %95, i64 0
  store i32 %94, i32* %arrayidx325, align 4, !tbaa !9
  br label %do.body327

do.body327:                                       ; preds = %if.then321, %for.end
  %96 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and328 = and i32 %96, 2
  %tobool329 = icmp ne i32 %and328, 0
  br i1 %tobool329, label %if.then330, label %do.end342

if.then330:                                       ; preds = %do.body327
  %wWidth331 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 2
  %97 = load i16, i16* %wWidth331, align 2, !tbaa !188
  %conv332 = zext i16 %97 to i32
  %wHeight333 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 3
  %98 = load i16, i16* %wHeight333, align 4, !tbaa !189
  %conv334 = zext i16 %98 to i32
  %dwDefaultFrameInterval335 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  %99 = load i32, i32* %dwDefaultFrameInterval335, align 8, !tbaa !184
  %div336 = udiv i32 10000000, %99
  %dwDefaultFrameInterval337 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx187, i32 0, i32 8
  %100 = load i32, i32* %dwDefaultFrameInterval337, align 8, !tbaa !184
  %div338 = udiv i32 100000000, %100
  %rem = urem i32 %div338, 10
  %call339 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.59, i32 0, i32 0), i32 %conv332, i32 %conv334, i32 %div336, i32 %rem)
  br label %do.end342

do.end342:                                        ; preds = %if.then330, %do.body327
  %nframes343 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  %101 = load i32, i32* %nframes343, align 4, !tbaa !166
  %inc344 = add i32 %101, 1
  store i32 %inc344, i32* %nframes343, align 4, !tbaa !166
  br label %while.cond

while.end:                                        ; preds = %land.rhs, %land.lhs.true, %while.cond
  %cmp352 = icmp sgt i32 %sub347, 2
  br i1 %cmp352, label %land.lhs.true354, label %if.end372

land.lhs.true354:                                 ; preds = %while.end
  %arrayidx355 = getelementptr inbounds i8, i8* %add.ptr351, i64 1
  %102 = load i8, i8* %arrayidx355, align 1, !tbaa !104
  %conv356 = zext i8 %102 to i32
  %cmp357 = icmp eq i32 %conv356, 36
  br i1 %cmp357, label %land.lhs.true359, label %if.end372

land.lhs.true359:                                 ; preds = %land.lhs.true354
  %arrayidx360 = getelementptr inbounds i8, i8* %add.ptr351, i64 2
  %103 = load i8, i8* %arrayidx360, align 1, !tbaa !104
  %conv361 = zext i8 %103 to i32
  %cmp362 = icmp eq i32 %conv361, 3
  br i1 %cmp362, label %if.then364, label %if.end372

if.then364:                                       ; preds = %land.lhs.true359
  %arrayidx365 = getelementptr inbounds i8, i8* %add.ptr351, i64 0
  %104 = load i8, i8* %arrayidx365, align 1, !tbaa !104
  %conv366 = zext i8 %104 to i32
  %sub367 = sub nsw i32 %sub347, %conv366
  %arrayidx368 = getelementptr inbounds i8, i8* %add.ptr351, i64 0
  %105 = load i8, i8* %arrayidx368, align 1, !tbaa !104
  %conv369 = zext i8 %105 to i32
  %idx.ext370 = sext i32 %conv369 to i64
  %add.ptr371 = getelementptr inbounds i8, i8* %add.ptr351, i64 %idx.ext370
  br label %if.end372

if.end372:                                        ; preds = %if.then364, %land.lhs.true359, %land.lhs.true354, %while.end
  %buflen.addr.1 = phi i32 [ %sub367, %if.then364 ], [ %sub347, %land.lhs.true359 ], [ %sub347, %land.lhs.true354 ], [ %sub347, %while.end ]
  %buffer.addr.1 = phi i8* [ %add.ptr371, %if.then364 ], [ %add.ptr351, %land.lhs.true359 ], [ %add.ptr351, %land.lhs.true354 ], [ %add.ptr351, %while.end ]
  %cmp373 = icmp sgt i32 %buflen.addr.1, 2
  br i1 %cmp373, label %land.lhs.true375, label %if.end413

land.lhs.true375:                                 ; preds = %if.end372
  %arrayidx376 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 1
  %106 = load i8, i8* %arrayidx376, align 1, !tbaa !104
  %conv377 = zext i8 %106 to i32
  %cmp378 = icmp eq i32 %conv377, 36
  br i1 %cmp378, label %land.lhs.true380, label %if.end413

land.lhs.true380:                                 ; preds = %land.lhs.true375
  %arrayidx381 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 2
  %107 = load i8, i8* %arrayidx381, align 1, !tbaa !104
  %conv382 = zext i8 %107 to i32
  %cmp383 = icmp eq i32 %conv382, 13
  br i1 %cmp383, label %if.then385, label %if.end413

if.then385:                                       ; preds = %land.lhs.true380
  %cmp386 = icmp slt i32 %buflen.addr.1, 6
  br i1 %cmp386, label %do.body389, label %if.end402

do.body389:                                       ; preds = %if.then385
  %108 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and390 = and i32 %108, 2
  %tobool391 = icmp ne i32 %and390, 0
  br i1 %tobool391, label %if.then392, label %cleanup

if.then392:                                       ; preds = %do.body389
  %udev393 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %109 = load %struct.usb_device*, %struct.usb_device** %udev393, align 8, !tbaa !11
  %devnum394 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %109, i32 0, i32 0
  %110 = load i32, i32* %devnum394, align 8, !tbaa !149
  %desc395 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber396 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc395, i32 0, i32 2
  %111 = load i8, i8* %bInterfaceNumber396, align 2, !tbaa !48
  %conv397 = zext i8 %111 to i32
  %call398 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.60, i32 0, i32 0), i32 %110, i32 %conv397)
  br label %cleanup

if.end402:                                        ; preds = %if.then385
  %arrayidx403 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 3
  %112 = load i8, i8* %arrayidx403, align 1, !tbaa !104
  %call404 = call i32 @uvc_colorspace(i8 zeroext %112)
  %conv405 = trunc i32 %call404 to i8
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 3
  store i8 %conv405, i8* %colorspace, align 1, !tbaa !193
  %arrayidx406 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 0
  %113 = load i8, i8* %arrayidx406, align 1, !tbaa !104
  %conv407 = zext i8 %113 to i32
  %sub408 = sub nsw i32 %buflen.addr.1, %conv407
  %arrayidx409 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 0
  %114 = load i8, i8* %arrayidx409, align 1, !tbaa !104
  %conv410 = zext i8 %114 to i32
  %idx.ext411 = sext i32 %conv410 to i64
  %add.ptr412 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 %idx.ext411
  br label %if.end413

if.end413:                                        ; preds = %if.end402, %land.lhs.true380, %land.lhs.true375, %if.end372
  %buffer.addr.2 = phi i8* [ %add.ptr412, %if.end402 ], [ %buffer.addr.1, %land.lhs.true380 ], [ %buffer.addr.1, %land.lhs.true375 ], [ %buffer.addr.1, %if.end372 ]
  %sub.ptr.lhs.cast = ptrtoint i8* %buffer.addr.2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %buffer to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv414 = trunc i64 %sub.ptr.sub to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end413, %if.then392, %do.body389, %if.then218, %do.body215, %if.then147, %do.body144, %if.then114, %do.body111, %if.then85, %do.body82, %if.then61, %do.body58, %if.then9, %do.body
  %retval.0 = phi i32 [ %conv414, %if.end413 ], [ -22, %if.then9 ], [ -22, %do.body ], [ -22, %if.then61 ], [ -22, %do.body58 ], [ -22, %if.then85 ], [ -22, %do.body82 ], [ -22, %if.then114 ], [ -22, %do.body111 ], [ -22, %if.then147 ], [ -22, %do.body144 ], [ -22, %if.then218 ], [ -22, %do.body215 ], [ -22, %if.then392 ], [ -22, %do.body389 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %alts, i8 zeroext %epaddr) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %alts, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 4
  %0 = load i8, i8* %bNumEndpoints, align 4, !tbaa !108
  %conv = zext i8 %0 to i32
  %cmp = icmp ult i32 %i.0, %conv
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %alts, i32 0, i32 3
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !109
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i64 %idxprom
  %desc2 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc2, i32 0, i32 2
  %2 = load i8, i8* %bEndpointAddress, align 2, !tbaa !194
  %conv3 = zext i8 %2 to i32
  %conv4 = zext i8 %epaddr to i32
  %cmp5 = icmp eq i32 %conv3, %conv4
  br i1 %cmp5, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.usb_host_endpoint* [ %arrayidx, %for.body ], [ null, %for.cond ]
  ret %struct.usb_host_endpoint* %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_format_desc* @uvc_format_by_guid(i8* %guid) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 29
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [29 x %struct.uvc_format_desc], [29 x %struct.uvc_format_desc]* @uvc_fmts, i64 0, i64 %idxprom
  %guid1 = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %arrayidx, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid1, i32 0, i32 0
  %call = call i32 @memcmp(i8* %guid, i8* %arraydecay, i64 16)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %idxprom3 = zext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds [29 x %struct.uvc_format_desc], [29 x %struct.uvc_format_desc]* @uvc_fmts, i64 0, i64 %idxprom3
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then, %for.cond
  %retval.0 = phi %struct.uvc_format_desc* [ %arrayidx4, %if.then ], [ null, %for.cond ]
  ret %struct.uvc_format_desc* %retval.0
}

declare i64 @strlcat(i8*, i8*, i64) #2

declare i8* @__memset(i8*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_colorspace(i8 zeroext %primaries) #0 {
entry:
  %conv = zext i8 %primaries to i64
  %cmp = icmp ult i64 %conv, 6
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %idxprom = zext i8 %primaries to i64
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* @uvc_colorspace.colorprimaries, i64 0, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv2 = zext i8 %0 to i32
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %conv2, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__le32_to_cpup(i32* %p) #3 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @__le16_to_cpup(i16* %p) #3 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !142
  ret i16 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare noalias i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_clock_param_set(i8* %val, %struct.kernel_param* %kp) #0 {
entry:
  %call = call i32 @strncasecmp(i8* %val, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 6)
  %cmp = icmp eq i32 %call, 0
  %add.ptr = getelementptr inbounds i8, i8* %val, i64 6
  %add.ptr.val = select i1 %cmp, i8* %add.ptr, i8* %val
  %call1 = call i32 @strcasecmp(i8* %add.ptr.val, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0))
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %return.sink.split, label %if.else

if.else:                                          ; preds = %entry
  %call4 = call i32 @strcasecmp(i8* %add.ptr.val, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0))
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %return.sink.split, label %return

return.sink.split:                                ; preds = %if.else, %entry
  %.sink = phi i32 [ 0, %if.else ], [ 1, %entry ]
  store i32 %.sink, i32* @uvc_clock_param, align 4, !tbaa !9
  br label %return

return:                                           ; preds = %return.sink.split, %if.else
  %retval.0 = phi i32 [ -22, %if.else ], [ 0, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_clock_param_get(i8* %buffer, %struct.kernel_param* %kp) #0 {
entry:
  %0 = load i32, i32* @uvc_clock_param, align 4, !tbaa !9
  %cmp = icmp eq i32 %0, 1
  %.sink = select i1 %cmp, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0)
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %buffer, i8* %.sink)
  ret i32 %call1
}

declare i32 @strncasecmp(i8*, i8*, i64) #2

declare i32 @strcasecmp(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define void @uvc_simplify_fraction(i32* %numerator, i32* %denominator, i32 %n_terms, i32 %threshold) #0 {
entry:
  %conv = zext i32 %n_terms to i64
  %mul = mul i64 %conv, 4
  %call = call i8* @kmalloc(i64 %mul, i32 20971712)
  %0 = bitcast i8* %call to i32*
  %cmp = icmp eq i32* %0, null
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %numerator, align 4, !tbaa !9
  %2 = load i32, i32* %denominator, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %if.end15, %if.end
  %x.0 = phi i32 [ %1, %if.end ], [ %y.0, %if.end15 ]
  %y.0 = phi i32 [ %2, %if.end ], [ %sub, %if.end15 ]
  %n.0 = phi i32 [ 0, %if.end ], [ %inc19, %if.end15 ]
  %cmp2 = icmp ult i32 %n.0, %n_terms
  %cmp4 = icmp ne i32 %y.0, 0
  %cmp4. = select i1 %cmp2, i1 %cmp4, i1 false
  br i1 %cmp4., label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %div = udiv i32 %x.0, %y.0
  %idxprom = zext i32 %n.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  store i32 %div, i32* %arrayidx, align 4, !tbaa !9
  %idxprom6 = zext i32 %n.0 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %0, i64 %idxprom6
  %3 = load i32, i32* %arrayidx7, align 4, !tbaa !9
  %cmp8 = icmp uge i32 %3, %threshold
  br i1 %cmp8, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.body
  %cmp11 = icmp ult i32 %n.0, 2
  %inc = add i32 %n.0, 1
  %inc.n.0 = select i1 %cmp11, i32 %inc, i32 %n.0
  br label %for.end

if.end15:                                         ; preds = %for.body
  %idxprom16 = zext i32 %n.0 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %0, i64 %idxprom16
  %4 = load i32, i32* %arrayidx17, align 4, !tbaa !9
  %mul18 = mul i32 %4, %y.0
  %sub = sub i32 %x.0, %mul18
  %inc19 = add i32 %n.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then10, %for.cond
  %n.2 = phi i32 [ %inc.n.0, %if.then10 ], [ %n.0, %for.cond ]
  br label %for.cond20

for.cond20:                                       ; preds = %for.body23, %for.end
  %x.1 = phi i32 [ 0, %for.end ], [ %y.1, %for.body23 ]
  %y.1 = phi i32 [ 1, %for.end ], [ %add, %for.body23 ]
  %i.0 = phi i32 [ %n.2, %for.end ], [ %dec, %for.body23 ]
  %cmp21 = icmp ugt i32 %i.0, 0
  br i1 %cmp21, label %for.body23, label %for.end29

for.body23:                                       ; preds = %for.cond20
  %sub24 = sub i32 %i.0, 1
  %idxprom25 = zext i32 %sub24 to i64
  %arrayidx26 = getelementptr inbounds i32, i32* %0, i64 %idxprom25
  %5 = load i32, i32* %arrayidx26, align 4, !tbaa !9
  %mul27 = mul i32 %5, %y.1
  %add = add i32 %mul27, %x.1
  %dec = add i32 %i.0, -1
  br label %for.cond20

for.end29:                                        ; preds = %for.cond20
  store i32 %y.1, i32* %numerator, align 4, !tbaa !9
  store i32 %x.1, i32* %denominator, align 4, !tbaa !9
  %6 = bitcast i32* %0 to i8*
  call void @kfree(i8* %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %for.end29, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_fraction_to_interval(i32 %numerator, i32 %denominator) #0 {
entry:
  %cmp = icmp eq i32 %denominator, 0
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %div = udiv i32 %numerator, %denominator
  %cmp1 = icmp uge i32 %div, 429
  br i1 %cmp1, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %multiplier.0 = phi i32 [ 10000000, %if.end ], [ %div4, %while.body ]
  %denominator.addr.0 = phi i32 [ %denominator, %if.end ], [ %div5, %while.body ]
  %div2 = udiv i32 -1, %multiplier.0
  %cmp3 = icmp ugt i32 %numerator, %div2
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %div4 = udiv i32 %multiplier.0, 2
  %div5 = udiv i32 %denominator.addr.0, 2
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tobool = icmp ne i32 %denominator.addr.0, 0
  br i1 %tobool, label %cond.true, label %cleanup

cond.true:                                        ; preds = %while.end
  %mul = mul i32 %numerator, %multiplier.0
  %div6 = udiv i32 %mul, %denominator.addr.0
  br label %cleanup

cleanup:                                          ; preds = %cond.true, %while.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -1, %lor.lhs.false ], [ -1, %entry ], [ %div6, %cond.true ], [ 0, %while.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init() #5 section ".init.text" {
entry:
  call void @uvc_debugfs_init()
  %call = call i32 @usb_register_driver(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.module* @__this_module, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i32 0, i32 0))
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @uvc_debugfs_cleanup()
  br label %cleanup

if.end:                                           ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.123, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

declare i32 @usb_register_driver(%struct.usb_driver*, %struct.module*, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_cleanup() #5 section ".exit.text" {
entry:
  call void @usb_deregister(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0))
  call void @uvc_debugfs_cleanup()
  ret void
}

declare void @usb_deregister(%struct.usb_driver*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_init(%struct.uvc_video_queue* %queue, i32 %type, i32 %drop_corrupted) #0 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %type2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue1, i32 0, i32 0
  store i32 %type, i32* %type2, align 8, !tbaa !195
  %queue3 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue3, i32 0, i32 1
  store i32 19, i32* %io_modes, align 4, !tbaa !196
  %0 = bitcast %struct.uvc_video_queue* %queue to i8*
  %queue4 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %drv_priv = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue4, i32 0, i32 10
  store i8* %0, i8** %drv_priv, align 8, !tbaa !197
  %queue5 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %buf_struct_size = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue5, i32 0, i32 11
  store i32 624, i32* %buf_struct_size, align 8, !tbaa !198
  %queue6 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue6, i32 0, i32 7
  store %struct.vb2_ops* @uvc_queue_qops, %struct.vb2_ops** %ops, align 8, !tbaa !199
  %queue7 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue7, i32 0, i32 8
  store %struct.vb2_mem_ops* @vb2_vmalloc_memops, %struct.vb2_mem_ops** %mem_ops, align 8, !tbaa !200
  %queue8 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %timestamp_flags = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue8, i32 0, i32 12
  store i32 73728, i32* %timestamp_flags, align 4, !tbaa !201
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  %queue9 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %lock = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue9, i32 0, i32 5
  store %struct.mutex* %mutex, %struct.mutex** %lock, align 8, !tbaa !202
  %queue10 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_queue_init(%struct.vb2_queue* %queue10)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %mutex11 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @__mutex_init(%struct.mutex* %mutex11, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.124, i32 0, i32 0), %struct.lock_class_key* @uvc_queue_init.__key)
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call13 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %irqlock15 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %irqlock15, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %1 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.125, i32 0, i32 0), %struct.lock_class_key* @uvc_queue_init.__key.1)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  call void @INIT_LIST_HEAD.126(%struct.list_head* %irqqueue)
  %tobool20 = icmp ne i32 %drop_corrupted, 0
  %2 = zext i1 %tobool20 to i64
  %cond = select i1 %tobool20, i32 2, i32 0
  %flags = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  store i32 %cond, i32* %flags, align 8, !tbaa !203
  br label %cleanup

cleanup:                                          ; preds = %do.body, %entry
  %retval.0 = phi i32 [ 0, %do.body ], [ %call, %entry ]
  ret i32 %retval.0
}

declare i32 @vb2_queue_init(%struct.vb2_queue*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %lock) #3 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

declare void @__raw_spin_lock_init(%struct.raw_spinlock*, i8*, %struct.lock_class_key*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD.126(%struct.list_head* %list) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %list, %struct.list_head** %__val, align 8, !tbaa !104
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.127(i8* %1, i8* %arraydecay, i32 8)
  %__val1 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val1, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !105
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.127(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i8, i8* %res, align 1, !tbaa !104
  store volatile i8 %0, i8* %p, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !204
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !205
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_queue_setup(%struct.vb2_queue* %vq, i32* %nbuffers, i32* %nplanes, i32* %sizes, %struct.device** %alloc_devs) #0 {
entry:
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_streaming* @uvc_queue_to_stream(%struct.uvc_video_queue* %0)
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %call1, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %1 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !206
  %2 = load i32, i32* %nplanes, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i32, i32* %sizes, i64 0
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !9
  %cmp = icmp ult i32 %3, %1
  %4 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 -22, i32 0
  br label %cleanup

if.end:                                           ; preds = %entry
  store i32 1, i32* %nplanes, align 4, !tbaa !9
  %arrayidx2 = getelementptr inbounds i32, i32* %sizes, i64 0
  store i32 %1, i32* %arrayidx2, align 4, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %cond, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

declare void @vb2_ops_wait_prepare(%struct.vb2_queue*) #2

declare void @vb2_ops_wait_finish(%struct.vb2_queue*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_buffer_prepare(%struct.vb2_buffer* %vb) #0 {
entry:
  %0 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.vb2_v4l2_buffer*
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !207
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %2)
  %3 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_buffer* @uvc_vbuf_to_buffer(%struct.vb2_v4l2_buffer* %1)
  %type = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 2
  %4 = load i32, i32* %type, align 4, !tbaa !209
  %cmp = icmp eq i32 %4, 2
  br i1 %cmp, label %land.lhs.true, label %if.end7

land.lhs.true:                                    ; preds = %entry
  %call2 = call i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 0)
  %call3 = call i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 0)
  %cmp4 = icmp ugt i64 %call2, %call3
  br i1 %cmp4, label %do.body, label %if.end7

do.body:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %5, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then5, label %cleanup

if.then5:                                         ; preds = %do.body
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.132, i32 0, i32 0))
  br label %cleanup

if.end7:                                          ; preds = %land.lhs.true, %entry
  %flags = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %3, i32 0, i32 2
  %6 = load i32, i32* %flags, align 8, !tbaa !203
  %and8 = and i32 %6, 1
  %tobool9 = icmp ne i32 %and8, 0
  %lnot = xor i1 %tobool9, true
  %lnot10 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot10 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool11 = icmp ne i64 %expval, 0
  br i1 %tobool11, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.end7
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 2
  store i32 1, i32* %state, align 8, !tbaa !210
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 3
  store i32 0, i32* %error, align 4, !tbaa !214
  %call14 = call i8* @vb2_plane_vaddr(%struct.vb2_buffer* %vb, i32 0)
  %mem = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 4
  store i8* %call14, i8** %mem, align 8, !tbaa !215
  %call15 = call i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 0)
  %conv16 = trunc i64 %call15 to i32
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 5
  store i32 %conv16, i32* %length, align 8, !tbaa !216
  %type17 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 2
  %7 = load i32, i32* %type17, align 4, !tbaa !209
  %cmp18 = icmp eq i32 %7, 1
  br i1 %cmp18, label %if.end24, label %if.else

if.else:                                          ; preds = %if.end13
  %call21 = call i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 0)
  %conv22 = trunc i64 %call21 to i32
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.end13
  %conv22.sink = phi i32 [ %conv22, %if.else ], [ 0, %if.end13 ]
  %bytesused23 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 6
  store i32 %conv22.sink, i32* %bytesused23, align 4, !tbaa !217
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end7, %if.then5, %do.body
  %retval.0 = phi i32 [ 0, %if.end24 ], [ -22, %if.then5 ], [ -22, %do.body ], [ -19, %if.end7 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_buffer_finish(%struct.vb2_buffer* %vb) #0 {
entry:
  %0 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.vb2_v4l2_buffer*
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !207
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %2)
  %3 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_streaming* @uvc_queue_to_stream(%struct.uvc_video_queue* %3)
  %call2 = call %struct.uvc_buffer* @uvc_vbuf_to_buffer(%struct.vb2_v4l2_buffer* %1)
  %state = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 7
  %4 = load i32, i32* %state, align 8, !tbaa !218
  %cmp = icmp eq i32 %4, 6
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void bitcast (void (%struct.uvc_streaming.870*, %struct.vb2_v4l2_buffer*, %struct.uvc_buffer*)* @uvc_video_clock_update to void (%struct.uvc_streaming*, %struct.vb2_v4l2_buffer*, %struct.uvc_buffer*)*)(%struct.uvc_streaming* %call1, %struct.vb2_v4l2_buffer* %1, %struct.uvc_buffer* %call2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_start_streaming(%struct.vb2_queue* %vq, i32 %count) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_streaming* @uvc_queue_to_stream(%struct.uvc_video_queue* %0)
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 3
  store i32 0, i32* %buf_used, align 4, !tbaa !219
  %call2 = call i32 bitcast (i32 (%struct.uvc_streaming.870*, i32)* @uvc_video_enable to i32 (%struct.uvc_streaming*, i32)*)(%struct.uvc_streaming* %call1, i32 1)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup, label %do.body3

do.body3:                                         ; preds = %entry
  %1 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %cmp4 = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp4 to i32
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 4
  %call5 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call6 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call5)
  call void @uvc_queue_return_buffers(%struct.uvc_video_queue* %0, i32 1)
  %irqlock9 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock9, i64 %call6)
  br label %cleanup

cleanup:                                          ; preds = %do.body3, %entry
  %retval.0 = phi i32 [ %call2, %do.body3 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_stop_streaming(%struct.vb2_queue* %vq) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_streaming* @uvc_queue_to_stream(%struct.uvc_video_queue* %0)
  %call2 = call i32 bitcast (i32 (%struct.uvc_streaming.870*, i32)* @uvc_video_enable to i32 (%struct.uvc_streaming*, i32)*)(%struct.uvc_streaming* %call1, i32 0)
  %1 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 4
  %call4 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call5 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call4)
  call void @uvc_queue_return_buffers(%struct.uvc_video_queue* %0, i32 5)
  %irqlock8 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock8, i64 %call5)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_buffer_queue(%struct.vb2_buffer* %vb) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.vb2_v4l2_buffer*
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  %2 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !207
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %2)
  %3 = bitcast i8* %call to %struct.uvc_video_queue*
  %call1 = call %struct.uvc_buffer* @uvc_vbuf_to_buffer(%struct.vb2_v4l2_buffer* %1)
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %6 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #8
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %3, i32 0, i32 4
  %call4 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call5 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call4)
  %flags8 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %3, i32 0, i32 2
  %8 = load i32, i32* %flags8, align 8, !tbaa !203
  %and = and i32 %8, 1
  %tobool = icmp ne i32 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot9 = xor i1 %lnot, true
  %lnot10 = xor i1 %lnot9, true
  %lnot.ext = zext i1 %lnot10 to i32
  %conv11 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv11, i64 1)
  %tobool12 = icmp ne i64 %expval, 0
  br i1 %tobool12, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %queue13 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 1
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %3, i32 0, i32 5
  call void @list_add_tail.128(%struct.list_head* %queue13, %struct.list_head* %irqqueue)
  br label %if.end

if.else:                                          ; preds = %entry
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %call1, i32 0, i32 2
  store i32 5, i32* %state, align 8, !tbaa !210
  call void @vb2_buffer_done(%struct.vb2_buffer* %vb, i32 7)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %irqlock14 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %3, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock14, i64 %call5)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @vb2_get_drv_priv(%struct.vb2_queue* %q) #1 {
entry:
  %drv_priv = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 10
  %0 = load i8*, i8** %drv_priv, align 8, !tbaa !220
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.uvc_buffer* @uvc_vbuf_to_buffer(%struct.vb2_v4l2_buffer* %buf) #1 {
entry:
  %0 = bitcast %struct.vb2_v4l2_buffer* %buf to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  ret %struct.uvc_buffer* %1
}

declare i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock*) #2 section ".spinlock.text"

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail.128(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !105
  call void @__list_add.129(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

declare void @vb2_buffer_done(%struct.vb2_buffer*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock_irqrestore(%struct.spinlock* %lock, i64 %flags) #3 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

declare void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock*, i64) #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_add.129(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %new, %struct.list_head** %prev1, align 8, !tbaa !105
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 0
  store %struct.list_head* %next, %struct.list_head** %next2, align 8, !tbaa !99
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev3, align 8, !tbaa !105
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %new, %struct.list_head** %__val, align 8, !tbaa !104
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next4 to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.127(i8* %1, i8* %arraydecay, i32 8)
  %__val5 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val5, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.uvc_streaming* @uvc_queue_to_stream(%struct.uvc_video_queue* %queue) #1 {
entry:
  %0 = bitcast %struct.uvc_video_queue* %queue to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 -2480
  %1 = bitcast i8* %add.ptr to %struct.uvc_streaming*
  ret %struct.uvc_streaming* %1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_queue_return_buffers(%struct.uvc_video_queue* %queue, i32 %state) #0 {
entry:
  %cmp = icmp eq i32 %state, 5
  %0 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 7, i32 3
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %call = call i32 @list_empty.130(%struct.list_head* %irqqueue)
  %tobool = icmp ne i32 %call, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %irqqueue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue1, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 -576
  %3 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  %queue2 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 1
  call void @list_del(%struct.list_head* %queue2)
  %state3 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 2
  store i32 %state, i32* %state3, align 8, !tbaa !210
  %buf4 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 0
  %vb2_buf = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf4, i32 0, i32 0
  call void @vb2_buffer_done(%struct.vb2_buffer* %vb2_buf, i32 %cond)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.130(%struct.list_head* %head) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.131(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_del(%struct.list_head* %entry1) #1 {
entry:
  call void @__list_del_entry(%struct.list_head* %entry1)
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !tbaa !99
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 512 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !tbaa !105
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del_entry(%struct.list_head* %entry1) #1 {
entry:
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !105
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  call void @__list_del(%struct.list_head* %0, %struct.list_head* %1)
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare zeroext i1 @__list_del_entry_valid(%struct.list_head*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del(%struct.list_head* %prev, %struct.list_head* %next) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev1, align 8, !tbaa !105
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %next, %struct.list_head** %__val, align 8, !tbaa !104
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next2 to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.127(i8* %1, i8* %arraydecay, i32 8)
  %__val3 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val3, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.131(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load volatile i8, i8* %p, align 1, !tbaa !104
  store i8 %0, i8* %res, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !221
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !222
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 %plane_no) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 4
  %0 = load i32, i32* %num_planes, align 4, !tbaa !223
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 5
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 3
  %1 = load i32, i32* %bytesused, align 4, !tbaa !224
  %conv = zext i32 %1 to i64
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i64 [ %conv, %if.then ], [ 0, %entry ]
  ret i64 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 %plane_no) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 4
  %0 = load i32, i32* %num_planes, align 4, !tbaa !223
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 5
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom
  %length = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 4
  %1 = load i32, i32* %length, align 8, !tbaa !226
  %conv = zext i32 %1 to i64
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i64 [ %conv, %if.then ], [ 0, %entry ]
  ret i64 %retval.0
}

declare i8* @vb2_plane_vaddr(%struct.vb2_buffer*, i32) #2

; Function Attrs: nounwind uwtable
define void @uvc_queue_release(%struct.uvc_video_queue* %queue) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  call void @vb2_queue_release(%struct.vb2_queue* %queue1)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret void
}

declare void @vb2_queue_release(%struct.vb2_queue*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_request_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_requestbuffers* %rb) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_reqbufs(%struct.vb2_queue* %queue1, %struct.v4l2_requestbuffers* %rb)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %count = getelementptr inbounds %struct.v4l2_requestbuffers, %struct.v4l2_requestbuffers* %rb, i32 0, i32 0
  %0 = load i32, i32* %count, align 4, !tbaa !227
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond = phi i32 [ %0, %cond.false ], [ %call, %entry ]
  ret i32 %cond
}

declare i32 @vb2_reqbufs(%struct.vb2_queue*, %struct.v4l2_requestbuffers*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_query_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_querybuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_querybuf(%struct.vb2_queue*, %struct.v4l2_buffer*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_create_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_create_buffers* %cb) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_create_bufs(%struct.vb2_queue* %queue1, %struct.v4l2_create_buffers* %cb)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_create_bufs(%struct.vb2_queue*, %struct.v4l2_create_buffers*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_qbuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_qbuf(%struct.vb2_queue*, %struct.v4l2_buffer*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_export_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_exportbuffer* %exp) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_expbuf(%struct.vb2_queue* %queue1, %struct.v4l2_exportbuffer* %exp)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_expbuf(%struct.vb2_queue*, %struct.v4l2_exportbuffer*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_dequeue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf, i32 %nonblocking) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %tobool = icmp ne i32 %nonblocking, 0
  %call = call i32 @vb2_dqbuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf, i1 zeroext %tobool)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_dqbuf(%struct.vb2_queue*, %struct.v4l2_buffer*, i1 zeroext) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_streamon(%struct.uvc_video_queue* %queue, i32 %type) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_streamon(%struct.vb2_queue* %queue1, i32 %type)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_streamon(%struct.vb2_queue*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_streamoff(%struct.uvc_video_queue* %queue, i32 %type) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_streamoff(%struct.vb2_queue* %queue1, i32 %type)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_streamoff(%struct.vb2_queue*, i32) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_mmap(%struct.uvc_video_queue* %queue, %struct.vm_area_struct* %vma) #0 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_mmap(%struct.vb2_queue* %queue1, %struct.vm_area_struct* %vma)
  ret i32 %call
}

declare i32 @vb2_mmap(%struct.vb2_queue*, %struct.vm_area_struct*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_poll(%struct.uvc_video_queue* %queue, %struct.file* %file, %struct.poll_table_struct* %wait) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_poll(%struct.vb2_queue* %queue1, %struct.file* %file, %struct.poll_table_struct* %wait)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_poll(%struct.vb2_queue*, %struct.file*, %struct.poll_table_struct*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_allocated(%struct.uvc_video_queue* %queue) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_busy(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_busy(%struct.vb2_queue* %q) #1 {
entry:
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 18
  %0 = load i32, i32* %num_buffers, align 8, !tbaa !229
  %cmp = icmp ugt i32 %0, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define void @uvc_queue_cancel(%struct.uvc_video_queue* %queue, i32 %disconnect) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call2 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  call void @uvc_queue_return_buffers(%struct.uvc_video_queue* %queue, i32 5)
  %tobool = icmp ne i32 %disconnect, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %flags5 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  %4 = load i32, i32* %flags5, align 8, !tbaa !203
  %or = or i32 %4, 1
  store i32 %or, i32* %flags5, align 8, !tbaa !203
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %irqlock6 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock6, i64 %call2)
  ret void
}

; Function Attrs: nounwind uwtable
define %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %flags1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  %0 = load i32, i32* %flags1, align 8, !tbaa !203
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.body5

land.lhs.true:                                    ; preds = %entry
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  %1 = load i32, i32* %error, align 4, !tbaa !214
  %tobool2 = icmp ne i32 %1, 0
  br i1 %tobool2, label %if.then, label %do.body5

if.then:                                          ; preds = %land.lhs.true
  %error3 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  store i32 0, i32* %error3, align 4, !tbaa !214
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 1, i32* %state, align 8, !tbaa !210
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  store i32 0, i32* %bytesused, align 4, !tbaa !217
  %buf4 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %vb2_buf = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf4, i32 0, i32 0
  call void @vb2_set_plane_payload(%struct.vb2_buffer* %vb2_buf, i32 0, i64 0)
  br label %cleanup

do.body5:                                         ; preds = %land.lhs.true, %entry
  %2 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %4 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call6 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %queue9 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 1
  call void @list_del(%struct.list_head* %queue9)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %call10 = call i32 @list_empty.130(%struct.list_head* %irqqueue)
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end15, label %if.then12

if.then12:                                        ; preds = %do.body5
  %irqqueue13 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue13, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 -576
  %8 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %do.body5
  %nextbuf.0 = phi %struct.uvc_buffer* [ %8, %if.then12 ], [ null, %do.body5 ]
  %irqlock16 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock16, i64 %call6)
  %error17 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  %9 = load i32, i32* %error17, align 4, !tbaa !214
  %tobool18 = icmp ne i32 %9, 0
  %10 = zext i1 %tobool18 to i64
  %cond = select i1 %tobool18, i32 5, i32 4
  %state19 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 %cond, i32* %state19, align 8, !tbaa !210
  %buf20 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %vb2_buf21 = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf20, i32 0, i32 0
  %bytesused22 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %11 = load i32, i32* %bytesused22, align 4, !tbaa !217
  %conv23 = zext i32 %11 to i64
  call void @vb2_set_plane_payload(%struct.vb2_buffer* %vb2_buf21, i32 0, i64 %conv23)
  %buf24 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %vb2_buf25 = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf24, i32 0, i32 0
  call void @vb2_buffer_done(%struct.vb2_buffer* %vb2_buf25, i32 6)
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.then
  %retval.0 = phi %struct.uvc_buffer* [ %buf, %if.then ], [ %nextbuf.0, %if.end15 ]
  ret %struct.uvc_buffer* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @vb2_set_plane_payload(%struct.vb2_buffer* %vb, i32 %plane_no, i64 %size) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 4
  %0 = load i32, i32* %num_planes, align 4, !tbaa !223
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = trunc i64 %size to i32
  %planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 5
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.vb2_plane], [8 x %struct.vb2_plane]* %planes, i64 0, i64 %idxprom
  %bytesused = getelementptr inbounds %struct.vb2_plane, %struct.vb2_plane* %arrayidx, i32 0, i32 3
  store i32 %conv, i32* %bytesused, align 4, !tbaa !224
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_querycap(%struct.file* %file, i8* %fh, %struct.v4l2_capability* %cap) #0 {
entry:
  %call = call %struct.video_device.754* @video_devdata(%struct.file* %file)
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 1
  %2 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %stream2 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %3 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream2, align 8, !tbaa !241
  %driver = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %cap, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %driver, i32 0, i32 0
  %call3 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i32 0, i32 0), i64 16)
  %card = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %cap, i32 0, i32 1
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %card, i32 0, i32 0
  %name = getelementptr inbounds %struct.video_device.754, %struct.video_device.754* %call, i32 0, i32 12
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %arraydecay5, i64 32)
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %3, i32 0, i32 1
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %4, i32 0, i32 0
  %5 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %bus_info = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %cap, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i32 0, i32 0
  %call8 = call i32 @usb_make_path(%struct.usb_device* %5, i8* %arraydecay7, i64 32)
  %caps = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %2, i32 0, i32 7
  %6 = load i32, i32* %caps, align 8, !tbaa !131
  %or = or i32 -2080374784, %6
  %capabilities = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %cap, i32 0, i32 4
  store i32 %or, i32* %capabilities, align 4, !tbaa !242
  %type = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %3, i32 0, i32 9
  %7 = load i32, i32* %type, align 8, !tbaa !124
  %cmp = icmp eq i32 %7, 1
  %device_caps = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %cap, i32 0, i32 5
  %.sink = select i1 %cmp, i32 67108865, i32 67108866
  store i32 %.sink, i32* %device_caps, align 4, !tbaa !244
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_fmtdesc* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_ioctl_enum_fmt(%struct.uvc_streaming.870* %1, %struct.v4l2_fmtdesc* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_fmtdesc* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_ioctl_enum_fmt(%struct.uvc_streaming.870* %1, %struct.v4l2_fmtdesc* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_v4l2_get_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_v4l2_get_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call i32 @uvc_v4l2_set_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call i32 @uvc_v4l2_set_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_try_fmt_vid_cap(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %2 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %2) #8
  %call = call i32 @uvc_v4l2_try_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** null, %struct.uvc_frame** null)
  %3 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %3) #8
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_try_fmt_vid_out(%struct.file* %file, i8* %fh, %struct.v4l2_format* %fmt) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %2 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %2) #8
  %call = call i32 @uvc_v4l2_try_format(%struct.uvc_streaming.870* %1, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** null, %struct.uvc_frame** null)
  %3 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %3) #8
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_reqbufs(%struct.file* %file, i8* %fh, %struct.v4l2_requestbuffers* %rb) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_request_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_requestbuffers* %rb)
  %mutex3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex3)
  %cmp4 = icmp slt i32 %call2, 0
  br i1 %cmp4, label %cleanup, label %if.end6

if.end6:                                          ; preds = %if.end
  %cmp7 = icmp eq i32 %call2, 0
  br i1 %cmp7, label %if.then8, label %cleanup

if.then8:                                         ; preds = %if.end6
  call void @uvc_dismiss_privileges(%struct.uvc_fh* %0)
  br label %cleanup

cleanup:                                          ; preds = %if.then8, %if.end6, %if.end, %entry
  %retval.0 = phi i32 [ %call, %entry ], [ %call2, %if.end ], [ 0, %if.then8 ], [ 0, %if.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_querybuf(%struct.file* %file, i8* %fh, %struct.v4l2_buffer* %buf) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_query_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_qbuf(%struct.file* %file, i8* %fh, %struct.v4l2_buffer* %buf) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_queue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_expbuf(%struct.file* %file, i8* %fh, %struct.v4l2_exportbuffer* %exp) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_export_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_exportbuffer* %exp)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_dqbuf(%struct.file* %file, i8* %fh, %struct.v4l2_buffer* %buf) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 6
  %2 = load i32, i32* %f_flags, align 8, !tbaa !245
  %and = and i32 %2, 2048
  %call2 = call i32 @uvc_dequeue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf, i32 %and)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_create_bufs(%struct.file* %file, i8* %fh, %struct.v4l2_create_buffers* %cb) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_create_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_create_buffers* %cb)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_streamon(%struct.file* %file, i8* %fh, i32 %type) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_queue_streamon(%struct.uvc_video_queue* %queue, i32 %type)
  %mutex3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex3)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_streamoff(%struct.file* %file, i8* %fh, i32 %type) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_has_privileges(%struct.uvc_fh* %0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %call2 = call i32 @uvc_queue_streamoff(%struct.uvc_video_queue* %queue, i32 %type)
  %mutex3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex3)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -16, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_input(%struct.file* %file, i8* %fh, %struct.v4l2_input* %input) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %selector2 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector2, align 8, !tbaa !141
  %index3 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 0
  %3 = load i32, i32* %index3, align 8, !tbaa !246
  %cmp = icmp eq %struct.uvc_entity.872* %2, null
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %4, i32 0, i32 3
  %5 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %5, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  %cmp4 = icmp ne i32 %3, 0
  br i1 %cmp4, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %entities = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %chain20.sink = phi %struct.list_head* [ %chain20, %for.inc ], [ %entities, %if.end ]
  %next21 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain20.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next21, align 8, !tbaa !74
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr23 = getelementptr inbounds i8, i8* %7, i64 -16
  %8 = bitcast i8* %add.ptr23 to %struct.uvc_entity.872*
  %chain6 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %8, i32 0, i32 1
  %entities7 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 2
  %cmp8 = icmp ne %struct.list_head* %chain6, %entities7
  br i1 %cmp8, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %8, i32 0, i32 4
  %9 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %9 to i32
  %and9 = and i32 %conv, 65280
  %cmp10 = icmp ne i32 %and9, 0
  br i1 %cmp10, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %type12 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %8, i32 0, i32 4
  %10 = load i16, i16* %type12, align 2, !tbaa !114
  %conv13 = zext i16 %10 to i32
  %and14 = and i32 %conv13, 32768
  %cmp15 = icmp eq i32 %and14, 0
  br i1 %cmp15, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %chain20 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %8, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %8, i32 0, i32 3
  %11 = load i8, i8* %id, align 4, !tbaa !120
  %conv24 = zext i8 %11 to i32
  br label %if.end68

if.else:                                          ; preds = %lor.lhs.false
  %bNrInPins = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 12
  %12 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv25 = zext i8 %12 to i32
  %cmp26 = icmp ult i32 %3, %conv25
  br i1 %cmp26, label %if.then28, label %if.end68

if.then28:                                        ; preds = %if.else
  %baSourceID = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 13
  %13 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %idxprom = zext i32 %3 to i64
  %arrayidx = getelementptr inbounds i8, i8* %13, i64 %idxprom
  %14 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv29 = zext i8 %14 to i32
  %entities31 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 2
  br label %for.cond35

for.cond35:                                       ; preds = %for.inc60, %if.then28
  %chain62.sink = phi %struct.list_head* [ %chain62, %for.inc60 ], [ %entities31, %if.then28 ]
  %next63 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain62.sink, i32 0, i32 0
  %15 = load %struct.list_head*, %struct.list_head** %next63, align 8, !tbaa !74
  %16 = bitcast %struct.list_head* %15 to i8*
  %add.ptr65 = getelementptr inbounds i8, i8* %16, i64 -16
  %17 = bitcast i8* %add.ptr65 to %struct.uvc_entity.872*
  %chain36 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %17, i32 0, i32 1
  %entities37 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 2
  %cmp38 = icmp ne %struct.list_head* %chain36, %entities37
  br i1 %cmp38, label %for.body40, label %if.end68

for.body40:                                       ; preds = %for.cond35
  %type41 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %17, i32 0, i32 4
  %18 = load i16, i16* %type41, align 2, !tbaa !114
  %conv42 = zext i16 %18 to i32
  %and43 = and i32 %conv42, 65280
  %cmp44 = icmp ne i32 %and43, 0
  br i1 %cmp44, label %land.lhs.true46, label %for.inc60

land.lhs.true46:                                  ; preds = %for.body40
  %type47 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %17, i32 0, i32 4
  %19 = load i16, i16* %type47, align 2, !tbaa !114
  %conv48 = zext i16 %19 to i32
  %and49 = and i32 %conv48, 32768
  %cmp50 = icmp eq i32 %and49, 0
  br i1 %cmp50, label %if.end53, label %for.inc60

if.end53:                                         ; preds = %land.lhs.true46
  %id54 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %17, i32 0, i32 3
  %20 = load i8, i8* %id54, align 4, !tbaa !120
  %conv55 = zext i8 %20 to i32
  %cmp56 = icmp eq i32 %conv55, %conv29
  br i1 %cmp56, label %if.end68, label %for.inc60

for.inc60:                                        ; preds = %if.end53, %land.lhs.true46, %for.body40
  %chain62 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %17, i32 0, i32 1
  br label %for.cond35

if.end68:                                         ; preds = %if.end53, %for.cond35, %if.else, %for.end
  %iterm.3 = phi %struct.uvc_entity.872* [ %8, %for.end ], [ null, %if.else ], [ %17, %for.cond35 ], [ %17, %if.end53 ]
  %pin.1 = phi i32 [ %conv24, %for.end ], [ 0, %if.else ], [ %conv29, %for.cond35 ], [ %conv29, %if.end53 ]
  %cmp69 = icmp eq %struct.uvc_entity.872* %iterm.3, null
  br i1 %cmp69, label %cleanup, label %lor.lhs.false71

lor.lhs.false71:                                  ; preds = %if.end68
  %id72 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %iterm.3, i32 0, i32 3
  %21 = load i8, i8* %id72, align 4, !tbaa !120
  %conv73 = zext i8 %21 to i32
  %cmp74 = icmp ne i32 %conv73, %pin.1
  br i1 %cmp74, label %cleanup, label %if.end77

if.end77:                                         ; preds = %lor.lhs.false71
  %22 = bitcast %struct.v4l2_input* %input to i8*
  %call = call i8* @__memset(i8* %22, i32 0, i64 80)
  %index78 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 0
  store i32 %3, i32* %index78, align 8, !tbaa !246
  %name = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 1
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name79 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %iterm.3, i32 0, i32 5
  %arraydecay80 = getelementptr inbounds [64 x i8], [64 x i8]* %name79, i32 0, i32 0
  %call81 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay80, i64 32)
  %type82 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %iterm.3, i32 0, i32 4
  %23 = load i16, i16* %type82, align 2, !tbaa !114
  %conv83 = zext i16 %23 to i32
  %and84 = and i32 %conv83, 32767
  %cmp85 = icmp eq i32 %and84, 513
  br i1 %cmp85, label %if.then87, label %cleanup

if.then87:                                        ; preds = %if.end77
  %type88 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %input, i32 0, i32 2
  store i32 2, i32* %type88, align 4, !tbaa !248
  br label %cleanup

cleanup:                                          ; preds = %if.then87, %if.end77, %lor.lhs.false71, %if.end68, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ -22, %lor.lhs.false71 ], [ -22, %if.end68 ], [ 0, %if.then87 ], [ 0, %if.end77 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_input(%struct.file* %file, i8* %fh, i32* %input) #0 {
entry:
  %i = alloca i8, align 1
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %i) #8
  %selector = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector, align 8, !tbaa !141
  %cmp = icmp eq %struct.uvc_entity.872* %2, null
  br i1 %cmp, label %cleanup.sink.split, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %3 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %3, i32 0, i32 3
  %4 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %4, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %cleanup.sink.split, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %dev2 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev2, align 8, !tbaa !136
  %selector3 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %6 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector3, align 8, !tbaa !141
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 3
  %7 = load i8, i8* %id, align 4, !tbaa !120
  %dev4 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %8 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev4, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %8, i32 0, i32 4
  %9 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv = trunc i32 %9 to i8
  %call = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %5, i8 zeroext -127, i8 zeroext %7, i8 zeroext %conv, i8 zeroext 1, i8* %i, i16 zeroext 1)
  %cmp5 = icmp slt i32 %call, 0
  br i1 %cmp5, label %cleanup, label %if.end8

if.end8:                                          ; preds = %if.end
  %10 = load i8, i8* %i, align 1, !tbaa !104
  %conv9 = zext i8 %10 to i32
  %sub = sub nsw i32 %conv9, 1
  br label %cleanup.sink.split

cleanup.sink.split:                               ; preds = %if.end8, %lor.lhs.false, %entry
  %sub.sink = phi i32 [ %sub, %if.end8 ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  store i32 %sub.sink, i32* %input, align 4, !tbaa !9
  br label %cleanup

cleanup:                                          ; preds = %cleanup.sink.split, %if.end
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %cleanup.sink.split ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %i) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_input(%struct.file* %file, i8* %fh, i32 %input) #0 {
entry:
  %i = alloca i32, align 4
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %2 = bitcast i32* %i to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %selector = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %3 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector, align 8, !tbaa !141
  %cmp2 = icmp eq %struct.uvc_entity.872* %3, null
  br i1 %cmp2, label %if.then3, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %4, i32 0, i32 3
  %5 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %5, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %if.end7

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  %tobool4 = icmp ne i32 %input, 0
  %. = select i1 %tobool4, i32 -22, i32 0
  br label %cleanup

if.end7:                                          ; preds = %lor.lhs.false
  %selector8 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %6 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector8, align 8, !tbaa !141
  %bNrInPins = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 12
  %7 = load i8, i8* %bNrInPins, align 8, !tbaa !139
  %conv = zext i8 %7 to i32
  %cmp9 = icmp uge i32 %input, %conv
  br i1 %cmp9, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.end7
  %add = add i32 %input, 1
  store i32 %add, i32* %i, align 4, !tbaa !9
  %dev13 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %8 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev13, align 8, !tbaa !136
  %selector14 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 4
  %9 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %selector14, align 8, !tbaa !141
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %9, i32 0, i32 3
  %10 = load i8, i8* %id, align 4, !tbaa !120
  %dev15 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %1, i32 0, i32 0
  %11 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev15, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %11, i32 0, i32 4
  %12 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv16 = trunc i32 %12 to i8
  %13 = bitcast i32* %i to i8*
  %call17 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %8, i8 zeroext 1, i8 zeroext %10, i8 zeroext %conv16, i8 zeroext 1, i8* %13, i16 zeroext 1)
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end7, %if.then3, %entry
  %retval.0 = phi i32 [ %call17, %if.end12 ], [ %call, %entry ], [ %., %if.then3 ], [ -22, %if.end7 ]
  %14 = bitcast i32* %i to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_queryctrl(%struct.file* %file, i8* %fh, %struct.v4l2_queryctrl* %qc) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %call = call i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %1, %struct.v4l2_queryctrl* %qc)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_query_ext_ctrl(%struct.file* %file, i8* %fh, %struct.v4l2_query_ext_ctrl* %qec) #0 {
entry:
  %qc = alloca %struct.v4l2_queryctrl, align 4
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %2 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %2) #8
  %3 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 68, i32 4, i1 false)
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 0
  %id2 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 0
  %4 = load i32, i32* %id2, align 8, !tbaa !249
  store i32 %4, i32* %id, align 4, !tbaa !251
  %call = call i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %1, %struct.v4l2_queryctrl* %qc)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id3 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 0
  %5 = load i32, i32* %id3, align 4, !tbaa !251
  %id4 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 0
  store i32 %5, i32* %id4, align 8, !tbaa !249
  %type = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 1
  %6 = load i32, i32* %type, align 4, !tbaa !253
  %type5 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 1
  store i32 %6, i32* %type5, align 4, !tbaa !254
  %name = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 2
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %name6, i32 0, i32 0
  %call8 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay7, i64 32)
  %minimum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 3
  %7 = load i32, i32* %minimum, align 4, !tbaa !255
  %conv = sext i32 %7 to i64
  %minimum9 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 3
  store i64 %conv, i64* %minimum9, align 8, !tbaa !256
  %maximum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 4
  %8 = load i32, i32* %maximum, align 4, !tbaa !257
  %conv10 = sext i32 %8 to i64
  %maximum11 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 4
  store i64 %conv10, i64* %maximum11, align 8, !tbaa !258
  %step = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 5
  %9 = load i32, i32* %step, align 4, !tbaa !259
  %conv12 = sext i32 %9 to i64
  %step13 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 5
  store i64 %conv12, i64* %step13, align 8, !tbaa !260
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 6
  %10 = load i32, i32* %default_value, align 4, !tbaa !261
  %conv14 = sext i32 %10 to i64
  %default_value15 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 6
  store i64 %conv14, i64* %default_value15, align 8, !tbaa !262
  %flags = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 7
  %11 = load i32, i32* %flags, align 4, !tbaa !263
  %flags16 = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 7
  store i32 %11, i32* %flags16, align 8, !tbaa !264
  %elem_size = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 8
  store i32 4, i32* %elem_size, align 4, !tbaa !265
  %elems = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 9
  store i32 1, i32* %elems, align 8, !tbaa !266
  %nr_of_dims = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 10
  store i32 0, i32* %nr_of_dims, align 4, !tbaa !267
  %dims = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 11
  %arraydecay17 = getelementptr inbounds [4 x i32], [4 x i32]* %dims, i32 0, i32 0
  %12 = bitcast i32* %arraydecay17 to i8*
  %call18 = call i8* @__memset(i8* %12, i32 0, i64 16)
  %reserved = getelementptr inbounds %struct.v4l2_query_ext_ctrl, %struct.v4l2_query_ext_ctrl* %qec, i32 0, i32 12
  %arraydecay19 = getelementptr inbounds [32 x i32], [32 x i32]* %reserved, i32 0, i32 0
  %13 = bitcast i32* %arraydecay19 to i8*
  %call20 = call i8* @__memset(i8* %13, i32 0, i64 128)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ %call, %entry ]
  %14 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %14) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_ctrl(%struct.file* %file, i8* %fh, %struct.anon.26* %ctrl) #0 {
entry:
  %xctrl = alloca %struct.v4l2_ext_control, align 1
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %2 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* %2) #8
  %3 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  %call = call i8* @__memset(i8* %3, i32 0, i64 20)
  %id = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ctrl, i32 0, i32 0
  %4 = load i32, i32* %id, align 4, !tbaa !268
  %id2 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  store i32 %4, i32* %id2, align 1, !tbaa !270
  %call3 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain.869* %1)
  %cmp = icmp slt i32 %call3, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call4 = call i32 @uvc_ctrl_get(%struct.uvc_video_chain.869* %1, %struct.v4l2_ext_control* %xctrl)
  %call5 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %0)
  %cmp6 = icmp slt i32 %call4, 0
  br i1 %cmp6, label %cleanup, label %if.end8

if.end8:                                          ; preds = %if.end
  %5 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value = bitcast %union.anon.3* %5 to i32*
  %6 = load i32, i32* %value, align 1, !tbaa !104
  %value9 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ctrl, i32 0, i32 1
  store i32 %6, i32* %value9, align 4, !tbaa !272
  br label %cleanup

cleanup:                                          ; preds = %if.end8, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end8 ], [ %call3, %entry ], [ %call4, %if.end ]
  %7 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 20, i8* %7) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_ctrl(%struct.file* %file, i8* %fh, %struct.anon.26* %ctrl) #0 {
entry:
  %xctrl = alloca %struct.v4l2_ext_control, align 1
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %2 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* %2) #8
  %3 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  %call = call i8* @__memset(i8* %3, i32 0, i64 20)
  %id = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ctrl, i32 0, i32 0
  %4 = load i32, i32* %id, align 4, !tbaa !268
  %id2 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  store i32 %4, i32* %id2, align 1, !tbaa !270
  %value = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ctrl, i32 0, i32 1
  %5 = load i32, i32* %value, align 4, !tbaa !272
  %6 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value3 = bitcast %union.anon.3* %6 to i32*
  store i32 %5, i32* %value3, align 1, !tbaa !104
  %call4 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain.869* %1)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call5 = call i32 @uvc_ctrl_set(%struct.uvc_video_chain.869* %1, %struct.v4l2_ext_control* %xctrl)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %call8 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %0)
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %call10 = call i32 @uvc_ctrl_commit(%struct.uvc_fh* %0, %struct.v4l2_ext_control* %xctrl, i32 1)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %cleanup, label %if.end13

if.end13:                                         ; preds = %if.end9
  %7 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value14 = bitcast %union.anon.3* %7 to i32*
  %8 = load i32, i32* %value14, align 1, !tbaa !104
  %value15 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %ctrl, i32 0, i32 1
  store i32 %8, i32* %value15, align 4, !tbaa !272
  br label %cleanup

cleanup:                                          ; preds = %if.end13, %if.end9, %if.then7, %entry
  %retval.0 = phi i32 [ %call5, %if.then7 ], [ 0, %if.end13 ], [ %call4, %entry ], [ %call10, %if.end9 ]
  %9 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 20, i8* %9) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_ext_ctrls(%struct.file* %file, i8* %fh, %struct.v4l2_ext_controls* %ctrls) #0 {
entry:
  %qc = alloca %struct.v4l2_queryctrl, align 4
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %controls = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 4
  %2 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls, align 8, !tbaa !273
  %3 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 0
  %which = bitcast %struct.atomic_t* %3 to i32*
  %4 = load i32, i32* %which, align 8, !tbaa !104
  %cmp = icmp eq i32 %4, 251658240
  br i1 %cmp, label %if.then, label %if.end6

if.then:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %ctrl.0 = phi %struct.v4l2_ext_control* [ %2, %if.then ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ]
  %retval.0 = phi i32 [ undef, %if.then ], [ %retval.1, %for.inc ]
  %count = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 1
  %5 = load i32, i32* %count, align 4, !tbaa !275
  %cmp2 = icmp ult i32 %i.0, %5
  br i1 %cmp2, label %for.body, label %cleanup27

for.body:                                         ; preds = %for.cond
  %6 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %6) #8
  %7 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.memset.p0i8.i64(i8* %7, i8 0, i64 68, i32 4, i1 false)
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 0
  %id3 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl.0, i32 0, i32 0
  %8 = load i32, i32* %id3, align 1, !tbaa !270
  store i32 %8, i32* %id, align 4, !tbaa !251
  %call = call i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %1, %struct.v4l2_queryctrl* %qc)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %if.then5, label %if.end

if.then5:                                         ; preds = %for.body
  %error_idx = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 2
  store i32 %i.0, i32* %error_idx, align 8, !tbaa !276
  br label %cleanup

if.end:                                           ; preds = %for.body
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %qc, i32 0, i32 6
  %9 = load i32, i32* %default_value, align 4, !tbaa !261
  %10 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl.0, i32 0, i32 3
  %value = bitcast %union.anon.3* %10 to i32*
  store i32 %9, i32* %value, align 1, !tbaa !104
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then5
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then5 ], [ 0, %if.end ]
  %retval.1 = phi i32 [ %call, %if.then5 ], [ %retval.0, %if.end ]
  %11 = bitcast %struct.v4l2_queryctrl* %qc to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %11) #8
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %for.inc, label %cleanup27

for.inc:                                          ; preds = %cleanup
  %incdec.ptr = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl.0, i32 1
  %inc = add i32 %i.0, 1
  br label %for.cond

if.end6:                                          ; preds = %entry
  %call7 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain.869* %1)
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %cleanup27, label %if.end10

if.end10:                                         ; preds = %if.end6
  br label %for.cond11

for.cond11:                                       ; preds = %for.inc21, %if.end10
  %ctrl.1 = phi %struct.v4l2_ext_control* [ %2, %if.end10 ], [ %incdec.ptr22, %for.inc21 ]
  %i.1 = phi i32 [ 0, %if.end10 ], [ %inc23, %for.inc21 ]
  %count12 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 1
  %12 = load i32, i32* %count12, align 4, !tbaa !275
  %cmp13 = icmp ult i32 %i.1, %12
  br i1 %cmp13, label %for.body14, label %for.end24

for.body14:                                       ; preds = %for.cond11
  %call15 = call i32 @uvc_ctrl_get(%struct.uvc_video_chain.869* %1, %struct.v4l2_ext_control* %ctrl.1)
  %cmp16 = icmp slt i32 %call15, 0
  br i1 %cmp16, label %if.then17, label %for.inc21

if.then17:                                        ; preds = %for.body14
  %call18 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %0)
  %error_idx19 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 2
  store i32 %i.1, i32* %error_idx19, align 8, !tbaa !276
  br label %cleanup27

for.inc21:                                        ; preds = %for.body14
  %incdec.ptr22 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl.1, i32 1
  %inc23 = add i32 %i.1, 1
  br label %for.cond11

for.end24:                                        ; preds = %for.cond11
  %error_idx25 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 2
  store i32 0, i32* %error_idx25, align 8, !tbaa !276
  %call26 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %0)
  br label %cleanup27

cleanup27:                                        ; preds = %for.end24, %if.then17, %if.end6, %cleanup, %for.cond
  %retval.2 = phi i32 [ %call15, %if.then17 ], [ %call26, %for.end24 ], [ 0, %for.cond ], [ %call7, %if.end6 ], [ %retval.1, %cleanup ]
  ret i32 %retval.2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_ext_ctrls(%struct.file* %file, i8* %fh, %struct.v4l2_ext_controls* %ctrls) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %call = call i32 @uvc_ioctl_s_try_ext_ctrls(%struct.uvc_fh* %0, %struct.v4l2_ext_controls* %ctrls, i1 zeroext true)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_try_ext_ctrls(%struct.file* %file, i8* %fh, %struct.v4l2_ext_controls* %ctrls) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %call = call i32 @uvc_ioctl_s_try_ext_ctrls(%struct.uvc_fh* %0, %struct.v4l2_ext_controls* %ctrls, i1 zeroext false)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_querymenu(%struct.file* %file, i8* %fh, %struct.v4l2_querymenu* %qm) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %call = call i32 @uvc_query_v4l2_menu(%struct.uvc_video_chain.869* %1, %struct.v4l2_querymenu* %qm)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_selection(%struct.file* %file, i8* %fh, %struct.v4l2_selection* %sel) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %type = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !277
  %type2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 9
  %3 = load i32, i32* %type2, align 8, !tbaa !124
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %target = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 1
  %4 = load i32, i32* %target, align 4, !tbaa !280
  switch i32 %4, label %cleanup [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 257, label %sw.bb7
    i32 258, label %sw.bb7
  ]

sw.bb:                                            ; preds = %if.end, %if.end
  %type3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 9
  %5 = load i32, i32* %type3, align 8, !tbaa !124
  %cmp4 = icmp ne i32 %5, 1
  br i1 %cmp4, label %cleanup, label %sw.epilog

sw.bb7:                                           ; preds = %if.end, %if.end
  %type8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 9
  %6 = load i32, i32* %type8, align 8, !tbaa !124
  %cmp9 = icmp ne i32 %6, 2
  br i1 %cmp9, label %cleanup, label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb7, %sw.bb
  %r = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %left = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %r, i32 0, i32 0
  store i32 0, i32* %left, align 4, !tbaa !281
  %r12 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %top = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %r12, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !282
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %cur_frame = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 15
  %7 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !283
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %7, i32 0, i32 2
  %8 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv = zext i16 %8 to i32
  %r13 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %width = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %r13, i32 0, i32 2
  store i32 %conv, i32* %width, align 4, !tbaa !284
  %cur_frame14 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 15
  %9 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame14, align 8, !tbaa !283
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %9, i32 0, i32 3
  %10 = load i16, i16* %wHeight, align 4, !tbaa !189
  %conv15 = zext i16 %10 to i32
  %r16 = getelementptr inbounds %struct.v4l2_selection, %struct.v4l2_selection* %sel, i32 0, i32 3
  %height = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %r16, i32 0, i32 3
  store i32 %conv15, i32* %height, align 4, !tbaa !285
  %mutex17 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex17)
  br label %cleanup

cleanup:                                          ; preds = %sw.epilog, %sw.bb7, %sw.bb, %if.end, %entry
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -22, %entry ], [ -22, %sw.bb ], [ -22, %sw.bb7 ], [ -22, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_g_parm(%struct.file* %file, i8* %fh, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_v4l2_get_streamparm(%struct.uvc_streaming.870* %1, %struct.v4l2_streamparm* %parm)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_parm(%struct.file* %file, i8* %fh, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %call = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call2 = call i32 @uvc_v4l2_set_streamparm(%struct.uvc_streaming.870* %1, %struct.v4l2_streamparm* %parm)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call2, %if.end ], [ %call, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_framesizes(%struct.file* %file, i8* %fh, %struct.v4l2_frmsizeenum* %fsize) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 10
  %2 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp = icmp ult i32 %i.0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 11
  %3 = load %struct.uvc_format*, %struct.uvc_format** %format2, align 8, !tbaa !100
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %3, i64 %idxprom
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %fcc, align 4, !tbaa !179
  %pixel_format = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 1
  %5 = load i32, i32* %pixel_format, align 4, !tbaa !286
  %cmp3 = icmp eq i32 %4, %5
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %format4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 11
  %6 = load %struct.uvc_format*, %struct.uvc_format** %format4, align 8, !tbaa !100
  %idxprom5 = sext i32 %i.0 to i64
  %arrayidx6 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %6, i64 %idxprom5
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %format.0 = phi %struct.uvc_format* [ %arrayidx6, %if.then ], [ null, %for.cond ]
  %cmp7 = icmp eq %struct.uvc_format* %format.0, null
  br i1 %cmp7, label %cleanup, label %if.end9

if.end9:                                          ; preds = %for.end
  %index = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 0
  %7 = load i32, i32* %index, align 4, !tbaa !288
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 7
  %8 = load i32, i32* %nframes, align 4, !tbaa !166
  %cmp10 = icmp uge i32 %7, %8
  br i1 %cmp10, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.end9
  %frame13 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %9 = load %struct.uvc_frame*, %struct.uvc_frame** %frame13, align 8, !tbaa !164
  %index14 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 0
  %10 = load i32, i32* %index14, align 4, !tbaa !288
  %idxprom15 = zext i32 %10 to i64
  %arrayidx16 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %9, i64 %idxprom15
  %type = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 2
  store i32 1, i32* %type, align 4, !tbaa !289
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx16, i32 0, i32 2
  %11 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv = zext i16 %11 to i32
  %12 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 3
  %discrete = bitcast %union.anon.78* %12 to %struct.anon.26*
  %width = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete, i32 0, i32 0
  store i32 %conv, i32* %width, align 4, !tbaa !104
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx16, i32 0, i32 3
  %13 = load i16, i16* %wHeight, align 4, !tbaa !189
  %conv17 = zext i16 %13 to i32
  %14 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %fsize, i32 0, i32 3
  %discrete18 = bitcast %union.anon.78* %14 to %struct.anon.26*
  %height = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete18, i32 0, i32 1
  store i32 %conv17, i32* %height, align 4, !tbaa !104
  br label %cleanup

cleanup:                                          ; preds = %if.end12, %if.end9, %for.end
  %retval.0 = phi i32 [ 0, %if.end12 ], [ -22, %for.end ], [ -22, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_frameintervals(%struct.file* %file, i8* %fh, %struct.v4l2_frmivalenum* %fival) #0 {
entry:
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 10
  %2 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp = icmp ult i32 %i.0, %2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 11
  %3 = load %struct.uvc_format*, %struct.uvc_format** %format2, align 8, !tbaa !100
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %3, i64 %idxprom
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 4
  %4 = load i32, i32* %fcc, align 4, !tbaa !179
  %pixel_format = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 1
  %5 = load i32, i32* %pixel_format, align 4, !tbaa !290
  %cmp3 = icmp eq i32 %4, %5
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %format4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 11
  %6 = load %struct.uvc_format*, %struct.uvc_format** %format4, align 8, !tbaa !100
  %idxprom5 = sext i32 %i.0 to i64
  %arrayidx6 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %6, i64 %idxprom5
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %format.0 = phi %struct.uvc_format* [ %arrayidx6, %if.then ], [ null, %for.cond ]
  %cmp7 = icmp eq %struct.uvc_format* %format.0, null
  br i1 %cmp7, label %cleanup, label %if.end9

if.end9:                                          ; preds = %for.end
  br label %for.cond10

for.cond10:                                       ; preds = %for.inc29, %if.end9
  %i.1 = phi i32 [ 0, %if.end9 ], [ %inc30, %for.inc29 ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 7
  %7 = load i32, i32* %nframes, align 4, !tbaa !166
  %cmp11 = icmp ult i32 %i.1, %7
  br i1 %cmp11, label %for.body12, label %for.end31

for.body12:                                       ; preds = %for.cond10
  %frame13 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %8 = load %struct.uvc_frame*, %struct.uvc_frame** %frame13, align 8, !tbaa !164
  %idxprom14 = sext i32 %i.1 to i64
  %arrayidx15 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %8, i64 %idxprom14
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx15, i32 0, i32 2
  %9 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv = zext i16 %9 to i32
  %width = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 2
  %10 = load i32, i32* %width, align 4, !tbaa !292
  %cmp16 = icmp eq i32 %conv, %10
  br i1 %cmp16, label %land.lhs.true, label %for.inc29

land.lhs.true:                                    ; preds = %for.body12
  %frame18 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %11 = load %struct.uvc_frame*, %struct.uvc_frame** %frame18, align 8, !tbaa !164
  %idxprom19 = sext i32 %i.1 to i64
  %arrayidx20 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %11, i64 %idxprom19
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx20, i32 0, i32 3
  %12 = load i16, i16* %wHeight, align 4, !tbaa !189
  %conv21 = zext i16 %12 to i32
  %height = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 3
  %13 = load i32, i32* %height, align 4, !tbaa !293
  %cmp22 = icmp eq i32 %conv21, %13
  br i1 %cmp22, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %land.lhs.true
  %frame25 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %14 = load %struct.uvc_frame*, %struct.uvc_frame** %frame25, align 8, !tbaa !164
  %idxprom26 = sext i32 %i.1 to i64
  %arrayidx27 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %14, i64 %idxprom26
  br label %for.end31

for.inc29:                                        ; preds = %land.lhs.true, %for.body12
  %inc30 = add nsw i32 %i.1, 1
  br label %for.cond10

for.end31:                                        ; preds = %if.then24, %for.cond10
  %frame.0 = phi %struct.uvc_frame* [ %arrayidx27, %if.then24 ], [ null, %for.cond10 ]
  %cmp32 = icmp eq %struct.uvc_frame* %frame.0, null
  br i1 %cmp32, label %cleanup, label %if.end35

if.end35:                                         ; preds = %for.end31
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 7
  %15 = load i8, i8* %bFrameIntervalType, align 4, !tbaa !182
  %tobool = icmp ne i8 %15, 0
  %index = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 0
  %16 = load i32, i32* %index, align 4, !tbaa !294
  br i1 %tobool, label %if.then36, label %if.else

if.then36:                                        ; preds = %if.end35
  %bFrameIntervalType37 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 7
  %17 = load i8, i8* %bFrameIntervalType37, align 4, !tbaa !182
  %conv38 = zext i8 %17 to i32
  %cmp39 = icmp uge i32 %16, %conv38
  br i1 %cmp39, label %cleanup, label %if.end42

if.end42:                                         ; preds = %if.then36
  %type = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 4
  store i32 1, i32* %type, align 4, !tbaa !295
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %18 = load i32*, i32** %dwFrameInterval, align 8, !tbaa !185
  %index43 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 0
  %19 = load i32, i32* %index43, align 4, !tbaa !294
  %idxprom44 = zext i32 %19 to i64
  %arrayidx45 = getelementptr inbounds i32, i32* %18, i64 %idxprom44
  %20 = load i32, i32* %arrayidx45, align 4, !tbaa !9
  %21 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %discrete = bitcast %union.anon.79.747* %21 to %struct.anon.26*
  %numerator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete, i32 0, i32 0
  store i32 %20, i32* %numerator, align 4, !tbaa !104
  %22 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %discrete46 = bitcast %union.anon.79.747* %22 to %struct.anon.26*
  %denominator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete46, i32 0, i32 1
  store i32 10000000, i32* %denominator, align 4, !tbaa !104
  %23 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %discrete47 = bitcast %union.anon.79.747* %23 to %struct.anon.26*
  %numerator48 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete47, i32 0, i32 0
  %24 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %discrete49 = bitcast %union.anon.79.747* %24 to %struct.anon.26*
  %denominator50 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %discrete49, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator48, i32* %denominator50, i32 8, i32 333)
  br label %cleanup

if.else:                                          ; preds = %if.end35
  %tobool52 = icmp ne i32 %16, 0
  br i1 %tobool52, label %cleanup, label %if.end54

if.end54:                                         ; preds = %if.else
  %type55 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 4
  store i32 3, i32* %type55, align 4, !tbaa !295
  %dwFrameInterval56 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %25 = load i32*, i32** %dwFrameInterval56, align 8, !tbaa !185
  %arrayidx57 = getelementptr inbounds i32, i32* %25, i64 0
  %26 = load i32, i32* %arrayidx57, align 4, !tbaa !9
  %27 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise = bitcast %union.anon.79.747* %27 to %struct.v4l2_frmival_stepwise*
  %min = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise, i32 0, i32 0
  %numerator58 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %min, i32 0, i32 0
  store i32 %26, i32* %numerator58, align 4, !tbaa !104
  %28 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise59 = bitcast %union.anon.79.747* %28 to %struct.v4l2_frmival_stepwise*
  %min60 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise59, i32 0, i32 0
  %denominator61 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %min60, i32 0, i32 1
  store i32 10000000, i32* %denominator61, align 4, !tbaa !104
  %dwFrameInterval62 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %29 = load i32*, i32** %dwFrameInterval62, align 8, !tbaa !185
  %arrayidx63 = getelementptr inbounds i32, i32* %29, i64 1
  %30 = load i32, i32* %arrayidx63, align 4, !tbaa !9
  %31 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise64 = bitcast %union.anon.79.747* %31 to %struct.v4l2_frmival_stepwise*
  %max = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise64, i32 0, i32 1
  %numerator65 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %max, i32 0, i32 0
  store i32 %30, i32* %numerator65, align 4, !tbaa !104
  %32 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise66 = bitcast %union.anon.79.747* %32 to %struct.v4l2_frmival_stepwise*
  %max67 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise66, i32 0, i32 1
  %denominator68 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %max67, i32 0, i32 1
  store i32 10000000, i32* %denominator68, align 4, !tbaa !104
  %dwFrameInterval69 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %33 = load i32*, i32** %dwFrameInterval69, align 8, !tbaa !185
  %arrayidx70 = getelementptr inbounds i32, i32* %33, i64 2
  %34 = load i32, i32* %arrayidx70, align 4, !tbaa !9
  %35 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise71 = bitcast %union.anon.79.747* %35 to %struct.v4l2_frmival_stepwise*
  %step = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise71, i32 0, i32 2
  %numerator72 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %step, i32 0, i32 0
  store i32 %34, i32* %numerator72, align 4, !tbaa !104
  %36 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise73 = bitcast %union.anon.79.747* %36 to %struct.v4l2_frmival_stepwise*
  %step74 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise73, i32 0, i32 2
  %denominator75 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %step74, i32 0, i32 1
  store i32 10000000, i32* %denominator75, align 4, !tbaa !104
  %37 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise76 = bitcast %union.anon.79.747* %37 to %struct.v4l2_frmival_stepwise*
  %min77 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise76, i32 0, i32 0
  %numerator78 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %min77, i32 0, i32 0
  %38 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise79 = bitcast %union.anon.79.747* %38 to %struct.v4l2_frmival_stepwise*
  %min80 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise79, i32 0, i32 0
  %denominator81 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %min80, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator78, i32* %denominator81, i32 8, i32 333)
  %39 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise82 = bitcast %union.anon.79.747* %39 to %struct.v4l2_frmival_stepwise*
  %max83 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise82, i32 0, i32 1
  %numerator84 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %max83, i32 0, i32 0
  %40 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise85 = bitcast %union.anon.79.747* %40 to %struct.v4l2_frmival_stepwise*
  %max86 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise85, i32 0, i32 1
  %denominator87 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %max86, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator84, i32* %denominator87, i32 8, i32 333)
  %41 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise88 = bitcast %union.anon.79.747* %41 to %struct.v4l2_frmival_stepwise*
  %step89 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise88, i32 0, i32 2
  %numerator90 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %step89, i32 0, i32 0
  %42 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %fival, i32 0, i32 5
  %stepwise91 = bitcast %union.anon.79.747* %42 to %struct.v4l2_frmival_stepwise*
  %step92 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise91, i32 0, i32 2
  %denominator93 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %step92, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator90, i32* %denominator93, i32 8, i32 333)
  br label %cleanup

cleanup:                                          ; preds = %if.end54, %if.else, %if.end42, %if.then36, %for.end31, %for.end
  %retval.0 = phi i32 [ -22, %for.end ], [ -22, %for.end31 ], [ -22, %if.then36 ], [ -22, %if.else ], [ 0, %if.end54 ], [ 0, %if.end42 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_subscribe_event(%struct.v4l2_fh.753* %fh, %struct.v4l2_event_subscription* %sub) #0 {
entry:
  %type = getelementptr inbounds %struct.v4l2_event_subscription, %struct.v4l2_event_subscription* %sub, i32 0, i32 0
  %0 = load i32, i32* %type, align 4, !tbaa !296
  %cond = icmp eq i32 %0, 3
  br i1 %cond, label %sw.bb, label %return

sw.bb:                                            ; preds = %entry
  %call = call i32 @v4l2_event_subscribe(%struct.v4l2_fh.753* %fh, %struct.v4l2_event_subscription* %sub, i32 0, %struct.v4l2_subscribed_event_ops* bitcast ({ i32 (%struct.v4l2_subscribed_event.1377*, i32)*, void (%struct.v4l2_subscribed_event.1377*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }* @uvc_ctrl_sub_ev_ops to %struct.v4l2_subscribed_event_ops*))
  br label %return

return:                                           ; preds = %sw.bb, %entry
  %retval.0 = phi i32 [ %call, %sw.bb ], [ -22, %entry ]
  ret i32 %retval.0
}

declare i32 @v4l2_event_unsubscribe(%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*) #2

; Function Attrs: nounwind uwtable
define internal i64 @uvc_ioctl_default(%struct.file* %file, i8* %fh, i1 zeroext %valid_prio, i32 %cmd, i8* %arg) #0 {
entry:
  %frombool = zext i1 %valid_prio to i8
  %0 = bitcast i8* %fh to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %0, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  switch i32 %cmd, label %cleanup [
    i32 -1067420384, label %sw.bb
    i32 -1072663263, label %sw.bb2
  ]

sw.bb:                                            ; preds = %entry
  %2 = bitcast i8* %arg to %struct.uvc_xu_control_mapping*
  %call = call i32 @uvc_ioctl_ctrl_map(%struct.uvc_video_chain.869* %1, %struct.uvc_xu_control_mapping* %2)
  %conv = sext i32 %call to i64
  br label %cleanup

sw.bb2:                                           ; preds = %entry
  %3 = bitcast i8* %arg to %struct.uvc_xu_control_query*
  %call3 = call i32 @uvc_xu_ctrl_query(%struct.uvc_video_chain.869* %1, %struct.uvc_xu_control_query* %3)
  %conv4 = sext i32 %call3 to i64
  br label %cleanup

cleanup:                                          ; preds = %sw.bb2, %sw.bb, %entry
  %retval.0 = phi i64 [ %conv4, %sw.bb2 ], [ %conv, %sw.bb ], [ -25, %entry ]
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_ctrl_map(%struct.uvc_video_chain.869* %chain, %struct.uvc_xu_control_mapping* %xmap) #0 {
entry:
  %call = call i8* @kzalloc.137(i64 144, i32 20971712)
  %0 = bitcast i8* %call to %struct.uvc_control_mapping*
  %cmp = icmp eq %struct.uvc_control_mapping* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 0
  %1 = load i32, i32* %id, align 8, !tbaa !298
  %id1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 2
  store i32 %1, i32* %id1, align 8, !tbaa !300
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 1
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %name2, i32 0, i32 0
  %call4 = call i8* @__memcpy(i8* %arraydecay, i8* %arraydecay3, i64 32)
  %entity = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 4
  %arraydecay5 = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %entity6 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [16 x i8], [16 x i8]* %entity6, i32 0, i32 0
  %call8 = call i8* @__memcpy(i8* %arraydecay5, i8* %arraydecay7, i64 16)
  %selector = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 3
  %2 = load i8, i8* %selector, align 4, !tbaa !302
  %selector9 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 5
  store i8 %2, i8* %selector9, align 4, !tbaa !303
  %size10 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 4
  %3 = load i8, i8* %size10, align 1, !tbaa !304
  %size11 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 6
  store i8 %3, i8* %size11, align 1, !tbaa !305
  %offset = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 5
  %4 = load i8, i8* %offset, align 2, !tbaa !306
  %offset12 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 7
  store i8 %4, i8* %offset12, align 2, !tbaa !307
  %v4l2_type = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %5 = load i32, i32* %v4l2_type, align 8, !tbaa !308
  %v4l2_type13 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 8
  store i32 %5, i32* %v4l2_type13, align 8, !tbaa !309
  %data_type = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 7
  %6 = load i32, i32* %data_type, align 4, !tbaa !310
  %data_type14 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 9
  store i32 %6, i32* %data_type14, align 4, !tbaa !311
  %v4l2_type15 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %7 = load i32, i32* %v4l2_type15, align 8, !tbaa !308
  switch i32 %7, label %do.body [
    i32 1, label %sw.epilog
    i32 2, label %sw.epilog
    i32 4, label %sw.epilog
    i32 3, label %sw.bb16
  ]

sw.bb16:                                          ; preds = %if.end
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %8 = load i32, i32* %menu_count, align 8, !tbaa !312
  %cmp17 = icmp eq i32 %8, 0
  br i1 %cmp17, label %free_map, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb16
  %menu_count18 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %9 = load i32, i32* %menu_count18, align 8, !tbaa !312
  %cmp19 = icmp ugt i32 %9, 32
  br i1 %cmp19, label %free_map, label %if.end21

if.end21:                                         ; preds = %lor.lhs.false
  %menu_count22 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %10 = load i32, i32* %menu_count22, align 8, !tbaa !312
  %conv = zext i32 %10 to i64
  %mul = mul i64 %conv, 36
  %conv23 = trunc i64 %mul to i32
  %menu_info = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 8
  %11 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !313
  %12 = bitcast %struct.uvc_menu_info* %11 to i8*
  %conv24 = zext i32 %conv23 to i64
  %call25 = call i8* @memdup_user(i8* %12, i64 %conv24)
  %13 = bitcast i8* %call25 to %struct.uvc_menu_info*
  %menu_info26 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  store %struct.uvc_menu_info* %13, %struct.uvc_menu_info** %menu_info26, align 8, !tbaa !314
  %menu_info27 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %14 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info27, align 8, !tbaa !314
  %15 = bitcast %struct.uvc_menu_info* %14 to i8*
  %call28 = call zeroext i1 @IS_ERR(i8* %15)
  br i1 %call28, label %if.then29, label %if.end33

if.then29:                                        ; preds = %if.end21
  %menu_info30 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %16 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info30, align 8, !tbaa !314
  %17 = bitcast %struct.uvc_menu_info* %16 to i8*
  %call31 = call i64 @PTR_ERR(i8* %17)
  %conv32 = trunc i64 %call31 to i32
  br label %free_map

if.end33:                                         ; preds = %if.end21
  %menu_count34 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %18 = load i32, i32* %menu_count34, align 8, !tbaa !312
  %menu_count35 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 11
  store i32 %18, i32* %menu_count35, align 8, !tbaa !315
  br label %sw.epilog

do.body:                                          ; preds = %if.end
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %19, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then36, label %free_map

if.then36:                                        ; preds = %do.body
  %v4l2_type37 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %20 = load i32, i32* %v4l2_type37, align 8, !tbaa !308
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.6.138, i32 0, i32 0), i32 %20)
  br label %free_map

sw.epilog:                                        ; preds = %if.end33, %if.end, %if.end, %if.end
  %call40 = call i32 @uvc_ctrl_add_mapping(%struct.uvc_video_chain.869* %chain, %struct.uvc_control_mapping* %0)
  %menu_info41 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %21 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info41, align 8, !tbaa !314
  %22 = bitcast %struct.uvc_menu_info* %21 to i8*
  call void @kfree(i8* %22)
  br label %free_map

free_map:                                         ; preds = %sw.epilog, %if.then36, %do.body, %if.then29, %lor.lhs.false, %sw.bb16
  %ret.0 = phi i32 [ %conv32, %if.then29 ], [ %call40, %sw.epilog ], [ -22, %lor.lhs.false ], [ -22, %sw.bb16 ], [ -25, %if.then36 ], [ -25, %do.body ]
  %23 = bitcast %struct.uvc_control_mapping* %0 to i8*
  call void @kfree(i8* %23)
  br label %cleanup

cleanup:                                          ; preds = %free_map, %entry
  %retval.0 = phi i32 [ %ret.0, %free_map ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.137(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.139(i64 %size, i32 %or)
  ret i8* %call
}

declare i8* @memdup_user(i8*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @IS_ERR(i8* %ptr) #1 {
entry:
  %0 = ptrtoint i8* %ptr to i64
  %1 = inttoptr i64 %0 to i8*
  %2 = ptrtoint i8* %1 to i64
  %cmp = icmp uge i64 %2, -4095
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @PTR_ERR(i8* %ptr) #1 {
entry:
  %0 = ptrtoint i8* %ptr to i64
  ret i64 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.139(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare i32 @v4l2_event_subscribe(%struct.v4l2_fh.753*, %struct.v4l2_event_subscription*, i32, %struct.v4l2_subscribed_event_ops*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_acquire_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !316
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %stream = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream, align 8, !tbaa !241
  %active = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 4
  %call = call i32 @atomic_add_return(i32 1, %struct.atomic_t* %active)
  %cmp1 = icmp ne i32 %call, 1
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %stream3 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %2 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream3, align 8, !tbaa !241
  %active4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 4
  call void @atomic_dec(%struct.atomic_t* %active4)
  br label %return

if.end5:                                          ; preds = %if.end
  %state6 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  store i32 1, i32* %state6, align 8, !tbaa !316
  br label %return

return:                                           ; preds = %if.end5, %if.then2, %entry
  %retval.0 = phi i32 [ -16, %if.then2 ], [ 0, %if.end5 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_set_streamparm(%struct.uvc_streaming.870* %stream, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %timeperframe = alloca %struct.anon.26, align 4
  %0 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.anon.26* %timeperframe to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %type = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !317
  %type1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %3 = load i32, i32* %type1, align 8, !tbaa !124
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %type2 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %4 = load i32, i32* %type2, align 4, !tbaa !317
  %cmp3 = icmp eq i32 %4, 1
  %parm5 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %capture = bitcast %union.anon.55* %parm5 to %struct.v4l2_captureparm*
  %timeperframe6 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture, i32 0, i32 2
  %5 = bitcast %struct.anon.26* %timeperframe to i8*
  %6 = bitcast %struct.anon.26* %timeperframe6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false), !tbaa.struct !319
  br label %if.end9

if.else:                                          ; preds = %if.end
  %output = bitcast %union.anon.55* %parm5 to %struct.v4l2_captureparm*
  %timeperframe8 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output, i32 0, i32 2
  %7 = bitcast %struct.anon.26* %timeperframe to i8*
  %8 = bitcast %struct.anon.26* %timeperframe8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !tbaa.struct !319
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then4
  %numerator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 0
  %9 = load i32, i32* %numerator, align 4, !tbaa !320
  %denominator = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 1
  %10 = load i32, i32* %denominator, align 4, !tbaa !322
  %call = call i32 @uvc_fraction_to_interval(i32 %9, i32 %10)
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %11, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then10, label %do.end

if.then10:                                        ; preds = %if.end9
  %numerator11 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 0
  %12 = load i32, i32* %numerator11, align 4, !tbaa !320
  %denominator12 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 1
  %13 = load i32, i32* %denominator12, align 4, !tbaa !322
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.5.140, i32 0, i32 0), i32 %12, i32 %13, i32 %call)
  br label %do.end

do.end:                                           ; preds = %if.then10, %if.end9
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call15 = call i32 @uvc_queue_streaming(%struct.uvc_video_queue* %queue)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %do.end
  %mutex18 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex18)
  br label %cleanup

if.end19:                                         ; preds = %do.end
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %14 = bitcast %struct.uvc_streaming_control* %probe to i8*
  %15 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 34, i32 1, i1 false), !tbaa.struct !323
  %cur_frame = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 15
  %16 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !283
  %call20 = call i32 @uvc_try_frame_interval(%struct.uvc_frame* %16, i32 %call)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  store i32 %call20, i32* %dwFrameInterval, align 1, !tbaa !324
  %call21 = call i32 @uvc_probe_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end19
  %mutex24 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex24)
  br label %cleanup

if.end25:                                         ; preds = %if.end19
  %ctrl26 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %17 = bitcast %struct.uvc_streaming_control* %ctrl26 to i8*
  %18 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 34, i32 1, i1 false), !tbaa.struct !323
  %mutex27 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex27)
  %dwFrameInterval28 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  %19 = load i32, i32* %dwFrameInterval28, align 1, !tbaa !324
  %numerator29 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 0
  store i32 %19, i32* %numerator29, align 4, !tbaa !320
  %denominator30 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 1
  store i32 10000000, i32* %denominator30, align 4, !tbaa !322
  %numerator31 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 0
  %denominator32 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator31, i32* %denominator32, i32 8, i32 333)
  %type33 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %20 = load i32, i32* %type33, align 4, !tbaa !317
  %cmp34 = icmp eq i32 %20, 1
  %parm36 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp34, label %if.then35, label %if.else39

if.then35:                                        ; preds = %if.end25
  %capture37 = bitcast %union.anon.55* %parm36 to %struct.v4l2_captureparm*
  %timeperframe38 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture37, i32 0, i32 2
  %21 = bitcast %struct.anon.26* %timeperframe38 to i8*
  %22 = bitcast %struct.anon.26* %timeperframe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !319
  br label %cleanup

if.else39:                                        ; preds = %if.end25
  %output41 = bitcast %union.anon.55* %parm36 to %struct.v4l2_captureparm*
  %timeperframe42 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output41, i32 0, i32 2
  %23 = bitcast %struct.anon.26* %timeperframe42 to i8*
  %24 = bitcast %struct.anon.26* %timeperframe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false), !tbaa.struct !319
  br label %cleanup

cleanup:                                          ; preds = %if.else39, %if.then35, %if.then23, %if.then17, %entry
  %retval.0 = phi i32 [ -16, %if.then17 ], [ %call21, %if.then23 ], [ -22, %entry ], [ 0, %if.else39 ], [ 0, %if.then35 ]
  %25 = bitcast %struct.anon.26* %timeperframe to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #8
  %26 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %26) #8
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_queue_streaming(%struct.uvc_video_queue* %queue) #1 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_try_frame_interval(%struct.uvc_frame* %frame, i32 %interval) #0 {
entry:
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 7
  %0 = load i8, i8* %bFrameIntervalType, align 4, !tbaa !182
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ]
  %best.0 = phi i32 [ -1, %if.then ], [ %cond, %for.inc ]
  %bFrameIntervalType1 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 7
  %1 = load i8, i8* %bFrameIntervalType1, align 4, !tbaa !182
  %conv = zext i8 %1 to i32
  %cmp = icmp ult i32 %i.0, %conv
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %2 = load i32*, i32** %dwFrameInterval, align 8, !tbaa !185
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !9
  %cmp3 = icmp ugt i32 %interval, %3
  %dwFrameInterval5 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %4 = load i32*, i32** %dwFrameInterval5, align 8, !tbaa !185
  %idxprom6 = zext i32 %i.0 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %4, i64 %idxprom6
  %5 = load i32, i32* %arrayidx7, align 4, !tbaa !9
  %sub = sub i32 %interval, %5
  %sub11 = sub i32 %5, %interval
  %cond = select i1 %cmp3, i32 %sub, i32 %sub11
  %cmp12 = icmp ugt i32 %cond, %best.0
  br i1 %cmp12, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %dwFrameInterval15 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %6 = load i32*, i32** %dwFrameInterval15, align 8, !tbaa !185
  %sub16 = sub i32 %i.0, 1
  %idxprom17 = zext i32 %sub16 to i64
  %arrayidx18 = getelementptr inbounds i32, i32* %6, i64 %idxprom17
  %7 = load i32, i32* %arrayidx18, align 4, !tbaa !9
  br label %if.end32

if.else:                                          ; preds = %entry
  %dwFrameInterval19 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %8 = load i32*, i32** %dwFrameInterval19, align 8, !tbaa !185
  %arrayidx20 = getelementptr inbounds i32, i32* %8, i64 0
  %9 = load i32, i32* %arrayidx20, align 4, !tbaa !9
  %dwFrameInterval21 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %10 = load i32*, i32** %dwFrameInterval21, align 8, !tbaa !185
  %arrayidx22 = getelementptr inbounds i32, i32* %10, i64 1
  %11 = load i32, i32* %arrayidx22, align 4, !tbaa !9
  %dwFrameInterval23 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %12 = load i32*, i32** %dwFrameInterval23, align 8, !tbaa !185
  %arrayidx24 = getelementptr inbounds i32, i32* %12, i64 2
  %13 = load i32, i32* %arrayidx24, align 4, !tbaa !9
  %sub25 = sub i32 %interval, %9
  %div = udiv i32 %13, 2
  %add = add i32 %sub25, %div
  %div26 = udiv i32 %add, %13
  %mul = mul i32 %div26, %13
  %add27 = add i32 %9, %mul
  %cmp28 = icmp ugt i32 %add27, %11
  %.add27 = select i1 %cmp28, i32 %11, i32 %add27
  br label %if.end32

if.end32:                                         ; preds = %if.else, %for.end
  %interval.addr.1 = phi i32 [ %7, %for.end ], [ %.add27, %if.else ]
  ret i32 %interval.addr.1
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %q) #1 {
entry:
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 26
  %bf.load = load i8, i8* %streaming, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_add_return(i32 %i, %struct.atomic_t* %v) #3 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32 %i, i32* %counter) #8, !srcloc !325
  %add = add nsw i32 %i, %0
  ret i32 %add
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_dec(%struct.atomic_t* %v) #3 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !326
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_streamparm(%struct.uvc_streaming.870* %stream, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %numerator = alloca i32, align 4
  %denominator = alloca i32, align 4
  %0 = bitcast i32* %numerator to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast i32* %denominator to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %type = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !317
  %type1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %3 = load i32, i32* %type1, align 8, !tbaa !124
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %4 = load i32, i32* %dwFrameInterval, align 4, !tbaa !327
  store i32 %4, i32* %numerator, align 4, !tbaa !9
  %mutex2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex2)
  store i32 10000000, i32* %denominator, align 4, !tbaa !9
  call void @uvc_simplify_fraction(i32* %numerator, i32* %denominator, i32 8, i32 333)
  %5 = bitcast %struct.v4l2_streamparm* %parm to i8*
  %call = call i8* @__memset(i8* %5, i32 0, i64 204)
  %type3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %6 = load i32, i32* %type3, align 8, !tbaa !124
  %type4 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  store i32 %6, i32* %type4, align 4, !tbaa !317
  %type5 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %7 = load i32, i32* %type5, align 8, !tbaa !124
  %cmp6 = icmp eq i32 %7, 1
  %parm8 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %capture = bitcast %union.anon.55* %parm8 to %struct.v4l2_captureparm*
  %capability = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture, i32 0, i32 0
  store i32 4096, i32* %capability, align 4, !tbaa !104
  %parm9 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture10 = bitcast %union.anon.55* %parm9 to %struct.v4l2_captureparm*
  %capturemode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture10, i32 0, i32 1
  store i32 0, i32* %capturemode, align 4, !tbaa !104
  %8 = load i32, i32* %numerator, align 4, !tbaa !9
  %parm11 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture12 = bitcast %union.anon.55* %parm11 to %struct.v4l2_captureparm*
  %timeperframe = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture12, i32 0, i32 2
  %numerator13 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe, i32 0, i32 0
  store i32 %8, i32* %numerator13, align 4, !tbaa !104
  %9 = load i32, i32* %denominator, align 4, !tbaa !9
  %parm14 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture15 = bitcast %union.anon.55* %parm14 to %struct.v4l2_captureparm*
  %timeperframe16 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture15, i32 0, i32 2
  %denominator17 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe16, i32 0, i32 1
  store i32 %9, i32* %denominator17, align 4, !tbaa !104
  %parm18 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture19 = bitcast %union.anon.55* %parm18 to %struct.v4l2_captureparm*
  %extendedmode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture19, i32 0, i32 3
  store i32 0, i32* %extendedmode, align 4, !tbaa !104
  %parm20 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture21 = bitcast %union.anon.55* %parm20 to %struct.v4l2_captureparm*
  %readbuffers = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture21, i32 0, i32 4
  store i32 0, i32* %readbuffers, align 4, !tbaa !104
  br label %cleanup

if.else:                                          ; preds = %if.end
  %output = bitcast %union.anon.55* %parm8 to %struct.v4l2_captureparm*
  %capability23 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output, i32 0, i32 0
  store i32 4096, i32* %capability23, align 4, !tbaa !104
  %parm24 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output25 = bitcast %union.anon.55* %parm24 to %struct.v4l2_captureparm*
  %outputmode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output25, i32 0, i32 1
  store i32 0, i32* %outputmode, align 4, !tbaa !104
  %10 = load i32, i32* %numerator, align 4, !tbaa !9
  %parm26 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output27 = bitcast %union.anon.55* %parm26 to %struct.v4l2_captureparm*
  %timeperframe28 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output27, i32 0, i32 2
  %numerator29 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe28, i32 0, i32 0
  store i32 %10, i32* %numerator29, align 4, !tbaa !104
  %11 = load i32, i32* %denominator, align 4, !tbaa !9
  %parm30 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output31 = bitcast %union.anon.55* %parm30 to %struct.v4l2_captureparm*
  %timeperframe32 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output31, i32 0, i32 2
  %denominator33 = getelementptr inbounds %struct.anon.26, %struct.anon.26* %timeperframe32, i32 0, i32 1
  store i32 %11, i32* %denominator33, align 4, !tbaa !104
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then7, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.else ], [ 0, %if.then7 ]
  %12 = bitcast i32* %denominator to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #8
  %13 = bitcast i32* %numerator to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %13) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_s_try_ext_ctrls(%struct.uvc_fh* %handle, %struct.v4l2_ext_controls* %ctrls, i1 zeroext %commit) #0 {
entry:
  %frombool = zext i1 %commit to i8
  %controls = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 4
  %0 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls, align 8, !tbaa !273
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %2 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 0
  %which = bitcast %struct.atomic_t* %2 to i32*
  %3 = load i32, i32* %which, align 8, !tbaa !104
  %cmp = icmp eq i32 %3, 251658240
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain.869* %1)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end4
  %ctrl.0 = phi %struct.v4l2_ext_control* [ %0, %if.end4 ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end4 ], [ %inc, %for.inc ]
  %count = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 1
  %4 = load i32, i32* %count, align 4, !tbaa !275
  %cmp5 = icmp ult i32 %i.0, %4
  br i1 %cmp5, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call6 = call i32 @uvc_ctrl_set(%struct.uvc_video_chain.869* %1, %struct.v4l2_ext_control* %ctrl.0)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %for.inc

if.then8:                                         ; preds = %for.body
  %call9 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %handle)
  %tobool = trunc i8 %frombool to i1
  br i1 %tobool, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then8
  %count10 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 1
  %5 = load i32, i32* %count10, align 4, !tbaa !275
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then8
  %cond = phi i32 [ %5, %cond.true ], [ %i.0, %if.then8 ]
  %error_idx = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 2
  store i32 %cond, i32* %error_idx, align 8, !tbaa !276
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl.0, i32 1
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %error_idx12 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 2
  store i32 0, i32* %error_idx12, align 8, !tbaa !276
  %tobool13 = trunc i8 %frombool to i1
  br i1 %tobool13, label %if.then14, label %if.else

if.then14:                                        ; preds = %for.end
  %controls15 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 4
  %6 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls15, align 8, !tbaa !273
  %count16 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %ctrls, i32 0, i32 1
  %7 = load i32, i32* %count16, align 4, !tbaa !275
  %call17 = call i32 @uvc_ctrl_commit(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %6, i32 %7)
  br label %cleanup

if.else:                                          ; preds = %for.end
  %call18 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %handle)
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then14, %cond.end, %if.end, %entry
  %retval.0 = phi i32 [ %call6, %cond.end ], [ %call17, %if.then14 ], [ %call18, %if.else ], [ -22, %entry ], [ %call, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_ctrl_rollback(%struct.uvc_fh* %handle) #1 {
entry:
  %call = call i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 1, %struct.v4l2_ext_control* null, i32 0)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_ctrl_commit(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #1 {
entry:
  %call = call i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 0, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  ret i32 %call
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @uvc_has_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !316
  %cmp = icmp eq i32 %0, 1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal void @uvc_dismiss_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !316
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %stream = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %1 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream, align 8, !tbaa !241
  %active = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 4
  call void @atomic_dec(%struct.atomic_t* %active)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %state1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  store i32 0, i32* %state1, align 8, !tbaa !316
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_try_format(%struct.uvc_streaming.870* %stream, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** %uvc_format, %struct.uvc_frame** %uvc_frame) #0 {
entry:
  %__UNIQUE_ID_min1_22 = alloca i16, align 2
  %__UNIQUE_ID_min2_23 = alloca i16, align 2
  %__UNIQUE_ID_min1_24 = alloca i16, align 2
  %__UNIQUE_ID_min2_25 = alloca i16, align 2
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !328
  %type1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %1 = load i32, i32* %type1, align 8, !tbaa !124
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %cleanup175, label %if.end

if.end:                                           ; preds = %entry
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.61* %fmt2 to %struct.v4l2_pix_format*
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  %2 = bitcast i32* %pixelformat to i8*
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %3, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %do.end

if.then3:                                         ; preds = %if.end
  %fmt4 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix5 = bitcast %union.anon.61* %fmt4 to %struct.v4l2_pix_format*
  %pixelformat6 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix5, i32 0, i32 2
  %4 = load i32, i32* %pixelformat6, align 8, !tbaa !104
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %5 to i32
  %arrayidx7 = getelementptr inbounds i8, i8* %2, i64 1
  %6 = load i8, i8* %arrayidx7, align 1, !tbaa !104
  %conv8 = zext i8 %6 to i32
  %arrayidx9 = getelementptr inbounds i8, i8* %2, i64 2
  %7 = load i8, i8* %arrayidx9, align 1, !tbaa !104
  %conv10 = zext i8 %7 to i32
  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 3
  %8 = load i8, i8* %arrayidx11, align 1, !tbaa !104
  %conv12 = zext i8 %8 to i32
  %fmt13 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix14 = bitcast %union.anon.61* %fmt13 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix14, i32 0, i32 0
  %9 = load i32, i32* %width, align 8, !tbaa !104
  %fmt15 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix16 = bitcast %union.anon.61* %fmt15 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix16, i32 0, i32 1
  %10 = load i32, i32* %height, align 4, !tbaa !104
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.2.141, i32 0, i32 0), i32 %4, i32 %conv, i32 %conv8, i32 %conv10, i32 %conv12, i32 %9, i32 %10)
  br label %do.end

do.end:                                           ; preds = %if.then3, %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %format.0 = phi %struct.uvc_format* [ null, %do.end ], [ %arrayidx21, %for.inc ]
  %i.0 = phi i32 [ 0, %do.end ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %11 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp18 = icmp ult i32 %i.0, %11
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format20 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 11
  %12 = load %struct.uvc_format*, %struct.uvc_format** %format20, align 8, !tbaa !100
  %idxprom = zext i32 %i.0 to i64
  %arrayidx21 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %12, i64 %idxprom
  %fcc22 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx21, i32 0, i32 4
  %13 = load i32, i32* %fcc22, align 4, !tbaa !179
  %fmt23 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix24 = bitcast %union.anon.61* %fmt23 to %struct.v4l2_pix_format*
  %pixelformat25 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix24, i32 0, i32 2
  %14 = load i32, i32* %pixelformat25, align 8, !tbaa !104
  %cmp26 = icmp eq i32 %13, %14
  br i1 %cmp26, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %format.1 = phi %struct.uvc_format* [ %arrayidx21, %for.body ], [ %format.0, %for.cond ]
  %nformats30 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %15 = load i32, i32* %nformats30, align 4, !tbaa !163
  %cmp31 = icmp eq i32 %i.0, %15
  br i1 %cmp31, label %if.then33, label %if.end38

if.then33:                                        ; preds = %for.end
  %def_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 13
  %16 = load %struct.uvc_format*, %struct.uvc_format** %def_format, align 8, !tbaa !330
  %fcc34 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %16, i32 0, i32 4
  %17 = load i32, i32* %fcc34, align 4, !tbaa !179
  %fmt35 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix36 = bitcast %union.anon.61* %fmt35 to %struct.v4l2_pix_format*
  %pixelformat37 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix36, i32 0, i32 2
  store i32 %17, i32* %pixelformat37, align 8, !tbaa !104
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %for.end
  %format.2 = phi %struct.uvc_format* [ %16, %if.then33 ], [ %format.1, %for.end ]
  %fmt39 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix40 = bitcast %union.anon.61* %fmt39 to %struct.v4l2_pix_format*
  %width41 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix40, i32 0, i32 0
  %18 = load i32, i32* %width41, align 8, !tbaa !104
  %conv42 = trunc i32 %18 to i16
  %fmt43 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix44 = bitcast %union.anon.61* %fmt43 to %struct.v4l2_pix_format*
  %height45 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix44, i32 0, i32 1
  %19 = load i32, i32* %height45, align 4, !tbaa !104
  %conv46 = trunc i32 %19 to i16
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc97, %if.end38
  %frame.0 = phi %struct.uvc_frame* [ null, %if.end38 ], [ %frame.1, %for.inc97 ]
  %maxd.0 = phi i32 [ -1, %if.end38 ], [ %maxd.1, %for.inc97 ]
  %i.1 = phi i32 [ 0, %if.end38 ], [ %inc98, %for.inc97 ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 7
  %20 = load i32, i32* %nframes, align 4, !tbaa !166
  %cmp48 = icmp ult i32 %i.1, %20
  br i1 %cmp48, label %for.body50, label %for.end99

for.body50:                                       ; preds = %for.cond47
  %frame51 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %21 = load %struct.uvc_frame*, %struct.uvc_frame** %frame51, align 8, !tbaa !164
  %idxprom52 = zext i32 %i.1 to i64
  %arrayidx53 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %21, i64 %idxprom52
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx53, i32 0, i32 2
  %22 = load i16, i16* %wWidth, align 2, !tbaa !188
  %frame54 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %23 = load %struct.uvc_frame*, %struct.uvc_frame** %frame54, align 8, !tbaa !164
  %idxprom55 = zext i32 %i.1 to i64
  %arrayidx56 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %23, i64 %idxprom55
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx56, i32 0, i32 3
  %24 = load i16, i16* %wHeight, align 4, !tbaa !189
  %25 = bitcast i16* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %25) #8
  store i16 %22, i16* %__UNIQUE_ID_min1_22, align 2, !tbaa !142
  %26 = bitcast i16* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %26) #8
  store i16 %conv42, i16* %__UNIQUE_ID_min2_23, align 2, !tbaa !142
  %cmp57 = icmp eq i16* %__UNIQUE_ID_min1_22, %__UNIQUE_ID_min2_23
  %conv58 = zext i1 %cmp57 to i32
  %27 = load i16, i16* %__UNIQUE_ID_min1_22, align 2, !tbaa !142
  %conv59 = zext i16 %27 to i32
  %28 = load i16, i16* %__UNIQUE_ID_min2_23, align 2, !tbaa !142
  %conv60 = zext i16 %28 to i32
  %cmp61 = icmp slt i32 %conv59, %conv60
  %29 = load i16, i16* %__UNIQUE_ID_min2_23, align 2
  %30 = load i16, i16* %__UNIQUE_ID_min1_22, align 2
  %.sink = select i1 %cmp61, i16 %30, i16 %29
  %conv64 = zext i16 %.sink to i32
  %31 = bitcast i16* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %31) #8
  %32 = bitcast i16* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %32) #8
  %33 = bitcast i16* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %33) #8
  store i16 %24, i16* %__UNIQUE_ID_min1_24, align 2, !tbaa !142
  %34 = bitcast i16* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %34) #8
  store i16 %conv46, i16* %__UNIQUE_ID_min2_25, align 2, !tbaa !142
  %cmp65 = icmp eq i16* %__UNIQUE_ID_min1_24, %__UNIQUE_ID_min2_25
  %conv66 = zext i1 %cmp65 to i32
  %35 = load i16, i16* %__UNIQUE_ID_min1_24, align 2, !tbaa !142
  %conv68 = zext i16 %35 to i32
  %36 = load i16, i16* %__UNIQUE_ID_min2_25, align 2, !tbaa !142
  %conv69 = zext i16 %36 to i32
  %cmp70 = icmp slt i32 %conv68, %conv69
  %37 = load i16, i16* %__UNIQUE_ID_min2_25, align 2
  %38 = load i16, i16* %__UNIQUE_ID_min1_24, align 2
  %.sink1 = select i1 %cmp70, i16 %38, i16 %37
  %conv75 = zext i16 %.sink1 to i32
  %39 = bitcast i16* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %39) #8
  %40 = bitcast i16* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %40) #8
  %mul = mul nsw i32 %conv64, %conv75
  %conv78 = zext i16 %22 to i32
  %conv79 = zext i16 %24 to i32
  %mul80 = mul nsw i32 %conv78, %conv79
  %conv81 = zext i16 %conv42 to i32
  %conv82 = zext i16 %conv46 to i32
  %mul83 = mul nsw i32 %conv81, %conv82
  %add = add nsw i32 %mul80, %mul83
  %mul84 = mul i32 2, %mul
  %sub = sub i32 %add, %mul84
  %cmp85 = icmp ult i32 %sub, %maxd.0
  br i1 %cmp85, label %if.then87, label %if.end91

if.then87:                                        ; preds = %for.body50
  %frame88 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %41 = load %struct.uvc_frame*, %struct.uvc_frame** %frame88, align 8, !tbaa !164
  %idxprom89 = zext i32 %i.1 to i64
  %arrayidx90 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %41, i64 %idxprom89
  br label %if.end91

if.end91:                                         ; preds = %if.then87, %for.body50
  %frame.1 = phi %struct.uvc_frame* [ %arrayidx90, %if.then87 ], [ %frame.0, %for.body50 ]
  %maxd.1 = phi i32 [ %sub, %if.then87 ], [ %maxd.0, %for.body50 ]
  %cmp92 = icmp eq i32 %maxd.1, 0
  br i1 %cmp92, label %for.end99, label %for.inc97

for.inc97:                                        ; preds = %if.end91
  %inc98 = add i32 %i.1, 1
  br label %for.cond47

for.end99:                                        ; preds = %if.end91, %for.cond47
  %frame.2 = phi %struct.uvc_frame* [ %frame.1, %if.end91 ], [ %frame.0, %for.cond47 ]
  %cmp100 = icmp eq %struct.uvc_frame* %frame.2, null
  br i1 %cmp100, label %do.body103, label %if.end117

do.body103:                                       ; preds = %for.end99
  %42 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and104 = and i32 %42, 8
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %if.then106, label %cleanup175

if.then106:                                       ; preds = %do.body103
  %fmt107 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix108 = bitcast %union.anon.61* %fmt107 to %struct.v4l2_pix_format*
  %width109 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix108, i32 0, i32 0
  %43 = load i32, i32* %width109, align 8, !tbaa !104
  %fmt110 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix111 = bitcast %union.anon.61* %fmt110 to %struct.v4l2_pix_format*
  %height112 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix111, i32 0, i32 1
  %44 = load i32, i32* %height112, align 4, !tbaa !104
  %call113 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3.142, i32 0, i32 0), i32 %43, i32 %44)
  br label %cleanup175

if.end117:                                        ; preds = %for.end99
  %dwDefaultFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 8
  %45 = load i32, i32* %dwDefaultFrameInterval, align 8, !tbaa !184
  %46 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and119 = and i32 %46, 8
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %if.then121, label %do.end128

if.then121:                                       ; preds = %if.end117
  %div = udiv i32 %45, 10
  %rem = urem i32 %45, 10
  %div122 = udiv i32 10000000, %45
  %div123 = udiv i32 100000000, %45
  %rem124 = urem i32 %div123, 10
  %call125 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.4.143, i32 0, i32 0), i32 %div, i32 %rem, i32 %div122, i32 %rem124)
  br label %do.end128

do.end128:                                        ; preds = %if.then121, %if.end117
  %47 = bitcast %struct.uvc_streaming_control* %probe to i8*
  %call129 = call i8* @__memset(i8* %47, i32 0, i64 34)
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 0
  store i16 1, i16* %bmHint, align 1, !tbaa !331
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 1
  %48 = load i8, i8* %index, align 1, !tbaa !175
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 1
  store i8 %48, i8* %bFormatIndex, align 1, !tbaa !332
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 0
  %49 = load i8, i8* %bFrameIndex, align 8, !tbaa !186
  %bFrameIndex130 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 2
  store i8 %49, i8* %bFrameIndex130, align 1, !tbaa !333
  %call131 = call i32 @uvc_try_frame_interval(%struct.uvc_frame* %frame.2, i32 %45)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  store i32 %call131, i32* %dwFrameInterval, align 1, !tbaa !324
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %50 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %50, i32 0, i32 3
  %51 = load i32, i32* %quirks, align 8, !tbaa !53
  %and132 = and i32 %51, 4
  %tobool133 = icmp ne i32 %and132, 0
  br i1 %tobool133, label %if.then134, label %if.end136

if.then134:                                       ; preds = %do.end128
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %52 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !206
  %dwMaxVideoFrameSize135 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 9
  store i32 %52, i32* %dwMaxVideoFrameSize135, align 1, !tbaa !334
  br label %if.end136

if.end136:                                        ; preds = %if.then134, %do.end128
  %call137 = call i32 @uvc_probe_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe)
  %mutex138 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex138)
  %cmp139 = icmp slt i32 %call137, 0
  br i1 %cmp139, label %cleanup175, label %if.end142

if.end142:                                        ; preds = %if.end136
  %wWidth143 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 2
  %53 = load i16, i16* %wWidth143, align 2, !tbaa !188
  %conv144 = zext i16 %53 to i32
  %fmt145 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix146 = bitcast %union.anon.61* %fmt145 to %struct.v4l2_pix_format*
  %width147 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix146, i32 0, i32 0
  store i32 %conv144, i32* %width147, align 8, !tbaa !104
  %wHeight148 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 3
  %54 = load i16, i16* %wHeight148, align 4, !tbaa !189
  %conv149 = zext i16 %54 to i32
  %fmt150 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix151 = bitcast %union.anon.61* %fmt150 to %struct.v4l2_pix_format*
  %height152 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix151, i32 0, i32 1
  store i32 %conv149, i32* %height152, align 4, !tbaa !104
  %fmt153 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix154 = bitcast %union.anon.61* %fmt153 to %struct.v4l2_pix_format*
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix154, i32 0, i32 3
  store i32 1, i32* %field, align 4, !tbaa !104
  %call155 = call i32 @uvc_v4l2_get_bytesperline(%struct.uvc_format* %format.2, %struct.uvc_frame* %frame.2)
  %fmt156 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix157 = bitcast %union.anon.61* %fmt156 to %struct.v4l2_pix_format*
  %bytesperline = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix157, i32 0, i32 4
  store i32 %call155, i32* %bytesperline, align 8, !tbaa !104
  %dwMaxVideoFrameSize158 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 9
  %55 = load i32, i32* %dwMaxVideoFrameSize158, align 1, !tbaa !334
  %fmt159 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix160 = bitcast %union.anon.61* %fmt159 to %struct.v4l2_pix_format*
  %sizeimage = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix160, i32 0, i32 5
  store i32 %55, i32* %sizeimage, align 4, !tbaa !104
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 3
  %56 = load i8, i8* %colorspace, align 1, !tbaa !193
  %conv161 = zext i8 %56 to i32
  %fmt162 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix163 = bitcast %union.anon.61* %fmt162 to %struct.v4l2_pix_format*
  %colorspace164 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix163, i32 0, i32 6
  store i32 %conv161, i32* %colorspace164, align 8, !tbaa !104
  %fmt165 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix166 = bitcast %union.anon.61* %fmt165 to %struct.v4l2_pix_format*
  %priv = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix166, i32 0, i32 7
  store i32 0, i32* %priv, align 4, !tbaa !104
  %cmp167 = icmp ne %struct.uvc_format** %uvc_format, null
  br i1 %cmp167, label %if.then169, label %if.end170

if.then169:                                       ; preds = %if.end142
  store %struct.uvc_format* %format.2, %struct.uvc_format** %uvc_format, align 8, !tbaa !74
  br label %if.end170

if.end170:                                        ; preds = %if.then169, %if.end142
  %cmp171 = icmp ne %struct.uvc_frame** %uvc_frame, null
  br i1 %cmp171, label %if.then173, label %cleanup175

if.then173:                                       ; preds = %if.end170
  store %struct.uvc_frame* %frame.2, %struct.uvc_frame** %uvc_frame, align 8, !tbaa !74
  br label %cleanup175

cleanup175:                                       ; preds = %if.then173, %if.end170, %if.end136, %if.then106, %do.body103, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ -22, %if.then106 ], [ -22, %do.body103 ], [ %call137, %if.end170 ], [ %call137, %if.then173 ], [ %call137, %if.end136 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_bytesperline(%struct.uvc_format* %format, %struct.uvc_frame* %frame) #0 {
entry:
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  %0 = load i32, i32* %fcc, align 4, !tbaa !179
  switch i32 %0, label %sw.default [
    i32 842094158, label %sw.bb
    i32 842094169, label %sw.bb
    i32 842093913, label %sw.bb
    i32 808596557, label %sw.bb
  ]

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 2
  %1 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv = zext i16 %1 to i32
  br label %return

sw.default:                                       ; preds = %entry
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  %2 = load i8, i8* %bpp, align 2, !tbaa !180
  %conv1 = zext i8 %2 to i32
  %wWidth2 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 2
  %3 = load i16, i16* %wWidth2, align 2, !tbaa !188
  %conv3 = zext i16 %3 to i32
  %mul = mul nsw i32 %conv1, %conv3
  %div = sdiv i32 %mul, 8
  br label %return

return:                                           ; preds = %sw.default, %sw.bb
  %retval.0 = phi i32 [ %div, %sw.default ], [ %conv, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_set_format(%struct.uvc_streaming.870* %stream, %struct.v4l2_format* %fmt) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %format = alloca %struct.uvc_format*, align 8
  %frame = alloca %struct.uvc_frame*, align 8
  %0 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.uvc_format** %format to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %2 = bitcast %struct.uvc_frame** %frame to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %3 = load i32, i32* %type, align 8, !tbaa !328
  %type1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %4 = load i32, i32* %type1, align 8, !tbaa !124
  %cmp = icmp ne i32 %3, %4
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_v4l2_try_format(%struct.uvc_streaming.870* %stream, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** %format, %struct.uvc_frame** %frame)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call5 = call i32 @uvc_queue_allocated(%struct.uvc_video_queue* %queue)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %done, label %if.end7

if.end7:                                          ; preds = %if.end4
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %5 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  %6 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 34, i32 1, i1 false), !tbaa.struct !323
  %7 = load %struct.uvc_format*, %struct.uvc_format** %format, align 8, !tbaa !74
  %cur_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 14
  store %struct.uvc_format* %7, %struct.uvc_format** %cur_format, align 8, !tbaa !335
  %8 = load %struct.uvc_frame*, %struct.uvc_frame** %frame, align 8, !tbaa !74
  %cur_frame = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 15
  store %struct.uvc_frame* %8, %struct.uvc_frame** %cur_frame, align 8, !tbaa !283
  br label %done

done:                                             ; preds = %if.end7, %if.end4
  %ret.0 = phi i32 [ %call, %if.end7 ], [ -16, %if.end4 ]
  %mutex8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex8)
  br label %cleanup

cleanup:                                          ; preds = %done, %if.end, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %entry ], [ %call, %if.end ]
  %9 = bitcast %struct.uvc_frame** %frame to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast %struct.uvc_format** %format to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %11 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %11) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_format(%struct.uvc_streaming.870* %stream, %struct.v4l2_format* %fmt) #0 {
entry:
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !328
  %type1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %1 = load i32, i32* %type1, align 8, !tbaa !124
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %cur_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 14
  %2 = load %struct.uvc_format*, %struct.uvc_format** %cur_format, align 8, !tbaa !335
  %cur_frame = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 15
  %3 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !283
  %cmp2 = icmp eq %struct.uvc_format* %2, null
  %cmp3 = icmp eq %struct.uvc_frame* %3, null
  %or.cond = or i1 %cmp2, %cmp3
  br i1 %or.cond, label %done, label %if.end5

if.end5:                                          ; preds = %if.end
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 4
  %4 = load i32, i32* %fcc, align 4, !tbaa !179
  %fmt6 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.61* %fmt6 to %struct.v4l2_pix_format*
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  store i32 %4, i32* %pixelformat, align 8, !tbaa !104
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %3, i32 0, i32 2
  %5 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv = zext i16 %5 to i32
  %fmt7 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix8 = bitcast %union.anon.61* %fmt7 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix8, i32 0, i32 0
  store i32 %conv, i32* %width, align 8, !tbaa !104
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %3, i32 0, i32 3
  %6 = load i16, i16* %wHeight, align 4, !tbaa !189
  %conv9 = zext i16 %6 to i32
  %fmt10 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix11 = bitcast %union.anon.61* %fmt10 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix11, i32 0, i32 1
  store i32 %conv9, i32* %height, align 4, !tbaa !104
  %fmt12 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix13 = bitcast %union.anon.61* %fmt12 to %struct.v4l2_pix_format*
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix13, i32 0, i32 3
  store i32 1, i32* %field, align 4, !tbaa !104
  %call = call i32 @uvc_v4l2_get_bytesperline(%struct.uvc_format* %2, %struct.uvc_frame* %3)
  %fmt14 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix15 = bitcast %union.anon.61* %fmt14 to %struct.v4l2_pix_format*
  %bytesperline = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix15, i32 0, i32 4
  store i32 %call, i32* %bytesperline, align 8, !tbaa !104
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %7 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !206
  %fmt16 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix17 = bitcast %union.anon.61* %fmt16 to %struct.v4l2_pix_format*
  %sizeimage = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix17, i32 0, i32 5
  store i32 %7, i32* %sizeimage, align 4, !tbaa !104
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 3
  %8 = load i8, i8* %colorspace, align 1, !tbaa !193
  %conv18 = zext i8 %8 to i32
  %fmt19 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix20 = bitcast %union.anon.61* %fmt19 to %struct.v4l2_pix_format*
  %colorspace21 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix20, i32 0, i32 6
  store i32 %conv18, i32* %colorspace21, align 8, !tbaa !104
  %fmt22 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix23 = bitcast %union.anon.61* %fmt22 to %struct.v4l2_pix_format*
  %priv = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix23, i32 0, i32 7
  store i32 0, i32* %priv, align 4, !tbaa !104
  br label %done

done:                                             ; preds = %if.end5, %if.end
  %ret.0 = phi i32 [ 0, %if.end5 ], [ -22, %if.end ]
  %mutex24 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex24)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_enum_fmt(%struct.uvc_streaming.870* %stream, %struct.v4l2_fmtdesc* %fmt) #0 {
entry:
  %type1 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 1
  %0 = load i32, i32* %type1, align 4, !tbaa !336
  %index2 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  %1 = load i32, i32* %index2, align 4, !tbaa !338
  %type3 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 1
  %2 = load i32, i32* %type3, align 4, !tbaa !336
  %type4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %3 = load i32, i32* %type4, align 8, !tbaa !124
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %index5 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  %4 = load i32, i32* %index5, align 4, !tbaa !338
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %5 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp6 = icmp uge i32 %4, %5
  br i1 %cmp6, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %6 = bitcast %struct.v4l2_fmtdesc* %fmt to i8*
  %call = call i8* @__memset(i8* %6, i32 0, i64 64)
  %index7 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  store i32 %1, i32* %index7, align 4, !tbaa !338
  %type8 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 1
  store i32 %0, i32* %type8, align 4, !tbaa !336
  %format9 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 11
  %7 = load %struct.uvc_format*, %struct.uvc_format** %format9, align 8, !tbaa !100
  %index10 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 0
  %8 = load i32, i32* %index10, align 4, !tbaa !338
  %idxprom = zext i32 %8 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %7, i64 %idxprom
  %flags = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 2
  store i32 0, i32* %flags, align 4, !tbaa !339
  %flags11 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 5
  %9 = load i32, i32* %flags11, align 8, !tbaa !181
  %and = and i32 %9, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end
  %flags13 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 2
  %10 = load i32, i32* %flags13, align 4, !tbaa !339
  %or = or i32 %10, 1
  store i32 %or, i32* %flags13, align 4, !tbaa !339
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end
  %description = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %description, i32 0, i32 0
  %name = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 6
  %arraydecay15 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %call16 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay15, i64 32)
  %description17 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 3
  %arrayidx18 = getelementptr inbounds [32 x i8], [32 x i8]* %description17, i64 0, i64 31
  store i8 0, i8* %arrayidx18, align 1, !tbaa !104
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 4
  %11 = load i32, i32* %fcc, align 4, !tbaa !179
  %pixelformat = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %fmt, i32 0, i32 4
  store i32 %11, i32* %pixelformat, align 4, !tbaa !340
  br label %cleanup

cleanup:                                          ; preds = %if.end14, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.end14 ], [ -22, %lor.lhs.false ], [ -22, %entry ]
  ret i32 %retval.0
}

declare %struct.video_device.754* @video_devdata(%struct.file*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_make_path(%struct.usb_device* %dev, i8* %buf, i64 %size) #1 {
entry:
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 9
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !341
  %bus_name = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %0, i32 0, i32 2
  %1 = load i8*, i8** %bus_name, align 8, !tbaa !342
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buf, i64 %size, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.308, i32 0, i32 0), i8* %1, i8* %arraydecay)
  %conv = trunc i64 %size to i32
  %cmp = icmp sge i32 %call, %conv
  %.call = select i1 %cmp, i32 -1, i32 %call
  ret i32 %.call
}

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_read(%struct.file* %file, i8* %data, i64 %count, i64* %ppos) #0 {
entry:
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.7.156, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  ret i64 -22
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8.155, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 18
  %call2 = call i32 @uvc_queue_poll(%struct.uvc_video_queue* %queue, %struct.file* %file, %struct.poll_table_struct* %wait)
  ret i32 %call2
}

declare i64 @video_ioctl2(%struct.file*, i32, i64) #2

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_compat_ioctl32(%struct.file* %file, i32 %cmd, i64 %arg) #0 {
entry:
  %karg = alloca %union.anon.107, align 8
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %2 = bitcast %union.anon.107* %karg to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* %2) #8
  %conv = trunc i64 %arg to i32
  %call = call i8* @compat_ptr(i32 %conv)
  switch i32 %cmd, label %cleanup [
    i32 -1067944672, label %sw.bb
    i32 -1072925407, label %sw.bb15
  ]

sw.bb:                                            ; preds = %entry
  %xmap = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_mapping*
  %3 = bitcast i8* %call to %struct.uvc_xu_control_mapping32*
  %call1 = call i32 @uvc_v4l2_get_xu_mapping(%struct.uvc_xu_control_mapping* %xmap, %struct.uvc_xu_control_mapping32* %3)
  %conv2 = sext i32 %call1 to i64
  %tobool = icmp ne i64 %conv2, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.bb
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 1
  %4 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  %xmap3 = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_mapping*
  %call4 = call i32 @uvc_ioctl_ctrl_map(%struct.uvc_video_chain.869* %4, %struct.uvc_xu_control_mapping* %xmap3)
  %conv5 = sext i32 %call4 to i64
  %tobool6 = icmp ne i64 %conv5, 0
  br i1 %tobool6, label %cleanup, label %if.end8

if.end8:                                          ; preds = %if.end
  %xmap9 = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_mapping*
  %5 = bitcast i8* %call to %struct.uvc_xu_control_mapping32*
  %call10 = call i32 @uvc_v4l2_put_xu_mapping(%struct.uvc_xu_control_mapping* %xmap9, %struct.uvc_xu_control_mapping32* %5)
  %conv11 = sext i32 %call10 to i64
  br label %cleanup

sw.bb15:                                          ; preds = %entry
  %xqry = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_query*
  %6 = bitcast i8* %call to %struct.uvc_xu_control_query32*
  %call16 = call i32 @uvc_v4l2_get_xu_query(%struct.uvc_xu_control_query* %xqry, %struct.uvc_xu_control_query32* %6)
  %conv17 = sext i32 %call16 to i64
  %tobool18 = icmp ne i64 %conv17, 0
  br i1 %tobool18, label %cleanup, label %if.end20

if.end20:                                         ; preds = %sw.bb15
  %chain21 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 1
  %7 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain21, align 8, !tbaa !238
  %xqry22 = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_query*
  %call23 = call i32 @uvc_xu_ctrl_query(%struct.uvc_video_chain.869* %7, %struct.uvc_xu_control_query* %xqry22)
  %conv24 = sext i32 %call23 to i64
  %tobool25 = icmp ne i64 %conv24, 0
  br i1 %tobool25, label %cleanup, label %if.end27

if.end27:                                         ; preds = %if.end20
  %xqry28 = bitcast %union.anon.107* %karg to %struct.uvc_xu_control_query*
  %8 = bitcast i8* %call to %struct.uvc_xu_control_query32*
  %call29 = call i32 @uvc_v4l2_put_xu_query(%struct.uvc_xu_control_query* %xqry28, %struct.uvc_xu_control_query32* %8)
  %conv30 = sext i32 %call29 to i64
  br label %cleanup

cleanup:                                          ; preds = %if.end27, %if.end20, %sw.bb15, %if.end8, %if.end, %sw.bb, %entry
  %retval.0 = phi i64 [ %conv2, %sw.bb ], [ %conv5, %if.end ], [ %conv17, %sw.bb15 ], [ %conv24, %if.end20 ], [ -515, %entry ], [ %conv11, %if.end8 ], [ %conv30, %if.end27 ]
  %9 = bitcast %union.anon.107* %karg to i8*
  call void @llvm.lifetime.end.p0i8(i64 96, i8* %9) #8
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_mmap(%struct.file* %file, %struct.vm_area_struct* %vma) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11.152, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 18
  %call2 = call i32 @uvc_queue_mmap(%struct.uvc_video_queue* %queue, %struct.vm_area_struct* %vma)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_open(%struct.file* %file) #0 {
entry:
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.12.149, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @video_drvdata(%struct.file* %file)
  %1 = bitcast i8* %call1 to %struct.uvc_streaming.870*
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %2 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %intf = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %2, i32 0, i32 1
  %3 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %call2 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %3)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end4

if.end4:                                          ; preds = %do.end
  %call5 = call i8* @kzalloc.137(i64 200, i32 20971712)
  %4 = bitcast i8* %call5 to %struct.uvc_fh*
  %cmp6 = icmp eq %struct.uvc_fh* %4, null
  %dev8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev8, align 8, !tbaa !133
  br i1 %cmp6, label %if.then7, label %if.end10

if.then7:                                         ; preds = %if.end4
  %intf9 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %5, i32 0, i32 1
  %6 = load %struct.usb_interface*, %struct.usb_interface** %intf9, align 8, !tbaa !31
  call void @usb_autopm_put_interface(%struct.usb_interface* %6)
  br label %cleanup

if.end10:                                         ; preds = %if.end4
  %lock = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %5, i32 0, i32 6
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %dev12 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %7 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev12, align 8, !tbaa !133
  %users = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %7, i32 0, i32 7
  %8 = load i32, i32* %users, align 8, !tbaa !73
  %cmp13 = icmp eq i32 %8, 0
  br i1 %cmp13, label %if.then14, label %if.end24

if.then14:                                        ; preds = %if.end10
  %dev15 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev15, align 8, !tbaa !133
  %call16 = call i32 bitcast (i32 (%struct.uvc_device*, i32)* @uvc_status_start to i32 (%struct.uvc_device.871*, i32)*)(%struct.uvc_device.871* %9, i32 20971712)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %if.then18, label %if.end24

if.then18:                                        ; preds = %if.then14
  %dev19 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %10 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev19, align 8, !tbaa !133
  %lock20 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %10, i32 0, i32 6
  call void @mutex_unlock(%struct.mutex* %lock20)
  %dev21 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %11 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev21, align 8, !tbaa !133
  %intf22 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %11, i32 0, i32 1
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf22, align 8, !tbaa !31
  call void @usb_autopm_put_interface(%struct.usb_interface* %12)
  %13 = bitcast %struct.uvc_fh* %4 to i8*
  call void @kfree(i8* %13)
  br label %cleanup

if.end24:                                         ; preds = %if.then14, %if.end10
  %dev25 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %14 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev25, align 8, !tbaa !133
  %users26 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %14, i32 0, i32 7
  %15 = load i32, i32* %users26, align 8, !tbaa !73
  %inc = add i32 %15, 1
  store i32 %inc, i32* %users26, align 8, !tbaa !73
  %dev27 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 1
  %16 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev27, align 8, !tbaa !133
  %lock28 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %16, i32 0, i32 6
  call void @mutex_unlock(%struct.mutex* %lock28)
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %4, i32 0, i32 0
  %vdev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 2
  call void @v4l2_fh_init(%struct.v4l2_fh.753* %vfh, %struct.video_device.754* %vdev)
  %vfh29 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %4, i32 0, i32 0
  call void @v4l2_fh_add(%struct.v4l2_fh.753* %vfh29)
  %chain = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 3
  %17 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !121
  %chain30 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %4, i32 0, i32 1
  store %struct.uvc_video_chain.869* %17, %struct.uvc_video_chain.869** %chain30, align 8, !tbaa !238
  %stream31 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %4, i32 0, i32 2
  store %struct.uvc_streaming.870* %1, %struct.uvc_streaming.870** %stream31, align 8, !tbaa !241
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %4, i32 0, i32 3
  store i32 0, i32* %state, align 8, !tbaa !316
  %18 = bitcast %struct.uvc_fh* %4 to i8*
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* %18, i8** %private_data, align 8, !tbaa !230
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then18, %if.then7, %do.end
  %retval.0 = phi i32 [ -12, %if.then7 ], [ %call16, %if.then18 ], [ 0, %if.end24 ], [ %call2, %do.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_release(%struct.file* %file) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming.870*, %struct.uvc_streaming.870** %stream1, align 8, !tbaa !241
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13.148, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call2 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then4, label %if.end5

if.then4:                                         ; preds = %do.end
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 18
  call void @uvc_queue_release(%struct.uvc_video_queue* %queue)
  br label %if.end5

if.end5:                                          ; preds = %if.then4, %do.end
  call void @uvc_dismiss_privileges(%struct.uvc_fh* %1)
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  call void @v4l2_fh_del(%struct.v4l2_fh.753* %vfh)
  %vfh6 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  call void @v4l2_fh_exit(%struct.v4l2_fh.753* %vfh6)
  %4 = bitcast %struct.uvc_fh* %1 to i8*
  call void @kfree(i8* %4)
  %private_data7 = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* null, i8** %private_data7, align 8, !tbaa !230
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 1
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %lock = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %5, i32 0, i32 6
  call void @mutex_lock_nested(%struct.mutex* %lock, i32 0)
  %dev8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 1
  %6 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev8, align 8, !tbaa !133
  %users = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %6, i32 0, i32 7
  %7 = load i32, i32* %users, align 8, !tbaa !73
  %dec = add i32 %7, -1
  store i32 %dec, i32* %users, align 8, !tbaa !73
  %cmp = icmp eq i32 %dec, 0
  br i1 %cmp, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end5
  %dev10 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 1
  %8 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev10, align 8, !tbaa !133
  call void bitcast (void (%struct.uvc_device*)* @uvc_status_stop to void (%struct.uvc_device.871*)*)(%struct.uvc_device.871* %8)
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end5
  %dev12 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 1
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev12, align 8, !tbaa !133
  %lock13 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %9, i32 0, i32 6
  call void @mutex_unlock(%struct.mutex* %lock13)
  %dev14 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %2, i32 0, i32 1
  %10 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev14, align 8, !tbaa !133
  %intf = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %10, i32 0, i32 1
  %11 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  call void @usb_autopm_put_interface(%struct.usb_interface* %11)
  ret i32 0
}

declare void @v4l2_fh_del(%struct.v4l2_fh.753*) #2

declare void @v4l2_fh_exit(%struct.v4l2_fh.753*) #2

declare void @usb_autopm_put_interface(%struct.usb_interface*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_drvdata(%struct.file* %file) #1 {
entry:
  %call = call %struct.video_device.754* @video_devdata(%struct.file* %file)
  %call1 = call i8* @video_get_drvdata.150(%struct.video_device.754* %call)
  ret i8* %call1
}

declare i32 @usb_autopm_get_interface(%struct.usb_interface*) #2

declare void @v4l2_fh_init(%struct.v4l2_fh.753*, %struct.video_device.754*) #2

declare void @v4l2_fh_add(%struct.v4l2_fh.753*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_get_drvdata.150(%struct.video_device.754* %vdev) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device.754, %struct.video_device.754* %vdev, i32 0, i32 5
  %call = call i8* @dev_get_drvdata.151(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @dev_get_drvdata.151(%struct.device* %dev) #1 {
entry:
  %driver_data = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 9
  %0 = load i8*, i8** %driver_data, align 8, !tbaa !92
  ret i8* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @compat_ptr(i32 %uptr) #1 {
entry:
  %conv = zext i32 %uptr to i64
  %0 = inttoptr i64 %conv to i8*
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_xu_mapping(%struct.uvc_xu_control_mapping* %kp, %struct.uvc_xu_control_mapping32* %up) #0 {
entry:
  %call = call i32 @preempt_count()
  %conv = sext i32 %call to i64
  %and = and i64 %conv, 2031872
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %tobool4 = icmp ne i32 %lnot.ext, 0
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %0 = load i8, i8* @uvc_v4l2_get_xu_mapping.__warned, align 1, !tbaa !95, !range !96
  %tobool5 = trunc i8 %0 to i1
  %lnot6 = xor i1 %tobool5, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i1 [ false, %entry ], [ %lnot6, %land.rhs ]
  %lnot8 = xor i1 %1, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool13 = icmp ne i64 %expval, 0
  br i1 %tobool13, label %if.then, label %if.end30

if.then:                                          ; preds = %land.end
  store i8 1, i8* @uvc_v4l2_get_xu_mapping.__warned, align 1, !tbaa !95
  %tobool14 = icmp ne i32 1, 0
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.then
  call void @warn_slowpath_null(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.153, i32 0, i32 0), i32 1289)
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.then
  %tobool23 = icmp ne i32 1, 0
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot.ext27 = zext i1 %lnot26 to i32
  %conv28 = sext i32 %lnot.ext27 to i64
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0)
  br label %if.end30

if.end30:                                         ; preds = %if.end, %land.end
  %tobool32 = icmp ne i32 %lnot.ext, 0
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %2 = ptrtoint %struct.uvc_xu_control_mapping32* %up to i64
  %call41 = call %struct.task_struct* @get_current()
  %thread = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call41, i32 0, i32 212
  %addr_limit = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %thread, i32 0, i32 19
  %seg = getelementptr inbounds %union.anon.3, %union.anon.3* %addr_limit, i32 0, i32 0
  %3 = load i64, i64* %seg, align 8, !tbaa !345
  %call42 = call zeroext i1 @__chk_range_not_ok(i64 %2, i64 88, i64 %3)
  %frombool = zext i1 %call42 to i8
  %tobool43 = trunc i8 %frombool to i1
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.end30
  %4 = bitcast %struct.uvc_xu_control_mapping* %kp to i8*
  %5 = bitcast %struct.uvc_xu_control_mapping32* %up to i8*
  %call53 = call i32 @__copy_from_user(i8* %4, i8* %5, i32 64)
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %cleanup, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  call void @stac()
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 9
  %6 = bitcast i32* %menu_count to %struct.__large_struct*
  %7 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %6, i32 -14, i32 0) #8, !srcloc !382
  %asmresult = extractvalue { i32, i64 } %7, 0
  %asmresult56 = extractvalue { i32, i64 } %7, 1
  call void @clac()
  %conv57 = trunc i64 %asmresult56 to i32
  %menu_count58 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  store i32 %conv57, i32* %menu_count58, align 8, !tbaa !312
  %conv60 = sext i32 %asmresult to i64
  %expval61 = call i64 @llvm.expect.i64(i64 %conv60, i64 0)
  %tobool62 = icmp ne i64 %expval61, 0
  br i1 %tobool62, label %cleanup, label %if.end64

if.end64:                                         ; preds = %lor.lhs.false55
  %reserved = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %reserved, i32 0, i32 0
  %8 = bitcast i32* %arraydecay to i8*
  %call65 = call i8* @__memset(i8* %8, i32 0, i64 16)
  %menu_count66 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %9 = load i32, i32* %menu_count66, align 8, !tbaa !312
  %cmp = icmp eq i32 %9, 0
  br i1 %cmp, label %if.then68, label %if.end69

if.then68:                                        ; preds = %if.end64
  %menu_info = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 8
  store %struct.uvc_menu_info* null, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !313
  br label %cleanup

if.end69:                                         ; preds = %if.end64
  call void @stac()
  %menu_info73 = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 8
  %10 = bitcast i32* %menu_info73 to %struct.__large_struct*
  %11 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %10, i32 -14, i32 0) #8, !srcloc !383
  %asmresult74 = extractvalue { i32, i64 } %11, 0
  %asmresult75 = extractvalue { i32, i64 } %11, 1
  call void @clac()
  %conv78 = trunc i64 %asmresult75 to i32
  %conv80 = sext i32 %asmresult74 to i64
  %expval81 = call i64 @llvm.expect.i64(i64 %conv80, i64 0)
  %tobool82 = icmp ne i64 %expval81, 0
  br i1 %tobool82, label %cleanup, label %if.end84

if.end84:                                         ; preds = %if.end69
  %call85 = call i8* @compat_ptr(i32 %conv78)
  %12 = bitcast i8* %call85 to %struct.uvc_menu_info*
  %menu_info86 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 8
  store %struct.uvc_menu_info* %12, %struct.uvc_menu_info** %menu_info86, align 8, !tbaa !313
  br label %cleanup

cleanup:                                          ; preds = %if.end84, %if.end69, %if.then68, %lor.lhs.false55, %lor.lhs.false, %if.end30
  %retval.0 = phi i32 [ 0, %if.then68 ], [ 0, %if.end84 ], [ -14, %lor.lhs.false55 ], [ -14, %lor.lhs.false ], [ -14, %if.end30 ], [ -14, %if.end69 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_put_xu_mapping(%struct.uvc_xu_control_mapping* %kp, %struct.uvc_xu_control_mapping32* %up) #0 {
entry:
  %call = call i32 @preempt_count()
  %conv = sext i32 %call to i64
  %and = and i64 %conv, 2031872
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %tobool4 = icmp ne i32 %lnot.ext, 0
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %0 = load i8, i8* @uvc_v4l2_put_xu_mapping.__warned, align 1, !tbaa !95, !range !96
  %tobool5 = trunc i8 %0 to i1
  %lnot6 = xor i1 %tobool5, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i1 [ false, %entry ], [ %lnot6, %land.rhs ]
  %lnot8 = xor i1 %1, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool13 = icmp ne i64 %expval, 0
  br i1 %tobool13, label %if.then, label %if.end30

if.then:                                          ; preds = %land.end
  store i8 1, i8* @uvc_v4l2_put_xu_mapping.__warned, align 1, !tbaa !95
  %tobool14 = icmp ne i32 1, 0
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.then
  call void @warn_slowpath_null(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.153, i32 0, i32 0), i32 1311)
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.then
  %tobool23 = icmp ne i32 1, 0
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot.ext27 = zext i1 %lnot26 to i32
  %conv28 = sext i32 %lnot.ext27 to i64
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0)
  br label %if.end30

if.end30:                                         ; preds = %if.end, %land.end
  %tobool32 = icmp ne i32 %lnot.ext, 0
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %2 = ptrtoint %struct.uvc_xu_control_mapping32* %up to i64
  %call41 = call %struct.task_struct* @get_current()
  %thread = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call41, i32 0, i32 212
  %addr_limit = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %thread, i32 0, i32 19
  %seg = getelementptr inbounds %union.anon.3, %union.anon.3* %addr_limit, i32 0, i32 0
  %3 = load i64, i64* %seg, align 8, !tbaa !345
  %call42 = call zeroext i1 @__chk_range_not_ok(i64 %2, i64 88, i64 %3)
  %frombool = zext i1 %call42 to i8
  %tobool43 = trunc i8 %frombool to i1
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end30
  %4 = bitcast %struct.uvc_xu_control_mapping32* %up to i8*
  %5 = bitcast %struct.uvc_xu_control_mapping* %kp to i8*
  %call53 = call i32 @__copy_to_user(i8* %4, i8* %5, i32 64)
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %return, label %lor.lhs.false55

lor.lhs.false55:                                  ; preds = %lor.lhs.false
  call void @stac()
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %6 = load i32, i32* %menu_count, align 8, !tbaa !312
  %menu_count56 = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 9
  %7 = bitcast i32* %menu_count56 to %struct.__large_struct*
  %8 = call i32 asm sideeffect "\0A1:\09movl ${1:k},$2\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,ir,*m,i,0,~{dirflag},~{fpsr},~{flags}"(i32 %6, %struct.__large_struct* %7, i32 -14, i32 0) #8, !srcloc !384
  call void @clac()
  %conv58 = sext i32 %8 to i64
  %expval59 = call i64 @llvm.expect.i64(i64 %conv58, i64 0)
  %tobool60 = icmp ne i64 %expval59, 0
  br i1 %tobool60, label %return, label %if.end62

if.end62:                                         ; preds = %lor.lhs.false55
  %reserved = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %reserved, i32 0, i32 0
  %9 = bitcast i32* %arraydecay to i8*
  %call63 = call i64 @__clear_user(i8* %9, i64 16)
  %tobool64 = icmp ne i64 %call63, 0
  %. = select i1 %tobool64, i32 -14, i32 0
  br label %return

return:                                           ; preds = %if.end62, %lor.lhs.false55, %lor.lhs.false, %if.end30
  %retval.0 = phi i32 [ -14, %lor.lhs.false55 ], [ -14, %lor.lhs.false ], [ -14, %if.end30 ], [ %., %if.end62 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_xu_query(%struct.uvc_xu_control_query* %kp, %struct.uvc_xu_control_query32* %up) #0 {
entry:
  %call = call i32 @preempt_count()
  %conv = sext i32 %call to i64
  %and = and i64 %conv, 2031872
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %tobool4 = icmp ne i32 %lnot.ext, 0
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %0 = load i8, i8* @uvc_v4l2_get_xu_query.__warned, align 1, !tbaa !95, !range !96
  %tobool5 = trunc i8 %0 to i1
  %lnot6 = xor i1 %tobool5, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i1 [ false, %entry ], [ %lnot6, %land.rhs ]
  %lnot8 = xor i1 %1, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool13 = icmp ne i64 %expval, 0
  br i1 %tobool13, label %if.then, label %if.end30

if.then:                                          ; preds = %land.end
  store i8 1, i8* @uvc_v4l2_get_xu_query.__warned, align 1, !tbaa !95
  %tobool14 = icmp ne i32 1, 0
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.then
  call void @warn_slowpath_null(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.153, i32 0, i32 0), i32 1335)
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.then
  %tobool23 = icmp ne i32 1, 0
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot.ext27 = zext i1 %lnot26 to i32
  %conv28 = sext i32 %lnot.ext27 to i64
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0)
  br label %if.end30

if.end30:                                         ; preds = %if.end, %land.end
  %tobool32 = icmp ne i32 %lnot.ext, 0
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %2 = ptrtoint %struct.uvc_xu_control_query32* %up to i64
  %call41 = call %struct.task_struct* @get_current()
  %thread = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call41, i32 0, i32 212
  %addr_limit = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %thread, i32 0, i32 19
  %seg = getelementptr inbounds %union.anon.3, %union.anon.3* %addr_limit, i32 0, i32 0
  %3 = load i64, i64* %seg, align 8, !tbaa !345
  %call42 = call zeroext i1 @__chk_range_not_ok(i64 %2, i64 12, i64 %3)
  %frombool = zext i1 %call42 to i8
  %tobool43 = trunc i8 %frombool to i1
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %if.end30
  %4 = bitcast %struct.uvc_xu_control_query* %kp to i8*
  %5 = bitcast %struct.uvc_xu_control_query32* %up to i8*
  %call53 = call i32 @__copy_from_user(i8* %4, i8* %5, i32 8)
  %tobool54 = icmp ne i32 %call53, 0
  br i1 %tobool54, label %cleanup, label %if.end56

if.end56:                                         ; preds = %lor.lhs.false
  %size = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %6 = load i16, i16* %size, align 4, !tbaa !385
  %conv57 = zext i16 %6 to i32
  %cmp = icmp eq i32 %conv57, 0
  br i1 %cmp, label %if.then59, label %if.end60

if.then59:                                        ; preds = %if.end56
  %data = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 4
  store i8* null, i8** %data, align 8, !tbaa !387
  br label %cleanup

if.end60:                                         ; preds = %if.end56
  call void @stac()
  %data61 = getelementptr inbounds %struct.uvc_xu_control_query32, %struct.uvc_xu_control_query32* %up, i32 0, i32 4
  %7 = bitcast i32* %data61 to %struct.__large_struct*
  %8 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %7, i32 -14, i32 0) #8, !srcloc !388
  %asmresult = extractvalue { i32, i64 } %8, 0
  %asmresult62 = extractvalue { i32, i64 } %8, 1
  call void @clac()
  %conv63 = trunc i64 %asmresult62 to i32
  %conv65 = sext i32 %asmresult to i64
  %expval66 = call i64 @llvm.expect.i64(i64 %conv65, i64 0)
  %tobool67 = icmp ne i64 %expval66, 0
  br i1 %tobool67, label %cleanup, label %if.end69

if.end69:                                         ; preds = %if.end60
  %call70 = call i8* @compat_ptr(i32 %conv63)
  %data71 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 4
  store i8* %call70, i8** %data71, align 8, !tbaa !387
  br label %cleanup

cleanup:                                          ; preds = %if.end69, %if.end60, %if.then59, %lor.lhs.false, %if.end30
  %retval.0 = phi i32 [ 0, %if.then59 ], [ 0, %if.end69 ], [ -14, %lor.lhs.false ], [ -14, %if.end30 ], [ -14, %if.end60 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_put_xu_query(%struct.uvc_xu_control_query* %kp, %struct.uvc_xu_control_query32* %up) #0 {
entry:
  %call = call i32 @preempt_count()
  %conv = sext i32 %call to i64
  %and = and i64 %conv, 2031872
  %tobool = icmp ne i64 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot3 = xor i1 %lnot2, true
  %lnot.ext = zext i1 %lnot3 to i32
  %tobool4 = icmp ne i32 %lnot.ext, 0
  br i1 %tobool4, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %0 = load i8, i8* @uvc_v4l2_put_xu_query.__warned, align 1, !tbaa !95, !range !96
  %tobool5 = trunc i8 %0 to i1
  %lnot6 = xor i1 %tobool5, true
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %1 = phi i1 [ false, %entry ], [ %lnot6, %land.rhs ]
  %lnot8 = xor i1 %1, true
  %lnot10 = xor i1 %lnot8, true
  %lnot.ext11 = zext i1 %lnot10 to i32
  %conv12 = sext i32 %lnot.ext11 to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv12, i64 0)
  %tobool13 = icmp ne i64 %expval, 0
  br i1 %tobool13, label %if.then, label %if.end30

if.then:                                          ; preds = %land.end
  store i8 1, i8* @uvc_v4l2_put_xu_query.__warned, align 1, !tbaa !95
  %tobool14 = icmp ne i32 1, 0
  %lnot15 = xor i1 %tobool14, true
  %lnot17 = xor i1 %lnot15, true
  %lnot.ext18 = zext i1 %lnot17 to i32
  %conv19 = sext i32 %lnot.ext18 to i64
  %expval20 = call i64 @llvm.expect.i64(i64 %conv19, i64 0)
  %tobool21 = icmp ne i64 %expval20, 0
  br i1 %tobool21, label %if.then22, label %if.end

if.then22:                                        ; preds = %if.then
  call void @warn_slowpath_null(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9.153, i32 0, i32 0), i32 1354)
  br label %if.end

if.end:                                           ; preds = %if.then22, %if.then
  %tobool23 = icmp ne i32 1, 0
  %lnot24 = xor i1 %tobool23, true
  %lnot26 = xor i1 %lnot24, true
  %lnot.ext27 = zext i1 %lnot26 to i32
  %conv28 = sext i32 %lnot.ext27 to i64
  %expval29 = call i64 @llvm.expect.i64(i64 %conv28, i64 0)
  br label %if.end30

if.end30:                                         ; preds = %if.end, %land.end
  %tobool32 = icmp ne i32 %lnot.ext, 0
  %lnot33 = xor i1 %tobool32, true
  %lnot35 = xor i1 %lnot33, true
  %lnot.ext36 = zext i1 %lnot35 to i32
  %conv37 = sext i32 %lnot.ext36 to i64
  %expval38 = call i64 @llvm.expect.i64(i64 %conv37, i64 0)
  %2 = ptrtoint %struct.uvc_xu_control_query32* %up to i64
  %call41 = call %struct.task_struct* @get_current()
  %thread = getelementptr inbounds %struct.task_struct, %struct.task_struct* %call41, i32 0, i32 212
  %addr_limit = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %thread, i32 0, i32 19
  %seg = getelementptr inbounds %union.anon.3, %union.anon.3* %addr_limit, i32 0, i32 0
  %3 = load i64, i64* %seg, align 8, !tbaa !345
  %call42 = call zeroext i1 @__chk_range_not_ok(i64 %2, i64 12, i64 %3)
  %frombool = zext i1 %call42 to i8
  %tobool43 = trunc i8 %frombool to i1
  %lnot44 = xor i1 %tobool43, true
  %lnot46 = xor i1 %lnot44, true
  %lnot48 = xor i1 %lnot46, true
  %lnot.ext49 = zext i1 %lnot48 to i32
  %conv50 = sext i32 %lnot.ext49 to i64
  %expval51 = call i64 @llvm.expect.i64(i64 %conv50, i64 1)
  %tobool52 = icmp ne i64 %expval51, 0
  br i1 %tobool52, label %lor.lhs.false, label %return

lor.lhs.false:                                    ; preds = %if.end30
  %4 = bitcast %struct.uvc_xu_control_query32* %up to i8*
  %5 = bitcast %struct.uvc_xu_control_query* %kp to i8*
  %call53 = call i32 @__copy_to_user(i8* %4, i8* %5, i32 8)
  %tobool54 = icmp ne i32 %call53, 0
  %. = select i1 %tobool54, i32 -14, i32 0
  ret i32 %.

return:                                           ; preds = %if.end30
  ret i32 -14
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @preempt_count() #3 {
entry:
  %0 = call i32 asm "movl %gs:$1,$0", "=r,*m,~{dirflag},~{fpsr},~{flags}"(i32* @__preempt_count) #9, !srcloc !389
  %and = and i32 %0, 2147483647
  ret i32 %and
}

declare void @warn_slowpath_null(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.task_struct* @get_current() #3 {
entry:
  %0 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #6, !srcloc !390
  ret %struct.task_struct* %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @__chk_range_not_ok(i64 %addr, i64 %size, i64 %limit) #1 {
entry:
  %add = add i64 %addr, %size
  %cmp = icmp ult i64 %add, %size
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %return, label %if.end

if.end:                                           ; preds = %entry
  %cmp2 = icmp ugt i64 %add, %limit
  %lnot4 = xor i1 %cmp2, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  %tobool10 = icmp ne i64 %expval9, 0
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i1 [ %tobool10, %if.end ], [ true, %entry ]
  ret i1 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_to_user(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  call void @__might_fault(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.154, i32 0, i32 0), i32 181)
  call void @kasan_check_read(i8* %src, i32 %size)
  %call = call i32 @__copy_to_user_nocheck(i8* %dst, i8* %src, i32 %size)
  ret i32 %call
}

declare void @__might_fault(i8*, i32) #2

declare void @kasan_check_read(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_to_user_nocheck(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  %conv = zext i32 %size to i64
  call void @check_object_size(i8* %src, i64 %conv, i1 zeroext true)
  %call = call i64 @copy_user_generic(i8* %dst, i8* %src, i32 %size)
  %conv1 = trunc i64 %call to i32
  ret i32 %conv1
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_object_size(i8* %ptr, i64 %n, i1 zeroext %to_user) #3 {
entry:
  %frombool = zext i1 %to_user to i8
  %tobool = trunc i8 %frombool to i1
  call void @__check_object_size(i8* %ptr, i64 %n, i1 zeroext %tobool)
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_user_generic(i8* %to, i8* %from, i32 %len) #3 {
entry:
  %0 = call { i32, i8*, i8*, i32, i8* } asm sideeffect "661:\0A\09call ${5:P}\0A662:\0A.skip -((((6651f-6641f) ^ (((6651f-6641f) ^ (6652f-6642f)) & -(-((6651f-6641f) - (6652f-6642f))))) - (662b-661b)) > 0) * (((6651f-6641f) ^ (((6651f-6641f) ^ (6652f-6642f)) & -(-((6651f-6641f) - (6652f-6642f))))) - (662b-661b)), 0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 3*32+16)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A .long 661b - .\0A .long 6642f - .\0A .word ( 9*32+ 9)\0A .byte 663b-661b\0A .byte 6652f-6642f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09call ${6:P}\0A6651:\0A\096642:\0A\09call ${7:P}\0A6652:\0A\09.popsection", "={ax},={di},={si},={dx},={rsp},i,i,i,1,2,3,4,~{memory},~{rcx},~{r8},~{r9},~{r10},~{r11},~{dirflag},~{fpsr},~{flags}"(i64 (i8*, i8*, i32)* @copy_user_generic_unrolled, i64 (i8*, i8*, i32)* @copy_user_generic_string, i64 (i8*, i8*, i32)* @copy_user_enhanced_fast_string, i8* %to, i8* %from, i32 %len, i8* undef) #8, !srcloc !391
  %asmresult = extractvalue { i32, i8*, i8*, i32, i8* } %0, 0
  %asmresult1 = extractvalue { i32, i8*, i8*, i32, i8* } %0, 1
  %asmresult2 = extractvalue { i32, i8*, i8*, i32, i8* } %0, 2
  %asmresult3 = extractvalue { i32, i8*, i8*, i32, i8* } %0, 3
  %asmresult4 = extractvalue { i32, i8*, i8*, i32, i8* } %0, 4
  %conv = zext i32 %asmresult to i64
  ret i64 %conv
}

declare i64 @copy_user_generic_unrolled(i8*, i8*, i32) #2

declare i64 @copy_user_generic_string(i8*, i8*, i32) #2

declare i64 @copy_user_enhanced_fast_string(i8*, i8*, i32) #2

declare void @__check_object_size(i8*, i64, i1 zeroext) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_from_user(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  call void @__might_fault(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.10.154, i32 0, i32 0), i32 113)
  call void @kasan_check_write(i8* %dst, i32 %size)
  %call = call i32 @__copy_from_user_nocheck(i8* %dst, i8* %src, i32 %size)
  ret i32 %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @stac() #3 {
entry:
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !392
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @clac() #3 {
entry:
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !393
  ret void
}

declare void @kasan_check_write(i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_from_user_nocheck(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  %conv = zext i32 %size to i64
  call void @check_object_size(i8* %dst, i64 %conv, i1 zeroext false)
  %call = call i64 @copy_user_generic(i8* %dst, i8* %src, i32 %size)
  %conv1 = trunc i64 %call to i32
  ret i32 %conv1
}

declare i64 @__clear_user(i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size) #0 {
entry:
  %call = call i32 @__uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size, i32 300)
  %conv = zext i16 %size to i32
  %cmp = icmp ne i32 %call, %conv
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %call2 = call i8* @uvc_query_name(i8 zeroext %query)
  %conv3 = zext i8 %cs to i32
  %conv4 = zext i8 %unit to i32
  %conv5 = zext i16 %size to i32
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.159, i32 0, i32 0), i8* %call2, i32 %conv3, i32 %conv4, i32 %call, i32 %conv5)
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry
  %retval.0 = phi i32 [ -5, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size, i32 %timeout) #0 {
entry:
  %conv = zext i8 %query to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %call = call i32 @__create_pipe(%struct.usb_device* %0, i32 0)
  %or = or i32 -2147483648, %call
  %or1 = or i32 %or, 128
  %cond = select i1 %tobool, i32 %or1, i32 %or
  %conv5 = zext i8 %query to i32
  %and6 = and i32 %conv5, 128
  %tobool7 = icmp ne i32 %and6, 0
  %1 = zext i1 %tobool7 to i64
  %cond8 = select i1 %tobool7, i32 128, i32 0
  %conv9 = zext i8 33 to i32
  %or10 = or i32 %conv9, %cond8
  %conv11 = trunc i32 %or10 to i8
  %udev12 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev12, align 8, !tbaa !11
  %conv13 = zext i8 %cs to i32
  %shl = shl i32 %conv13, 8
  %conv14 = trunc i32 %shl to i16
  %conv15 = zext i8 %unit to i32
  %shl16 = shl i32 %conv15, 8
  %conv17 = zext i8 %intfnum to i32
  %or18 = or i32 %shl16, %conv17
  %conv19 = trunc i32 %or18 to i16
  %call20 = call i32 @usb_control_msg(%struct.usb_device* %2, i32 %cond, i8 zeroext %query, i8 zeroext %conv11, i16 zeroext %conv14, i16 zeroext %conv19, i8* %data, i16 zeroext %size, i32 %timeout)
  ret i32 %call20
}

; Function Attrs: nounwind uwtable
define internal i8* @uvc_query_name(i8 zeroext %query) #0 {
entry:
  %conv = zext i8 %query to i32
  switch i32 %conv, label %sw.default [
    i32 1, label %return
    i32 129, label %sw.bb1
    i32 130, label %sw.bb2
    i32 131, label %sw.bb3
    i32 132, label %sw.bb4
    i32 133, label %sw.bb5
    i32 134, label %sw.bb6
    i32 135, label %sw.bb7
  ]

sw.bb1:                                           ; preds = %entry
  br label %return

sw.bb2:                                           ; preds = %entry
  br label %return

sw.bb3:                                           ; preds = %entry
  br label %return

sw.bb4:                                           ; preds = %entry
  br label %return

sw.bb5:                                           ; preds = %entry
  br label %return

sw.bb6:                                           ; preds = %entry
  br label %return

sw.bb7:                                           ; preds = %entry
  br label %return

sw.default:                                       ; preds = %entry
  br label %return

return:                                           ; preds = %sw.default, %sw.bb7, %sw.bb6, %sw.bb5, %sw.bb4, %sw.bb3, %sw.bb2, %sw.bb1, %entry
  %retval.0 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18.160, i32 0, i32 0), %sw.default ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.161, i32 0, i32 0), %sw.bb7 ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.162, i32 0, i32 0), %sw.bb6 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.163, i32 0, i32 0), %sw.bb5 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.164, i32 0, i32 0), %sw.bb4 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.165, i32 0, i32 0), %sw.bb3 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.166, i32 0, i32 0), %sw.bb2 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.167, i32 0, i32 0), %sw.bb1 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.168, i32 0, i32 0), %entry ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #1 {
entry:
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 0
  %0 = load i32, i32* %devnum, align 8, !tbaa !149
  %shl = shl i32 %0, 8
  %shl1 = shl i32 %endpoint, 15
  %or = or i32 %shl, %shl1
  ret i32 %or
}

declare i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_probe_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe) #0 {
entry:
  %probe_min = alloca %struct.uvc_streaming_control, align 1
  %probe_max = alloca %struct.uvc_streaming_control, align 1
  %0 = bitcast %struct.uvc_streaming_control* %probe_min to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.uvc_streaming_control* %probe_max to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %1) #8
  %call = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe, i32 1)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %done, label %if.end

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %2 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %2, i32 0, i32 3
  %3 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %3, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end11, label %if.then1

if.then1:                                         ; preds = %if.end
  %call2 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe_min, i32 1, i8 zeroext -126)
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %done, label %if.end5

if.end5:                                          ; preds = %if.then1
  %call6 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe_max, i32 1, i8 zeroext -125)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %done, label %if.end9

if.end9:                                          ; preds = %if.end5
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_max, i32 0, i32 6
  %4 = load i16, i16* %wCompQuality, align 1, !tbaa !394
  %wCompQuality10 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 6
  store i16 %4, i16* %wCompQuality10, align 1, !tbaa !394
  br label %if.end11

if.end11:                                         ; preds = %if.end9, %if.end
  %ret.0 = phi i32 [ %call, %if.end ], [ %call6, %if.end9 ]
  br label %for.cond

for.cond:                                         ; preds = %if.end35, %if.end11
  %i.0 = phi i32 [ 0, %if.end11 ], [ %inc, %if.end35 ]
  %ret.1 = phi i32 [ %ret.0, %if.end11 ], [ %call17, %if.end35 ]
  %cmp12 = icmp ult i32 %i.0, 2
  br i1 %cmp12, label %for.body, label %done

for.body:                                         ; preds = %for.cond
  %call13 = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe, i32 1)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %done, label %if.end16

if.end16:                                         ; preds = %for.body
  %call17 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe, i32 1, i8 zeroext -127)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %done, label %if.end20

if.end20:                                         ; preds = %if.end16
  %intf = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !75
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 2
  %6 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp21 = icmp eq i32 %6, 1
  br i1 %cmp21, label %done, label %if.end23

if.end23:                                         ; preds = %if.end20
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 10
  %7 = load i32, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !395
  %conv = trunc i32 %7 to i16
  %conv24 = zext i16 %conv to i32
  %maxpsize = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 7
  %8 = load i16, i16* %maxpsize, align 4, !tbaa !169
  %conv25 = zext i16 %8 to i32
  %cmp26 = icmp sle i32 %conv24, %conv25
  br i1 %cmp26, label %done, label %if.end29

if.end29:                                         ; preds = %if.end23
  %dev30 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev30, align 8, !tbaa !133
  %quirks31 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %9, i32 0, i32 3
  %10 = load i32, i32* %quirks31, align 8, !tbaa !53
  %and32 = and i32 %10, 2
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %done, label %if.end35

if.end35:                                         ; preds = %if.end29
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 4
  %11 = load i16, i16* %wKeyFrameRate, align 1, !tbaa !396
  %wKeyFrameRate36 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 4
  store i16 %11, i16* %wKeyFrameRate36, align 1, !tbaa !396
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 5
  %12 = load i16, i16* %wPFrameRate, align 1, !tbaa !397
  %wPFrameRate37 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 5
  store i16 %12, i16* %wPFrameRate37, align 1, !tbaa !397
  %wCompQuality38 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_max, i32 0, i32 6
  %13 = load i16, i16* %wCompQuality38, align 1, !tbaa !394
  %wCompQuality39 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 6
  store i16 %13, i16* %wCompQuality39, align 1, !tbaa !394
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 7
  %14 = load i16, i16* %wCompWindowSize, align 1, !tbaa !398
  %wCompWindowSize40 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 7
  store i16 %14, i16* %wCompWindowSize40, align 1, !tbaa !398
  %inc = add i32 %i.0, 1
  br label %for.cond

done:                                             ; preds = %if.end29, %if.end23, %if.end20, %if.end16, %for.body, %for.cond, %if.end5, %if.then1, %entry
  %ret.3 = phi i32 [ %call, %entry ], [ %call2, %if.then1 ], [ %call6, %if.end5 ], [ %call13, %for.body ], [ %call17, %if.end16 ], [ -28, %if.end29 ], [ %call17, %if.end20 ], [ %call17, %if.end23 ], [ %ret.1, %for.cond ]
  %15 = bitcast %struct.uvc_streaming_control* %probe_max to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %15) #8
  %16 = bitcast %struct.uvc_streaming_control* %probe_min to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %16) #8
  ret i32 %ret.3
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_set_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl, i32 %probe) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %uvc_version = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 11
  %1 = load i16, i16* %uvc_version, align 8, !tbaa !65
  %conv = zext i16 %1 to i32
  %cmp = icmp sge i32 %conv, 272
  %2 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 34, i32 26
  %conv2 = trunc i32 %cond to i16
  %conv3 = zext i16 %conv2 to i64
  %call = call i8* @kzalloc.180(i64 %conv3, i32 20971712)
  %cmp4 = icmp eq i8* %call, null
  br i1 %cmp4, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 0
  %3 = load i16, i16* %bmHint, align 1, !tbaa !331
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %4 = bitcast i8* %arrayidx to i16*
  store i16 %3, i16* %4, align 2, !tbaa !142
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %5 = load i8, i8* %bFormatIndex, align 1, !tbaa !332
  %arrayidx6 = getelementptr inbounds i8, i8* %call, i64 2
  store i8 %5, i8* %arrayidx6, align 1, !tbaa !104
  %bFrameIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %6 = load i8, i8* %bFrameIndex, align 1, !tbaa !333
  %arrayidx7 = getelementptr inbounds i8, i8* %call, i64 3
  store i8 %6, i8* %arrayidx7, align 1, !tbaa !104
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %7 = load i32, i32* %dwFrameInterval, align 1, !tbaa !324
  %arrayidx8 = getelementptr inbounds i8, i8* %call, i64 4
  %8 = bitcast i8* %arrayidx8 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !9
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 4
  %9 = load i16, i16* %wKeyFrameRate, align 1, !tbaa !396
  %arrayidx9 = getelementptr inbounds i8, i8* %call, i64 8
  %10 = bitcast i8* %arrayidx9 to i16*
  store i16 %9, i16* %10, align 2, !tbaa !142
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 5
  %11 = load i16, i16* %wPFrameRate, align 1, !tbaa !397
  %arrayidx10 = getelementptr inbounds i8, i8* %call, i64 10
  %12 = bitcast i8* %arrayidx10 to i16*
  store i16 %11, i16* %12, align 2, !tbaa !142
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  %13 = load i16, i16* %wCompQuality, align 1, !tbaa !394
  %arrayidx11 = getelementptr inbounds i8, i8* %call, i64 12
  %14 = bitcast i8* %arrayidx11 to i16*
  store i16 %13, i16* %14, align 2, !tbaa !142
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 7
  %15 = load i16, i16* %wCompWindowSize, align 1, !tbaa !398
  %arrayidx12 = getelementptr inbounds i8, i8* %call, i64 14
  %16 = bitcast i8* %arrayidx12 to i16*
  store i16 %15, i16* %16, align 2, !tbaa !142
  %wDelay = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 8
  %17 = load i16, i16* %wDelay, align 1, !tbaa !399
  %arrayidx13 = getelementptr inbounds i8, i8* %call, i64 16
  %18 = bitcast i8* %arrayidx13 to i16*
  store i16 %17, i16* %18, align 2, !tbaa !142
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %19 = load i32, i32* %dwMaxVideoFrameSize, align 1, !tbaa !334
  %arrayidx14 = getelementptr inbounds i8, i8* %call, i64 18
  call void @put_unaligned_le32(i32 %19, i8* %arrayidx14)
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %20 = load i32, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !395
  %arrayidx15 = getelementptr inbounds i8, i8* %call, i64 22
  call void @put_unaligned_le32(i32 %20, i8* %arrayidx15)
  %conv16 = zext i16 %conv2 to i32
  %cmp17 = icmp eq i32 %conv16, 34
  br i1 %cmp17, label %if.then19, label %if.end25

if.then19:                                        ; preds = %if.end
  %dwClockFrequency = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  %21 = load i32, i32* %dwClockFrequency, align 1, !tbaa !400
  %arrayidx20 = getelementptr inbounds i8, i8* %call, i64 26
  call void @put_unaligned_le32(i32 %21, i8* %arrayidx20)
  %bmFramingInfo = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  %22 = load i8, i8* %bmFramingInfo, align 1, !tbaa !401
  %arrayidx21 = getelementptr inbounds i8, i8* %call, i64 30
  store i8 %22, i8* %arrayidx21, align 1, !tbaa !104
  %bPreferedVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  %23 = load i8, i8* %bPreferedVersion, align 1, !tbaa !402
  %arrayidx22 = getelementptr inbounds i8, i8* %call, i64 31
  store i8 %23, i8* %arrayidx22, align 1, !tbaa !104
  %bMinVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  %24 = load i8, i8* %bMinVersion, align 1, !tbaa !403
  %arrayidx23 = getelementptr inbounds i8, i8* %call, i64 32
  store i8 %24, i8* %arrayidx23, align 1, !tbaa !104
  %bMaxVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 15
  %25 = load i8, i8* %bMaxVersion, align 1, !tbaa !404
  %arrayidx24 = getelementptr inbounds i8, i8* %call, i64 33
  store i8 %25, i8* %arrayidx24, align 1, !tbaa !104
  br label %if.end25

if.end25:                                         ; preds = %if.then19, %if.end
  %dev26 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %26 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev26, align 8, !tbaa !133
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %27 = load i32, i32* %intfnum, align 8, !tbaa !153
  %conv27 = trunc i32 %27 to i8
  %tobool = icmp ne i32 %probe, 0
  %28 = zext i1 %tobool to i64
  %cond28 = select i1 %tobool, i32 1, i32 2
  %conv29 = trunc i32 %cond28 to i8
  %29 = load i32, i32* @uvc_timeout_param, align 4, !tbaa !9
  %call30 = call i32 @__uvc_query_ctrl(%struct.uvc_device.871* %26, i8 zeroext 1, i8 zeroext 0, i8 zeroext %conv27, i8 zeroext %conv29, i8* %call, i16 zeroext %conv2, i32 %29)
  %conv31 = zext i16 %conv2 to i32
  %cmp32 = icmp ne i32 %call30, %conv31
  br i1 %cmp32, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.end25
  %tobool35 = icmp ne i32 %probe, 0
  %30 = zext i1 %tobool35 to i64
  %cond36 = select i1 %tobool35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.176, i32 0, i32 0)
  %conv37 = zext i16 %conv2 to i32
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19.181, i32 0, i32 0), i8* %cond36, i32 %call30, i32 %conv37)
  br label %if.end39

if.end39:                                         ; preds = %if.then34, %if.end25
  %ret.0 = phi i32 [ -5, %if.then34 ], [ %call30, %if.end25 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %entry
  %retval.0 = phi i32 [ %ret.0, %if.end39 ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl, i32 %probe, i8 zeroext %query) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %uvc_version = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 11
  %1 = load i16, i16* %uvc_version, align 8, !tbaa !65
  %conv = zext i16 %1 to i32
  %cmp = icmp sge i32 %conv, 272
  %2 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 34, i32 26
  %conv2 = trunc i32 %cond to i16
  %dev3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev3, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %3, i32 0, i32 3
  %4 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %4, 256
  %tobool = icmp ne i32 %and, 0
  %conv4 = zext i8 %query to i32
  %cmp5 = icmp eq i32 %conv4, 135
  %or.cond = and i1 %tobool, %cmp5
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv7 = zext i16 %conv2 to i64
  %call = call i8* @kmalloc.171(i64 %conv7, i32 20971712)
  %cmp8 = icmp eq i8* %call, null
  br i1 %cmp8, label %cleanup, label %if.end11

if.end11:                                         ; preds = %if.end
  %dev12 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev12, align 8, !tbaa !133
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %6 = load i32, i32* %intfnum, align 8, !tbaa !153
  %conv13 = trunc i32 %6 to i8
  %tobool14 = icmp ne i32 %probe, 0
  %7 = zext i1 %tobool14 to i64
  %cond15 = select i1 %tobool14, i32 1, i32 2
  %conv16 = trunc i32 %cond15 to i8
  %8 = load i32, i32* @uvc_timeout_param, align 4, !tbaa !9
  %call17 = call i32 @__uvc_query_ctrl(%struct.uvc_device.871* %5, i8 zeroext %query, i8 zeroext 0, i8 zeroext %conv13, i8 zeroext %conv16, i8* %call, i16 zeroext %conv2, i32 %8)
  %conv18 = zext i8 %query to i32
  %cmp19 = icmp eq i32 %conv18, 130
  %conv21 = zext i8 %query to i32
  %cmp22 = icmp eq i32 %conv21, 131
  %or.cond1 = or i1 %cmp19, %cmp22
  %cmp25 = icmp eq i32 %call17, 2
  %or.cond2 = and i1 %or.cond1, %cmp25
  br i1 %or.cond2, label %do.body, label %if.else

do.body:                                          ; preds = %if.end11
  %dev28 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev28, align 8, !tbaa !133
  %warnings = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %9, i32 0, i32 2
  %call29 = call zeroext i1 @test_and_set_bit(i64 0, i64* %warnings)
  br i1 %call29, label %do.end, label %if.then30

if.then30:                                        ; preds = %do.body
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.22.172, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then30, %do.body
  %10 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  %call33 = call i8* @__memset(i8* %10, i32 0, i64 34)
  %11 = bitcast i8* %call to i16*
  %call34 = call zeroext i16 @__le16_to_cpup.173(i16* %11)
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  store i16 %call34, i16* %wCompQuality, align 1, !tbaa !394
  br label %out

if.else:                                          ; preds = %if.end11
  %conv35 = zext i8 %query to i32
  %cmp36 = icmp eq i32 %conv35, 135
  %cmp39 = icmp eq i32 %probe, 1
  %or.cond3 = and i1 %cmp36, %cmp39
  %conv42 = zext i16 %conv2 to i32
  %cmp43 = icmp ne i32 %call17, %conv42
  %or.cond4 = and i1 %or.cond3, %cmp43
  br i1 %or.cond4, label %do.body46, label %if.else55

do.body46:                                        ; preds = %if.else
  %dev47 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev47, align 8, !tbaa !133
  %warnings48 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %12, i32 0, i32 2
  %call49 = call zeroext i1 @test_and_set_bit(i64 1, i64* %warnings48)
  br i1 %call49, label %out, label %if.then50

if.then50:                                        ; preds = %do.body46
  %call51 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.23.174, i32 0, i32 0))
  br label %out

if.else55:                                        ; preds = %if.else
  %conv56 = zext i16 %conv2 to i32
  %cmp57 = icmp ne i32 %call17, %conv56
  br i1 %cmp57, label %if.then59, label %if.end67

if.then59:                                        ; preds = %if.else55
  %conv60 = zext i8 %query to i32
  %tobool61 = icmp ne i32 %probe, 0
  %13 = zext i1 %tobool61 to i64
  %cond62 = select i1 %tobool61, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.175, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.176, i32 0, i32 0)
  %conv63 = zext i16 %conv2 to i32
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.24.177, i32 0, i32 0), i32 %conv60, i8* %cond62, i32 %call17, i32 %conv63)
  br label %out

if.end67:                                         ; preds = %if.else55
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %14 = bitcast i8* %arrayidx to i16*
  %call68 = call zeroext i16 @__le16_to_cpup.173(i16* %14)
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 0
  store i16 %call68, i16* %bmHint, align 1, !tbaa !331
  %arrayidx69 = getelementptr inbounds i8, i8* %call, i64 2
  %15 = load i8, i8* %arrayidx69, align 1, !tbaa !104
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  store i8 %15, i8* %bFormatIndex, align 1, !tbaa !332
  %arrayidx70 = getelementptr inbounds i8, i8* %call, i64 3
  %16 = load i8, i8* %arrayidx70, align 1, !tbaa !104
  %bFrameIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  store i8 %16, i8* %bFrameIndex, align 1, !tbaa !333
  %arrayidx71 = getelementptr inbounds i8, i8* %call, i64 4
  %17 = bitcast i8* %arrayidx71 to i32*
  %call72 = call i32 @__le32_to_cpup.178(i32* %17)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  store i32 %call72, i32* %dwFrameInterval, align 1, !tbaa !324
  %arrayidx73 = getelementptr inbounds i8, i8* %call, i64 8
  %18 = bitcast i8* %arrayidx73 to i16*
  %call74 = call zeroext i16 @__le16_to_cpup.173(i16* %18)
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 4
  store i16 %call74, i16* %wKeyFrameRate, align 1, !tbaa !396
  %arrayidx75 = getelementptr inbounds i8, i8* %call, i64 10
  %19 = bitcast i8* %arrayidx75 to i16*
  %call76 = call zeroext i16 @__le16_to_cpup.173(i16* %19)
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 5
  store i16 %call76, i16* %wPFrameRate, align 1, !tbaa !397
  %arrayidx77 = getelementptr inbounds i8, i8* %call, i64 12
  %20 = bitcast i8* %arrayidx77 to i16*
  %call78 = call zeroext i16 @__le16_to_cpup.173(i16* %20)
  %wCompQuality79 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  store i16 %call78, i16* %wCompQuality79, align 1, !tbaa !394
  %arrayidx80 = getelementptr inbounds i8, i8* %call, i64 14
  %21 = bitcast i8* %arrayidx80 to i16*
  %call81 = call zeroext i16 @__le16_to_cpup.173(i16* %21)
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 7
  store i16 %call81, i16* %wCompWindowSize, align 1, !tbaa !398
  %arrayidx82 = getelementptr inbounds i8, i8* %call, i64 16
  %22 = bitcast i8* %arrayidx82 to i16*
  %call83 = call zeroext i16 @__le16_to_cpup.173(i16* %22)
  %wDelay = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 8
  store i16 %call83, i16* %wDelay, align 1, !tbaa !399
  %arrayidx84 = getelementptr inbounds i8, i8* %call, i64 18
  %call85 = call i32 @get_unaligned_le32.179(i8* %arrayidx84)
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  store i32 %call85, i32* %dwMaxVideoFrameSize, align 1, !tbaa !334
  %arrayidx86 = getelementptr inbounds i8, i8* %call, i64 22
  %call87 = call i32 @get_unaligned_le32.179(i8* %arrayidx86)
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  store i32 %call87, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !395
  %conv88 = zext i16 %conv2 to i32
  %cmp89 = icmp eq i32 %conv88, 34
  br i1 %cmp89, label %if.then91, label %if.else98

if.then91:                                        ; preds = %if.end67
  %arrayidx92 = getelementptr inbounds i8, i8* %call, i64 26
  %call93 = call i32 @get_unaligned_le32.179(i8* %arrayidx92)
  %dwClockFrequency = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  store i32 %call93, i32* %dwClockFrequency, align 1, !tbaa !400
  %arrayidx94 = getelementptr inbounds i8, i8* %call, i64 30
  %23 = load i8, i8* %arrayidx94, align 1, !tbaa !104
  %bmFramingInfo = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  store i8 %23, i8* %bmFramingInfo, align 1, !tbaa !401
  %arrayidx95 = getelementptr inbounds i8, i8* %call, i64 31
  %24 = load i8, i8* %arrayidx95, align 1, !tbaa !104
  %bPreferedVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  store i8 %24, i8* %bPreferedVersion, align 1, !tbaa !402
  %arrayidx96 = getelementptr inbounds i8, i8* %call, i64 32
  %25 = load i8, i8* %arrayidx96, align 1, !tbaa !104
  %bMinVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  store i8 %25, i8* %bMinVersion, align 1, !tbaa !403
  %arrayidx97 = getelementptr inbounds i8, i8* %call, i64 33
  %26 = load i8, i8* %arrayidx97, align 1, !tbaa !104
  br label %if.end105

if.else98:                                        ; preds = %if.end67
  %dev99 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %27 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev99, align 8, !tbaa !133
  %clock_frequency = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %27, i32 0, i32 12
  %28 = load i32, i32* %clock_frequency, align 4, !tbaa !150
  %dwClockFrequency100 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  store i32 %28, i32* %dwClockFrequency100, align 1, !tbaa !400
  %bmFramingInfo101 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  store i8 0, i8* %bmFramingInfo101, align 1, !tbaa !401
  %bPreferedVersion102 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  store i8 0, i8* %bPreferedVersion102, align 1, !tbaa !402
  %bMinVersion103 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  store i8 0, i8* %bMinVersion103, align 1, !tbaa !403
  br label %if.end105

if.end105:                                        ; preds = %if.else98, %if.then91
  %.sink = phi i8 [ 0, %if.else98 ], [ %26, %if.then91 ]
  %bMaxVersion104 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 15
  store i8 %.sink, i8* %bMaxVersion104, align 1, !tbaa !404
  call void @uvc_fixup_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl)
  br label %out

out:                                              ; preds = %if.end105, %if.then59, %if.then50, %do.body46, %do.end
  %ret.0 = phi i32 [ 0, %do.end ], [ -5, %if.then59 ], [ 0, %if.end105 ], [ -5, %if.then50 ], [ -5, %do.body46 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end, %entry
  %retval.0 = phi i32 [ %ret.0, %out ], [ -5, %entry ], [ -12, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.171(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit(i64 %nr, i64* %addr) #3 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !405
  %0 = load i8, i8* %c, align 1, !tbaa !95, !range !96
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @__le16_to_cpup.173(i16* %p) #3 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !142
  ret i16 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__le32_to_cpup.178(i32* %p) #3 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !9
  ret i32 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @get_unaligned_le32.179(i8* %p) #3 {
entry:
  %0 = bitcast i8* %p to i32*
  %call = call i32 @__le32_to_cpup.178(i32* %0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @uvc_fixup_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl) #0 {
entry:
  %__UNIQUE_ID_min1_20 = alloca i32, align 4
  %__UNIQUE_ID_min2_21 = alloca i32, align 4
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %0 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp = icmp ult i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 11
  %1 = load %struct.uvc_format*, %struct.uvc_format** %format1, align 8, !tbaa !100
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %1, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 1
  %2 = load i8, i8* %index, align 1, !tbaa !175
  %conv = zext i8 %2 to i32
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %3 = load i8, i8* %bFormatIndex, align 1, !tbaa !332
  %conv2 = zext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv, %conv2
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %format5 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 11
  %4 = load %struct.uvc_format*, %struct.uvc_format** %format5, align 8, !tbaa !100
  %idxprom6 = zext i32 %i.0 to i64
  %arrayidx7 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %4, i64 %idxprom6
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %format.0 = phi %struct.uvc_format* [ %arrayidx7, %if.then ], [ null, %for.cond ]
  %cmp8 = icmp eq %struct.uvc_format* %format.0, null
  br i1 %cmp8, label %cleanup.cont, label %if.end11

if.end11:                                         ; preds = %for.end
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc29, %if.end11
  %i.1 = phi i32 [ 0, %if.end11 ], [ %inc30, %for.inc29 ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 7
  %5 = load i32, i32* %nframes, align 4, !tbaa !166
  %cmp13 = icmp ult i32 %i.1, %5
  br i1 %cmp13, label %for.body15, label %for.end31

for.body15:                                       ; preds = %for.cond12
  %frame16 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %6 = load %struct.uvc_frame*, %struct.uvc_frame** %frame16, align 8, !tbaa !164
  %idxprom17 = zext i32 %i.1 to i64
  %arrayidx18 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %6, i64 %idxprom17
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx18, i32 0, i32 0
  %7 = load i8, i8* %bFrameIndex, align 8, !tbaa !186
  %conv19 = zext i8 %7 to i32
  %bFrameIndex20 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %8 = load i8, i8* %bFrameIndex20, align 1, !tbaa !333
  %conv21 = zext i8 %8 to i32
  %cmp22 = icmp eq i32 %conv19, %conv21
  br i1 %cmp22, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %for.body15
  %frame25 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %9 = load %struct.uvc_frame*, %struct.uvc_frame** %frame25, align 8, !tbaa !164
  %idxprom26 = zext i32 %i.1 to i64
  %arrayidx27 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %9, i64 %idxprom26
  br label %for.end31

for.inc29:                                        ; preds = %for.body15
  %inc30 = add i32 %i.1, 1
  br label %for.cond12

for.end31:                                        ; preds = %if.then24, %for.cond12
  %frame.0 = phi %struct.uvc_frame* [ %arrayidx27, %if.then24 ], [ null, %for.cond12 ]
  %cmp32 = icmp eq %struct.uvc_frame* %frame.0, null
  br i1 %cmp32, label %cleanup.cont, label %if.end35

if.end35:                                         ; preds = %for.end31
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 5
  %10 = load i32, i32* %flags, align 8, !tbaa !181
  %and = and i32 %10, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then41

lor.lhs.false:                                    ; preds = %if.end35
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %11 = load i32, i32* %dwMaxVideoFrameSize, align 1, !tbaa !334
  %cmp36 = icmp eq i32 %11, 0
  br i1 %cmp36, label %land.lhs.true, label %if.end43

land.lhs.true:                                    ; preds = %lor.lhs.false
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %uvc_version = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %12, i32 0, i32 11
  %13 = load i16, i16* %uvc_version, align 8, !tbaa !65
  %conv38 = zext i16 %13 to i32
  %cmp39 = icmp slt i32 %conv38, 272
  br i1 %cmp39, label %if.then41, label %if.end43

if.then41:                                        ; preds = %land.lhs.true, %if.end35
  %dwMaxVideoFrameBufferSize = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 6
  %14 = load i32, i32* %dwMaxVideoFrameBufferSize, align 8, !tbaa !192
  %dwMaxVideoFrameSize42 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  store i32 %14, i32* %dwMaxVideoFrameSize42, align 1, !tbaa !334
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %land.lhs.true, %lor.lhs.false
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %15 = load i32, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !395
  %and44 = and i32 %15, -65536
  %cmp45 = icmp eq i32 %and44, -65536
  br i1 %cmp45, label %if.then47, label %if.end50

if.then47:                                        ; preds = %if.end43
  %dwMaxPayloadTransferSize48 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %16 = load i32, i32* %dwMaxPayloadTransferSize48, align 1, !tbaa !395
  %and49 = and i32 %16, 65535
  store i32 %and49, i32* %dwMaxPayloadTransferSize48, align 1, !tbaa !395
  br label %if.end50

if.end50:                                         ; preds = %if.then47, %if.end43
  %flags51 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 5
  %17 = load i32, i32* %flags51, align 8, !tbaa !181
  %and52 = and i32 %17, 1
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %cleanup.cont, label %land.lhs.true54

land.lhs.true54:                                  ; preds = %if.end50
  %dev55 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %18 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev55, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %18, i32 0, i32 3
  %19 = load i32, i32* %quirks, align 8, !tbaa !53
  %and56 = and i32 %19, 128
  %tobool57 = icmp ne i32 %and56, 0
  br i1 %tobool57, label %land.lhs.true58, label %cleanup.cont

land.lhs.true58:                                  ; preds = %land.lhs.true54
  %intf = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %20 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !75
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %20, i32 0, i32 2
  %21 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp59 = icmp ugt i32 %21, 1
  br i1 %cmp59, label %if.then61, label %cleanup.cont

if.then61:                                        ; preds = %land.lhs.true58
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %22 = load i32, i32* %dwFrameInterval, align 1, !tbaa !324
  %cmp62 = icmp ugt i32 %22, 100000
  br i1 %cmp62, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then61
  %dwFrameInterval64 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %23 = load i32, i32* %dwFrameInterval64, align 1, !tbaa !324
  br label %cond.end

cond.false:                                       ; preds = %if.then61
  %dwFrameInterval65 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %24 = load i32*, i32** %dwFrameInterval65, align 8, !tbaa !185
  %arrayidx66 = getelementptr inbounds i32, i32* %24, i64 0
  %25 = load i32, i32* %arrayidx66, align 4, !tbaa !9
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %23, %cond.true ], [ %25, %cond.false ]
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 2
  %26 = load i16, i16* %wWidth, align 2, !tbaa !188
  %conv67 = zext i16 %26 to i32
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 3
  %27 = load i16, i16* %wHeight, align 4, !tbaa !189
  %conv68 = zext i16 %27 to i32
  %mul = mul nsw i32 %conv67, %conv68
  %div = sdiv i32 %mul, 8
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 2
  %28 = load i8, i8* %bpp, align 2, !tbaa !180
  %conv69 = zext i8 %28 to i32
  %mul70 = mul nsw i32 %div, %conv69
  %div71 = udiv i32 10000000, %cond
  %add = add i32 %div71, 1
  %mul72 = mul i32 %mul70, %add
  %div73 = udiv i32 %mul72, 1000
  %dev74 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %29 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev74, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %29, i32 0, i32 0
  %30 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %30, i32 0, i32 4
  %31 = load i32, i32* %speed, align 4, !tbaa !406
  %cmp75 = icmp eq i32 %31, 3
  %div78 = udiv i32 %div73, 8
  %bandwidth.0 = select i1 %cmp75, i32 %div78, i32 %div73
  %add80 = add i32 %bandwidth.0, 12
  %32 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %32) #8
  store i32 %add80, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %33 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %33) #8
  store i32 1024, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp81 = icmp eq i32* %__UNIQUE_ID_min1_20, %__UNIQUE_ID_min2_21
  %conv82 = zext i1 %cmp81 to i32
  %34 = load i32, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %35 = load i32, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp83 = icmp ugt i32 %34, %35
  %36 = load i32, i32* %__UNIQUE_ID_min1_20, align 4
  %37 = load i32, i32* %__UNIQUE_ID_min2_21, align 4
  %cond88 = select i1 %cmp83, i32 %36, i32 %37
  %38 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %38) #8
  %39 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %39) #8
  %dwMaxPayloadTransferSize89 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  store i32 %cond88, i32* %dwMaxPayloadTransferSize89, align 1, !tbaa !395
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cond.end, %land.lhs.true58, %land.lhs.true54, %if.end50, %for.end31, %for.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.180(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.171(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @put_unaligned_le32(i32 %val, i8* %p) #3 {
entry:
  %0 = bitcast i8* %p to i32*
  store i32 %val, i32* %0, align 4, !tbaa !9
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_video_clock_update(%struct.uvc_streaming.870* %stream, %struct.vb2_v4l2_buffer* %vbuf, %struct.uvc_buffer* %buf) #0 {
entry:
  %ts = alloca %struct.timespec, align 8
  %rem = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %coerce = alloca %struct.timespec, align 8
  %clock1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %0 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %1 = bitcast i32* %rem to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %2 = load i32, i32* @uvc_hw_timestamps_param, align 4, !tbaa !9
  %tobool = icmp ne i32 %2, 0
  br i1 %tobool, label %do.body2, label %cleanup

do.body2:                                         ; preds = %entry
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %4 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %5 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %6 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #8
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.184(%struct.spinlock* %lock)
  %call3 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 2
  %7 = load i32, i32* %count, align 4, !tbaa !407
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %8 = load i32, i32* %size, align 8, !tbaa !408
  %cmp6 = icmp ult i32 %7, %8
  br i1 %cmp6, label %done, label %if.end9

if.end9:                                          ; preds = %do.body2
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %9 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !409
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  %10 = load i32, i32* %head, align 8, !tbaa !410
  %idxprom = zext i32 %10 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %9, i64 %idxprom
  %samples10 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %11 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples10, align 8, !tbaa !409
  %head11 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  %12 = load i32, i32* %head11, align 8, !tbaa !410
  %sub = sub i32 %12, 1
  %size12 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %13 = load i32, i32* %size12, align 8, !tbaa !408
  %rem13 = urem i32 %sub, %13
  %idxprom14 = zext i32 %rem13 to i64
  %arrayidx15 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %11, i64 %idxprom14
  %pts = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  %14 = load i32, i32* %pts, align 8, !tbaa !411
  %conv16 = zext i32 %14 to i64
  %sub17 = sub i64 %conv16, 2147483648
  %conv18 = trunc i64 %sub17 to i32
  %dev_stc = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 0
  %15 = load i32, i32* %dev_stc, align 8, !tbaa !412
  %sub19 = sub i32 %15, %conv18
  %dev_stc20 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx15, i32 0, i32 0
  %16 = load i32, i32* %dev_stc20, align 8, !tbaa !412
  %sub21 = sub i32 %16, %conv18
  %cmp22 = icmp eq i32 %sub19, %sub21
  br i1 %cmp22, label %done, label %if.end25

if.end25:                                         ; preds = %if.end9
  %dev_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 1
  %17 = load i16, i16* %dev_sof, align 4, !tbaa !414
  %conv26 = zext i16 %17 to i32
  %add = add nsw i32 %conv26, 2048
  %shl = shl i32 %add, 16
  %dev_sof27 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx15, i32 0, i32 1
  %18 = load i16, i16* %dev_sof27, align 4, !tbaa !414
  %conv28 = zext i16 %18 to i32
  %add29 = add nsw i32 %conv28, 2048
  %shl30 = shl i32 %add29, 16
  %cmp31 = icmp ult i32 %shl30, %shl
  %add34 = add i32 %shl30, 134217728
  %add34.shl30 = select i1 %cmp31, i32 %add34, i32 %shl30
  %sub36 = sub i32 %add34.shl30, %shl
  %conv37 = zext i32 %sub36 to i64
  %mul = mul i64 %conv37, 2147483648
  %conv38 = zext i32 %shl to i64
  %conv39 = zext i32 %sub21 to i64
  %mul40 = mul i64 %conv38, %conv39
  %add41 = add i64 %mul, %mul40
  %conv42 = zext i32 %add34.shl30 to i64
  %conv43 = zext i32 %sub19 to i64
  %mul44 = mul i64 %conv42, %conv43
  %sub45 = sub i64 %add41, %mul44
  %sub46 = sub i32 %sub21, %sub19
  %call47 = call i64 @div_u64(i64 %sub45, i32 %sub46)
  %conv48 = trunc i64 %call47 to i32
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %19, 4096
  %tobool50 = icmp ne i32 %and, 0
  br i1 %tobool50, label %if.then51, label %do.end65

if.then51:                                        ; preds = %if.end25
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %20 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %name = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %20, i32 0, i32 5
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %pts52 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  %21 = load i32, i32* %pts52, align 8, !tbaa !411
  %shr = lshr i64 %call47, 16
  %and53 = and i64 %call47, 65535
  %mul54 = mul i64 %and53, 1000000
  %call55 = call i64 @div_u64(i64 %mul54, i32 65536)
  %shr56 = lshr i32 %conv48, 16
  %conv57 = zext i32 %conv48 to i64
  %and58 = and i64 %conv57, 65535
  %mul59 = mul i64 %and58, 1000000
  %call60 = call i64 @div_u64(i64 %mul59, i32 65536)
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 5
  %22 = load i16, i16* %sof_offset, align 2, !tbaa !415
  %conv61 = zext i16 %22 to i32
  %call62 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.1.185, i32 0, i32 0), i8* %arraydecay, i32 %21, i64 %shr, i64 %call55, i32 %shr56, i64 %call60, i32 %sub19, i32 %sub21, i32 %shl, i32 %add34.shl30, i32 %conv61)
  br label %do.end65

do.end65:                                         ; preds = %if.then51, %if.end25
  %call66 = call zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %arrayidx)
  %conv67 = zext i16 %call66 to i32
  %add68 = add nsw i32 %conv67, 2048
  %shl69 = shl i32 %add68, 16
  %call70 = call zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %arrayidx15)
  %conv71 = zext i16 %call70 to i32
  %add72 = add nsw i32 %conv71, 2048
  %shl73 = shl i32 %add72, 16
  %cmp74 = icmp ult i32 %shl73, %shl69
  %add77 = add i32 %shl73, 134217728
  %add77.shl73 = select i1 %cmp74, i32 %add77, i32 %shl73
  %cmp79 = icmp eq i32 %shl69, %add77.shl73
  br i1 %cmp79, label %done, label %if.end82

if.end82:                                         ; preds = %do.end65
  %host_ts = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx15, i32 0, i32 2
  %host_ts83 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %23 = bitcast %struct.timespec* %host_ts to { i64, i64 }*
  %24 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %23, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %struct.timespec* %host_ts83 to { i64, i64 }*
  %29 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %28, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %call84 = call { i64, i64 } @timespec_sub(i64 %25, i64 %27, i64 %30, i64 %32)
  %33 = bitcast %struct.timespec* %coerce to { i64, i64 }*
  %34 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 0
  %35 = extractvalue { i64, i64 } %call84, 0
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %33, i32 0, i32 1
  %37 = extractvalue { i64, i64 } %call84, 1
  store i64 %37, i64* %36, align 8
  %38 = bitcast %struct.timespec* %ts to i8*
  %39 = bitcast %struct.timespec* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 16, i32 8, i1 false), !tbaa.struct !416
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %40 = load i64, i64* %tv_sec, align 8, !tbaa !417
  %add85 = add nsw i64 %40, 1
  %mul86 = mul nsw i64 %add85, 1000000000
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %41 = load i64, i64* %tv_nsec, align 8, !tbaa !418
  %add87 = add nsw i64 %mul86, %41
  %conv88 = trunc i64 %add87 to i32
  %add89 = add i32 %shl69, %add77.shl73
  %div90 = udiv i32 %add89, 2
  %sub91 = sub i32 %div90, 67108864
  %cmp92 = icmp ugt i32 %sub91, %conv48
  br i1 %cmp92, label %if.then94, label %if.else

if.then94:                                        ; preds = %if.end82
  %add95 = add i32 %conv48, 134217728
  br label %if.end102

if.else:                                          ; preds = %if.end82
  %add96 = add i32 %div90, 67108864
  %cmp97 = icmp ugt i32 %conv48, %add96
  %sub100 = sub i32 %conv48, 134217728
  %sub100.conv48 = select i1 %cmp97, i32 %sub100, i32 %conv48
  br label %if.end102

if.end102:                                        ; preds = %if.else, %if.then94
  %sof.1 = phi i32 [ %add95, %if.then94 ], [ %sub100.conv48, %if.else ]
  %sub103 = sub i32 %conv88, 1000000000
  %conv104 = zext i32 %sub103 to i64
  %conv105 = zext i32 %sof.1 to i64
  %mul106 = mul i64 %conv104, %conv105
  %conv107 = zext i32 1000000000 to i64
  %conv108 = zext i32 %add77.shl73 to i64
  %mul109 = mul i64 %conv107, %conv108
  %add110 = add i64 %mul106, %mul109
  %conv111 = zext i32 %conv88 to i64
  %conv112 = zext i32 %shl69 to i64
  %mul113 = mul i64 %conv111, %conv112
  %sub114 = sub i64 %add110, %mul113
  %sub115 = sub i32 %add77.shl73, %shl69
  %call116 = call i64 @div_u64(i64 %sub114, i32 %sub115)
  %call117 = call i64 @div_u64_rem(i64 %call116, i32 1000000000, i32* %rem)
  %conv118 = trunc i64 %call117 to i32
  %host_ts119 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %tv_sec120 = getelementptr inbounds %struct.timespec, %struct.timespec* %host_ts119, i32 0, i32 0
  %42 = load i64, i64* %tv_sec120, align 8, !tbaa !419
  %sub121 = sub nsw i64 %42, 1
  %conv122 = zext i32 %conv118 to i64
  %add123 = add nsw i64 %sub121, %conv122
  %tv_sec124 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  store i64 %add123, i64* %tv_sec124, align 8, !tbaa !417
  %host_ts125 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %tv_nsec126 = getelementptr inbounds %struct.timespec, %struct.timespec* %host_ts125, i32 0, i32 1
  %43 = load i64, i64* %tv_nsec126, align 8, !tbaa !420
  %44 = load i32, i32* %rem, align 4, !tbaa !9
  %conv127 = zext i32 %44 to i64
  %add128 = add nsw i64 %43, %conv127
  %tv_nsec129 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  store i64 %add128, i64* %tv_nsec129, align 8, !tbaa !418
  %tv_nsec130 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %45 = load i64, i64* %tv_nsec130, align 8, !tbaa !418
  %cmp131 = icmp sge i64 %45, 1000000000
  br i1 %cmp131, label %if.then133, label %do.body138

if.then133:                                       ; preds = %if.end102
  %tv_sec134 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %46 = load i64, i64* %tv_sec134, align 8, !tbaa !417
  %inc = add nsw i64 %46, 1
  store i64 %inc, i64* %tv_sec134, align 8, !tbaa !417
  %tv_nsec135 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %47 = load i64, i64* %tv_nsec135, align 8, !tbaa !418
  %sub136 = sub nsw i64 %47, 1000000000
  store i64 %sub136, i64* %tv_nsec135, align 8, !tbaa !418
  br label %do.body138

do.body138:                                       ; preds = %if.then133, %if.end102
  %48 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and139 = and i32 %48, 4096
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %if.then141, label %do.end161

if.then141:                                       ; preds = %do.body138
  %dev142 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %49 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev142, align 8, !tbaa !133
  %name143 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %49, i32 0, i32 5
  %arraydecay144 = getelementptr inbounds [32 x i8], [32 x i8]* %name143, i32 0, i32 0
  %shr145 = lshr i32 %sof.1, 16
  %conv146 = zext i32 %sof.1 to i64
  %and147 = and i64 %conv146, 65535
  %mul148 = mul i64 %and147, 1000000
  %call149 = call i64 @div_u64(i64 %mul148, i32 65536)
  %call150 = call i64 @timespec_to_ns(%struct.timespec* %ts)
  %vb2_buf = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %vbuf, i32 0, i32 0
  %timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb2_buf, i32 0, i32 6
  %50 = load i64, i64* %timestamp, align 8, !tbaa !421
  %host_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 3
  %51 = load i16, i16* %host_sof, align 8, !tbaa !422
  %conv151 = zext i16 %51 to i32
  %dev_sof152 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 1
  %52 = load i16, i16* %dev_sof152, align 4, !tbaa !414
  %conv153 = zext i16 %52 to i32
  %host_sof154 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx15, i32 0, i32 3
  %53 = load i16, i16* %host_sof154, align 8, !tbaa !422
  %conv155 = zext i16 %53 to i32
  %dev_sof156 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx15, i32 0, i32 1
  %54 = load i16, i16* %dev_sof156, align 4, !tbaa !414
  %conv157 = zext i16 %54 to i32
  %call158 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.2.186, i32 0, i32 0), i8* %arraydecay144, i32 %shr145, i64 %call149, i64 %call116, i64 %call150, i64 %50, i32 %shl69, i32 %conv151, i32 %conv153, i32 %add77.shl73, i32 %conv155, i32 %conv157, i32 1000000000, i32 %conv88)
  br label %do.end161

do.end161:                                        ; preds = %if.then141, %do.body138
  %call162 = call i64 @timespec_to_ns(%struct.timespec* %ts)
  %vb2_buf163 = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %vbuf, i32 0, i32 0
  %timestamp164 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb2_buf163, i32 0, i32 6
  store i64 %call162, i64* %timestamp164, align 8, !tbaa !421
  br label %done

done:                                             ; preds = %do.end161, %do.end65, %if.end9, %do.body2
  %lock165 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  call void @spin_unlock_irqrestore.187(%struct.spinlock* %lock165, i64 %call3)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %55 = bitcast i32* %rem to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #8
  %56 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %56) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check.184(%struct.spinlock* %lock) #3 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @div_u64(i64 %dividend, i32 %divisor) #1 {
entry:
  %remainder = alloca i32, align 4
  %0 = bitcast i32* %remainder to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %call = call i64 @div_u64_rem(i64 %dividend, i32 %divisor, i32* %remainder)
  %1 = bitcast i32* %remainder to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1) #8
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %sample) #0 {
entry:
  %host_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 3
  %0 = load i16, i16* %host_sof, align 8, !tbaa !422
  %conv = zext i16 %0 to i32
  %dev_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 1
  %1 = load i16, i16* %dev_sof, align 4, !tbaa !414
  %conv1 = zext i16 %1 to i32
  %sub = sub nsw i32 %conv, %conv1
  %and = and i32 %sub, 255
  %conv2 = trunc i32 %and to i8
  %dev_sof3 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 1
  %2 = load i16, i16* %dev_sof3, align 4, !tbaa !414
  %conv4 = zext i16 %2 to i32
  %conv5 = sext i8 %conv2 to i32
  %add = add nsw i32 %conv4, %conv5
  %and6 = and i32 %add, 2047
  %conv7 = trunc i32 %and6 to i16
  ret i16 %conv7
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @timespec_sub(i64 %lhs.coerce0, i64 %lhs.coerce1, i64 %rhs.coerce0, i64 %rhs.coerce1) #1 {
entry:
  %retval = alloca %struct.timespec, align 8
  %lhs = alloca %struct.timespec, align 8
  %rhs = alloca %struct.timespec, align 8
  %ts_delta = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %lhs to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %lhs.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %lhs.coerce1, i64* %2, align 8
  %3 = bitcast %struct.timespec* %rhs to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %rhs.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %rhs.coerce1, i64* %5, align 8
  %6 = bitcast %struct.timespec* %ts_delta to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #8
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %lhs, i32 0, i32 0
  %7 = load i64, i64* %tv_sec, align 8, !tbaa !417
  %tv_sec1 = getelementptr inbounds %struct.timespec, %struct.timespec* %rhs, i32 0, i32 0
  %8 = load i64, i64* %tv_sec1, align 8, !tbaa !417
  %sub = sub nsw i64 %7, %8
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %lhs, i32 0, i32 1
  %9 = load i64, i64* %tv_nsec, align 8, !tbaa !418
  %tv_nsec2 = getelementptr inbounds %struct.timespec, %struct.timespec* %rhs, i32 0, i32 1
  %10 = load i64, i64* %tv_nsec2, align 8, !tbaa !418
  %sub3 = sub nsw i64 %9, %10
  call void @set_normalized_timespec(%struct.timespec* %ts_delta, i64 %sub, i64 %sub3)
  %11 = bitcast %struct.timespec* %retval to i8*
  %12 = bitcast %struct.timespec* %ts_delta to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false), !tbaa.struct !416
  %13 = bitcast %struct.timespec* %ts_delta to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %13) #8
  %14 = bitcast %struct.timespec* %retval to { i64, i64 }*
  %15 = load { i64, i64 }, { i64, i64 }* %14, align 8
  ret { i64, i64 } %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @div_u64_rem(i64 %dividend, i32 %divisor, i32* %remainder) #1 {
entry:
  %conv = zext i32 %divisor to i64
  %rem = urem i64 %dividend, %conv
  %conv1 = trunc i64 %rem to i32
  store i32 %conv1, i32* %remainder, align 4, !tbaa !9
  %conv2 = zext i32 %divisor to i64
  %div = udiv i64 %dividend, %conv2
  ret i64 %div
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @timespec_to_ns(%struct.timespec* %ts) #1 {
entry:
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %0 = load i64, i64* %tv_sec, align 8, !tbaa !417
  %mul = mul nsw i64 %0, 1000000000
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %1 = load i64, i64* %tv_nsec, align 8, !tbaa !418
  %add = add nsw i64 %mul, %1
  ret i64 %add
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @spin_unlock_irqrestore.187(%struct.spinlock* %lock, i64 %flags) #3 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

declare void @set_normalized_timespec(%struct.timespec*, i64, i64) #2

; Function Attrs: nounwind uwtable
define i64 @uvc_video_stats_dump(%struct.uvc_streaming.870* %stream, i8* %buf, i64 %size) #0 {
entry:
  %ts = alloca %struct.timespec, align 8
  %0 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats, i32 0, i32 1
  %stop_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 1
  %tv_sec = getelementptr inbounds %struct.timespec, %struct.timespec* %stop_ts, i32 0, i32 0
  %1 = load i64, i64* %tv_sec, align 8, !tbaa !423
  %stats2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream3 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats2, i32 0, i32 1
  %start_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream3, i32 0, i32 0
  %tv_sec4 = getelementptr inbounds %struct.timespec, %struct.timespec* %start_ts, i32 0, i32 0
  %2 = load i64, i64* %tv_sec4, align 8, !tbaa !424
  %sub = sub nsw i64 %1, %2
  %tv_sec5 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  store i64 %sub, i64* %tv_sec5, align 8, !tbaa !417
  %stats6 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream7 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats6, i32 0, i32 1
  %stop_ts8 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream7, i32 0, i32 1
  %tv_nsec = getelementptr inbounds %struct.timespec, %struct.timespec* %stop_ts8, i32 0, i32 1
  %3 = load i64, i64* %tv_nsec, align 8, !tbaa !425
  %stats9 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream10 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats9, i32 0, i32 1
  %start_ts11 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream10, i32 0, i32 0
  %tv_nsec12 = getelementptr inbounds %struct.timespec, %struct.timespec* %start_ts11, i32 0, i32 1
  %4 = load i64, i64* %tv_nsec12, align 8, !tbaa !426
  %sub13 = sub nsw i64 %3, %4
  %tv_nsec14 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  store i64 %sub13, i64* %tv_nsec14, align 8, !tbaa !418
  %tv_nsec15 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %5 = load i64, i64* %tv_nsec15, align 8, !tbaa !418
  %cmp = icmp slt i64 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tv_sec16 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %6 = load i64, i64* %tv_sec16, align 8, !tbaa !417
  %dec = add nsw i64 %6, -1
  store i64 %dec, i64* %tv_sec16, align 8, !tbaa !417
  %tv_nsec17 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %7 = load i64, i64* %tv_nsec17, align 8, !tbaa !418
  %add = add nsw i64 %7, 1000000000
  store i64 %add, i64* %tv_nsec17, align 8, !tbaa !418
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tv_sec18 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 0
  %8 = load i64, i64* %tv_sec18, align 8, !tbaa !417
  %mul = mul nsw i64 %8, 1000
  %tv_nsec19 = getelementptr inbounds %struct.timespec, %struct.timespec* %ts, i32 0, i32 1
  %9 = load i64, i64* %tv_nsec19, align 8, !tbaa !418
  %div = sdiv i64 %9, 1000000
  %add20 = add nsw i64 %mul, %div
  %conv = trunc i64 %add20 to i32
  %cmp21 = icmp ne i32 %conv, 0
  br i1 %cmp21, label %if.then23, label %if.end28

if.then23:                                        ; preds = %if.end
  %stats24 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream25 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats24, i32 0, i32 1
  %scr_sof_count = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream25, i32 0, i32 12
  %10 = load i32, i32* %scr_sof_count, align 8, !tbaa !427
  %mul26 = mul i32 %10, 1000
  %div27 = udiv i32 %mul26, %conv
  br label %if.end28

if.end28:                                         ; preds = %if.then23, %if.end
  %scr_sof_freq.0 = phi i32 [ %div27, %if.then23 ], [ 0, %if.end ]
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 0
  %sub29 = sub i64 %size, 0
  %stats30 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream31 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats30, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream31, i32 0, i32 2
  %11 = load i32, i32* %nb_frames, align 8, !tbaa !428
  %stats32 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream33 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats32, i32 0, i32 1
  %nb_packets = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream33, i32 0, i32 3
  %12 = load i32, i32* %nb_packets, align 4, !tbaa !429
  %stats34 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream35 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats34, i32 0, i32 1
  %nb_empty = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream35, i32 0, i32 4
  %13 = load i32, i32* %nb_empty, align 8, !tbaa !430
  %stats36 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream37 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats36, i32 0, i32 1
  %nb_errors = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream37, i32 0, i32 6
  %14 = load i32, i32* %nb_errors, align 8, !tbaa !431
  %stats38 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream39 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats38, i32 0, i32 1
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream39, i32 0, i32 5
  %15 = load i32, i32* %nb_invalid, align 4, !tbaa !432
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr, i64 %sub29, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.188, i32 0, i32 0), i32 %11, i32 %12, i32 %13, i32 %14, i32 %15)
  %conv40 = sext i32 %call to i64
  %add41 = add i64 0, %conv40
  %add.ptr42 = getelementptr inbounds i8, i8* %buf, i64 %add41
  %sub43 = sub i64 %size, %add41
  %stats44 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream45 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats44, i32 0, i32 1
  %nb_pts_early = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream45, i32 0, i32 8
  %16 = load i32, i32* %nb_pts_early, align 8, !tbaa !433
  %stats46 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream47 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats46, i32 0, i32 1
  %nb_pts_initial = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream47, i32 0, i32 9
  %17 = load i32, i32* %nb_pts_initial, align 4, !tbaa !434
  %stats48 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream49 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats48, i32 0, i32 1
  %nb_pts_constant = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream49, i32 0, i32 7
  %18 = load i32, i32* %nb_pts_constant, align 4, !tbaa !435
  %call50 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr42, i64 %sub43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.189, i32 0, i32 0), i32 %16, i32 %17, i32 %18)
  %conv51 = sext i32 %call50 to i64
  %add52 = add i64 %add41, %conv51
  %add.ptr53 = getelementptr inbounds i8, i8* %buf, i64 %add52
  %sub54 = sub i64 %size, %add52
  %stats55 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream56 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats55, i32 0, i32 1
  %nb_scr_count_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream56, i32 0, i32 10
  %19 = load i32, i32* %nb_scr_count_ok, align 8, !tbaa !436
  %stats57 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream58 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats57, i32 0, i32 1
  %nb_scr_diffs_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream58, i32 0, i32 11
  %20 = load i32, i32* %nb_scr_diffs_ok, align 4, !tbaa !437
  %call59 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr53, i64 %sub54, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.190, i32 0, i32 0), i32 %19, i32 %20)
  %conv60 = sext i32 %call59 to i64
  %add61 = add i64 %add52, %conv60
  %add.ptr62 = getelementptr inbounds i8, i8* %buf, i64 %add61
  %sub63 = sub i64 %size, %add61
  %stats64 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream65 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats64, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream65, i32 0, i32 14
  %21 = load i32, i32* %min_sof, align 8, !tbaa !438
  %stats66 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream67 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats66, i32 0, i32 1
  %max_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream67, i32 0, i32 15
  %22 = load i32, i32* %max_sof, align 4, !tbaa !439
  %div68 = udiv i32 %scr_sof_freq.0, 1000
  %rem = urem i32 %scr_sof_freq.0, 1000
  %call69 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr62, i64 %sub63, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.191, i32 0, i32 0), i32 %21, i32 %22, i32 %div68, i32 %rem)
  %conv70 = sext i32 %call69 to i64
  %add71 = add i64 %add61, %conv70
  %23 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %23) #8
  ret i64 %add71
}

declare i32 @scnprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_video_suspend(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call = call i32 @uvc_queue_streaming.194(%struct.uvc_video_queue* %queue)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %frozen = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %frozen, align 8
  call void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 0)
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum, align 8, !tbaa !153
  %call1 = call i32 @usb_set_interface(%struct.usb_device* %1, i32 %2, i32 0)
  br label %return

return:                                           ; preds = %if.end, %entry
  ret i32 0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_queue_streaming.194(%struct.uvc_video_queue* %queue) #1 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_streaming.195(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 %free_buffers) #0 {
entry:
  call void @uvc_video_stats_stop(%struct.uvc_streaming.870* %stream)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %urb1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 21
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb1, i64 0, i64 %idxprom
  %0 = load %struct.urb*, %struct.urb** %arrayidx, align 8, !tbaa !74
  %cmp2 = icmp eq %struct.urb* %0, null
  br i1 %cmp2, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  call void @usb_kill_urb(%struct.urb* %0)
  call void @usb_free_urb(%struct.urb* %0)
  %urb3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 21
  %idxprom4 = zext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb3, i64 0, i64 %idxprom4
  store %struct.urb* null, %struct.urb** %arrayidx5, align 8, !tbaa !74
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tobool = icmp ne i32 %free_buffers, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %for.end
  call void @uvc_free_urb_buffers(%struct.uvc_streaming.870* %stream)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %for.end
  ret void
}

declare i32 @usb_set_interface(%struct.usb_device*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_stop(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats, i32 0, i32 1
  %stop_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 1
  call void @ktime_get_ts(%struct.timespec* %stop_ts)
  ret void
}

declare void @usb_kill_urb(%struct.urb*) #2

declare void @usb_free_urb(%struct.urb*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_free_urb_buffers(%struct.uvc_streaming.870* %stream) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom
  %0 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %1 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %1, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %urb_size = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %3 = load i32, i32* %urb_size, align 8, !tbaa !440
  %conv = zext i32 %3 to i64
  %urb_buffer1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom2 = zext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer1, i64 0, i64 %idxprom2
  %4 = load i8*, i8** %arrayidx3, align 8, !tbaa !74
  %urb_dma = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 23
  %idxprom4 = zext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom4
  %5 = load i64, i64* %arrayidx5, align 8, !tbaa !143
  call void @usb_free_coherent(%struct.usb_device* %2, i64 %conv, i8* %4, i64 %5)
  %urb_buffer6 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom7 = zext i32 %i.0 to i64
  %arrayidx8 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer6, i64 0, i64 %idxprom7
  store i8* null, i8** %arrayidx8, align 8, !tbaa !74
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %urb_size9 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  store i32 0, i32* %urb_size9, align 8, !tbaa !440
  ret void
}

declare void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @ktime_get_ts(%struct.timespec* %ts) #1 {
entry:
  call void @ktime_get_ts64(%struct.timespec* %ts)
  ret void
}

declare void @ktime_get_ts64(%struct.timespec*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_streaming.195(%struct.vb2_queue* %q) #1 {
entry:
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 26
  %bf.load = load i8, i8* %streaming, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define i32 @uvc_video_resume(%struct.uvc_streaming.870* %stream, i32 %reset) #0 {
entry:
  %tobool = icmp ne i32 %reset, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum, align 8, !tbaa !153
  %call = call i32 @usb_set_interface(%struct.usb_device* %1, i32 %2, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %frozen = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, -2
  store i8 %bf.clear, i8* %frozen, align 8
  call void @uvc_video_clock_reset(%struct.uvc_streaming.870* %stream)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call1 = call i32 @uvc_queue_streaming.194(%struct.uvc_video_queue* %queue)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %if.end4, label %cleanup

if.end4:                                          ; preds = %if.end
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %call5 = call i32 @uvc_commit_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.end4
  %call8 = call i32 @uvc_init_video(%struct.uvc_streaming.870* %stream, i32 20971520)
  br label %cleanup

cleanup:                                          ; preds = %if.end7, %if.end4, %if.end
  %retval.0 = phi i32 [ %call8, %if.end7 ], [ 0, %if.end ], [ %call5, %if.end4 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_reset(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %clock1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  store i32 0, i32* %head, align 8, !tbaa !410
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 2
  store i32 0, i32* %count, align 4, !tbaa !407
  %last_sof = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 4
  store i16 -1, i16* %last_sof, align 4, !tbaa !441
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 5
  store i16 -1, i16* %sof_offset, align 2, !tbaa !415
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_commit_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe) #0 {
entry:
  %call = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %probe, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video(%struct.uvc_streaming.870* %stream, i32 %gfp_flags) #0 {
entry:
  %intf1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf1, align 8, !tbaa !75
  %sequence = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  store i32 -1, i32* %sequence, align 4, !tbaa !442
  %last_fid = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  store i8 -1, i8* %last_fid, align 8, !tbaa !443
  %bulk = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk, i32 0, i32 1
  store i32 0, i32* %header_size, align 8, !tbaa !444
  %bulk2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %skip_payload = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk2, i32 0, i32 2
  store i32 0, i32* %skip_payload, align 4, !tbaa !445
  %bulk3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk3, i32 0, i32 3
  store i32 0, i32* %payload_size, align 8, !tbaa !446
  call void @uvc_video_stats_start(%struct.uvc_streaming.870* %stream)
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 2
  %1 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else65

if.then:                                          ; preds = %entry
  %intfnum4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum4, align 8, !tbaa !153
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %3 = load i32, i32* %dwMaxPayloadTransferSize, align 2, !tbaa !447
  %cmp5 = icmp eq i32 %3, 0
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %4, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %cmp5, label %do.body, label %do.body8

do.body:                                          ; preds = %if.then
  br i1 %tobool, label %if.then7, label %if.end16

if.then7:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.198, i32 0, i32 0))
  br label %if.end16

do.body8:                                         ; preds = %if.then
  br i1 %tobool, label %if.then11, label %if.end16

if.then11:                                        ; preds = %do.body8
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26.199, i32 0, i32 0), i32 %3)
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %do.body8, %if.then7, %do.body
  %bandwidth.0 = phi i32 [ 1, %if.then7 ], [ 1, %do.body ], [ %3, %if.then11 ], [ %3, %do.body8 ]
  br label %for.cond

for.cond:                                         ; preds = %cleanup, %if.end16
  %best_psize.0 = phi i32 [ -1, %if.end16 ], [ %best_psize.2, %cleanup ]
  %best_ep.0 = phi %struct.usb_host_endpoint* [ null, %if.end16 ], [ %best_ep.2, %cleanup ]
  %i.0 = phi i32 [ 0, %if.end16 ], [ %inc, %cleanup ]
  %altsetting.0 = phi i32 [ undef, %if.end16 ], [ %altsetting.2, %cleanup ]
  %num_altsetting17 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 2
  %5 = load i32, i32* %num_altsetting17, align 8, !tbaa !167
  %cmp18 = icmp ult i32 %i.0, %5
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %altsetting19 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 0
  %6 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting19, align 8, !tbaa !152
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %6, i64 %idxprom
  %header = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 8
  %bEndpointAddress = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 1
  %7 = load i8, i8* %bEndpointAddress, align 1, !tbaa !157
  %call20 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx, i8 zeroext %7)
  %cmp21 = icmp eq %struct.usb_host_endpoint* %call20, null
  br i1 %cmp21, label %cleanup, label %if.end23

if.end23:                                         ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %8 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %8, i32 0, i32 0
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %call24 = call i32 @uvc_endpoint_max_bpi(%struct.usb_device* %9, %struct.usb_host_endpoint* %call20)
  %cmp25 = icmp uge i32 %call24, %bandwidth.0
  %cmp26 = icmp ule i32 %call24, %best_psize.0
  %or.cond = and i1 %cmp25, %cmp26
  br i1 %or.cond, label %if.then27, label %cleanup

if.then27:                                        ; preds = %if.end23
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bAlternateSetting = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 3
  %10 = load i8, i8* %bAlternateSetting, align 1, !tbaa !448
  %conv = zext i8 %10 to i32
  br label %cleanup

cleanup:                                          ; preds = %if.then27, %if.end23, %for.body
  %best_psize.2 = phi i32 [ %best_psize.0, %for.body ], [ %call24, %if.then27 ], [ %best_psize.0, %if.end23 ]
  %best_ep.2 = phi %struct.usb_host_endpoint* [ %best_ep.0, %for.body ], [ %call20, %if.then27 ], [ %best_ep.0, %if.end23 ]
  %altsetting.2 = phi i32 [ %altsetting.0, %for.body ], [ %conv, %if.then27 ], [ %altsetting.0, %if.end23 ]
  %cleanup.dest.slot.0 = phi i32 [ 8, %for.body ], [ 0, %if.then27 ], [ 0, %if.end23 ]
  %switch = icmp ult i32 %cleanup.dest.slot.0, 1
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp30 = icmp eq %struct.usb_host_endpoint* %best_ep.0, null
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and34 = and i32 %11, 1024
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %cmp30, label %do.body33, label %do.body42

do.body33:                                        ; preds = %for.end
  br i1 %tobool35, label %if.then36, label %cleanup58

if.then36:                                        ; preds = %do.body33
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.27.200, i32 0, i32 0))
  br label %cleanup58

do.body42:                                        ; preds = %for.end
  br i1 %tobool35, label %if.then45, label %do.end49

if.then45:                                        ; preds = %do.body42
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.28.201, i32 0, i32 0), i32 %altsetting.0, i32 %best_psize.0)
  br label %do.end49

do.end49:                                         ; preds = %if.then45, %do.body42
  %dev50 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev50, align 8, !tbaa !133
  %udev51 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %12, i32 0, i32 0
  %13 = load %struct.usb_device*, %struct.usb_device** %udev51, align 8, !tbaa !11
  %call52 = call i32 @usb_set_interface(%struct.usb_device* %13, i32 %2, i32 %altsetting.0)
  %cmp53 = icmp slt i32 %call52, 0
  br i1 %cmp53, label %cleanup58, label %if.end56

if.end56:                                         ; preds = %do.end49
  %call57 = call i32 @uvc_init_video_isoc(%struct.uvc_streaming.870* %stream, %struct.usb_host_endpoint* %best_ep.0, i32 %gfp_flags)
  br label %cleanup58

cleanup58:                                        ; preds = %if.end56, %do.end49, %if.then36, %do.body33
  %ret.0 = phi i32 [ %call57, %if.end56 ], [ undef, %if.then36 ], [ undef, %do.body33 ], [ %call52, %do.end49 ]
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end56 ], [ 1, %if.then36 ], [ 1, %do.body33 ], [ 1, %do.end49 ]
  %retval.0 = phi i32 [ undef, %if.end56 ], [ -5, %if.then36 ], [ -5, %do.body33 ], [ %call52, %do.end49 ]
  %cond = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %cond, label %if.end76, label %cleanup103

if.else65:                                        ; preds = %entry
  %altsetting66 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 0
  %14 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting66, align 8, !tbaa !152
  %arrayidx67 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %14, i64 0
  %header68 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 8
  %bEndpointAddress69 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header68, i32 0, i32 1
  %15 = load i8, i8* %bEndpointAddress69, align 1, !tbaa !157
  %call70 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx67, i8 zeroext %15)
  %cmp71 = icmp eq %struct.usb_host_endpoint* %call70, null
  br i1 %cmp71, label %cleanup103, label %if.end74

if.end74:                                         ; preds = %if.else65
  %call75 = call i32 @uvc_init_video_bulk(%struct.uvc_streaming.870* %stream, %struct.usb_host_endpoint* %call70, i32 %gfp_flags)
  br label %if.end76

if.end76:                                         ; preds = %if.end74, %cleanup58
  %ret.1 = phi i32 [ %call75, %if.end74 ], [ %ret.0, %cleanup58 ]
  %cmp77 = icmp slt i32 %ret.1, 0
  br i1 %cmp77, label %cleanup103, label %if.end80

if.end80:                                         ; preds = %if.end76
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc93, %if.end80
  %i.1 = phi i32 [ 0, %if.end80 ], [ %inc94, %for.inc93 ]
  %cmp82 = icmp ult i32 %i.1, 5
  br i1 %cmp82, label %for.body84, label %for.end95

for.body84:                                       ; preds = %for.cond81
  %urb = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 21
  %idxprom85 = zext i32 %i.1 to i64
  %arrayidx86 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb, i64 0, i64 %idxprom85
  %16 = load %struct.urb*, %struct.urb** %arrayidx86, align 8, !tbaa !74
  %call87 = call i32 @usb_submit_urb(%struct.urb* %16, i32 %gfp_flags)
  %cmp88 = icmp slt i32 %call87, 0
  br i1 %cmp88, label %if.then90, label %for.inc93

if.then90:                                        ; preds = %for.body84
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29.202, i32 0, i32 0), i32 %i.1, i32 %call87)
  call void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 1)
  br label %cleanup103

for.inc93:                                        ; preds = %for.body84
  %inc94 = add i32 %i.1, 1
  br label %for.cond81

for.end95:                                        ; preds = %for.cond81
  %dev96 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %17 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev96, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %17, i32 0, i32 3
  %18 = load i32, i32* %quirks, align 8, !tbaa !53
  %and97 = and i32 %18, 1024
  %tobool98 = icmp ne i32 %and97, 0
  br i1 %tobool98, label %if.then99, label %cleanup103

if.then99:                                        ; preds = %for.end95
  %dev100 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %19 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev100, align 8, !tbaa !133
  %call101 = call i32 @uvc_ctrl_restore_values(%struct.uvc_device.871* %19)
  br label %cleanup103

cleanup103:                                       ; preds = %if.then99, %for.end95, %if.then90, %if.end76, %if.else65, %cleanup58
  %retval.1 = phi i32 [ %retval.0, %cleanup58 ], [ %call87, %if.then90 ], [ -5, %if.else65 ], [ %ret.1, %if.end76 ], [ 0, %if.then99 ], [ 0, %for.end95 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_start(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %0 = bitcast %struct.anon.84* %stats to i8*
  %call = call i8* @__memset(i8* %0, i32 0, i64 152)
  %stats1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream2 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats1, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream2, i32 0, i32 14
  store i32 2048, i32* %min_sof, align 8, !tbaa !438
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_endpoint_max_bpi(%struct.usb_device* %dev, %struct.usb_host_endpoint* %ep) #0 {
entry:
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %0 = load i32, i32* %speed, align 4, !tbaa !406
  switch i32 %0, label %sw.default [
    i32 5, label %sw.bb
    i32 6, label %sw.bb
    i32 3, label %sw.bb1
    i32 4, label %sw.bb8
  ]

sw.bb:                                            ; preds = %entry, %entry
  %ss_ep_comp = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 1
  %wBytesPerInterval = getelementptr inbounds %struct.usb_ss_ep_comp_descriptor, %struct.usb_ss_ep_comp_descriptor* %ss_ep_comp, i32 0, i32 4
  %1 = load i16, i16* %wBytesPerInterval, align 1, !tbaa !449
  %conv = zext i16 %1 to i32
  br label %cleanup

sw.bb1:                                           ; preds = %entry
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc)
  %conv2 = trunc i32 %call to i16
  %desc3 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call4 = call i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %desc3)
  %conv5 = trunc i32 %call4 to i16
  %conv6 = zext i16 %conv2 to i32
  %and = and i32 %conv6, 2047
  %conv7 = zext i16 %conv5 to i32
  %mul = mul nsw i32 %and, %conv7
  br label %cleanup

sw.bb8:                                           ; preds = %entry
  %desc9 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call10 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc9)
  %conv11 = trunc i32 %call10 to i16
  %conv12 = zext i16 %conv11 to i32
  br label %cleanup

sw.default:                                       ; preds = %entry
  %desc13 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call14 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc13)
  %conv15 = trunc i32 %call14 to i16
  %conv16 = zext i16 %conv15 to i32
  %and17 = and i32 %conv16, 2047
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb8, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %and17, %sw.default ], [ %conv12, %sw.bb8 ], [ %mul, %sw.bb1 ], [ %conv, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video_isoc(%struct.uvc_streaming.870* %stream, %struct.usb_host_endpoint* %ep, i32 %gfp_flags) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %call = call i32 @uvc_endpoint_max_bpi(%struct.usb_device* %1, %struct.usb_host_endpoint* %ep)
  %conv = trunc i32 %call to i16
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %2 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !206
  %conv1 = zext i16 %conv to i32
  %call2 = call i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming.870* %stream, i32 %2, i32 %conv1, i32 %gfp_flags)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %conv to i32
  %mul = mul i32 %call2, %conv4
  br label %for.cond

for.cond:                                         ; preds = %for.end, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc40, %for.end ]
  %cmp5 = icmp ult i32 %i.0, 5
  br i1 %cmp5, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call7 = call %struct.urb* @usb_alloc_urb(i32 %call2, i32 %gfp_flags)
  %cmp8 = icmp eq %struct.urb* %call7, null
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.body
  call void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 1)
  br label %cleanup

if.end11:                                         ; preds = %for.body
  %dev12 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev12, align 8, !tbaa !133
  %udev13 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev13, align 8, !tbaa !11
  %dev14 = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 8
  store %struct.usb_device* %4, %struct.usb_device** %dev14, align 8, !tbaa !450
  %5 = bitcast %struct.uvc_streaming.870* %stream to i8*
  %context = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 27
  store i8* %5, i8** %context, align 8, !tbaa !452
  %dev15 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %6 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev15, align 8, !tbaa !133
  %udev16 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %6, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev16, align 8, !tbaa !11
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2
  %8 = load i8, i8* %bEndpointAddress, align 2, !tbaa !194
  %conv17 = zext i8 %8 to i32
  %call18 = call i32 @__create_pipe(%struct.usb_device* %7, i32 %conv17)
  %or = or i32 0, %call18
  %or19 = or i32 %or, 128
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 10
  store i32 %or19, i32* %pipe, align 8, !tbaa !453
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 13
  store i32 6, i32* %transfer_flags, align 4, !tbaa !454
  %urb_dma = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 23
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom
  %9 = load i64, i64* %arrayidx, align 8, !tbaa !143
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 15
  store i64 %9, i64* %transfer_dma, align 8, !tbaa !455
  %desc20 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc20, i32 0, i32 5
  %10 = load i8, i8* %bInterval, align 2, !tbaa !456
  %conv21 = zext i8 %10 to i32
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 25
  store i32 %conv21, i32* %interval, align 8, !tbaa !457
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom22 = zext i32 %i.0 to i64
  %arrayidx23 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom22
  %11 = load i8*, i8** %arrayidx23, align 8, !tbaa !74
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 14
  store i8* %11, i8** %transfer_buffer, align 8, !tbaa !458
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 28
  store void (%struct.urb*)* @uvc_video_complete, void (%struct.urb*)** %complete, align 8, !tbaa !459
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 24
  store i32 %call2, i32* %number_of_packets, align 4, !tbaa !460
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 19
  store i32 %mul, i32* %transfer_buffer_length, align 8, !tbaa !461
  br label %for.cond24

for.cond24:                                       ; preds = %for.body27, %if.end11
  %j.0 = phi i32 [ 0, %if.end11 ], [ %inc, %for.body27 ]
  %cmp25 = icmp ult i32 %j.0, %call2
  br i1 %cmp25, label %for.body27, label %for.end

for.body27:                                       ; preds = %for.cond24
  %conv28 = zext i16 %conv to i32
  %mul29 = mul i32 %j.0, %conv28
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 29
  %idxprom30 = zext i32 %j.0 to i64
  %arrayidx31 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom30
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx31, i32 0, i32 0
  store i32 %mul29, i32* %offset, align 8, !tbaa !462
  %conv32 = zext i16 %conv to i32
  %iso_frame_desc33 = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 29
  %idxprom34 = zext i32 %j.0 to i64
  %arrayidx35 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc33, i64 0, i64 %idxprom34
  %length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx35, i32 0, i32 1
  store i32 %conv32, i32* %length, align 4, !tbaa !464
  %inc = add i32 %j.0, 1
  br label %for.cond24

for.end:                                          ; preds = %for.cond24
  %urb36 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 21
  %idxprom37 = zext i32 %i.0 to i64
  %arrayidx38 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb36, i64 0, i64 %idxprom37
  store %struct.urb* %call7, %struct.urb** %arrayidx38, align 8, !tbaa !74
  %inc40 = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then10, %for.cond, %entry
  %retval.0 = phi i32 [ -12, %if.then10 ], [ -12, %entry ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video_bulk(%struct.uvc_streaming.870* %stream, %struct.usb_host_endpoint* %ep, i32 %gfp_flags) #0 {
entry:
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc)
  %conv = trunc i32 %call to i16
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %0 = load i32, i32* %dwMaxPayloadTransferSize, align 2, !tbaa !447
  %bulk = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk, i32 0, i32 4
  store i32 %0, i32* %max_payload_size, align 4, !tbaa !465
  %conv1 = zext i16 %conv to i32
  %call2 = call i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming.870* %stream, i32 %0, i32 %conv1, i32 %gfp_flags)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %conv to i32
  %mul = mul i32 %call2, %conv4
  %desc5 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call6 = call i32 @usb_endpoint_dir_in.203(%struct.usb_endpoint_descriptor* %desc5)
  %tobool = icmp ne i32 %call6, 0
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %1 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %1, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %desc8 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc8, i32 0, i32 2
  %3 = load i8, i8* %bEndpointAddress, align 2, !tbaa !194
  %conv9 = zext i8 %3 to i32
  %call10 = call i32 @__create_pipe(%struct.usb_device* %2, i32 %conv9)
  %or = or i32 -1073741824, %call10
  %or11 = or i32 %or, 128
  %pipe.0 = select i1 %tobool, i32 %or11, i32 %or
  %type = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %4 = load i32, i32* %type, align 8, !tbaa !124
  %cmp20 = icmp eq i32 %4, 2
  %.mul = select i1 %cmp20, i32 0, i32 %mul
  br label %for.cond

for.cond:                                         ; preds = %if.end30, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %if.end30 ]
  %cmp24 = icmp ult i32 %i.0, 5
  br i1 %cmp24, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call26 = call %struct.urb* @usb_alloc_urb(i32 0, i32 %gfp_flags)
  %cmp27 = icmp eq %struct.urb* %call26, null
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body
  call void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 1)
  br label %cleanup

if.end30:                                         ; preds = %for.body
  %dev31 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev31, align 8, !tbaa !133
  %udev32 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %5, i32 0, i32 0
  %6 = load %struct.usb_device*, %struct.usb_device** %udev32, align 8, !tbaa !11
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom
  %7 = load i8*, i8** %arrayidx, align 8, !tbaa !74
  %8 = bitcast %struct.uvc_streaming.870* %stream to i8*
  call void @usb_fill_bulk_urb(%struct.urb* %call26, %struct.usb_device* %6, i32 %pipe.0, i8* %7, i32 %.mul, void (%struct.urb*)* @uvc_video_complete, i8* %8)
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %call26, i32 0, i32 13
  store i32 4, i32* %transfer_flags, align 4, !tbaa !454
  %urb_dma = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 23
  %idxprom33 = zext i32 %i.0 to i64
  %arrayidx34 = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom33
  %9 = load i64, i64* %arrayidx34, align 8, !tbaa !143
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %call26, i32 0, i32 15
  store i64 %9, i64* %transfer_dma, align 8, !tbaa !455
  %urb35 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 21
  %idxprom36 = zext i32 %i.0 to i64
  %arrayidx37 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb35, i64 0, i64 %idxprom36
  store %struct.urb* %call26, %struct.urb** %arrayidx37, align 8, !tbaa !74
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then29, %for.cond, %entry
  %retval.0 = phi i32 [ -12, %if.then29 ], [ -12, %entry ], [ 0, %for.cond ]
  ret i32 %retval.0
}

declare i32 @usb_submit_urb(%struct.urb*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 4
  %0 = load i16, i16* %wMaxPacketSize, align 1, !tbaa !110
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 2047
  ret i32 %and
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming.870* %stream, i32 %size, i32 %psize, i32 %gfp_flags) #0 {
entry:
  %urb_size = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %0 = load i32, i32* %urb_size, align 8, !tbaa !440
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %urb_size1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %1 = load i32, i32* %urb_size1, align 8, !tbaa !440
  %div = udiv i32 %1, %psize
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %size, %psize
  %sub = sub i32 %add, 1
  %div2 = udiv i32 %sub, %psize
  %cmp = icmp ugt i32 %div2, 32
  %.div2 = select i1 %cmp, i32 32, i32 %div2
  br label %for.cond

for.cond:                                         ; preds = %for.inc27, %if.end
  %npackets.1 = phi i32 [ %.div2, %if.end ], [ %div28, %for.inc27 ]
  %cmp5 = icmp ugt i32 %npackets.1, 1
  br i1 %cmp5, label %for.body, label %do.body30

for.body:                                         ; preds = %for.cond
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp7 = icmp ult i32 %i.0, 5
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %mul = mul i32 %psize, %npackets.1
  %urb_size9 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  store i32 %mul, i32* %urb_size9, align 8, !tbaa !440
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %2 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %2, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %urb_size10 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %4 = load i32, i32* %urb_size10, align 8, !tbaa !440
  %conv = zext i32 %4 to i64
  %or = or i32 %gfp_flags, 512
  %urb_dma = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 23
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom
  %call = call i8* @usb_alloc_coherent(%struct.usb_device* %3, i64 %conv, i32 %or, i64* %arrayidx)
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom11 = zext i32 %i.0 to i64
  %arrayidx12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom11
  store i8* %call, i8** %arrayidx12, align 8, !tbaa !74
  %urb_buffer13 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 22
  %idxprom14 = zext i32 %i.0 to i64
  %arrayidx15 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer13, i64 0, i64 %idxprom14
  %5 = load i8*, i8** %arrayidx15, align 8, !tbaa !74
  %tobool16 = icmp ne i8* %5, null
  br i1 %tobool16, label %for.inc, label %if.then17

if.then17:                                        ; preds = %for.body8
  call void @uvc_free_urb_buffers(%struct.uvc_streaming.870* %stream)
  br label %for.end

for.inc:                                          ; preds = %for.body8
  %inc = add i32 %i.0, 1
  br label %for.cond6

for.end:                                          ; preds = %if.then17, %for.cond6
  %cmp19 = icmp eq i32 %i.0, 5
  br i1 %cmp19, label %do.body, label %for.inc27

do.body:                                          ; preds = %for.end
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %6, 1024
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %if.then23, label %cleanup

if.then23:                                        ; preds = %do.body
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.30.208, i32 0, i32 0), i32 5, i32 %npackets.1, i32 %psize)
  br label %cleanup

for.inc27:                                        ; preds = %for.end
  %div28 = udiv i32 %npackets.1, 2
  br label %for.cond

do.body30:                                        ; preds = %for.cond
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and31 = and i32 %7, 1024
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %cleanup

if.then33:                                        ; preds = %do.body30
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.31.209, i32 0, i32 0), i32 %psize)
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %do.body30, %if.then23, %do.body, %if.then
  %retval.0 = phi i32 [ %div, %if.then ], [ %npackets.1, %if.then23 ], [ %npackets.1, %do.body ], [ 0, %if.then33 ], [ 0, %do.body30 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_dir_in.203(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 2
  %0 = load i8, i8* %bEndpointAddress, align 1, !tbaa !112
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 128
  %cmp = icmp eq i32 %and, 128
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

declare %struct.urb* @usb_alloc_urb(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_complete(%struct.urb* %urb) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %context = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  %0 = load i8*, i8** %context, align 8, !tbaa !452
  %1 = bitcast i8* %0 to %struct.uvc_streaming.870*
  %queue1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 18
  %status = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %2 = load i32, i32* %status, align 8, !tbaa !466
  switch i32 %2, label %sw.default [
    i32 0, label %do.body5
    i32 -2, label %sw.bb
    i32 -104, label %sw.bb3
    i32 -108, label %sw.bb3
  ]

sw.default:                                       ; preds = %entry
  %status2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %3 = load i32, i32* %status2, align 8, !tbaa !466
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32.204, i32 0, i32 0), i32 %3)
  br label %sw.bb

sw.bb:                                            ; preds = %sw.default, %entry
  %frozen = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %cleanup.cont, label %sw.bb3

sw.bb3:                                           ; preds = %sw.bb, %entry, %entry
  %status4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %4 = load i32, i32* %status4, align 8, !tbaa !466
  %cmp = icmp eq i32 %4, -108
  %conv = zext i1 %cmp to i32
  call void @uvc_queue_cancel(%struct.uvc_video_queue* %queue1, i32 %conv)
  br label %cleanup.cont

do.body5:                                         ; preds = %entry
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #8
  %6 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #8
  %cmp6 = icmp eq i64* %__dummy, %__dummy2
  %conv7 = zext i1 %cmp6 to i32
  %7 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 4
  %call8 = call %struct.raw_spinlock* @spinlock_check.184(%struct.spinlock* %irqlock)
  %call9 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call8)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 5
  %call12 = call i32 @list_empty.205(%struct.list_head* %irqqueue)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end17, label %if.then14

if.then14:                                        ; preds = %do.body5
  %irqqueue15 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue15, i32 0, i32 0
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  %10 = bitcast %struct.list_head* %9 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 -576
  %11 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %do.body5
  %buf.0 = phi %struct.uvc_buffer* [ null, %do.body5 ], [ %11, %if.then14 ]
  %irqlock18 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 4
  call void @spin_unlock_irqrestore.187(%struct.spinlock* %irqlock18, i64 %call9)
  %decode = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %1, i32 0, i32 19
  %12 = load void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)*, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)** %decode, align 8, !tbaa !467
  call void %12(%struct.urb* %urb, %struct.uvc_streaming.870* %1, %struct.uvc_buffer* %buf.0)
  %call19 = call i32 @usb_submit_urb(%struct.urb* %urb, i32 17301536)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then22, label %cleanup.cont

if.then22:                                        ; preds = %if.end17
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33.206, i32 0, i32 0), i32 %call19)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then22, %if.end17, %sw.bb3, %sw.bb
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_fill_bulk_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context) #1 {
entry:
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev1, align 8, !tbaa !450
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 10
  store i32 %pipe, i32* %pipe2, align 8, !tbaa !453
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  store i8* %transfer_buffer, i8** %transfer_buffer3, align 8, !tbaa !458
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %buffer_length, i32* %transfer_buffer_length, align 8, !tbaa !461
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 28
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete, align 8, !tbaa !459
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  store i8* %context, i8** %context4, align 8, !tbaa !452
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.205(%struct.list_head* %head) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.207(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.207(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load volatile i8, i8* %p, align 1, !tbaa !104
  store i8 %0, i8* %res, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !468
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !469
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

declare i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_maxp_mult(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 4
  %0 = load i16, i16* %wMaxPacketSize, align 1, !tbaa !110
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 6144
  %shr = ashr i32 %and, 11
  %add = add nsw i32 %shr, 1
  ret i32 %add
}

; Function Attrs: nounwind uwtable
define i32 @uvc_video_init(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %nformats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %0 = load i32, i32* %nformats, align 4, !tbaa !163
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7.212, i32 0, i32 0))
  br label %cleanup

if.end:                                           ; preds = %entry
  %active = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 4
  call void @atomic_set.213(%struct.atomic_t* %active, i32 0)
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %1 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %1, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %3 = load i32, i32* %intfnum, align 8, !tbaa !153
  %call1 = call i32 @usb_set_interface(%struct.usb_device* %2, i32 %3, i32 0)
  %call2 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl, i32 1, i8 zeroext -121)
  %cmp3 = icmp eq i32 %call2, 0
  br i1 %cmp3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %call5 = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl, i32 1)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %call7 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl, i32 1, i8 zeroext -127)
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %cleanup, label %if.end10

if.end10:                                         ; preds = %if.end6
  %nformats11 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 10
  %4 = load i32, i32* %nformats11, align 4, !tbaa !163
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end10
  %format.0 = phi %struct.uvc_format* [ null, %if.end10 ], [ %arrayidx, %for.inc ]
  %i.0 = phi i32 [ %4, %if.end10 ], [ %dec, %for.inc ]
  %cmp12 = icmp ugt i32 %i.0, 0
  br i1 %cmp12, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format13 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 11
  %5 = load %struct.uvc_format*, %struct.uvc_format** %format13, align 8, !tbaa !100
  %sub = sub i32 %i.0, 1
  %idxprom = zext i32 %sub to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %5, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 1
  %6 = load i8, i8* %index, align 1, !tbaa !175
  %conv = zext i8 %6 to i32
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %7 = load i8, i8* %bFormatIndex, align 1, !tbaa !332
  %conv14 = zext i8 %7 to i32
  %cmp15 = icmp eq i32 %conv, %conv14
  br i1 %cmp15, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %dec = add i32 %i.0, -1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %format.1 = phi %struct.uvc_format* [ %arrayidx, %for.body ], [ %format.0, %for.cond ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 7
  %8 = load i32, i32* %nframes, align 4, !tbaa !166
  %cmp19 = icmp eq i32 %8, 0
  br i1 %cmp19, label %if.then21, label %if.end23

if.then21:                                        ; preds = %for.end
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8.214, i32 0, i32 0))
  br label %cleanup

if.end23:                                         ; preds = %for.end
  %nframes24 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 7
  %9 = load i32, i32* %nframes24, align 4, !tbaa !166
  br label %for.cond25

for.cond25:                                       ; preds = %for.inc40, %if.end23
  %frame.0 = phi %struct.uvc_frame* [ null, %if.end23 ], [ %arrayidx32, %for.inc40 ]
  %i.1 = phi i32 [ %9, %if.end23 ], [ %dec41, %for.inc40 ]
  %cmp26 = icmp ugt i32 %i.1, 0
  br i1 %cmp26, label %for.body28, label %for.end42

for.body28:                                       ; preds = %for.cond25
  %frame29 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 8
  %10 = load %struct.uvc_frame*, %struct.uvc_frame** %frame29, align 8, !tbaa !164
  %sub30 = sub i32 %i.1, 1
  %idxprom31 = zext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %10, i64 %idxprom31
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx32, i32 0, i32 0
  %11 = load i8, i8* %bFrameIndex, align 8, !tbaa !186
  %conv33 = zext i8 %11 to i32
  %bFrameIndex34 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %12 = load i8, i8* %bFrameIndex34, align 1, !tbaa !333
  %conv35 = zext i8 %12 to i32
  %cmp36 = icmp eq i32 %conv33, %conv35
  br i1 %cmp36, label %for.end42, label %for.inc40

for.inc40:                                        ; preds = %for.body28
  %dec41 = add i32 %i.1, -1
  br label %for.cond25

for.end42:                                        ; preds = %for.body28, %for.cond25
  %frame.1 = phi %struct.uvc_frame* [ %arrayidx32, %for.body28 ], [ %frame.0, %for.cond25 ]
  %index43 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 1
  %13 = load i8, i8* %index43, align 1, !tbaa !175
  %bFormatIndex44 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  store i8 %13, i8* %bFormatIndex44, align 1, !tbaa !332
  %bFrameIndex45 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.1, i32 0, i32 0
  %14 = load i8, i8* %bFrameIndex45, align 8, !tbaa !186
  %bFrameIndex46 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  store i8 %14, i8* %bFrameIndex46, align 1, !tbaa !333
  %def_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 13
  store %struct.uvc_format* %format.1, %struct.uvc_format** %def_format, align 8, !tbaa !330
  %cur_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 14
  store %struct.uvc_format* %format.1, %struct.uvc_format** %cur_format, align 8, !tbaa !335
  %cur_frame = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 15
  store %struct.uvc_frame* %frame.1, %struct.uvc_frame** %cur_frame, align 8, !tbaa !283
  %type = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 9
  %15 = load i32, i32* %type, align 8, !tbaa !124
  %cmp47 = icmp eq i32 %15, 1
  br i1 %cmp47, label %if.then49, label %if.else60

if.then49:                                        ; preds = %for.end42
  %dev50 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %16 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev50, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %16, i32 0, i32 3
  %17 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %17, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then51, label %if.else

if.then51:                                        ; preds = %if.then49
  %decode = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 19
  store void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)* bitcast (void (%struct.urb*, %struct.uvc_streaming.2601*, %struct.uvc_buffer*)* @uvc_video_decode_isight to void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)*), void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)** %decode, align 8, !tbaa !467
  br label %cleanup

if.else:                                          ; preds = %if.then49
  %intf = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %18 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !75
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %18, i32 0, i32 2
  %19 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp52 = icmp ugt i32 %19, 1
  %decode55 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 19
  %uvc_video_decode_bulk.sink = select i1 %cmp52, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)* @uvc_video_decode_isoc, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)* @uvc_video_decode_bulk
  store void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)* %uvc_video_decode_bulk.sink, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)** %decode55, align 8, !tbaa !467
  br label %cleanup

if.else60:                                        ; preds = %for.end42
  %intf61 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %20 = load %struct.usb_interface*, %struct.usb_interface** %intf61, align 8, !tbaa !75
  %num_altsetting62 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %20, i32 0, i32 2
  %21 = load i32, i32* %num_altsetting62, align 8, !tbaa !167
  %cmp63 = icmp eq i32 %21, 1
  br i1 %cmp63, label %if.then65, label %if.else67

if.then65:                                        ; preds = %if.else60
  %decode66 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 19
  store void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)* @uvc_video_encode_bulk, void (%struct.urb*, %struct.uvc_streaming.870*, %struct.uvc_buffer*)** %decode66, align 8, !tbaa !467
  br label %cleanup

if.else67:                                        ; preds = %if.else60
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.9.215, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.else67, %if.then65, %if.else, %if.then51, %if.then21, %if.end6, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ -22, %if.then21 ], [ -22, %if.else67 ], [ %call7, %if.end6 ], [ 0, %if.then51 ], [ 0, %if.else ], [ 0, %if.then65 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_set.213(%struct.atomic_t* %v, i32 %i) #3 {
entry:
  %__u = alloca %struct.atomic_t, align 4
  %0 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %__val = bitcast %struct.atomic_t* %__u to i32*
  store i32 %i, i32* %__val, align 4, !tbaa !104
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %1 = bitcast i32* %counter to i8*
  %__c = bitcast %struct.atomic_t* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.227(i8* %1, i8* %arraydecay, i32 4)
  %__val1 = bitcast %struct.atomic_t* %__u to i32*
  %2 = load i32, i32* %__val1, align 4, !tbaa !104
  %3 = bitcast %struct.atomic_t* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %3) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_isoc(%struct.urb* %urb, %struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %entry ], [ %buf.addr.4, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 24
  %0 = load i32, i32* %number_of_packets, align 4, !tbaa !460
  %cmp = icmp slt i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom
  %status = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx, i32 0, i32 3
  %1 = load i32, i32* %status, align 4, !tbaa !470
  %cmp1 = icmp slt i32 %1, 0
  br i1 %cmp1, label %do.body, label %if.end10

do.body:                                          ; preds = %for.body
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %2, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %do.end

if.then2:                                         ; preds = %do.body
  %iso_frame_desc3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc3, i64 0, i64 %idxprom4
  %status6 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx5, i32 0, i32 3
  %3 = load i32, i32* %status6, align 4, !tbaa !470
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.317, i32 0, i32 0), i32 %3)
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body
  %cmp7 = icmp ne %struct.uvc_buffer* %buf.addr.0, null
  br i1 %cmp7, label %if.then8, label %for.inc

if.then8:                                         ; preds = %do.end
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.0, i32 0, i32 3
  store i32 1, i32* %error, align 4, !tbaa !214
  br label %for.inc

if.end10:                                         ; preds = %for.body
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %4 = load i8*, i8** %transfer_buffer, align 8, !tbaa !458
  %iso_frame_desc11 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom12 = sext i32 %i.0 to i64
  %arrayidx13 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc11, i64 0, i64 %idxprom12
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx13, i32 0, i32 0
  %5 = load i32, i32* %offset, align 8, !tbaa !462
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext
  br label %do.body14

do.body14:                                        ; preds = %do.cond23, %if.end10
  %buf.addr.1 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.end10 ], [ %buf.addr.2, %do.cond23 ]
  %iso_frame_desc15 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom16 = sext i32 %i.0 to i64
  %arrayidx17 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc15, i64 0, i64 %idxprom16
  %actual_length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx17, i32 0, i32 2
  %6 = load i32, i32* %actual_length, align 8, !tbaa !471
  %call18 = call i32 @uvc_video_decode_start(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.1, i8* %add.ptr, i32 %6)
  %cmp19 = icmp eq i32 %call18, -11
  br i1 %cmp19, label %if.then20, label %do.cond23

if.then20:                                        ; preds = %do.body14
  call void @uvc_video_validate_buffer(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.1)
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call21 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf.addr.1)
  br label %do.cond23

do.cond23:                                        ; preds = %if.then20, %do.body14
  %buf.addr.2 = phi %struct.uvc_buffer* [ %call21, %if.then20 ], [ %buf.addr.1, %do.body14 ]
  %cmp24 = icmp eq i32 %call18, -11
  br i1 %cmp24, label %do.body14, label %do.end25

do.end25:                                         ; preds = %do.cond23
  %cmp26 = icmp slt i32 %call18, 0
  br i1 %cmp26, label %for.inc, label %if.end28

if.end28:                                         ; preds = %do.end25
  %idx.ext29 = sext i32 %call18 to i64
  %add.ptr30 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext29
  %iso_frame_desc31 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom32 = sext i32 %i.0 to i64
  %arrayidx33 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc31, i64 0, i64 %idxprom32
  %actual_length34 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx33, i32 0, i32 2
  %7 = load i32, i32* %actual_length34, align 8, !tbaa !471
  %sub = sub i32 %7, %call18
  call void @uvc_video_decode_data(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %add.ptr30, i32 %sub)
  %iso_frame_desc35 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom36 = sext i32 %i.0 to i64
  %arrayidx37 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc35, i64 0, i64 %idxprom36
  %actual_length38 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx37, i32 0, i32 2
  %8 = load i32, i32* %actual_length38, align 8, !tbaa !471
  call void @uvc_video_decode_end(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %add.ptr, i32 %8)
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 2
  %9 = load i32, i32* %state, align 8, !tbaa !210
  %cmp39 = icmp eq i32 %9, 3
  br i1 %cmp39, label %if.then40, label %for.inc

if.then40:                                        ; preds = %if.end28
  call void @uvc_video_validate_buffer(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.2)
  %queue41 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call42 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue41, %struct.uvc_buffer* %buf.addr.2)
  br label %for.inc

for.inc:                                          ; preds = %if.then40, %if.end28, %do.end25, %if.then8, %do.end
  %buf.addr.4 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.then8 ], [ %buf.addr.0, %do.end ], [ %buf.addr.2, %do.end25 ], [ %call42, %if.then40 ], [ %buf.addr.2, %if.end28 ]
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_bulk(%struct.urb* %urb, %struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %0 = load i32, i32* %actual_length, align 4, !tbaa !472
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %bulk = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk, i32 0, i32 1
  %1 = load i32, i32* %header_size, align 8, !tbaa !444
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %2 = load i8*, i8** %transfer_buffer, align 8, !tbaa !458
  %actual_length2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %3 = load i32, i32* %actual_length2, align 4, !tbaa !472
  %bulk3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk3, i32 0, i32 3
  %4 = load i32, i32* %payload_size, align 8, !tbaa !446
  %add = add i32 %4, %3
  store i32 %add, i32* %payload_size, align 8, !tbaa !446
  %bulk4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size5 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk4, i32 0, i32 1
  %5 = load i32, i32* %header_size5, align 8, !tbaa !444
  %cmp6 = icmp eq i32 %5, 0
  br i1 %cmp6, label %land.lhs.true7, label %if.end25

land.lhs.true7:                                   ; preds = %if.end
  %bulk8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %skip_payload = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk8, i32 0, i32 2
  %6 = load i32, i32* %skip_payload, align 4, !tbaa !445
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end25, label %if.then9

if.then9:                                         ; preds = %land.lhs.true7
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then9
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %if.then9 ], [ %buf.addr.1, %do.cond ]
  %call = call i32 @uvc_video_decode_start(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.0, i8* %2, i32 %3)
  %cmp10 = icmp eq i32 %call, -11
  br i1 %cmp10, label %if.then11, label %do.cond

if.then11:                                        ; preds = %do.body
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call12 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf.addr.0)
  br label %do.cond

do.cond:                                          ; preds = %if.then11, %do.body
  %buf.addr.1 = phi %struct.uvc_buffer* [ %call12, %if.then11 ], [ %buf.addr.0, %do.body ]
  %cmp14 = icmp eq i32 %call, -11
  br i1 %cmp14, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %cmp15 = icmp slt i32 %call, 0
  %cmp16 = icmp eq %struct.uvc_buffer* %buf.addr.1, null
  %or.cond = or i1 %cmp15, %cmp16
  %bulk18 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  br i1 %or.cond, label %if.then17, label %if.else

if.then17:                                        ; preds = %do.end
  %skip_payload19 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk18, i32 0, i32 2
  store i32 1, i32* %skip_payload19, align 4, !tbaa !445
  br label %if.end25

if.else:                                          ; preds = %do.end
  %header = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk18, i32 0, i32 0
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %header, i32 0, i32 0
  %conv = sext i32 %call to i64
  %call21 = call i8* @__memcpy(i8* %arraydecay, i8* %2, i64 %conv)
  %bulk22 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size23 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk22, i32 0, i32 1
  store i32 %call, i32* %header_size23, align 8, !tbaa !444
  %idx.ext = sext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext
  %sub = sub nsw i32 %3, %call
  br label %if.end25

if.end25:                                         ; preds = %if.else, %if.then17, %land.lhs.true7, %if.end
  %mem.1 = phi i8* [ %2, %land.lhs.true7 ], [ %2, %if.end ], [ %2, %if.then17 ], [ %add.ptr, %if.else ]
  %buf.addr.2 = phi %struct.uvc_buffer* [ %buf, %land.lhs.true7 ], [ %buf, %if.end ], [ %buf.addr.1, %if.else ], [ %buf.addr.1, %if.then17 ]
  %len.1 = phi i32 [ %3, %land.lhs.true7 ], [ %3, %if.end ], [ %3, %if.then17 ], [ %sub, %if.else ]
  %bulk26 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %skip_payload27 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk26, i32 0, i32 2
  %7 = load i32, i32* %skip_payload27, align 4, !tbaa !445
  %tobool28 = icmp eq i32 %7, 0
  %cmp30 = icmp ne %struct.uvc_buffer* %buf.addr.2, null
  %or.cond1 = and i1 %tobool28, %cmp30
  br i1 %or.cond1, label %if.then32, label %if.end33

if.then32:                                        ; preds = %if.end25
  call void @uvc_video_decode_data(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %mem.1, i32 %len.1)
  br label %if.end33

if.end33:                                         ; preds = %if.then32, %if.end25
  %actual_length34 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %8 = load i32, i32* %actual_length34, align 4, !tbaa !472
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  %9 = load i32, i32* %transfer_buffer_length, align 8, !tbaa !461
  %cmp35 = icmp ult i32 %8, %9
  br i1 %cmp35, label %if.then43, label %lor.lhs.false37

lor.lhs.false37:                                  ; preds = %if.end33
  %bulk38 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size39 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk38, i32 0, i32 3
  %10 = load i32, i32* %payload_size39, align 8, !tbaa !446
  %bulk40 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk40, i32 0, i32 4
  %11 = load i32, i32* %max_payload_size, align 4, !tbaa !465
  %cmp41 = icmp uge i32 %10, %11
  br i1 %cmp41, label %if.then43, label %cleanup.cont

if.then43:                                        ; preds = %lor.lhs.false37, %if.end33
  %bulk44 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %skip_payload45 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk44, i32 0, i32 2
  %12 = load i32, i32* %skip_payload45, align 4, !tbaa !445
  %tobool46 = icmp eq i32 %12, 0
  %cmp48 = icmp ne %struct.uvc_buffer* %buf.addr.2, null
  %or.cond2 = and i1 %tobool46, %cmp48
  br i1 %or.cond2, label %if.then50, label %if.end62

if.then50:                                        ; preds = %if.then43
  %bulk51 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header52 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk51, i32 0, i32 0
  %arraydecay53 = getelementptr inbounds [256 x i8], [256 x i8]* %header52, i32 0, i32 0
  %bulk54 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size55 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk54, i32 0, i32 3
  %13 = load i32, i32* %payload_size55, align 8, !tbaa !446
  call void @uvc_video_decode_end(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %arraydecay53, i32 %13)
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 2
  %14 = load i32, i32* %state, align 8, !tbaa !210
  %cmp56 = icmp eq i32 %14, 3
  br i1 %cmp56, label %if.then58, label %if.end62

if.then58:                                        ; preds = %if.then50
  %queue59 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call60 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue59, %struct.uvc_buffer* %buf.addr.2)
  br label %if.end62

if.end62:                                         ; preds = %if.then58, %if.then50, %if.then43
  %bulk63 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size64 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk63, i32 0, i32 1
  store i32 0, i32* %header_size64, align 8, !tbaa !444
  %bulk65 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %skip_payload66 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk65, i32 0, i32 2
  store i32 0, i32* %skip_payload66, align 4, !tbaa !445
  %bulk67 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size68 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk67, i32 0, i32 3
  store i32 0, i32* %payload_size68, align 8, !tbaa !446
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end62, %lor.lhs.false37, %land.lhs.true
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_encode_bulk(%struct.urb* %urb, %struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %0 = load i8*, i8** %transfer_buffer, align 8, !tbaa !458
  %urb_size = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %1 = load i32, i32* %urb_size, align 8, !tbaa !440
  %cmp = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %bulk = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk, i32 0, i32 1
  %2 = load i32, i32* %header_size, align 8, !tbaa !444
  %cmp1 = icmp eq i32 %2, 0
  br i1 %cmp1, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %call = call i32 @uvc_video_encode_header(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %0, i32 %1)
  %bulk3 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size4 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk3, i32 0, i32 1
  store i32 %call, i32* %header_size4, align 8, !tbaa !444
  %bulk5 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk5, i32 0, i32 3
  %3 = load i32, i32* %payload_size, align 8, !tbaa !446
  %add = add i32 %3, %call
  store i32 %add, i32* %payload_size, align 8, !tbaa !446
  %idx.ext = sext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  %sub = sub nsw i32 %1, %call
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end
  %mem.0 = phi i8* [ %add.ptr, %if.then2 ], [ %0, %if.end ]
  %len.0 = phi i32 [ %sub, %if.then2 ], [ %1, %if.end ]
  %call7 = call i32 @uvc_video_encode_data(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %mem.0, i32 %len.0)
  %bulk8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size9 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk8, i32 0, i32 3
  %4 = load i32, i32* %payload_size9, align 8, !tbaa !446
  %add10 = add i32 %4, %call7
  store i32 %add10, i32* %payload_size9, align 8, !tbaa !446
  %sub11 = sub nsw i32 %len.0, %call7
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %5 = load i32, i32* %bytesused, align 4, !tbaa !217
  %queue = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 3
  %6 = load i32, i32* %buf_used, align 4, !tbaa !473
  %cmp12 = icmp eq i32 %5, %6
  br i1 %cmp12, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %bulk13 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size14 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk13, i32 0, i32 3
  %7 = load i32, i32* %payload_size14, align 8, !tbaa !446
  %bulk15 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk15, i32 0, i32 4
  %8 = load i32, i32* %max_payload_size, align 4, !tbaa !465
  %cmp16 = icmp eq i32 %7, %8
  br i1 %cmp16, label %if.then17, label %if.end35

if.then17:                                        ; preds = %lor.lhs.false, %if.end6
  %bytesused18 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %9 = load i32, i32* %bytesused18, align 4, !tbaa !217
  %queue19 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %buf_used20 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue19, i32 0, i32 3
  %10 = load i32, i32* %buf_used20, align 4, !tbaa !473
  %cmp21 = icmp eq i32 %9, %10
  br i1 %cmp21, label %if.then22, label %if.end30

if.then22:                                        ; preds = %if.then17
  %queue23 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %buf_used24 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue23, i32 0, i32 3
  store i32 0, i32* %buf_used24, align 4, !tbaa !473
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !210
  %sequence = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  %11 = load i32, i32* %sequence, align 4, !tbaa !442
  %inc = add i32 %11, 1
  store i32 %inc, i32* %sequence, align 4, !tbaa !442
  %buf25 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %sequence26 = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf25, i32 0, i32 4
  store i32 %inc, i32* %sequence26, align 8, !tbaa !474
  %queue27 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %call28 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue27, %struct.uvc_buffer* %buf)
  %last_fid = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %12 = load i8, i8* %last_fid, align 8, !tbaa !443
  %conv = zext i8 %12 to i32
  %xor = xor i32 %conv, 1
  %conv29 = trunc i32 %xor to i8
  store i8 %conv29, i8* %last_fid, align 8, !tbaa !443
  br label %if.end30

if.end30:                                         ; preds = %if.then22, %if.then17
  %bulk31 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %header_size32 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk31, i32 0, i32 1
  store i32 0, i32* %header_size32, align 8, !tbaa !444
  %bulk33 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size34 = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk33, i32 0, i32 3
  store i32 0, i32* %payload_size34, align 8, !tbaa !446
  br label %if.end35

if.end35:                                         ; preds = %if.end30, %lor.lhs.false
  %urb_size36 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 24
  %13 = load i32, i32* %urb_size36, align 8, !tbaa !440
  %sub37 = sub i32 %13, %sub11
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %entry
  %sub37.sink = phi i32 [ %sub37, %if.end35 ], [ 0, %entry ]
  %transfer_buffer_length38 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %sub37.sink, i32* %transfer_buffer_length38, align 8, !tbaa !461
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_encode_header(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  store i8 2, i8* %arrayidx, align 1, !tbaa !104
  %last_fid = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %0 = load i8, i8* %last_fid, align 8, !tbaa !443
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 1
  %or = or i32 130, %and
  %conv1 = trunc i32 %or to i8
  %arrayidx2 = getelementptr inbounds i8, i8* %data, i64 1
  store i8 %conv1, i8* %arrayidx2, align 1, !tbaa !104
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_encode_data(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %__UNIQUE_ID_min1_24 = alloca i32, align 4
  %__UNIQUE_ID_min2_25 = alloca i32, align 4
  %__UNIQUE_ID_min1_26 = alloca i32, align 4
  %__UNIQUE_ID_min2_27 = alloca i32, align 4
  %queue1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 18
  %mem2 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %0 = load i8*, i8** %mem2, align 8, !tbaa !215
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %1 = load i32, i32* %buf_used, align 4, !tbaa !219
  %idx.ext = zext i32 %1 to i64
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext
  %2 = bitcast i32* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 %len, i32* %__UNIQUE_ID_min1_24, align 4, !tbaa !9
  %3 = bitcast i32* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #8
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %4 = load i32, i32* %bytesused, align 4, !tbaa !217
  %buf_used3 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %5 = load i32, i32* %buf_used3, align 4, !tbaa !219
  %sub = sub i32 %4, %5
  store i32 %sub, i32* %__UNIQUE_ID_min2_25, align 4, !tbaa !9
  %cmp = icmp eq i32* %__UNIQUE_ID_min1_24, %__UNIQUE_ID_min2_25
  %conv = zext i1 %cmp to i32
  %6 = load i32, i32* %__UNIQUE_ID_min1_24, align 4, !tbaa !9
  %7 = load i32, i32* %__UNIQUE_ID_min2_25, align 4, !tbaa !9
  %cmp4 = icmp ult i32 %6, %7
  %8 = load i32, i32* %__UNIQUE_ID_min1_24, align 4
  %9 = load i32, i32* %__UNIQUE_ID_min2_25, align 4
  %cond = select i1 %cmp4, i32 %8, i32 %9
  %10 = bitcast i32* %__UNIQUE_ID_min2_25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %__UNIQUE_ID_min1_24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %12 = bitcast i32* %__UNIQUE_ID_min1_26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #8
  %bulk = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk, i32 0, i32 4
  %13 = load i32, i32* %max_payload_size, align 4, !tbaa !465
  %bulk6 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.83, %struct.anon.83* %bulk6, i32 0, i32 3
  %14 = load i32, i32* %payload_size, align 8, !tbaa !446
  %sub7 = sub i32 %13, %14
  store i32 %sub7, i32* %__UNIQUE_ID_min1_26, align 4, !tbaa !9
  %15 = bitcast i32* %__UNIQUE_ID_min2_27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #8
  store i32 %cond, i32* %__UNIQUE_ID_min2_27, align 4, !tbaa !9
  %cmp8 = icmp eq i32* %__UNIQUE_ID_min1_26, %__UNIQUE_ID_min2_27
  %conv9 = zext i1 %cmp8 to i32
  %16 = load i32, i32* %__UNIQUE_ID_min1_26, align 4, !tbaa !9
  %17 = load i32, i32* %__UNIQUE_ID_min2_27, align 4, !tbaa !9
  %cmp11 = icmp ult i32 %16, %17
  %18 = load i32, i32* %__UNIQUE_ID_min1_26, align 4
  %19 = load i32, i32* %__UNIQUE_ID_min2_27, align 4
  %cond16 = select i1 %cmp11, i32 %18, i32 %19
  %20 = bitcast i32* %__UNIQUE_ID_min2_27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #8
  %21 = bitcast i32* %__UNIQUE_ID_min1_26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #8
  %conv17 = zext i32 %cond16 to i64
  %call = call i8* @__memcpy(i8* %data, i8* %add.ptr, i64 %conv17)
  %buf_used18 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %22 = load i32, i32* %buf_used18, align 4, !tbaa !219
  %add = add i32 %22, %cond16
  store i32 %add, i32* %buf_used18, align 4, !tbaa !219
  ret i32 %cond16
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_decode_start(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %ts = alloca %struct.timespec, align 8
  %cmp = icmp slt i32 %len, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %0 to i32
  %cmp1 = icmp slt i32 %conv, 2
  br i1 %cmp1, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %arrayidx4 = getelementptr inbounds i8, i8* %data, i64 0
  %1 = load i8, i8* %arrayidx4, align 1, !tbaa !104
  %conv5 = zext i8 %1 to i32
  %cmp6 = icmp sgt i32 %conv5, %len
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame, i32 0, i32 4
  %2 = load i32, i32* %nb_invalid, align 8, !tbaa !475
  %inc = add i32 %2, 1
  store i32 %inc, i32* %nb_invalid, align 8, !tbaa !475
  br label %cleanup95

if.end:                                           ; preds = %lor.lhs.false3
  %arrayidx8 = getelementptr inbounds i8, i8* %data, i64 1
  %3 = load i8, i8* %arrayidx8, align 1, !tbaa !104
  %conv9 = zext i8 %3 to i32
  %and = and i32 %conv9, 1
  %conv10 = trunc i32 %and to i8
  %last_fid = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %4 = load i8, i8* %last_fid, align 8, !tbaa !443
  %conv11 = zext i8 %4 to i32
  %conv12 = zext i8 %conv10 to i32
  %cmp13 = icmp ne i32 %conv11, %conv12
  br i1 %cmp13, label %if.then15, label %if.end20

if.then15:                                        ; preds = %if.end
  %sequence = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  %5 = load i32, i32* %sequence, align 4, !tbaa !442
  %inc16 = add i32 %5, 1
  store i32 %inc16, i32* %sequence, align 4, !tbaa !442
  %sequence17 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  %6 = load i32, i32* %sequence17, align 4, !tbaa !442
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.then15
  call void @uvc_video_stats_update(%struct.uvc_streaming.870* %stream)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.then15, %if.end
  call void @uvc_video_clock_decode(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len)
  call void @uvc_video_stats_decode(%struct.uvc_streaming.870* %stream, i8* %data, i32 %len)
  %cmp21 = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end20
  %last_fid24 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  store i8 %conv10, i8* %last_fid24, align 8, !tbaa !443
  br label %cleanup95

if.end25:                                         ; preds = %if.end20
  %arrayidx26 = getelementptr inbounds i8, i8* %data, i64 1
  %7 = load i8, i8* %arrayidx26, align 1, !tbaa !104
  %conv27 = zext i8 %7 to i32
  %and28 = and i32 %conv27, 64
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %do.body, label %if.end35

do.body:                                          ; preds = %if.end25
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and31 = and i32 %8, 128
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %do.end

if.then33:                                        ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35.219, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then33, %do.body
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  store i32 1, i32* %error, align 4, !tbaa !214
  br label %if.end35

if.end35:                                         ; preds = %do.end, %if.end25
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  %9 = load i32, i32* %state, align 8, !tbaa !210
  %cmp36 = icmp ne i32 %9, 2
  br i1 %cmp36, label %if.then38, label %if.end72

if.then38:                                        ; preds = %if.end35
  %10 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #8
  %conv39 = zext i8 %conv10 to i32
  %last_fid40 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %11 = load i8, i8* %last_fid40, align 8, !tbaa !443
  %conv41 = zext i8 %11 to i32
  %cmp42 = icmp eq i32 %conv39, %conv41
  br i1 %cmp42, label %do.body45, label %if.end64

do.body45:                                        ; preds = %if.then38
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and46 = and i32 %12, 128
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %do.end52

if.then48:                                        ; preds = %do.body45
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36.220, i32 0, i32 0))
  br label %do.end52

do.end52:                                         ; preds = %if.then48, %do.body45
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %13 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %13, i32 0, i32 3
  %14 = load i32, i32* %quirks, align 8, !tbaa !53
  %and53 = and i32 %14, 16
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %do.end52
  %arrayidx55 = getelementptr inbounds i8, i8* %data, i64 1
  %15 = load i8, i8* %arrayidx55, align 1, !tbaa !104
  %conv56 = zext i8 %15 to i32
  %and57 = and i32 %conv56, 2
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %cleanup

if.then59:                                        ; preds = %land.lhs.true
  %last_fid60 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %16 = load i8, i8* %last_fid60, align 8, !tbaa !443
  %conv61 = zext i8 %16 to i32
  %xor = xor i32 %conv61, 1
  %conv62 = trunc i32 %xor to i8
  store i8 %conv62, i8* %last_fid60, align 8, !tbaa !443
  br label %cleanup

if.end64:                                         ; preds = %if.then38
  call void @uvc_video_get_ts(%struct.timespec* %ts)
  %buf65 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %field = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf65, i32 0, i32 2
  store i32 1, i32* %field, align 4, !tbaa !476
  %sequence66 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  %17 = load i32, i32* %sequence66, align 4, !tbaa !442
  %buf67 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %sequence68 = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf67, i32 0, i32 4
  store i32 %17, i32* %sequence68, align 8, !tbaa !474
  %call69 = call i64 @timespec_to_ns(%struct.timespec* %ts)
  %buf70 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %vb2_buf = getelementptr inbounds %struct.vb2_v4l2_buffer, %struct.vb2_v4l2_buffer* %buf70, i32 0, i32 0
  %timestamp = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb2_buf, i32 0, i32 6
  store i64 %call69, i64* %timestamp, align 8, !tbaa !477
  %state71 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 2, i32* %state71, align 8, !tbaa !210
  br label %cleanup

cleanup:                                          ; preds = %if.end64, %if.then59, %land.lhs.true, %do.end52
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end64 ], [ 1, %if.then59 ], [ 1, %land.lhs.true ], [ 1, %do.end52 ]
  %18 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %18) #8
  %cond = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond, label %if.end72, label %cleanup95

if.end72:                                         ; preds = %cleanup, %if.end35
  %conv73 = zext i8 %conv10 to i32
  %last_fid74 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %19 = load i8, i8* %last_fid74, align 8, !tbaa !443
  %conv75 = zext i8 %19 to i32
  %cmp76 = icmp ne i32 %conv73, %conv75
  br i1 %cmp76, label %land.lhs.true78, label %if.end91

land.lhs.true78:                                  ; preds = %if.end72
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %20 = load i32, i32* %bytesused, align 4, !tbaa !217
  %cmp79 = icmp ne i32 %20, 0
  br i1 %cmp79, label %do.body82, label %if.end91

do.body82:                                        ; preds = %land.lhs.true78
  %21 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and83 = and i32 %21, 128
  %tobool84 = icmp ne i32 %and83, 0
  br i1 %tobool84, label %if.then85, label %do.end89

if.then85:                                        ; preds = %do.body82
  %call86 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37.221, i32 0, i32 0))
  br label %do.end89

do.end89:                                         ; preds = %if.then85, %do.body82
  %state90 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state90, align 8, !tbaa !210
  br label %cleanup95

if.end91:                                         ; preds = %land.lhs.true78, %if.end72
  %last_fid92 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  store i8 %conv10, i8* %last_fid92, align 8, !tbaa !443
  %arrayidx93 = getelementptr inbounds i8, i8* %data, i64 0
  %22 = load i8, i8* %arrayidx93, align 1, !tbaa !104
  %conv94 = zext i8 %22 to i32
  br label %cleanup95

cleanup95:                                        ; preds = %if.end91, %do.end89, %cleanup, %if.then23, %if.then
  %retval.1 = phi i32 [ -22, %if.then ], [ -61, %if.then23 ], [ -61, %cleanup ], [ -11, %do.end89 ], [ %conv94, %if.end91 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_data(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %__UNIQUE_ID_min1_22 = alloca i32, align 4
  %__UNIQUE_ID_min2_23 = alloca i32, align 4
  %cmp = icmp sle i32 %len, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %0 = load i32, i32* %length, align 8, !tbaa !216
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %1 = load i32, i32* %bytesused, align 4, !tbaa !217
  %sub = sub i32 %0, %1
  %mem1 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %2 = load i8*, i8** %mem1, align 8, !tbaa !215
  %bytesused2 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %3 = load i32, i32* %bytesused2, align 4, !tbaa !217
  %idx.ext = zext i32 %3 to i64
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext
  %4 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #8
  store i32 %len, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %5 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #8
  store i32 %sub, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp3 = icmp eq i32* %__UNIQUE_ID_min1_22, %__UNIQUE_ID_min2_23
  %conv = zext i1 %cmp3 to i32
  %6 = load i32, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %7 = load i32, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp4 = icmp ult i32 %6, %7
  %8 = load i32, i32* %__UNIQUE_ID_min1_22, align 4
  %9 = load i32, i32* %__UNIQUE_ID_min2_23, align 4
  %cond = select i1 %cmp4, i32 %8, i32 %9
  %10 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %conv6 = zext i32 %cond to i64
  %call = call i8* @__memcpy(i8* %add.ptr, i8* %data, i64 %conv6)
  %bytesused7 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %12 = load i32, i32* %bytesused7, align 4, !tbaa !217
  %add = add i32 %12, %cond
  store i32 %add, i32* %bytesused7, align 4, !tbaa !217
  %cmp8 = icmp ugt i32 %len, %sub
  br i1 %cmp8, label %do.body, label %cleanup.cont

do.body:                                          ; preds = %if.end
  %13 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %13, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then11, label %do.end

if.then11:                                        ; preds = %do.body
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.320, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then11, %do.body
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !210
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %do.end, %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_end(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %entry
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %1 = load i32, i32* %bytesused, align 4, !tbaa !217
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %do.body, label %if.end24

do.body:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and2 = and i32 %2, 128
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %do.end

if.then4:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42.216, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %arrayidx5 = getelementptr inbounds i8, i8* %data, i64 0
  %3 = load i8, i8* %arrayidx5, align 1, !tbaa !104
  %conv6 = zext i8 %3 to i32
  %cmp7 = icmp eq i32 %conv6, %len
  br i1 %cmp7, label %do.body10, label %if.end17

do.body10:                                        ; preds = %do.end
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and11 = and i32 %4, 128
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %do.body10
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43.217, i32 0, i32 0))
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %do.body10, %do.end
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !210
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %quirks = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %5, i32 0, i32 3
  %6 = load i32, i32* %quirks, align 8, !tbaa !53
  %and18 = and i32 %6, 16
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %if.end24

if.then20:                                        ; preds = %if.end17
  %last_fid = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 26
  %7 = load i8, i8* %last_fid, align 8, !tbaa !443
  %conv21 = zext i8 %7 to i32
  %xor = xor i32 %conv21, 1
  %conv22 = trunc i32 %xor to i8
  store i8 %conv22, i8* %last_fid, align 8, !tbaa !443
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %if.end17, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_update(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame1 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats, i32 0, i32 0
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %0, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %sequence = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 25
  %1 = load i32, i32* %sequence, align 4, !tbaa !442
  %first_data = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 1
  %2 = load i32, i32* %first_data, align 4, !tbaa !478
  %nb_packets = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %3 = load i32, i32* %nb_packets, align 4, !tbaa !479
  %nb_empty = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 3
  %4 = load i32, i32* %nb_empty, align 4, !tbaa !480
  %sub = sub i32 %3, %4
  %nb_packets2 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %5 = load i32, i32* %nb_packets2, align 4, !tbaa !479
  %nb_pts_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 7
  %6 = load i32, i32* %nb_pts_diffs, align 4, !tbaa !481
  %last_pts_diff = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 8
  %7 = load i32, i32* %last_pts_diff, align 4, !tbaa !482
  %nb_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 6
  %8 = load i32, i32* %nb_pts, align 4, !tbaa !483
  %has_early_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 10
  %9 = load i8, i8* %has_early_pts, align 1, !tbaa !484, !range !96
  %tobool3 = trunc i8 %9 to i1
  %10 = zext i1 %tobool3 to i64
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39.223, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.224, i32 0, i32 0)
  %has_initial_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 9
  %11 = load i8, i8* %has_initial_pts, align 4, !tbaa !485, !range !96
  %tobool4 = trunc i8 %11 to i1
  %12 = zext i1 %tobool4 to i64
  %cond5 = select i1 %tobool4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39.223, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.224, i32 0, i32 0)
  %nb_scr_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 13
  %13 = load i32, i32* %nb_scr_diffs, align 4, !tbaa !486
  %nb_scr = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %14 = load i32, i32* %nb_scr, align 4, !tbaa !487
  %pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 11
  %15 = load i32, i32* %pts, align 4, !tbaa !488
  %scr_stc = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 15
  %16 = load i32, i32* %scr_stc, align 4, !tbaa !489
  %scr_sof = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 14
  %17 = load i16, i16* %scr_sof, align 4, !tbaa !490
  %conv = zext i16 %17 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.38.225, i32 0, i32 0), i32 %1, i32 %2, i32 %sub, i32 %5, i32 %6, i32 %7, i32 %8, i8* %cond, i8* %cond5, i32 %13, i32 %14, i32 %15, i32 %16, i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %stats6 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream7 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats6, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream7, i32 0, i32 2
  %18 = load i32, i32* %nb_frames, align 8, !tbaa !428
  %inc = add i32 %18, 1
  store i32 %inc, i32* %nb_frames, align 8, !tbaa !428
  %stats8 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame9 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats8, i32 0, i32 0
  %nb_packets10 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame9, i32 0, i32 2
  %19 = load i32, i32* %nb_packets10, align 8, !tbaa !491
  %stats11 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream12 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats11, i32 0, i32 1
  %nb_packets13 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream12, i32 0, i32 3
  %20 = load i32, i32* %nb_packets13, align 4, !tbaa !429
  %add = add i32 %20, %19
  store i32 %add, i32* %nb_packets13, align 4, !tbaa !429
  %stats14 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame15 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats14, i32 0, i32 0
  %nb_empty16 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame15, i32 0, i32 3
  %21 = load i32, i32* %nb_empty16, align 4, !tbaa !492
  %stats17 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream18 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats17, i32 0, i32 1
  %nb_empty19 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream18, i32 0, i32 4
  %22 = load i32, i32* %nb_empty19, align 8, !tbaa !430
  %add20 = add i32 %22, %21
  store i32 %add20, i32* %nb_empty19, align 8, !tbaa !430
  %stats21 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame22 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats21, i32 0, i32 0
  %nb_errors = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame22, i32 0, i32 5
  %23 = load i32, i32* %nb_errors, align 4, !tbaa !493
  %stats23 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream24 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats23, i32 0, i32 1
  %nb_errors25 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream24, i32 0, i32 6
  %24 = load i32, i32* %nb_errors25, align 8, !tbaa !431
  %add26 = add i32 %24, %23
  store i32 %add26, i32* %nb_errors25, align 8, !tbaa !431
  %stats27 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame28 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats27, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame28, i32 0, i32 4
  %25 = load i32, i32* %nb_invalid, align 8, !tbaa !475
  %stats29 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream30 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats29, i32 0, i32 1
  %nb_invalid31 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream30, i32 0, i32 5
  %26 = load i32, i32* %nb_invalid31, align 4, !tbaa !432
  %add32 = add i32 %26, %25
  store i32 %add32, i32* %nb_invalid31, align 4, !tbaa !432
  %has_early_pts33 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 10
  %27 = load i8, i8* %has_early_pts33, align 1, !tbaa !484, !range !96
  %tobool34 = trunc i8 %27 to i1
  br i1 %tobool34, label %if.then35, label %if.end39

if.then35:                                        ; preds = %do.end
  %stats36 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream37 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats36, i32 0, i32 1
  %nb_pts_early = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream37, i32 0, i32 8
  %28 = load i32, i32* %nb_pts_early, align 8, !tbaa !433
  %inc38 = add i32 %28, 1
  store i32 %inc38, i32* %nb_pts_early, align 8, !tbaa !433
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %do.end
  %has_initial_pts40 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 9
  %29 = load i8, i8* %has_initial_pts40, align 4, !tbaa !485, !range !96
  %tobool41 = trunc i8 %29 to i1
  br i1 %tobool41, label %if.then42, label %if.end46

if.then42:                                        ; preds = %if.end39
  %stats43 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream44 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats43, i32 0, i32 1
  %nb_pts_initial = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream44, i32 0, i32 9
  %30 = load i32, i32* %nb_pts_initial, align 4, !tbaa !434
  %inc45 = add i32 %30, 1
  store i32 %inc45, i32* %nb_pts_initial, align 4, !tbaa !434
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %if.end39
  %last_pts_diff47 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 8
  %31 = load i32, i32* %last_pts_diff47, align 4, !tbaa !482
  %first_data48 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 1
  %32 = load i32, i32* %first_data48, align 4, !tbaa !478
  %cmp = icmp ule i32 %31, %32
  br i1 %cmp, label %if.then50, label %if.end54

if.then50:                                        ; preds = %if.end46
  %stats51 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream52 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats51, i32 0, i32 1
  %nb_pts_constant = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream52, i32 0, i32 7
  %33 = load i32, i32* %nb_pts_constant, align 4, !tbaa !435
  %inc53 = add i32 %33, 1
  store i32 %inc53, i32* %nb_pts_constant, align 4, !tbaa !435
  br label %if.end54

if.end54:                                         ; preds = %if.then50, %if.end46
  %nb_scr55 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %34 = load i32, i32* %nb_scr55, align 4, !tbaa !487
  %nb_packets56 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %35 = load i32, i32* %nb_packets56, align 4, !tbaa !479
  %nb_empty57 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 3
  %36 = load i32, i32* %nb_empty57, align 4, !tbaa !480
  %sub58 = sub i32 %35, %36
  %cmp59 = icmp uge i32 %34, %sub58
  br i1 %cmp59, label %if.then61, label %if.end65

if.then61:                                        ; preds = %if.end54
  %stats62 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream63 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats62, i32 0, i32 1
  %nb_scr_count_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream63, i32 0, i32 10
  %37 = load i32, i32* %nb_scr_count_ok, align 8, !tbaa !436
  %inc64 = add i32 %37, 1
  store i32 %inc64, i32* %nb_scr_count_ok, align 8, !tbaa !436
  br label %if.end65

if.end65:                                         ; preds = %if.then61, %if.end54
  %nb_scr_diffs66 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 13
  %38 = load i32, i32* %nb_scr_diffs66, align 4, !tbaa !486
  %add67 = add i32 %38, 1
  %nb_scr68 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %39 = load i32, i32* %nb_scr68, align 4, !tbaa !487
  %cmp69 = icmp eq i32 %add67, %39
  br i1 %cmp69, label %if.then71, label %if.end75

if.then71:                                        ; preds = %if.end65
  %stats72 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream73 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats72, i32 0, i32 1
  %nb_scr_diffs_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream73, i32 0, i32 11
  %40 = load i32, i32* %nb_scr_diffs_ok, align 4, !tbaa !437
  %inc74 = add i32 %40, 1
  store i32 %inc74, i32* %nb_scr_diffs_ok, align 4, !tbaa !437
  br label %if.end75

if.end75:                                         ; preds = %if.then71, %if.end65
  %stats76 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame77 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats76, i32 0, i32 0
  %41 = bitcast %struct.uvc_stats_frame* %frame77 to i8*
  %call78 = call i8* @__memset(i8* %41, i32 0, i64 60)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_decode(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %ts = alloca %struct.timespec, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 12
  switch i32 %and, label %sw.default [
    i32 12, label %sw.epilog
    i32 4, label %sw.bb1
    i32 8, label %sw.bb2
  ]

sw.bb1:                                           ; preds = %entry
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb2, %sw.bb1, %entry
  %header_size.0 = phi i32 [ 2, %sw.default ], [ %and, %sw.bb2 ], [ 6, %sw.bb1 ], [ %and, %entry ]
  %has_pts.0 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb2 ], [ 1, %sw.bb1 ], [ 1, %entry ]
  %has_scr.0 = phi i8 [ 0, %sw.default ], [ 1, %sw.bb2 ], [ 0, %sw.bb1 ], [ 1, %entry ]
  %cmp = icmp ult i32 %len, %header_size.0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.epilog
  %tobool = trunc i8 %has_pts.0 to i1
  %cmp5 = icmp ne %struct.uvc_buffer* %buf, null
  %or.cond = and i1 %tobool, %cmp5
  br i1 %or.cond, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %arrayidx8 = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @get_unaligned_le32.179(i8* %arrayidx8)
  %pts = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  store i32 %call, i32* %pts, align 8, !tbaa !411
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %tobool10 = trunc i8 %has_scr.0 to i1
  br i1 %tobool10, label %if.end12, label %cleanup

if.end12:                                         ; preds = %if.end9
  %sub = sub i32 %header_size.0, 2
  %idxprom = zext i32 %sub to i64
  %arrayidx13 = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %call14 = call zeroext i16 @get_unaligned_le16.222(i8* %arrayidx13)
  %conv15 = zext i16 %call14 to i32
  %clock = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %last_sof = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock, i32 0, i32 4
  %2 = load i16, i16* %last_sof, align 4, !tbaa !494
  %conv16 = zext i16 %2 to i32
  %cmp17 = icmp eq i32 %conv15, %conv16
  br i1 %cmp17, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.end12
  %clock21 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %last_sof22 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock21, i32 0, i32 4
  store i16 %call14, i16* %last_sof22, align 4, !tbaa !494
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %call23 = call i32 @usb_get_current_frame_number(%struct.usb_device* %4)
  %conv24 = trunc i32 %call23 to i16
  call void @uvc_video_get_ts(%struct.timespec* %ts)
  %clock25 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock25, i32 0, i32 5
  %5 = load i16, i16* %sof_offset, align 2, !tbaa !495
  %conv26 = zext i16 %5 to i32
  %cmp27 = icmp eq i32 %conv26, 65535
  br i1 %cmp27, label %if.then29, label %if.end44

if.then29:                                        ; preds = %if.end20
  %conv30 = zext i16 %conv24 to i32
  %conv31 = zext i16 %call14 to i32
  %sub32 = sub nsw i32 %conv30, %conv31
  %and33 = and i32 %sub32, 255
  %conv34 = trunc i32 %and33 to i16
  %conv35 = zext i16 %conv34 to i32
  %cmp36 = icmp sge i32 %conv35, 10
  %clock39 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %sof_offset40 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock39, i32 0, i32 5
  %.sink = select i1 %cmp36, i16 %conv34, i16 0
  store i16 %.sink, i16* %sof_offset40, align 2, !tbaa !495
  br label %if.end44

if.end44:                                         ; preds = %if.then29, %if.end20
  %conv45 = zext i16 %call14 to i32
  %clock46 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %sof_offset47 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock46, i32 0, i32 5
  %6 = load i16, i16* %sof_offset47, align 2, !tbaa !495
  %conv48 = zext i16 %6 to i32
  %add = add nsw i32 %conv45, %conv48
  %and49 = and i32 %add, 2047
  %conv50 = trunc i32 %and49 to i16
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #8
  %cmp52 = icmp eq i64* %__dummy, %__dummy2
  %conv53 = zext i1 %cmp52 to i32
  %9 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %clock54 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock54, i32 0, i32 6
  %call55 = call %struct.raw_spinlock* @spinlock_check.184(%struct.spinlock* %lock)
  %call56 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call55)
  %clock59 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock59, i32 0, i32 0
  %11 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !496
  %clock60 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock60, i32 0, i32 1
  %12 = load i32, i32* %head, align 8, !tbaa !497
  %idxprom61 = zext i32 %12 to i64
  %arrayidx62 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %11, i64 %idxprom61
  %sub63 = sub i32 %header_size.0, 6
  %idxprom64 = zext i32 %sub63 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %data, i64 %idxprom64
  %call66 = call i32 @get_unaligned_le32.179(i8* %arrayidx65)
  %dev_stc = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 0
  store i32 %call66, i32* %dev_stc, align 8, !tbaa !412
  %dev_sof67 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 1
  store i16 %conv50, i16* %dev_sof67, align 4, !tbaa !414
  %host_sof68 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 3
  store i16 %conv24, i16* %host_sof68, align 8, !tbaa !422
  %host_ts = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 2
  %13 = bitcast %struct.timespec* %host_ts to i8*
  %14 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false), !tbaa.struct !416
  %clock69 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %head70 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock69, i32 0, i32 1
  %15 = load i32, i32* %head70, align 8, !tbaa !497
  %add71 = add i32 %15, 1
  %clock72 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock72, i32 0, i32 3
  %16 = load i32, i32* %size, align 8, !tbaa !498
  %rem = urem i32 %add71, %16
  %clock73 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %head74 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock73, i32 0, i32 1
  store i32 %rem, i32* %head74, align 8, !tbaa !497
  %clock75 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock75, i32 0, i32 2
  %17 = load i32, i32* %count, align 4, !tbaa !499
  %clock76 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %size77 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock76, i32 0, i32 3
  %18 = load i32, i32* %size77, align 8, !tbaa !498
  %cmp78 = icmp ult i32 %17, %18
  br i1 %cmp78, label %if.then80, label %if.end83

if.then80:                                        ; preds = %if.end44
  %clock81 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %count82 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock81, i32 0, i32 2
  %19 = load i32, i32* %count82, align 4, !tbaa !499
  %inc = add i32 %19, 1
  store i32 %inc, i32* %count82, align 4, !tbaa !499
  br label %if.end83

if.end83:                                         ; preds = %if.then80, %if.end44
  %clock84 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %lock85 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock84, i32 0, i32 6
  call void @spin_unlock_irqrestore.187(%struct.spinlock* %lock85, i64 %call56)
  br label %cleanup

cleanup:                                          ; preds = %if.end83, %if.end12, %if.end9, %sw.epilog
  %20 = bitcast %struct.timespec* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %20) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_decode(%struct.uvc_streaming.870* %stream, i8* %data, i32 %len) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 2
  %0 = load i32, i32* %nb_frames, align 8, !tbaa !428
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %stats2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats2, i32 0, i32 0
  %nb_packets = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame, i32 0, i32 2
  %1 = load i32, i32* %nb_packets, align 8, !tbaa !491
  %cmp3 = icmp eq i32 %1, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %stats4 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream5 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats4, i32 0, i32 1
  %start_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream5, i32 0, i32 0
  call void @ktime_get_ts(%struct.timespec* %start_ts)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 12
  switch i32 %and, label %sw.default [
    i32 12, label %sw.epilog
    i32 4, label %sw.bb6
    i32 8, label %sw.bb7
  ]

sw.bb6:                                           ; preds = %if.end
  br label %sw.epilog

sw.bb7:                                           ; preds = %if.end
  br label %sw.epilog

sw.default:                                       ; preds = %if.end
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb7, %sw.bb6, %if.end
  %has_scr.0 = phi i8 [ 0, %sw.default ], [ 1, %sw.bb7 ], [ 0, %sw.bb6 ], [ 1, %if.end ]
  %has_pts.0 = phi i8 [ 0, %sw.default ], [ 0, %sw.bb7 ], [ 1, %sw.bb6 ], [ 1, %if.end ]
  %header_size.0 = phi i32 [ 2, %sw.default ], [ %and, %sw.bb7 ], [ 6, %sw.bb6 ], [ %and, %if.end ]
  %cmp8 = icmp ult i32 %len, %header_size.0
  br i1 %cmp8, label %if.then14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.epilog
  %arrayidx10 = getelementptr inbounds i8, i8* %data, i64 0
  %3 = load i8, i8* %arrayidx10, align 1, !tbaa !104
  %conv11 = zext i8 %3 to i32
  %cmp12 = icmp ult i32 %conv11, %header_size.0
  br i1 %cmp12, label %if.then14, label %if.end17

if.then14:                                        ; preds = %lor.lhs.false, %sw.epilog
  %stats15 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame16 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats15, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame16, i32 0, i32 4
  %4 = load i32, i32* %nb_invalid, align 8, !tbaa !475
  %inc = add i32 %4, 1
  store i32 %inc, i32* %nb_invalid, align 8, !tbaa !475
  br label %cleanup.cont

if.end17:                                         ; preds = %lor.lhs.false
  %tobool = trunc i8 %has_pts.0 to i1
  br i1 %tobool, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end17
  %arrayidx19 = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @get_unaligned_le32.179(i8* %arrayidx19)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end17
  %pts.0 = phi i32 [ %call, %if.then18 ], [ undef, %if.end17 ]
  %tobool21 = trunc i8 %has_scr.0 to i1
  br i1 %tobool21, label %if.then22, label %if.end29

if.then22:                                        ; preds = %if.end20
  %sub = sub i32 %header_size.0, 6
  %idxprom = zext i32 %sub to i64
  %arrayidx23 = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %call24 = call i32 @get_unaligned_le32.179(i8* %arrayidx23)
  %sub25 = sub i32 %header_size.0, 2
  %idxprom26 = zext i32 %sub25 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %data, i64 %idxprom26
  %call28 = call zeroext i16 @get_unaligned_le16.222(i8* %arrayidx27)
  br label %if.end29

if.end29:                                         ; preds = %if.then22, %if.end20
  %scr_sof.0 = phi i16 [ %call28, %if.then22 ], [ undef, %if.end20 ]
  %scr_stc.0 = phi i32 [ %call24, %if.then22 ], [ undef, %if.end20 ]
  %tobool30 = trunc i8 %has_pts.0 to i1
  br i1 %tobool30, label %land.lhs.true32, label %if.end52

land.lhs.true32:                                  ; preds = %if.end29
  %stats33 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame34 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats33, i32 0, i32 0
  %nb_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame34, i32 0, i32 6
  %5 = load i32, i32* %nb_pts, align 8, !tbaa !500
  %tobool35 = icmp ne i32 %5, 0
  br i1 %tobool35, label %if.then36, label %if.end52

if.then36:                                        ; preds = %land.lhs.true32
  %stats37 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame38 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats37, i32 0, i32 0
  %pts39 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame38, i32 0, i32 11
  %6 = load i32, i32* %pts39, align 8, !tbaa !501
  %cmp40 = icmp ne i32 %6, %pts.0
  br i1 %cmp40, label %if.then42, label %if.end52

if.then42:                                        ; preds = %if.then36
  %stats43 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame44 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats43, i32 0, i32 0
  %nb_pts_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame44, i32 0, i32 7
  %7 = load i32, i32* %nb_pts_diffs, align 4, !tbaa !502
  %inc45 = add i32 %7, 1
  store i32 %inc45, i32* %nb_pts_diffs, align 4, !tbaa !502
  %stats46 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame47 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats46, i32 0, i32 0
  %nb_packets48 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame47, i32 0, i32 2
  %8 = load i32, i32* %nb_packets48, align 8, !tbaa !491
  %stats49 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame50 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats49, i32 0, i32 0
  %last_pts_diff = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame50, i32 0, i32 8
  store i32 %8, i32* %last_pts_diff, align 8, !tbaa !503
  br label %if.end52

if.end52:                                         ; preds = %if.then42, %if.then36, %land.lhs.true32, %if.end29
  %tobool53 = trunc i8 %has_pts.0 to i1
  br i1 %tobool53, label %if.then54, label %if.end62

if.then54:                                        ; preds = %if.end52
  %stats55 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame56 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats55, i32 0, i32 0
  %nb_pts57 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame56, i32 0, i32 6
  %9 = load i32, i32* %nb_pts57, align 8, !tbaa !500
  %inc58 = add i32 %9, 1
  store i32 %inc58, i32* %nb_pts57, align 8, !tbaa !500
  %stats59 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame60 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats59, i32 0, i32 0
  %pts61 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame60, i32 0, i32 11
  store i32 %pts.0, i32* %pts61, align 8, !tbaa !501
  br label %if.end62

if.end62:                                         ; preds = %if.then54, %if.end52
  %stats63 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame64 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats63, i32 0, i32 0
  %size = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame64, i32 0, i32 0
  %10 = load i32, i32* %size, align 8, !tbaa !504
  %cmp65 = icmp eq i32 %10, 0
  br i1 %cmp65, label %if.then67, label %if.end84

if.then67:                                        ; preds = %if.end62
  %cmp68 = icmp ugt i32 %len, %header_size.0
  br i1 %cmp68, label %if.then70, label %if.end74

if.then70:                                        ; preds = %if.then67
  %tobool71 = trunc i8 %has_pts.0 to i1
  %stats72 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame73 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats72, i32 0, i32 0
  %has_initial_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame73, i32 0, i32 9
  %frombool = zext i1 %tobool71 to i8
  store i8 %frombool, i8* %has_initial_pts, align 4, !tbaa !505
  br label %if.end74

if.end74:                                         ; preds = %if.then70, %if.then67
  %cmp75 = icmp eq i32 %len, %header_size.0
  br i1 %cmp75, label %land.lhs.true77, label %if.end84

land.lhs.true77:                                  ; preds = %if.end74
  %tobool78 = trunc i8 %has_pts.0 to i1
  br i1 %tobool78, label %if.then80, label %if.end84

if.then80:                                        ; preds = %land.lhs.true77
  %stats81 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame82 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats81, i32 0, i32 0
  %has_early_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame82, i32 0, i32 10
  store i8 1, i8* %has_early_pts, align 1, !tbaa !506
  br label %if.end84

if.end84:                                         ; preds = %if.then80, %land.lhs.true77, %if.end74, %if.end62
  %tobool85 = trunc i8 %has_scr.0 to i1
  br i1 %tobool85, label %land.lhs.true87, label %if.end102

land.lhs.true87:                                  ; preds = %if.end84
  %stats88 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame89 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats88, i32 0, i32 0
  %nb_scr = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame89, i32 0, i32 12
  %11 = load i32, i32* %nb_scr, align 4, !tbaa !507
  %tobool90 = icmp ne i32 %11, 0
  br i1 %tobool90, label %if.then91, label %if.end102

if.then91:                                        ; preds = %land.lhs.true87
  %stats92 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame93 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats92, i32 0, i32 0
  %scr_stc94 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame93, i32 0, i32 15
  %12 = load i32, i32* %scr_stc94, align 8, !tbaa !508
  %cmp95 = icmp ne i32 %12, %scr_stc.0
  br i1 %cmp95, label %if.then97, label %if.end102

if.then97:                                        ; preds = %if.then91
  %stats98 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame99 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats98, i32 0, i32 0
  %nb_scr_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame99, i32 0, i32 13
  %13 = load i32, i32* %nb_scr_diffs, align 8, !tbaa !509
  %inc100 = add i32 %13, 1
  store i32 %inc100, i32* %nb_scr_diffs, align 8, !tbaa !509
  br label %if.end102

if.end102:                                        ; preds = %if.then97, %if.then91, %land.lhs.true87, %if.end84
  %tobool103 = trunc i8 %has_scr.0 to i1
  br i1 %tobool103, label %if.then104, label %if.end161

if.then104:                                       ; preds = %if.end102
  %stats105 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream106 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats105, i32 0, i32 1
  %nb_frames107 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream106, i32 0, i32 2
  %14 = load i32, i32* %nb_frames107, align 8, !tbaa !428
  %cmp108 = icmp ugt i32 %14, 0
  br i1 %cmp108, label %if.then116, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.then104
  %stats111 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame112 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats111, i32 0, i32 0
  %nb_scr113 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame112, i32 0, i32 12
  %15 = load i32, i32* %nb_scr113, align 4, !tbaa !507
  %cmp114 = icmp ugt i32 %15, 0
  br i1 %cmp114, label %if.then116, label %if.end124

if.then116:                                       ; preds = %lor.lhs.false110, %if.then104
  %conv117 = zext i16 %scr_sof.0 to i32
  %stats118 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream119 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats118, i32 0, i32 1
  %scr_sof120 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream119, i32 0, i32 13
  %16 = load i32, i32* %scr_sof120, align 4, !tbaa !510
  %sub121 = sub i32 %conv117, %16
  %rem = urem i32 %sub121, 2048
  %stats122 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream123 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats122, i32 0, i32 1
  %scr_sof_count = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream123, i32 0, i32 12
  %17 = load i32, i32* %scr_sof_count, align 8, !tbaa !427
  %add = add i32 %17, %rem
  store i32 %add, i32* %scr_sof_count, align 8, !tbaa !427
  br label %if.end124

if.end124:                                        ; preds = %if.then116, %lor.lhs.false110
  %conv125 = zext i16 %scr_sof.0 to i32
  %stats126 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream127 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats126, i32 0, i32 1
  %scr_sof128 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream127, i32 0, i32 13
  store i32 %conv125, i32* %scr_sof128, align 4, !tbaa !510
  %stats129 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame130 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats129, i32 0, i32 0
  %nb_scr131 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame130, i32 0, i32 12
  %18 = load i32, i32* %nb_scr131, align 4, !tbaa !507
  %inc132 = add i32 %18, 1
  store i32 %inc132, i32* %nb_scr131, align 4, !tbaa !507
  %stats133 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame134 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats133, i32 0, i32 0
  %scr_stc135 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame134, i32 0, i32 15
  store i32 %scr_stc.0, i32* %scr_stc135, align 8, !tbaa !508
  %stats136 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame137 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats136, i32 0, i32 0
  %scr_sof138 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame137, i32 0, i32 14
  store i16 %scr_sof.0, i16* %scr_sof138, align 4, !tbaa !511
  %conv139 = zext i16 %scr_sof.0 to i32
  %stats140 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream141 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats140, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream141, i32 0, i32 14
  %19 = load i32, i32* %min_sof, align 8, !tbaa !438
  %cmp142 = icmp ult i32 %conv139, %19
  br i1 %cmp142, label %if.then144, label %if.end149

if.then144:                                       ; preds = %if.end124
  %conv145 = zext i16 %scr_sof.0 to i32
  %stats146 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream147 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats146, i32 0, i32 1
  %min_sof148 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream147, i32 0, i32 14
  store i32 %conv145, i32* %min_sof148, align 8, !tbaa !438
  br label %if.end149

if.end149:                                        ; preds = %if.then144, %if.end124
  %conv150 = zext i16 %scr_sof.0 to i32
  %stats151 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream152 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats151, i32 0, i32 1
  %max_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream152, i32 0, i32 15
  %20 = load i32, i32* %max_sof, align 4, !tbaa !439
  %cmp153 = icmp ugt i32 %conv150, %20
  br i1 %cmp153, label %if.then155, label %if.end161

if.then155:                                       ; preds = %if.end149
  %conv156 = zext i16 %scr_sof.0 to i32
  %stats157 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %stream158 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats157, i32 0, i32 1
  %max_sof159 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream158, i32 0, i32 15
  store i32 %conv156, i32* %max_sof159, align 4, !tbaa !439
  br label %if.end161

if.end161:                                        ; preds = %if.then155, %if.end149, %if.end102
  %stats162 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame163 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats162, i32 0, i32 0
  %size164 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame163, i32 0, i32 0
  %21 = load i32, i32* %size164, align 8, !tbaa !504
  %cmp165 = icmp eq i32 %21, 0
  %cmp168 = icmp ugt i32 %len, %header_size.0
  %or.cond = and i1 %cmp165, %cmp168
  br i1 %or.cond, label %if.then170, label %if.end176

if.then170:                                       ; preds = %if.end161
  %stats171 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame172 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats171, i32 0, i32 0
  %nb_packets173 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame172, i32 0, i32 2
  %22 = load i32, i32* %nb_packets173, align 8, !tbaa !491
  %stats174 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame175 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats174, i32 0, i32 0
  %first_data = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame175, i32 0, i32 1
  store i32 %22, i32* %first_data, align 4, !tbaa !512
  br label %if.end176

if.end176:                                        ; preds = %if.then170, %if.end161
  %sub177 = sub i32 %len, %header_size.0
  %stats178 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame179 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats178, i32 0, i32 0
  %size180 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame179, i32 0, i32 0
  %23 = load i32, i32* %size180, align 8, !tbaa !504
  %add181 = add i32 %23, %sub177
  store i32 %add181, i32* %size180, align 8, !tbaa !504
  %stats182 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame183 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats182, i32 0, i32 0
  %nb_packets184 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame183, i32 0, i32 2
  %24 = load i32, i32* %nb_packets184, align 8, !tbaa !491
  %inc185 = add i32 %24, 1
  store i32 %inc185, i32* %nb_packets184, align 8, !tbaa !491
  %cmp186 = icmp ugt i32 %len, %header_size.0
  br i1 %cmp186, label %if.then188, label %if.end192

if.then188:                                       ; preds = %if.end176
  %stats189 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame190 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats189, i32 0, i32 0
  %nb_empty = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame190, i32 0, i32 3
  %25 = load i32, i32* %nb_empty, align 4, !tbaa !492
  %inc191 = add i32 %25, 1
  store i32 %inc191, i32* %nb_empty, align 4, !tbaa !492
  br label %if.end192

if.end192:                                        ; preds = %if.then188, %if.end176
  %arrayidx193 = getelementptr inbounds i8, i8* %data, i64 1
  %26 = load i8, i8* %arrayidx193, align 1, !tbaa !104
  %conv194 = zext i8 %26 to i32
  %and195 = and i32 %conv194, 64
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %if.then197, label %cleanup.cont

if.then197:                                       ; preds = %if.end192
  %stats198 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 28
  %frame199 = getelementptr inbounds %struct.anon.84, %struct.anon.84* %stats198, i32 0, i32 0
  %nb_errors = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame199, i32 0, i32 5
  %27 = load i32, i32* %nb_errors, align 4, !tbaa !493
  %inc200 = add i32 %27, 1
  store i32 %inc200, i32* %nb_errors, align 4, !tbaa !493
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then197, %if.end192, %if.then14
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @uvc_video_get_ts(%struct.timespec* %ts) #1 {
entry:
  %0 = load i32, i32* @uvc_clock_param, align 4, !tbaa !9
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @ktime_get_ts(%struct.timespec* %ts)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @ktime_get_real_ts(%struct.timespec* %ts)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @ktime_get_real_ts(%struct.timespec* %ts) #1 {
entry:
  call void @getnstimeofday64(%struct.timespec* %ts)
  ret void
}

declare void @getnstimeofday64(%struct.timespec*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @get_unaligned_le16.222(i8* %p) #3 {
entry:
  %0 = bitcast i8* %p to i16*
  %call = call zeroext i16 @__le16_to_cpup.173(i16* %0)
  ret i16 %call
}

declare i32 @usb_get_current_frame_number(%struct.usb_device*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_validate_buffer(%struct.uvc_streaming.870* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %0 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !206
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %1 = load i32, i32* %bytesused, align 4, !tbaa !217
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %cur_format = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 14
  %2 = load %struct.uvc_format*, %struct.uvc_format** %cur_format, align 8, !tbaa !335
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 5
  %3 = load i32, i32* %flags, align 8, !tbaa !181
  %and = and i32 %3, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  store i32 1, i32* %error, align 4, !tbaa !214
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.227(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i8, i8* %res, align 1, !tbaa !104
  store volatile i8 %0, i8* %p, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !513
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !514
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_video_enable(%struct.uvc_streaming.870* %stream, i32 %enable) #0 {
entry:
  %tobool = icmp ne i32 %enable, 0
  br i1 %tobool, label %if.end13, label %if.then

if.then:                                          ; preds = %entry
  call void @uvc_uninit_video(%struct.uvc_streaming.870* %stream, i32 1)
  %intf = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 5
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !75
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 2
  %1 = load i32, i32* %num_altsetting, align 8, !tbaa !167
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %if.then1, label %if.else

if.then1:                                         ; preds = %if.then
  %dev = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %2 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !133
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %2, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %intfnum = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %4 = load i32, i32* %intfnum, align 8, !tbaa !153
  %call = call i32 @usb_set_interface(%struct.usb_device* %3, i32 %4, i32 0)
  br label %if.end

if.else:                                          ; preds = %if.then
  %header = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 8
  %bEndpointAddress = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 1
  %5 = load i8, i8* %bEndpointAddress, align 1, !tbaa !157
  %conv = zext i8 %5 to i32
  %and = and i32 %conv, 15
  %header2 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 8
  %bEndpointAddress3 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header2, i32 0, i32 1
  %6 = load i8, i8* %bEndpointAddress3, align 1, !tbaa !157
  %conv4 = zext i8 %6 to i32
  %and5 = and i32 %conv4, 128
  %dev6 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %7 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev6, align 8, !tbaa !133
  %udev7 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %7, i32 0, i32 0
  %8 = load %struct.usb_device*, %struct.usb_device** %udev7, align 8, !tbaa !11
  %call8 = call i32 @__create_pipe(%struct.usb_device* %8, i32 %and)
  %or = or i32 -1073741824, %call8
  %or9 = or i32 %or, %and5
  %dev10 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev10, align 8, !tbaa !133
  %udev11 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %9, i32 0, i32 0
  %10 = load %struct.usb_device*, %struct.usb_device** %udev11, align 8, !tbaa !11
  %call12 = call i32 @usb_clear_halt(%struct.usb_device* %10, i32 %or9)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then1
  call void @uvc_video_clock_cleanup(%struct.uvc_streaming.870* %stream)
  br label %cleanup

if.end13:                                         ; preds = %entry
  %call14 = call i32 @uvc_video_clock_init(%struct.uvc_streaming.870* %stream)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end13
  %ctrl = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 12
  %call19 = call i32 @uvc_commit_video(%struct.uvc_streaming.870* %stream, %struct.uvc_streaming_control* %ctrl)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %error_commit, label %if.end23

if.end23:                                         ; preds = %if.end18
  %call24 = call i32 @uvc_init_video(%struct.uvc_streaming.870* %stream, i32 20971712)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %error_video, label %cleanup

error_video:                                      ; preds = %if.end23
  %dev29 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 1
  %11 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev29, align 8, !tbaa !133
  %udev30 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %11, i32 0, i32 0
  %12 = load %struct.usb_device*, %struct.usb_device** %udev30, align 8, !tbaa !11
  %intfnum31 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 6
  %13 = load i32, i32* %intfnum31, align 8, !tbaa !153
  %call32 = call i32 @usb_set_interface(%struct.usb_device* %12, i32 %13, i32 0)
  br label %error_commit

error_commit:                                     ; preds = %error_video, %if.end18
  %ret.0 = phi i32 [ %call24, %error_video ], [ %call19, %if.end18 ]
  call void @uvc_video_clock_cleanup(%struct.uvc_streaming.870* %stream)
  br label %cleanup

cleanup:                                          ; preds = %error_commit, %if.end23, %if.end13, %if.end
  %retval.0 = phi i32 [ %ret.0, %error_commit ], [ 0, %if.end ], [ %call14, %if.end13 ], [ 0, %if.end23 ]
  ret i32 %retval.0
}

declare i32 @usb_clear_halt(%struct.usb_device*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_cleanup(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %clock = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock, i32 0, i32 0
  %0 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !496
  %1 = bitcast %struct.uvc_clock_sample* %0 to i8*
  call void @kfree(i8* %1)
  %clock1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %samples2 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  store %struct.uvc_clock_sample* null, %struct.uvc_clock_sample** %samples2, align 8, !tbaa !496
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_clock_init(%struct.uvc_streaming.870* %stream) #0 {
entry:
  %clock1 = getelementptr inbounds %struct.uvc_streaming.870, %struct.uvc_streaming.870* %stream, i32 0, i32 29
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.184(%struct.spinlock* %lock)
  %lock3 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock3, i32 0, i32 0
  %rlock = bitcast %union.anon.1* %0 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44.230, i32 0, i32 0), %struct.lock_class_key* @uvc_video_clock_init.__key)
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  store i32 32, i32* %size, align 8, !tbaa !408
  %size6 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %1 = load i32, i32* %size6, align 8, !tbaa !408
  %conv = zext i32 %1 to i64
  %mul = mul i64 %conv, 32
  %call7 = call i8* @kmalloc.171(i64 %mul, i32 20971712)
  %2 = bitcast i8* %call7 to %struct.uvc_clock_sample*
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  store %struct.uvc_clock_sample* %2, %struct.uvc_clock_sample** %samples, align 8, !tbaa !409
  %samples8 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %3 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples8, align 8, !tbaa !409
  %cmp = icmp eq %struct.uvc_clock_sample* %3, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  call void @uvc_video_clock_reset(%struct.uvc_streaming.870* %stream)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_add_event(%struct.v4l2_subscribed_event.1377* %sev, i32 %elems) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %ev = alloca %struct.v4l2_event, align 8
  %val = alloca i32, align 4
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 4
  %0 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh, align 8, !tbaa !74
  %1 = bitcast %struct.v4l2_fh.753* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_fh*
  %3 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %4 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %4, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %5 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %id = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 2
  %6 = load i32, i32* %id, align 4, !tbaa !9
  %call2 = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %5, i32 %6, %struct.uvc_control_mapping** %mapping)
  %cmp3 = icmp eq %struct.uvc_control.903* %call2, null
  br i1 %cmp3, label %done, label %if.end5

if.end5:                                          ; preds = %if.end
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 5
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 1
  call void @list_add_tail.237(%struct.list_head* %node, %struct.list_head* %ev_subs)
  %flags = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 3
  %8 = load i32, i32* %flags, align 8, !tbaa !9
  %and = and i32 %8, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then6, label %done

if.then6:                                         ; preds = %if.end5
  %9 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* %9) #8
  %10 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #8
  store i32 0, i32* %val, align 4, !tbaa !9
  %chain7 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %11 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain7, align 8, !tbaa !238
  %12 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call8 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain.869* %11, %struct.uvc_control.903* %call2, %struct.uvc_control_mapping* %12, i32* %val)
  %cmp9 = icmp eq i32 %call8, 0
  %or = or i32 2, 1
  %or. = select i1 %cmp9, i32 %or, i32 2
  %chain12 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %13 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain12, align 8, !tbaa !238
  %14 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %15 = load i32, i32* %val, align 4, !tbaa !9
  call void @uvc_ctrl_fill_event(%struct.uvc_video_chain.869* %13, %struct.v4l2_event* %ev, %struct.uvc_control.903* %call2, %struct.uvc_control_mapping* %14, i32 %15, i32 %or.)
  %elems13 = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 7
  store i32 %elems, i32* %elems13, align 8, !tbaa !9
  %fh14 = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 4
  %16 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh14, align 8, !tbaa !74
  call void @v4l2_event_queue_fh(%struct.v4l2_fh.753* %16, %struct.v4l2_event* %ev)
  %17 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #8
  %18 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.end.p0i8(i64 136, i8* %18) #8
  br label %done

done:                                             ; preds = %if.then6, %if.end5, %if.end
  %ret.0 = phi i32 [ -22, %if.end ], [ %call, %if.then6 ], [ %call, %if.end5 ]
  %chain16 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %19 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain16, align 8, !tbaa !238
  %ctrl_mutex17 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %19, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex17)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -512, %entry ]
  %20 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_del_event(%struct.v4l2_subscribed_event.1377* %sev) #0 {
entry:
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 4
  %0 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh, align 8, !tbaa !74
  %1 = bitcast %struct.v4l2_fh.753* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_fh*
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %3 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %3, i32 0, i32 5
  call void @mutex_lock_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %sev, i32 0, i32 5
  call void @list_del.233(%struct.list_head* %node)
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %4 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %ctrl_mutex2 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %4, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex2)
  ret void
}

declare void @v4l2_ctrl_replace(%struct.v4l2_event*, %struct.v4l2_event*) #2

declare void @v4l2_ctrl_merge(%struct.v4l2_event*, %struct.v4l2_event*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_del.233(%struct.list_head* %entry1) #1 {
entry:
  call void @__list_del_entry.234(%struct.list_head* %entry1)
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %next, align 8, !tbaa !99
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 512 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %prev, align 8, !tbaa !105
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del_entry.234(%struct.list_head* %entry1) #1 {
entry:
  %call = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %entry1)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !105
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %entry1, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  call void @__list_del.235(%struct.list_head* %0, %struct.list_head* %1)
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_del.235(%struct.list_head* %prev, %struct.list_head* %next) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev1, align 8, !tbaa !105
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %next, %struct.list_head** %__val, align 8, !tbaa !104
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next2 to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.236(i8* %1, i8* %arraydecay, i32 8)
  %__val3 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val3, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__write_once_size.236(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load i8, i8* %res, align 1, !tbaa !104
  store volatile i8 %0, i8* %p, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %res to i16*
  %2 = load i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %p to i16*
  store volatile i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %res to i32*
  %5 = load i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %p to i32*
  store volatile i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %res to i64*
  %8 = load i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %p to i64*
  store volatile i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !515
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %p, i8* %res, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !516
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

declare i32 @mutex_lock_interruptible_nested(%struct.mutex*, i32) #2

; Function Attrs: nounwind uwtable
define internal %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %chain, i32 %v4l2_id, %struct.uvc_control_mapping** %mapping) #0 {
entry:
  %ctrl = alloca %struct.uvc_control.903*, align 8
  %0 = bitcast %struct.uvc_control.903** %ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control.903* null, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %and = and i32 %v4l2_id, -2147483648
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %and1 = and i32 %v4l2_id, 268435455
  %entities = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain7.sink = phi %struct.list_head* [ %chain7, %for.inc ], [ %entities, %entry ]
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain7.sink, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next8, align 8, !tbaa !74
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr10 = getelementptr inbounds i8, i8* %2, i64 -16
  %3 = bitcast i8* %add.ptr10 to %struct.uvc_entity.872*
  %chain3 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %3, i32 0, i32 1
  %entities4 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain3, %entities4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @__uvc_find_control(%struct.uvc_entity.872* %3, i32 %and1, %struct.uvc_control_mapping** %mapping, %struct.uvc_control.903** %ctrl, i32 %and)
  %4 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %tobool = icmp eq %struct.uvc_control.903* %4, null
  %tobool5 = icmp ne i32 %and, 0
  %or.cond = or i1 %tobool, %tobool5
  br i1 %or.cond, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %chain7 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %3, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %cmp11 = icmp ne %struct.uvc_control.903* %6, null
  %tobool13 = icmp ne i32 %and, 0
  %or.cond2 = or i1 %cmp11, %tobool13
  br i1 %or.cond2, label %if.end19, label %do.body

do.body:                                          ; preds = %for.end
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and15 = and i32 %7, 4
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6.241, i32 0, i32 0), i32 %and1)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %do.body, %for.end
  %8 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then
  %retval.0 = phi %struct.uvc_control.903* [ %5, %if.then ], [ %8, %if.end19 ]
  %9 = bitcast %struct.uvc_control.903** %ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  ret %struct.uvc_control.903* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail.237(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !105
  call void @__list_add.240(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_ctrl_get(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, i32* %value) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %0 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %0, 2
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %loaded = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %loaded, align 1
  %bf.lshr = lshr i8 %bf.load, 1
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end13, label %if.then1

if.then1:                                         ; preds = %if.end
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %1 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !120
  %dev2 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev2, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %4, i32 0, i32 4
  %5 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv = trunc i32 %5 to i8
  %info3 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !521
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 0)
  %info4 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info4, i32 0, i32 4
  %7 = load i16, i16* %size, align 2, !tbaa !522
  %call5 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %1, i8 zeroext -127, i8 zeroext %3, i8 zeroext %conv, i8 zeroext %6, i8* %call, i16 zeroext %7)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.then1
  %loaded10 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load11 = load i8, i8* %loaded10, align 1
  %bf.clear12 = and i8 %bf.load11, -3
  %bf.set = or i8 %bf.clear12, 2
  store i8 %bf.set, i8* %loaded10, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.end9, %if.end
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %8 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !523
  %call14 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 0)
  %call15 = call i32 %8(%struct.uvc_control_mapping* %mapping, i8 zeroext -127, i8* %call14)
  store i32 %call15, i32* %value, align 4, !tbaa !9
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %9 = load i32, i32* %v4l2_type, align 8, !tbaa !309
  %cmp16 = icmp eq i32 %9, 3
  br i1 %cmp16, label %if.then18, label %cleanup

if.then18:                                        ; preds = %if.end13
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %10 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !314
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then18
  %menu.0 = phi %struct.uvc_menu_info* [ %10, %if.then18 ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %if.then18 ], [ %inc, %for.inc ]
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %11 = load i32, i32* %menu_count, align 8, !tbaa !315
  %cmp19 = icmp ult i32 %i.0, %11
  br i1 %cmp19, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %value21 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 0, i32 0
  %12 = load i32, i32* %value21, align 4, !tbaa !524
  %13 = load i32, i32* %value, align 4, !tbaa !9
  %cmp22 = icmp eq i32 %12, %13
  br i1 %cmp22, label %if.then24, label %for.inc

if.then24:                                        ; preds = %for.body
  store i32 %i.0, i32* %value, align 4, !tbaa !9
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %if.then24, %for.cond, %if.end13, %if.then1, %entry
  %retval.0 = phi i32 [ -13, %entry ], [ %call5, %if.then1 ], [ 0, %if.then24 ], [ 0, %for.cond ], [ 0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_fill_event(%struct.uvc_video_chain.869* %chain, %struct.v4l2_event* %ev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes) #0 {
entry:
  %v4l2_ctrl = alloca %struct.v4l2_queryctrl, align 4
  %0 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %0) #8
  %call = call i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, %struct.v4l2_queryctrl* %v4l2_ctrl)
  %reserved = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 6
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %reserved, i32 0, i32 0
  %1 = bitcast i32* %arraydecay to i8*
  %call1 = call i8* @__memset(i8* %1, i32 0, i64 32)
  %type = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 0
  store i32 3, i32* %type, align 8, !tbaa !526
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  %2 = load i32, i32* %id, align 4, !tbaa !251
  %id2 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 5
  store i32 %2, i32* %id2, align 8, !tbaa !528
  %u = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl3 = bitcast %union.anon.105* %u to %struct.v4l2_event_ctrl*
  %3 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl3, i32 0, i32 2
  %value4 = bitcast %union.anon.3* %3 to i32*
  store i32 %value, i32* %value4, align 8, !tbaa !104
  %u5 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl6 = bitcast %union.anon.105* %u5 to %struct.v4l2_event_ctrl*
  %changes7 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl6, i32 0, i32 0
  store i32 %changes, i32* %changes7, align 8, !tbaa !104
  %type8 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 1
  %4 = load i32, i32* %type8, align 4, !tbaa !253
  %u9 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl10 = bitcast %union.anon.105* %u9 to %struct.v4l2_event_ctrl*
  %type11 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl10, i32 0, i32 1
  store i32 %4, i32* %type11, align 4, !tbaa !104
  %flags = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %5 = load i32, i32* %flags, align 4, !tbaa !263
  %u12 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl13 = bitcast %union.anon.105* %u12 to %struct.v4l2_event_ctrl*
  %flags14 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl13, i32 0, i32 3
  store i32 %5, i32* %flags14, align 8, !tbaa !104
  %minimum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  %6 = load i32, i32* %minimum, align 4, !tbaa !255
  %u15 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl16 = bitcast %union.anon.105* %u15 to %struct.v4l2_event_ctrl*
  %minimum17 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl16, i32 0, i32 4
  store i32 %6, i32* %minimum17, align 4, !tbaa !104
  %maximum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  %7 = load i32, i32* %maximum, align 4, !tbaa !257
  %u18 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl19 = bitcast %union.anon.105* %u18 to %struct.v4l2_event_ctrl*
  %maximum20 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl19, i32 0, i32 5
  store i32 %7, i32* %maximum20, align 8, !tbaa !104
  %step = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  %8 = load i32, i32* %step, align 4, !tbaa !259
  %u21 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl22 = bitcast %union.anon.105* %u21 to %struct.v4l2_event_ctrl*
  %step23 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl22, i32 0, i32 6
  store i32 %8, i32* %step23, align 4, !tbaa !104
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  %9 = load i32, i32* %default_value, align 4, !tbaa !261
  %u24 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl25 = bitcast %union.anon.105* %u24 to %struct.v4l2_event_ctrl*
  %default_value26 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl25, i32 0, i32 7
  store i32 %9, i32* %default_value26, align 8, !tbaa !104
  %10 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %10) #8
  ret void
}

declare void @v4l2_event_queue_fh(%struct.v4l2_fh.753*, %struct.v4l2_event*) #2

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, %struct.v4l2_queryctrl* %v4l2_ctrl) #0 {
entry:
  %master_map = alloca %struct.uvc_control_mapping*, align 8
  %master_ctrl = alloca %struct.uvc_control.903*, align 8
  %val = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %master_map to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %master_map, align 8, !tbaa !74
  %1 = bitcast %struct.uvc_control.903** %master_ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  store %struct.uvc_control.903* null, %struct.uvc_control.903** %master_ctrl, align 8, !tbaa !74
  %2 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  %call = call i8* @__memset(i8* %2, i32 0, i64 68)
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %3 = load i32, i32* %id, align 8, !tbaa !300
  %id1 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  store i32 %3, i32* %id1, align 4, !tbaa !251
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %4 = load i32, i32* %v4l2_type, align 8, !tbaa !309
  %type = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 1
  store i32 %4, i32* %type, align 4, !tbaa !253
  %name = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 2
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %name2, i32 0, i32 0
  %call4 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay3, i64 32)
  %flags = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  store i32 0, i32* %flags, align 4, !tbaa !263
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags5 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %5 = load i32, i32* %flags5, align 4, !tbaa !517
  %and = and i32 %5, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %flags6 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %6 = load i32, i32* %flags6, align 4, !tbaa !263
  %or = or i32 %6, 64
  store i32 %or, i32* %flags6, align 4, !tbaa !263
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %info7 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags8 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info7, i32 0, i32 5
  %7 = load i32, i32* %flags8, align 4, !tbaa !517
  %and9 = and i32 %7, 1
  %tobool10 = icmp ne i32 %and9, 0
  br i1 %tobool10, label %if.end14, label %if.then11

if.then11:                                        ; preds = %if.end
  %flags12 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %8 = load i32, i32* %flags12, align 4, !tbaa !263
  %or13 = or i32 %8, 4
  store i32 %or13, i32* %flags12, align 4, !tbaa !263
  br label %if.end14

if.end14:                                         ; preds = %if.then11, %if.end
  %master_id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 12
  %9 = load i32, i32* %master_id, align 4, !tbaa !529
  %tobool15 = icmp ne i32 %9, 0
  br i1 %tobool15, label %if.then16, label %if.end18

if.then16:                                        ; preds = %if.end14
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %10 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  %master_id17 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 12
  %11 = load i32, i32* %master_id17, align 4, !tbaa !529
  call void @__uvc_find_control(%struct.uvc_entity.872* %10, i32 %11, %struct.uvc_control_mapping** %master_map, %struct.uvc_control.903** %master_ctrl, i32 0)
  br label %if.end18

if.end18:                                         ; preds = %if.then16, %if.end14
  %12 = load %struct.uvc_control.903*, %struct.uvc_control.903** %master_ctrl, align 8, !tbaa !74
  %tobool19 = icmp ne %struct.uvc_control.903* %12, null
  br i1 %tobool19, label %land.lhs.true, label %if.end34

land.lhs.true:                                    ; preds = %if.end18
  %13 = load %struct.uvc_control.903*, %struct.uvc_control.903** %master_ctrl, align 8, !tbaa !74
  %info20 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %13, i32 0, i32 1
  %flags21 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info20, i32 0, i32 5
  %14 = load i32, i32* %flags21, align 4, !tbaa !517
  %and22 = and i32 %14, 2
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %if.end34

if.then24:                                        ; preds = %land.lhs.true
  %15 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #8
  %16 = load %struct.uvc_control.903*, %struct.uvc_control.903** %master_ctrl, align 8, !tbaa !74
  %17 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %master_map, align 8, !tbaa !74
  %call25 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %16, %struct.uvc_control_mapping* %17, i32* %val)
  %cmp = icmp slt i32 %call25, 0
  br i1 %cmp, label %cleanup, label %if.end27

if.end27:                                         ; preds = %if.then24
  %18 = load i32, i32* %val, align 4, !tbaa !9
  %master_manual = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 13
  %19 = load i32, i32* %master_manual, align 8, !tbaa !530
  %cmp28 = icmp ne i32 %18, %19
  br i1 %cmp28, label %if.then29, label %cleanup

if.then29:                                        ; preds = %if.end27
  %flags30 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %20 = load i32, i32* %flags30, align 4, !tbaa !263
  %or31 = or i32 %20, 16
  store i32 %or31, i32* %flags30, align 4, !tbaa !263
  br label %cleanup

cleanup:                                          ; preds = %if.then29, %if.end27, %if.then24
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then24 ], [ 0, %if.then29 ], [ 0, %if.end27 ]
  %21 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #8
  %cond1 = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %cond1, label %if.end34, label %cleanup100

if.end34:                                         ; preds = %cleanup, %land.lhs.true, %if.end18
  %retval.1 = phi i32 [ undef, %land.lhs.true ], [ undef, %if.end18 ], [ %call25, %cleanup ]
  %cached = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool35 = icmp ne i8 %bf.clear, 0
  br i1 %tobool35, label %if.end45, label %if.then36

if.then36:                                        ; preds = %if.end34
  %call38 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %ctrl)
  %cmp39 = icmp slt i32 %call38, 0
  %. = select i1 %cmp39, i32 1, i32 0
  %call38.retval.1 = select i1 %cmp39, i32 %call38, i32 %retval.1
  %cond = icmp eq i32 %., 0
  br i1 %cond, label %if.end45, label %cleanup100

if.end45:                                         ; preds = %if.then36, %if.end34
  %info46 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags47 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info46, i32 0, i32 5
  %22 = load i32, i32* %flags47, align 4, !tbaa !517
  %and48 = and i32 %22, 32
  %tobool49 = icmp ne i32 %and48, 0
  br i1 %tobool49, label %if.then50, label %if.end53

if.then50:                                        ; preds = %if.end45
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %23 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !523
  %call51 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 5)
  %call52 = call i32 %23(%struct.uvc_control_mapping* %mapping, i8 zeroext -121, i8* %call51)
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  store i32 %call52, i32* %default_value, align 4, !tbaa !261
  br label %if.end53

if.end53:                                         ; preds = %if.then50, %if.end45
  %v4l2_type54 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %24 = load i32, i32* %v4l2_type54, align 8, !tbaa !309
  switch i32 %24, label %sw.epilog [
    i32 3, label %sw.bb
    i32 2, label %sw.bb62
    i32 4, label %sw.bb66
  ]

sw.bb:                                            ; preds = %if.end53
  %minimum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum, align 4, !tbaa !255
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %25 = load i32, i32* %menu_count, align 8, !tbaa !315
  %sub = sub i32 %25, 1
  %maximum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 %sub, i32* %maximum, align 4, !tbaa !257
  %step = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 1, i32* %step, align 4, !tbaa !259
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %26 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !314
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %menu.0 = phi %struct.uvc_menu_info* [ %26, %sw.bb ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %sw.bb ], [ %inc, %for.inc ]
  %menu_count55 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %27 = load i32, i32* %menu_count55, align 8, !tbaa !315
  %cmp56 = icmp ult i32 %i.0, %27
  br i1 %cmp56, label %for.body, label %cleanup100

for.body:                                         ; preds = %for.cond
  %value = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 0, i32 0
  %28 = load i32, i32* %value, align 4, !tbaa !524
  %default_value57 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  %29 = load i32, i32* %default_value57, align 4, !tbaa !261
  %cmp58 = icmp eq i32 %28, %29
  br i1 %cmp58, label %if.then59, label %for.inc

if.then59:                                        ; preds = %for.body
  %default_value60 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  store i32 %i.0, i32* %default_value60, align 4, !tbaa !261
  br label %cleanup100

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 1
  br label %for.cond

sw.bb62:                                          ; preds = %if.end53
  %minimum63 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum63, align 4, !tbaa !255
  %maximum64 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 1, i32* %maximum64, align 4, !tbaa !257
  %step65 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 1, i32* %step65, align 4, !tbaa !259
  br label %cleanup100

sw.bb66:                                          ; preds = %if.end53
  %minimum67 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum67, align 4, !tbaa !255
  %maximum68 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 0, i32* %maximum68, align 4, !tbaa !257
  %step69 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 0, i32* %step69, align 4, !tbaa !259
  br label %cleanup100

sw.epilog:                                        ; preds = %if.end53
  %info70 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags71 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info70, i32 0, i32 5
  %30 = load i32, i32* %flags71, align 4, !tbaa !517
  %and72 = and i32 %30, 4
  %tobool73 = icmp ne i32 %and72, 0
  br i1 %tobool73, label %if.then74, label %if.end79

if.then74:                                        ; preds = %sw.epilog
  %get75 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %31 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get75, align 8, !tbaa !523
  %call76 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 2)
  %call77 = call i32 %31(%struct.uvc_control_mapping* %mapping, i8 zeroext -126, i8* %call76)
  %minimum78 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 %call77, i32* %minimum78, align 4, !tbaa !255
  br label %if.end79

if.end79:                                         ; preds = %if.then74, %sw.epilog
  %info80 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags81 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info80, i32 0, i32 5
  %32 = load i32, i32* %flags81, align 4, !tbaa !517
  %and82 = and i32 %32, 8
  %tobool83 = icmp ne i32 %and82, 0
  br i1 %tobool83, label %if.then84, label %if.end89

if.then84:                                        ; preds = %if.end79
  %get85 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %33 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get85, align 8, !tbaa !523
  %call86 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 3)
  %call87 = call i32 %33(%struct.uvc_control_mapping* %mapping, i8 zeroext -125, i8* %call86)
  %maximum88 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 %call87, i32* %maximum88, align 4, !tbaa !257
  br label %if.end89

if.end89:                                         ; preds = %if.then84, %if.end79
  %info90 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags91 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info90, i32 0, i32 5
  %34 = load i32, i32* %flags91, align 4, !tbaa !517
  %and92 = and i32 %34, 16
  %tobool93 = icmp ne i32 %and92, 0
  br i1 %tobool93, label %if.then94, label %cleanup100

if.then94:                                        ; preds = %if.end89
  %get95 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %35 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get95, align 8, !tbaa !523
  %call96 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 4)
  %call97 = call i32 %35(%struct.uvc_control_mapping* %mapping, i8 zeroext -124, i8* %call96)
  %step98 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 %call97, i32* %step98, align 4, !tbaa !259
  br label %cleanup100

cleanup100:                                       ; preds = %if.then94, %if.end89, %sw.bb66, %sw.bb62, %if.then59, %for.cond, %if.then36, %cleanup
  %retval.3 = phi i32 [ %call25, %cleanup ], [ 0, %sw.bb66 ], [ 0, %sw.bb62 ], [ %call38.retval.1, %if.then36 ], [ 0, %for.cond ], [ 0, %if.then59 ], [ 0, %if.then94 ], [ 0, %if.end89 ]
  %36 = bitcast %struct.uvc_control.903** %master_ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #8
  %37 = bitcast %struct.uvc_control_mapping** %master_map to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #8
  ret i32 %retval.3
}

; Function Attrs: nounwind uwtable
define internal void @__uvc_find_control(%struct.uvc_entity.872* %entity, i32 %v4l2_id, %struct.uvc_control_mapping** %mapping, %struct.uvc_control.903** %control, i32 %next) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity.872* %entity, null
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc30, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc30 ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 14
  %0 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp1 = icmp ult i32 %i.0, %0
  br i1 %cmp1, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 15
  %1 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %1, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end3, label %for.inc30

if.end3:                                          ; preds = %for.body
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %if.end3
  %list26.sink = phi %struct.list_head* [ %list26, %for.inc ], [ %mappings, %if.end3 ]
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26.sink, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next27, align 8, !tbaa !74
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr29 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = bitcast i8* %add.ptr29 to %struct.uvc_control_mapping*
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 0
  %info6 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %mappings7 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info6, i32 0, i32 0
  %cmp8 = icmp ne %struct.list_head* %list, %mappings7
  br i1 %cmp8, label %for.body9, label %for.inc30

for.body9:                                        ; preds = %for.cond5
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %5 = load i32, i32* %id, align 8, !tbaa !300
  %cmp10 = icmp ne i32 %5, %v4l2_id
  %tobool11 = icmp ne i32 %next, 0
  %or.cond = or i1 %cmp10, %tobool11
  br i1 %or.cond, label %if.end13, label %if.then12

if.then12:                                        ; preds = %for.body9
  store %struct.uvc_control.903* %arrayidx, %struct.uvc_control.903** %control, align 8, !tbaa !74
  store %struct.uvc_control_mapping* %4, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  br label %cleanup.cont

if.end13:                                         ; preds = %for.body9
  %6 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %cmp14 = icmp eq %struct.uvc_control_mapping* %6, null
  br i1 %cmp14, label %land.lhs.true18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end13
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %id15 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 2
  %8 = load i32, i32* %id15, align 8, !tbaa !300
  %id16 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %9 = load i32, i32* %id16, align 8, !tbaa !300
  %cmp17 = icmp ugt i32 %8, %9
  br i1 %cmp17, label %land.lhs.true18, label %for.inc

land.lhs.true18:                                  ; preds = %lor.lhs.false, %if.end13
  %id19 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %10 = load i32, i32* %id19, align 8, !tbaa !300
  %cmp20 = icmp ugt i32 %10, %v4l2_id
  %tobool22 = icmp ne i32 %next, 0
  %or.cond2 = and i1 %cmp20, %tobool22
  br i1 %or.cond2, label %if.then23, label %for.inc

if.then23:                                        ; preds = %land.lhs.true18
  store %struct.uvc_control.903* %arrayidx, %struct.uvc_control.903** %control, align 8, !tbaa !74
  store %struct.uvc_control_mapping* %4, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  br label %for.inc

for.inc:                                          ; preds = %if.then23, %land.lhs.true18, %lor.lhs.false
  %list26 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 0
  br label %for.cond5

for.inc30:                                        ; preds = %for.cond5, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %if.then12, %for.cond, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %ctrl) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %0 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %1 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !120
  %dev1 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev1, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %4, i32 0, i32 4
  %5 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv = trunc i32 %5 to i8
  %info2 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info2, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !521
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 5)
  %info3 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 4
  %7 = load i16, i16* %size, align 2, !tbaa !522
  %call4 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %1, i8 zeroext -121, i8 zeroext %3, i8 zeroext %conv, i8 zeroext %6, i8* %call, i16 zeroext %7)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.then, %entry
  %info8 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags9 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info8, i32 0, i32 5
  %8 = load i32, i32* %flags9, align 4, !tbaa !517
  %and10 = and i32 %8, 4
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then12, label %if.end29

if.then12:                                        ; preds = %if.end7
  %dev13 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %9 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev13, align 8, !tbaa !136
  %entity14 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %10 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity14, align 8, !tbaa !520
  %id15 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %10, i32 0, i32 3
  %11 = load i8, i8* %id15, align 4, !tbaa !120
  %dev16 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %12 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev16, align 8, !tbaa !136
  %intfnum17 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %12, i32 0, i32 4
  %13 = load i32, i32* %intfnum17, align 4, !tbaa !51
  %conv18 = trunc i32 %13 to i8
  %info19 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector20 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info19, i32 0, i32 3
  %14 = load i8, i8* %selector20, align 1, !tbaa !521
  %call21 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 2)
  %info22 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size23 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info22, i32 0, i32 4
  %15 = load i16, i16* %size23, align 2, !tbaa !522
  %call24 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %9, i8 zeroext -126, i8 zeroext %11, i8 zeroext %conv18, i8 zeroext %14, i8* %call21, i16 zeroext %15)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %cleanup, label %if.end29

if.end29:                                         ; preds = %if.then12, %if.end7
  %info30 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags31 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info30, i32 0, i32 5
  %16 = load i32, i32* %flags31, align 4, !tbaa !517
  %and32 = and i32 %16, 8
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.end51

if.then34:                                        ; preds = %if.end29
  %dev35 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %17 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev35, align 8, !tbaa !136
  %entity36 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %18 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity36, align 8, !tbaa !520
  %id37 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %18, i32 0, i32 3
  %19 = load i8, i8* %id37, align 4, !tbaa !120
  %dev38 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %20 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev38, align 8, !tbaa !136
  %intfnum39 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %20, i32 0, i32 4
  %21 = load i32, i32* %intfnum39, align 4, !tbaa !51
  %conv40 = trunc i32 %21 to i8
  %info41 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector42 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info41, i32 0, i32 3
  %22 = load i8, i8* %selector42, align 1, !tbaa !521
  %call43 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 3)
  %info44 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size45 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info44, i32 0, i32 4
  %23 = load i16, i16* %size45, align 2, !tbaa !522
  %call46 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %17, i8 zeroext -125, i8 zeroext %19, i8 zeroext %conv40, i8 zeroext %22, i8* %call43, i16 zeroext %23)
  %cmp47 = icmp slt i32 %call46, 0
  br i1 %cmp47, label %cleanup, label %if.end51

if.end51:                                         ; preds = %if.then34, %if.end29
  %info52 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %flags53 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info52, i32 0, i32 5
  %24 = load i32, i32* %flags53, align 4, !tbaa !517
  %and54 = and i32 %24, 16
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %if.end90

if.then56:                                        ; preds = %if.end51
  %dev57 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %25 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev57, align 8, !tbaa !136
  %entity58 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %26 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity58, align 8, !tbaa !520
  %id59 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %26, i32 0, i32 3
  %27 = load i8, i8* %id59, align 4, !tbaa !120
  %dev60 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %28 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev60, align 8, !tbaa !136
  %intfnum61 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %28, i32 0, i32 4
  %29 = load i32, i32* %intfnum61, align 4, !tbaa !51
  %conv62 = trunc i32 %29 to i8
  %info63 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector64 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info63, i32 0, i32 3
  %30 = load i8, i8* %selector64, align 1, !tbaa !521
  %call65 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 4)
  %info66 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size67 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info66, i32 0, i32 4
  %31 = load i16, i16* %size67, align 2, !tbaa !522
  %call68 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %25, i8 zeroext -124, i8 zeroext %27, i8 zeroext %conv62, i8 zeroext %30, i8* %call65, i16 zeroext %31)
  %cmp69 = icmp slt i32 %call68, 0
  br i1 %cmp69, label %if.then71, label %if.end90

if.then71:                                        ; preds = %if.then56
  %entity72 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %32 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity72, align 8, !tbaa !520
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %32, i32 0, i32 4
  %33 = load i16, i16* %type, align 2, !tbaa !114
  %conv73 = zext i16 %33 to i32
  %and74 = and i32 %conv73, 32767
  %cmp75 = icmp ne i32 %and74, 6
  br i1 %cmp75, label %cleanup, label %do.body

do.body:                                          ; preds = %if.then71
  %dev79 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %34 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev79, align 8, !tbaa !136
  %warnings = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %34, i32 0, i32 2
  %call80 = call zeroext i1 @test_and_set_bit.238(i64 2, i64* %warnings)
  br i1 %call80, label %do.end, label %if.then81

if.then81:                                        ; preds = %do.body
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7.239, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then81, %do.body
  %call84 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 4)
  %info85 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size86 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info85, i32 0, i32 4
  %35 = load i16, i16* %size86, align 2, !tbaa !522
  %conv87 = zext i16 %35 to i64
  %call88 = call i8* @__memset(i8* %call84, i32 0, i64 %conv87)
  br label %if.end90

if.end90:                                         ; preds = %do.end, %if.then56, %if.end51
  %cached = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.clear = and i8 %bf.load, -9
  %bf.set = or i8 %bf.clear, 8
  store i8 %bf.set, i8* %cached, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end90, %if.then71, %if.then34, %if.then12, %if.then
  %retval.0 = phi i32 [ 0, %if.end90 ], [ %call4, %if.then ], [ %call24, %if.then12 ], [ %call46, %if.then34 ], [ %call68, %if.then71 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @uvc_ctrl_data(%struct.uvc_control.903* %ctrl, i32 %id) #1 {
entry:
  %uvc_data = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 4
  %0 = load i8*, i8** %uvc_data, align 8, !tbaa !533
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %1 = load i16, i16* %size, align 2, !tbaa !522
  %conv = zext i16 %1 to i32
  %mul = mul nsw i32 %id, %conv
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i1 @test_and_set_bit.238(i64 %nr, i64* %addr) #3 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i8* %c, i64 %nr, i64* %addr) #8, !srcloc !534
  %0 = load i8, i8* %c, align 1, !tbaa !95, !range !96
  %tobool = trunc i8 %0 to i1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i1 %tobool
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__list_add.240(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %call = call zeroext i1 @__list_add_valid(%struct.list_head* %new, %struct.list_head* %prev, %struct.list_head* %next)
  br i1 %call, label %if.end, label %return

if.end:                                           ; preds = %entry
  %prev1 = getelementptr inbounds %struct.list_head, %struct.list_head* %next, i32 0, i32 1
  store %struct.list_head* %new, %struct.list_head** %prev1, align 8, !tbaa !105
  %next2 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 0
  store %struct.list_head* %next, %struct.list_head** %next2, align 8, !tbaa !99
  %prev3 = getelementptr inbounds %struct.list_head, %struct.list_head* %new, i32 0, i32 1
  store %struct.list_head* %prev, %struct.list_head** %prev3, align 8, !tbaa !105
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %new, %struct.list_head** %__val, align 8, !tbaa !104
  %next4 = getelementptr inbounds %struct.list_head, %struct.list_head* %prev, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next4 to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.236(i8* %1, i8* %arraydecay, i32 8)
  %__val5 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val5, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %chain, %struct.v4l2_queryctrl* %v4l2_ctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 4, !tbaa !251
  %call1 = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp2 = icmp eq %struct.uvc_control.903* %call1, null
  br i1 %cmp2, label %done, label %if.end4

if.end4:                                          ; preds = %if.end
  %2 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call5 = call i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %call1, %struct.uvc_control_mapping* %2, %struct.v4l2_queryctrl* %v4l2_ctrl)
  br label %done

done:                                             ; preds = %if.end4, %if.end
  %ret.0 = phi i32 [ %call5, %if.end4 ], [ -22, %if.end ]
  %ctrl_mutex6 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex6)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -512, %entry ]
  %3 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_query_v4l2_menu(%struct.uvc_video_chain.869* %chain, %struct.v4l2_querymenu* %query_menu) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %index1 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %1 = load i32, i32* %index1, align 1, !tbaa !535
  %id2 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  %2 = load i32, i32* %id2, align 1, !tbaa !537
  %3 = bitcast %struct.v4l2_querymenu* %query_menu to i8*
  %call = call i8* @__memset(i8* %3, i32 0, i64 44)
  %id3 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  store i32 %2, i32* %id3, align 1, !tbaa !537
  %index4 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  store i32 %1, i32* %index4, align 1, !tbaa !535
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  %call5 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call5, 0
  br i1 %cmp, label %cleanup38, label %if.end

if.end:                                           ; preds = %entry
  %id6 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  %4 = load i32, i32* %id6, align 1, !tbaa !537
  %call7 = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %chain, i32 %4, %struct.uvc_control_mapping** %mapping)
  %cmp8 = icmp eq %struct.uvc_control.903* %call7, null
  br i1 %cmp8, label %done, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 8
  %6 = load i32, i32* %v4l2_type, align 8, !tbaa !309
  %cmp9 = icmp ne i32 %6, 3
  br i1 %cmp9, label %done, label %if.end11

if.end11:                                         ; preds = %lor.lhs.false
  %index12 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %7 = load i32, i32* %index12, align 1, !tbaa !535
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %8, i32 0, i32 11
  %9 = load i32, i32* %menu_count, align 8, !tbaa !315
  %cmp13 = icmp uge i32 %7, %9
  br i1 %cmp13, label %done, label %if.end15

if.end15:                                         ; preds = %if.end11
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %menu_info16 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %10, i32 0, i32 10
  %11 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info16, align 8, !tbaa !314
  %index17 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %12 = load i32, i32* %index17, align 1, !tbaa !535
  %idxprom = zext i32 %12 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %11, i64 %idxprom
  %13 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %13, i32 0, i32 9
  %14 = load i32, i32* %data_type, align 4, !tbaa !311
  %cmp18 = icmp eq i32 %14, 5
  br i1 %cmp18, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %if.end15
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call7, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %15 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %15, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then19, label %if.end33

if.then19:                                        ; preds = %land.lhs.true
  %cached = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call7, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool20 = icmp ne i8 %bf.clear, 0
  br i1 %tobool20, label %if.end26, label %if.then21

if.then21:                                        ; preds = %if.then19
  %call22 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %call7)
  %cmp23 = icmp slt i32 %call22, 0
  br i1 %cmp23, label %cleanup, label %if.end26

if.end26:                                         ; preds = %if.then21, %if.then19
  %ret.0 = phi i32 [ %call5, %if.then19 ], [ %call22, %if.then21 ]
  %16 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %16, i32 0, i32 15
  %17 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !523
  %18 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call27 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call7, i32 4)
  %call28 = call i32 %17(%struct.uvc_control_mapping* %18, i8 zeroext -124, i8* %call27)
  %value = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 0
  %19 = load i32, i32* %value, align 4, !tbaa !524
  %and29 = and i32 %call28, %19
  %tobool30 = icmp ne i32 %and29, 0
  %ret.0. = select i1 %tobool30, i32 %ret.0, i32 -22
  %. = select i1 %tobool30, i32 0, i32 2
  br label %cleanup

cleanup:                                          ; preds = %if.end26, %if.then21
  %ret.1 = phi i32 [ %call22, %if.then21 ], [ %ret.0., %if.end26 ]
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then21 ], [ %., %if.end26 ]
  %switch = icmp ult i32 %cleanup.dest.slot.0, 1
  br i1 %switch, label %if.end33, label %done

if.end33:                                         ; preds = %cleanup, %land.lhs.true, %if.end15
  %ret.2 = phi i32 [ %call5, %land.lhs.true ], [ %call5, %if.end15 ], [ %ret.1, %cleanup ]
  %20 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 2
  %name = bitcast %union.anon.69* %20 to [32 x i8]*
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name34 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 1
  %arraydecay35 = getelementptr inbounds [32 x i8], [32 x i8]* %name34, i32 0, i32 0
  %call36 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay35, i64 32)
  br label %done

done:                                             ; preds = %if.end33, %cleanup, %if.end11, %lor.lhs.false, %if.end
  %ret.3 = phi i32 [ %ret.1, %cleanup ], [ %ret.2, %if.end33 ], [ -22, %lor.lhs.false ], [ -22, %if.end ], [ -22, %if.end11 ]
  %ctrl_mutex37 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex37)
  br label %cleanup38

cleanup38:                                        ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.3, %done ], [ -512, %entry ]
  %21 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_begin(%struct.uvc_video_chain.869* %chain) #0 {
entry:
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool = icmp ne i32 %call, 0
  %0 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 -512, i32 0
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 %rollback, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %0 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain1, align 8, !tbaa !238
  %entities = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %0, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain6.sink = phi %struct.list_head* [ %chain6, %for.inc ], [ %entities, %entry ]
  %ret.0 = phi i32 [ 0, %entry ], [ %call, %for.inc ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain6.sink, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !74
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %2, i64 -16
  %3 = bitcast i8* %add.ptr9 to %struct.uvc_entity.872*
  %chain2 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %3, i32 0, i32 1
  %entities3 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %0, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain2, %entities3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %0, i32 0, i32 0
  %4 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %call = call i32 @uvc_ctrl_commit_entity(%struct.uvc_device.871* %4, %struct.uvc_entity.872* %3, i32 %rollback)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %done, label %for.inc

for.inc:                                          ; preds = %for.body
  %chain6 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %3, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tobool = icmp ne i32 %rollback, 0
  br i1 %tobool, label %done, label %if.then10

if.then10:                                        ; preds = %for.end
  call void @uvc_ctrl_send_events(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  br label %done

done:                                             ; preds = %if.then10, %for.end, %for.body
  %ret.1 = phi i32 [ %call, %for.body ], [ %ret.0, %if.then10 ], [ %ret.0, %for.end ]
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %0, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex)
  ret i32 %ret.1
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_commit_entity(%struct.uvc_device.871* %dev, %struct.uvc_entity.872* %entity, i32 %rollback) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity.872* %entity, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 14
  %0 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp1 = icmp ult i32 %i.0, %0
  br i1 %cmp1, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 15
  %1 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %1, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end3, label %for.inc

if.end3:                                          ; preds = %for.body
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %2 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %2, 128
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %info5 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %flags6 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info5, i32 0, i32 5
  %3 = load i32, i32* %flags6, align 4, !tbaa !517
  %and7 = and i32 %3, 2
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %if.end12, label %if.then9

if.then9:                                         ; preds = %lor.lhs.false, %if.end3
  %loaded = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load10 = load i8, i8* %loaded, align 1
  %bf.clear11 = and i8 %bf.load10, -3
  store i8 %bf.clear11, i8* %loaded, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %lor.lhs.false
  %dirty = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load13 = load i8, i8* %dirty, align 1
  %bf.clear14 = and i8 %bf.load13, 1
  %tobool15 = icmp ne i8 %bf.clear14, 0
  br i1 %tobool15, label %if.end17, label %for.inc

if.end17:                                         ; preds = %if.end12
  %tobool18 = icmp ne i32 %rollback, 0
  br i1 %tobool18, label %if.end24, label %if.then19

if.then19:                                        ; preds = %if.end17
  %entity20 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 0
  %4 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity20, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !120
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 4
  %6 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv = trunc i32 %6 to i8
  %info21 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info21, i32 0, i32 3
  %7 = load i8, i8* %selector, align 1, !tbaa !521
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %arrayidx, i32 0)
  %info22 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info22, i32 0, i32 4
  %8 = load i16, i16* %size, align 2, !tbaa !522
  %call23 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext 1, i8 zeroext %5, i8 zeroext %conv, i8 zeroext %7, i8* %call, i16 zeroext %8)
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end17
  %ret.0 = phi i32 [ %call23, %if.then19 ], [ 0, %if.end17 ]
  %tobool25 = icmp ne i32 %rollback, 0
  %cmp27 = icmp slt i32 %ret.0, 0
  %or.cond = or i1 %tobool25, %cmp27
  br i1 %or.cond, label %if.then29, label %if.end36

if.then29:                                        ; preds = %if.end24
  %call30 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %arrayidx, i32 0)
  %call31 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %arrayidx, i32 1)
  %info32 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %size33 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info32, i32 0, i32 4
  %9 = load i16, i16* %size33, align 2, !tbaa !522
  %conv34 = zext i16 %9 to i64
  %call35 = call i8* @__memcpy(i8* %call30, i8* %call31, i64 %conv34)
  br label %if.end36

if.end36:                                         ; preds = %if.then29, %if.end24
  %dirty37 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load38 = load i8, i8* %dirty37, align 1
  %bf.clear39 = and i8 %bf.load38, -2
  store i8 %bf.clear39, i8* %dirty37, align 1
  %cmp40 = icmp slt i32 %ret.0, 0
  br i1 %cmp40, label %cleanup, label %for.inc

for.inc:                                          ; preds = %if.end36, %if.end12, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.end36, %for.cond, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %ret.0, %if.end36 ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_events(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  br label %for.cond

for.cond:                                         ; preds = %if.end27, %entry
  %changes.0 = phi i32 [ 1, %entry ], [ %changes.2, %if.end27 ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc31, %if.end27 ]
  %cmp = icmp ult i32 %i.0, %xctrls_count
  br i1 %cmp, label %for.body, label %for.end32

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx, i32 0, i32 0
  %2 = load i32, i32* %id, align 1, !tbaa !270
  %call = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %1, i32 %2, %struct.uvc_control_mapping** %mapping)
  br label %for.cond1

for.cond1:                                        ; preds = %if.end, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %if.end ]
  %conv = zext i32 %j.0 to i64
  %cmp2 = icmp ult i64 %conv, 2
  br i1 %cmp2, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond1
  %3 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %slave_ids = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %3, i32 0, i32 14
  %idxprom5 = zext i32 %j.0 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %slave_ids, i64 0, i64 %idxprom5
  %4 = load i32, i32* %arrayidx6, align 4, !tbaa !9
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %for.end

if.end:                                           ; preds = %for.body4
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %slave_ids7 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 14
  %idxprom8 = zext i32 %j.0 to i64
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %slave_ids7, i64 0, i64 %idxprom8
  %6 = load i32, i32* %arrayidx9, align 4, !tbaa !9
  call void @uvc_ctrl_send_slave_event(%struct.uvc_fh* %handle, %struct.uvc_control.903* %call, i32 %6, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  %inc = add i32 %j.0, 1
  br label %for.cond1

for.end:                                          ; preds = %for.body4, %for.cond1
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %master_id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 12
  %8 = load i32, i32* %master_id, align 4, !tbaa !529
  %tobool10 = icmp ne i32 %8, 0
  br i1 %tobool10, label %if.then11, label %if.end27

if.then11:                                        ; preds = %for.end
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc24, %if.then11
  %j.1 = phi i32 [ 0, %if.then11 ], [ %inc25, %for.inc24 ]
  %cmp13 = icmp ult i32 %j.1, %xctrls_count
  br i1 %cmp13, label %for.body15, label %if.end27

for.body15:                                       ; preds = %for.cond12
  %idxprom16 = zext i32 %j.1 to i64
  %arrayidx17 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom16
  %id18 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx17, i32 0, i32 0
  %9 = load i32, i32* %id18, align 1, !tbaa !270
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %master_id19 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %10, i32 0, i32 12
  %11 = load i32, i32* %master_id19, align 4, !tbaa !529
  %cmp20 = icmp eq i32 %9, %11
  br i1 %cmp20, label %if.then22, label %for.inc24

if.then22:                                        ; preds = %for.body15
  %or = or i32 %changes.0, 2
  br label %if.end27

for.inc24:                                        ; preds = %for.body15
  %inc25 = add i32 %j.1, 1
  br label %for.cond12

if.end27:                                         ; preds = %if.then22, %for.cond12, %for.end
  %changes.2 = phi i32 [ %changes.0, %for.end ], [ %or, %if.then22 ], [ %changes.0, %for.cond12 ]
  %12 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %idxprom28 = zext i32 %i.0 to i64
  %arrayidx29 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom28
  %13 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx29, i32 0, i32 3
  %value = bitcast %union.anon.3* %13 to i32*
  %14 = load i32, i32* %value, align 1, !tbaa !104
  call void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control.903* %call, %struct.uvc_control_mapping* %12, i32 %14, i32 %changes.2)
  %inc31 = add i32 %i.0, 1
  br label %for.cond

for.end32:                                        ; preds = %for.cond
  %15 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_slave_event(%struct.uvc_fh* %handle, %struct.uvc_control.903* %master, i32 %slave_id, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %ctrl = alloca %struct.uvc_control.903*, align 8
  %val = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %1 = bitcast %struct.uvc_control.903** %ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  store %struct.uvc_control.903* null, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %2 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 0, i32* %val, align 4, !tbaa !9
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, %xctrls_count
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %id, align 1, !tbaa !270
  %cmp1 = icmp eq i32 %3, %slave_id
  br i1 %cmp1, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %master, i32 0, i32 0
  %4 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  call void @__uvc_find_control(%struct.uvc_entity.872* %4, i32 %slave_id, %struct.uvc_control_mapping** %mapping, %struct.uvc_control.903** %ctrl, i32 0)
  %5 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %cmp2 = icmp eq %struct.uvc_control.903* %5, null
  br i1 %cmp2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %for.end
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %6 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  %7 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain.869* %6, %struct.uvc_control.903* %7, %struct.uvc_control_mapping* %8, i32* %val)
  %cmp5 = icmp eq i32 %call, 0
  %or = or i32 2, 1
  %or. = select i1 %cmp5, i32 %or, i32 2
  %9 = load %struct.uvc_control.903*, %struct.uvc_control.903** %ctrl, align 8, !tbaa !74
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %11 = load i32, i32* %val, align 4, !tbaa !9
  call void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control.903* %9, %struct.uvc_control_mapping* %10, i32 %11, i32 %or.)
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %for.end, %for.body
  %12 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #8
  %13 = bitcast %struct.uvc_control.903** %ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  %14 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes) #0 {
entry:
  %ev = alloca %struct.v4l2_event, align 8
  %0 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* %0) #8
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  %call = call i32 @list_empty.250(%struct.list_head* %ev_subs)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %1 = load %struct.uvc_video_chain.869*, %struct.uvc_video_chain.869** %chain, align 8, !tbaa !238
  call void @uvc_ctrl_fill_event(%struct.uvc_video_chain.869* %1, %struct.v4l2_event* %ev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes)
  %ev_subs1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %node14.sink = phi %struct.list_head* [ %node14, %for.inc ], [ %ev_subs1, %if.end ]
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %node14.sink, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next15, align 8, !tbaa !74
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr17 = getelementptr inbounds i8, i8* %3, i64 -40
  %4 = bitcast i8* %add.ptr17 to %struct.v4l2_subscribed_event.1377*
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 5
  %ev_subs2 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  %cmp = icmp ne %struct.list_head* %node, %ev_subs2
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 4
  %5 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh, align 8, !tbaa !74
  %tobool3 = icmp ne %struct.v4l2_fh.753* %5, null
  br i1 %tobool3, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %fh4 = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 4
  %6 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh4, align 8, !tbaa !74
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 0
  %cmp5 = icmp ne %struct.v4l2_fh.753* %6, %vfh
  br i1 %cmp5, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %flags = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 3
  %7 = load i32, i32* %flags, align 8, !tbaa !9
  %and = and i32 %7, 2
  %tobool6 = icmp ne i32 %and, 0
  %and8 = and i32 %changes, 2
  %tobool9 = icmp ne i32 %and8, 0
  %or.cond = or i1 %tobool6, %tobool9
  br i1 %or.cond, label %if.then10, label %for.inc

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %fh11 = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 4
  %8 = load %struct.v4l2_fh.753*, %struct.v4l2_fh.753** %fh11, align 8, !tbaa !74
  call void @v4l2_event_queue_fh(%struct.v4l2_fh.753* %8, %struct.v4l2_event* %ev)
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %lor.lhs.false, %for.body
  %node14 = getelementptr inbounds %struct.v4l2_subscribed_event.1377, %struct.v4l2_subscribed_event.1377* %4, i32 0, i32 5
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %entry
  %9 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.end.p0i8(i64 136, i8* %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.250(%struct.list_head* %head) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__read_once_size.251(i8* %1, i8* %arraydecay, i32 8)
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq %struct.list_head* %2, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__read_once_size.251(i8* %p, i8* %res, i32 %size) #3 {
entry:
  switch i32 %size, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb1
    i32 4, label %sw.bb2
    i32 8, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %0 = load volatile i8, i8* %p, align 1, !tbaa !104
  store i8 %0, i8* %res, align 1, !tbaa !104
  br label %sw.epilog

sw.bb1:                                           ; preds = %entry
  %1 = bitcast i8* %p to i16*
  %2 = load volatile i16, i16* %1, align 2, !tbaa !142
  %3 = bitcast i8* %res to i16*
  store i16 %2, i16* %3, align 2, !tbaa !142
  br label %sw.epilog

sw.bb2:                                           ; preds = %entry
  %4 = bitcast i8* %p to i32*
  %5 = load volatile i32, i32* %4, align 4, !tbaa !9
  %6 = bitcast i8* %res to i32*
  store i32 %5, i32* %6, align 4, !tbaa !9
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %7 = bitcast i8* %p to i64*
  %8 = load volatile i64, i64* %7, align 8, !tbaa !143
  %9 = bitcast i8* %res to i64*
  store i64 %8, i64* %9, align 8, !tbaa !143
  br label %sw.epilog

sw.default:                                       ; preds = %entry
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !538
  %conv = sext i32 %size to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %res, i8* %p, i64 %conv, i32 1, i1 false)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #8, !srcloc !539
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %sw.bb3, %sw.bb2, %sw.bb1, %sw.bb
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_get(%struct.uvc_video_chain.869* %chain, %struct.v4l2_ext_control* %xctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 1, !tbaa !270
  %call = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp = icmp eq %struct.uvc_control.903* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %3 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value = bitcast %union.anon.3* %3 to i32*
  %call1 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %call, %struct.uvc_control_mapping* %2, i32* %value)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ -22, %entry ]
  %4 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_set(%struct.uvc_video_chain.869* %chain, %struct.v4l2_ext_control* %xctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %__UNIQUE_ID_min1_26 = alloca i32, align 4
  %__UNIQUE_ID_max1_24 = alloca i32, align 4
  %__UNIQUE_ID_max2_25 = alloca i32, align 4
  %__UNIQUE_ID_min2_27 = alloca i32, align 4
  %__UNIQUE_ID_min1_30 = alloca i32, align 4
  %__UNIQUE_ID_min1_28 = alloca i32, align 4
  %__UNIQUE_ID_min2_29 = alloca i32, align 4
  %__UNIQUE_ID_min2_31 = alloca i32, align 4
  %__UNIQUE_ID_min1_34 = alloca i32, align 4
  %__UNIQUE_ID_max1_32 = alloca i32, align 4
  %__UNIQUE_ID_max2_33 = alloca i32, align 4
  %__UNIQUE_ID_min2_35 = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 1, !tbaa !270
  %call = call %struct.uvc_control.903* @uvc_find_control(%struct.uvc_video_chain.869* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp = icmp eq %struct.uvc_control.903* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %2 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %2, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end2, label %cleanup

if.end2:                                          ; preds = %if.end
  %3 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %3, i32 0, i32 8
  %4 = load i32, i32* %v4l2_type, align 8, !tbaa !309
  switch i32 %4, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb63
    i32 3, label %sw.bb85
  ]

sw.bb:                                            ; preds = %if.end2
  %cached = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool3 = icmp ne i8 %bf.clear, 0
  br i1 %tobool3, label %if.end9, label %if.then4

if.then4:                                         ; preds = %sw.bb
  %call5 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %call)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.then4, %sw.bb
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 15
  %6 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !523
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call10 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 2)
  %call11 = call i32 %6(%struct.uvc_control_mapping* %7, i8 zeroext -126, i8* %call10)
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %get12 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %8, i32 0, i32 15
  %9 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get12, align 8, !tbaa !523
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call13 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 3)
  %call14 = call i32 %9(%struct.uvc_control_mapping* %10, i8 zeroext -125, i8* %call13)
  %11 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %get15 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %11, i32 0, i32 15
  %12 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get15, align 8, !tbaa !523
  %13 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call16 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 4)
  %call17 = call i32 %12(%struct.uvc_control_mapping* %13, i8 zeroext -124, i8* %call16)
  %cmp18 = icmp eq i32 %call17, 0
  %.call17 = select i1 %cmp18, i32 1, i32 %call17
  %14 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value21 = bitcast %union.anon.3* %14 to i32*
  %15 = load i32, i32* %value21, align 1, !tbaa !104
  %sub = sub nsw i32 %15, %call11
  %div = udiv i32 %.call17, 2
  %add = add i32 %sub, %div
  %div22 = udiv i32 %add, %.call17
  %mul = mul i32 %div22, %.call17
  %add23 = add i32 %call11, %mul
  %16 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value24 = bitcast %union.anon.3* %16 to i32*
  store i32 %add23, i32* %value24, align 1, !tbaa !104
  %17 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %17, i32 0, i32 9
  %18 = load i32, i32* %data_type, align 4, !tbaa !311
  %cmp25 = icmp eq i32 %18, 1
  br i1 %cmp25, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end9
  %19 = bitcast i32* %__UNIQUE_ID_min1_26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #8
  %20 = bitcast i32* %__UNIQUE_ID_max1_24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %20) #8
  %21 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value27 = bitcast %union.anon.3* %21 to i32*
  %22 = load i32, i32* %value27, align 1, !tbaa !104
  store i32 %22, i32* %__UNIQUE_ID_max1_24, align 4, !tbaa !9
  %23 = bitcast i32* %__UNIQUE_ID_max2_25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #8
  store i32 %call11, i32* %__UNIQUE_ID_max2_25, align 4, !tbaa !9
  %cmp28 = icmp eq i32* %__UNIQUE_ID_max1_24, %__UNIQUE_ID_max2_25
  %conv = zext i1 %cmp28 to i32
  %24 = load i32, i32* %__UNIQUE_ID_max1_24, align 4, !tbaa !9
  %25 = load i32, i32* %__UNIQUE_ID_max2_25, align 4, !tbaa !9
  %cmp29 = icmp sgt i32 %24, %25
  %26 = load i32, i32* %__UNIQUE_ID_max1_24, align 4
  %27 = load i32, i32* %__UNIQUE_ID_max2_25, align 4
  %cond = select i1 %cmp29, i32 %26, i32 %27
  %28 = bitcast i32* %__UNIQUE_ID_max2_25 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %28) #8
  %29 = bitcast i32* %__UNIQUE_ID_max1_24 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %29) #8
  store i32 %cond, i32* %__UNIQUE_ID_min1_26, align 4, !tbaa !9
  %30 = bitcast i32* %__UNIQUE_ID_min2_27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %30) #8
  store i32 %call14, i32* %__UNIQUE_ID_min2_27, align 4, !tbaa !9
  %cmp31 = icmp eq i32* %__UNIQUE_ID_min1_26, %__UNIQUE_ID_min2_27
  %conv32 = zext i1 %cmp31 to i32
  %31 = load i32, i32* %__UNIQUE_ID_min1_26, align 4, !tbaa !9
  %32 = load i32, i32* %__UNIQUE_ID_min2_27, align 4, !tbaa !9
  %cmp34 = icmp slt i32 %31, %32
  %33 = load i32, i32* %__UNIQUE_ID_min1_26, align 4
  %34 = load i32, i32* %__UNIQUE_ID_min2_27, align 4
  %cond39 = select i1 %cmp34, i32 %33, i32 %34
  %35 = bitcast i32* %__UNIQUE_ID_min2_27 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %35) #8
  %36 = bitcast i32* %__UNIQUE_ID_min1_26 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %36) #8
  br label %if.end61

if.else:                                          ; preds = %if.end9
  %37 = bitcast i32* %__UNIQUE_ID_min1_30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %37) #8
  %38 = bitcast i32* %__UNIQUE_ID_min1_28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %38) #8
  %39 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value41 = bitcast %union.anon.3* %39 to i32*
  %40 = load i32, i32* %value41, align 1, !tbaa !104
  store i32 %40, i32* %__UNIQUE_ID_min1_28, align 4, !tbaa !9
  %41 = bitcast i32* %__UNIQUE_ID_min2_29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %41) #8
  store i32 %call11, i32* %__UNIQUE_ID_min2_29, align 4, !tbaa !9
  %cmp42 = icmp eq i32* %__UNIQUE_ID_min1_28, %__UNIQUE_ID_min2_29
  %conv43 = zext i1 %cmp42 to i32
  %42 = load i32, i32* %__UNIQUE_ID_min1_28, align 4, !tbaa !9
  %43 = load i32, i32* %__UNIQUE_ID_min2_29, align 4, !tbaa !9
  %cmp45 = icmp ugt i32 %42, %43
  %44 = load i32, i32* %__UNIQUE_ID_min1_28, align 4
  %45 = load i32, i32* %__UNIQUE_ID_min2_29, align 4
  %cond50 = select i1 %cmp45, i32 %44, i32 %45
  %46 = bitcast i32* %__UNIQUE_ID_min2_29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %46) #8
  %47 = bitcast i32* %__UNIQUE_ID_min1_28 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %47) #8
  store i32 %cond50, i32* %__UNIQUE_ID_min1_30, align 4, !tbaa !9
  %48 = bitcast i32* %__UNIQUE_ID_min2_31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %48) #8
  store i32 %call14, i32* %__UNIQUE_ID_min2_31, align 4, !tbaa !9
  %cmp51 = icmp eq i32* %__UNIQUE_ID_min1_30, %__UNIQUE_ID_min2_31
  %conv52 = zext i1 %cmp51 to i32
  %49 = load i32, i32* %__UNIQUE_ID_min1_30, align 4, !tbaa !9
  %50 = load i32, i32* %__UNIQUE_ID_min2_31, align 4, !tbaa !9
  %cmp54 = icmp ult i32 %49, %50
  %51 = load i32, i32* %__UNIQUE_ID_min1_30, align 4
  %52 = load i32, i32* %__UNIQUE_ID_min2_31, align 4
  %cond59 = select i1 %cmp54, i32 %51, i32 %52
  %53 = bitcast i32* %__UNIQUE_ID_min2_31 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #8
  %54 = bitcast i32* %__UNIQUE_ID_min1_30 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %54) #8
  br label %if.end61

if.end61:                                         ; preds = %if.else, %if.then26
  %cond59.sink = phi i32 [ %cond59, %if.else ], [ %cond39, %if.then26 ]
  %55 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value60 = bitcast %union.anon.3* %55 to i32*
  store i32 %cond59.sink, i32* %value60, align 1, !tbaa !104
  %56 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value62 = bitcast %union.anon.3* %56 to i32*
  %57 = load i32, i32* %value62, align 1, !tbaa !104
  br label %sw.epilog

sw.bb63:                                          ; preds = %if.end2
  %58 = bitcast i32* %__UNIQUE_ID_min1_34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %58) #8
  %59 = bitcast i32* %__UNIQUE_ID_max1_32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %59) #8
  %60 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value64 = bitcast %union.anon.3* %60 to i32*
  %61 = load i32, i32* %value64, align 1, !tbaa !104
  store i32 %61, i32* %__UNIQUE_ID_max1_32, align 4, !tbaa !9
  %62 = bitcast i32* %__UNIQUE_ID_max2_33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %62) #8
  store i32 0, i32* %__UNIQUE_ID_max2_33, align 4, !tbaa !9
  %cmp65 = icmp eq i32* %__UNIQUE_ID_max1_32, %__UNIQUE_ID_max2_33
  %conv66 = zext i1 %cmp65 to i32
  %63 = load i32, i32* %__UNIQUE_ID_max1_32, align 4, !tbaa !9
  %64 = load i32, i32* %__UNIQUE_ID_max2_33, align 4, !tbaa !9
  %cmp68 = icmp sgt i32 %63, %64
  %65 = load i32, i32* %__UNIQUE_ID_max1_32, align 4
  %66 = load i32, i32* %__UNIQUE_ID_max2_33, align 4
  %cond73 = select i1 %cmp68, i32 %65, i32 %66
  %67 = bitcast i32* %__UNIQUE_ID_max2_33 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %67) #8
  %68 = bitcast i32* %__UNIQUE_ID_max1_32 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %68) #8
  store i32 %cond73, i32* %__UNIQUE_ID_min1_34, align 4, !tbaa !9
  %69 = bitcast i32* %__UNIQUE_ID_min2_35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #8
  store i32 1, i32* %__UNIQUE_ID_min2_35, align 4, !tbaa !9
  %cmp74 = icmp eq i32* %__UNIQUE_ID_min1_34, %__UNIQUE_ID_min2_35
  %conv75 = zext i1 %cmp74 to i32
  %70 = load i32, i32* %__UNIQUE_ID_min1_34, align 4, !tbaa !9
  %71 = load i32, i32* %__UNIQUE_ID_min2_35, align 4, !tbaa !9
  %cmp77 = icmp slt i32 %70, %71
  %72 = load i32, i32* %__UNIQUE_ID_min1_34, align 4
  %73 = load i32, i32* %__UNIQUE_ID_min2_35, align 4
  %cond82 = select i1 %cmp77, i32 %72, i32 %73
  %74 = bitcast i32* %__UNIQUE_ID_min2_35 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %74) #8
  %75 = bitcast i32* %__UNIQUE_ID_min1_34 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %75) #8
  %76 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value83 = bitcast %union.anon.3* %76 to i32*
  store i32 %cond82, i32* %value83, align 1, !tbaa !104
  %77 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value84 = bitcast %union.anon.3* %77 to i32*
  %78 = load i32, i32* %value84, align 1, !tbaa !104
  br label %sw.epilog

sw.bb85:                                          ; preds = %if.end2
  %79 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value86 = bitcast %union.anon.3* %79 to i32*
  %80 = load i32, i32* %value86, align 1, !tbaa !104
  %cmp87 = icmp slt i32 %80, 0
  br i1 %cmp87, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb85
  %81 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value89 = bitcast %union.anon.3* %81 to i32*
  %82 = load i32, i32* %value89, align 1, !tbaa !104
  %83 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %83, i32 0, i32 11
  %84 = load i32, i32* %menu_count, align 8, !tbaa !315
  %cmp90 = icmp uge i32 %82, %84
  br i1 %cmp90, label %cleanup, label %if.end93

if.end93:                                         ; preds = %lor.lhs.false
  %85 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %85, i32 0, i32 10
  %86 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !314
  %87 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value94 = bitcast %union.anon.3* %87 to i32*
  %88 = load i32, i32* %value94, align 1, !tbaa !104
  %idxprom = sext i32 %88 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %86, i64 %idxprom
  %value95 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 0
  %89 = load i32, i32* %value95, align 4, !tbaa !524
  %90 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %data_type96 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %90, i32 0, i32 9
  %91 = load i32, i32* %data_type96, align 4, !tbaa !311
  %cmp97 = icmp eq i32 %91, 5
  br i1 %cmp97, label %land.lhs.true, label %sw.epilog

land.lhs.true:                                    ; preds = %if.end93
  %info99 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %flags100 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info99, i32 0, i32 5
  %92 = load i32, i32* %flags100, align 4, !tbaa !517
  %and101 = and i32 %92, 16
  %tobool102 = icmp ne i32 %and101, 0
  br i1 %tobool102, label %if.then103, label %sw.epilog

if.then103:                                       ; preds = %land.lhs.true
  %cached104 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load105 = load i8, i8* %cached104, align 1
  %bf.lshr106 = lshr i8 %bf.load105, 3
  %bf.clear107 = and i8 %bf.lshr106, 1
  %tobool108 = icmp ne i8 %bf.clear107, 0
  br i1 %tobool108, label %if.end115, label %if.then109

if.then109:                                       ; preds = %if.then103
  %call110 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain.869* %chain, %struct.uvc_control.903* %call)
  %cmp111 = icmp slt i32 %call110, 0
  br i1 %cmp111, label %cleanup, label %if.end115

if.end115:                                        ; preds = %if.then109, %if.then103
  %93 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %get116 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %93, i32 0, i32 15
  %94 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get116, align 8, !tbaa !523
  %95 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call117 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 4)
  %call118 = call i32 %94(%struct.uvc_control_mapping* %95, i8 zeroext -124, i8* %call117)
  %and119 = and i32 %call118, %89
  %tobool120 = icmp ne i32 %and119, 0
  br i1 %tobool120, label %sw.epilog, label %cleanup

sw.default:                                       ; preds = %if.end2
  %96 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value124 = bitcast %union.anon.3* %96 to i32*
  %97 = load i32, i32* %value124, align 1, !tbaa !104
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end115, %land.lhs.true, %if.end93, %sw.bb63, %if.end61
  %value.0 = phi i32 [ %97, %sw.default ], [ %78, %sw.bb63 ], [ %57, %if.end61 ], [ %89, %if.end115 ], [ %89, %land.lhs.true ], [ %89, %if.end93 ]
  %loaded = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load125 = load i8, i8* %loaded, align 1
  %bf.lshr126 = lshr i8 %bf.load125, 1
  %bf.clear127 = and i8 %bf.lshr126, 1
  %tobool128 = icmp ne i8 %bf.clear127, 0
  br i1 %tobool128, label %if.end166, label %land.lhs.true129

land.lhs.true129:                                 ; preds = %sw.epilog
  %info130 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info130, i32 0, i32 4
  %98 = load i16, i16* %size, align 2, !tbaa !522
  %conv131 = zext i16 %98 to i32
  %mul132 = mul nsw i32 %conv131, 8
  %99 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %size133 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %99, i32 0, i32 6
  %100 = load i8, i8* %size133, align 1, !tbaa !305
  %conv134 = zext i8 %100 to i32
  %cmp135 = icmp ne i32 %mul132, %conv134
  br i1 %cmp135, label %if.then137, label %if.end166

if.then137:                                       ; preds = %land.lhs.true129
  %info138 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %flags139 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info138, i32 0, i32 5
  %101 = load i32, i32* %flags139, align 4, !tbaa !517
  %and140 = and i32 %101, 2
  %cmp141 = icmp eq i32 %and140, 0
  br i1 %cmp141, label %if.then143, label %if.else149

if.then143:                                       ; preds = %if.then137
  %call144 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 0)
  %info145 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %size146 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info145, i32 0, i32 4
  %102 = load i16, i16* %size146, align 2, !tbaa !522
  %conv147 = zext i16 %102 to i64
  %call148 = call i8* @__memset(i8* %call144, i32 0, i64 %conv147)
  br label %if.end162

if.else149:                                       ; preds = %if.then137
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %103 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 0
  %104 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  %id150 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %104, i32 0, i32 3
  %105 = load i8, i8* %id150, align 4, !tbaa !120
  %dev151 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %106 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev151, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %106, i32 0, i32 4
  %107 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv152 = trunc i32 %107 to i8
  %info153 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info153, i32 0, i32 3
  %108 = load i8, i8* %selector, align 1, !tbaa !521
  %call154 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 0)
  %info155 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %size156 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info155, i32 0, i32 4
  %109 = load i16, i16* %size156, align 2, !tbaa !522
  %call157 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %103, i8 zeroext -127, i8 zeroext %105, i8 zeroext %conv152, i8 zeroext %108, i8* %call154, i16 zeroext %109)
  %cmp158 = icmp slt i32 %call157, 0
  br i1 %cmp158, label %cleanup, label %if.end162

if.end162:                                        ; preds = %if.else149, %if.then143
  %loaded163 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load164 = load i8, i8* %loaded163, align 1
  %bf.clear165 = and i8 %bf.load164, -3
  %bf.set = or i8 %bf.clear165, 2
  store i8 %bf.set, i8* %loaded163, align 1
  br label %if.end166

if.end166:                                        ; preds = %if.end162, %land.lhs.true129, %sw.epilog
  %dirty = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load167 = load i8, i8* %dirty, align 1
  %bf.clear168 = and i8 %bf.load167, 1
  %tobool169 = icmp ne i8 %bf.clear168, 0
  br i1 %tobool169, label %if.end177, label %if.then170

if.then170:                                       ; preds = %if.end166
  %call171 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 1)
  %call172 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 0)
  %info173 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 1
  %size174 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info173, i32 0, i32 4
  %110 = load i16, i16* %size174, align 2, !tbaa !522
  %conv175 = zext i16 %110 to i64
  %call176 = call i8* @__memcpy(i8* %call171, i8* %call172, i64 %conv175)
  br label %if.end177

if.end177:                                        ; preds = %if.then170, %if.end166
  %111 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %set = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %111, i32 0, i32 16
  %112 = load void (%struct.uvc_control_mapping*, i32, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)** %set, align 8, !tbaa !540
  %113 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !74
  %call178 = call i8* @uvc_ctrl_data(%struct.uvc_control.903* %call, i32 0)
  call void %112(%struct.uvc_control_mapping* %113, i32 %value.0, i8* %call178)
  %dirty179 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load180 = load i8, i8* %dirty179, align 1
  %bf.clear181 = and i8 %bf.load180, -2
  %bf.set182 = or i8 %bf.clear181, 1
  store i8 %bf.set182, i8* %dirty179, align 1
  %modified = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %call, i32 0, i32 3
  %bf.load183 = load i8, i8* %modified, align 1
  %bf.clear184 = and i8 %bf.load183, -5
  %bf.set185 = or i8 %bf.clear184, 4
  store i8 %bf.set185, i8* %modified, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end177, %if.else149, %if.end115, %if.then109, %lor.lhs.false, %sw.bb85, %if.then4, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end177 ], [ -22, %entry ], [ -13, %if.end ], [ %call5, %if.then4 ], [ -34, %lor.lhs.false ], [ -34, %sw.bb85 ], [ %call110, %if.then109 ], [ -22, %if.end115 ], [ %call157, %if.else149 ]
  %114 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %114) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_xu_ctrl_query(%struct.uvc_video_chain.869* %chain, %struct.uvc_xu_control_query* %xqry) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain10.sink = phi %struct.list_head* [ %chain10, %for.inc ], [ %entities, %entry ]
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain10.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next11, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr13 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr13 to %struct.uvc_entity.872*
  %chain1 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp3 = icmp eq i32 %and, 6
  br i1 %cmp3, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 3
  %4 = load i8, i8* %id, align 4, !tbaa !120
  %conv5 = zext i8 %4 to i32
  %unit = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %5 = load i8, i8* %unit, align 8, !tbaa !541
  %conv6 = zext i8 %5 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %chain10 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %id14 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 3
  %6 = load i8, i8* %id14, align 4, !tbaa !120
  %conv15 = zext i8 %6 to i32
  %unit16 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %7 = load i8, i8* %unit16, align 8, !tbaa !541
  %conv17 = zext i8 %7 to i32
  %cmp18 = icmp ne i32 %conv15, %conv17
  br i1 %cmp18, label %do.body, label %if.end26

do.body:                                          ; preds = %for.end
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and21 = and i32 %8, 4
  %tobool = icmp ne i32 %and21, 0
  br i1 %tobool, label %if.then22, label %cleanup

if.then22:                                        ; preds = %do.body
  %unit23 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %9 = load i8, i8* %unit23, align 8, !tbaa !541
  %conv24 = zext i8 %9 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.258, i32 0, i32 0), i32 %conv24)
  br label %cleanup

if.end26:                                         ; preds = %for.end
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc37, %if.end26
  %i.0 = phi i32 [ 0, %if.end26 ], [ %inc, %for.inc37 ]
  %ctrl.0 = phi %struct.uvc_control.903* [ undef, %if.end26 ], [ %arrayidx, %for.inc37 ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 14
  %10 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp28 = icmp ult i32 %i.0, %10
  br i1 %cmp28, label %for.body30, label %for.end38

for.body30:                                       ; preds = %for.cond27
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  %11 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %11, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 2
  %12 = load i8, i8* %index, align 8, !tbaa !542
  %conv31 = zext i8 %12 to i32
  %selector = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %13 = load i8, i8* %selector, align 1, !tbaa !543
  %conv32 = zext i8 %13 to i32
  %sub = sub nsw i32 %conv32, 1
  %cmp33 = icmp eq i32 %conv31, %sub
  br i1 %cmp33, label %for.end38, label %for.inc37

for.inc37:                                        ; preds = %for.body30
  %inc = add i32 %i.0, 1
  br label %for.cond27

for.end38:                                        ; preds = %for.body30, %for.cond27
  %found.0 = phi i32 [ 1, %for.body30 ], [ 0, %for.cond27 ]
  %ctrl.1 = phi %struct.uvc_control.903* [ %arrayidx, %for.body30 ], [ %ctrl.0, %for.cond27 ]
  %tobool39 = icmp ne i32 %found.0, 0
  br i1 %tobool39, label %if.end51, label %do.body41

do.body41:                                        ; preds = %for.end38
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and42 = and i32 %14, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %cleanup

if.then44:                                        ; preds = %do.body41
  %15 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %extension = bitcast %union.anon.64* %15 to %struct.anon.70*
  %guidExtensionCode = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %selector45 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %16 = load i8, i8* %selector45, align 1, !tbaa !543
  %conv46 = zext i8 %16 to i32
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.259, i32 0, i32 0), i8* %arraydecay, i32 %conv46)
  br label %cleanup

if.end51:                                         ; preds = %for.end38
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  %call52 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %cleanup, label %if.end55

if.end55:                                         ; preds = %if.end51
  %dev = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %17 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev, align 8, !tbaa !136
  %call56 = call i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device.871* %17, %struct.uvc_control.903* %ctrl.1)
  %cmp57 = icmp slt i32 %call56, 0
  br i1 %cmp57, label %done, label %if.end60

if.end60:                                         ; preds = %if.end55
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.1, i32 0, i32 1
  %size61 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %18 = load i16, i16* %size61, align 2, !tbaa !522
  %query = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %19 = load i8, i8* %query, align 2, !tbaa !544
  %conv62 = zext i8 %19 to i32
  switch i32 %conv62, label %done [
    i32 129, label %sw.epilog
    i32 130, label %sw.bb63
    i32 131, label %sw.bb64
    i32 135, label %sw.bb65
    i32 132, label %sw.bb66
    i32 1, label %sw.bb67
    i32 133, label %sw.bb68
    i32 134, label %sw.bb69
  ]

sw.bb63:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb64:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb65:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb66:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb67:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb68:                                          ; preds = %if.end60
  br label %sw.epilog

sw.bb69:                                          ; preds = %if.end60
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %if.end60
  %size.0 = phi i16 [ 1, %sw.bb69 ], [ 2, %sw.bb68 ], [ %18, %sw.bb67 ], [ %18, %sw.bb66 ], [ %18, %sw.bb65 ], [ %18, %sw.bb64 ], [ %18, %sw.bb63 ], [ %18, %if.end60 ]
  %reqflags.0 = phi i32 [ 0, %sw.bb69 ], [ 0, %sw.bb68 ], [ 1, %sw.bb67 ], [ 16, %sw.bb66 ], [ 32, %sw.bb65 ], [ 8, %sw.bb64 ], [ 4, %sw.bb63 ], [ 2, %if.end60 ]
  %conv70 = zext i16 %size.0 to i32
  %size71 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 3
  %20 = load i16, i16* %size71, align 4, !tbaa !385
  %conv72 = zext i16 %20 to i32
  %cmp73 = icmp ne i32 %conv70, %conv72
  br i1 %cmp73, label %done, label %if.end76

if.end76:                                         ; preds = %sw.epilog
  %tobool77 = icmp ne i32 %reqflags.0, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.end83

land.lhs.true78:                                  ; preds = %if.end76
  %info79 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.1, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info79, i32 0, i32 5
  %21 = load i32, i32* %flags, align 4, !tbaa !517
  %and80 = and i32 %21, %reqflags.0
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %if.end83, label %done

if.end83:                                         ; preds = %land.lhs.true78, %if.end76
  %conv84 = zext i16 %size.0 to i64
  %call85 = call i8* @kmalloc.260(i64 %conv84, i32 20971712)
  %cmp86 = icmp eq i8* %call85, null
  br i1 %cmp86, label %done, label %if.end89

if.end89:                                         ; preds = %if.end83
  %query90 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %22 = load i8, i8* %query90, align 2, !tbaa !544
  %conv91 = zext i8 %22 to i32
  %cmp92 = icmp eq i32 %conv91, 1
  br i1 %cmp92, label %land.lhs.true94, label %if.end100

land.lhs.true94:                                  ; preds = %if.end89
  %data95 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 4
  %23 = load i8*, i8** %data95, align 8, !tbaa !387
  %conv96 = zext i16 %size.0 to i64
  %call97 = call i64 @copy_from_user(i8* %call85, i8* %23, i64 %conv96)
  %tobool98 = icmp ne i64 %call97, 0
  br i1 %tobool98, label %done, label %if.end100

if.end100:                                        ; preds = %land.lhs.true94, %if.end89
  %dev101 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %24 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev101, align 8, !tbaa !136
  %query102 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %25 = load i8, i8* %query102, align 2, !tbaa !544
  %unit103 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %26 = load i8, i8* %unit103, align 8, !tbaa !541
  %dev104 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %27 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev104, align 8, !tbaa !136
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %27, i32 0, i32 4
  %28 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv105 = trunc i32 %28 to i8
  %selector106 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %29 = load i8, i8* %selector106, align 1, !tbaa !543
  %call107 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %24, i8 zeroext %25, i8 zeroext %26, i8 zeroext %conv105, i8 zeroext %29, i8* %call85, i16 zeroext %size.0)
  %cmp108 = icmp slt i32 %call107, 0
  br i1 %cmp108, label %done, label %if.end111

if.end111:                                        ; preds = %if.end100
  %query112 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %30 = load i8, i8* %query112, align 2, !tbaa !544
  %conv113 = zext i8 %30 to i32
  %cmp114 = icmp ne i32 %conv113, 1
  br i1 %cmp114, label %land.lhs.true116, label %done

land.lhs.true116:                                 ; preds = %if.end111
  %data117 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 4
  %31 = load i8*, i8** %data117, align 8, !tbaa !387
  %conv118 = zext i16 %size.0 to i64
  %call119 = call i64 @copy_to_user(i8* %31, i8* %call85, i64 %conv118)
  %tobool120 = icmp ne i64 %call119, 0
  %.call107 = select i1 %tobool120, i32 -14, i32 %call107
  br label %done

done:                                             ; preds = %land.lhs.true116, %if.end111, %if.end100, %land.lhs.true94, %if.end83, %land.lhs.true78, %sw.epilog, %if.end60, %if.end55
  %data.0 = phi i8* [ null, %if.end55 ], [ null, %if.end60 ], [ null, %sw.epilog ], [ null, %land.lhs.true78 ], [ %call85, %if.end83 ], [ %call85, %land.lhs.true94 ], [ %call85, %if.end100 ], [ %call85, %land.lhs.true116 ], [ %call85, %if.end111 ]
  %ret.1 = phi i32 [ -2, %if.end55 ], [ -22, %if.end60 ], [ -105, %sw.epilog ], [ -56, %land.lhs.true78 ], [ -12, %if.end83 ], [ -14, %land.lhs.true94 ], [ %call107, %if.end100 ], [ %call107, %if.end111 ], [ %.call107, %land.lhs.true116 ]
  call void @kfree(i8* %data.0)
  %ctrl_mutex123 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex123)
  br label %cleanup

cleanup:                                          ; preds = %done, %if.end51, %if.then44, %do.body41, %if.then22, %do.body
  %retval.0 = phi i32 [ %ret.1, %done ], [ -2, %if.then22 ], [ -2, %do.body ], [ -2, %if.then44 ], [ -2, %do.body41 ], [ -512, %if.end51 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl) #0 {
entry:
  %info = alloca %struct.uvc_control_info, align 8
  %0 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_ctrl_fill_xu_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end2

if.end2:                                          ; preds = %if.end
  %call3 = call i32 @uvc_ctrl_add_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %do.body, label %cleanup

do.body:                                          ; preds = %if.end2
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %1, 4
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.then7, label %cleanup

if.then7:                                         ; preds = %do.body
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %2 = load i8, i8* %selector, align 1, !tbaa !545
  %conv = zext i8 %2 to i32
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 1
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %entity9 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %4 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity9, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !120
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.8.264, i32 0, i32 0), i8* %arraydecay, i32 %conv, i8* %arraydecay8, i32 %conv10)
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %do.body, %if.end2, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %call, %if.end ], [ %call3, %do.body ], [ %call3, %if.then7 ], [ %call3, %if.end2 ]
  %6 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %6) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.260(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_from_user(i8* %to, i8* %from, i64 %n) #3 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %to, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  call void @__might_fault(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.261, i32 0, i32 0), i32 696)
  %conv1 = trunc i64 %n to i32
  call void @kasan_check_write(i8* %to, i32 %conv1)
  %cmp = icmp slt i32 %conv, 0
  %conv3 = sext i32 %conv to i64
  %cmp4 = icmp uge i64 %conv3, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp4
  %lnot = xor i1 %1, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @check_object_size.262(i8* %to, i64 %n, i1 zeroext false)
  %conv8 = trunc i64 %n to i32
  %call = call i64 @_copy_from_user(i8* %to, i8* %from, i32 %conv8)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @copy_user_overflow(i32 %conv, i64 %n)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.else ]
  ret i64 %n.addr.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_to_user(i8* %to, i8* %from, i64 %n) #3 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %from, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  %conv1 = trunc i64 %n to i32
  call void @kasan_check_read(i8* %from, i32 %conv1)
  call void @__might_fault(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.261, i32 0, i32 0), i32 718)
  %cmp = icmp slt i32 %conv, 0
  %conv3 = sext i32 %conv to i64
  %cmp4 = icmp uge i64 %conv3, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp4
  %lnot = xor i1 %1, true
  %lnot6 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot6 to i32
  %conv7 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv7, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  call void @check_object_size.262(i8* %from, i64 %n, i1 zeroext true)
  %conv8 = trunc i64 %n to i32
  %call = call i64 @_copy_to_user(i8* %to, i8* %from, i32 %conv8)
  br label %if.end

if.else:                                          ; preds = %entry
  call void @copy_user_overflow(i32 %conv, i64 %n)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.else ]
  ret i64 %n.addr.0
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1, i1) #7

; Function Attrs: alwaysinline nounwind uwtable
define internal void @check_object_size.262(i8* %ptr, i64 %n, i1 zeroext %to_user) #3 {
entry:
  %frombool = zext i1 %to_user to i8
  %tobool = trunc i8 %frombool to i1
  call void @__check_object_size(i8* %ptr, i64 %n, i1 zeroext %tobool)
  ret void
}

declare i64 @_copy_to_user(i8*, i8*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @copy_user_overflow(i32 %size, i64 %count) #1 {
entry:
  %tobool = icmp ne i32 1, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br i1 %tobool2, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13.261, i32 0, i32 0), i32 688, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.14.263, i32 0, i32 0), i32 %size, i64 %count)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tobool3 = icmp ne i32 1, 0
  %lnot4 = xor i1 %tobool3, true
  %lnot6 = xor i1 %lnot4, true
  %lnot.ext7 = zext i1 %lnot6 to i32
  %conv8 = sext i32 %lnot.ext7 to i64
  %expval9 = call i64 @llvm.expect.i64(i64 %conv8, i64 0)
  ret void
}

declare void @warn_slowpath_fmt(i8*, i32, i8*, ...) #2

declare i64 @_copy_from_user(i8*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_fill_xu_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  %call = call i8* @kmalloc.260(i64 2, i32 20971712)
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %entity1 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %0 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity1, align 8, !tbaa !520
  %1 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %0, i32 0, i32 11
  %extension = bitcast %union.anon.64* %1 to %struct.anon.70*
  %guidExtensionCode = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 0
  %arraydecay2 = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %call3 = call i8* @__memcpy(i8* %arraydecay, i8* %arraydecay2, i64 16)
  %index = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 2
  %2 = load i8, i8* %index, align 8, !tbaa !542
  %index4 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 2
  store i8 %2, i8* %index4, align 8, !tbaa !546
  %index5 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 2
  %3 = load i8, i8* %index5, align 8, !tbaa !542
  %conv = zext i8 %3 to i32
  %add = add nsw i32 %conv, 1
  %conv6 = trunc i32 %add to i8
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  store i8 %conv6, i8* %selector, align 1, !tbaa !545
  %entity7 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %4 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity7, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !120
  %intfnum = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 4
  %6 = load i32, i32* %intfnum, align 4, !tbaa !51
  %conv8 = trunc i32 %6 to i8
  %selector9 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %7 = load i8, i8* %selector9, align 1, !tbaa !545
  %call10 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext -123, i8 zeroext %5, i8 zeroext %conv8, i8 zeroext %7, i8* %call, i16 zeroext 2)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %do.body, label %if.end21

do.body:                                          ; preds = %if.end
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %8, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then14, label %done

if.then14:                                        ; preds = %do.body
  %entity15 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay16 = getelementptr inbounds [16 x i8], [16 x i8]* %entity15, i32 0, i32 0
  %selector17 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %9 = load i8, i8* %selector17, align 1, !tbaa !545
  %conv18 = zext i8 %9 to i32
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9.268, i32 0, i32 0), i8* %arraydecay16, i32 %conv18, i32 %call10)
  br label %done

if.end21:                                         ; preds = %if.end
  %10 = bitcast i8* %call to i16*
  %call22 = call zeroext i16 @__le16_to_cpup.269(i16* %10)
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  store i16 %call22, i16* %size, align 2, !tbaa !547
  %entity23 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %11 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity23, align 8, !tbaa !520
  %id24 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %11, i32 0, i32 3
  %12 = load i8, i8* %id24, align 4, !tbaa !120
  %intfnum25 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 4
  %13 = load i32, i32* %intfnum25, align 4, !tbaa !51
  %conv26 = trunc i32 %13 to i8
  %selector27 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %14 = load i8, i8* %selector27, align 1, !tbaa !545
  %call28 = call i32 @uvc_query_ctrl(%struct.uvc_device.871* %dev, i8 zeroext -122, i8 zeroext %12, i8 zeroext %conv26, i8 zeroext %14, i8* %call, i16 zeroext 1)
  %cmp29 = icmp slt i32 %call28, 0
  br i1 %cmp29, label %do.body32, label %if.end44

do.body32:                                        ; preds = %if.end21
  %15 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and33 = and i32 %15, 4
  %tobool34 = icmp ne i32 %and33, 0
  br i1 %tobool34, label %if.then35, label %done

if.then35:                                        ; preds = %do.body32
  %entity36 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay37 = getelementptr inbounds [16 x i8], [16 x i8]* %entity36, i32 0, i32 0
  %selector38 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %16 = load i8, i8* %selector38, align 1, !tbaa !545
  %conv39 = zext i8 %16 to i32
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.270, i32 0, i32 0), i8* %arraydecay37, i32 %conv39, i32 %call28)
  br label %done

if.end44:                                         ; preds = %if.end21
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %17 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv45 = zext i8 %17 to i32
  %and46 = and i32 %conv45, 1
  %tobool47 = icmp ne i32 %and46, 0
  %18 = zext i1 %tobool47 to i64
  %cond = select i1 %tobool47, i32 2, i32 0
  %or = or i32 60, %cond
  %arrayidx48 = getelementptr inbounds i8, i8* %call, i64 0
  %19 = load i8, i8* %arrayidx48, align 1, !tbaa !104
  %conv49 = zext i8 %19 to i32
  %and50 = and i32 %conv49, 2
  %tobool51 = icmp ne i32 %and50, 0
  %20 = zext i1 %tobool51 to i64
  %cond52 = select i1 %tobool51, i32 1, i32 0
  %or53 = or i32 %or, %cond52
  %arrayidx54 = getelementptr inbounds i8, i8* %call, i64 0
  %21 = load i8, i8* %arrayidx54, align 1, !tbaa !104
  %conv55 = zext i8 %21 to i32
  %and56 = and i32 %conv55, 8
  %tobool57 = icmp ne i32 %and56, 0
  %22 = zext i1 %tobool57 to i64
  %cond58 = select i1 %tobool57, i32 128, i32 0
  %or59 = or i32 %or53, %cond58
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  store i32 %or59, i32* %flags, align 4, !tbaa !548
  call void @uvc_ctrl_fixup_xu_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info)
  %23 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and61 = and i32 %23, 4
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then63, label %done

if.then63:                                        ; preds = %if.end44
  %entity64 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay65 = getelementptr inbounds [16 x i8], [16 x i8]* %entity64, i32 0, i32 0
  %selector66 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %24 = load i8, i8* %selector66, align 1, !tbaa !545
  %conv67 = zext i8 %24 to i32
  %size68 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %25 = load i16, i16* %size68, align 2, !tbaa !547
  %conv69 = zext i16 %25 to i32
  %flags70 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %26 = load i32, i32* %flags70, align 4, !tbaa !548
  %and71 = and i32 %26, 2
  %tobool72 = icmp ne i32 %and71, 0
  %27 = zext i1 %tobool72 to i64
  %cond73 = select i1 %tobool72, i32 1, i32 0
  %flags74 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %28 = load i32, i32* %flags74, align 4, !tbaa !548
  %and75 = and i32 %28, 1
  %tobool76 = icmp ne i32 %and75, 0
  %29 = zext i1 %tobool76 to i64
  %cond77 = select i1 %tobool76, i32 1, i32 0
  %flags78 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %30 = load i32, i32* %flags78, align 4, !tbaa !548
  %and79 = and i32 %30, 128
  %tobool80 = icmp ne i32 %and79, 0
  %31 = zext i1 %tobool80 to i64
  %cond81 = select i1 %tobool80, i32 1, i32 0
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.11.271, i32 0, i32 0), i8* %arraydecay65, i32 %conv67, i32 %conv69, i32 %cond73, i32 %cond77, i32 %cond81)
  br label %done

done:                                             ; preds = %if.then63, %if.end44, %if.then35, %do.body32, %if.then14, %do.body
  %ret.0 = phi i32 [ %call10, %if.then14 ], [ %call10, %do.body ], [ %call28, %if.then35 ], [ %call28, %do.body32 ], [ %call28, %if.then63 ], [ %call28, %if.end44 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_add_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  %info1 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %0 = bitcast %struct.uvc_control_info* %info1 to i8*
  %1 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 40, i32 8, i1 false), !tbaa.struct !549
  %info2 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info2, i32 0, i32 0
  call void @INIT_LIST_HEAD.265(%struct.list_head* %mappings)
  %info3 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 4
  %2 = load i16, i16* %size, align 2, !tbaa !522
  %conv = zext i16 %2 to i32
  %mul = mul nsw i32 %conv, 6
  %add = add nsw i32 %mul, 1
  %conv4 = sext i32 %add to i64
  %call = call i8* @kzalloc.266(i64 %conv4, i32 20971712)
  %uvc_data = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 4
  store i8* %call, i8** %uvc_data, align 8, !tbaa !533
  %uvc_data5 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 4
  %3 = load i8*, i8** %uvc_data5, align 8, !tbaa !533
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %done, label %if.end

if.end:                                           ; preds = %entry
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.clear = and i8 %bf.load, -17
  %bf.set = or i8 %bf.clear, 16
  store i8 %bf.set, i8* %initialized, align 1
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %4, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then7, label %done

if.then7:                                         ; preds = %if.end
  %info8 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info8, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %info9 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info9, i32 0, i32 3
  %5 = load i8, i8* %selector, align 1, !tbaa !521
  %conv10 = zext i8 %5 to i32
  %udev = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 0
  %6 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 1
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %entity12 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %7 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity12, align 8, !tbaa !520
  %id = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %7, i32 0, i32 3
  %8 = load i8, i8* %id, align 4, !tbaa !120
  %conv13 = zext i8 %8 to i32
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.12.267, i32 0, i32 0), i8* %arraydecay, i32 %conv10, i8* %arraydecay11, i32 %conv13)
  br label %done

done:                                             ; preds = %if.then7, %if.end, %entry
  %ret.0 = phi i32 [ -12, %entry ], [ 0, %if.then7 ], [ 0, %if.end ]
  %cmp16 = icmp slt i32 %ret.0, 0
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %done
  %uvc_data19 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 4
  %9 = load i8*, i8** %uvc_data19, align 8, !tbaa !533
  call void @kfree(i8* %9)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %done
  ret i32 %ret.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD.265(%struct.list_head* %list) #1 {
entry:
  %__u = alloca %union.anon.85, align 8
  %0 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %__val = bitcast %union.anon.85* %__u to %struct.list_head**
  store %struct.list_head* %list, %struct.list_head** %__val, align 8, !tbaa !104
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  %1 = bitcast %struct.list_head** %next to i8*
  %__c = bitcast %union.anon.85* %__u to [1 x i8]*
  %arraydecay = getelementptr inbounds [1 x i8], [1 x i8]* %__c, i32 0, i32 0
  call void @__write_once_size.236(i8* %1, i8* %arraydecay, i32 8)
  %__val1 = bitcast %union.anon.85* %__u to %struct.list_head**
  %2 = load %struct.list_head*, %struct.list_head** %__val1, align 8, !tbaa !104
  %3 = bitcast %union.anon.85* %__u to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !105
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.266(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.260(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: alwaysinline nounwind uwtable
define internal zeroext i16 @__le16_to_cpup.269(i16* %p) #3 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !142
  ret i16 %0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_fixup_xu_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %conv = zext i32 %i.0 to i64
  %cmp = icmp ult i64 %conv, 3
  br i1 %cmp, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %intf = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom
  %id = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx, i32 0, i32 0
  %call = call i32 @usb_match_one_id(%struct.usb_interface* %0, %struct.usb_device_id* %id)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %idxprom2 = zext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom2
  %entity = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx3, i32 0, i32 1
  %1 = load i8, i8* %entity, align 8, !tbaa !550
  %conv4 = zext i8 %1 to i32
  %entity5 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity5, align 8, !tbaa !520
  %id6 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 3
  %3 = load i8, i8* %id6, align 4, !tbaa !120
  %conv7 = zext i8 %3 to i32
  %cmp8 = icmp eq i32 %conv4, %conv7
  br i1 %cmp8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %if.end
  %idxprom10 = zext i32 %i.0 to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom10
  %selector = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx11, i32 0, i32 2
  %4 = load i8, i8* %selector, align 1, !tbaa !552
  %conv12 = zext i8 %4 to i32
  %selector13 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %5 = load i8, i8* %selector13, align 1, !tbaa !545
  %conv14 = zext i8 %5 to i32
  %cmp15 = icmp eq i32 %conv12, %conv14
  br i1 %cmp15, label %if.then17, label %for.inc

if.then17:                                        ; preds = %land.lhs.true
  %idxprom18 = zext i32 %i.0 to i64
  %arrayidx19 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom18
  %flags = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx19, i32 0, i32 3
  %6 = load i8, i8* %flags, align 2, !tbaa !553
  %conv20 = zext i8 %6 to i32
  %flags21 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  store i32 %conv20, i32* %flags21, align 4, !tbaa !548
  br label %cleanup.cont

for.inc:                                          ; preds = %land.lhs.true, %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %if.then17, %for.cond
  ret void
}

declare i32 @usb_match_one_id(%struct.usb_interface*, %struct.usb_device_id*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_restore_values(%struct.uvc_device.871* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %list25.sink = phi %struct.list_head* [ %list25, %for.inc23 ], [ %entities, %entry ]
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %list25.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next26, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr28 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr28 to %struct.uvc_entity.872*
  %list = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 14
  %3 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp3 = icmp ult i32 %i.0, %3
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  %4 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %4, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body4
  %modified = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load5 = load i8, i8* %modified, align 1
  %bf.lshr6 = lshr i8 %bf.load5, 2
  %bf.clear7 = and i8 %bf.lshr6, 1
  %tobool8 = icmp ne i8 %bf.clear7, 0
  br i1 %tobool8, label %lor.lhs.false9, label %for.inc

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %5 = load i32, i32* %flags, align 4, !tbaa !517
  %and = and i32 %5, 64
  %cmp10 = icmp eq i32 %and, 0
  br i1 %cmp10, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false9
  %info11 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %entity12 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info11, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity12, i32 0, i32 0
  %info13 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %index = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info13, i32 0, i32 2
  %6 = load i8, i8* %index, align 8, !tbaa !554
  %conv = zext i8 %6 to i32
  %info14 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info14, i32 0, i32 3
  %7 = load i8, i8* %selector, align 1, !tbaa !521
  %conv15 = zext i8 %7 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.274, i32 0, i32 0), i8* %arraydecay, i32 %conv, i32 %conv15)
  %dirty = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load16 = load i8, i8* %dirty, align 1
  %bf.clear17 = and i8 %bf.load16, -2
  %bf.set = or i8 %bf.clear17, 1
  store i8 %bf.set, i8* %dirty, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %lor.lhs.false9, %lor.lhs.false, %for.body4
  %inc = add i32 %i.0, 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  %call18 = call i32 @uvc_ctrl_commit_entity(%struct.uvc_device.871* %dev, %struct.uvc_entity.872* %2, i32 0)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %cleanup, label %for.inc23

for.inc23:                                        ; preds = %for.end
  %list25 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.end, %for.cond
  %retval.0 = phi i32 [ %call18, %for.end ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_add_mapping(%struct.uvc_video_chain.869* %chain, %struct.uvc_control_mapping* %mapping) #0 {
entry:
  %dev1 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 0
  %0 = load %struct.uvc_device.871*, %struct.uvc_device.871** %dev1, align 8, !tbaa !136
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %1 = load i32, i32* %id, align 8, !tbaa !300
  %and = and i32 %1, -268435456
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %do.body, label %if.end6

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and2 = and i32 %2, 4
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %cleanup107

if.then4:                                         ; preds = %do.body
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %id5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %3 = load i32, i32* %id5, align 8, !tbaa !300
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3.277, i32 0, i32 0), i8* %arraydecay, i32 %3)
  br label %cleanup107

if.end6:                                          ; preds = %entry
  %entities = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc31, %if.end6
  %chain33.sink = phi %struct.list_head* [ %chain33, %for.inc31 ], [ %entities, %if.end6 ]
  %found.0 = phi i32 [ 0, %if.end6 ], [ %found.2, %for.inc31 ]
  %ctrl.0 = phi %struct.uvc_control.903* [ undef, %if.end6 ], [ %ctrl.3, %for.inc31 ]
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain33.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next34, align 8, !tbaa !74
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr36 = getelementptr inbounds i8, i8* %5, i64 -16
  %6 = bitcast i8* %add.ptr36 to %struct.uvc_entity.872*
  %chain7 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 1
  %entities8 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain7, %entities8
  br i1 %cmp, label %for.body, label %for.end37

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 4
  %7 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %7 to i32
  %and9 = and i32 %conv, 32767
  %cmp10 = icmp ne i32 %and9, 6
  br i1 %cmp10, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %entity12 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 4
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %entity12, i32 0, i32 0
  %call14 = call i32 @uvc_entity_match_guid(%struct.uvc_entity.872* %6, i8* %arraydecay13)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end17, label %cleanup

if.end17:                                         ; preds = %lor.lhs.false
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc, %if.end17
  %ctrl.1 = phi %struct.uvc_control.903* [ %ctrl.0, %if.end17 ], [ %arrayidx, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end17 ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 14
  %8 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp19 = icmp ult i32 %i.0, %8
  br i1 %cmp19, label %for.body21, label %for.end

for.body21:                                       ; preds = %for.cond18
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 15
  %9 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %9, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 2
  %10 = load i8, i8* %index, align 8, !tbaa !542
  %conv22 = zext i8 %10 to i32
  %selector = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 5
  %11 = load i8, i8* %selector, align 4, !tbaa !303
  %conv23 = zext i8 %11 to i32
  %sub = sub nsw i32 %conv23, 1
  %cmp24 = icmp eq i32 %conv22, %sub
  br i1 %cmp24, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body21
  %inc = add i32 %i.0, 1
  br label %for.cond18

for.end:                                          ; preds = %for.body21, %for.cond18
  %found.1 = phi i32 [ 1, %for.body21 ], [ %found.0, %for.cond18 ]
  %ctrl.2 = phi %struct.uvc_control.903* [ %arrayidx, %for.body21 ], [ %ctrl.1, %for.cond18 ]
  %tobool28 = icmp ne i32 %found.1, 0
  %. = select i1 %tobool28, i32 4, i32 0
  br label %cleanup

cleanup:                                          ; preds = %for.end, %lor.lhs.false, %for.body
  %found.2 = phi i32 [ %found.0, %lor.lhs.false ], [ %found.0, %for.body ], [ %found.1, %for.end ]
  %ctrl.3 = phi %struct.uvc_control.903* [ %ctrl.0, %lor.lhs.false ], [ %ctrl.0, %for.body ], [ %ctrl.2, %for.end ]
  %cleanup.dest.slot.0 = phi i32 [ 6, %lor.lhs.false ], [ 6, %for.body ], [ %., %for.end ]
  %cleanup.dest.slot.0.off = add i32 %cleanup.dest.slot.0, -4
  %switch = icmp ult i32 %cleanup.dest.slot.0.off, 1
  br i1 %switch, label %for.end37, label %for.inc31

for.inc31:                                        ; preds = %cleanup
  %chain33 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %6, i32 0, i32 1
  br label %for.cond

for.end37:                                        ; preds = %cleanup, %for.cond
  %found.3 = phi i32 [ %found.2, %cleanup ], [ %found.0, %for.cond ]
  %ctrl.4 = phi %struct.uvc_control.903* [ %ctrl.3, %cleanup ], [ %ctrl.0, %for.cond ]
  %tobool38 = icmp ne i32 %found.3, 0
  br i1 %tobool38, label %if.end40, label %cleanup107

if.end40:                                         ; preds = %for.end37
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  %call41 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %cleanup107, label %if.end44

if.end44:                                         ; preds = %if.end40
  %call45 = call i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device.871* %0, %struct.uvc_control.903* %ctrl.4)
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %done, label %if.end49

if.end49:                                         ; preds = %if.end44
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.4, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc77, %if.end49
  %list79.sink = phi %struct.list_head* [ %list79, %for.inc77 ], [ %mappings, %if.end49 ]
  %next80 = getelementptr inbounds %struct.list_head, %struct.list_head* %list79.sink, i32 0, i32 0
  %12 = load %struct.list_head*, %struct.list_head** %next80, align 8, !tbaa !74
  %13 = bitcast %struct.list_head* %12 to i8*
  %add.ptr82 = getelementptr inbounds i8, i8* %13, i64 0
  %14 = bitcast i8* %add.ptr82 to %struct.uvc_control_mapping*
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 0
  %info55 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.4, i32 0, i32 1
  %mappings56 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info55, i32 0, i32 0
  %cmp57 = icmp ne %struct.list_head* %list, %mappings56
  br i1 %cmp57, label %for.body59, label %for.end83

for.body59:                                       ; preds = %for.cond54
  %id60 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %15 = load i32, i32* %id60, align 8, !tbaa !300
  %id61 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 2
  %16 = load i32, i32* %id61, align 8, !tbaa !300
  %cmp62 = icmp eq i32 %15, %16
  br i1 %cmp62, label %do.body65, label %for.inc77

do.body65:                                        ; preds = %for.body59
  %17 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and66 = and i32 %17, 4
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %done

if.then68:                                        ; preds = %do.body65
  %name69 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay70 = getelementptr inbounds [32 x i8], [32 x i8]* %name69, i32 0, i32 0
  %id71 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %18 = load i32, i32* %id71, align 8, !tbaa !300
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4.278, i32 0, i32 0), i8* %arraydecay70, i32 %18)
  br label %done

for.inc77:                                        ; preds = %for.body59
  %list79 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 0
  br label %for.cond54

for.end83:                                        ; preds = %for.cond54
  %nmappings = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 8
  %call84 = call i32 @atomic_add_return.279(i32 1, %struct.atomic_t* %nmappings)
  %cmp85 = icmp sgt i32 %call84, 1024
  br i1 %cmp85, label %if.then87, label %if.end99

if.then87:                                        ; preds = %for.end83
  %nmappings88 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 8
  call void @atomic_dec.280(%struct.atomic_t* %nmappings88)
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and90 = and i32 %19, 4
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then92, label %done

if.then92:                                        ; preds = %if.then87
  %name93 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay94 = getelementptr inbounds [32 x i8], [32 x i8]* %name93, i32 0, i32 0
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.5.281, i32 0, i32 0), i8* %arraydecay94, i32 1024)
  br label %done

if.end99:                                         ; preds = %for.end83
  %call100 = call i32 @__uvc_ctrl_add_mapping(%struct.uvc_device.871* %0, %struct.uvc_control.903* %ctrl.4, %struct.uvc_control_mapping* %mapping)
  %cmp101 = icmp slt i32 %call100, 0
  br i1 %cmp101, label %if.then103, label %done

if.then103:                                       ; preds = %if.end99
  %nmappings104 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %0, i32 0, i32 8
  call void @atomic_dec.280(%struct.atomic_t* %nmappings104)
  br label %done

done:                                             ; preds = %if.then103, %if.end99, %if.then92, %if.then87, %if.then68, %do.body65, %if.end44
  %ret.0 = phi i32 [ -2, %if.end44 ], [ -17, %if.then68 ], [ -17, %do.body65 ], [ -12, %if.then92 ], [ -12, %if.then87 ], [ %call100, %if.then103 ], [ %call100, %if.end99 ]
  %ctrl_mutex106 = getelementptr inbounds %struct.uvc_video_chain.869, %struct.uvc_video_chain.869* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex106)
  br label %cleanup107

cleanup107:                                       ; preds = %done, %if.end40, %for.end37, %if.then4, %do.body
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %if.then4 ], [ -22, %do.body ], [ -2, %for.end37 ], [ -512, %if.end40 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_entity_match_guid(%struct.uvc_entity.872* %entity, i8* %guid) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  switch i32 %and, label %return [
    i32 513, label %sw.bb
    i32 514, label %return.sink.split
    i32 5, label %sw.bb6
    i32 6, label %sw.bb10
  ]

sw.bb:                                            ; preds = %entry
  br label %return.sink.split

sw.bb6:                                           ; preds = %entry
  br label %return.sink.split

sw.bb10:                                          ; preds = %entry
  %1 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 11
  %extension = bitcast %union.anon.64* %1 to %struct.anon.70*
  %guidExtensionCode = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  br label %return.sink.split

return.sink.split:                                ; preds = %sw.bb10, %sw.bb6, %sw.bb, %entry
  %arraydecay.sink = phi i8* [ %arraydecay, %sw.bb10 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_processing_guid, i32 0, i32 0), %sw.bb6 ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_camera_guid, i32 0, i32 0), %sw.bb ], [ getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_media_transport_input_guid, i32 0, i32 0), %entry ]
  %call11 = call i32 @memcmp(i8* %arraydecay.sink, i8* %guid, i64 16)
  %cmp12 = icmp eq i32 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  br label %return

return:                                           ; preds = %return.sink.split, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %conv13, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @atomic_add_return.279(i32 %i, %struct.atomic_t* %v) #3 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32 %i, i32* %counter) #8, !srcloc !555
  %add = add nsw i32 %i, %0
  ret i32 %add
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @atomic_dec.280(%struct.atomic_t* %v) #3 {
entry:
  %counter = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !556
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_ctrl_add_mapping(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping) #0 {
entry:
  %0 = bitcast %struct.uvc_control_mapping* %mapping to i8*
  %call = call i8* @kmemdup(i8* %0, i64 144, i32 20971712)
  %1 = bitcast i8* %call to %struct.uvc_control_mapping*
  %cmp = icmp eq %struct.uvc_control_mapping* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 1
  call void @INIT_LIST_HEAD.265(%struct.list_head* %ev_subs)
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %2 = load i32, i32* %menu_count, align 8, !tbaa !315
  %conv = zext i32 %2 to i64
  %mul = mul i64 36, %conv
  %conv1 = trunc i64 %mul to i32
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %3 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !314
  %4 = bitcast %struct.uvc_menu_info* %3 to i8*
  %conv2 = zext i32 %conv1 to i64
  %call3 = call i8* @kmemdup(i8* %4, i64 %conv2, i32 20971712)
  %5 = bitcast i8* %call3 to %struct.uvc_menu_info*
  %menu_info4 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 10
  store %struct.uvc_menu_info* %5, %struct.uvc_menu_info** %menu_info4, align 8, !tbaa !314
  %menu_info5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 10
  %6 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info5, align 8, !tbaa !314
  %cmp6 = icmp eq %struct.uvc_menu_info* %6, null
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %7 = bitcast %struct.uvc_control_mapping* %1 to i8*
  call void @kfree(i8* %7)
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 15
  %8 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !523
  %cmp10 = icmp eq i32 (%struct.uvc_control_mapping*, i8, i8*)* %8, null
  br i1 %cmp10, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end9
  %get13 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 15
  store i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_get_le_value, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get13, align 8, !tbaa !523
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end9
  %set = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 16
  %9 = load void (%struct.uvc_control_mapping*, i32, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)** %set, align 8, !tbaa !540
  %cmp15 = icmp eq void (%struct.uvc_control_mapping*, i32, i8*)* %9, null
  br i1 %cmp15, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end14
  %set18 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 16
  store void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_set_le_value, void (%struct.uvc_control_mapping*, i32, i8*)** %set18, align 8, !tbaa !540
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end14
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 0
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  call void @list_add_tail.237(%struct.list_head* %list, %struct.list_head* %mappings)
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %10, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then20, label %cleanup

if.then20:                                        ; preds = %if.end19
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %info21 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info21, i32 0, i32 1
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %info23 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info23, i32 0, i32 3
  %11 = load i8, i8* %selector, align 1, !tbaa !521
  %conv24 = zext i8 %11 to i32
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15.282, i32 0, i32 0), i8* %arraydecay, i8* %arraydecay22, i32 %conv24)
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %if.end19, %if.then8, %entry
  %retval.0 = phi i32 [ -12, %if.then8 ], [ -12, %entry ], [ 0, %if.then20 ], [ 0, %if.end19 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_get_le_value(%struct.uvc_control_mapping* %mapping, i8 zeroext %query, i8* %data) #0 {
entry:
  %size = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %0 = load i8, i8* %size, align 1, !tbaa !305
  %conv = zext i8 %0 to i32
  %offset1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %1 = load i8, i8* %offset1, align 2, !tbaa !307
  %conv2 = zext i8 %1 to i32
  %div = sdiv i32 %conv2, 8
  %idx.ext = sext i32 %div to i64
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %idx.ext
  %and = and i32 %conv2, 7
  %sh_prom = zext i32 %conv to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub nsw i64 %shl, 1
  %sh_prom3 = zext i32 %and to i64
  %shl4 = shl i64 %sub, %sh_prom3
  %conv5 = trunc i64 %shl4 to i8
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %offset.0 = phi i32 [ %and, %entry ], [ %sub25, %for.body ]
  %bits.0 = phi i32 [ %conv, %entry ], [ %sub24, %for.body ]
  %data.addr.0 = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %value.0 = phi i32 [ 0, %entry ], [ %or, %for.body ]
  %mask.0 = phi i8 [ %conv5, %entry ], [ %conv28, %for.body ]
  %cmp = icmp sgt i32 %bits.0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* %data.addr.0, align 1, !tbaa !104
  %conv7 = zext i8 %2 to i32
  %conv8 = zext i8 %mask.0 to i32
  %and9 = and i32 %conv7, %conv8
  %conv10 = trunc i32 %and9 to i8
  %cmp11 = icmp sgt i32 %offset.0, 0
  %conv13 = zext i8 %conv10 to i32
  %shr = ashr i32 %conv13, %offset.0
  %sub15 = sub nsw i32 0, %offset.0
  %shl16 = shl i32 %conv13, %sub15
  %cond = select i1 %cmp11, i32 %shr, i32 %shl16
  %or = or i32 %value.0, %cond
  %cmp17 = icmp sgt i32 %offset.0, 0
  %offset.0. = select i1 %cmp17, i32 %offset.0, i32 0
  %sub23 = sub nsw i32 8, %offset.0.
  %sub24 = sub nsw i32 %bits.0, %sub23
  %sub25 = sub nsw i32 %offset.0, 8
  %shl26 = shl i32 1, %sub24
  %sub27 = sub nsw i32 %shl26, 1
  %conv28 = trunc i32 %sub27 to i8
  %incdec.ptr = getelementptr inbounds i8, i8* %data.addr.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 9
  %3 = load i32, i32* %data_type, align 4, !tbaa !311
  %cmp29 = icmp eq i32 %3, 1
  br i1 %cmp29, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %size31 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %4 = load i8, i8* %size31, align 1, !tbaa !305
  %conv32 = zext i8 %4 to i32
  %sub33 = sub nsw i32 %conv32, 1
  %shl34 = shl i32 1, %sub33
  %and35 = and i32 %value.0, %shl34
  %sub36 = sub nsw i32 0, %and35
  %or37 = or i32 %value.0, %sub36
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %value.1 = phi i32 [ %or37, %if.then ], [ %value.0, %for.end ]
  ret i32 %value.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_set_le_value(%struct.uvc_control_mapping* %mapping, i32 %value, i8* %data) #0 {
entry:
  %size = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %0 = load i8, i8* %size, align 1, !tbaa !305
  %conv = zext i8 %0 to i32
  %offset1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %1 = load i8, i8* %offset1, align 2, !tbaa !307
  %conv2 = zext i8 %1 to i32
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %2 = load i32, i32* %v4l2_type, align 8, !tbaa !309
  %cmp = icmp eq i32 %2, 4
  %.value = select i1 %cmp, i32 -1, i32 %value
  %div = sdiv i32 %conv2, 8
  %idx.ext = sext i32 %div to i64
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %idx.ext
  %and = and i32 %conv2, 7
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %bits.0 = phi i32 [ %conv, %entry ], [ %sub17, %for.body ]
  %data.addr.0 = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %value.addr.1 = phi i32 [ %.value, %entry ], [ %shr, %for.body ]
  %offset.0 = phi i32 [ %and, %entry ], [ 0, %for.body ]
  %cmp4 = icmp sgt i32 %bits.0, 0
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %sh_prom = zext i32 %bits.0 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub nsw i64 %shl, 1
  %sh_prom6 = zext i32 %offset.0 to i64
  %shl7 = shl i64 %sub, %sh_prom6
  %conv8 = trunc i64 %shl7 to i8
  %3 = load i8, i8* %data.addr.0, align 1, !tbaa !104
  %conv9 = zext i8 %3 to i32
  %conv10 = zext i8 %conv8 to i32
  %neg = xor i32 %conv10, -1
  %and11 = and i32 %conv9, %neg
  %shl12 = shl i32 %value.addr.1, %offset.0
  %conv13 = zext i8 %conv8 to i32
  %and14 = and i32 %shl12, %conv13
  %or = or i32 %and11, %and14
  %conv15 = trunc i32 %or to i8
  store i8 %conv15, i8* %data.addr.0, align 1, !tbaa !104
  %tobool = icmp ne i32 %offset.0, 0
  %offset.0. = select i1 %tobool, i32 %offset.0, i32 8
  %shr = ashr i32 %value.addr.1, %offset.0.
  %sub16 = sub nsw i32 8, %offset.0
  %sub17 = sub nsw i32 %bits.0, %sub16
  %incdec.ptr = getelementptr inbounds i8, i8* %data.addr.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_init_device(%struct.uvc_device.871* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc60, %entry
  %list62.sink = phi %struct.list_head* [ %list62, %for.inc60 ], [ %entities, %entry ]
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.1, %for.inc60 ]
  %next63 = getelementptr inbounds %struct.list_head, %struct.list_head* %list62.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next63, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr65 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr65 to %struct.uvc_entity.872*
  %list = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup67

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp2 = icmp eq i32 %and, 6
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %4 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %extension = bitcast %union.anon.64* %4 to %struct.anon.70*
  %bmControls4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension, i32 0, i32 3
  %5 = load i8*, i8** %bmControls4, align 8, !tbaa !104
  %6 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %extension5 = bitcast %union.anon.64* %6 to %struct.anon.70*
  %bControlSize6 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %extension5, i32 0, i32 2
  %7 = load i8, i8* %bControlSize6, align 1, !tbaa !104
  %conv7 = zext i8 %7 to i32
  br label %if.end30

if.else:                                          ; preds = %for.body
  %type8 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 4
  %8 = load i16, i16* %type8, align 2, !tbaa !114
  %conv9 = zext i16 %8 to i32
  %and10 = and i32 %conv9, 32767
  %cmp11 = icmp eq i32 %and10, 5
  br i1 %cmp11, label %if.then13, label %if.else18

if.then13:                                        ; preds = %if.else
  %9 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %processing = bitcast %union.anon.64* %9 to %struct.anon.68*
  %bmControls14 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing, i32 0, i32 2
  %10 = load i8*, i8** %bmControls14, align 8, !tbaa !104
  %11 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %processing15 = bitcast %union.anon.64* %11 to %struct.anon.68*
  %bControlSize16 = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing15, i32 0, i32 1
  %12 = load i8, i8* %bControlSize16, align 2, !tbaa !104
  %conv17 = zext i8 %12 to i32
  br label %if.end30

if.else18:                                        ; preds = %if.else
  %type19 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 4
  %13 = load i16, i16* %type19, align 2, !tbaa !114
  %conv20 = zext i16 %13 to i32
  %and21 = and i32 %conv20, 32767
  %cmp22 = icmp eq i32 %and21, 513
  br i1 %cmp22, label %if.then24, label %if.end30

if.then24:                                        ; preds = %if.else18
  %14 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %camera = bitcast %union.anon.64* %14 to %struct.anon.65*
  %bmControls25 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera, i32 0, i32 4
  %15 = load i8*, i8** %bmControls25, align 8, !tbaa !104
  %16 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 11
  %camera26 = bitcast %union.anon.64* %16 to %struct.anon.65*
  %bControlSize27 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera26, i32 0, i32 3
  %17 = load i8, i8* %bControlSize27, align 2, !tbaa !104
  %conv28 = zext i8 %17 to i32
  br label %if.end30

if.end30:                                         ; preds = %if.then24, %if.else18, %if.then13, %if.then
  %bControlSize.2 = phi i32 [ %conv7, %if.then ], [ %conv17, %if.then13 ], [ %conv28, %if.then24 ], [ 0, %if.else18 ]
  %bmControls.2 = phi i8* [ %5, %if.then ], [ %10, %if.then13 ], [ %15, %if.then24 ], [ null, %if.else18 ]
  call void @uvc_ctrl_prune_entity(%struct.uvc_device.871* %dev, %struct.uvc_entity.872* %2)
  %conv31 = zext i32 %bControlSize.2 to i64
  %call = call i64 @memweight(i8* %bmControls.2, i64 %conv31)
  %conv32 = trunc i64 %call to i32
  %cmp33 = icmp eq i32 %conv32, 0
  br i1 %cmp33, label %cleanup, label %if.end36

if.end36:                                         ; preds = %if.end30
  %conv37 = zext i32 %conv32 to i64
  %call38 = call i8* @kcalloc(i64 %conv37, i64 64, i32 20971712)
  %18 = bitcast i8* %call38 to %struct.uvc_control.903*
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  store %struct.uvc_control.903* %18, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  %controls39 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  %19 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls39, align 8, !tbaa !532
  %cmp40 = icmp eq %struct.uvc_control.903* %19, null
  br i1 %cmp40, label %cleanup, label %if.end43

if.end43:                                         ; preds = %if.end36
  %ncontrols44 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 14
  store i32 %conv32, i32* %ncontrols44, align 8, !tbaa !531
  %controls45 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  %20 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls45, align 8, !tbaa !532
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc, %if.end43
  %ctrl.0 = phi %struct.uvc_control.903* [ %20, %if.end43 ], [ %ctrl.1, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end43 ], [ %inc, %for.inc ]
  %mul = mul i32 %bControlSize.2, 8
  %cmp47 = icmp ult i32 %i.0, %mul
  br i1 %cmp47, label %for.body49, label %cleanup

for.body49:                                       ; preds = %for.cond46
  %call50 = call i32 @uvc_test_bit(i8* %bmControls.2, i32 %i.0)
  %cmp51 = icmp eq i32 %call50, 0
  br i1 %cmp51, label %for.inc, label %if.end54

if.end54:                                         ; preds = %for.body49
  %entity55 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.0, i32 0, i32 0
  store %struct.uvc_entity.872* %2, %struct.uvc_entity.872** %entity55, align 8, !tbaa !520
  %conv56 = trunc i32 %i.0 to i8
  %index = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.0, i32 0, i32 2
  store i8 %conv56, i8* %index, align 8, !tbaa !542
  call void @uvc_ctrl_init_ctrl(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl.0)
  %incdec.ptr = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl.0, i32 1
  br label %for.inc

for.inc:                                          ; preds = %if.end54, %for.body49
  %ctrl.1 = phi %struct.uvc_control.903* [ %incdec.ptr, %if.end54 ], [ %ctrl.0, %for.body49 ]
  %inc = add i32 %i.0, 1
  br label %for.cond46

cleanup:                                          ; preds = %for.cond46, %if.end36, %if.end30
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.end30 ], [ 1, %if.end36 ], [ 0, %for.cond46 ]
  %retval.1 = phi i32 [ %retval.0, %if.end30 ], [ -12, %if.end36 ], [ %retval.0, %for.cond46 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup67 [
    i32 0, label %for.inc60
    i32 4, label %for.inc60
  ]

for.inc60:                                        ; preds = %cleanup, %cleanup
  %list62 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  br label %for.cond

cleanup67:                                        ; preds = %cleanup, %for.cond
  %retval.2 = phi i32 [ 0, %for.cond ], [ %retval.1, %cleanup ]
  ret i32 %retval.2
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_prune_entity(%struct.uvc_device.871* %dev, %struct.uvc_entity.872* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  switch i32 %and, label %cleanup.cont [
    i32 5, label %sw.bb
    i32 513, label %sw.bb3
  ]

sw.bb:                                            ; preds = %entry
  %1 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 11
  %processing = bitcast %union.anon.64* %1 to %struct.anon.68*
  %bmControls = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing, i32 0, i32 2
  %2 = load i8*, i8** %bmControls, align 8, !tbaa !104
  %3 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 11
  %processing1 = bitcast %union.anon.64* %3 to %struct.anon.68*
  %bControlSize = getelementptr inbounds %struct.anon.68, %struct.anon.68* %processing1, i32 0, i32 1
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %4 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 11
  %camera = bitcast %union.anon.64* %4 to %struct.anon.65*
  %bmControls4 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera, i32 0, i32 4
  %5 = load i8*, i8** %bmControls4, align 8, !tbaa !104
  %6 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 11
  %camera5 = bitcast %union.anon.64* %6 to %struct.anon.65*
  %bControlSize6 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %camera5, i32 0, i32 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb
  %bControlSize6.sink = phi i8* [ %bControlSize6, %sw.bb3 ], [ %bControlSize, %sw.bb ]
  %count.0 = phi i32 [ 1, %sw.bb3 ], [ 3, %sw.bb ]
  %blacklist.0 = phi %struct.uvc_ctrl_blacklist* [ getelementptr inbounds ([1 x %struct.uvc_ctrl_blacklist], [1 x %struct.uvc_ctrl_blacklist]* @uvc_ctrl_prune_entity.camera_blacklist, i32 0, i32 0), %sw.bb3 ], [ getelementptr inbounds ([3 x %struct.uvc_ctrl_blacklist], [3 x %struct.uvc_ctrl_blacklist]* @uvc_ctrl_prune_entity.processing_blacklist, i32 0, i32 0), %sw.bb ]
  %controls.0 = phi i8* [ %5, %sw.bb3 ], [ %2, %sw.bb ]
  %7 = load i8, i8* %bControlSize6.sink, align 2, !tbaa !104
  %conv7 = zext i8 %7 to i32
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %i.0 = phi i32 [ 0, %sw.epilog ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, %count.0
  br i1 %cmp, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %intf = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 1
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom
  %id = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx, i32 0, i32 0
  %call = call i32 @usb_match_one_id(%struct.usb_interface* %8, %struct.usb_device_id* %id)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %idxprom9 = zext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom9
  %index = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx10, i32 0, i32 1
  %9 = load i8, i8* %index, align 8, !tbaa !557
  %conv11 = zext i8 %9 to i32
  %mul = mul i32 8, %conv7
  %cmp12 = icmp uge i32 %conv11, %mul
  br i1 %cmp12, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %idxprom14 = zext i32 %i.0 to i64
  %arrayidx15 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom14
  %index16 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx15, i32 0, i32 1
  %10 = load i8, i8* %index16, align 8, !tbaa !557
  %conv17 = zext i8 %10 to i32
  %call18 = call i32 @uvc_test_bit(i8* %controls.0, i32 %conv17)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %do.body, label %for.inc

do.body:                                          ; preds = %lor.lhs.false
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and22 = and i32 %11, 4
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %do.end

if.then24:                                        ; preds = %do.body
  %id25 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %entity, i32 0, i32 3
  %12 = load i8, i8* %id25, align 4, !tbaa !120
  %conv26 = zext i8 %12 to i32
  %idxprom27 = zext i32 %i.0 to i64
  %arrayidx28 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom27
  %index29 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx28, i32 0, i32 1
  %13 = load i8, i8* %index29, align 8, !tbaa !557
  %conv30 = zext i8 %13 to i32
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.285, i32 0, i32 0), i32 %conv26, i32 %conv30)
  br label %do.end

do.end:                                           ; preds = %if.then24, %do.body
  %idxprom33 = zext i32 %i.0 to i64
  %arrayidx34 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom33
  %index35 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx34, i32 0, i32 1
  %14 = load i8, i8* %index35, align 8, !tbaa !557
  %conv36 = zext i8 %14 to i32
  call void @uvc_clear_bit(i8* %controls.0, i32 %conv36)
  br label %for.inc

for.inc:                                          ; preds = %do.end, %lor.lhs.false, %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %for.cond, %entry
  ret void
}

declare i64 @memweight(i8*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc_array(i64 %n, i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_test_bit(i8* %data, i32 %bit) #1 {
entry:
  %shr = ashr i32 %bit, 3
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %0 to i32
  %and = and i32 %bit, 7
  %shr1 = ashr i32 %conv, %and
  %and2 = and i32 %shr1, 1
  ret i32 %and2
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_init_ctrl(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl) #0 {
entry:
  %add.ptr = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* getelementptr inbounds ([35 x %struct.uvc_control_info], [35 x %struct.uvc_control_info]* @uvc_ctrls, i32 0, i32 0), i64 35
  %add.ptr1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* getelementptr inbounds ([29 x %struct.uvc_control_mapping], [29 x %struct.uvc_control_mapping]* @uvc_ctrl_mappings, i32 0, i32 0), i64 29
  %entity = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %0 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity, align 8, !tbaa !520
  %type = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %0, i32 0, i32 4
  %1 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp eq i32 %and, 6
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %info.0 = phi %struct.uvc_control_info* [ getelementptr inbounds ([35 x %struct.uvc_control_info], [35 x %struct.uvc_control_info]* @uvc_ctrls, i32 0, i32 0), %if.end ], [ %incdec.ptr, %for.inc ]
  %cmp3 = icmp ult %struct.uvc_control_info* %info.0, %add.ptr
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %entity5 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity5, align 8, !tbaa !520
  %entity6 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity6, i32 0, i32 0
  %call = call i32 @uvc_entity_match_guid(%struct.uvc_entity.872* %2, i8* %arraydecay)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %index = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 2
  %3 = load i8, i8* %index, align 8, !tbaa !542
  %conv7 = zext i8 %3 to i32
  %index8 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 0, i32 2
  %4 = load i8, i8* %index8, align 8, !tbaa !546
  %conv9 = zext i8 %4 to i32
  %cmp10 = icmp eq i32 %conv7, %conv9
  br i1 %cmp10, label %if.then12, label %for.inc

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i32 @uvc_ctrl_add_info(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_info* %info.0)
  br label %for.end

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %incdec.ptr = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %if.then12, %for.cond
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool15 = icmp ne i8 %bf.clear, 0
  br i1 %tobool15, label %if.end17, label %cleanup.cont

if.end17:                                         ; preds = %for.end
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc37, %if.end17
  %mapping.0 = phi %struct.uvc_control_mapping* [ getelementptr inbounds ([29 x %struct.uvc_control_mapping], [29 x %struct.uvc_control_mapping]* @uvc_ctrl_mappings, i32 0, i32 0), %if.end17 ], [ %incdec.ptr38, %for.inc37 ]
  %cmp19 = icmp ult %struct.uvc_control_mapping* %mapping.0, %add.ptr1
  br i1 %cmp19, label %for.body21, label %cleanup.cont

for.body21:                                       ; preds = %for.cond18
  %entity22 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 0
  %5 = load %struct.uvc_entity.872*, %struct.uvc_entity.872** %entity22, align 8, !tbaa !520
  %entity23 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 4
  %arraydecay24 = getelementptr inbounds [16 x i8], [16 x i8]* %entity23, i32 0, i32 0
  %call25 = call i32 @uvc_entity_match_guid(%struct.uvc_entity.872* %5, i8* %arraydecay24)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %land.lhs.true27, label %for.inc37

land.lhs.true27:                                  ; preds = %for.body21
  %info28 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info28, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !521
  %conv29 = zext i8 %6 to i32
  %selector30 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 5
  %7 = load i8, i8* %selector30, align 4, !tbaa !303
  %conv31 = zext i8 %7 to i32
  %cmp32 = icmp eq i32 %conv29, %conv31
  br i1 %cmp32, label %if.then34, label %for.inc37

if.then34:                                        ; preds = %land.lhs.true27
  %call35 = call i32 @__uvc_ctrl_add_mapping(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl, %struct.uvc_control_mapping* %mapping.0)
  br label %for.inc37

for.inc37:                                        ; preds = %if.then34, %land.lhs.true27, %for.body21
  %incdec.ptr38 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 1
  br label %for.cond18

cleanup.cont:                                     ; preds = %for.cond18, %for.end, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_get_zoom(%struct.uvc_control_mapping* %mapping, i8 zeroext %query, i8* %data) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %query to i32
  %cond1 = icmp eq i32 %conv, 129
  br i1 %cond1, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  %conv1 = sext i8 %0 to i32
  %cmp = icmp eq i32 %conv1, 0
  br i1 %cmp, label %cleanup, label %cond.false

cond.false:                                       ; preds = %sw.bb
  %conv3 = sext i8 %0 to i32
  %cmp4 = icmp sgt i32 %conv3, 0
  %arrayidx7 = getelementptr inbounds i8, i8* %data, i64 2
  %1 = load i8, i8* %arrayidx7, align 1, !tbaa !104
  %conv8 = zext i8 %1 to i32
  %sub = sub nsw i32 0, %conv8
  %cond = select i1 %cmp4, i32 %conv8, i32 %sub
  br label %cleanup

sw.default:                                       ; preds = %entry
  %arrayidx15 = getelementptr inbounds i8, i8* %data, i64 2
  %2 = load i8, i8* %arrayidx15, align 1, !tbaa !104
  %conv16 = zext i8 %2 to i32
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %cond.false, %sw.bb
  %retval.0 = phi i32 [ %conv16, %sw.default ], [ 0, %sw.bb ], [ %cond, %cond.false ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_set_zoom(%struct.uvc_control_mapping* %mapping, i32 %value, i8* %data) #0 {
entry:
  %__UNIQUE_ID_min1_20 = alloca i32, align 4
  %__UNIQUE_ID_min2_21 = alloca i32, align 4
  %cmp = icmp eq i32 %value, 0
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp1 = icmp sgt i32 %value, 0
  %0 = zext i1 %cmp1 to i64
  %cond = select i1 %cmp1, i32 1, i32 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond2 = phi i32 [ %cond, %cond.false ], [ 0, %entry ]
  %conv = trunc i32 %cond2 to i8
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  store i8 %conv, i8* %arrayidx, align 1, !tbaa !104
  %1 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %cmp3 = icmp slt i32 %value, 0
  %sub = sub nsw i32 0, %value
  %cond8 = select i1 %cmp3, i32 %sub, i32 %value
  store i32 %cond8, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %2 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 255, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp9 = icmp eq i32* %__UNIQUE_ID_min1_20, %__UNIQUE_ID_min2_21
  %conv10 = zext i1 %cmp9 to i32
  %3 = load i32, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %4 = load i32, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp12 = icmp slt i32 %3, %4
  %5 = load i32, i32* %__UNIQUE_ID_min1_20, align 4
  %6 = load i32, i32* %__UNIQUE_ID_min2_21, align 4
  %cond17 = select i1 %cmp12, i32 %5, i32 %6
  %7 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #8
  %8 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #8
  %conv18 = trunc i32 %cond17 to i8
  %arrayidx19 = getelementptr inbounds i8, i8* %data, i64 2
  store i8 %conv18, i8* %arrayidx19, align 1, !tbaa !104
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_get_rel_speed(%struct.uvc_control_mapping* %mapping, i8 zeroext %query, i8* %data) #0 {
entry:
  %offset = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %0 = load i8, i8* %offset, align 2, !tbaa !307
  %conv = zext i8 %0 to i32
  %div = sdiv i32 %conv, 8
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv1 = zext i8 %query to i32
  switch i32 %conv1, label %sw.default [
    i32 129, label %sw.bb
    i32 130, label %sw.bb18
  ]

sw.bb:                                            ; preds = %entry
  %conv2 = sext i8 %1 to i32
  %cmp = icmp eq i32 %conv2, 0
  br i1 %cmp, label %cleanup, label %cond.false

cond.false:                                       ; preds = %sw.bb
  %conv4 = sext i8 %1 to i32
  %cmp5 = icmp sgt i32 %conv4, 0
  %add = add i32 %div, 1
  %idxprom8 = zext i32 %add to i64
  %arrayidx9 = getelementptr inbounds i8, i8* %data, i64 %idxprom8
  %2 = load i8, i8* %arrayidx9, align 1, !tbaa !104
  %conv10 = zext i8 %2 to i32
  %sub = sub nsw i32 0, %conv10
  %cond = select i1 %cmp5, i32 %conv10, i32 %sub
  br label %cleanup

sw.bb18:                                          ; preds = %entry
  %add19 = add i32 %div, 1
  %idxprom20 = zext i32 %add19 to i64
  %arrayidx21 = getelementptr inbounds i8, i8* %data, i64 %idxprom20
  %3 = load i8, i8* %arrayidx21, align 1, !tbaa !104
  %conv22 = zext i8 %3 to i32
  %sub23 = sub nsw i32 0, %conv22
  br label %cleanup

sw.default:                                       ; preds = %entry
  %add25 = add i32 %div, 1
  %idxprom26 = zext i32 %add25 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %data, i64 %idxprom26
  %4 = load i8, i8* %arrayidx27, align 1, !tbaa !104
  %conv28 = zext i8 %4 to i32
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb18, %cond.false, %sw.bb
  %retval.0 = phi i32 [ %conv28, %sw.default ], [ %sub23, %sw.bb18 ], [ 0, %sw.bb ], [ %cond, %cond.false ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_set_rel_speed(%struct.uvc_control_mapping* %mapping, i32 %value, i8* %data) #0 {
entry:
  %__UNIQUE_ID_min1_22 = alloca i32, align 4
  %__UNIQUE_ID_min2_23 = alloca i32, align 4
  %offset = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %0 = load i8, i8* %offset, align 2, !tbaa !307
  %conv = zext i8 %0 to i32
  %div = sdiv i32 %conv, 8
  %cmp = icmp eq i32 %value, 0
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp2 = icmp sgt i32 %value, 0
  %1 = zext i1 %cmp2 to i64
  %cond = select i1 %cmp2, i32 1, i32 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond4 = phi i32 [ %cond, %cond.false ], [ 0, %entry ]
  %conv5 = trunc i32 %cond4 to i8
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  store i8 %conv5, i8* %arrayidx, align 1, !tbaa !104
  %2 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  %cmp6 = icmp slt i32 %value, 0
  %sub = sub nsw i32 0, %value
  %cond11 = select i1 %cmp6, i32 %sub, i32 %value
  store i32 %cond11, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %3 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #8
  store i32 255, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp12 = icmp eq i32* %__UNIQUE_ID_min1_22, %__UNIQUE_ID_min2_23
  %conv13 = zext i1 %cmp12 to i32
  %4 = load i32, i32* %__UNIQUE_ID_min1_22, align 4, !tbaa !9
  %5 = load i32, i32* %__UNIQUE_ID_min2_23, align 4, !tbaa !9
  %cmp15 = icmp slt i32 %4, %5
  %6 = load i32, i32* %__UNIQUE_ID_min1_22, align 4
  %7 = load i32, i32* %__UNIQUE_ID_min2_23, align 4
  %cond20 = select i1 %cmp15, i32 %6, i32 %7
  %8 = bitcast i32* %__UNIQUE_ID_min2_23 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #8
  %9 = bitcast i32* %__UNIQUE_ID_min1_22 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #8
  %conv21 = trunc i32 %cond20 to i8
  %add = add i32 %div, 1
  %idxprom22 = zext i32 %add to i64
  %arrayidx23 = getelementptr inbounds i8, i8* %data, i64 %idxprom22
  store i8 %conv21, i8* %arrayidx23, align 1, !tbaa !104
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #1 {
entry:
  %cmp = icmp ne i64 %size, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %div = udiv i64 -1, %size
  %cmp1 = icmp ugt i64 %n, %div
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %mul = mul i64 %n, %size
  %call = call noalias i8* @__kmalloc(i64 %mul, i32 %flags)
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true
  %retval.0 = phi i8* [ %call, %if.end ], [ null, %land.lhs.true ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @uvc_clear_bit(i8* %data, i32 %bit) #1 {
entry:
  %and = and i32 %bit, 7
  %shl = shl i32 1, %and
  %neg = xor i32 %shl, -1
  %shr = ashr i32 %bit, 3
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %0 to i32
  %and1 = and i32 %conv, %neg
  %conv2 = trunc i32 %and1 to i8
  store i8 %conv2, i8* %arrayidx, align 1, !tbaa !104
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_ctrl_cleanup_device(%struct.uvc_device.871* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.end, %entry
  %list8.sink = phi %struct.list_head* [ %list8, %for.end ], [ %entities, %entry ]
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next9, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr11 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr11 to %struct.uvc_entity.872*
  %list = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device.871, %struct.uvc_device.871* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %cleanup, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %cleanup ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 14
  %3 = load i32, i32* %ncontrols, align 8, !tbaa !531
  %cmp3 = icmp ult i32 %i.0, %3
  %controls = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 15
  %4 = load %struct.uvc_control.903*, %struct.uvc_control.903** %controls, align 8, !tbaa !532
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %4, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end, label %cleanup

if.end:                                           ; preds = %for.body4
  call void @uvc_ctrl_cleanup_mappings(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %arrayidx)
  %uvc_data = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %arrayidx, i32 0, i32 4
  %5 = load i8*, i8** %uvc_data, align 8, !tbaa !533
  call void @kfree(i8* %5)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %for.body4
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 7, %for.body4 ]
  %switch = icmp ult i32 %cleanup.dest.slot.0, 1
  %inc = add i32 %i.0, 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  %6 = bitcast %struct.uvc_control.903* %4 to i8*
  call void @kfree(i8* %6)
  %list8 = getelementptr inbounds %struct.uvc_entity.872, %struct.uvc_entity.872* %2, i32 0, i32 0
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_cleanup_mappings(%struct.uvc_device.871* %dev, %struct.uvc_control.903* %ctrl) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mappings, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !99
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_control_mapping*
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %.sink = phi %struct.uvc_control_mapping* [ %5, %for.body ], [ %2, %entry ]
  %mapping.0 = phi %struct.uvc_control_mapping* [ %2, %entry ], [ %5, %for.body ]
  %list10 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %.sink, i32 0, i32 0
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next11, align 8, !tbaa !559
  %4 = bitcast %struct.list_head* %3 to i8*
  %add.ptr13 = getelementptr inbounds i8, i8* %4, i64 0
  %5 = bitcast i8* %add.ptr13 to %struct.uvc_control_mapping*
  %list5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 0
  %info6 = getelementptr inbounds %struct.uvc_control.903, %struct.uvc_control.903* %ctrl, i32 0, i32 1
  %mappings7 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info6, i32 0, i32 0
  %cmp = icmp ne %struct.list_head* %list5, %mappings7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %list8 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 0
  call void @list_del.233(%struct.list_head* %list8)
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 10
  %6 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !314
  %7 = bitcast %struct.uvc_menu_info* %6 to i8*
  call void @kfree(i8* %7)
  %8 = bitcast %struct.uvc_control_mapping* %mapping.0 to i8*
  call void @kfree(i8* %8)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_status_init(%struct.uvc_device* %dev) #0 {
entry:
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 17
  %0 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !113
  %cmp = icmp eq %struct.usb_host_endpoint* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_input_init(%struct.uvc_device* %dev)
  %call1 = call i8* @kzalloc.290(i64 16, i32 20971712)
  %status = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  store i8* %call1, i8** %status, align 8, !tbaa !560
  %status2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %1 = load i8*, i8** %status2, align 8, !tbaa !560
  %cmp3 = icmp eq i8* %1, null
  br i1 %cmp3, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %call6 = call %struct.urb* @usb_alloc_urb(i32 0, i32 20971712)
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  store %struct.urb* %call6, %struct.urb** %int_urb, align 8, !tbaa !561
  %int_urb7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %2 = load %struct.urb*, %struct.urb** %int_urb7, align 8, !tbaa !561
  %cmp8 = icmp eq %struct.urb* %2, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end5
  %status10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %3 = load i8*, i8** %status10, align 8, !tbaa !560
  call void @kfree(i8* %3)
  br label %cleanup

if.end11:                                         ; preds = %if.end5
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %0, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2
  %5 = load i8, i8* %bEndpointAddress, align 2, !tbaa !194
  %conv = zext i8 %5 to i32
  %call12 = call i32 @__create_pipe.291(%struct.usb_device* %4, i32 %conv)
  %or = or i32 1073741824, %call12
  %or13 = or i32 %or, 128
  %desc14 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %0, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc14, i32 0, i32 5
  %6 = load i8, i8* %bInterval, align 2, !tbaa !456
  %conv15 = zext i8 %6 to i32
  %cmp16 = icmp sgt i32 %conv15, 16
  br i1 %cmp16, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %if.end11
  %udev18 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev18, align 8, !tbaa !11
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 4
  %8 = load i32, i32* %speed, align 4, !tbaa !406
  %cmp19 = icmp eq i32 %8, 3
  br i1 %cmp19, label %land.lhs.true21, label %if.end24

land.lhs.true21:                                  ; preds = %land.lhs.true
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %9 = load i32, i32* %quirks, align 8, !tbaa !53
  %and = and i32 %9, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then22, label %if.end24

if.then22:                                        ; preds = %land.lhs.true21
  %call23 = call i32 @fls(i32 %conv15)
  %sub = sub nsw i32 %call23, 1
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %land.lhs.true21, %land.lhs.true, %if.end11
  %interval.0 = phi i32 [ %sub, %if.then22 ], [ %conv15, %land.lhs.true21 ], [ %conv15, %land.lhs.true ], [ %conv15, %if.end11 ]
  %int_urb25 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %10 = load %struct.urb*, %struct.urb** %int_urb25, align 8, !tbaa !561
  %udev26 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %11 = load %struct.usb_device*, %struct.usb_device** %udev26, align 8, !tbaa !11
  %status27 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %12 = load i8*, i8** %status27, align 8, !tbaa !560
  %13 = bitcast %struct.uvc_device* %dev to i8*
  call void @usb_fill_int_urb(%struct.urb* %10, %struct.usb_device* %11, i32 %or13, i8* %12, i32 16, void (%struct.urb*)* @uvc_status_complete, i8* %13, i32 %interval.0)
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then9, %if.end, %entry
  %retval.0 = phi i32 [ -12, %if.then9 ], [ 0, %if.end24 ], [ 0, %entry ], [ -12, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_input_init(%struct.uvc_device* %dev) #0 {
entry:
  %call = call %struct.input_dev* @input_allocate_device()
  %cmp = icmp eq %struct.input_dev* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !11
  %input_phys = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys, i32 0, i32 0
  %call1 = call i32 @usb_make_path.306(%struct.usb_device* %0, i8* %arraydecay, i64 64)
  %input_phys2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys2, i32 0, i32 0
  %call4 = call i64 @strlcat(i8* %arraydecay3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.307, i32 0, i32 0), i64 64)
  %name = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 5
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 0
  store i8* %arraydecay5, i8** %name6, align 8, !tbaa !562
  %input_phys7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys7, i32 0, i32 0
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 1
  store i8* %arraydecay8, i8** %phys, align 8, !tbaa !565
  %udev9 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev9, align 8, !tbaa !11
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 3
  call void @usb_to_input_id(%struct.usb_device* %1, %struct.input_id* %id)
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !31
  %dev10 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %2, i32 0, i32 7
  %dev11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 39
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev11, i32 0, i32 0
  store %struct.device* %dev10, %struct.device** %parent, align 8, !tbaa !566
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 5
  %arraydecay12 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i32 0, i32 0
  call void @__set_bit(i64 1, i64* %arraydecay12)
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 6
  %arraydecay13 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i32 0, i32 0
  call void @__set_bit(i64 212, i64* %arraydecay13)
  %call14 = call i32 @input_register_device(%struct.input_dev* %call)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %error, label %if.end17

if.end17:                                         ; preds = %if.end
  %input18 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  store %struct.input_dev* %call, %struct.input_dev** %input18, align 8, !tbaa !567
  br label %cleanup

error:                                            ; preds = %if.end
  call void @input_free_device(%struct.input_dev* %call)
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end17, %entry
  %retval.0 = phi i32 [ %call14, %error ], [ 0, %if.end17 ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.290(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.305(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__create_pipe.291(%struct.usb_device* %dev, i32 %endpoint) #1 {
entry:
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 0
  %0 = load i32, i32* %devnum, align 8, !tbaa !149
  %shl = shl i32 %0, 8
  %shl1 = shl i32 %endpoint, 15
  %or = or i32 %shl, %shl1
  ret i32 %or
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @fls(i32 %x) #3 {
entry:
  %0 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %x, i32 -1) #9, !srcloc !568
  %add = add nsw i32 %0, 1
  ret i32 %add
}

; Function Attrs: nounwind uwtable
define internal void @uvc_status_complete(%struct.urb* %urb) #0 {
entry:
  %context = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  %0 = load i8*, i8** %context, align 8, !tbaa !452
  %1 = bitcast i8* %0 to %struct.uvc_device*
  %status = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %2 = load i32, i32* %status, align 8, !tbaa !466
  switch i32 %2, label %sw.default [
    i32 0, label %sw.epilog
    i32 -2, label %cleanup.cont
    i32 -104, label %cleanup.cont
    i32 -108, label %cleanup.cont
    i32 -71, label %cleanup.cont
  ]

sw.default:                                       ; preds = %entry
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %3 = load i32, i32* %status1, align 8, !tbaa !466
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.292, i32 0, i32 0), i32 %3)
  br label %cleanup.cont

sw.epilog:                                        ; preds = %entry
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %4 = load i32, i32* %actual_length, align 4, !tbaa !472
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %sw.epilog
  %status2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %5 = load i8*, i8** %status2, align 8, !tbaa !560
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  switch i32 %and, label %do.body [
    i32 1, label %sw.bb3
    i32 2, label %sw.bb5
  ]

sw.bb3:                                           ; preds = %if.then
  %status4 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %7 = load i8*, i8** %status4, align 8, !tbaa !560
  call void @uvc_event_control(%struct.uvc_device* %1, i8* %7, i32 %4)
  br label %if.end15

sw.bb5:                                           ; preds = %if.then
  %status6 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %8 = load i8*, i8** %status6, align 8, !tbaa !560
  call void @uvc_event_streaming(%struct.uvc_device* %1, i8* %8, i32 %4)
  br label %if.end15

do.body:                                          ; preds = %if.then
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and8 = and i32 %9, 512
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %if.then9, label %if.end15

if.then9:                                         ; preds = %do.body
  %status10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %10 = load i8*, i8** %status10, align 8, !tbaa !560
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 0
  %11 = load i8, i8* %arrayidx11, align 1, !tbaa !104
  %conv12 = zext i8 %11 to i32
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.293, i32 0, i32 0), i32 %conv12)
  br label %if.end15

if.end15:                                         ; preds = %if.then9, %do.body, %sw.bb5, %sw.bb3, %sw.epilog
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 17
  %12 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !113
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %12, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 5
  %13 = load i8, i8* %bInterval, align 2, !tbaa !456
  %conv16 = zext i8 %13 to i32
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 25
  store i32 %conv16, i32* %interval, align 8, !tbaa !457
  %call17 = call i32 @usb_submit_urb(%struct.urb* %urb, i32 17301536)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then20, label %cleanup.cont

if.then20:                                        ; preds = %if.end15
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.294, i32 0, i32 0), i32 %call17)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then20, %if.end15, %sw.default, %entry, %entry, %entry, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_fill_int_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context, i32 %interval) #1 {
entry:
  %__UNIQUE_ID_min1_10 = alloca i32, align 4
  %__UNIQUE_ID_max1_8 = alloca i32, align 4
  %__UNIQUE_ID_max2_9 = alloca i32, align 4
  %__UNIQUE_ID_min2_11 = alloca i32, align 4
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev1, align 8, !tbaa !450
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 10
  store i32 %pipe, i32* %pipe2, align 8, !tbaa !453
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  store i8* %transfer_buffer, i8** %transfer_buffer3, align 8, !tbaa !458
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %buffer_length, i32* %transfer_buffer_length, align 8, !tbaa !461
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 28
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete, align 8, !tbaa !459
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  store i8* %context, i8** %context4, align 8, !tbaa !452
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %0 = load i32, i32* %speed, align 4, !tbaa !406
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %speed5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %1 = load i32, i32* %speed5, align 4, !tbaa !406
  %cmp6 = icmp uge i32 %1, 5
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %2 = bitcast i32* %__UNIQUE_ID_min1_10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  %3 = bitcast i32* %__UNIQUE_ID_max1_8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #8
  store i32 %interval, i32* %__UNIQUE_ID_max1_8, align 4, !tbaa !9
  %4 = bitcast i32* %__UNIQUE_ID_max2_9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #8
  store i32 1, i32* %__UNIQUE_ID_max2_9, align 4, !tbaa !9
  %cmp7 = icmp eq i32* %__UNIQUE_ID_max1_8, %__UNIQUE_ID_max2_9
  %conv = zext i1 %cmp7 to i32
  %5 = load i32, i32* %__UNIQUE_ID_max1_8, align 4, !tbaa !9
  %6 = load i32, i32* %__UNIQUE_ID_max2_9, align 4, !tbaa !9
  %cmp8 = icmp sgt i32 %5, %6
  %7 = load i32, i32* %__UNIQUE_ID_max1_8, align 4
  %8 = load i32, i32* %__UNIQUE_ID_max2_9, align 4
  %cond = select i1 %cmp8, i32 %7, i32 %8
  %9 = bitcast i32* %__UNIQUE_ID_max2_9 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %9) #8
  %10 = bitcast i32* %__UNIQUE_ID_max1_8 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  store i32 %cond, i32* %__UNIQUE_ID_min1_10, align 4, !tbaa !9
  %11 = bitcast i32* %__UNIQUE_ID_min2_11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %11) #8
  store i32 16, i32* %__UNIQUE_ID_min2_11, align 4, !tbaa !9
  %cmp10 = icmp eq i32* %__UNIQUE_ID_min1_10, %__UNIQUE_ID_min2_11
  %conv11 = zext i1 %cmp10 to i32
  %12 = load i32, i32* %__UNIQUE_ID_min1_10, align 4, !tbaa !9
  %13 = load i32, i32* %__UNIQUE_ID_min2_11, align 4, !tbaa !9
  %cmp13 = icmp slt i32 %12, %13
  %14 = load i32, i32* %__UNIQUE_ID_min1_10, align 4
  %15 = load i32, i32* %__UNIQUE_ID_min2_11, align 4
  %cond18 = select i1 %cmp13, i32 %14, i32 %15
  %16 = bitcast i32* %__UNIQUE_ID_min2_11 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %16) #8
  %17 = bitcast i32* %__UNIQUE_ID_min1_10 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #8
  %sub = sub nsw i32 %cond18, 1
  %shl = shl i32 1, %sub
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %interval.sink = phi i32 [ %shl, %if.then ], [ %interval, %lor.lhs.false ]
  %interval20 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 25
  store i32 %interval.sink, i32* %interval20, align 8, !tbaa !457
  %start_frame = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 23
  store i32 -1, i32* %start_frame, align 8, !tbaa !569
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_event_control(%struct.uvc_device* %dev, i8* %data, i32 %len) #0 {
entry:
  %attrs = alloca [3 x i8*], align 16
  %0 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %0) #8
  %1 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @uvc_event_control.attrs to i8*), i64 24, i32 16, i1 false)
  %cmp = icmp slt i32 %len, 6
  br i1 %cmp, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %2 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %do.body, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %arrayidx4 = getelementptr inbounds i8, i8* %data, i64 4
  %3 = load i8, i8* %arrayidx4, align 1, !tbaa !104
  %conv5 = zext i8 %3 to i32
  %cmp6 = icmp sgt i32 %conv5, 2
  br i1 %cmp6, label %do.body, label %do.body10

do.body:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %4, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then8, label %cleanup

if.then8:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8.300, i32 0, i32 0))
  br label %cleanup

do.body10:                                        ; preds = %lor.lhs.false3
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and11 = and i32 %5, 512
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %cleanup

if.then13:                                        ; preds = %do.body10
  %arrayidx14 = getelementptr inbounds i8, i8* %data, i64 1
  %6 = load i8, i8* %arrayidx14, align 1, !tbaa !104
  %conv15 = zext i8 %6 to i32
  %arrayidx16 = getelementptr inbounds i8, i8* %data, i64 3
  %7 = load i8, i8* %arrayidx16, align 1, !tbaa !104
  %conv17 = zext i8 %7 to i32
  %arrayidx18 = getelementptr inbounds i8, i8* %data, i64 4
  %8 = load i8, i8* %arrayidx18, align 1, !tbaa !104
  %idxprom = zext i8 %8 to i64
  %arrayidx19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %attrs, i64 0, i64 %idxprom
  %9 = load i8*, i8** %arrayidx19, align 8, !tbaa !74
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.301, i32 0, i32 0), i32 %conv15, i32 %conv17, i8* %9, i32 %len)
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %do.body10, %if.then8, %do.body
  %10 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %10) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_event_streaming(%struct.uvc_device* %dev, i8* %data, i32 %len) #0 {
entry:
  %cmp = icmp slt i32 %len, 3
  br i1 %cmp, label %do.body, label %if.end2

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %0, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %if.end37

if.then1:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.295, i32 0, i32 0))
  br label %if.end37

if.end2:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !104
  %conv = zext i8 %1 to i32
  %cmp3 = icmp eq i32 %conv, 0
  br i1 %cmp3, label %if.then5, label %do.body24

if.then5:                                         ; preds = %if.end2
  %cmp6 = icmp slt i32 %len, 4
  br i1 %cmp6, label %if.end37, label %do.body10

do.body10:                                        ; preds = %if.then5
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and11 = and i32 %2, 512
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %do.end21

if.then13:                                        ; preds = %do.body10
  %arrayidx14 = getelementptr inbounds i8, i8* %data, i64 1
  %3 = load i8, i8* %arrayidx14, align 1, !tbaa !104
  %conv15 = zext i8 %3 to i32
  %arrayidx16 = getelementptr inbounds i8, i8* %data, i64 3
  %4 = load i8, i8* %arrayidx16, align 1, !tbaa !104
  %conv17 = zext i8 %4 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  %5 = zext i1 %tobool18 to i64
  %cond = select i1 %tobool18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.296, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.297, i32 0, i32 0)
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.298, i32 0, i32 0), i32 %conv15, i8* %cond, i32 %len)
  br label %do.end21

do.end21:                                         ; preds = %if.then13, %do.body10
  %arrayidx22 = getelementptr inbounds i8, i8* %data, i64 3
  %6 = load i8, i8* %arrayidx22, align 1, !tbaa !104
  %conv23 = zext i8 %6 to i32
  call void @uvc_input_report_key(%struct.uvc_device* %dev, i32 212, i32 %conv23)
  br label %if.end37

do.body24:                                        ; preds = %if.end2
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and25 = and i32 %7, 512
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %if.end37

if.then27:                                        ; preds = %do.body24
  %arrayidx28 = getelementptr inbounds i8, i8* %data, i64 1
  %8 = load i8, i8* %arrayidx28, align 1, !tbaa !104
  %conv29 = zext i8 %8 to i32
  %arrayidx30 = getelementptr inbounds i8, i8* %data, i64 2
  %9 = load i8, i8* %arrayidx30, align 1, !tbaa !104
  %conv31 = zext i8 %9 to i32
  %arrayidx32 = getelementptr inbounds i8, i8* %data, i64 3
  %10 = load i8, i8* %arrayidx32, align 1, !tbaa !104
  %conv33 = zext i8 %10 to i32
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.299, i32 0, i32 0), i32 %conv29, i32 %conv31, i32 %conv33, i32 %len)
  br label %if.end37

if.end37:                                         ; preds = %if.then27, %do.body24, %do.end21, %if.then5, %if.then1, %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_input_report_key(%struct.uvc_device* %dev, i32 %code, i32 %value) #0 {
entry:
  %input = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %0 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !tbaa !567
  %tobool = icmp ne %struct.input_dev* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %input1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %1 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !tbaa !567
  call void @input_report_key(%struct.input_dev* %1, i32 %code, i32 %value)
  %input2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %2 = load %struct.input_dev*, %struct.input_dev** %input2, align 8, !tbaa !567
  call void @input_sync(%struct.input_dev* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #1 {
entry:
  %tobool = icmp ne i32 %value, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  call void @input_event(%struct.input_dev* %dev, i32 1, i32 %code, i32 %lnot.ext)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @input_sync(%struct.input_dev* %dev) #1 {
entry:
  call void @input_event(%struct.input_dev* %dev, i32 0, i32 0, i32 0)
  ret void
}

declare void @input_event(%struct.input_dev*, i32, i32, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.305(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare %struct.input_dev* @input_allocate_device() #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_make_path.306(%struct.usb_device* %dev, i8* %buf, i64 %size) #1 {
entry:
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 9
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !341
  %bus_name = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %0, i32 0, i32 2
  %1 = load i8*, i8** %bus_name, align 8, !tbaa !342
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buf, i64 %size, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.308, i32 0, i32 0), i8* %1, i8* %arraydecay)
  %conv = trunc i64 %size to i32
  %cmp = icmp sge i32 %call, %conv
  %.call = select i1 %cmp, i32 -1, i32 %call
  ret i32 %.call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_to_input_id(%struct.usb_device* %dev, %struct.input_id* %id) #1 {
entry:
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0
  store i16 3, i16* %bustype, align 2, !tbaa !570
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7
  %0 = load i16, i16* %idVendor, align 8, !tbaa !63
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 1
  store i16 %0, i16* %vendor, align 2, !tbaa !571
  %descriptor1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %idProduct = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor1, i32 0, i32 8
  %1 = load i16, i16* %idProduct, align 2, !tbaa !64
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 2
  store i16 %1, i16* %product, align 2, !tbaa !572
  %descriptor2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %bcdDevice = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor2, i32 0, i32 9
  %2 = load i16, i16* %bcdDevice, align 4, !tbaa !68
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 3
  store i16 %2, i16* %version, align 2, !tbaa !573
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @__set_bit(i64 %nr, i64* %addr) #3 {
entry:
  call void asm sideeffect "bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i64 %nr, i64* %addr) #8, !srcloc !574
  ret void
}

declare i32 @input_register_device(%struct.input_dev*) #2

declare void @input_free_device(%struct.input_dev*) #2

; Function Attrs: nounwind uwtable
define void @uvc_status_cleanup(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !561
  call void @usb_kill_urb(%struct.urb* %0)
  %int_urb1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %1 = load %struct.urb*, %struct.urb** %int_urb1, align 8, !tbaa !561
  call void @usb_free_urb(%struct.urb* %1)
  %status = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %2 = load i8*, i8** %status, align 8, !tbaa !560
  call void @kfree(i8* %2)
  call void @uvc_input_cleanup(%struct.uvc_device* %dev)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_input_cleanup(%struct.uvc_device* %dev) #0 {
entry:
  %input = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %0 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !tbaa !567
  %tobool = icmp ne %struct.input_dev* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %input1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %1 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !tbaa !567
  call void @input_unregister_device(%struct.input_dev* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @input_unregister_device(%struct.input_dev*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_status_start(%struct.uvc_device* %dev, i32 %flags) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !561
  %cmp = icmp eq %struct.urb* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %int_urb1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %1 = load %struct.urb*, %struct.urb** %int_urb1, align 8, !tbaa !561
  %call = call i32 @usb_submit_urb(%struct.urb* %1, i32 %flags)
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @uvc_status_stop(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !561
  call void @usb_kill_urb(%struct.urb* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_video_decode_isight(%struct.urb* %urb, %struct.uvc_streaming.2601* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %entry ], [ %buf.addr.3, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 24
  %0 = load i32, i32* %number_of_packets, align 4, !tbaa !460
  %cmp = icmp slt i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom
  %status = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx, i32 0, i32 3
  %1 = load i32, i32* %status, align 4, !tbaa !470
  %cmp1 = icmp slt i32 %1, 0
  br i1 %cmp1, label %do.body, label %if.end7

do.body:                                          ; preds = %for.body
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %2, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %if.end7

if.then2:                                         ; preds = %do.body
  %iso_frame_desc3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc3, i64 0, i64 %idxprom4
  %status6 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx5, i32 0, i32 3
  %3 = load i32, i32* %status6, align 4, !tbaa !470
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.317, i32 0, i32 0), i32 %3)
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %do.body, %for.body
  br label %do.body8

do.body8:                                         ; preds = %do.cond26, %if.end7
  %buf.addr.1 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.end7 ], [ %buf.addr.2, %do.cond26 ]
  %queue = getelementptr inbounds %struct.uvc_streaming.2601, %struct.uvc_streaming.2601* %stream, i32 0, i32 18
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %4 = load i8*, i8** %transfer_buffer, align 8, !tbaa !458
  %iso_frame_desc9 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom10 = sext i32 %i.0 to i64
  %arrayidx11 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc9, i64 0, i64 %idxprom10
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx11, i32 0, i32 0
  %5 = load i32, i32* %offset, align 8, !tbaa !462
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext
  %iso_frame_desc12 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom13 = sext i32 %i.0 to i64
  %arrayidx14 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc12, i64 0, i64 %idxprom13
  %actual_length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx14, i32 0, i32 2
  %6 = load i32, i32* %actual_length, align 8, !tbaa !471
  %call15 = call i32 @isight_decode(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf.addr.1, i8* %add.ptr, i32 %6)
  %cmp16 = icmp eq %struct.uvc_buffer* %buf.addr.1, null
  br i1 %cmp16, label %for.inc, label %if.end18

if.end18:                                         ; preds = %do.body8
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.1, i32 0, i32 2
  %7 = load i32, i32* %state, align 8, !tbaa !210
  %cmp19 = icmp eq i32 %7, 4
  br i1 %cmp19, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end18
  %state20 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.1, i32 0, i32 2
  %8 = load i32, i32* %state20, align 8, !tbaa !210
  %cmp21 = icmp eq i32 %8, 5
  br i1 %cmp21, label %if.then22, label %do.cond26

if.then22:                                        ; preds = %lor.lhs.false, %if.end18
  %queue23 = getelementptr inbounds %struct.uvc_streaming.2601, %struct.uvc_streaming.2601* %stream, i32 0, i32 18
  %call24 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue23, %struct.uvc_buffer* %buf.addr.1)
  br label %do.cond26

do.cond26:                                        ; preds = %if.then22, %lor.lhs.false
  %buf.addr.2 = phi %struct.uvc_buffer* [ %call24, %if.then22 ], [ %buf.addr.1, %lor.lhs.false ]
  %cmp27 = icmp eq i32 %call15, -11
  br i1 %cmp27, label %do.body8, label %for.inc

for.inc:                                          ; preds = %do.cond26, %do.body8
  %buf.addr.3 = phi %struct.uvc_buffer* [ %buf.addr.1, %do.body8 ], [ %buf.addr.2, %do.cond26 ]
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @isight_decode(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %__UNIQUE_ID_min1_20 = alloca i32, align 4
  %__UNIQUE_ID_min2_21 = alloca i32, align 4
  %cmp = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp uge i32 %len, 14
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @memcmp(i8* %arrayidx, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @isight_decode.hdr, i32 0, i32 0), i64 12)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %cmp3 = icmp uge i32 %len, 15
  br i1 %cmp3, label %land.lhs.true4, label %if.end12

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %arrayidx5 = getelementptr inbounds i8, i8* %data, i64 3
  %call6 = call i32 @memcmp(i8* %arrayidx5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @isight_decode.hdr, i32 0, i32 0), i64 12)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %do.body, label %if.end12

do.body:                                          ; preds = %land.lhs.true4, %land.lhs.true
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and = and i32 %0, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then9, label %if.end12

if.then9:                                         ; preds = %do.body
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.318, i32 0, i32 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %do.body, %land.lhs.true4, %lor.lhs.false
  %is_header.0 = phi i32 [ 0, %land.lhs.true4 ], [ 0, %lor.lhs.false ], [ 1, %if.then9 ], [ 1, %do.body ]
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  %1 = load i32, i32* %state, align 8, !tbaa !210
  %cmp13 = icmp ne i32 %1, 2
  br i1 %cmp13, label %if.then14, label %if.end27

if.then14:                                        ; preds = %if.end12
  %tobool15 = icmp ne i32 %is_header.0, 0
  br i1 %tobool15, label %if.end25, label %do.body17

do.body17:                                        ; preds = %if.then14
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and18 = and i32 %2, 128
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %cleanup

if.then20:                                        ; preds = %do.body17
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.319, i32 0, i32 0))
  br label %cleanup

if.end25:                                         ; preds = %if.then14
  %state26 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 2, i32* %state26, align 8, !tbaa !210
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.end12
  %cond1 = icmp eq i32 %is_header.0, 0
  br i1 %cond1, label %if.then35, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.end27
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %3 = load i32, i32* %bytesused, align 4, !tbaa !217
  %cmp30 = icmp ne i32 %3, 0
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %land.lhs.true29
  %state32 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 4, i32* %state32, align 8, !tbaa !210
  br label %cleanup

if.end33:                                         ; preds = %land.lhs.true29
  %tobool34 = icmp ne i32 %is_header.0, 0
  br i1 %tobool34, label %cleanup, label %if.then35

if.then35:                                        ; preds = %if.end33, %if.end27
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %4 = load i32, i32* %length, align 8, !tbaa !216
  %bytesused36 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %5 = load i32, i32* %bytesused36, align 4, !tbaa !217
  %sub = sub i32 %4, %5
  %mem37 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %6 = load i8*, i8** %mem37, align 8, !tbaa !215
  %bytesused38 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %7 = load i32, i32* %bytesused38, align 4, !tbaa !217
  %idx.ext = zext i32 %7 to i64
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext
  %8 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #8
  store i32 %len, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %9 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #8
  store i32 %sub, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp39 = icmp eq i32* %__UNIQUE_ID_min1_20, %__UNIQUE_ID_min2_21
  %conv = zext i1 %cmp39 to i32
  %10 = load i32, i32* %__UNIQUE_ID_min1_20, align 4, !tbaa !9
  %11 = load i32, i32* %__UNIQUE_ID_min2_21, align 4, !tbaa !9
  %cmp40 = icmp ult i32 %10, %11
  %12 = load i32, i32* %__UNIQUE_ID_min1_20, align 4
  %13 = load i32, i32* %__UNIQUE_ID_min2_21, align 4
  %cond = select i1 %cmp40, i32 %12, i32 %13
  %14 = bitcast i32* %__UNIQUE_ID_min2_21 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #8
  %15 = bitcast i32* %__UNIQUE_ID_min1_20 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %15) #8
  %conv42 = zext i32 %cond to i64
  %call43 = call i8* @__memcpy(i8* %add.ptr, i8* %data, i64 %conv42)
  %bytesused44 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %16 = load i32, i32* %bytesused44, align 4, !tbaa !217
  %add = add i32 %16, %cond
  store i32 %add, i32* %bytesused44, align 4, !tbaa !217
  %cmp45 = icmp ugt i32 %len, %sub
  br i1 %cmp45, label %do.body53, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.then35
  %bytesused48 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %17 = load i32, i32* %bytesused48, align 4, !tbaa !217
  %length49 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %18 = load i32, i32* %length49, align 8, !tbaa !216
  %cmp50 = icmp eq i32 %17, %18
  br i1 %cmp50, label %do.body53, label %cleanup

do.body53:                                        ; preds = %lor.lhs.false47, %if.then35
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !9
  %and54 = and i32 %19, 128
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %do.end60

if.then56:                                        ; preds = %do.body53
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.320, i32 0, i32 0))
  br label %do.end60

do.end60:                                         ; preds = %if.then56, %do.body53
  %state61 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 4, i32* %state61, align 8, !tbaa !210
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %lor.lhs.false47, %if.end33, %if.then31, %if.then20, %do.body17, %entry
  %retval.0 = phi i32 [ -11, %if.then31 ], [ 0, %entry ], [ 0, %if.then20 ], [ 0, %do.body17 ], [ 0, %lor.lhs.false47 ], [ 0, %do.end60 ], [ 0, %if.end33 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_init_stream(%struct.uvc_streaming* %stream) #0 {
entry:
  %dir_name = alloca [32 x i8], align 16
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !133
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !11
  %2 = bitcast [32 x i8]* %dir_name to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #8
  %3 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !74
  %cmp = icmp eq %struct.dentry* %3, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 9
  %4 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !341
  %busnum = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %4, i32 0, i32 1
  %5 = load i32, i32* %busnum, align 8, !tbaa !575
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 0
  %6 = load i32, i32* %devnum, align 8, !tbaa !149
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.323, i32 0, i32 0), i32 %5, i32 %6)
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %7 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !74
  %call3 = call %struct.dentry* @debugfs_create_dir(i8* %arraydecay2, %struct.dentry* %7)
  %8 = bitcast %struct.dentry* %call3 to i8*
  %call4 = call zeroext i1 @IS_ERR_OR_NULL(i8* %8)
  br i1 %call4, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.324, i32 0, i32 0), i8* %arraydecay6)
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %debugfs_dir = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  store %struct.dentry* %call3, %struct.dentry** %debugfs_dir, align 8, !tbaa !576
  %debugfs_dir9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %9 = load %struct.dentry*, %struct.dentry** %debugfs_dir9, align 8, !tbaa !576
  %10 = bitcast %struct.uvc_streaming* %stream to i8*
  %call10 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.325, i32 0, i32 0), i16 zeroext 292, %struct.dentry* %9, i8* %10, %struct.file_operations* @uvc_debugfs_stats_fops)
  %11 = bitcast %struct.dentry* %call10 to i8*
  %call11 = call zeroext i1 @IS_ERR_OR_NULL(i8* %11)
  br i1 %call11, label %if.then12, label %cleanup

if.then12:                                        ; preds = %if.end8
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3.326, i32 0, i32 0))
  call void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %stream)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end8, %if.then5, %entry
  %12 = bitcast [32 x i8]* %dir_name to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %12) #8
  ret void
}

declare %struct.dentry* @debugfs_create_dir(i8*, %struct.dentry*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @IS_ERR_OR_NULL(i8* %ptr) #1 {
entry:
  %tobool = icmp ne i8* %ptr, null
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot2 = xor i1 %lnot1, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool3 = icmp ne i64 %expval, 0
  br i1 %tobool3, label %lor.end, label %lor.rhs

lor.rhs:                                          ; preds = %entry
  %0 = ptrtoint i8* %ptr to i64
  %1 = inttoptr i64 %0 to i8*
  %2 = ptrtoint i8* %1 to i64
  %cmp = icmp uge i64 %2, -4095
  %lnot5 = xor i1 %cmp, true
  %lnot7 = xor i1 %lnot5, true
  %lnot.ext8 = zext i1 %lnot7 to i32
  %conv9 = sext i32 %lnot.ext8 to i64
  %expval10 = call i64 @llvm.expect.i64(i64 %conv9, i64 0)
  %tobool11 = icmp ne i64 %expval10, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %3 = phi i1 [ true, %entry ], [ %tobool11, %lor.rhs ]
  ret i1 %3
}

declare %struct.dentry* @debugfs_create_file(i8*, i16 zeroext, %struct.dentry*, i8*, %struct.file_operations*) #2

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %stream) #0 {
entry:
  %debugfs_dir = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %0 = load %struct.dentry*, %struct.dentry** %debugfs_dir, align 8, !tbaa !576
  %cmp = icmp eq %struct.dentry* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %debugfs_dir1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %1 = load %struct.dentry*, %struct.dentry** %debugfs_dir1, align 8, !tbaa !576
  call void @debugfs_remove_recursive(%struct.dentry* %1)
  %debugfs_dir2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  store %struct.dentry* null, %struct.dentry** %debugfs_dir2, align 8, !tbaa !576
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare void @debugfs_remove_recursive(%struct.dentry*) #2

declare i64 @no_llseek(%struct.file*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @uvc_debugfs_stats_read(%struct.file* %file, i8* %user_buf, i64 %nbytes, i64* %ppos) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  %1 = bitcast i8* %0 to %struct.uvc_debugfs_buffer*
  %data = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i32 0, i32 0
  %count = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %1, i32 0, i32 0
  %2 = load i64, i64* %count, align 8, !tbaa !577
  %call = call i64 @simple_read_from_buffer(i8* %user_buf, i64 %nbytes, i64* %ppos, i8* %arraydecay, i64 %2)
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_debugfs_stats_open(%struct.inode* %inode, %struct.file* %file) #0 {
entry:
  %i_private = getelementptr inbounds %struct.inode, %struct.inode* %inode, i32 0, i32 50
  %0 = load i8*, i8** %i_private, align 8, !tbaa !579
  %1 = bitcast i8* %0 to %struct.uvc_streaming*
  %call = call i8* @kmalloc.329(i64 1032, i32 20971712)
  %2 = bitcast i8* %call to %struct.uvc_debugfs_buffer*
  %cmp = icmp eq %struct.uvc_debugfs_buffer* %2, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %2, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i32 0, i32 0
  %call1 = call i64 bitcast (i64 (%struct.uvc_streaming.870*, i8*, i64)* @uvc_video_stats_dump to i64 (%struct.uvc_streaming*, i8*, i64)*)(%struct.uvc_streaming* %1, i8* %arraydecay, i64 1024)
  %count = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %2, i32 0, i32 0
  store i64 %call1, i64* %count, align 8, !tbaa !577
  %3 = bitcast %struct.uvc_debugfs_buffer* %2 to i8*
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* %3, i8** %private_data, align 8, !tbaa !230
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_debugfs_stats_release(%struct.inode* %inode, %struct.file* %file) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !230
  call void @kfree(i8* %0)
  %private_data1 = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* null, i8** %private_data1, align 8, !tbaa !230
  ret i32 0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.329(i64 %size, i32 %flags) #3 {
entry:
  %call = call noalias i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare i64 @simple_read_from_buffer(i8*, i64, i64*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_init() #0 {
entry:
  %0 = load %struct.dentry*, %struct.dentry** @usb_debug_root, align 8, !tbaa !74
  %call = call %struct.dentry* @debugfs_create_dir(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.332, i32 0, i32 0), %struct.dentry* %0)
  %1 = bitcast %struct.dentry* %call to i8*
  %call1 = call zeroext i1 @IS_ERR_OR_NULL(i8* %1)
  br i1 %call1, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5.333, i32 0, i32 0))
  br label %cleanup.cont

if.end:                                           ; preds = %entry
  store %struct.dentry* %call, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !74
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %if.then
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_cleanup() #0 {
entry:
  %0 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !74
  %cmp = icmp ne %struct.dentry* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !74
  call void @debugfs_remove_recursive(%struct.dentry* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_mc_cleanup_entity(%struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp ne i32 %and, 257
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity2 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev, i32 0, i32 0
  call void @media_entity_cleanup(%struct.media_entity* %entity2)
  br label %if.end8

if.else:                                          ; preds = %entry
  %vdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %1 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !122
  %cmp3 = icmp ne %struct.video_device* %1, null
  br i1 %cmp3, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.else
  %vdev6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %2 = load %struct.video_device*, %struct.video_device** %vdev6, align 8, !tbaa !122
  %entity7 = getelementptr inbounds %struct.video_device, %struct.video_device* %2, i32 0, i32 0
  call void @media_entity_cleanup(%struct.media_entity* %entity7)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.else, %if.then
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @media_entity_cleanup(%struct.media_entity* %entity) #1 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_mc_register_entities(%struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain6.sink = phi %struct.list_head* [ %chain6, %for.inc ], [ %entities, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !74
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr9 to %struct.uvc_entity*
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @uvc_mc_init_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %2)
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !120
  %conv = zext i8 %3 to i32
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.340, i32 0, i32 0), i32 %conv)
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %chain6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entities11 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc29, %for.end
  %chain31.sink = phi %struct.list_head* [ %chain31, %for.inc29 ], [ %entities11, %for.end ]
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain31.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next32, align 8, !tbaa !74
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr34 = getelementptr inbounds i8, i8* %5, i64 -16
  %6 = bitcast i8* %add.ptr34 to %struct.uvc_entity*
  %chain16 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  %entities17 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp18 = icmp ne %struct.list_head* %chain16, %entities17
  br i1 %cmp18, label %for.body20, label %cleanup

for.body20:                                       ; preds = %for.cond15
  %call21 = call i32 @uvc_mc_create_links(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %6)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %for.body20
  %id25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 3
  %7 = load i8, i8* %id25, align 4, !tbaa !120
  %conv26 = zext i8 %7 to i32
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.1.341, i32 0, i32 0), i32 %conv26)
  br label %cleanup

for.inc29:                                        ; preds = %for.body20
  %chain31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  br label %for.cond15

cleanup:                                          ; preds = %if.then24, %for.cond15, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call21, %if.then24 ], [ 0, %for.cond15 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_mc_init_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp ne i32 %and, 257
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  call void @v4l2_subdev_init(%struct.v4l2_subdev* %subdev, %struct.v4l2_subdev_ops* @uvc_subdev_ops)
  %subdev2 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %name = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev2, i32 0, i32 9
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 5
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i32 0, i32 0
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay4, i64 32)
  %subdev5 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev5, i32 0, i32 0
  %num_pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %1 = load i32, i32* %num_pads, align 8, !tbaa !137
  %conv7 = trunc i32 %1 to i16
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %2 = load %struct.media_pad*, %struct.media_pad** %pads, align 8, !tbaa !171
  %call8 = call i32 @media_entity_pads_init(%struct.media_entity* %entity6, i16 zeroext %conv7, %struct.media_pad* %2)
  %cmp9 = icmp slt i32 %call8, 0
  br i1 %cmp9, label %cleanup, label %if.end

if.end:                                           ; preds = %if.then
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !136
  %vdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 10
  %subdev12 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %call13 = call i32 @v4l2_device_register_subdev(%struct.v4l2_device* %vdev, %struct.v4l2_subdev* %subdev12)
  br label %cleanup

if.else:                                          ; preds = %entry
  %vdev14 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %4 = load %struct.video_device*, %struct.video_device** %vdev14, align 8, !tbaa !122
  %cmp15 = icmp ne %struct.video_device* %4, null
  br i1 %cmp15, label %if.then17, label %cleanup

if.then17:                                        ; preds = %if.else
  %vdev18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %5 = load %struct.video_device*, %struct.video_device** %vdev18, align 8, !tbaa !122
  %entity19 = getelementptr inbounds %struct.video_device, %struct.video_device* %5, i32 0, i32 0
  %num_pads20 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %6 = load i32, i32* %num_pads20, align 8, !tbaa !137
  %conv21 = trunc i32 %6 to i16
  %pads22 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %7 = load %struct.media_pad*, %struct.media_pad** %pads22, align 8, !tbaa !171
  %call23 = call i32 @media_entity_pads_init(%struct.media_entity* %entity19, i16 zeroext %conv21, %struct.media_pad* %7)
  %flags = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 2
  %8 = load i32, i32* %flags, align 8, !tbaa !119
  %and24 = and i32 %8, 1
  %tobool = icmp ne i32 %and24, 0
  br i1 %tobool, label %if.then25, label %cleanup

if.then25:                                        ; preds = %if.then17
  %vdev26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %9 = load %struct.video_device*, %struct.video_device** %vdev26, align 8, !tbaa !122
  %entity27 = getelementptr inbounds %struct.video_device, %struct.video_device* %9, i32 0, i32 0
  %flags28 = getelementptr inbounds %struct.media_entity, %struct.media_entity* %entity27, i32 0, i32 4
  %10 = load i64, i64* %flags28, align 8, !tbaa !583
  %or = or i64 %10, 1
  store i64 %or, i64* %flags28, align 8, !tbaa !583
  br label %cleanup

cleanup:                                          ; preds = %if.then25, %if.then17, %if.else, %if.end, %if.then
  %retval.0 = phi i32 [ %call8, %if.then ], [ %call13, %if.end ], [ %call23, %if.then25 ], [ %call23, %if.then17 ], [ 0, %if.else ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_mc_create_links(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !114
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp eq i32 %and, 257
  br i1 %cmp, label %cond.true, label %cond.false5

cond.true:                                        ; preds = %entry
  %vdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %1 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !122
  %tobool = icmp ne %struct.video_device* %1, null
  br i1 %tobool, label %cond.true2, label %cond.end7

cond.true2:                                       ; preds = %cond.true
  %vdev3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %2 = load %struct.video_device*, %struct.video_device** %vdev3, align 8, !tbaa !122
  %entity4 = getelementptr inbounds %struct.video_device, %struct.video_device* %2, i32 0, i32 0
  br label %cond.end7

cond.false5:                                      ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev, i32 0, i32 0
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false5, %cond.true2, %cond.true
  %cond8 = phi %struct.media_entity* [ %entity6, %cond.false5 ], [ %entity4, %cond.true2 ], [ null, %cond.true ]
  %cmp9 = icmp eq %struct.media_entity* %cond8, null
  br i1 %cmp9, label %cleanup59, label %if.end

if.end:                                           ; preds = %cond.end7
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %retval.0 = phi i32 [ undef, %if.end ], [ %retval.1, %for.inc ]
  %num_pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %3 = load i32, i32* %num_pads, align 8, !tbaa !137
  %cmp11 = icmp ult i32 %i.0, %3
  br i1 %cmp11, label %for.body, label %cleanup59

for.body:                                         ; preds = %for.cond
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %4 = load %struct.media_pad*, %struct.media_pad** %pads, align 8, !tbaa !171
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.media_pad, %struct.media_pad* %4, i64 %idxprom
  %flags13 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx, i32 0, i32 3
  %5 = load i64, i64* %flags13, align 8, !tbaa !172
  %and14 = and i64 %5, 1
  %tobool15 = icmp ne i64 %and14, 0
  br i1 %tobool15, label %if.end17, label %cleanup

if.end17:                                         ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %6 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !136
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 13
  %7 = load i8*, i8** %baSourceID, align 8, !tbaa !138
  %idxprom18 = zext i32 %i.0 to i64
  %arrayidx19 = getelementptr inbounds i8, i8* %7, i64 %idxprom18
  %8 = load i8, i8* %arrayidx19, align 1, !tbaa !104
  %conv20 = zext i8 %8 to i32
  %call = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %6, i32 %conv20)
  %cmp21 = icmp eq %struct.uvc_entity* %call, null
  br i1 %cmp21, label %cleanup, label %if.end24

if.end24:                                         ; preds = %if.end17
  %type25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %9 = load i16, i16* %type25, align 2, !tbaa !114
  %conv26 = zext i16 %9 to i32
  %and27 = and i32 %conv26, 32767
  %cmp28 = icmp eq i32 %and27, 257
  br i1 %cmp28, label %cond.true30, label %cond.false39

cond.true30:                                      ; preds = %if.end24
  %vdev31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 6
  %10 = load %struct.video_device*, %struct.video_device** %vdev31, align 8, !tbaa !122
  %tobool32 = icmp ne %struct.video_device* %10, null
  br i1 %tobool32, label %cond.true33, label %cond.end42

cond.true33:                                      ; preds = %cond.true30
  %vdev34 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 6
  %11 = load %struct.video_device*, %struct.video_device** %vdev34, align 8, !tbaa !122
  %entity35 = getelementptr inbounds %struct.video_device, %struct.video_device* %11, i32 0, i32 0
  br label %cond.end42

cond.false39:                                     ; preds = %if.end24
  %subdev40 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 7
  %entity41 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev40, i32 0, i32 0
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false39, %cond.true33, %cond.true30
  %cond43 = phi %struct.media_entity* [ %entity41, %cond.false39 ], [ %entity35, %cond.true33 ], [ null, %cond.true30 ]
  %cmp44 = icmp eq %struct.media_entity* %cond43, null
  br i1 %cmp44, label %cleanup, label %if.end47

if.end47:                                         ; preds = %cond.end42
  %num_pads48 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 8
  %12 = load i32, i32* %num_pads48, align 8, !tbaa !137
  %sub = sub i32 %12, 1
  %conv49 = trunc i32 %sub to i8
  %conv50 = zext i8 %conv49 to i16
  %conv51 = trunc i32 %i.0 to i16
  %call52 = call i32 @media_create_pad_link(%struct.media_entity* %cond43, i16 zeroext %conv50, %struct.media_entity* %cond8, i16 zeroext %conv51, i32 3)
  %cmp53 = icmp slt i32 %call52, 0
  %. = select i1 %cmp53, i32 1, i32 0
  %call52.retval.0 = select i1 %cmp53, i32 %call52, i32 %retval.0
  br label %cleanup

cleanup:                                          ; preds = %if.end47, %cond.end42, %if.end17, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ 1, %if.end17 ], [ 4, %cond.end42 ], [ %., %if.end47 ]
  %retval.1 = phi i32 [ %retval.0, %for.body ], [ -22, %if.end17 ], [ %retval.0, %cond.end42 ], [ %call52.retval.0, %if.end47 ]
  switch i32 %cleanup.dest.slot.0, label %cleanup59 [
    i32 0, label %for.inc
    i32 4, label %for.inc
  ]

for.inc:                                          ; preds = %cleanup, %cleanup
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup59:                                        ; preds = %cleanup, %for.cond, %cond.end7
  %retval.2 = phi i32 [ 0, %cond.end7 ], [ 0, %for.cond ], [ %retval.1, %cleanup ]
  ret i32 %retval.2
}

declare i32 @media_create_pad_link(%struct.media_entity*, i16 zeroext, %struct.media_entity*, i16 zeroext, i32) #2

declare void @v4l2_subdev_init(%struct.v4l2_subdev*, %struct.v4l2_subdev_ops*) #2

declare i32 @media_entity_pads_init(%struct.media_entity*, i16 zeroext, %struct.media_pad*) #2

declare i32 @v4l2_device_register_subdev(%struct.v4l2_device*, %struct.v4l2_subdev*) #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "counting-function"="mcount" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 5.0.1 (tags/RELEASE_500/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!3, !4, i64 2}
!3 = !{!"usb_device_id", !4, i64 0, !4, i64 2, !4, i64 4, !4, i64 6, !4, i64 8, !5, i64 10, !5, i64 11, !5, i64 12, !5, i64 13, !5, i64 14, !5, i64 15, !5, i64 16, !7, i64 24}
!4 = !{!"short", !5, i64 0}
!5 = !{!"omnipotent char", !6, i64 0}
!6 = !{!"Simple C/C++ TBAA"}
!7 = !{!"long", !5, i64 0}
!8 = !{!3, !4, i64 4}
!9 = !{!10, !10, i64 0}
!10 = !{!"int", !5, i64 0}
!11 = !{!12, !13, i64 0}
!12 = !{!"uvc_device", !13, i64 0, !13, i64 8, !7, i64 16, !10, i64 24, !10, i64 28, !5, i64 32, !14, i64 64, !10, i64 224, !18, i64 228, !21, i64 232, !27, i64 984, !4, i64 1176, !10, i64 1180, !19, i64 1184, !19, i64 1200, !19, i64 1216, !18, i64 1232, !13, i64 1240, !13, i64 1248, !13, i64 1256, !13, i64 1264, !5, i64 1272}
!13 = !{!"any pointer", !5, i64 0}
!14 = !{!"mutex", !15, i64 0, !16, i64 8, !17, i64 80, !19, i64 88, !13, i64 104, !20, i64 112}
!15 = !{!"", !7, i64 0}
!16 = !{!"spinlock", !5, i64 0}
!17 = !{!"optimistic_spin_queue", !18, i64 0}
!18 = !{!"", !10, i64 0}
!19 = !{!"list_head", !13, i64 0, !13, i64 8}
!20 = !{!"lockdep_map", !13, i64 0, !5, i64 8, !13, i64 24, !10, i64 32, !7, i64 40}
!21 = !{!"media_device", !13, i64 0, !13, i64 8, !5, i64 16, !5, i64 48, !5, i64 80, !5, i64 120, !10, i64 152, !10, i64 156, !22, i64 160, !10, i64 168, !23, i64 176, !10, i64 192, !19, i64 200, !19, i64 216, !19, i64 232, !19, i64 248, !19, i64 264, !14, i64 280, !25, i64 440, !13, i64 720, !13, i64 728, !13, i64 736, !13, i64 744}
!22 = !{!"long long", !5, i64 0}
!23 = !{!"ida", !24, i64 0}
!24 = !{!"radix_tree_root", !10, i64 0, !13, i64 8}
!25 = !{!"media_graph", !5, i64 0, !26, i64 256, !10, i64 272}
!26 = !{!"media_entity_enum", !13, i64 0, !10, i64 8}
!27 = !{!"v4l2_device", !13, i64 0, !13, i64 8, !19, i64 16, !16, i64 32, !5, i64 104, !13, i64 144, !13, i64 152, !28, i64 160, !29, i64 176, !13, i64 184}
!28 = !{!"v4l2_prio_state", !5, i64 0}
!29 = !{!"kref", !30, i64 0}
!30 = !{!"refcount_struct", !18, i64 0}
!31 = !{!12, !13, i64 8}
!32 = !{!33, !13, i64 8}
!33 = !{!"usb_interface", !13, i64 0, !13, i64 8, !10, i64 16, !13, i64 24, !10, i64 32, !5, i64 36, !10, i64 40, !10, i64 40, !10, i64 40, !10, i64 40, !10, i64 40, !10, i64 40, !10, i64 40, !10, i64 40, !34, i64 48, !13, i64 1472, !18, i64 1480, !37, i64 1488}
!34 = !{!"device", !13, i64 0, !13, i64 8, !35, i64 16, !13, i64 280, !13, i64 288, !14, i64 296, !13, i64 456, !13, i64 464, !13, i64 472, !13, i64 480, !40, i64 488, !41, i64 528, !13, i64 1104, !13, i64 1112, !13, i64 1120, !19, i64 1128, !10, i64 1144, !13, i64 1152, !13, i64 1160, !22, i64 1168, !7, i64 1176, !13, i64 1184, !19, i64 1192, !13, i64 1208, !13, i64 1216, !46, i64 1224, !13, i64 1232, !13, i64 1240, !10, i64 1248, !10, i64 1252, !16, i64 1256, !19, i64 1328, !47, i64 1344, !13, i64 1376, !13, i64 1384, !13, i64 1392, !13, i64 1400, !13, i64 1408, !43, i64 1416, !43, i64 1416}
!35 = !{!"kobject", !13, i64 0, !19, i64 8, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !29, i64 56, !36, i64 64, !10, i64 256, !10, i64 256, !10, i64 256, !10, i64 256, !10, i64 256}
!36 = !{!"delayed_work", !37, i64 0, !38, i64 80, !13, i64 176, !10, i64 184}
!37 = !{!"work_struct", !15, i64 0, !19, i64 8, !13, i64 24, !20, i64 32}
!38 = !{!"timer_list", !39, i64 0, !7, i64 16, !13, i64 24, !7, i64 32, !10, i64 40, !20, i64 48}
!39 = !{!"hlist_node", !13, i64 0, !13, i64 8}
!40 = !{!"dev_links_info", !19, i64 0, !19, i64 16, !5, i64 32}
!41 = !{!"dev_pm_info", !42, i64 0, !10, i64 4, !10, i64 4, !43, i64 4, !43, i64 4, !43, i64 4, !43, i64 4, !43, i64 4, !43, i64 4, !43, i64 5, !16, i64 8, !19, i64 80, !44, i64 96, !13, i64 192, !43, i64 200, !43, i64 200, !43, i64 200, !38, i64 208, !7, i64 304, !37, i64 312, !45, i64 392, !13, i64 480, !18, i64 488, !18, i64 492, !10, i64 496, !10, i64 496, !10, i64 496, !10, i64 496, !10, i64 496, !10, i64 496, !43, i64 497, !10, i64 497, !10, i64 497, !10, i64 497, !10, i64 497, !10, i64 497, !10, i64 500, !5, i64 504, !5, i64 508, !10, i64 512, !10, i64 516, !7, i64 520, !7, i64 528, !7, i64 536, !7, i64 544, !13, i64 552, !13, i64 560, !13, i64 568}
!42 = !{!"pm_message", !10, i64 0}
!43 = !{!"_Bool", !5, i64 0}
!44 = !{!"completion", !10, i64 0, !45, i64 8}
!45 = !{!"__wait_queue_head", !16, i64 0, !19, i64 72}
!46 = !{!"dev_archdata", !13, i64 0}
!47 = !{!"klist_node", !13, i64 0, !19, i64 8, !29, i64 24}
!48 = !{!49, !5, i64 2}
!49 = !{!"usb_host_interface", !50, i64 0, !10, i64 12, !13, i64 16, !13, i64 24, !13, i64 32}
!50 = !{!"usb_interface_descriptor", !5, i64 0, !5, i64 1, !5, i64 2, !5, i64 3, !5, i64 4, !5, i64 5, !5, i64 6, !5, i64 7, !5, i64 8}
!51 = !{!12, !10, i64 28}
!52 = !{!3, !7, i64 24}
!53 = !{!12, !10, i64 24}
!54 = !{!55, !13, i64 1904}
!55 = !{!"usb_device", !10, i64 0, !5, i64 4, !10, i64 20, !5, i64 24, !5, i64 28, !13, i64 32, !10, i64 40, !5, i64 44, !13, i64 56, !13, i64 64, !56, i64 72, !34, i64 152, !60, i64 1576, !13, i64 1600, !13, i64 1608, !13, i64 1616, !5, i64 1624, !5, i64 1752, !13, i64 1880, !4, i64 1888, !5, i64 1890, !5, i64 1891, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1892, !10, i64 1893, !10, i64 1893, !10, i64 1893, !10, i64 1893, !10, i64 1893, !10, i64 1896, !13, i64 1904, !13, i64 1912, !13, i64 1920, !19, i64 1928, !10, i64 1944, !10, i64 1948, !18, i64 1952, !7, i64 1960, !7, i64 1968, !10, i64 1976, !10, i64 1976, !10, i64 1976, !13, i64 1984, !10, i64 1992, !5, i64 1996, !61, i64 2000, !62, i64 2008, !62, i64 2024, !10, i64 2040}
!56 = !{!"usb_host_endpoint", !57, i64 0, !58, i64 9, !59, i64 15, !19, i64 24, !13, i64 40, !13, i64 48, !13, i64 56, !10, i64 64, !10, i64 68, !10, i64 72}
!57 = !{!"usb_endpoint_descriptor", !5, i64 0, !5, i64 1, !5, i64 2, !5, i64 3, !4, i64 4, !5, i64 6, !5, i64 7, !5, i64 8}
!58 = !{!"usb_ss_ep_comp_descriptor", !5, i64 0, !5, i64 1, !5, i64 2, !5, i64 3, !4, i64 4}
!59 = !{!"usb_ssp_isoc_ep_comp_descriptor", !5, i64 0, !5, i64 1, !4, i64 2, !10, i64 4}
!60 = !{!"usb_device_descriptor", !5, i64 0, !5, i64 1, !4, i64 2, !5, i64 4, !5, i64 5, !5, i64 6, !5, i64 7, !4, i64 8, !4, i64 10, !4, i64 12, !5, i64 14, !5, i64 15, !5, i64 16, !5, i64 17}
!61 = !{!"usb2_lpm_parameters", !10, i64 0, !10, i64 4}
!62 = !{!"usb3_lpm_parameters", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12}
!63 = !{!55, !4, i64 1584}
!64 = !{!55, !4, i64 1586}
!65 = !{!12, !4, i64 1176}
!66 = !{!12, !13, i64 232}
!67 = !{!55, !13, i64 1920}
!68 = !{!55, !4, i64 1588}
!69 = !{!12, !10, i64 384}
!70 = !{!12, !10, i64 388}
!71 = !{!12, !13, i64 992}
!72 = !{!49, !5, i64 6}
!73 = !{!12, !10, i64 224}
!74 = !{!13, !13, i64 0}
!75 = !{!76, !13, i64 2192}
!76 = !{!"uvc_streaming", !19, i64 0, !13, i64 16, !77, i64 24, !13, i64 2176, !18, i64 2184, !13, i64 2192, !10, i64 2200, !4, i64 2204, !81, i64 2208, !5, i64 2232, !10, i64 2236, !13, i64 2240, !82, i64 2248, !13, i64 2288, !13, i64 2296, !13, i64 2304, !14, i64 2312, !10, i64 2472, !83, i64 2480, !13, i64 3576, !85, i64 3584, !5, i64 3856, !5, i64 3896, !5, i64 3936, !10, i64 3976, !10, i64 3980, !5, i64 3984, !13, i64 3992, !86, i64 4000, !90, i64 4152}
!77 = !{!"video_device", !78, i64 0, !13, i64 128, !80, i64 136, !13, i64 424, !10, i64 432, !34, i64 440, !13, i64 1864, !13, i64 1872, !13, i64 1880, !13, i64 1888, !13, i64 1896, !13, i64 1904, !5, i64 1912, !10, i64 1944, !10, i64 1948, !10, i64 1952, !4, i64 1956, !7, i64 1960, !10, i64 1968, !16, i64 1976, !19, i64 2048, !10, i64 2064, !22, i64 2072, !13, i64 2080, !13, i64 2088, !5, i64 2096, !5, i64 2120, !13, i64 2144}
!78 = !{!"media_entity", !79, i64 0, !13, i64 32, !5, i64 40, !10, i64 44, !7, i64 48, !4, i64 56, !4, i64 58, !4, i64 60, !10, i64 64, !13, i64 72, !19, i64 80, !13, i64 96, !10, i64 104, !10, i64 108, !13, i64 112, !5, i64 120}
!79 = !{!"media_gobj", !13, i64 0, !10, i64 8, !19, i64 16}
!80 = !{!"media_pipeline", !10, i64 0, !25, i64 8}
!81 = !{!"uvc_streaming_header", !5, i64 0, !5, i64 1, !5, i64 2, !5, i64 3, !13, i64 8, !5, i64 16, !5, i64 17, !5, i64 18, !5, i64 19}
!82 = !{!"uvc_streaming_control", !4, i64 0, !5, i64 2, !5, i64 3, !10, i64 4, !4, i64 8, !4, i64 10, !4, i64 12, !4, i64 14, !4, i64 16, !10, i64 18, !10, i64 22, !10, i64 26, !5, i64 30, !5, i64 31, !5, i64 32, !5, i64 33}
!83 = !{!"uvc_video_queue", !84, i64 0, !14, i64 840, !10, i64 1000, !10, i64 1004, !16, i64 1008, !19, i64 1080}
!84 = !{!"vb2_queue", !10, i64 0, !10, i64 4, !13, i64 8, !7, i64 16, !10, i64 24, !10, i64 24, !10, i64 24, !10, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !13, i64 56, !13, i64 64, !13, i64 72, !10, i64 80, !10, i64 84, !10, i64 88, !10, i64 92, !14, i64 96, !10, i64 256, !5, i64 264, !10, i64 520, !19, i64 528, !10, i64 544, !18, i64 548, !19, i64 552, !16, i64 568, !45, i64 640, !5, i64 728, !10, i64 792, !10, i64 792, !10, i64 792, !10, i64 792, !10, i64 792, !10, i64 792, !10, i64 792, !10, i64 792, !13, i64 800, !13, i64 808, !10, i64 816, !10, i64 820, !10, i64 824, !10, i64 828, !10, i64 832}
!85 = !{!"", !5, i64 0, !10, i64 256, !10, i64 260, !10, i64 264, !10, i64 268}
!86 = !{!"", !87, i64 0, !88, i64 64}
!87 = !{!"uvc_stats_frame", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !10, i64 32, !43, i64 36, !43, i64 37, !10, i64 40, !10, i64 44, !10, i64 48, !4, i64 52, !10, i64 56}
!88 = !{!"uvc_stats_stream", !89, i64 0, !89, i64 16, !10, i64 32, !10, i64 36, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !10, i64 56, !10, i64 60, !10, i64 64, !10, i64 68, !10, i64 72, !10, i64 76, !10, i64 80, !10, i64 84}
!89 = !{!"timespec", !7, i64 0, !7, i64 8}
!90 = !{!"uvc_clock", !13, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !4, i64 20, !4, i64 22, !16, i64 24}
!91 = !{!76, !10, i64 2480}
!92 = !{!34, !13, i64 480}
!93 = !{i32 -2146896336, i32 -2146896297, i32 -2146896276, i32 -2146896239, i32 -2146896216, i32 -2146896346}
!94 = !{i32 -2146895334, i32 -2146895295, i32 -2146895274, i32 -2146895237, i32 -2146895214, i32 -2146895205, i32 -2146895161}
!95 = !{!43, !43, i64 0}
!96 = !{i8 0, i8 2}
!97 = !{!12, !13, i64 984}
!98 = !{!12, !13, i64 240}
!99 = !{!19, !13, i64 0}
!100 = !{!76, !13, i64 2240}
!101 = !{!76, !13, i64 2216}
!102 = !{!7, !7, i64 0}
!103 = !{!33, !13, i64 48}
!104 = !{!5, !5, i64 0}
!105 = !{!19, !13, i64 8}
!106 = !{!49, !13, i64 16}
!107 = !{!49, !10, i64 12}
!108 = !{!49, !5, i64 4}
!109 = !{!49, !13, i64 24}
!110 = !{!57, !4, i64 4}
!111 = !{!57, !5, i64 6}
!112 = !{!57, !5, i64 2}
!113 = !{!12, !13, i64 1240}
!114 = !{!115, !4, i64 38}
!115 = !{!"uvc_entity", !19, i64 0, !19, i64 16, !10, i64 32, !5, i64 36, !4, i64 38, !5, i64 40, !13, i64 104, !116, i64 112, !10, i64 424, !10, i64 428, !13, i64 432, !5, i64 440, !5, i64 480, !13, i64 488, !10, i64 496, !13, i64 504}
!116 = !{!"v4l2_subdev", !78, i64 0, !19, i64 128, !13, i64 144, !43, i64 152, !10, i64 156, !13, i64 160, !13, i64 168, !13, i64 176, !13, i64 184, !5, i64 192, !10, i64 224, !13, i64 232, !13, i64 240, !13, i64 248, !13, i64 256, !13, i64 264, !19, i64 272, !13, i64 288, !13, i64 296, !13, i64 304}
!117 = !{!115, !13, i64 16}
!118 = !{!115, !13, i64 24}
!119 = !{!115, !10, i64 32}
!120 = !{!115, !5, i64 36}
!121 = !{!76, !13, i64 2176}
!122 = !{!115, !13, i64 104}
!123 = !{!76, !5, i64 2210}
!124 = !{!76, !5, i64 2232}
!125 = !{!77, !13, i64 1872}
!126 = !{!77, !13, i64 424}
!127 = !{!77, !13, i64 2088}
!128 = !{!77, !13, i64 2080}
!129 = !{!77, !13, i64 1904}
!130 = !{!77, !10, i64 1948}
!131 = !{!132, !10, i64 232}
!132 = !{!"uvc_video_chain", !13, i64 0, !19, i64 8, !19, i64 24, !13, i64 40, !13, i64 48, !14, i64 56, !28, i64 216, !10, i64 232}
!133 = !{!76, !13, i64 16}
!134 = !{!135, !13, i64 0}
!135 = !{!"v4l2_file_operations", !13, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !13, i64 56, !13, i64 64, !13, i64 72}
!136 = !{!132, !13, i64 0}
!137 = !{!115, !10, i64 424}
!138 = !{!115, !13, i64 488}
!139 = !{!115, !5, i64 480}
!140 = !{!132, !13, i64 40}
!141 = !{!132, !13, i64 48}
!142 = !{!4, !4, i64 0}
!143 = !{!22, !22, i64 0}
!144 = !{i32 -2146964708}
!145 = !{i32 -2146964670}
!146 = !{i32 -2146964041}
!147 = !{i32 -2146964003}
!148 = !{!115, !13, i64 0}
!149 = !{!55, !10, i64 0}
!150 = !{!12, !10, i64 1180}
!151 = !{!57, !5, i64 3}
!152 = !{!33, !13, i64 0}
!153 = !{!76, !10, i64 2200}
!154 = !{!56, !10, i64 64}
!155 = !{!56, !13, i64 56}
!156 = !{!76, !5, i64 2208}
!157 = !{!76, !5, i64 2209}
!158 = !{!76, !5, i64 2224}
!159 = !{!76, !5, i64 2225}
!160 = !{!76, !5, i64 2226}
!161 = !{!76, !5, i64 2227}
!162 = !{!76, !5, i64 2211}
!163 = !{!76, !10, i64 2236}
!164 = !{!165, !13, i64 48}
!165 = !{!"uvc_format", !5, i64 0, !5, i64 1, !5, i64 2, !5, i64 3, !10, i64 4, !10, i64 8, !5, i64 12, !10, i64 44, !13, i64 48}
!166 = !{!165, !10, i64 44}
!167 = !{!33, !10, i64 16}
!168 = !{!56, !4, i64 4}
!169 = !{!76, !4, i64 2204}
!170 = !{!115, !10, i64 428}
!171 = !{!115, !13, i64 432}
!172 = !{!173, !7, i64 48}
!173 = !{!"media_pad", !79, i64 0, !13, i64 32, !4, i64 40, !7, i64 48}
!174 = !{!165, !5, i64 0}
!175 = !{!165, !5, i64 1}
!176 = !{!177, !13, i64 0}
!177 = !{!"uvc_format_desc", !13, i64 0, !5, i64 8, !10, i64 24}
!178 = !{!177, !10, i64 24}
!179 = !{!165, !10, i64 4}
!180 = !{!165, !5, i64 2}
!181 = !{!165, !10, i64 8}
!182 = !{!183, !5, i64 20}
!183 = !{!"uvc_frame", !5, i64 0, !5, i64 1, !4, i64 2, !4, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !5, i64 20, !10, i64 24, !13, i64 32}
!184 = !{!183, !10, i64 24}
!185 = !{!183, !13, i64 32}
!186 = !{!183, !5, i64 0}
!187 = !{!183, !5, i64 1}
!188 = !{!183, !4, i64 2}
!189 = !{!183, !4, i64 4}
!190 = !{!183, !10, i64 8}
!191 = !{!183, !10, i64 12}
!192 = !{!183, !10, i64 16}
!193 = !{!165, !5, i64 3}
!194 = !{!56, !5, i64 2}
!195 = !{!83, !10, i64 0}
!196 = !{!83, !10, i64 4}
!197 = !{!83, !13, i64 72}
!198 = !{!83, !10, i64 80}
!199 = !{!83, !13, i64 48}
!200 = !{!83, !13, i64 56}
!201 = !{!83, !10, i64 84}
!202 = !{!83, !13, i64 32}
!203 = !{!83, !10, i64 1000}
!204 = !{i32 -2147027847}
!205 = !{i32 -2147027809}
!206 = !{!76, !10, i64 2266}
!207 = !{!208, !13, i64 0}
!208 = !{!"vb2_buffer", !13, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !5, i64 24, !22, i64 408, !5, i64 416, !19, i64 424, !19, i64 440, !10, i64 456, !10, i64 460, !10, i64 464, !10, i64 468, !10, i64 472, !10, i64 476, !10, i64 480, !10, i64 484, !10, i64 488, !10, i64 492, !10, i64 496, !10, i64 500, !10, i64 504, !10, i64 508, !10, i64 512, !10, i64 516, !10, i64 520, !10, i64 524, !10, i64 528, !10, i64 532, !10, i64 536}
!209 = !{!208, !10, i64 12}
!210 = !{!211, !5, i64 592}
!211 = !{!"uvc_buffer", !212, i64 0, !19, i64 576, !5, i64 592, !10, i64 596, !13, i64 600, !10, i64 608, !10, i64 612, !10, i64 616}
!212 = !{!"vb2_v4l2_buffer", !208, i64 0, !10, i64 544, !10, i64 548, !213, i64 552, !10, i64 568}
!213 = !{!"v4l2_timecode", !10, i64 0, !10, i64 4, !5, i64 8, !5, i64 9, !5, i64 10, !5, i64 11, !5, i64 12}
!214 = !{!211, !10, i64 596}
!215 = !{!211, !13, i64 600}
!216 = !{!211, !10, i64 608}
!217 = !{!211, !10, i64 612}
!218 = !{!208, !5, i64 416}
!219 = !{!83, !10, i64 1004}
!220 = !{!84, !13, i64 72}
!221 = !{i32 -2147028514}
!222 = !{i32 -2147028476}
!223 = !{!208, !10, i64 20}
!224 = !{!225, !10, i64 20}
!225 = !{!"vb2_plane", !13, i64 0, !13, i64 8, !10, i64 16, !10, i64 20, !10, i64 24, !10, i64 28, !5, i64 32, !10, i64 40}
!226 = !{!225, !10, i64 24}
!227 = !{!228, !10, i64 0}
!228 = !{!"v4l2_requestbuffers", !10, i64 0, !10, i64 4, !10, i64 8, !5, i64 12}
!229 = !{!84, !10, i64 520}
!230 = !{!231, !13, i64 456}
!231 = !{!"file", !5, i64 0, !232, i64 16, !13, i64 32, !13, i64 40, !16, i64 48, !15, i64 120, !10, i64 128, !10, i64 132, !14, i64 136, !22, i64 296, !233, i64 304, !13, i64 400, !237, i64 408, !22, i64 440, !13, i64 448, !13, i64 456, !19, i64 464, !19, i64 480, !13, i64 496}
!232 = !{!"path", !13, i64 0, !13, i64 8}
!233 = !{!"fown_struct", !234, i64 0, !13, i64 72, !5, i64 80, !18, i64 84, !18, i64 88, !10, i64 92}
!234 = !{!"", !235, i64 0, !10, i64 8, !10, i64 12, !13, i64 16, !20, i64 24}
!235 = !{!"qrwlock", !18, i64 0, !236, i64 4}
!236 = !{!"qspinlock", !18, i64 0}
!237 = !{!"file_ra_state", !7, i64 0, !10, i64 8, !10, i64 12, !10, i64 16, !10, i64 20, !22, i64 24}
!238 = !{!239, !13, i64 176}
!239 = !{!"uvc_fh", !240, i64 0, !13, i64 176, !13, i64 184, !5, i64 192}
!240 = !{!"v4l2_fh", !19, i64 0, !13, i64 16, !13, i64 24, !5, i64 32, !45, i64 40, !19, i64 128, !19, i64 144, !10, i64 160, !10, i64 164, !13, i64 168}
!241 = !{!239, !13, i64 184}
!242 = !{!243, !10, i64 84}
!243 = !{!"v4l2_capability", !5, i64 0, !5, i64 16, !5, i64 48, !10, i64 80, !10, i64 84, !10, i64 88, !5, i64 92}
!244 = !{!243, !10, i64 88}
!245 = !{!231, !10, i64 128}
!246 = !{!247, !10, i64 0}
!247 = !{!"v4l2_input", !10, i64 0, !5, i64 4, !10, i64 36, !10, i64 40, !10, i64 44, !22, i64 48, !10, i64 56, !10, i64 60, !5, i64 64}
!248 = !{!247, !10, i64 36}
!249 = !{!250, !10, i64 0}
!250 = !{!"v4l2_query_ext_ctrl", !10, i64 0, !10, i64 4, !5, i64 8, !22, i64 40, !22, i64 48, !22, i64 56, !22, i64 64, !10, i64 72, !10, i64 76, !10, i64 80, !10, i64 84, !5, i64 88, !5, i64 104}
!251 = !{!252, !10, i64 0}
!252 = !{!"v4l2_queryctrl", !10, i64 0, !10, i64 4, !5, i64 8, !10, i64 40, !10, i64 44, !10, i64 48, !10, i64 52, !10, i64 56, !5, i64 60}
!253 = !{!252, !10, i64 4}
!254 = !{!250, !10, i64 4}
!255 = !{!252, !10, i64 40}
!256 = !{!250, !22, i64 40}
!257 = !{!252, !10, i64 44}
!258 = !{!250, !22, i64 48}
!259 = !{!252, !10, i64 48}
!260 = !{!250, !22, i64 56}
!261 = !{!252, !10, i64 52}
!262 = !{!250, !22, i64 64}
!263 = !{!252, !10, i64 56}
!264 = !{!250, !10, i64 72}
!265 = !{!250, !10, i64 76}
!266 = !{!250, !10, i64 80}
!267 = !{!250, !10, i64 84}
!268 = !{!269, !10, i64 0}
!269 = !{!"v4l2_control", !10, i64 0, !10, i64 4}
!270 = !{!271, !10, i64 0}
!271 = !{!"v4l2_ext_control", !10, i64 0, !10, i64 4, !5, i64 8, !5, i64 12}
!272 = !{!269, !10, i64 4}
!273 = !{!274, !13, i64 24}
!274 = !{!"v4l2_ext_controls", !5, i64 0, !10, i64 4, !10, i64 8, !5, i64 12, !13, i64 24}
!275 = !{!274, !10, i64 4}
!276 = !{!274, !10, i64 8}
!277 = !{!278, !10, i64 0}
!278 = !{!"v4l2_selection", !10, i64 0, !10, i64 4, !10, i64 8, !279, i64 12, !5, i64 28}
!279 = !{!"v4l2_rect", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12}
!280 = !{!278, !10, i64 4}
!281 = !{!278, !10, i64 12}
!282 = !{!278, !10, i64 16}
!283 = !{!76, !13, i64 2304}
!284 = !{!278, !10, i64 20}
!285 = !{!278, !10, i64 24}
!286 = !{!287, !10, i64 4}
!287 = !{!"v4l2_frmsizeenum", !10, i64 0, !10, i64 4, !10, i64 8, !5, i64 12, !5, i64 36}
!288 = !{!287, !10, i64 0}
!289 = !{!287, !10, i64 8}
!290 = !{!291, !10, i64 4}
!291 = !{!"v4l2_frmivalenum", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12, !10, i64 16, !5, i64 20, !5, i64 44}
!292 = !{!291, !10, i64 8}
!293 = !{!291, !10, i64 12}
!294 = !{!291, !10, i64 0}
!295 = !{!291, !10, i64 16}
!296 = !{!297, !10, i64 0}
!297 = !{!"v4l2_event_subscription", !10, i64 0, !10, i64 4, !10, i64 8, !5, i64 12}
!298 = !{!299, !10, i64 0}
!299 = !{!"uvc_xu_control_mapping", !10, i64 0, !5, i64 4, !5, i64 36, !5, i64 52, !5, i64 53, !5, i64 54, !10, i64 56, !10, i64 60, !13, i64 64, !10, i64 72, !5, i64 76}
!300 = !{!301, !10, i64 32}
!301 = !{!"uvc_control_mapping", !19, i64 0, !19, i64 16, !10, i64 32, !5, i64 36, !5, i64 68, !5, i64 84, !5, i64 85, !5, i64 86, !5, i64 88, !10, i64 92, !13, i64 96, !10, i64 104, !10, i64 108, !10, i64 112, !5, i64 116, !13, i64 128, !13, i64 136}
!302 = !{!299, !5, i64 52}
!303 = !{!301, !5, i64 84}
!304 = !{!299, !5, i64 53}
!305 = !{!301, !5, i64 85}
!306 = !{!299, !5, i64 54}
!307 = !{!301, !5, i64 86}
!308 = !{!299, !10, i64 56}
!309 = !{!301, !5, i64 88}
!310 = !{!299, !10, i64 60}
!311 = !{!301, !10, i64 92}
!312 = !{!299, !10, i64 72}
!313 = !{!299, !13, i64 64}
!314 = !{!301, !13, i64 96}
!315 = !{!301, !10, i64 104}
!316 = !{!239, !5, i64 192}
!317 = !{!318, !10, i64 0}
!318 = !{!"v4l2_streamparm", !10, i64 0, !5, i64 4}
!319 = !{i64 0, i64 4, !9, i64 4, i64 4, !9}
!320 = !{!321, !10, i64 0}
!321 = !{!"v4l2_fract", !10, i64 0, !10, i64 4}
!322 = !{!321, !10, i64 4}
!323 = !{i64 0, i64 2, !142, i64 2, i64 1, !104, i64 3, i64 1, !104, i64 4, i64 4, !9, i64 8, i64 2, !142, i64 10, i64 2, !142, i64 12, i64 2, !142, i64 14, i64 2, !142, i64 16, i64 2, !142, i64 18, i64 4, !9, i64 22, i64 4, !9, i64 26, i64 4, !9, i64 30, i64 1, !104, i64 31, i64 1, !104, i64 32, i64 1, !104, i64 33, i64 1, !104}
!324 = !{!82, !10, i64 4}
!325 = !{i32 -2146329712, i32 -2146329673, i32 -2146329652, i32 -2146329615, i32 -2146329592, i32 -2146329583}
!326 = !{i32 -2146334149, i32 -2146334110, i32 -2146334089, i32 -2146334052, i32 -2146334029, i32 -2146334159}
!327 = !{!76, !10, i64 2252}
!328 = !{!329, !10, i64 0}
!329 = !{!"v4l2_format", !10, i64 0, !5, i64 8}
!330 = !{!76, !13, i64 2288}
!331 = !{!82, !4, i64 0}
!332 = !{!82, !5, i64 2}
!333 = !{!82, !5, i64 3}
!334 = !{!82, !10, i64 18}
!335 = !{!76, !13, i64 2296}
!336 = !{!337, !10, i64 4}
!337 = !{!"v4l2_fmtdesc", !10, i64 0, !10, i64 4, !10, i64 8, !5, i64 12, !10, i64 44, !5, i64 48}
!338 = !{!337, !10, i64 0}
!339 = !{!337, !10, i64 8}
!340 = !{!337, !10, i64 44}
!341 = !{!55, !13, i64 64}
!342 = !{!343, !13, i64 16}
!343 = !{!"usb_bus", !13, i64 0, !10, i64 8, !13, i64 16, !5, i64 24, !5, i64 25, !5, i64 26, !10, i64 27, !10, i64 27, !10, i64 27, !10, i64 27, !10, i64 28, !10, i64 32, !14, i64 40, !344, i64 200, !13, i64 216, !13, i64 224, !10, i64 232, !10, i64 236, !10, i64 240, !10, i64 244, !13, i64 248, !10, i64 256}
!344 = !{!"usb_devmap", !5, i64 0}
!345 = !{!346, !7, i64 11880}
!346 = !{!"task_struct", !347, i64 0, !7, i64 8, !13, i64 16, !18, i64 24, !10, i64 28, !10, i64 32, !348, i64 40, !10, i64 48, !10, i64 52, !10, i64 56, !7, i64 64, !13, i64 72, !10, i64 80, !10, i64 84, !10, i64 88, !10, i64 92, !10, i64 96, !10, i64 100, !13, i64 104, !349, i64 128, !354, i64 576, !13, i64 648, !355, i64 656, !358, i64 808, !10, i64 816, !10, i64 820, !10, i64 824, !359, i64 832, !7, i64 1856, !43, i64 1864, !19, i64 1872, !10, i64 1888, !360, i64 1896, !19, i64 1928, !361, i64 1944, !351, i64 1984, !13, i64 2008, !13, i64 2016, !362, i64 2024, !363, i64 2064, !10, i64 2084, !10, i64 2088, !10, i64 2092, !10, i64 2096, !7, i64 2104, !10, i64 2112, !10, i64 2116, !10, i64 2116, !10, i64 2116, !10, i64 2116, !10, i64 2120, !10, i64 2120, !10, i64 2120, !10, i64 2120, !10, i64 2120, !10, i64 2120, !10, i64 2120, !10, i64 2120, !7, i64 2128, !364, i64 2136, !10, i64 2184, !10, i64 2188, !13, i64 2192, !13, i64 2200, !19, i64 2208, !19, i64 2224, !13, i64 2240, !19, i64 2248, !19, i64 2264, !5, i64 2280, !19, i64 2352, !19, i64 2368, !13, i64 2384, !13, i64 2392, !13, i64 2400, !22, i64 2408, !22, i64 2416, !22, i64 2424, !365, i64 2432, !7, i64 2520, !7, i64 2528, !22, i64 2536, !22, i64 2544, !7, i64 2552, !7, i64 2560, !367, i64 2568, !5, i64 2592, !13, i64 2640, !13, i64 2648, !13, i64 2656, !5, i64 2664, !13, i64 2680, !368, i64 2688, !369, i64 2696, !7, i64 2712, !13, i64 2720, !13, i64 2728, !13, i64 2736, !13, i64 2744, !13, i64 2752, !370, i64 2760, !370, i64 2768, !370, i64 2776, !371, i64 2784, !7, i64 2808, !7, i64 2816, !10, i64 2824, !13, i64 2832, !13, i64 2840, !18, i64 2848, !10, i64 2852, !372, i64 2856, !10, i64 2872, !10, i64 2876, !16, i64 2880, !366, i64 2952, !373, i64 3024, !374, i64 3032, !13, i64 3040, !13, i64 3048, !13, i64 3056, !10, i64 3064, !7, i64 3072, !7, i64 3080, !10, i64 3088, !10, i64 3092, !10, i64 3096, !10, i64 3100, !7, i64 3104, !7, i64 3112, !10, i64 3120, !10, i64 3124, !10, i64 3128, !10, i64 3132, !22, i64 3136, !10, i64 3144, !10, i64 3148, !5, i64 3152, !10, i64 5840, !10, i64 5844, !13, i64 5848, !13, i64 5856, !13, i64 5864, !13, i64 5872, !13, i64 5880, !13, i64 5888, !7, i64 5896, !13, i64 5904, !375, i64 5912, !22, i64 5968, !22, i64 5976, !22, i64 5984, !370, i64 5992, !376, i64 6120, !10, i64 6176, !10, i64 6180, !13, i64 6184, !19, i64 6192, !10, i64 6208, !13, i64 6216, !13, i64 6224, !19, i64 6232, !13, i64 6248, !5, i64 6256, !14, i64 6272, !19, i64 6432, !13, i64 6448, !4, i64 6456, !4, i64 6458, !10, i64 6460, !10, i64 6464, !10, i64 6468, !10, i64 6472, !7, i64 6480, !22, i64 6488, !22, i64 6496, !22, i64 6504, !377, i64 6512, !19, i64 6528, !13, i64 6544, !13, i64 6552, !7, i64 6560, !5, i64 6568, !7, i64 6592, !378, i64 6600, !377, i64 7632, !13, i64 7648, !379, i64 7656, !13, i64 7672, !10, i64 7680, !10, i64 7684, !10, i64 7688, !7, i64 7696, !10, i64 7704, !5, i64 7712, !22, i64 11552, !22, i64 11560, !10, i64 11568, !10, i64 11572, !13, i64 11576, !22, i64 11584, !18, i64 11592, !18, i64 11596, !7, i64 11600, !7, i64 11608, !5, i64 11616, !10, i64 11620, !13, i64 11624, !13, i64 11632, !13, i64 11640, !10, i64 11648, !10, i64 11652, !10, i64 11656, !13, i64 11664, !10, i64 11672, !10, i64 11676, !7, i64 11680, !10, i64 11688, !13, i64 11696, !18, i64 11704, !380, i64 11712}
!347 = !{!"thread_info", !7, i64 0}
!348 = !{!"llist_node", !13, i64 0}
!349 = !{!"sched_entity", !350, i64 0, !351, i64 16, !19, i64 40, !10, i64 56, !22, i64 64, !22, i64 72, !22, i64 80, !22, i64 88, !22, i64 96, !352, i64 104, !10, i64 320, !13, i64 328, !13, i64 336, !13, i64 344, !353, i64 384}
!350 = !{!"load_weight", !7, i64 0, !10, i64 8}
!351 = !{!"rb_node", !7, i64 0, !13, i64 8, !13, i64 16}
!352 = !{!"sched_statistics", !22, i64 0, !22, i64 8, !22, i64 16, !22, i64 24, !22, i64 32, !22, i64 40, !22, i64 48, !22, i64 56, !22, i64 64, !22, i64 72, !22, i64 80, !22, i64 88, !22, i64 96, !22, i64 104, !22, i64 112, !22, i64 120, !22, i64 128, !22, i64 136, !22, i64 144, !22, i64 152, !22, i64 160, !22, i64 168, !22, i64 176, !22, i64 184, !22, i64 192, !22, i64 200, !22, i64 208}
!353 = !{!"sched_avg", !22, i64 0, !22, i64 8, !10, i64 16, !10, i64 20, !7, i64 24, !7, i64 32}
!354 = !{!"sched_rt_entity", !19, i64 0, !7, i64 16, !7, i64 24, !10, i64 32, !4, i64 36, !4, i64 38, !13, i64 40, !13, i64 48, !13, i64 56, !13, i64 64}
!355 = !{!"sched_dl_entity", !351, i64 0, !22, i64 24, !22, i64 32, !22, i64 40, !22, i64 48, !22, i64 56, !22, i64 64, !10, i64 72, !10, i64 76, !10, i64 80, !10, i64 84, !356, i64 88}
!356 = !{!"hrtimer", !357, i64 0, !22, i64 32, !13, i64 40, !13, i64 48, !5, i64 56, !5, i64 57}
!357 = !{!"timerqueue_node", !351, i64 0, !22, i64 24}
!358 = !{!"hlist_head", !13, i64 0}
!359 = !{!"cpumask", !5, i64 0}
!360 = !{!"sched_info", !7, i64 0, !22, i64 8, !22, i64 16, !22, i64 24}
!361 = !{!"plist_node", !10, i64 0, !19, i64 8, !19, i64 24}
!362 = !{!"vmacache", !10, i64 0, !5, i64 8}
!363 = !{!"task_rss_stat", !10, i64 0, !5, i64 4}
!364 = !{!"restart_block", !13, i64 0, !5, i64 8}
!365 = !{!"prev_cputime", !22, i64 0, !22, i64 8, !366, i64 16}
!366 = !{!"raw_spinlock", !236, i64 0, !10, i64 4, !10, i64 8, !13, i64 16, !20, i64 24}
!367 = !{!"task_cputime", !22, i64 0, !22, i64 8, !22, i64 16}
!368 = !{!"sysv_sem", !13, i64 0}
!369 = !{!"sysv_shm", !19, i64 0}
!370 = !{!"", !5, i64 0}
!371 = !{!"sigpending", !19, i64 0, !370, i64 16}
!372 = !{!"seccomp", !10, i64 0, !13, i64 8}
!373 = !{!"wake_q_node", !13, i64 0}
!374 = !{!"rb_root", !13, i64 0}
!375 = !{!"task_io_accounting", !22, i64 0, !22, i64 8, !22, i64 16, !22, i64 24, !22, i64 32, !22, i64 40, !22, i64 48}
!376 = !{!"seqcount", !10, i64 0, !20, i64 8}
!377 = !{!"callback_head", !13, i64 0, !13, i64 8}
!378 = !{!"tlbflush_unmap_batch", !359, i64 0, !43, i64 1024, !43, i64 1025}
!379 = !{!"page_frag", !13, i64 0, !10, i64 8, !10, i64 12}
!380 = !{!"thread_struct", !5, i64 0, !7, i64 24, !7, i64 32, !4, i64 40, !4, i64 42, !4, i64 44, !4, i64 46, !10, i64 48, !7, i64 56, !7, i64 64, !5, i64 72, !7, i64 104, !7, i64 112, !7, i64 120, !7, i64 128, !7, i64 136, !13, i64 144, !7, i64 152, !10, i64 160, !15, i64 168, !10, i64 176, !10, i64 176, !381, i64 192}
!381 = !{!"fpu", !10, i64 0, !5, i64 4, !5, i64 5, !5, i64 64}
!382 = !{i32 -2142096442, i32 -2142096422, i32 -2142096381, i32 -2142096360, i32 -2142096321, i32 -2142096292, i32 -2142096246, i32 -2142096221, i32 -2142095945, i32 -2142095901, i32 -2142095878, i32 -2142095845, i32 -2142095814, i32 -2142095758}
!383 = !{i32 -2142091601, i32 -2142091581, i32 -2142091540, i32 -2142091519, i32 -2142091480, i32 -2142091451, i32 -2142091405, i32 -2142091380, i32 -2142091105, i32 -2142091061, i32 -2142091038, i32 -2142091005, i32 -2142090974, i32 -2142090918}
!384 = !{i32 -2142084805, i32 -2142084785, i32 -2142084744, i32 -2142084723, i32 -2142084684, i32 -2142084655, i32 -2142084630, i32 -2142084318, i32 -2142084274, i32 -2142084251, i32 -2142084218, i32 -2142084187, i32 -2142084131}
!385 = !{!386, !4, i64 4}
!386 = !{!"uvc_xu_control_query", !5, i64 0, !5, i64 1, !5, i64 2, !4, i64 4, !13, i64 8}
!387 = !{!386, !13, i64 8}
!388 = !{i32 -2142078057, i32 -2142078037, i32 -2142077996, i32 -2142077975, i32 -2142077936, i32 -2142077907, i32 -2142077861, i32 -2142077836, i32 -2142077566, i32 -2142077522, i32 -2142077499, i32 -2142077466, i32 -2142077435, i32 -2142077379}
!389 = !{i32 -2145787463}
!390 = !{i32 -2146628732}
!391 = !{i32 -2142704833, i32 -2142704826, i32 -2142704810, i32 -2142704791, i32 -2142703832, i32 -2142705230, i32 -2142703826, i32 -2142703778, i32 -2142703714, i32 -2142703652, i32 -2142703595, i32 -2142703539, i32 -2142703305, i32 -2142703257, i32 -2142703193, i32 -2142703131, i32 -2142703074, i32 -2142703018, i32 -2142705114, i32 -2142705089, i32 -2142702697, i32 -2142702763, i32 -2142702683, i32 -2142702722, i32 -2142702648, i32 -2142702568, i32 -2142702607}
!392 = !{i32 -2142714872, i32 -2142714865, i32 -2142714849, i32 -2142714833, i32 -2142714544, i32 -2142715197, i32 -2142714538, i32 -2142714490, i32 -2142714426, i32 -2142714364, i32 -2142714307, i32 -2142714251, i32 -2142715117, i32 -2142715092, i32 -2142713923, i32 -2142713996, i32 -2142713909, i32 -2142713955}
!393 = !{i32 -2142716502, i32 -2142716495, i32 -2142716479, i32 -2142716463, i32 -2142716174, i32 -2142716827, i32 -2142716168, i32 -2142716120, i32 -2142716056, i32 -2142715994, i32 -2142715937, i32 -2142715881, i32 -2142716747, i32 -2142716722, i32 -2142715553, i32 -2142715626, i32 -2142715539, i32 -2142715585}
!394 = !{!82, !4, i64 12}
!395 = !{!82, !10, i64 22}
!396 = !{!82, !4, i64 8}
!397 = !{!82, !4, i64 10}
!398 = !{!82, !4, i64 14}
!399 = !{!82, !4, i64 16}
!400 = !{!82, !10, i64 26}
!401 = !{!82, !5, i64 30}
!402 = !{!82, !5, i64 31}
!403 = !{!82, !5, i64 32}
!404 = !{!82, !5, i64 33}
!405 = !{i32 -2146917298, i32 -2146917259, i32 -2146917238, i32 -2146917201, i32 -2146917178, i32 -2146917169, i32 -2146917115}
!406 = !{!55, !5, i64 28}
!407 = !{!90, !10, i64 12}
!408 = !{!90, !10, i64 16}
!409 = !{!90, !13, i64 0}
!410 = !{!90, !10, i64 8}
!411 = !{!211, !10, i64 616}
!412 = !{!413, !10, i64 0}
!413 = !{!"uvc_clock_sample", !10, i64 0, !4, i64 4, !89, i64 8, !4, i64 24}
!414 = !{!413, !4, i64 4}
!415 = !{!90, !4, i64 22}
!416 = !{i64 0, i64 8, !102, i64 8, i64 8, !102}
!417 = !{!89, !7, i64 0}
!418 = !{!89, !7, i64 8}
!419 = !{!413, !7, i64 8}
!420 = !{!413, !7, i64 16}
!421 = !{!212, !22, i64 408}
!422 = !{!413, !4, i64 24}
!423 = !{!76, !7, i64 4080}
!424 = !{!76, !7, i64 4064}
!425 = !{!76, !7, i64 4088}
!426 = !{!76, !7, i64 4072}
!427 = !{!76, !10, i64 4136}
!428 = !{!76, !10, i64 4096}
!429 = !{!76, !10, i64 4100}
!430 = !{!76, !10, i64 4104}
!431 = !{!76, !10, i64 4112}
!432 = !{!76, !10, i64 4108}
!433 = !{!76, !10, i64 4120}
!434 = !{!76, !10, i64 4124}
!435 = !{!76, !10, i64 4116}
!436 = !{!76, !10, i64 4128}
!437 = !{!76, !10, i64 4132}
!438 = !{!76, !10, i64 4144}
!439 = !{!76, !10, i64 4148}
!440 = !{!76, !10, i64 3976}
!441 = !{!90, !4, i64 20}
!442 = !{!76, !10, i64 3980}
!443 = !{!76, !5, i64 3984}
!444 = !{!76, !10, i64 3840}
!445 = !{!76, !10, i64 3844}
!446 = !{!76, !10, i64 3848}
!447 = !{!76, !10, i64 2270}
!448 = !{!49, !5, i64 3}
!449 = !{!56, !4, i64 13}
!450 = !{!451, !13, i64 72}
!451 = !{!"urb", !29, i64 0, !13, i64 8, !18, i64 16, !18, i64 20, !10, i64 24, !19, i64 32, !19, i64 48, !13, i64 64, !13, i64 72, !13, i64 80, !10, i64 88, !10, i64 92, !10, i64 96, !10, i64 100, !13, i64 104, !22, i64 112, !13, i64 120, !10, i64 128, !10, i64 132, !10, i64 136, !10, i64 140, !13, i64 144, !22, i64 152, !10, i64 160, !10, i64 164, !10, i64 168, !10, i64 172, !13, i64 176, !13, i64 184, !5, i64 192}
!452 = !{!451, !13, i64 176}
!453 = !{!451, !10, i64 88}
!454 = !{!451, !10, i64 100}
!455 = !{!451, !22, i64 112}
!456 = !{!56, !5, i64 6}
!457 = !{!451, !10, i64 168}
!458 = !{!451, !13, i64 104}
!459 = !{!451, !13, i64 184}
!460 = !{!451, !10, i64 164}
!461 = !{!451, !10, i64 136}
!462 = !{!463, !10, i64 0}
!463 = !{!"usb_iso_packet_descriptor", !10, i64 0, !10, i64 4, !10, i64 8, !10, i64 12}
!464 = !{!463, !10, i64 4}
!465 = !{!76, !10, i64 3852}
!466 = !{!451, !10, i64 96}
!467 = !{!76, !13, i64 3576}
!468 = !{i32 -2146982420}
!469 = !{i32 -2146982382}
!470 = !{!463, !10, i64 12}
!471 = !{!463, !10, i64 8}
!472 = !{!451, !10, i64 140}
!473 = !{!76, !10, i64 3484}
!474 = !{!211, !10, i64 568}
!475 = !{!76, !10, i64 4016}
!476 = !{!211, !10, i64 548}
!477 = !{!211, !22, i64 408}
!478 = !{!87, !10, i64 4}
!479 = !{!87, !10, i64 8}
!480 = !{!87, !10, i64 12}
!481 = !{!87, !10, i64 28}
!482 = !{!87, !10, i64 32}
!483 = !{!87, !10, i64 24}
!484 = !{!87, !43, i64 37}
!485 = !{!87, !43, i64 36}
!486 = !{!87, !10, i64 48}
!487 = !{!87, !10, i64 44}
!488 = !{!87, !10, i64 40}
!489 = !{!87, !10, i64 56}
!490 = !{!87, !4, i64 52}
!491 = !{!76, !10, i64 4008}
!492 = !{!76, !10, i64 4012}
!493 = !{!76, !10, i64 4020}
!494 = !{!76, !4, i64 4172}
!495 = !{!76, !4, i64 4174}
!496 = !{!76, !13, i64 4152}
!497 = !{!76, !10, i64 4160}
!498 = !{!76, !10, i64 4168}
!499 = !{!76, !10, i64 4164}
!500 = !{!76, !10, i64 4024}
!501 = !{!76, !10, i64 4040}
!502 = !{!76, !10, i64 4028}
!503 = !{!76, !10, i64 4032}
!504 = !{!76, !10, i64 4000}
!505 = !{!76, !43, i64 4036}
!506 = !{!76, !43, i64 4037}
!507 = !{!76, !10, i64 4044}
!508 = !{!76, !10, i64 4056}
!509 = !{!76, !10, i64 4048}
!510 = !{!76, !10, i64 4140}
!511 = !{!76, !4, i64 4052}
!512 = !{!76, !10, i64 4004}
!513 = !{i32 -2146981753}
!514 = !{i32 -2146981715}
!515 = !{i32 -2146980075}
!516 = !{i32 -2146980037}
!517 = !{!518, !10, i64 44}
!518 = !{!"uvc_control", !13, i64 0, !519, i64 8, !5, i64 48, !5, i64 49, !5, i64 49, !5, i64 49, !5, i64 49, !5, i64 49, !13, i64 56}
!519 = !{!"uvc_control_info", !19, i64 0, !5, i64 16, !5, i64 32, !5, i64 33, !4, i64 34, !10, i64 36}
!520 = !{!518, !13, i64 0}
!521 = !{!518, !5, i64 41}
!522 = !{!518, !4, i64 42}
!523 = !{!301, !13, i64 128}
!524 = !{!525, !10, i64 0}
!525 = !{!"uvc_menu_info", !10, i64 0, !5, i64 4}
!526 = !{!527, !10, i64 0}
!527 = !{!"v4l2_event", !10, i64 0, !5, i64 8, !10, i64 72, !10, i64 76, !89, i64 80, !10, i64 96, !5, i64 100}
!528 = !{!527, !10, i64 96}
!529 = !{!301, !10, i64 108}
!530 = !{!301, !10, i64 112}
!531 = !{!115, !10, i64 496}
!532 = !{!115, !13, i64 504}
!533 = !{!518, !13, i64 56}
!534 = !{i32 -2146915620, i32 -2146915581, i32 -2146915560, i32 -2146915523, i32 -2146915500, i32 -2146915491, i32 -2146915437}
!535 = !{!536, !10, i64 4}
!536 = !{!"v4l2_querymenu", !10, i64 0, !10, i64 4, !5, i64 8, !10, i64 40}
!537 = !{!536, !10, i64 0}
!538 = !{i32 -2146980742}
!539 = !{i32 -2146980704}
!540 = !{!301, !13, i64 136}
!541 = !{!386, !5, i64 0}
!542 = !{!518, !5, i64 48}
!543 = !{!386, !5, i64 1}
!544 = !{!386, !5, i64 2}
!545 = !{!519, !5, i64 33}
!546 = !{!519, !5, i64 32}
!547 = !{!519, !4, i64 34}
!548 = !{!519, !10, i64 36}
!549 = !{i64 0, i64 8, !74, i64 8, i64 8, !74, i64 16, i64 16, !104, i64 32, i64 1, !104, i64 33, i64 1, !104, i64 34, i64 2, !142, i64 36, i64 4, !9}
!550 = !{!551, !5, i64 32}
!551 = !{!"uvc_ctrl_fixup", !3, i64 0, !5, i64 32, !5, i64 33, !5, i64 34}
!552 = !{!551, !5, i64 33}
!553 = !{!551, !5, i64 34}
!554 = !{!518, !5, i64 40}
!555 = !{i32 -2146298814, i32 -2146298775, i32 -2146298754, i32 -2146298717, i32 -2146298694, i32 -2146298685}
!556 = !{i32 -2146303251, i32 -2146303212, i32 -2146303191, i32 -2146303154, i32 -2146303131, i32 -2146303261}
!557 = !{!558, !5, i64 32}
!558 = !{!"uvc_ctrl_blacklist", !3, i64 0, !5, i64 32}
!559 = !{!301, !13, i64 0}
!560 = !{!12, !13, i64 1256}
!561 = !{!12, !13, i64 1248}
!562 = !{!563, !13, i64 0}
!563 = !{!"input_dev", !13, i64 0, !13, i64 8, !13, i64 16, !564, i64 24, !5, i64 32, !5, i64 40, !5, i64 48, !5, i64 144, !5, i64 152, !5, i64 160, !5, i64 168, !5, i64 176, !5, i64 184, !5, i64 200, !10, i64 208, !10, i64 212, !10, i64 216, !13, i64 224, !13, i64 232, !13, i64 240, !13, i64 248, !10, i64 256, !38, i64 264, !5, i64 360, !13, i64 368, !13, i64 376, !5, i64 384, !5, i64 480, !5, i64 488, !5, i64 496, !13, i64 504, !13, i64 512, !13, i64 520, !13, i64 528, !13, i64 536, !16, i64 544, !14, i64 616, !10, i64 776, !43, i64 780, !34, i64 784, !19, i64 2208, !19, i64 2224, !10, i64 2240, !10, i64 2244, !13, i64 2248, !43, i64 2256}
!564 = !{!"input_id", !4, i64 0, !4, i64 2, !4, i64 4, !4, i64 6}
!565 = !{!563, !13, i64 8}
!566 = !{!563, !13, i64 784}
!567 = !{!12, !13, i64 1264}
!568 = !{i32 481295}
!569 = !{!451, !10, i64 160}
!570 = !{!564, !4, i64 0}
!571 = !{!564, !4, i64 2}
!572 = !{!564, !4, i64 4}
!573 = !{!564, !4, i64 6}
!574 = !{i32 471345}
!575 = !{!343, !10, i64 8}
!576 = !{!76, !13, i64 3992}
!577 = !{!578, !7, i64 0}
!578 = !{!"uvc_debugfs_buffer", !7, i64 0, !5, i64 8}
!579 = !{!580, !13, i64 1024}
!580 = !{!"inode", !4, i64 0, !4, i64 2, !18, i64 4, !18, i64 8, !10, i64 12, !13, i64 16, !13, i64 24, !13, i64 32, !13, i64 40, !13, i64 48, !13, i64 56, !7, i64 64, !5, i64 72, !10, i64 76, !22, i64 80, !89, i64 88, !89, i64 104, !89, i64 120, !16, i64 136, !4, i64 208, !10, i64 212, !7, i64 216, !7, i64 224, !581, i64 232, !7, i64 392, !7, i64 400, !39, i64 408, !19, i64 424, !13, i64 440, !10, i64 448, !4, i64 452, !4, i64 454, !19, i64 456, !19, i64 472, !19, i64 488, !5, i64 504, !22, i64 520, !18, i64 528, !18, i64 532, !18, i64 536, !18, i64 540, !13, i64 544, !13, i64 552, !582, i64 560, !19, i64 976, !5, i64 992, !10, i64 1000, !10, i64 1004, !358, i64 1008, !13, i64 1016, !13, i64 1024}
!581 = !{!"rw_semaphore", !15, i64 0, !19, i64 8, !366, i64 24, !17, i64 96, !13, i64 104, !20, i64 112}
!582 = !{!"address_space", !13, i64 0, !24, i64 8, !16, i64 24, !18, i64 96, !374, i64 104, !581, i64 112, !7, i64 272, !7, i64 280, !7, i64 288, !13, i64 296, !7, i64 304, !16, i64 312, !10, i64 384, !19, i64 392, !13, i64 408}
!583 = !{!77, !7, i64 48}
