; ModuleID = 'tests/kernel_modules/uvcvideo/uvcvideo_old.bc'
source_filename = "llvm-link"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.uvc_driver = type { %struct.usb_driver }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.__wait_queue_head, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %union.anon.5, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32 }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.device*, %struct.device_private*, %struct.kobject, i8*, %struct.device_type*, %struct.mutex, %struct.bus_type*, %struct.device_driver*, i8*, %struct.dev_pm_info, %struct.dev_pm_domain*, i32, i64*, i64, %struct.shrink_control*, %struct.list_head, %struct.dma_coherent_mem*, %struct.dev_archdata, %struct.device_node*, %union.anon.3, i32, i32, %struct.spinlock, %struct.list_head, %struct.klist_node, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group* }
%struct.device_private = type opaque
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.sysfs_dirent*, %struct.arch_spinlock, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [32 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)*, i8* (%struct.kobject*, %struct.attribute*)* }
%struct.attribute = type { i8*, i16, i8, %struct.lock_class_key*, %struct.lock_class_key }
%struct.lock_class_key = type { [8 x %struct.lockdep_subclass_key] }
%struct.lockdep_subclass_key = type { i8 }
%struct.kobj_ns_type_operations = type { i32, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.sysfs_dirent = type opaque
%struct.arch_spinlock = type { %union.anon.5 }
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, i32*, i32*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.mutex = type { %union.anon.5, %struct.spinlock, %struct.list_head, %struct.task_struct*, i8*, i8*, %struct.lockdep_map }
%struct.task_struct = type { i64, i8*, %union.anon.5, i32, i32, %struct.llist_node, i32, i32, i32, i32, i32, i32, %struct.sched_class*, %struct.sched_entity, %struct.sched_rt_entity, %struct.task_group*, %struct.hlist_head, i8, i32, i32, i32, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.mm_struct*, %struct.mm_struct*, i8, i32, i32, i32, i32, i32, i32, i8, i32, i32, i64, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, [3 x %struct.pid_link], %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, i64, i64, %struct.load_weight, i64, i64, %struct.load_weight, %struct.load_weight, i64, i64, %struct.task_cputime, [3 x %struct.list_head], %struct.cred*, %struct.cred*, [16 x i8], i32, i32, %struct.sysv_sem, i64, %struct.thread_struct, %struct.fs_struct*, %struct.files_struct*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32 (i8*)*, i8*, %struct.sigset_t*, %struct.callback_head*, %struct.audit_context*, i32, i32, %struct.seccomp, i32, i32, %struct.spinlock, %struct.raw_spinlock, %union.anon.25, %struct.rt_mutex_waiter*, %struct.mutex_waiter*, i32, i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i32, i32, i64, i32, i32, [48 x %struct.held_lock], i32, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, i64, %struct.siginfo*, %struct.task_io_accounting, i64, i64, i64, %struct.nodemask_t, %union.anon.5, i32, i32, %struct.css_set*, %struct.list_head, %struct.robust_list_head*, %struct.compat_robust_list_head*, %struct.list_head, %struct.futex_pi_state*, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.mempolicy*, i16, i16, i32, i32, i32, i64, %struct.callback_head, %struct.callback_head, %struct.pipe_inode_info*, %struct.page_frag, %struct.task_delay_info*, i32, i32, i32, i64, i32, [32 x %struct.latency_record], i64, i64, i32, %struct.ftrace_ret_stack*, i64, %union.anon.5, %union.anon.5, i64, i64, %struct.memcg_batch_info, i32, %union.anon.5, %struct.uprobe_task*, i32, i32 }
%struct.llist_node = type { %struct.llist_node* }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics, %struct.sched_entity*, %struct.cfs_rq*, %struct.cfs_rq*, %struct.sched_avg }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.cfs_rq = type opaque
%struct.sched_avg = type { i32, i32, i64, i64, i64 }
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, %struct.sched_rt_entity*, %struct.sched_rt_entity*, %struct.rt_rq*, %struct.rt_rq* }
%struct.rt_rq = type opaque
%struct.task_group = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.cpumask = type { [64 x i64] }
%struct.sched_info = type { i64, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.mm_struct = type { %struct.vm_area_struct*, %struct.rb_root, %struct.vm_area_struct*, i64 (%struct.file*, i64, i64, i64, i64)*, void (%struct.mm_struct*, i64)*, i64, i64, i64, i64, i64, %struct.pgprot*, %union.anon.5, %union.anon.5, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [44 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, %struct.cpumask*, %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.hlist_head, %struct.task_struct*, %struct.file*, %struct.mmu_notifier_mm*, %struct.page*, %struct.cpumask, i64, i64, i64, i32, i32, %struct.uprobes_state }
%struct.rb_root = type { %struct.rb_node* }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %union.anon, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.mempolicy* }
%struct.pgprot = type { i64 }
%union.anon = type { %struct.anon }
%struct.anon = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, %struct.vm_fault*)*, i32 (%struct.vm_area_struct*, %struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i32 (%struct.vm_area_struct*, %struct.mempolicy*)*, %struct.mempolicy* (%struct.vm_area_struct*, i64)*, i32 (%struct.vm_area_struct*, %struct.nodemask_t*, %struct.nodemask_t*, i64)*, i32 (%struct.vm_area_struct*, i64, i64, i64)* }
%struct.vm_fault = type { i32, i64, i8*, %struct.page* }
%struct.rw_semaphore = type { i64, %struct.raw_spinlock, %struct.list_head, %struct.lockdep_map }
%struct.mm_rss_stat = type { [3 x %struct.pgprot] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { i8*, i32, i16, %struct.mutex, i8* }
%struct.core_state = type { %union.anon.5, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.__wait_queue_head }
%struct.file = type { %union.anon.25, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, i32, %struct.pgprot, i32, i32, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, i8*, %struct.list_head, %struct.list_head, %struct.address_space*, i64 }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %union.anon.5, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], i32, %struct.spinlock, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %struct.list_head, %union.anon.25, %struct.list_head, %struct.hlist_node }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %struct.pgprot, i8* }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.inode*, %struct.qstr*)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*, %struct.inode*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.dentry*, i1)*, [40 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %union.anon.5, i8*, %struct.xattr_handler**, %struct.list_head, %struct.hlist_bl_head, %struct.list_head*, %struct.list_head, %struct.list_head, i32, [44 x i8], %struct.spinlock, %struct.list_head, i32, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, %struct.quota_info, %struct.sb_writers, [32 x i8], [16 x i8], i8*, i32, i32, i32, %struct.mutex, i8*, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.pgprot, i32, [20 x i8] }
%struct.file_system_type = type { i8*, i32, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.module = type { i32, %struct.list_head, [56 x i8], %struct.module_kobject, %struct.module_attribute*, i8*, i8*, %struct.kobject*, %struct.kernel_symbol*, i64*, i32, %struct.kernel_param*, i32, i32, %struct.kernel_symbol*, i64*, %struct.kernel_symbol*, i64*, i32, i32, %struct.kernel_symbol*, i64*, i8, %struct.kernel_symbol*, i64*, i32, i32, %struct.exception_table_entry*, i32 ()*, i8*, i8*, i32, i32, i32, i32, i32, i32, %struct.mod_arch_specific, i32, i32, %struct.list_head, %struct.bug_entry*, %struct.elf64_sym*, %struct.elf64_sym*, i32, i32, i8*, i8*, %struct.module_sect_attrs*, %struct.module_notes_attrs*, i8*, i8*, i32, i32, %struct.tracepoint**, i32, i8**, %struct.ftrace_event_call**, i32, i32, i64*, %struct.list_head, %struct.list_head, %struct.task_struct*, void ()*, %struct.load_weight*, void ()**, i32 }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs* }
%struct.module_param_attrs = type opaque
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.kernel_param = type { i8*, %struct.kernel_param_ops*, i16, i16, %union.anon.3 }
%struct.kernel_param_ops = type { i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_symbol = type { i64, i8* }
%struct.exception_table_entry = type { i32, i32 }
%struct.mod_arch_specific = type {}
%struct.bug_entry = type { i32, i32, i16, i16 }
%struct.elf64_sym = type { i32, i8, i8, i16, i64, i64 }
%struct.module_sect_attrs = type opaque
%struct.module_notes_attrs = type opaque
%struct.tracepoint = type { i8*, %struct.arch_spinlock, void ()*, void ()*, %struct.tracepoint_func* }
%struct.tracepoint_func = type { i8*, i8* }
%struct.ftrace_event_call = type opaque
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, i32 (%struct.super_block*, %struct.page*, i32)*, i32 (%struct.super_block*)*, void (%struct.super_block*, i32)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.seq_file = type { i8*, i64, i64, i64, i64, i64, i64, %struct.mutex, %struct.seq_operations*, i32, i8* }
%struct.seq_operations = type { i8* (%struct.seq_file*, i64*)*, void (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i8*, i64*)*, i32 (%struct.seq_file*, i8*)* }
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)* }
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %union.anon.5, %struct.__wait_queue_head, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.kqid = type { %union.anon.5, i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.if_dqinfo*)*, i32 (%struct.super_block*, i32, %struct.if_dqinfo*)*, i32 (%struct.super_block*, i64, %struct.fs_disk_quota*)*, i32 (%struct.super_block*, i64, %struct.fs_disk_quota*)*, i32 (%struct.super_block*, %struct.fs_quota_stat*)*, i32 (%struct.super_block*, i32, i32)* }
%struct.if_dqinfo = type { i64, i64, i32, i32 }
%struct.fs_disk_quota = type { i8, i8, i16, i32, i64, i64, i64, i64, i64, i64, i32, i32, i16, i16, i32, i64, i64, i64, i32, i16, i16, [8 x i8] }
%struct.fs_quota_stat = type { i8, i16, i8, %struct.fs_qfilestat, %struct.fs_qfilestat, i32, i32, i32, i32, i16, i16 }
%struct.fs_qfilestat = type { i64, i64, i32 }
%struct.export_operations = type opaque
%struct.xattr_handler = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, %struct.list_head, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i32, %struct.hd_struct*, i32, i32, %struct.gendisk*, %struct.request_queue*, %struct.list_head, i64, i32, %struct.mutex }
%struct.hd_struct = type opaque
%struct.gendisk = type opaque
%struct.request_queue = type opaque
%struct.mtd_info = type opaque
%struct.quota_info = type { i32, %struct.mutex, %struct.mutex, %struct.rw_semaphore, [2 x %struct.inode*], [2 x %struct.mem_dqinfo], [2 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)* }
%struct.sb_writers = type { [3 x %struct.percpu_counter], %struct.__wait_queue_head, i32, %struct.__wait_queue_head, [3 x %struct.lockdep_map] }
%struct.percpu_counter = type { %struct.raw_spinlock, i64, %struct.list_head, i32* }
%struct.shrinker = type { i32 (%struct.shrinker*, %struct.shrink_control*)*, i32, i64, %struct.list_head, %struct.pgprot }
%struct.inode = type { i16, i16, i32, i32, i32, %struct.posix_acl*, %struct.posix_acl*, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i8*, i64, %union.anon.5, i32, i64, %struct.load_weight, %struct.load_weight, %struct.load_weight, %struct.spinlock, i16, i32, i64, i64, %struct.mutex, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.21, i64, %union.anon.5, %union.anon.5, %union.anon.5, %struct.file_operations*, %struct.file_lock*, %struct.address_space, [2 x %struct.dquot*], %struct.list_head, %union.anon.24, i32, i32, %struct.hlist_head, %union.anon.5, i8* }
%struct.posix_acl = type opaque
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.nameidata*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, void (%struct.dentry*, %struct.nameidata*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.vfsmount*, %struct.dentry*, %struct.kstat*)*, i32 (%struct.dentry*, i8*, i8*, i64, i32)*, i64 (%struct.dentry*, i8*, i8*, i64)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.load_weight*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16, i32*)*, [8 x i8] }
%struct.nameidata = type opaque
%struct.iattr = type { i32, i16, i32, i32, i64, %struct.load_weight, %struct.load_weight, %struct.load_weight, %struct.file* }
%struct.kstat = type { i64, i32, i16, i32, i32, i32, i32, i64, %struct.load_weight, %struct.load_weight, %struct.load_weight, i64, i64 }
%struct.fiemap_extent_info = type { i32, i32, i32, %struct.fiemap_extent* }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%union.anon.21 = type { %struct.callback_head }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.list_head, %struct.files_struct*, i32, i8, i32, %struct.pid*, %struct.__wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.22 }
%struct.pid = type { %union.anon.5, i32, [3 x %struct.hlist_head], %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace*, %struct.hlist_node }
%struct.pid_namespace = type opaque
%struct.fasync_struct = type { %struct.spinlock, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i32 (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, %struct.file_lock*, i32)*, void (%struct.file_lock*)*, i32 (%struct.file_lock**, i32)* }
%union.anon.22 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.address_space = type { %struct.inode*, %struct.radix_tree_root, %struct.spinlock, i32, %struct.rb_root, %struct.list_head, %struct.mutex, i64, i64, %struct.address_space_operations*, i64, %struct.backing_dev_info*, %struct.spinlock, %struct.list_head, i8* }
%struct.radix_tree_root = type { i32, i32, %struct.radix_tree_node* }
%struct.radix_tree_node = type opaque
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i64)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (i32, %struct.kiocb*, %struct.iovec*, i64, i64)*, i32 (%struct.address_space*, i64, i32, i8**, i64*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i32 (%struct.page*)*, i32 (%struct.page*, %struct.read_descriptor_t*, i64)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.kiocb = type opaque
%struct.iovec = type { i8*, i64 }
%struct.read_descriptor_t = type { i64, i64, %union.anon.3, i32 }
%struct.swap_info_struct = type opaque
%union.anon.24 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iovec*, i64, i64)*, i64 (%struct.kiocb*, %struct.iovec*, i64, i64)*, i32 (%struct.file*, i8*, i32 (i8*, i8*, i32, i64, i64, i32)*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, %struct.files_struct*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (%struct.kiocb*, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**)*, i64 (%struct.file*, i32, i64, i64)*, i32 (%struct.seq_file*, %struct.file*)* }
%struct.poll_table_struct = type { void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, i64 }
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, i32, i32, i32 }
%struct.rwlock_t = type { %struct.pgprot, i32, i32, i8*, %struct.lockdep_map }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.mmu_notifier_mm = type opaque
%struct.page = type { i64, %struct.address_space*, %struct.anon.8, %union.anon.25, %struct.pgprot, i64 }
%struct.anon.8 = type { %struct.pgprot, %struct.pgprot }
%struct.uprobes_state = type { %struct.xol_area* }
%struct.xol_area = type { %struct.__wait_queue_head, %union.anon.5, i64*, %struct.page*, i64 }
%struct.pid_link = type { %struct.hlist_node, %struct.pid* }
%struct.load_weight = type { i64, i64 }
%struct.task_cputime = type { i64, i64, i64 }
%struct.cred = type { %union.anon.5, %union.anon.5, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, i8*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %struct.callback_head }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.key = type { %union.anon.5, i32, %union.anon.27, %struct.key_type*, %struct.rw_semaphore, %struct.key_user*, i8*, %struct.pgprot, i64, i32, i32, i32, i16, i16, i64, i8*, %union.anon.25, %struct.pgprot }
%union.anon.27 = type { %struct.rb_node }
%struct.key_type = type opaque
%struct.key_user = type opaque
%struct.user_struct = type { %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %union.anon.5, %struct.pgprot, i64, i64, %struct.key*, %struct.key*, %struct.hlist_node, i32, %struct.pgprot }
%struct.user_namespace = type opaque
%struct.group_info = type { %union.anon.5, i32, i32, [32 x i32], [0 x i32*] }
%struct.sysv_sem = type { %struct.sem_undo_list* }
%struct.sem_undo_list = type opaque
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i64, i64, i16, i16, i16, i16, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, %struct.fpu, i64*, i64, i32 }
%struct.desc_struct = type { %union.anon.31 }
%union.anon.31 = type { %struct.exception_table_entry }
%struct.perf_event = type opaque
%struct.fpu = type { i32, i32, %union.thread_xstate* }
%union.thread_xstate = type { %struct.xsave_struct }
%struct.xsave_struct = type { %struct.i387_fxsave_struct, %struct.xsave_hdr_struct, %struct.ymmh_struct }
%struct.i387_fxsave_struct = type { i16, i16, i16, i16, %union.anon.34, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.37 }
%union.anon.34 = type { %struct.load_weight }
%union.anon.37 = type { [12 x i32] }
%struct.xsave_hdr_struct = type { i64, [2 x i64], [5 x i64] }
%struct.ymmh_struct = type { [64 x i32] }
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.nsproxy = type opaque
%struct.signal_struct = type { %union.anon.5, %union.anon.5, i32, %struct.__wait_queue_head, %struct.task_struct*, %struct.sigpending, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, %struct.pid*, %struct.pgprot, [2 x %struct.if_dqinfo], %struct.thread_group_cputimer, %struct.task_cputime, [3 x %struct.list_head], %struct.pid*, i32, %struct.tty_struct*, %struct.autogroup*, i64, i64, i64, i64, i64, i64, %struct.load_weight, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.load_weight], %struct.pacct_struct, %struct.taskstats*, i32, i32, %struct.tty_audit_buf*, %struct.rw_semaphore, i32, i16, i16, %struct.mutex }
%struct.hrtimer = type { %struct.timerqueue_node, %struct.pgprot, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i64, i32, i8*, [16 x i8] }
%struct.timerqueue_node = type { %struct.rb_node, %struct.pgprot }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.timerqueue_head, %struct.pgprot, i64 ()*, %struct.pgprot, %struct.pgprot }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, i32, i32, %struct.pgprot, i32, i32, i64, i64, i64, %struct.pgprot, [4 x %struct.hrtimer_clock_base] }
%struct.timerqueue_head = type { %struct.rb_root, %struct.timerqueue_node* }
%struct.thread_group_cputimer = type { %struct.task_cputime, i32, %struct.raw_spinlock }
%struct.tty_struct = type opaque
%struct.autogroup = type opaque
%struct.pacct_struct = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.taskstats = type opaque
%struct.tty_audit_buf = type opaque
%struct.sighand_struct = type { %union.anon.5, [64 x %struct.k_sigaction], %struct.spinlock, %struct.__wait_queue_head }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.audit_context = type opaque
%struct.seccomp = type { i32, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.raw_spinlock = type { %struct.arch_spinlock, i32, i32, i8*, %struct.lockdep_map }
%union.anon.25 = type { %struct.list_head }
%struct.rt_mutex_waiter = type opaque
%struct.mutex_waiter = type { %struct.list_head, %struct.task_struct*, i8* }
%struct.held_lock = type { i64, i64, %struct.lockdep_map*, %struct.lockdep_map*, i64, i64, i32 }
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.backing_dev_info = type opaque
%struct.io_context = type opaque
%struct.siginfo = type { i32, i32, i32, %union.anon.39 }
%union.anon.39 = type { %struct.anon.43, [80 x i8] }
%struct.anon.43 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [16 x i64] }
%struct.css_set = type opaque
%struct.robust_list_head = type opaque
%struct.compat_robust_list_head = type { %union.anon.5, i32, i32 }
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mempolicy = type opaque
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.task_delay_info = type { %struct.spinlock, i32, %struct.load_weight, %struct.load_weight, i64, i64, i32, i32, %struct.load_weight, %struct.load_weight, i64, i32 }
%struct.latency_record = type { [12 x i64], i32, i64, i64 }
%struct.ftrace_ret_stack = type opaque
%struct.memcg_batch_info = type { i32, %struct.mem_cgroup*, i64, i64 }
%struct.mem_cgroup = type opaque
%struct.uprobe_task = type { i32, %struct.arch_uprobe_task, %struct.return_instance*, i32, %struct.uprobe*, i64, i64 }
%struct.arch_uprobe_task = type { i64, i32, i32 }
%struct.return_instance = type opaque
%struct.uprobe = type opaque
%struct.lockdep_map = type { %struct.lock_class_key*, [2 x %struct.lock_class*], i8*, i32, i64 }
%struct.lock_class = type { %struct.list_head, %struct.list_head, %struct.lockdep_subclass_key*, i32, i32, i64, [13 x %struct.stack_trace], %struct.list_head, %struct.list_head, i32, i64, i8*, i32, [4 x i64], [4 x i64] }
%struct.stack_trace = type { i32, i32, i64*, i32 }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.bus_attribute*, %struct.device_attribute*, %struct.driver_attribute*, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key }
%struct.bus_attribute = type { %struct.attribute, i64 (%struct.bus_type*, i8*)*, i64 (%struct.bus_type*, i8*, i64)* }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.driver_attribute = type { %struct.attribute, i64 (%struct.device_driver*, i8*)*, i64 (%struct.device_driver*, i8*, i64)* }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.dev_pm_ops*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64 }
%struct.driver_private = type opaque
%struct.dev_pm_info = type { %union.anon.5, i8, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.timer_list, i64, %struct.work_struct, %struct.__wait_queue_head, %union.anon.5, %union.anon.5, i16, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, %struct.dev_pm_qos* }
%struct.wakeup_source = type { i8*, %struct.list_head, %struct.spinlock, %struct.timer_list, i64, %struct.pgprot, %struct.pgprot, %struct.pgprot, %struct.pgprot, %struct.pgprot, i64, i64, i64, i64, i64, i8 }
%struct.timer_list = type { %struct.list_head, i64, %struct.tvec_base*, void (i64)*, i64, i32, i32, i8*, [16 x i8], %struct.lockdep_map }
%struct.tvec_base = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head }
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops }
%struct.shrink_control = type { i32, i64 }
%struct.dma_coherent_mem = type opaque
%struct.dev_archdata = type { %struct.dma_map_ops*, i8* }
%struct.dma_map_ops = type { i8* (%struct.device*, i64, i64*, i32, %struct.sigset_t*)*, void (%struct.device*, i64, i8*, i64, %struct.sigset_t*)*, i32 (%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, %struct.sigset_t*)*, i32 (%struct.device*, %struct.sg_table*, i8*, i64, i64, %struct.sigset_t*)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, %struct.sigset_t*)*, void (%struct.device*, i64, i64, i32, %struct.sigset_t*)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, %struct.sigset_t*)*, void (%struct.device*, %struct.scatterlist*, i32, i32, %struct.sigset_t*)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i64, i32, i32, i64, i32 }
%struct.device_node = type opaque
%union.anon.3 = type { i8* }
%struct.spinlock = type { %union.anon.4 }
%union.anon.4 = type { %struct.raw_spinlock }
%struct.klist_node = type { i8*, %struct.list_head, %struct.arch_spinlock }
%struct.class = type { i8*, %struct.module*, %struct.class_attribute*, %struct.device_attribute*, %struct.bin_attribute*, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.class_attribute = type { %struct.attribute, i64 (%struct.class*, %struct.class_attribute*, i8*)*, i64 (%struct.class*, %struct.class_attribute*, i8*, i64)*, i8* (%struct.class*, %struct.class_attribute*)* }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, %struct.attribute** }
%struct.iommu_group = type opaque
%union.anon.5 = type { i32 }
%struct.work_struct = type { %struct.pgprot, %struct.list_head, void (%struct.work_struct*)*, %struct.lockdep_map }
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.__wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.uvc_format_desc = type { i8*, [16 x i8], i32 }
%struct.vb2_ops = type { i32 (%struct.vb2_queue*, %struct.v4l2_format*, i32*, i32*, i32*, i8**)*, void (%struct.vb2_queue*)*, void (%struct.vb2_queue*)*, i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)*, i32 (%struct.vb2_buffer*)*, void (%struct.vb2_buffer*)*, i32 (%struct.vb2_queue*, i32)*, i32 (%struct.vb2_queue*)*, void (%struct.vb2_buffer*)* }
%struct.vb2_queue = type { i32, i32, i32, %struct.mutex*, %struct.v4l2_fh*, %struct.vb2_ops*, %struct.vb2_mem_ops*, i8*, i32, i32, i32, i32, [32 x %struct.vb2_buffer*], i32, %struct.list_head, %union.anon.5, %struct.list_head, %struct.spinlock, %struct.__wait_queue_head, [8 x i8*], [8 x i32], i8, %struct.vb2_fileio_data* }
%struct.v4l2_fh = type { %struct.list_head, %struct.video_device*, %struct.v4l2_ctrl_handler*, i32, %struct.__wait_queue_head, %struct.list_head, %struct.list_head, i32, i32 }
%struct.video_device = type { %struct.media_entity, %struct.v4l2_file_operations*, %struct.device, %struct.cdev*, %struct.device*, %struct.v4l2_device*, %struct.v4l2_ctrl_handler*, %struct.vb2_queue*, %struct.v4l2_prio_state*, [32 x i8], i32, i32, i32, i16, i64, i32, %struct.spinlock, %struct.list_head, i32, i64, i64, void (%struct.video_device*)*, %struct.v4l2_ioctl_ops*, [3 x i64], [3 x i64], %struct.mutex* }
%struct.media_entity = type { %struct.list_head, %struct.media_device*, i32, i8*, i32, i32, i64, i32, i16, i16, i16, i16, %struct.media_pad*, %struct.media_link*, %struct.media_entity_operations*, i32, i32, %struct.mod_arch_specific*, %union.anon.47 }
%struct.media_device = type { %struct.device*, %struct.media_devnode, [32 x i8], [40 x i8], [32 x i8], i32, i32, i32, %struct.list_head, %struct.spinlock, %struct.mutex, i32 (%struct.media_pad*, %struct.media_pad*, i32)* }
%struct.media_devnode = type { %struct.media_file_operations*, %struct.device, %struct.cdev, %struct.device*, i32, i64, void (%struct.media_devnode*)* }
%struct.media_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.media_pad = type { %struct.media_entity*, i16, i64 }
%struct.media_link = type { %struct.media_pad*, %struct.media_pad*, %struct.media_link*, i64 }
%struct.media_entity_operations = type { i32 (%struct.media_entity*, %struct.media_pad*, %struct.media_pad*, i32)*, i32 (%struct.media_link*)* }
%union.anon.47 = type { %struct.anon.50 }
%struct.anon.50 = type { i32, i32, i32 }
%struct.v4l2_file_operations = type { %struct.module*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.file*)*, i32 (%struct.file*)* }
%struct.v4l2_device = type { %struct.device*, %struct.media_device*, %struct.list_head, %struct.spinlock, [36 x i8], void (%struct.v4l2_subdev*, i32, i8*)*, %struct.v4l2_ctrl_handler*, %struct.v4l2_prio_state, %struct.mutex, %struct.arch_spinlock, void (%struct.v4l2_device*)* }
%struct.v4l2_subdev = type { %struct.media_entity, %struct.list_head, %struct.module*, i32, %struct.v4l2_device*, %struct.v4l2_subdev_ops*, %struct.v4l2_subdev_internal_ops*, %struct.v4l2_ctrl_handler*, [32 x i8], i32, i8*, i8*, %struct.video_device* }
%struct.v4l2_subdev_ops = type { %struct.v4l2_subdev_core_ops*, %struct.v4l2_subdev_tuner_ops*, %struct.v4l2_subdev_audio_ops*, %struct.v4l2_subdev_video_ops*, %struct.v4l2_subdev_vbi_ops*, %struct.v4l2_subdev_ir_ops*, %struct.v4l2_subdev_sensor_ops*, %struct.v4l2_subdev_pad_ops* }
%struct.v4l2_subdev_core_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_chip_ident*)*, i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i64, %struct.v4l2_subdev_io_pin_config*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_queryctrl*)*, i32 (%struct.v4l2_subdev*, %struct.exception_table_entry*)*, i32 (%struct.v4l2_subdev*, %struct.exception_table_entry*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_ext_controls*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_ext_controls*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_ext_controls*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_querymenu*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64)*, i64 (%struct.v4l2_subdev*, i32, i8*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dbg_register*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i8*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_fh*, %struct.v4l2_event_subscription*)* }
%struct.v4l2_dbg_chip_ident = type { %struct.v4l2_dbg_match, i32, i32 }
%struct.v4l2_dbg_match = type { i32, %union.anon.51 }
%union.anon.51 = type { i32, [28 x i8] }
%struct.v4l2_subdev_io_pin_config = type { i32, i8, i8, i8, i8 }
%struct.v4l2_queryctrl = type { i32, i32, [32 x i8], i32, i32, i32, i32, i32, [2 x i32] }
%struct.v4l2_ext_controls = type { i32, i32, i32, [2 x i32], %struct.v4l2_ext_control* }
%struct.v4l2_ext_control = type <{ i32, i32, [1 x i32], %struct.pgprot }>
%struct.v4l2_querymenu = type <{ i32, i32, %union.anon.53, i32 }>
%union.anon.53 = type { i64, [24 x i8] }
%struct.v4l2_dbg_register = type { %struct.v4l2_dbg_match, i32, i64, i64 }
%struct.v4l2_event_subscription = type { i32, i32, i32, [5 x i32] }
%struct.v4l2_subdev_tuner_ops = type { i32 (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frequency*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_tuner*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_modulator*)*, i32 (%struct.v4l2_subdev*, %struct.tuner_setup*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_priv_tun_config*)* }
%struct.v4l2_frequency = type { i32, i32, i32, [8 x i32] }
%struct.v4l2_tuner = type { i32, [32 x i8], i32, i32, i32, i32, i32, i32, i32, i32, [4 x i32] }
%struct.v4l2_modulator = type { i32, [32 x i8], i32, i32, i32, i32, [4 x i32] }
%struct.tuner_setup = type opaque
%struct.v4l2_priv_tun_config = type { i32, i8* }
%struct.v4l2_subdev_audio_ops = type { i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32)* }
%struct.v4l2_subdev_video_ops = type { i32 (%struct.v4l2_subdev*, i32, i32, i32)*, i32 (%struct.v4l2_subdev*, i32, i32)*, i32 (%struct.v4l2_subdev*, i64)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i64*)*, i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_cropcap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_crop*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_crop*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_streamparm*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_frame_interval*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frmivalenum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.v4l2_subdev*, i32, i32*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_mbus_framefmt*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_mbus_framefmt*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_mbus_framefmt*)*, i32 (%struct.v4l2_subdev*, %struct.exception_table_entry*)*, i32 (%struct.v4l2_subdev*, %struct.exception_table_entry*)*, i32 (%struct.v4l2_subdev*, i8*, i32*)* }
%struct.v4l2_cropcap = type { i32, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, %struct.exception_table_entry }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.v4l2_crop = type { i32, %struct.usb3_lpm_parameters }
%struct.v4l2_streamparm = type { i32, %union.anon.54 }
%union.anon.54 = type { %struct.v4l2_captureparm, [160 x i8] }
%struct.v4l2_captureparm = type { i32, i32, %struct.exception_table_entry, i32, i32, [4 x i32] }
%struct.v4l2_subdev_frame_interval = type { i32, %struct.exception_table_entry, [9 x i32] }
%struct.v4l2_frmivalenum = type { i32, i32, i32, i32, i32, %union.anon.56, [2 x i32] }
%union.anon.56 = type { %struct.v4l2_frmival_stepwise }
%struct.v4l2_frmival_stepwise = type { %struct.exception_table_entry, %struct.exception_table_entry, %struct.exception_table_entry }
%struct.v4l2_enum_dv_timings = type { i32, [3 x i32], %struct.v4l2_dv_timings }
%struct.v4l2_dv_timings = type { i32, %union.anon.57 }
%union.anon.57 = type { [32 x i32] }
%struct.v4l2_dv_timings_cap = type { i32, [3 x i32], %union.anon.58 }
%union.anon.58 = type { %struct.v4l2_bt_timings_cap, [24 x i8] }
%struct.v4l2_bt_timings_cap = type { i32, i32, i32, i32, i64, i64, i32, i32, [16 x i32] }
%struct.v4l2_frmsizeenum = type { i32, i32, i32, %union.anon.55, [2 x i32] }
%union.anon.55 = type { %struct.v4l2_frmsize_stepwise }
%struct.v4l2_frmsize_stepwise = type { i32, i32, i32, i32, i32, i32 }
%struct.v4l2_mbus_framefmt = type { i32, i32, i32, i32, i32, [7 x i32] }
%struct.v4l2_subdev_vbi_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_decode_vbi_line*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_data*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_sliced_vbi_format*)* }
%struct.v4l2_decode_vbi_line = type { i32, i8*, i32, i32 }
%struct.v4l2_sliced_vbi_data = type { i32, i32, i32, i32, [48 x i8] }
%struct.v4l2_sliced_vbi_cap = type { i16, [2 x [24 x i16]], i32, [3 x i32] }
%struct.v4l2_vbi_format = type { i32, i32, i32, i32, [2 x i32], [2 x i32], i32, [2 x i32] }
%struct.v4l2_sliced_vbi_format = type { i16, [2 x [24 x i16]], i32, [2 x i32] }
%struct.v4l2_subdev_ir_ops = type { i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, i8*, i64, i64*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_ir_parameters*)* }
%struct.v4l2_subdev_ir_parameters = type { i32, i32, i8, i8, i8, i8, i32, i32, i32, i8, i8, i32, i32, i32, i32 }
%struct.v4l2_subdev_sensor_ops = type { i32 (%struct.v4l2_subdev*, i32*)*, i32 (%struct.v4l2_subdev*, i32*)* }
%struct.v4l2_subdev_pad_ops = type { i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_mbus_code_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_frame_size_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_frame_interval_enum*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_crop*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_crop*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*, %struct.v4l2_subdev_selection*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_edid*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_edid*)*, i32 (%struct.v4l2_subdev*, %struct.media_link*, %struct.v4l2_subdev_format*, %struct.v4l2_subdev_format*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)*, i32 (%struct.v4l2_subdev*, i32, %struct.v4l2_mbus_frame_desc*)* }
%struct.v4l2_subdev_fh = type { %struct.v4l2_fh, %struct.anon.59* }
%struct.anon.59 = type { %struct.v4l2_mbus_framefmt, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters }
%struct.v4l2_subdev_mbus_code_enum = type { i32, i32, i32, [9 x i32] }
%struct.v4l2_subdev_frame_size_enum = type { i32, i32, i32, i32, i32, i32, i32, [9 x i32] }
%struct.v4l2_subdev_frame_interval_enum = type { i32, i32, i32, i32, i32, %struct.exception_table_entry, [9 x i32] }
%struct.v4l2_subdev_format = type { i32, i32, %struct.v4l2_mbus_framefmt, [8 x i32] }
%struct.v4l2_subdev_crop = type { i32, i32, %struct.usb3_lpm_parameters, [8 x i32] }
%struct.v4l2_subdev_selection = type { i32, i32, i32, i32, %struct.usb3_lpm_parameters, [8 x i32] }
%struct.v4l2_subdev_edid = type { i32, i32, i32, [5 x i32], i8* }
%struct.v4l2_mbus_frame_desc = type { [4 x %struct.v4l2_mbus_frame_desc_entry], i16 }
%struct.v4l2_mbus_frame_desc_entry = type { i16, i32, i32 }
%struct.v4l2_subdev_internal_ops = type { i32 (%struct.v4l2_subdev*)*, void (%struct.v4l2_subdev*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)*, i32 (%struct.v4l2_subdev*, %struct.v4l2_subdev_fh*)* }
%struct.v4l2_prio_state = type { [4 x %union.anon.5] }
%struct.v4l2_ioctl_ops = type { i32 (%struct.file*, i8*, %struct.v4l2_capability*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_fmtdesc*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_format*)*, i32 (%struct.file*, i8*, %struct.v4l2_requestbuffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_exportbuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_create_buffers*)*, i32 (%struct.file*, i8*, %struct.v4l2_buffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, %struct.v4l2_framebuffer*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, i64)*, i32 (%struct.file*, i8*, i64*)*, i32 (%struct.file*, i8*, %struct.v4l2_input*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_output*)*, i32 (%struct.file*, i8*, i32*)*, i32 (%struct.file*, i8*, i32)*, i32 (%struct.file*, i8*, %struct.v4l2_queryctrl*)*, i32 (%struct.file*, i8*, %struct.exception_table_entry*)*, i32 (%struct.file*, i8*, %struct.exception_table_entry*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_ext_controls*)*, i32 (%struct.file*, i8*, %struct.v4l2_querymenu*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_audio*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_modulator*)*, i32 (%struct.file*, i8*, %struct.v4l2_cropcap*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_crop*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_selection*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_jpegcompression*)*, i32 (%struct.file*, i8*, %struct.v4l2_enc_idx*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_encoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_decoder_cmd*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_streamparm*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_tuner*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_frequency*)*, i32 (%struct.file*, i8*, %struct.v4l2_subdev_frame_size_enum*)*, i32 (%struct.file*, i8*, %struct.v4l2_sliced_vbi_cap*)*, i32 (%struct.file*, i8*)*, i32 (%struct.file*, i8*, %struct.v4l2_hw_freq_seek*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_register*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_info*)*, i32 (%struct.file*, i8*, %struct.v4l2_dbg_chip_ident*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmsizeenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_frmivalenum*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_enum_dv_timings*)*, i32 (%struct.file*, i8*, %struct.v4l2_dv_timings_cap*)*, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i32 (%struct.v4l2_fh*, %struct.v4l2_event_subscription*)*, i64 (%struct.file*, i8*, i1, i32, i8*)* }
%struct.v4l2_capability = type { [16 x i8], [32 x i8], [32 x i8], i32, i32, i32, [3 x i32] }
%struct.v4l2_fmtdesc = type { i32, i32, i32, [32 x i8], i32, [4 x i32] }
%struct.v4l2_requestbuffers = type { i32, i32, i32, [2 x i32] }
%struct.v4l2_exportbuffer = type { i32, i32, i32, i32, i32, [11 x i32] }
%struct.v4l2_create_buffers = type { i32, i32, i32, %struct.v4l2_format, [8 x i32] }
%struct.v4l2_format = type { i32, %union.anon.60 }
%union.anon.60 = type { %struct.v4l2_window, [144 x i8] }
%struct.v4l2_window = type { %struct.usb3_lpm_parameters, i32, i32, %struct.v4l2_clip*, i32, i8*, i8 }
%struct.v4l2_clip = type { %struct.usb3_lpm_parameters, %struct.v4l2_clip* }
%struct.v4l2_buffer = type { i32, i32, i32, i32, i32, %struct.load_weight, %struct.v4l2_timecode, i32, i32, %struct.pgprot, i32, i32, i32 }
%struct.v4l2_timecode = type { i32, i32, i8, i8, i8, i8, [4 x i8] }
%struct.v4l2_framebuffer = type { i32, i32, i8*, %struct.v4l2_pix_format }
%struct.v4l2_pix_format = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.v4l2_input = type { i32, [32 x i8], i32, i32, i32, i64, i32, i32, [3 x i32] }
%struct.v4l2_output = type { i32, [32 x i8], i32, i32, i32, i64, i32, [3 x i32] }
%struct.v4l2_audio = type { i32, [32 x i8], i32, i32, [2 x i32] }
%struct.v4l2_selection = type { i32, i32, i32, %struct.usb3_lpm_parameters, [9 x i32] }
%struct.v4l2_jpegcompression = type { i32, i32, i32, [60 x i8], i32, [60 x i8], i32 }
%struct.v4l2_enc_idx = type { i32, i32, [4 x i32], [64 x %struct.v4l2_enc_idx_entry] }
%struct.v4l2_enc_idx_entry = type { i64, i64, i32, i32, [2 x i32] }
%struct.v4l2_encoder_cmd = type { i32, i32, %union.anon.66 }
%union.anon.66 = type { %struct.anon.67.751 }
%struct.anon.67.751 = type { [8 x i32] }
%struct.v4l2_decoder_cmd = type { i32, i32, %union.anon.68 }
%union.anon.68 = type { %struct.pgprot, [56 x i8] }
%struct.v4l2_hw_freq_seek = type { i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.v4l2_dbg_chip_info = type { %struct.v4l2_dbg_match, [32 x i8], i32, [32 x i32] }
%struct.v4l2_ctrl_handler = type { %struct.mutex, %struct.mutex*, %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl_ref**, void (%struct.v4l2_ctrl*, i8*)*, i8*, i16, i32 }
%struct.v4l2_ctrl_ref = type { %struct.list_head, %struct.v4l2_ctrl_ref*, %struct.v4l2_ctrl*, %struct.v4l2_ctrl_helper* }
%struct.v4l2_ctrl = type { %struct.list_head, %struct.list_head, %struct.v4l2_ctrl_handler*, %struct.v4l2_ctrl**, i32, i16, %struct.v4l2_ctrl_ops*, i32, i8*, i32, i32, i32, i32, %union.anon.5, %union.anon.60.753, i64, %struct.pgprot, %struct.pgprot, i8* }
%struct.v4l2_ctrl_ops = type { i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)*, i32 (%struct.v4l2_ctrl*)* }
%union.anon.60.753 = type { i8** }
%struct.v4l2_ctrl_helper = type opaque
%struct.vb2_mem_ops = type { i8* (i8*, i64, i32)*, void (i8*)*, %struct.dma_buf* (i8*)*, i8* (i8*, i64, i64, i32)*, void (i8*)*, void (i8*)*, void (i8*)*, i8* (i8*, %struct.dma_buf*, i64, i32)*, void (i8*)*, i32 (i8*)*, void (i8*)*, i8* (i8*)*, i8* (i8*)*, i32 (i8*)*, i32 (i8*, %struct.vm_area_struct*)* }
%struct.dma_buf = type { i64, %struct.file*, %struct.list_head, %struct.dma_buf_ops*, %struct.mutex, i32, i8*, i8*, %struct.list_head, i8* }
%struct.dma_buf_ops = type { i32 (%struct.dma_buf*, %struct.device*, %struct.dma_buf_attachment*)*, void (%struct.dma_buf*, %struct.dma_buf_attachment*)*, %struct.sg_table* (%struct.dma_buf_attachment*, i32)*, void (%struct.dma_buf_attachment*, %struct.sg_table*, i32)*, void (%struct.dma_buf*)*, i32 (%struct.dma_buf*, i64, i64, i32)*, void (%struct.dma_buf*, i64, i64, i32)*, i8* (%struct.dma_buf*, i64)*, void (%struct.dma_buf*, i64, i8*)*, i8* (%struct.dma_buf*, i64)*, void (%struct.dma_buf*, i64, i8*)*, i32 (%struct.dma_buf*, %struct.vm_area_struct*)*, i8* (%struct.dma_buf*)*, void (%struct.dma_buf*, i8*)* }
%struct.dma_buf_attachment = type { %struct.dma_buf*, %struct.device*, %struct.list_head, i8* }
%struct.vb2_buffer = type { %struct.v4l2_buffer, [8 x %struct.v4l2_plane], %struct.vb2_queue*, i32, i32, %struct.list_head, %struct.list_head, [8 x %struct.vb2_plane] }
%struct.v4l2_plane = type { i32, i32, %struct.pgprot, i32, [11 x i32] }
%struct.vb2_plane = type { i8*, %struct.dma_buf*, i32 }
%struct.vb2_fileio_data = type opaque
%struct.v4l2_subscribed_event.1203 = type { %struct.list_head, i32, i32, i32, %struct.v4l2_fh*, %struct.list_head, %struct.v4l2_subscribed_event_ops.1206*, i32, i32, i32, [0 x %struct.v4l2_kevent.1207] }
%struct.v4l2_subscribed_event_ops.1206 = type { {}*, void (%struct.v4l2_subscribed_event.1203*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }
%struct.v4l2_kevent.1207 = type { %struct.list_head, %struct.v4l2_subscribed_event.1203*, %struct.v4l2_event }
%struct.v4l2_event = type { i32, %union.anon.82, i32, i32, %struct.load_weight, i32, [8 x i32] }
%union.anon.82 = type { %struct.v4l2_event_ctrl, [24 x i8] }
%struct.v4l2_event_ctrl = type { i32, i32, %struct.pgprot, i32, i32, i32, i32, i32 }
%struct.uvc_ctrl_fixup = type { %struct.usb_device_id, i8, i8, i8 }
%struct.uvc_control_info = type { %struct.list_head, [16 x i8], i8, i8, i16, i32 }
%struct.uvc_control_mapping = type { %struct.list_head, %struct.list_head, i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, %struct.uvc_menu_info*, i32, i32, i32, [2 x i32], i32 (%struct.uvc_control_mapping*, i8, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)* }
%struct.uvc_menu_info = type { i32, [32 x i8] }
%struct.uvc_ctrl_blacklist = type { %struct.usb_device_id, i8 }
%struct.uvc_device = type { %struct.usb_device*, %struct.usb_interface*, i64, i32, i32, [32 x i8], i32, %union.anon.5, %union.anon.5, %struct.media_device, %struct.v4l2_device, i16, i32, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.5, %struct.usb_host_endpoint*, %struct.urb*, i8*, %struct.input_dev*, [64 x i8] }
%struct.usb_device = type { i32, [16 x i8], i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i16, i32, i8*, i8*, i8*, %struct.list_head, i32, i32, %union.anon.5, i64, i64, i8, %struct.wusb_dev*, i32, i32, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32 }
%struct.usb_tt = type opaque
%struct.usb_bus = type { %struct.device*, i32, i8*, i8, i8, i8, i8, i32, i32, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, %struct.list_head, i32, i32, i32, i32, %struct.mon_bus*, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.mon_bus = type opaque
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ss_container_id_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.arch_spinlock, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.urb = type { %struct.arch_spinlock, i8*, %union.anon.5, %union.anon.5, i32, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb3_lpm_parameters] }
%struct.usb_anchor = type { %struct.list_head, %struct.__wait_queue_head, %struct.spinlock, i8 }
%struct.input_dev = type { i8*, i8*, i8*, %struct.input_id, [1 x i64], [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i32, i32, i32, i8*, i32 (%struct.input_dev*, %struct.input_keymap_entry*, i32*)*, i32 (%struct.input_dev*, %struct.input_keymap_entry*)*, %struct.ff_device*, i32, %struct.timer_list, [2 x i32], %struct.input_mt*, %struct.v4l2_frmsize_stepwise*, [12 x i64], [1 x i64], [1 x i64], [1 x i64], i32 (%struct.input_dev*)*, void (%struct.input_dev*)*, i32 (%struct.input_dev*, %struct.file*)*, i32 (%struct.input_dev*, i32, i32, i32)*, %struct.input_handle*, %struct.spinlock, %struct.mutex, i32, i8, %struct.device, %struct.list_head, %struct.list_head, i32, i32, %struct.input_value*, i8 }
%struct.input_id = type { i16, i16, i16, i16 }
%struct.input_keymap_entry = type { i8, i8, i16, i32, [32 x i8] }
%struct.ff_device = type { i32 (%struct.input_dev*, %struct.ff_effect*, %struct.ff_effect*)*, i32 (%struct.input_dev*, i32)*, i32 (%struct.input_dev*, i32, i32)*, void (%struct.input_dev*, i16)*, void (%struct.input_dev*, i16)*, void (%struct.ff_device*)*, i8*, [2 x i64], %struct.mutex, i32, %struct.ff_effect*, [0 x %struct.file*] }
%struct.ff_effect = type { i16, i16, i16, %struct.ff_trigger, %struct.ff_trigger, %union.anon.62 }
%struct.ff_trigger = type { i16, i16 }
%union.anon.62 = type { %struct.ff_periodic_effect }
%struct.ff_periodic_effect = type { i16, i16, i16, i16, i16, %struct.input_id, i32, i16* }
%struct.input_mt = type opaque
%struct.input_handle = type { i8*, i32, i8*, %struct.input_dev*, %struct.input_handler*, %struct.list_head, %struct.list_head }
%struct.input_handler = type { i8*, void (%struct.input_handle*, i32, i32, i32)*, void (%struct.input_handle*, %struct.input_value*, i32)*, i1 (%struct.input_handle*, i32, i32, i32)*, i1 (%struct.input_handler*, %struct.input_dev*)*, i32 (%struct.input_handler*, %struct.input_dev*, %struct.input_device_id*)*, void (%struct.input_handle*)*, void (%struct.input_handle*)*, i8, i32, i8*, %struct.input_device_id*, %struct.list_head, %struct.list_head }
%struct.input_device_id = type { i64, i16, i16, i16, i16, [1 x i64], [12 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [1 x i64], [2 x i64], [1 x i64], i64 }
%struct.input_value = type { i16, i16, i32 }
%struct.uvc_streaming = type { %struct.list_head, %struct.uvc_device*, %struct.video_device*, %struct.uvc_video_chain*, %union.anon.5, %struct.usb_interface*, i32, i16, %struct.uvc_streaming_header, i32, i32, %struct.uvc_format*, %struct.uvc_streaming_control, %struct.uvc_format*, %struct.uvc_format*, %struct.uvc_frame*, %struct.mutex, i8, %struct.uvc_video_queue, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)*, %struct.anon.70, [5 x %struct.urb*], [5 x i8*], [5 x i64], i32, i32, i8, %struct.dentry*, %struct.anon.71, %struct.uvc_clock }
%struct.uvc_video_chain = type { %struct.uvc_device*, %struct.list_head, %struct.list_head, %struct.uvc_entity*, %struct.uvc_entity*, %struct.mutex, %struct.v4l2_prio_state, i32 }
%struct.uvc_entity = type { %struct.list_head, %struct.list_head, i32, i8, i16, [64 x i8], %struct.video_device*, %struct.v4l2_subdev, i32, i32, %struct.media_pad*, %union.anon.63, i8, i8*, i32, %struct.uvc_control* }
%union.anon.63 = type { %struct.anon.69 }
%struct.anon.69 = type { [16 x i8], i8, i8, i8*, i8* }
%struct.uvc_control = type { %struct.uvc_entity*, %struct.uvc_control_info, i8, i8, i8* }
%struct.uvc_streaming_header = type { i8, i8, i8, i8, i8*, i8, i8, i8, i8 }
%struct.uvc_streaming_control = type <{ i16, i8, i8, i32, i16, i16, i16, i16, i16, i32, i32, i32, i8, i8, i8, i8 }>
%struct.uvc_format = type { i8, i8, i8, i8, i32, i32, [32 x i8], i32, %struct.uvc_frame* }
%struct.uvc_frame = type { i8, i8, i16, i16, i32, i32, i32, i8, i32, i32* }
%struct.uvc_video_queue = type { %struct.vb2_queue, %struct.mutex, i32, i32, %struct.spinlock, %struct.list_head }
%struct.uvc_buffer = type { %struct.vb2_buffer, %struct.list_head, i32, i32, i8*, i32, i32, i32 }
%struct.anon.70 = type { [256 x i8], i32, i32, i32, i32 }
%struct.anon.71 = type { %struct.uvc_stats_frame, %struct.uvc_stats_stream }
%struct.uvc_stats_frame = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i32, i32, i16, i32 }
%struct.uvc_stats_stream = type { %struct.load_weight, %struct.load_weight, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.uvc_clock = type { %struct.uvc_clock_sample*, i32, i32, i32, i16, i16, %struct.spinlock }
%struct.uvc_clock_sample = type { i32, i16, %struct.load_weight, i16 }
%struct.anon.64 = type { i16, i16, i16, i8, i8* }
%struct.anon.65 = type { i8, i8*, i8, i8* }
%struct.anon.67 = type { i16, i8, i8*, i8 }
%struct.uvc_fh = type { %struct.v4l2_fh, %struct.uvc_video_chain*, %struct.uvc_streaming*, i32 }
%union.anon.84 = type { %struct.uvc_xu_control_mapping }
%struct.uvc_xu_control_mapping = type { i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, %struct.uvc_menu_info*, i32, [4 x i32] }
%struct.uvc_xu_control_mapping32 = type { i32, [32 x i8], [16 x i8], i8, i8, i8, i32, i32, i32, i32, [4 x i32] }
%struct.uvc_xu_control_query = type { i8, i8, i8, i16, i8* }
%struct.uvc_xu_control_query32 = type { i8, i8, i8, i16, i32 }
%struct.thread_info = type { %struct.task_struct*, %struct.exec_domain*, i32, i32, i32, i32, %struct.pgprot, %struct.restart_block, i8*, i8 }
%struct.exec_domain = type { i8*, void (i32, %struct.pt_regs*)*, i8, i8, i64*, i64*, %struct.map_segment*, %struct.map_segment*, %struct.map_segment*, %struct.map_segment*, %struct.module*, %struct.exec_domain* }
%struct.pt_regs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.map_segment = type opaque
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.85 }
%union.anon.85 = type { %struct.anon.86 }
%struct.anon.86 = type { i32*, i32, i32, i32, i64, i32* }
%struct.__large_struct = type { [100 x i64] }
%struct.v4l2_subscribed_event_ops = type { i32 (%struct.v4l2_subscribed_event*, i32)*, void (%struct.v4l2_subscribed_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }
%struct.v4l2_subscribed_event = type { %struct.list_head, i32, i32, i32, %struct.v4l2_fh*, %struct.list_head, %struct.v4l2_subscribed_event_ops*, i32, i32, i32, [0 x %struct.v4l2_kevent] }
%struct.v4l2_kevent = type { %struct.list_head, %struct.v4l2_subscribed_event*, %struct.v4l2_event }
%struct.uvc_streaming.2252 = type { %struct.list_head, %struct.uvc_device*, %struct.video_device*, %struct.uvc_video_chain*, %union.anon.5, %struct.usb_interface*, i32, i16, %struct.uvc_streaming_header, i32, i32, %struct.uvc_format*, %struct.uvc_streaming_control, %struct.uvc_format*, %struct.uvc_format*, %struct.uvc_frame*, %struct.mutex, i8, %struct.uvc_video_queue, {}*, %struct.anon.70, [5 x %struct.urb*], [5 x i8*], [5 x i64], i32, i32, i8, %struct.dentry*, %struct.anon.71, %struct.uvc_clock }
%struct.uvc_debugfs_buffer = type { i64, [1024 x i8] }

@uvc_clock_param = global i32 1, align 4
@uvc_timeout_param = global i32 5000, align 4
@uvc_no_drop_param = common global i32 0, align 4
@uvc_trace_param = common global i32 0, align 4
@uvc_driver = global %struct.uvc_driver { %struct.usb_driver { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.283, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @uvc_probe, void (%struct.usb_interface*)* @uvc_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* @uvc_suspend, i32 (%struct.usb_interface*)* @uvc_resume, i32 (%struct.usb_interface*)* @uvc_reset_resume, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* getelementptr inbounds ([43 x %struct.usb_device_id], [43 x %struct.usb_device_id]* @uvc_ids, i32 0, i32 0), %struct.__wait_queue_head zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 2 } }, align 8
@uvc_ids = internal global [43 x %struct.usb_device_id] [%struct.usb_device_id { i16 899, i16 1046, i16 -22246, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1112, i16 28782, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1118, i16 248, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1118, i16 1827, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1133, i16 2241, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2242, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2243, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2245, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2246, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1133, i16 2247, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 899, i16 1266, i16 -20367, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 512 }, %struct.usb_device_id { i16 899, i16 1423, i16 14368, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 1449, i16 9792, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 1452, i16 -31487, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 10 }, %struct.usb_device_id { i16 899, i16 1480, i16 1027, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 1507, i16 1285, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 1784, i16 12300, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13101, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13328, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 2760, i16 13344, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 128 }, %struct.usb_device_id { i16 899, i16 3027, i16 1365, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 3725, i16 4, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 258 }, %struct.usb_device_id { i16 899, i16 5075, i16 20739, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5421, i16 784, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 5967, i16 21010, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 22833, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30190, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30159, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30157, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 5967, i16 -30156, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6108, i16 514, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6127, i16 18443, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 16 }, %struct.usb_device_id { i16 899, i16 6257, i16 774, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 6 }, %struct.usb_device_id { i16 899, i16 6349, i16 -13570, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 4 }, %struct.usb_device_id { i16 899, i16 6380, i16 12680, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 6380, i16 12936, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 6380, i16 12944, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 256 }, %struct.usb_device_id { i16 899, i16 6558, i16 -32510, i16 0, i16 0, i8 0, i8 0, i8 0, i8 -1, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id { i16 907, i16 6571, i16 4096, i16 0, i16 294, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 1 }, %struct.usb_device_id { i16 899, i16 6971, i16 10577, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 2 }, %struct.usb_device_id { i16 899, i16 7247, i16 12288, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 34 }, %struct.usb_device_id { i16 896, i16 0, i16 0, i16 0, i16 0, i8 0, i8 0, i8 0, i8 14, i8 1, i8 0, i8 0, i64 0 }, %struct.usb_device_id zeroinitializer], align 16
@.str.108 = private unnamed_addr constant [35 x i8] c"\017uvcvideo: Resuming interface %u\0A\00", align 1
@.str.109 = private unnamed_addr constant [61 x i8] c"\017uvcvideo: Resume: video streaming USB interface mismatch.\0A\00", align 1
@.str.106 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: Suspending interface %u\0A\00", align 1
@.str.107 = private unnamed_addr constant [62 x i8] c"\017uvcvideo: Suspend: video streaming USB interface mismatch.\0A\00", align 1
@.str.7 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Probing known UVC device %s (%04x:%04x)\0A\00", align 1
@.str.8 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: Probing generic UVC device %s\0A\00", align 1
@uvc_quirks_param = internal global i32 -1, align 4
@.str.9 = private unnamed_addr constant [23 x i8] c"UVC Camera (%04x:%04x)\00", align 1
@.str.10 = private unnamed_addr constant [46 x i8] c"\017uvcvideo: Unable to parse UVC descriptors.\0A\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"<unnamed>\00", align 1
@.str.11 = private unnamed_addr constant [53 x i8] c"\016uvcvideo: Found UVC %u.%02x device %s (%04x:%04x)\0A\00", align 1
@.str.13 = private unnamed_addr constant [84 x i8] c"\016uvcvideo: Forcing device quirks to 0x%x by module parameter for testing purpose.\0A\00", align 1
@.str.14 = private unnamed_addr constant [80 x i8] c"\016uvcvideo: Please report required quirks to the linux-uvc-devel mailing list.\0A\00", align 1
@.str.15 = private unnamed_addr constant [100 x i8] c"\016uvcvideo: Unable to initialize the status endpoint (%d), status interrupt will not be supported.\0A\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: UVC device initialized.\0A\00", align 1
@.str.101 = private unnamed_addr constant [46 x i8] c"\016uvcvideo: Failed to register entites (%d).\0A\00", align 1
@.str.102 = private unnamed_addr constant [58 x i8] c"\016uvcvideo: No streaming interface found for terminal %u.\00", align 1
@.str.103 = private unnamed_addr constant [51 x i8] c"\013uvcvideo: Failed to initialize the device (%d).\0A\00", align 1
@.str.104 = private unnamed_addr constant [51 x i8] c"\013uvcvideo: Failed to allocate video device (%d).\0A\00", align 1
@.str.105 = private unnamed_addr constant [51 x i8] c"\013uvcvideo: Failed to register video device (%d).\0A\00", align 1
@.str.74 = private unnamed_addr constant [19 x i8] c"&chain->ctrl_mutex\00", align 1
@uvc_scan_device.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.75 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Found a valid video chain (%s).\0A\00", align 1
@.str.76 = private unnamed_addr constant [41 x i8] c"\016uvcvideo: No valid video chain found.\0A\00", align 1
@uvc_print_chain.buffer = internal global [43 x i8] zeroinitializer, align 16
@.str.97 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@.str.98 = private unnamed_addr constant [2 x i8] c",\00", align 1
@.str.99 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.100 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.77 = private unnamed_addr constant [32 x i8] c"\017uvcvideo: Scanning UVC chain:\00", align 1
@.str.78 = private unnamed_addr constant [60 x i8] c"\017uvcvideo: Found reference to entity %d already in chain.\0A\00", align 1
@.str.92 = private unnamed_addr constant [7 x i8] c" <- IT\00", align 1
@.str.93 = private unnamed_addr constant [76 x i8] c"\017uvcvideo: Selector unit %d input %d isn't connected to an input terminal\0A\00", align 1
@.str.94 = private unnamed_addr constant [4 x i8] c" %d\00", align 1
@.str.95 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.96 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: Found reference to unknown entity %d.\0A\00", align 1
@.str.80 = private unnamed_addr constant [58 x i8] c"\017uvcvideo: Extension unit %d has more than 1 input pin.\0A\00", align 1
@.str.88 = private unnamed_addr constant [5 x i8] c" (->\00", align 1
@.str.89 = private unnamed_addr constant [7 x i8] c" XU %d\00", align 1
@.str.90 = private unnamed_addr constant [44 x i8] c"\017uvcvideo: Unsupported input terminal %u.\0A\00", align 1
@.str.86 = private unnamed_addr constant [7 x i8] c" OT %d\00", align 1
@.str.91 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.79 = private unnamed_addr constant [10 x i8] c" <- XU %d\00", align 1
@.str.81 = private unnamed_addr constant [10 x i8] c" <- PU %d\00", align 1
@.str.82 = private unnamed_addr constant [55 x i8] c"\017uvcvideo: Found multiple Processing Units in chain.\0A\00", align 1
@.str.83 = private unnamed_addr constant [10 x i8] c" <- SU %d\00", align 1
@.str.84 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Found multiple Selector Units in chain.\0A\00", align 1
@.str.85 = private unnamed_addr constant [11 x i8] c" <- IT %d\0A\00", align 1
@.str.87 = private unnamed_addr constant [60 x i8] c"\017uvcvideo: Unsupported entity type 0x%04x found in chain.\0A\00", align 1
@.str.17 = private unnamed_addr constant [50 x i8] c"\017uvcvideo: Found a Status endpoint (addr %02x).\0A\00", align 1
@.str.20 = private unnamed_addr constant [62 x i8] c"\017uvcvideo: device %d videocontrol interface %d HEADER error\0A\00", align 1
@.str.21 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: device %d interface %d doesn't exists\0A\00", align 1
@.str.22 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d videocontrol interface %d INPUT_TERMINAL error\0A\00", align 1
@.str.23 = private unnamed_addr constant [101 x i8] c"\017uvcvideo: device %d videocontrol interface %d INPUT_TERMINAL %d has invalid type 0x%04x, skipping\0A\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"Camera %u\00", align 1
@.str.25 = private unnamed_addr constant [9 x i8] c"Media %u\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"Input %u\00", align 1
@.str.27 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: device %d videocontrol interface %d OUTPUT_TERMINAL error\0A\00", align 1
@.str.28 = private unnamed_addr constant [102 x i8] c"\017uvcvideo: device %d videocontrol interface %d OUTPUT_TERMINAL %d has invalid type 0x%04x, skipping\0A\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"Output %u\00", align 1
@.str.30 = private unnamed_addr constant [69 x i8] c"\017uvcvideo: device %d videocontrol interface %d SELECTOR_UNIT error\0A\00", align 1
@.str.31 = private unnamed_addr constant [12 x i8] c"Selector %u\00", align 1
@.str.32 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: device %d videocontrol interface %d PROCESSING_UNIT error\0A\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"Processing %u\00", align 1
@.str.18 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d videocontrol interface %d EXTENSION_UNIT error\0A\00", align 1
@.str.19 = private unnamed_addr constant [13 x i8] c"Extension %u\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"\017uvcvideo: Found an unknown CS_INTERFACE descriptor (%u)\0A\00", align 1
@.str.35 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: device %d interface %d isn't a video streaming interface\0A\00", align 1
@.str.36 = private unnamed_addr constant [55 x i8] c"\017uvcvideo: device %d interface %d is already claimed\0A\00", align 1
@.str.37 = private unnamed_addr constant [18 x i8] c"&streaming->mutex\00", align 1
@uvc_parse_streaming.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.38 = private unnamed_addr constant [49 x i8] c"\017uvcvideo: trying extra data from endpoint %u.\0A\00", align 1
@.str.39 = private unnamed_addr constant [70 x i8] c"\017uvcvideo: no class-specific streaming interface descriptors found.\0A\00", align 1
@.str.40 = private unnamed_addr constant [80 x i8] c"\017uvcvideo: device %d videostreaming interface %d HEADER descriptor not found.\0A\00", align 1
@.str.41 = private unnamed_addr constant [81 x i8] c"\017uvcvideo: device %d videostreaming interface %d HEADER descriptor is invalid.\0A\00", align 1
@.str.42 = private unnamed_addr constant [79 x i8] c"\017uvcvideo: device %d videostreaming interface %d FORMAT %u is not supported.\0A\00", align 1
@.str.43 = private unnamed_addr constant [85 x i8] c"\017uvcvideo: device %d videostreaming interface %d has no supported formats defined.\0A\00", align 1
@.str.44 = private unnamed_addr constant [96 x i8] c"\017uvcvideo: device %d videostreaming interface %d has %u bytes of trailing descriptor garbage.\0A\00", align 1
@.str.45 = private unnamed_addr constant [64 x i8] c"\017uvcvideo: device %d videostreaming interface %d FORMAT error\0A\00", align 1
@.str.46 = private unnamed_addr constant [39 x i8] c"\016uvcvideo: Unknown video format %pUl\0A\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"%pUl\0A\00", align 1
@.str.48 = private unnamed_addr constant [6 x i8] c"MJPEG\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"SD-DV\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"SDL-DV\00", align 1
@.str.51 = private unnamed_addr constant [6 x i8] c"HD-DV\00", align 1
@.str.52 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: device %d videostreaming interface %d: unknown DV format %u\0A\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c" 60Hz\00", align 1
@.str.54 = private unnamed_addr constant [6 x i8] c" 50Hz\00", align 1
@.str.55 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: device %d videostreaming interface %d unsupported format %u\0A\00", align 1
@.str.56 = private unnamed_addr constant [30 x i8] c"\017uvcvideo: Found format %s.\0A\00", align 1
@.str.57 = private unnamed_addr constant [63 x i8] c"\017uvcvideo: device %d videostreaming interface %d FRAME error\0A\00", align 1
@.str.58 = private unnamed_addr constant [33 x i8] c"\017uvcvideo: - %ux%u (%u.%u fps)\0A\00", align 1
@.str.59 = private unnamed_addr constant [69 x i8] c"\017uvcvideo: device %d videostreaming interface %d COLORFORMAT error\0A\00", align 1
@uvc_colorspace.colorprimaries = internal constant [6 x i8] c"\00\08\05\06\01\02", align 1
@uvc_fmts = internal global [16 x %struct.uvc_format_desc] [%struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i32 0, i32 0), [16 x i8] c"YUY2\00\00\10\00\80\00\00\AA\008\9Bq", i32 1448695129 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i32 0, i32 0), [16 x i8] c"YUY2\00\00\10\00\80\00\00\00\008\9Bq", i32 1448695129 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i32 0, i32 0), [16 x i8] c"NV12\00\00\10\00\80\00\00\AA\008\9Bq", i32 842094158 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), [16 x i8] c"MJPG\00\00\10\00\80\00\00\AA\008\9Bq", i32 1196444237 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.62, i32 0, i32 0), [16 x i8] c"YV12\00\00\10\00\80\00\00\AA\008\9Bq", i32 842094169 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.63, i32 0, i32 0), [16 x i8] c"I420\00\00\10\00\80\00\00\AA\008\9Bq", i32 842093913 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.64, i32 0, i32 0), [16 x i8] c"M420\00\00\10\00\80\00\00\AA\008\9Bq", i32 808596557 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i32 0, i32 0), [16 x i8] c"UYVY\00\00\10\00\80\00\00\AA\008\9Bq", i32 1498831189 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.66, i32 0, i32 0), [16 x i8] c"Y800\00\00\10\00\80\00\00\AA\008\9Bq", i32 1497715271 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.67, i32 0, i32 0), [16 x i8] c"Y8  \00\00\10\00\80\00\00\AA\008\9Bq", i32 1497715271 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.68, i32 0, i32 0), [16 x i8] c"Y10 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540029273 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.69, i32 0, i32 0), [16 x i8] c"Y12 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540160345 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.70, i32 0, i32 0), [16 x i8] c"Y16 \00\00\10\00\80\00\00\AA\008\9Bq", i32 540422489 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.71, i32 0, i32 0), [16 x i8] c"BY8 \00\00\10\00\80\00\00\AA\008\9Bq", i32 825770306 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.72, i32 0, i32 0), [16 x i8] c"RGBP\00\00\10\00\80\00\00\AA\008\9Bq", i32 1346520914 }, %struct.uvc_format_desc { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.73, i32 0, i32 0), [16 x i8] c"H264\00\00\10\00\80\00\00\AA\008\9Bq", i32 875967048 }], align 16
@.str.60 = private unnamed_addr constant [17 x i8] c"YUV 4:2:2 (YUYV)\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (NV12)\00", align 1
@.str.62 = private unnamed_addr constant [17 x i8] c"YVU 4:2:0 (YV12)\00", align 1
@.str.63 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (I420)\00", align 1
@.str.64 = private unnamed_addr constant [17 x i8] c"YUV 4:2:0 (M420)\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"YUV 4:2:2 (UYVY)\00", align 1
@.str.66 = private unnamed_addr constant [23 x i8] c"Greyscale 8-bit (Y800)\00", align 1
@.str.67 = private unnamed_addr constant [23 x i8] c"Greyscale 8-bit (Y8  )\00", align 1
@.str.68 = private unnamed_addr constant [24 x i8] c"Greyscale 10-bit (Y10 )\00", align 1
@.str.69 = private unnamed_addr constant [24 x i8] c"Greyscale 12-bit (Y12 )\00", align 1
@.str.70 = private unnamed_addr constant [24 x i8] c"Greyscale 16-bit (Y16 )\00", align 1
@.str.71 = private unnamed_addr constant [10 x i8] c"RGB Bayer\00", align 1
@.str.72 = private unnamed_addr constant [7 x i8] c"RGB565\00", align 1
@.str.73 = private unnamed_addr constant [6 x i8] c"H.264\00", align 1
@llvm.used = appending global [18 x i8*] [i8* bitcast (%struct.kernel_param* @__param_clock to i8*), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_clock2035, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_nodrop to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_nodroptype2036, i32 0, i32 0), i8* getelementptr inbounds ([41 x i8], [41 x i8]* @__UNIQUE_ID_nodrop2037, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_quirks to i8*), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @__UNIQUE_ID_quirkstype2038, i32 0, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__UNIQUE_ID_quirks2039, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_trace to i8*), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__UNIQUE_ID_tracetype2040, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__UNIQUE_ID_trace2041, i32 0, i32 0), i8* bitcast (%struct.kernel_param* @__param_timeout to i8*), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__UNIQUE_ID_timeouttype2042, i32 0, i32 0), i8* getelementptr inbounds ([48 x i8], [48 x i8]* @__UNIQUE_ID_timeout2043, i32 0, i32 0), i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__UNIQUE_ID_author2468, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @__UNIQUE_ID_description2469, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @__UNIQUE_ID_license2470, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__UNIQUE_ID_version2471, i32 0, i32 0)], section "llvm.metadata"
@__param_clock = internal constant %struct.kernel_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_clock, i32 0, i32 0), %struct.kernel_param_ops* @__param_ops_clock, i16 420, i16 -1, %union.anon.3 { i8* bitcast (i32* @uvc_clock_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_clock2035 = internal constant [41 x i8] c"parm=clock:Video buffers timestamp clock\00", section ".modinfo", align 1
@__param_nodrop = internal constant %struct.kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__param_str_nodrop, i32 0, i32 0), %struct.kernel_param_ops* @param_ops_uint, i16 420, i16 -1, %union.anon.3 { i8* bitcast (i32* @uvc_no_drop_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_nodroptype2036 = internal constant [21 x i8] c"parmtype=nodrop:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_nodrop2037 = internal constant [41 x i8] c"parm=nodrop:Don't drop incomplete frames\00", section ".modinfo", align 1
@__param_quirks = internal constant %struct.kernel_param { i8* getelementptr inbounds ([7 x i8], [7 x i8]* @__param_str_quirks, i32 0, i32 0), %struct.kernel_param_ops* @param_ops_uint, i16 420, i16 -1, %union.anon.3 { i8* bitcast (i32* @uvc_quirks_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_quirkstype2038 = internal constant [21 x i8] c"parmtype=quirks:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_quirks2039 = internal constant [33 x i8] c"parm=quirks:Forced device quirks\00", section ".modinfo", align 1
@__param_trace = internal constant %struct.kernel_param { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @__param_str_trace, i32 0, i32 0), %struct.kernel_param_ops* @param_ops_uint, i16 420, i16 -1, %union.anon.3 { i8* bitcast (i32* @uvc_trace_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_tracetype2040 = internal constant [20 x i8] c"parmtype=trace:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_trace2041 = internal constant [31 x i8] c"parm=trace:Trace level bitmask\00", section ".modinfo", align 1
@__param_timeout = internal constant %struct.kernel_param { i8* getelementptr inbounds ([8 x i8], [8 x i8]* @__param_str_timeout, i32 0, i32 0), %struct.kernel_param_ops* @param_ops_uint, i16 420, i16 -1, %union.anon.3 { i8* bitcast (i32* @uvc_timeout_param to i8*) } }, section "__param", align 8
@__UNIQUE_ID_timeouttype2042 = internal constant [22 x i8] c"parmtype=timeout:uint\00", section ".modinfo", align 1
@__UNIQUE_ID_timeout2043 = internal constant [48 x i8] c"parm=timeout:Streaming control requests timeout\00", section ".modinfo", align 1
@__UNIQUE_ID_author2468 = internal constant [60 x i8] c"author=Laurent Pinchart <laurent.pinchart@ideasonboard.com>\00", section ".modinfo", align 1
@__UNIQUE_ID_description2469 = internal constant [35 x i8] c"description=USB Video Class driver\00", section ".modinfo", align 1
@__UNIQUE_ID_license2470 = internal constant [12 x i8] c"license=GPL\00", section ".modinfo", align 1
@__UNIQUE_ID_version2471 = internal constant [14 x i8] c"version=1.1.1\00", section ".modinfo", align 1
@__param_str_timeout = internal constant [8 x i8] c"timeout\00", align 1
@param_ops_uint = external global %struct.kernel_param_ops, align 8
@__param_str_trace = internal constant [6 x i8] c"trace\00", align 1
@__param_str_quirks = internal constant [7 x i8] c"quirks\00", align 1
@__param_str_nodrop = internal constant [7 x i8] c"nodrop\00", align 1
@__param_str_clock = internal constant [6 x i8] c"clock\00", align 1
@__param_ops_clock = internal global %struct.kernel_param_ops { i32 (i8*, %struct.kernel_param*)* @uvc_clock_param_set, i32 (i8*, %struct.kernel_param*)* @uvc_clock_param_get, void (i8*)* null }, align 8
@.str.4 = private unnamed_addr constant [16 x i8] c"CLOCK_MONOTONIC\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"CLOCK_REALTIME\00", align 1
@.str.1 = private unnamed_addr constant [7 x i8] c"clock_\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"monotonic\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"realtime\00", align 1
@__this_module = external global %struct.module, align 8
@.str.110 = private unnamed_addr constant [34 x i8] c"\016USB Video Class driver (1.1.1)\0A\00", align 1
@uvc_queue_qops = internal global %struct.vb2_ops { i32 (%struct.vb2_queue*, %struct.v4l2_format*, i32*, i32*, i32*, i8**)* @uvc_queue_setup, void (%struct.vb2_queue*)* @uvc_wait_prepare, void (%struct.vb2_queue*)* @uvc_wait_finish, i32 (%struct.vb2_buffer*)* null, i32 (%struct.vb2_buffer*)* @uvc_buffer_prepare, i32 (%struct.vb2_buffer*)* @uvc_buffer_finish, void (%struct.vb2_buffer*)* null, i32 (%struct.vb2_queue*, i32)* null, i32 (%struct.vb2_queue*)* null, void (%struct.vb2_buffer*)* @uvc_buffer_queue }, align 8
@vb2_vmalloc_memops = external constant %struct.vb2_mem_ops, align 8
@.str.6 = private unnamed_addr constant [14 x i8] c"&queue->mutex\00", align 1
@uvc_queue_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.2.7 = private unnamed_addr constant [26 x i8] c"&(&queue->irqlock)->rlock\00", align 1
@uvc_queue_init.__key.1 = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.3.10 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: [E] Bytes used out of bounds.\0A\00", align 1
@uvc_fops = constant %struct.v4l2_file_operations { %struct.module* @__this_module, i64 (%struct.file*, i8*, i64, i64*)* @uvc_v4l2_read, i64 (%struct.file*, i8*, i64, i64*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @uvc_v4l2_poll, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* @uvc_v4l2_ioctl, i64 (%struct.file*, i32, i64)* @uvc_v4l2_compat_ioctl32, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* @uvc_v4l2_mmap, i32 (%struct.file*)* @uvc_v4l2_open, i32 (%struct.file*)* @uvc_v4l2_release }, align 8
@.str.17.14 = private unnamed_addr constant [30 x i8] c"\017uvcvideo: uvc_v4l2_release\0A\00", align 1
@.str.16.15 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_open\0A\00", align 1
@.str.15.19 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_mmap\0A\00", align 1
@kernel_stack = external global i64, align 8
@.str.2.20 = private unnamed_addr constant [28 x i8] c"\017uvcvideo: uvc_v4l2_ioctl(\00", align 1
@.str.3.21 = private unnamed_addr constant [3 x i8] c")\0A\00", align 1
@.str.5.23 = private unnamed_addr constant [38 x i8] c"\017uvcvideo: Unsupported ioctl 0x%08x\0A\00", align 1
@.str.6.24 = private unnamed_addr constant [34 x i8] c"\017uvcvideo: Unknown ioctl 0x%08x\0A\00", align 1
@.str.12.25 = private unnamed_addr constant [47 x i8] c"\017uvcvideo: Unsupported V4L2 control type %u.\0A\00", align 1
@.str.11.28 = private unnamed_addr constant [51 x i8] c"\017uvcvideo: Setting frame interval to %u/%u (%u).\0A\00", align 1
@.str.8.29 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Trying format 0x%08x (%c%c%c%c): %ux%u.\0A\00", align 1
@.str.9.30 = private unnamed_addr constant [37 x i8] c"\017uvcvideo: Unsupported size %ux%u.\0A\00", align 1
@.str.10.31 = private unnamed_addr constant [64 x i8] c"\017uvcvideo: Using default frame interval %u.%u us (%u.%u fps).\0A\00", align 1
@.str.1.33 = private unnamed_addr constant [27 x i8] c"\017uvcvideo: uvc_v4l2_poll\0A\00", align 1
@.str.111 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: uvc_v4l2_read: not implemented.\0A\00", align 1
@.str.114 = private unnamed_addr constant [75 x i8] c"\013uvcvideo: Failed to query (%s) UVC control %u on unit %u: %d (exp. %u).\0A\00", align 1
@.str.14.115 = private unnamed_addr constant [8 x i8] c"GET_RES\00", align 1
@.str.15.116 = private unnamed_addr constant [8 x i8] c"GET_LEN\00", align 1
@.str.12.117 = private unnamed_addr constant [8 x i8] c"GET_MIN\00", align 1
@.str.13.118 = private unnamed_addr constant [8 x i8] c"GET_MAX\00", align 1
@.str.18.119 = private unnamed_addr constant [10 x i8] c"<invalid>\00", align 1
@.str.10.120 = private unnamed_addr constant [8 x i8] c"SET_CUR\00", align 1
@.str.11.121 = private unnamed_addr constant [8 x i8] c"GET_CUR\00", align 1
@.str.16.122 = private unnamed_addr constant [9 x i8] c"GET_INFO\00", align 1
@.str.17.123 = private unnamed_addr constant [8 x i8] c"GET_DEF\00", align 1
@.str.22.127 = private unnamed_addr constant [97 x i8] c"\016uvcvideo: UVC non compliance - GET_MIN/MAX(PROBE) incorrectly supported. Enabling workaround.\0A\00", align 1
@.str.23.129 = private unnamed_addr constant [85 x i8] c"\016uvcvideo: UVC non compliance - GET_DEF(PROBE) not supported. Enabling workaround.\0A\00", align 1
@.str.20.130 = private unnamed_addr constant [6 x i8] c"probe\00", align 1
@.str.21.131 = private unnamed_addr constant [7 x i8] c"commit\00", align 1
@.str.24.132 = private unnamed_addr constant [65 x i8] c"\013uvcvideo: Failed to query (%u) UVC %s control : %d (exp. %u).\0A\00", align 1
@.str.19.136 = private unnamed_addr constant [58 x i8] c"\013uvcvideo: Failed to set UVC %s control : %d (exp. %u).\0A\00", align 1
@.str.1.140 = private unnamed_addr constant [92 x i8] c"\017uvcvideo: %s: PTS %u y %llu.%06llu SOF %u.%06llu (x1 %u x2 %u y1 %u y2 %u SOF offset %u)\0A\00", align 1
@.str.2.141 = private unnamed_addr constant [106 x i8] c"\017uvcvideo: %s: SOF %u.%06llu y %llu ts %lu.%06lu buf ts %lu.%06lu (x1 %u/%u/%u x2 %u/%u/%u y1 %u y2 %u)\0A\00", align 1
@.str.3.143 = private unnamed_addr constant [61 x i8] c"frames:  %u\0Apackets: %u\0Aempty:   %u\0Aerrors:  %u\0Ainvalid: %u\0A\00", align 1
@.str.4.144 = private unnamed_addr constant [34 x i8] c"pts: %u early, %u initial, %u ok\0A\00", align 1
@.str.5.145 = private unnamed_addr constant [30 x i8] c"scr: %u count ok, %u diff ok\0A\00", align 1
@.str.6.146 = private unnamed_addr constant [40 x i8] c"sof: %u <= sof <= %u, freq %u.%03u kHz\0A\00", align 1
@.str.25.153 = private unnamed_addr constant [68 x i8] c"\017uvcvideo: Device requested null bandwidth, defaulting to lowest.\0A\00", align 1
@.str.26.154 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Device requested %u B/frame bandwidth.\0A\00", align 1
@.str.27.155 = private unnamed_addr constant [65 x i8] c"\017uvcvideo: No fast enough alt setting for requested bandwidth.\0A\00", align 1
@.str.28.156 = private unnamed_addr constant [68 x i8] c"\017uvcvideo: Selecting alternate setting %u (%u B/frame bandwidth).\0A\00", align 1
@.str.29.157 = private unnamed_addr constant [43 x i8] c"\013uvcvideo: Failed to submit URB %u (%d).\0A\00", align 1
@.str.32.159 = private unnamed_addr constant [63 x i8] c"\014uvcvideo: Non-zero status (%d) in video completion handler.\0A\00", align 1
@.str.33.161 = private unnamed_addr constant [48 x i8] c"\013uvcvideo: Failed to resubmit video URB (%d).\0A\00", align 1
@.str.30.162 = private unnamed_addr constant [59 x i8] c"\017uvcvideo: Allocated %u URB buffers of %ux%u bytes each.\0A\00", align 1
@.str.31.163 = private unnamed_addr constant [67 x i8] c"\017uvcvideo: Failed to allocate URB buffers (%u bytes per packet).\0A\00", align 1
@.str.7.166 = private unnamed_addr constant [47 x i8] c"\016uvcvideo: No supported video formats found.\0A\00", align 1
@.str.8.168 = private unnamed_addr constant [63 x i8] c"\016uvcvideo: No frame descriptor found for the default format.\0A\00", align 1
@.str.9.169 = private unnamed_addr constant [79 x i8] c"\016uvcvideo: Isochronous endpoints are not supported for video output devices.\0A\00", align 1
@.str.42.170 = private unnamed_addr constant [41 x i8] c"\017uvcvideo: Frame complete (EOF found).\0A\00", align 1
@.str.43.171 = private unnamed_addr constant [35 x i8] c"\017uvcvideo: EOF in empty payload.\0A\00", align 1
@.str.35.173 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Marking buffer as bad (error bit set).\0A\00", align 1
@.str.36.174 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Dropping payload (out of sync).\0A\00", align 1
@.str.37.175 = private unnamed_addr constant [47 x i8] c"\017uvcvideo: Frame complete (FID bit toggled).\0A\00", align 1
@.str.39.177 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.40.178 = private unnamed_addr constant [2 x i8] c"!\00", align 1
@.str.38.179 = private unnamed_addr constant [118 x i8] c"\017uvcvideo: frame %u stats: %u/%u/%u packets, %u/%u/%u pts (%searly %sinitial), %u/%u scr, last pts/stc/sof %u/%u/%u\0A\00", align 1
@.str.44.183 = private unnamed_addr constant [23 x i8] c"&(&clock->lock)->rlock\00", align 1
@uvc_video_clock_init.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@uvc_ctrl_sub_ev_ops = constant { i32 (%struct.v4l2_subscribed_event.1203*, i32)*, void (%struct.v4l2_subscribed_event.1203*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* } { i32 (%struct.v4l2_subscribed_event.1203*, i32)* @uvc_ctrl_add_event, void (%struct.v4l2_subscribed_event.1203*)* @uvc_ctrl_del_event, void (%struct.v4l2_event*, %struct.v4l2_event*)* @v4l2_ctrl_replace, void (%struct.v4l2_event*, %struct.v4l2_event*)* @v4l2_ctrl_merge }, align 8
@.str.7.188 = private unnamed_addr constant [88 x i8] c"\016uvcvideo: UVC non compliance - GET_RES failed on an XU control. Enabling workaround.\0A\00", align 1
@.str.6.189 = private unnamed_addr constant [39 x i8] c"\017uvcvideo: Control 0x%08x not found.\0A\00", align 1
@.str.205 = private unnamed_addr constant [42 x i8] c"\017uvcvideo: Extension unit %u not found.\0A\00", align 1
@.str.1.206 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Control %pUl/%u not found.\0A\00", align 1
@.str.13.209 = private unnamed_addr constant [62 x i8] c"/diffkemp/kernel/linux-3.10/arch/x86/include/asm/uaccess_64.h\00", align 1
@.str.14.210 = private unnamed_addr constant [27 x i8] c"Buffer overflow detected!\0A\00", align 1
@.str.8.211 = private unnamed_addr constant [73 x i8] c"\017uvcvideo: Failed to initialize control %pUl/%u on device %s entity %u\0A\00", align 1
@.str.12.214 = private unnamed_addr constant [58 x i8] c"\017uvcvideo: Added control %pUl/%u to device %s entity %u\0A\00", align 1
@.str.9.215 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: GET_LEN failed on control %pUl/%u (%d).\0A\00", align 1
@.str.10.217 = private unnamed_addr constant [54 x i8] c"\017uvcvideo: GET_INFO failed on control %pUl/%u (%d).\0A\00", align 1
@.str.11.218 = private unnamed_addr constant [82 x i8] c"\017uvcvideo: XU control %pUl/%u queried: len %u, flags { get %u set %u auto %u }.\0A\00", align 1
@uvc_ctrl_fixup_xu_info.fixups = internal constant [3 x %struct.uvc_ctrl_fixup] [%struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2242, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }, %struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2252, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }, %struct.uvc_ctrl_fixup { %struct.usb_device_id { i16 3, i16 1133, i16 2452, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9, i8 1, i8 -83 }], align 16
@.str.2.221 = private unnamed_addr constant [32 x i8] c"\016restoring control %pUl/%u/%u\0A\00", align 1
@.str.3.224 = private unnamed_addr constant [67 x i8] c"\017uvcvideo: Can't add mapping '%s', control id 0x%08x is invalid.\0A\00", align 1
@.str.4.225 = private unnamed_addr constant [71 x i8] c"\017uvcvideo: Can't add mapping '%s', control id 0x%08x already exists.\0A\00", align 1
@.str.5.228 = private unnamed_addr constant [75 x i8] c"\017uvcvideo: Can't add mapping '%s', maximum mappings count (%u) exceeded.\0A\00", align 1
@.str.15.229 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Adding mapping '%s' to control %pUl/%u.\0A\00", align 1
@uvc_camera_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", align 16
@uvc_media_transport_input_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\03", align 16
@uvc_processing_guid = internal constant [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", align 16
@uvc_ctrls = internal global [35 x %struct.uvc_control_info] [%struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 0, i8 2, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 1, i8 3, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 2, i8 6, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 3, i8 7, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 4, i8 8, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 5, i8 9, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 6, i8 10, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 7, i8 12, i16 4, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 8, i8 1, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 9, i8 4, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 10, i8 5, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 11, i8 16, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 11, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 13, i8 13, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 14, i8 14, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 15, i8 15, i16 2, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 16, i8 17, i16 1, i32 2 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 17, i8 18, i16 1, i32 2 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 0, i8 1, i16 1, i32 67 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 1, i8 2, i16 1, i32 115 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 2, i8 3, i16 1, i32 67 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 3, i8 4, i16 4, i32 127 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 4, i8 5, i16 1, i32 65 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 5, i8 6, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 6, i8 7, i16 2, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 7, i8 9, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 8, i8 10, i16 1, i32 129 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 9, i8 11, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 10, i8 12, i16 3, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 11, i8 13, i16 8, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 12, i8 14, i16 4, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 15, i16 2, i32 255 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 14, i8 16, i16 2, i32 189 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 17, i8 8, i16 1, i32 99 }, %struct.uvc_control_info { %struct.list_head zeroinitializer, [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 18, i8 17, i16 1, i32 195 }], align 16
@uvc_ctrl_mappings = internal global [27 x %struct.uvc_control_mapping] [%struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963776, [32 x i8] c"Brightness\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 2, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963777, [32 x i8] c"Contrast\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 3, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963779, [32 x i8] c"Hue\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 6, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963801, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963778, [32 x i8] c"Saturation\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 7, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963803, [32 x i8] c"Sharpness\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 8, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963792, [32 x i8] c"Gamma\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 9, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963804, [32 x i8] c"Backlight Compensation\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 1, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963795, [32 x i8] c"Gain\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 4, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963800, [32 x i8] c"Power Line Frequency\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 5, i8 2, i8 0, i32 3, i32 4, %struct.uvc_menu_info* getelementptr inbounds ([3 x %struct.uvc_menu_info], [3 x %struct.uvc_menu_info]* @power_line_frequency_controls, i32 0, i32 0), i32 3, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963801, [32 x i8] c"Hue, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 16, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963779, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094849, [32 x i8] c"Exposure, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 2, i8 4, i8 0, i32 3, i32 5, %struct.uvc_menu_info* getelementptr inbounds ([4 x %struct.uvc_menu_info], [4 x %struct.uvc_menu_info]* @exposure_auto_controls, i32 0, i32 0), i32 4, i32 0, i32 0, [2 x i32] [i32 10094850, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094851, [32 x i8] c"Exposure, Auto Priority\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 3, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094850, [32 x i8] c"Exposure (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 4, i8 32, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 10094849, i32 1, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963788, [32 x i8] c"White Balance Temperature, Auto\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 11, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963802, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963802, [32 x i8] c"White Balance Temperature\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 10, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963788, [32 x i8] c"White Balance Component, Auto\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 13, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 9963791, i32 9963790], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963791, [32 x i8] c"White Balance Blue Component\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 16, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 9963790, [32 x i8] c"White Balance Red Component\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01\01", i8 12, i8 16, i8 16, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 9963788, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094858, [32 x i8] c"Focus (absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 6, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 10094860, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094860, [32 x i8] c"Focus, Auto\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 8, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] [i32 10094858, i32 0], i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094865, [32 x i8] c"Iris, Absolute\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 9, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094866, [32 x i8] c"Iris, Relative\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 10, i8 8, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094861, [32 x i8] c"Zoom, Absolute\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 11, i8 16, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094863, [32 x i8] c"Zoom, Continuous\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 12, i8 0, i8 0, i32 1, i32 1, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_ctrl_get_zoom, void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_ctrl_set_zoom }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094856, [32 x i8] c"Pan (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 32, i8 0, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094857, [32 x i8] c"Tilt (Absolute)\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 13, i8 32, i8 32, i32 1, i32 2, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }, %struct.uvc_control_mapping { %struct.list_head zeroinitializer, %struct.list_head zeroinitializer, i32 10094864, [32 x i8] c"Privacy\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00", [16 x i8] c"\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\01", i8 17, i8 1, i8 0, i32 2, i32 3, %struct.uvc_menu_info* null, i32 0, i32 0, i32 0, [2 x i32] zeroinitializer, i32 (%struct.uvc_control_mapping*, i8, i8*)* null, void (%struct.uvc_control_mapping*, i32, i8*)* null }], align 16
@power_line_frequency_controls = internal global [3 x %struct.uvc_menu_info] [%struct.uvc_menu_info { i32 0, [32 x i8] c"Disabled\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 1, [32 x i8] c"50 Hz\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 2, [32 x i8] c"60 Hz\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }], align 16
@exposure_auto_controls = internal global [4 x %struct.uvc_menu_info] [%struct.uvc_menu_info { i32 2, [32 x i8] c"Auto Mode\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 1, [32 x i8] c"Manual Mode\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 4, [32 x i8] c"Shutter Priority Mode\00\00\00\00\00\00\00\00\00\00\00" }, %struct.uvc_menu_info { i32 8, [32 x i8] c"Aperture Priority Mode\00\00\00\00\00\00\00\00\00\00" }], align 16
@uvc_ctrl_prune_entity.processing_blacklist = internal constant [3 x %struct.uvc_ctrl_blacklist] [%struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 5075, i16 20635, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9 }, %struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 7247, i16 12288, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 6 }, %struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 22918, i16 577, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 2 }], align 16
@uvc_ctrl_prune_entity.camera_blacklist = internal constant [1 x %struct.uvc_ctrl_blacklist] [%struct.uvc_ctrl_blacklist { %struct.usb_device_id { i16 3, i16 1784, i16 12293, i16 0, i16 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i8 0, i64 0 }, i8 9 }], align 16
@.str.16.232 = private unnamed_addr constant [57 x i8] c"\017uvcvideo: %u/%u control is black listed, removing it.\0A\00", align 1
@.str.2.239 = private unnamed_addr constant [64 x i8] c"\014uvcvideo: Non-zero status (%d) in status completion handler.\0A\00", align 1
@.str.3.240 = private unnamed_addr constant [43 x i8] c"\017uvcvideo: Unknown status event type %u.\0A\00", align 1
@.str.4.241 = private unnamed_addr constant [49 x i8] c"\013uvcvideo: Failed to resubmit status URB (%d).\0A\00", align 1
@.str.10.242 = private unnamed_addr constant [54 x i8] c"\017uvcvideo: Invalid streaming status event received.\0A\00", align 1
@.str.12.243 = private unnamed_addr constant [8 x i8] c"pressed\00", align 1
@.str.13.244 = private unnamed_addr constant [9 x i8] c"released\00", align 1
@.str.11.245 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Button (intf %u) %s len %d\0A\00", align 1
@.str.14.246 = private unnamed_addr constant [53 x i8] c"\017uvcvideo: Stream %u error event %02x %02x len %d.\0A\00", align 1
@uvc_event_control.attrs = private unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.5.249, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.6.250, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7.251, i32 0, i32 0)], align 16
@.str.8.247 = private unnamed_addr constant [52 x i8] c"\017uvcvideo: Invalid control status event received.\0A\00", align 1
@.str.9.248 = private unnamed_addr constant [45 x i8] c"\017uvcvideo: Control %u/%u %s change len %d.\0A\00", align 1
@.str.5.249 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.6.250 = private unnamed_addr constant [5 x i8] c"info\00", align 1
@.str.7.251 = private unnamed_addr constant [8 x i8] c"failure\00", align 1
@.str.254 = private unnamed_addr constant [8 x i8] c"/button\00", align 1
@.str.1.255 = private unnamed_addr constant [10 x i8] c"usb-%s-%s\00", align 1
@.str.268 = private unnamed_addr constant [46 x i8] c"\017uvcvideo: USB isochronous frame lost (%d).\0A\00", align 1
@isight_decode.hdr = internal constant [12 x i8] c"\11\223D\DE\AD\BE\EF\DE\AD\FA\CE", align 1
@.str.1.269 = private unnamed_addr constant [33 x i8] c"\017uvcvideo: iSight header found\0A\00", align 1
@.str.2.270 = private unnamed_addr constant [44 x i8] c"\017uvcvideo: Dropping packet (out of sync).\0A\00", align 1
@.str.3.271 = private unnamed_addr constant [40 x i8] c"\017uvcvideo: Frame complete (overflow).\0A\00", align 1
@uvc_debugfs_root_dir = internal global %struct.dentry* null, align 8
@.str.274 = private unnamed_addr constant [6 x i8] c"%u-%u\00", align 1
@.str.1.275 = private unnamed_addr constant [52 x i8] c"\016uvcvideo: Unable to create debugfs %s directory.\0A\00", align 1
@.str.2.276 = private unnamed_addr constant [6 x i8] c"stats\00", align 1
@uvc_debugfs_stats_fops = internal constant %struct.file_operations { %struct.module* @__this_module, i64 (%struct.file*, i64, i32)* @no_llseek, i64 (%struct.file*, i8*, i64, i64*)* @uvc_debugfs_stats_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iovec*, i64, i64)* null, i64 (%struct.kiocb*, %struct.iovec*, i64, i64)* null, i32 (%struct.file*, i8*, i32 (i8*, i8*, i32, i64, i64, i32)*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* null, i64 (%struct.file*, i32, i64)* null, i64 (%struct.file*, i32, i64)* null, i32 (%struct.file*, %struct.vm_area_struct*)* null, i32 (%struct.inode*, %struct.file*)* @uvc_debugfs_stats_open, i32 (%struct.file*, %struct.files_struct*)* null, i32 (%struct.inode*, %struct.file*)* @uvc_debugfs_stats_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (%struct.kiocb*, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**)* null, i64 (%struct.file*, i32, i64, i64)* null, i32 (%struct.seq_file*, %struct.file*)* null }, align 8
@.str.3.277 = private unnamed_addr constant [50 x i8] c"\016uvcvideo: Unable to create debugfs stats file.\0A\00", align 1
@usb_debug_root = external global %struct.dentry*, align 8
@.str.4.283 = private unnamed_addr constant [9 x i8] c"uvcvideo\00", align 1
@.str.5.284 = private unnamed_addr constant [48 x i8] c"\016uvcvideo: Unable to create debugfs directory\0A\00", align 1
@.str.291 = private unnamed_addr constant [55 x i8] c"\016uvcvideo: Failed to initialize entity for entity %u\0A\00", align 1
@.str.1.292 = private unnamed_addr constant [53 x i8] c"\016uvcvideo: Failed to register entity for entity %u\0A\00", align 1
@uvc_subdev_ops = internal global %struct.v4l2_subdev_ops zeroinitializer, align 8

@__mod_usb_device_table = alias %struct.usb_device_id, getelementptr inbounds ([43 x %struct.usb_device_id], [43 x %struct.usb_device_id]* @uvc_ids, i32 0, i32 0)
@init_module = alias i32 (), i32 ()* @uvc_init
@cleanup_module = alias void (), void ()* @uvc_cleanup

; Function Attrs: nounwind uwtable
define internal i32 @uvc_probe(%struct.usb_interface* %intf, %struct.usb_device_id* %id) #0 {
if.then13:
  br label %if.end20

if.end20:                                         ; preds = %if.then13
  %call21 = call i8* @kzalloc(i64 2272, i32 208)
  %0 = bitcast i8* %call21 to %struct.uvc_device*
  br label %if.end24

if.end24:                                         ; preds = %if.end20
  %1 = load i32, i32* @uvc_quirks_param, align 4, !tbaa !2
  %cmp30 = icmp eq i32 %1, -1
  br i1 %cmp30, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.end24
  %driver_info = getelementptr inbounds %struct.usb_device_id, %struct.usb_device_id* %id, i32 0, i32 12
  %2 = load i64, i64* %driver_info, align 8, !tbaa !6
  br label %cond.end

cond.false:                                       ; preds = %if.end24
  %3 = load i32, i32* @uvc_quirks_param, align 4, !tbaa !2
  %conv32 = zext i32 %3 to i64
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %2, %cond.true ], [ %conv32, %cond.false ]
  %conv33 = trunc i64 %cond to i32
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 3
  store i32 %conv33, i32* %quirks, align 8, !tbaa !10
  br label %cleanup

cleanup:                                          ; preds = %cond.end
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_disconnect(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  call void @usb_set_intfdata(%struct.usb_interface* %intf, i8* null)
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 6
  %2 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !40
  %conv = zext i8 %2 to i32
  %cmp = icmp eq i32 %conv, 2
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %state = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 6
  %3 = load i32, i32* %state, align 8, !tbaa !43
  %or = or i32 %3, 1
  store i32 %or, i32* %state, align 8, !tbaa !43
  call void @uvc_unregister_video(%struct.uvc_device* %0)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end, %entry
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 1, %entry ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_suspend(%struct.usb_interface* %intf, i32 %message.coerce) #0 {
entry:
  %message = alloca %union.anon.5, align 4
  %coerce.dive = getelementptr inbounds %union.anon.5, %union.anon.5* %message, i32 0, i32 0
  store i32 %message.coerce, i32* %coerce.dive, align 4
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %1, 256
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %3 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv = zext i8 %3 to i32
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.106, i32 0, i32 0), i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %cur_altsetting2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting2, align 8, !tbaa !38
  %desc3 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc3, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !40
  %conv4 = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv4, 1
  br i1 %cmp, label %if.then6, label %if.end8

if.then6:                                         ; preds = %do.end
  %call7 = call i32 @uvc_status_suspend(%struct.uvc_device* %0)
  br label %cleanup

if.end8:                                          ; preds = %do.end
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end8
  %list19.sink = phi %struct.list_head* [ %list19, %for.inc ], [ %streams, %if.end8 ]
  %next20 = getelementptr inbounds %struct.list_head, %struct.list_head* %list19.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next20, align 8, !tbaa !45
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr22 = getelementptr inbounds i8, i8* %7, i64 0
  %8 = bitcast i8* %add.ptr22 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 0
  %streams9 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  %cmp10 = icmp ne %struct.list_head* %list, %streams9
  br i1 %cmp10, label %for.body, label %do.body23

for.body:                                         ; preds = %for.cond
  %intf12 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 5
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf12, align 8, !tbaa !46
  %cmp13 = icmp eq %struct.usb_interface* %9, %intf
  br i1 %cmp13, label %if.then15, label %for.inc

if.then15:                                        ; preds = %for.body
  %call16 = call i32 @uvc_video_suspend(%struct.uvc_streaming* %8)
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %list19 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 0
  br label %for.cond

do.body23:                                        ; preds = %for.cond
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and24 = and i32 %10, 256
  %tobool25 = icmp ne i32 %and24, 0
  br i1 %tobool25, label %if.then26, label %cleanup

if.then26:                                        ; preds = %do.body23
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.107, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then26, %do.body23, %if.then15, %if.then6
  %retval.0 = phi i32 [ %call7, %if.then6 ], [ %call16, %if.then15 ], [ -22, %if.then26 ], [ -22, %do.body23 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_resume(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i32 @__uvc_resume(%struct.usb_interface* %intf, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_reset_resume(%struct.usb_interface* %intf) #0 {
entry:
  %call = call i32 @__uvc_resume(%struct.usb_interface* %intf, i32 1)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_resume(%struct.usb_interface* %intf, i32 %reset) #0 {
entry:
  %call = call i8* @usb_get_intfdata(%struct.usb_interface* %intf)
  %0 = bitcast i8* %call to %struct.uvc_device*
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %1, 256
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %3 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv = zext i8 %3 to i32
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.108, i32 0, i32 0), i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %cur_altsetting2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting2, align 8, !tbaa !38
  %desc3 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc3, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !40
  %conv4 = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv4, 1
  br i1 %cmp, label %if.then6, label %if.end16

if.then6:                                         ; preds = %do.end
  %tobool7 = icmp ne i32 %reset, 0
  br i1 %tobool7, label %if.then8, label %if.end14

if.then8:                                         ; preds = %if.then6
  %call9 = call i32 @uvc_ctrl_resume_device(%struct.uvc_device* %0)
  %cmp10 = icmp slt i32 %call9, 0
  %. = select i1 %cmp10, i32 1, i32 0
  %SwitchLeaf = icmp eq i32 %., 0
  br i1 %SwitchLeaf, label %if.end14, label %cleanup39

if.end14:                                         ; preds = %if.then8, %if.then6
  %call15 = call i32 @uvc_status_resume(%struct.uvc_device* %0)
  br label %cleanup39

if.end16:                                         ; preds = %do.end
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end16
  %list27.sink = phi %struct.list_head* [ %list27, %for.inc ], [ %streams, %if.end16 ]
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %list27.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next28, align 8, !tbaa !45
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr30 = getelementptr inbounds i8, i8* %7, i64 0
  %8 = bitcast i8* %add.ptr30 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 0
  %streams17 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 15
  %cmp18 = icmp ne %struct.list_head* %list, %streams17
  br i1 %cmp18, label %for.body, label %do.body31

for.body:                                         ; preds = %for.cond
  %intf20 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 5
  %9 = load %struct.usb_interface*, %struct.usb_interface** %intf20, align 8, !tbaa !46
  %cmp21 = icmp eq %struct.usb_interface* %9, %intf
  br i1 %cmp21, label %if.then23, label %for.inc

if.then23:                                        ; preds = %for.body
  %call24 = call i32 @uvc_video_resume(%struct.uvc_streaming* %8, i32 %reset)
  br label %cleanup39

for.inc:                                          ; preds = %for.body
  %list27 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %8, i32 0, i32 0
  br label %for.cond

do.body31:                                        ; preds = %for.cond
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and32 = and i32 %10, 256
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %cleanup39

if.then34:                                        ; preds = %do.body31
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.109, i32 0, i32 0))
  br label %cleanup39

cleanup39:                                        ; preds = %if.then34, %do.body31, %if.then23, %if.end14, %if.then8
  %retval.1 = phi i32 [ %call15, %if.end14 ], [ %call24, %if.then23 ], [ -22, %if.then34 ], [ -22, %do.body31 ], [ %call9, %if.then8 ]
  ret i32 %retval.1
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @usb_get_intfdata(%struct.usb_interface* %intf) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  ret i8* %call
}

declare i32 @printk(i8*, ...) #2

declare i8* @dev_get_drvdata(%struct.device*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_set_intfdata(%struct.usb_interface* %intf, i8* %data) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %call = call i32 @dev_set_drvdata(%struct.device* %dev, i8* %data)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_unregister_video(%struct.uvc_device* %dev) #0 {
entry:
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  call void @atomic_inc(%union.anon.5* %nstreams)
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list6.sink = phi %struct.list_head* [ %list6, %for.inc ], [ %streams, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr9 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  %streams1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp = icmp ne %struct.list_head* %list, %streams1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %vdev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 2
  %3 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !58
  %cmp2 = icmp eq %struct.video_device* %3, null
  br i1 %cmp2, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  %vdev3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 2
  %4 = load %struct.video_device*, %struct.video_device** %vdev3, align 8, !tbaa !58
  call void @video_unregister_device(%struct.video_device* %4)
  %vdev4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 2
  store %struct.video_device* null, %struct.video_device** %vdev4, align 8, !tbaa !58
  call void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %2)
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body
  %list6 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %nstreams10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  %call = call i32 @atomic_dec_and_test(%union.anon.5* %nstreams10)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then11, label %if.end12

if.then11:                                        ; preds = %for.end
  call void @uvc_delete(%struct.uvc_device* %dev)
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %for.end
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @atomic_inc(%union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !59
  ret void
}

declare void @video_unregister_device(%struct.video_device*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @atomic_dec_and_test(%union.anon.5* %v) #1 {
entry:
  %c = alloca i8, align 1
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %c) #8
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0; sete $1", "=*m,=*qm,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i8* %c, i32* %counter) #8, !srcloc !60
  %0 = load i8, i8* %c, align 1, !tbaa !61
  %conv = zext i8 %0 to i32
  %cmp = icmp ne i32 %conv, 0
  %conv1 = zext i1 %cmp to i32
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %c) #8
  ret i32 %conv1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_delete(%struct.uvc_device* %dev) #0 {
entry:
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  call void @usb_put_intf(%struct.usb_interface* %0)
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  call void @usb_put_dev(%struct.usb_device* %1)
  call void @uvc_status_cleanup(%struct.uvc_device* %dev)
  call void @uvc_ctrl_cleanup_device(%struct.uvc_device* %dev)
  %vdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  %dev1 = getelementptr inbounds %struct.v4l2_device, %struct.v4l2_device* %vdev, i32 0, i32 0
  %2 = load %struct.device*, %struct.device** %dev1, align 8, !tbaa !64
  %tobool = icmp ne %struct.device* %2, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %vdev2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  call void @v4l2_device_unregister(%struct.v4l2_device* %vdev2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %mdev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 9
  %devnode = getelementptr inbounds %struct.media_device, %struct.media_device* %mdev, i32 0, i32 1
  %call = call i32 @media_devnode_is_registered(%struct.media_devnode* %devnode)
  %tobool3 = icmp ne i32 %call, 0
  br i1 %tobool3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %if.end
  %mdev5 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 9
  call void @media_device_unregister(%struct.media_device* %mdev5)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %chains, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end6
  %.sink = phi %struct.list_head* [ %4, %for.body ], [ %3, %if.end6 ]
  %p.0 = phi %struct.list_head* [ %3, %if.end6 ], [ %4, %for.body ]
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next9, align 8, !tbaa !65
  %chains8 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %cmp = icmp ne %struct.list_head* %p.0, %chains8
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %5 = bitcast %struct.list_head* %p.0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 -8
  %6 = bitcast i8* %add.ptr to %struct.uvc_video_chain*
  %7 = bitcast %struct.uvc_video_chain* %6 to i8*
  call void @kfree(i8* %7)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %entities, i32 0, i32 0
  %8 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !65
  br label %for.cond12

for.cond12:                                       ; preds = %if.end24, %for.end
  %.sink1 = phi %struct.list_head* [ %9, %if.end24 ], [ %8, %for.end ]
  %p.1 = phi %struct.list_head* [ %8, %for.end ], [ %9, %if.end24 ]
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink1, i32 0, i32 0
  %9 = load %struct.list_head*, %struct.list_head** %next26, align 8, !tbaa !65
  %entities13 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp14 = icmp ne %struct.list_head* %p.1, %entities13
  br i1 %cmp14, label %for.body15, label %for.end27

for.body15:                                       ; preds = %for.cond12
  %10 = bitcast %struct.list_head* %p.1 to i8*
  %add.ptr18 = getelementptr inbounds i8, i8* %10, i64 0
  %11 = bitcast i8* %add.ptr18 to %struct.uvc_entity*
  call void @uvc_mc_cleanup_entity(%struct.uvc_entity* %11)
  %vdev19 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %11, i32 0, i32 6
  %12 = load %struct.video_device*, %struct.video_device** %vdev19, align 8, !tbaa !66
  %tobool20 = icmp ne %struct.video_device* %12, null
  br i1 %tobool20, label %if.then21, label %if.end24

if.then21:                                        ; preds = %for.body15
  %vdev22 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %11, i32 0, i32 6
  %13 = load %struct.video_device*, %struct.video_device** %vdev22, align 8, !tbaa !66
  call void @video_device_release(%struct.video_device* %13)
  %vdev23 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %11, i32 0, i32 6
  store %struct.video_device* null, %struct.video_device** %vdev23, align 8, !tbaa !66
  br label %if.end24

if.end24:                                         ; preds = %if.then21, %for.body15
  %14 = bitcast %struct.uvc_entity* %11 to i8*
  call void @kfree(i8* %14)
  br label %for.cond12

for.end27:                                        ; preds = %for.cond12
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %next28 = getelementptr inbounds %struct.list_head, %struct.list_head* %streams, i32 0, i32 0
  %15 = load %struct.list_head*, %struct.list_head** %next28, align 8, !tbaa !65
  br label %for.cond30

for.cond30:                                       ; preds = %for.body33, %for.end27
  %.sink2 = phi %struct.list_head* [ %16, %for.body33 ], [ %15, %for.end27 ]
  %p.2 = phi %struct.list_head* [ %15, %for.end27 ], [ %16, %for.body33 ]
  %next40 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink2, i32 0, i32 0
  %16 = load %struct.list_head*, %struct.list_head** %next40, align 8, !tbaa !65
  %streams31 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp32 = icmp ne %struct.list_head* %p.2, %streams31
  br i1 %cmp32, label %for.body33, label %for.end41

for.body33:                                       ; preds = %for.cond30
  %17 = bitcast %struct.list_head* %p.2 to i8*
  %add.ptr36 = getelementptr inbounds i8, i8* %17, i64 0
  %18 = bitcast i8* %add.ptr36 to %struct.uvc_streaming*
  %intf37 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %18, i32 0, i32 5
  %19 = load %struct.usb_interface*, %struct.usb_interface** %intf37, align 8, !tbaa !46
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %19)
  %intf38 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %18, i32 0, i32 5
  %20 = load %struct.usb_interface*, %struct.usb_interface** %intf38, align 8, !tbaa !46
  call void @usb_put_intf(%struct.usb_interface* %20)
  %format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %18, i32 0, i32 11
  %21 = load %struct.uvc_format*, %struct.uvc_format** %format, align 8, !tbaa !70
  %22 = bitcast %struct.uvc_format* %21 to i8*
  call void @kfree(i8* %22)
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %18, i32 0, i32 8
  %bmaControls = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 4
  %23 = load i8*, i8** %bmaControls, align 8, !tbaa !71
  call void @kfree(i8* %23)
  %24 = bitcast %struct.uvc_streaming* %18 to i8*
  call void @kfree(i8* %24)
  br label %for.cond30

for.end41:                                        ; preds = %for.cond30
  %25 = bitcast %struct.uvc_device* %dev to i8*
  call void @kfree(i8* %25)
  ret void
}

declare void @usb_put_intf(%struct.usb_interface*) #2

declare void @usb_put_dev(%struct.usb_device*) #2

declare void @v4l2_device_unregister(%struct.v4l2_device*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @media_devnode_is_registered(%struct.media_devnode* %mdev) #1 {
entry:
  %flags = getelementptr inbounds %struct.media_devnode, %struct.media_devnode* %mdev, i32 0, i32 5
  %call = call i32 @constant_test_bit(i32 0, i64* %flags)
  ret i32 %call
}

declare void @media_device_unregister(%struct.media_device*) #2

declare void @kfree(i8*) #2

declare void @video_device_release(%struct.video_device*) #2

declare void @usb_driver_release_interface(%struct.usb_driver*, %struct.usb_interface*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @constant_test_bit(i32 %nr, i64* %addr) #3 {
entry:
  %rem = urem i32 %nr, 64
  %sh_prom = zext i32 %rem to i64
  %shl = shl i64 1, %sh_prom
  %div = udiv i32 %nr, 64
  %idxprom = zext i32 %div to i64
  %arrayidx = getelementptr inbounds i64, i64* %addr, i64 %idxprom
  %0 = load volatile i64, i64* %arrayidx, align 8, !tbaa !72
  %and = and i64 %shl, %0
  %cmp = icmp ne i64 %and, 0
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64, i8* nocapture) #4

declare i32 @dev_set_drvdata(%struct.device*, i8*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @interface_to_usbdev(%struct.usb_interface* %intf) #1 {
entry:
  %dev = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 7
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev, i32 0, i32 0
  %0 = load %struct.device*, %struct.device** %parent, align 8, !tbaa !73
  %1 = bitcast %struct.device* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -136
  %2 = bitcast i8* %add.ptr to %struct.usb_device*
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD(%struct.list_head* %list) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  store %struct.list_head* %list, %struct.list_head** %next, align 8, !tbaa !65
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !74
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @atomic_set(%union.anon.5* %v, i32 %i) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  store i32 %i, i32* %counter, align 4, !tbaa !75
  ret void
}

declare %struct.usb_device* @usb_get_dev(%struct.usb_device*) #2

declare %struct.usb_interface* @usb_get_intf(%struct.usb_interface*) #2

declare i64 @strlcpy(i8*, i8*, i64) #2

declare i32 @snprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_parse_control(%struct.uvc_device* %dev) #0 {
entry:
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %extra = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 2
  %2 = load i8*, i8** %extra, align 8, !tbaa !76
  %extralen = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 1
  %3 = load i32, i32* %extralen, align 4, !tbaa !77
  br label %while.cond

while.cond:                                       ; preds = %next_descriptor, %entry
  %buffer.0 = phi i8* [ %2, %entry ], [ %add.ptr, %next_descriptor ]
  %buflen.0 = phi i32 [ %3, %entry ], [ %sub, %next_descriptor ]
  %cmp = icmp sgt i32 %buflen.0, 2
  br i1 %cmp, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %call = call i32 @uvc_parse_vendor_control(%struct.uvc_device* %dev, i8* %buffer.0, i32 %buflen.0)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %next_descriptor, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %arrayidx = getelementptr inbounds i8, i8* %buffer.0, i64 1
  %4 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %4 to i32
  %cmp1 = icmp ne i32 %conv, 36
  br i1 %cmp1, label %next_descriptor, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %call3 = call i32 @uvc_parse_standard_control(%struct.uvc_device* %dev, i8* %buffer.0, i32 %buflen.0)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %cleanup, label %next_descriptor

next_descriptor:                                  ; preds = %if.end, %lor.lhs.false, %while.body
  %arrayidx8 = getelementptr inbounds i8, i8* %buffer.0, i64 0
  %5 = load i8, i8* %arrayidx8, align 1, !tbaa !61
  %conv9 = zext i8 %5 to i32
  %sub = sub nsw i32 %buflen.0, %conv9
  %arrayidx10 = getelementptr inbounds i8, i8* %buffer.0, i64 0
  %6 = load i8, i8* %arrayidx10, align 1, !tbaa !61
  %conv11 = zext i8 %6 to i32
  %idx.ext = sext i32 %conv11 to i64
  %add.ptr = getelementptr inbounds i8, i8* %buffer.0, i64 %idx.ext
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 4
  %7 = load i8, i8* %bNumEndpoints, align 4, !tbaa !78
  %conv12 = zext i8 %7 to i32
  %cmp13 = icmp eq i32 %conv12, 1
  br i1 %cmp13, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %while.end
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %8 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %8, 8
  %tobool15 = icmp ne i32 %and, 0
  br i1 %tobool15, label %cleanup, label %if.then16

if.then16:                                        ; preds = %land.lhs.true
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 3
  %9 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !79
  %arrayidx17 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %9, i64 0
  %desc19 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx17, i32 0, i32 0
  %call20 = call i32 @usb_endpoint_is_int_in(%struct.usb_endpoint_descriptor* %desc19)
  %tobool21 = icmp ne i32 %call20, 0
  br i1 %tobool21, label %land.lhs.true22, label %cleanup

land.lhs.true22:                                  ; preds = %if.then16
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 4
  %10 = load i16, i16* %wMaxPacketSize, align 1, !tbaa !80
  %conv23 = zext i16 %10 to i32
  %cmp24 = icmp sge i32 %conv23, 8
  br i1 %cmp24, label %land.lhs.true26, label %cleanup

land.lhs.true26:                                  ; preds = %land.lhs.true22
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 5
  %11 = load i8, i8* %bInterval, align 1, !tbaa !82
  %conv27 = zext i8 %11 to i32
  %cmp28 = icmp ne i32 %conv27, 0
  br i1 %cmp28, label %do.body, label %cleanup

do.body:                                          ; preds = %land.lhs.true26
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and31 = and i32 %12, 2
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %do.end

if.then33:                                        ; preds = %do.body
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc19, i32 0, i32 2
  %13 = load i8, i8* %bEndpointAddress, align 1, !tbaa !83
  %conv34 = zext i8 %13 to i32
  %call35 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.17, i32 0, i32 0), i32 %conv34)
  br label %do.end

do.end:                                           ; preds = %if.then33, %do.body
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 17
  store %struct.usb_host_endpoint* %arrayidx17, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !84
  br label %cleanup

cleanup:                                          ; preds = %do.end, %land.lhs.true26, %land.lhs.true22, %if.then16, %land.lhs.true, %while.end, %if.end
  %retval.0 = phi i32 [ %call3, %if.end ], [ 0, %if.then16 ], [ 0, %land.lhs.true22 ], [ 0, %land.lhs.true26 ], [ 0, %do.end ], [ 0, %land.lhs.true ], [ 0, %while.end ]
  ret void
}

declare i8* @strcpy(i8*, i8*) #2

declare i32 @media_device_register(%struct.media_device*) #2

declare i32 @v4l2_device_register(%struct.device*, %struct.v4l2_device*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_scan_device(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list37.sink = phi %struct.list_head* [ %list37, %for.inc ], [ %entities, %entry ]
  %next38 = getelementptr inbounds %struct.list_head, %struct.list_head* %list37.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next38, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr40 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr40 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 65280
  %cmp2 = icmp ne i32 %and, 0
  br i1 %cmp2, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %type4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %4 = load i16, i16* %type4, align 2, !tbaa !85
  %conv5 = zext i16 %4 to i32
  %and6 = and i32 %conv5, 32768
  %cmp7 = icmp eq i32 %and6, 32768
  br i1 %cmp7, label %if.end, label %for.inc

if.end:                                           ; preds = %land.lhs.true
  %chain9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain9, i32 0, i32 0
  %5 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !86
  %tobool = icmp ne %struct.list_head* %5, null
  br i1 %tobool, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %chain11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %chain11, i32 0, i32 1
  %6 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !87
  %tobool12 = icmp ne %struct.list_head* %6, null
  br i1 %tobool12, label %for.inc, label %if.end14

if.end14:                                         ; preds = %lor.lhs.false
  %call = call i8* @kzalloc(i64 248, i32 208)
  %7 = bitcast i8* %call to %struct.uvc_video_chain*
  %cmp15 = icmp eq %struct.uvc_video_chain* %7, null
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end14
  %entities19 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %7, i32 0, i32 2
  call void @INIT_LIST_HEAD(%struct.list_head* %entities19)
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %7, i32 0, i32 5
  call void @__mutex_init(%struct.mutex* %ctrl_mutex, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.74, i32 0, i32 0), %struct.lock_class_key* @uvc_scan_device.__key)
  %dev20 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %7, i32 0, i32 0
  store %struct.uvc_device* %dev, %struct.uvc_device** %dev20, align 8, !tbaa !88
  %prio = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %7, i32 0, i32 6
  call void @v4l2_prio_init(%struct.v4l2_prio_state* %prio)
  %flags = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 2
  %8 = load i32, i32* %flags, align 8, !tbaa !90
  %or = or i32 %8, 1
  store i32 %or, i32* %flags, align 8, !tbaa !90
  %call21 = call i32 @uvc_scan_chain(%struct.uvc_video_chain* %7, %struct.uvc_entity* %2)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then24, label %do.body26

if.then24:                                        ; preds = %if.end18
  %9 = bitcast %struct.uvc_video_chain* %7 to i8*
  call void @kfree(i8* %9)
  br label %for.inc

do.body26:                                        ; preds = %if.end18
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and27 = and i32 %10, 1
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %do.end34

if.then29:                                        ; preds = %do.body26
  %call30 = call i8* @uvc_print_chain(%struct.uvc_video_chain* %7)
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.75, i32 0, i32 0), i8* %call30)
  br label %do.end34

do.end34:                                         ; preds = %if.then29, %do.body26
  %list35 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %7, i32 0, i32 1
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  call void @list_add_tail(%struct.list_head* %list35, %struct.list_head* %chains)
  br label %for.inc

for.inc:                                          ; preds = %do.end34, %if.then24, %lor.lhs.false, %if.end, %land.lhs.true, %for.body
  %list37 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %chains41 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %call42 = call i32 @list_empty(%struct.list_head* %chains41)
  %tobool43 = icmp ne i32 %call42, 0
  br i1 %tobool43, label %if.then44, label %cleanup

if.then44:                                        ; preds = %for.end
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.76, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then44, %for.end, %if.end14
  %retval.0 = phi i32 [ -1, %if.then44 ], [ -12, %if.end14 ], [ 0, %for.end ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_register_chains(%struct.uvc_device* %dev) #0 {
entry:
  %chains = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list9.sink = phi %struct.list_head* [ %list9, %for.inc ], [ %chains, %entry ]
  %next10 = getelementptr inbounds %struct.list_head, %struct.list_head* %list9.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next10, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr12 = getelementptr inbounds i8, i8* %1, i64 -8
  %2 = bitcast i8* %add.ptr12 to %struct.uvc_video_chain*
  %list = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 1
  %chains1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 14
  %cmp = icmp ne %struct.list_head* %list, %chains1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call = call i32 @uvc_register_terms(%struct.uvc_device* %dev, %struct.uvc_video_chain* %2)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %cleanup, label %if.end

if.end:                                           ; preds = %for.body
  %call3 = call i32 @uvc_mc_register_entities(%struct.uvc_video_chain* %2)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %if.then5, label %for.inc

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.101, i32 0, i32 0), i32 %call3)
  br label %for.inc

for.inc:                                          ; preds = %if.then5, %if.end
  %list9 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi i32 [ %call, %for.body ], [ 0, %for.cond ]
  ret void
}

declare void @usb_enable_autosuspend(%struct.usb_device*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_register_terms(%struct.uvc_device* %dev, %struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain21.sink = phi %struct.list_head* [ %chain21, %for.inc ], [ %entities, %entry ]
  %next22 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain21.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next22, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr24 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr24 to %struct.uvc_entity*
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp3 = icmp ne i32 %and, 257
  br i1 %cmp3, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %4 = load i8, i8* %id, align 4, !tbaa !91
  %conv5 = zext i8 %4 to i32
  %call = call %struct.uvc_streaming* @uvc_stream_by_id(%struct.uvc_device* %dev, i32 %conv5)
  %cmp6 = icmp eq %struct.uvc_streaming* %call, null
  br i1 %cmp6, label %if.then8, label %if.end12

if.then8:                                         ; preds = %if.end
  %id9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %5 = load i8, i8* %id9, align 4, !tbaa !91
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.102, i32 0, i32 0), i32 %conv10)
  br label %for.inc

if.end12:                                         ; preds = %if.end
  %chain13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %call, i32 0, i32 3
  store %struct.uvc_video_chain* %chain, %struct.uvc_video_chain** %chain13, align 8, !tbaa !92
  %call14 = call i32 @uvc_register_video(%struct.uvc_device* %dev, %struct.uvc_streaming* %call)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %cleanup, label %if.end18

if.end18:                                         ; preds = %if.end12
  %vdev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %call, i32 0, i32 2
  %6 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !58
  %vdev19 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 6
  store %struct.video_device* %6, %struct.video_device** %vdev19, align 8, !tbaa !66
  br label %for.inc

for.inc:                                          ; preds = %if.end18, %if.then8, %for.body
  %chain21 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %if.end12, %for.cond
  %retval.0 = phi i32 [ %call14, %if.end12 ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_streaming* @uvc_stream_by_id(%struct.uvc_device* %dev, i32 %id) #0 {
entry:
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list5.sink = phi %struct.list_head* [ %list5, %for.inc ], [ %streams, %entry ]
  %next6 = getelementptr inbounds %struct.list_head, %struct.list_head* %list5.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next6, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr8 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr8 to %struct.uvc_streaming*
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  %streams1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  %cmp = icmp ne %struct.list_head* %list, %streams1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 8
  %bTerminalLink = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 2
  %3 = load i8, i8* %bTerminalLink, align 2, !tbaa !93
  %conv = zext i8 %3 to i32
  %cmp2 = icmp eq i32 %conv, %id
  br i1 %cmp2, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %list5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.uvc_streaming* [ %2, %for.body ], [ null, %for.cond ]
  ret %struct.uvc_streaming* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_register_video(%struct.uvc_device* %dev, %struct.uvc_streaming* %stream) #0 {
entry:
  %call = call i32 @uvc_video_init(%struct.uvc_streaming* %stream)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.103, i32 0, i32 0), i32 %call)
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = call i32 @uvc_debugfs_init_stream(%struct.uvc_streaming* %stream)
  %call3 = call %struct.video_device* @video_device_alloc()
  %cmp4 = icmp eq %struct.video_device* %call3, null
  br i1 %cmp4, label %if.then5, label %if.end7

if.then5:                                         ; preds = %if.end
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.104, i32 0, i32 0), i32 %call)
  br label %cleanup

if.end7:                                          ; preds = %if.end
  %vdev8 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 10
  %v4l2_dev = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 5
  store %struct.v4l2_device* %vdev8, %struct.v4l2_device** %v4l2_dev, align 8, !tbaa !94
  %fops = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 1
  store %struct.v4l2_file_operations* @uvc_fops, %struct.v4l2_file_operations** %fops, align 8, !tbaa !96
  %release = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 21
  store void (%struct.video_device*)* @uvc_release, void (%struct.video_device*)** %release, align 8, !tbaa !97
  %chain = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 3
  %0 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !92
  %prio = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 6
  %prio9 = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 8
  store %struct.v4l2_prio_state* %prio, %struct.v4l2_prio_state** %prio9, align 8, !tbaa !98
  %flags = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 14
  call void @set_bit(i32 2, i64* %flags)
  %type = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %1 = load i32, i32* %type, align 8, !tbaa !99
  %cmp10 = icmp eq i32 %1, 2
  br i1 %cmp10, label %if.then11, label %if.end12

if.then11:                                        ; preds = %if.end7
  %vfl_dir = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 11
  store i32 1, i32* %vfl_dir, align 4, !tbaa !100
  br label %if.end12

if.end12:                                         ; preds = %if.then11, %if.end7
  %name = getelementptr inbounds %struct.video_device, %struct.video_device* %call3, i32 0, i32 9
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name13 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 5
  %arraydecay14 = getelementptr inbounds [32 x i8], [32 x i8]* %name13, i32 0, i32 0
  %call15 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay14, i64 32)
  %vdev16 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 2
  store %struct.video_device* %call3, %struct.video_device** %vdev16, align 8, !tbaa !58
  %2 = bitcast %struct.uvc_streaming* %stream to i8*
  call void @video_set_drvdata(%struct.video_device* %call3, i8* %2)
  %call17 = call i32 @video_register_device(%struct.video_device* %call3, i32 0, i32 -1)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then19, label %if.end22

if.then19:                                        ; preds = %if.end12
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.105, i32 0, i32 0), i32 %call17)
  %vdev21 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 2
  store %struct.video_device* null, %struct.video_device** %vdev21, align 8, !tbaa !58
  call void @video_device_release(%struct.video_device* %call3)
  br label %cleanup

if.end22:                                         ; preds = %if.end12
  %type23 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %3 = load i32, i32* %type23, align 8, !tbaa !99
  %cmp24 = icmp eq i32 %3, 1
  %chain26 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 3
  %4 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain26, align 8, !tbaa !92
  %caps = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %4, i32 0, i32 7
  %5 = load i32, i32* %caps, align 8, !tbaa !101
  %.sink = select i1 %cmp24, i32 1, i32 2
  %or29 = or i32 %5, %.sink
  store i32 %or29, i32* %caps, align 8, !tbaa !101
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 16
  call void @atomic_inc(%union.anon.5* %nstreams)
  br label %cleanup

cleanup:                                          ; preds = %if.end22, %if.then19, %if.then5, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ -12, %if.then5 ], [ %call17, %if.then19 ], [ 0, %if.end22 ]
  ret i32 %retval.0
}

declare %struct.video_device* @video_device_alloc() #2

; Function Attrs: nounwind uwtable
define internal void @uvc_release(%struct.video_device* %vdev) #0 {
entry:
  %call = call i8* @video_get_drvdata(%struct.video_device* %vdev)
  %0 = bitcast i8* %call to %struct.uvc_streaming*
  %dev1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %0, i32 0, i32 1
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev1, align 8, !tbaa !102
  %nstreams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 16
  %call2 = call i32 @atomic_dec_and_test(%union.anon.5* %nstreams)
  %tobool = icmp ne i32 %call2, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @uvc_delete(%struct.uvc_device* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: alwaysinline nounwind uwtable
define internal void @set_bit(i32 %nr, i64* %addr) #3 {
entry:
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i32 %nr, i64* %addr) #8, !srcloc !103
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @video_set_drvdata(%struct.video_device* %vdev, i8* %data) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 2
  %call = call i32 @dev_set_drvdata(%struct.device* %dev, i8* %data)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @video_register_device(%struct.video_device* %vdev, i32 %type, i32 %nr) #1 {
entry:
  %fops = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 1
  %0 = load %struct.v4l2_file_operations*, %struct.v4l2_file_operations** %fops, align 8, !tbaa !96
  %owner = getelementptr inbounds %struct.v4l2_file_operations, %struct.v4l2_file_operations* %0, i32 0, i32 0
  %1 = load %struct.module*, %struct.module** %owner, align 8, !tbaa !104
  %call = call i32 @__video_register_device(%struct.video_device* %vdev, i32 %type, i32 %nr, i32 1, %struct.module* %1)
  ret i32 %call
}

declare i32 @__video_register_device(%struct.video_device*, i32, i32, i32, %struct.module*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_get_drvdata(%struct.video_device* %vdev) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 2
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  ret i8* %call
}

declare void @__mutex_init(%struct.mutex*, i8*, %struct.lock_class_key*) #2

declare void @v4l2_prio_init(%struct.v4l2_prio_state*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %term) #0 {
entry:
  %entity = alloca %struct.uvc_entity*, align 8
  %0 = bitcast %struct.uvc_entity** %entity to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %1, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.77, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  store %struct.uvc_entity* %term, %struct.uvc_entity** %entity, align 8, !tbaa !45
  br label %while.cond

while.cond:                                       ; preds = %if.end30, %do.end
  %prev.0 = phi %struct.uvc_entity* [ null, %do.end ], [ %12, %if.end30 ]
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %cmp = icmp ne %struct.uvc_entity* %2, null
  br i1 %cmp, label %while.body, label %cleanup

while.body:                                       ; preds = %while.cond
  %3 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %chain1, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !86
  %tobool2 = icmp ne %struct.list_head* %4, null
  br i1 %tobool2, label %do.body7, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %while.body
  %5 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %chain3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %5, i32 0, i32 1
  %prev4 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain3, i32 0, i32 1
  %6 = load %struct.list_head*, %struct.list_head** %prev4, align 8, !tbaa !87
  %tobool5 = icmp ne %struct.list_head* %6, null
  br i1 %tobool5, label %do.body7, label %if.end15

do.body7:                                         ; preds = %lor.lhs.false, %while.body
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and8 = and i32 %7, 2
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.then10, label %cleanup

if.then10:                                        ; preds = %do.body7
  %8 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %8, i32 0, i32 3
  %9 = load i8, i8* %id, align 4, !tbaa !91
  %conv = zext i8 %9 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.78, i32 0, i32 0), i32 %conv)
  br label %cleanup

if.end15:                                         ; preds = %lor.lhs.false
  %10 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %call16 = call i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %10)
  %cmp17 = icmp slt i32 %call16, 0
  br i1 %cmp17, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.end15
  %11 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %call21 = call i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %11, %struct.uvc_entity* %prev.0)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %cleanup, label %if.end25

if.end25:                                         ; preds = %if.end20
  %12 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !45
  %call26 = call i32 @uvc_scan_chain_backward(%struct.uvc_video_chain* %chain, %struct.uvc_entity** %entity)
  %cmp27 = icmp slt i32 %call26, 0
  br i1 %cmp27, label %cleanup, label %if.end30

if.end30:                                         ; preds = %if.end25
  br label %while.cond

cleanup:                                          ; preds = %if.end25, %if.end20, %if.end15, %if.then10, %do.body7, %while.cond
  %retval.0 = phi i32 [ -22, %if.then10 ], [ -22, %do.body7 ], [ -22, %if.end15 ], [ -22, %if.end20 ], [ -22, %if.end25 ], [ 0, %while.cond ]
  %13 = bitcast %struct.uvc_entity** %entity to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i8* @uvc_print_chain(%struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %call = call i32 @uvc_print_terms(%struct.list_head* %entities, i16 zeroext 0, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0))
  %idx.ext = zext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0), i64 %idx.ext
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %add.ptr, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.97, i32 0, i32 0))
  %idx.ext2 = sext i32 %call1 to i64
  %add.ptr3 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext2
  %entities4 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %call5 = call i32 @uvc_print_terms(%struct.list_head* %entities4, i16 zeroext -32768, i8* %add.ptr3)
  ret i8* getelementptr inbounds ([43 x i8], [43 x i8]* @uvc_print_chain.buffer, i32 0, i32 0)
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !74
  call void @__list_add(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty(%struct.list_head* %head) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %cmp = icmp eq %struct.list_head* %0, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

declare void @__list_add(%struct.list_head*, %struct.list_head*, %struct.list_head*) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_print_terms(%struct.list_head* %terms, i16 zeroext %dir, i8* %buffer) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain24.sink = phi %struct.list_head* [ %chain24, %for.inc ], [ %terms, %entry ]
  %nterms.0 = phi i32 [ 0, %entry ], [ %nterms.1, %for.inc ]
  %p.0 = phi i8* [ %buffer, %entry ], [ %p.2, %for.inc ]
  %next25 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain24.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next25, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr27 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr27 to %struct.uvc_entity*
  %chain = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %cmp = icmp ne %struct.list_head* %chain, %terms
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 65280
  %cmp1 = icmp ne i32 %and, 0
  br i1 %cmp1, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body
  %type3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %4 = load i16, i16* %type3, align 2, !tbaa !85
  %conv4 = zext i16 %4 to i32
  %and5 = and i32 %conv4, 32768
  %conv6 = zext i16 %dir to i32
  %cmp7 = icmp ne i32 %and5, %conv6
  br i1 %cmp7, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %tobool = icmp ne i32 %nterms.0, 0
  br i1 %tobool, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %p.0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.98, i32 0, i32 0))
  %idx.ext = sext i32 %call to i64
  %add.ptr10 = getelementptr inbounds i8, i8* %p.0, i64 %idx.ext
  br label %if.end11

if.end11:                                         ; preds = %if.then9, %if.end
  %p.1 = phi i8* [ %add.ptr10, %if.then9 ], [ %p.0, %if.end ]
  %inc = add i32 %nterms.0, 1
  %cmp12 = icmp uge i32 %inc, 4
  br i1 %cmp12, label %if.then14, label %if.end18

if.then14:                                        ; preds = %if.end11
  %call15 = call i32 (i8*, i8*, ...) @sprintf(i8* %p.1, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.99, i32 0, i32 0))
  %idx.ext16 = sext i32 %call15 to i64
  %add.ptr17 = getelementptr inbounds i8, i8* %p.1, i64 %idx.ext16
  br label %for.end

if.end18:                                         ; preds = %if.end11
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !91
  %conv19 = zext i8 %5 to i32
  %call20 = call i32 (i8*, i8*, ...) @sprintf(i8* %p.1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.100, i32 0, i32 0), i32 %conv19)
  %idx.ext21 = sext i32 %call20 to i64
  %add.ptr22 = getelementptr inbounds i8, i8* %p.1, i64 %idx.ext21
  br label %for.inc

for.inc:                                          ; preds = %if.end18, %lor.lhs.false, %for.body
  %nterms.1 = phi i32 [ %inc, %if.end18 ], [ %nterms.0, %lor.lhs.false ], [ %nterms.0, %for.body ]
  %p.2 = phi i8* [ %add.ptr22, %if.end18 ], [ %p.0, %lor.lhs.false ], [ %p.0, %for.body ]
  %chain24 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %if.then14, %for.cond
  %p.3 = phi i8* [ %add.ptr17, %if.then14 ], [ %p.0, %for.cond ]
  %sub.ptr.lhs.cast = ptrtoint i8* %p.3 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %buffer to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv28 = trunc i64 %sub.ptr.sub to i32
  ret i32 %conv28
}

declare i32 @sprintf(i8*, i8*, ...) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %Pivot17 = icmp slt i32 %and, 257
  br i1 %Pivot17, label %NodeBlock3, label %NodeBlock14

NodeBlock14:                                      ; preds = %entry
  %Pivot15 = icmp slt i32 %and, 512
  br i1 %Pivot15, label %LeafBlock5, label %NodeBlock12

NodeBlock12:                                      ; preds = %NodeBlock14
  %Pivot13 = icmp slt i32 %and, 768
  br i1 %Pivot13, label %LeafBlock7, label %LeafBlock9

LeafBlock9:                                       ; preds = %NodeBlock12
  %and.off10 = add i32 %and, -768
  %SwitchLeaf11 = icmp ule i32 %and.off10, 2
  br i1 %SwitchLeaf11, label %sw.bb68, label %do.body103

LeafBlock7:                                       ; preds = %NodeBlock12
  %and.off = add i32 %and, -512
  %SwitchLeaf8 = icmp ule i32 %and.off, 2
  br i1 %SwitchLeaf8, label %sw.bb60, label %do.body103

LeafBlock5:                                       ; preds = %NodeBlock14
  %SwitchLeaf6 = icmp eq i32 %and, 257
  br i1 %SwitchLeaf6, label %sw.bb76, label %do.body103

NodeBlock3:                                       ; preds = %entry
  %Pivot4 = icmp slt i32 %and, 5
  br i1 %Pivot4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock3
  %Pivot = icmp slt i32 %and, 6
  br i1 %Pivot, label %sw.bb14, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %and, 6
  br i1 %SwitchLeaf2, label %sw.bb, label %do.body103

LeafBlock:                                        ; preds = %NodeBlock3
  %SwitchLeaf = icmp eq i32 %and, 4
  br i1 %SwitchLeaf, label %sw.bb34, label %do.body103

sw.bb:                                            ; preds = %LeafBlock1
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and1 = and i32 %1, 1
  %tobool = icmp ne i32 %and1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %2 = load i8, i8* %id, align 4, !tbaa !91
  %conv2 = zext i8 %2 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.79, i32 0, i32 0), i32 %conv2)
  br label %if.end

if.end:                                           ; preds = %if.then, %sw.bb
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 12
  %3 = load i8, i8* %bNrInPins, align 8, !tbaa !106
  %conv3 = zext i8 %3 to i32
  %cmp = icmp ne i32 %conv3, 1
  br i1 %cmp, label %do.body, label %sw.epilog

do.body:                                          ; preds = %if.end
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and6 = and i32 %4, 2
  %tobool7 = icmp ne i32 %and6, 0
  br i1 %tobool7, label %if.then8, label %return

if.then8:                                         ; preds = %do.body
  %id9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %5 = load i8, i8* %id9, align 4, !tbaa !91
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.80, i32 0, i32 0), i32 %conv10)
  br label %return

sw.bb14:                                          ; preds = %NodeBlock
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and15 = and i32 %6, 1
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end21

if.then17:                                        ; preds = %sw.bb14
  %id18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %7 = load i8, i8* %id18, align 4, !tbaa !91
  %conv19 = zext i8 %7 to i32
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.81, i32 0, i32 0), i32 %conv19)
  br label %if.end21

if.end21:                                         ; preds = %if.then17, %sw.bb14
  %processing = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 3
  %8 = load %struct.uvc_entity*, %struct.uvc_entity** %processing, align 8, !tbaa !107
  %cmp22 = icmp ne %struct.uvc_entity* %8, null
  br i1 %cmp22, label %do.body25, label %if.end32

do.body25:                                        ; preds = %if.end21
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and26 = and i32 %9, 2
  %tobool27 = icmp ne i32 %and26, 0
  br i1 %tobool27, label %if.then28, label %return

if.then28:                                        ; preds = %do.body25
  %call29 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.82, i32 0, i32 0))
  br label %return

if.end32:                                         ; preds = %if.end21
  %processing33 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 3
  store %struct.uvc_entity* %entity, %struct.uvc_entity** %processing33, align 8, !tbaa !107
  br label %sw.epilog

sw.bb34:                                          ; preds = %LeafBlock
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and35 = and i32 %10, 1
  %tobool36 = icmp ne i32 %and35, 0
  br i1 %tobool36, label %if.then37, label %if.end41

if.then37:                                        ; preds = %sw.bb34
  %id38 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %11 = load i8, i8* %id38, align 4, !tbaa !91
  %conv39 = zext i8 %11 to i32
  %call40 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.83, i32 0, i32 0), i32 %conv39)
  br label %if.end41

if.end41:                                         ; preds = %if.then37, %sw.bb34
  %bNrInPins42 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 12
  %12 = load i8, i8* %bNrInPins42, align 8, !tbaa !106
  %conv43 = zext i8 %12 to i32
  %cmp44 = icmp eq i32 %conv43, 1
  br i1 %cmp44, label %sw.epilog, label %if.end47

if.end47:                                         ; preds = %if.end41
  %selector = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  %13 = load %struct.uvc_entity*, %struct.uvc_entity** %selector, align 8, !tbaa !108
  %cmp48 = icmp ne %struct.uvc_entity* %13, null
  br i1 %cmp48, label %do.body51, label %if.end58

do.body51:                                        ; preds = %if.end47
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and52 = and i32 %14, 2
  %tobool53 = icmp ne i32 %and52, 0
  br i1 %tobool53, label %if.then54, label %return

if.then54:                                        ; preds = %do.body51
  %call55 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.84, i32 0, i32 0))
  br label %return

if.end58:                                         ; preds = %if.end47
  %selector59 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  store %struct.uvc_entity* %entity, %struct.uvc_entity** %selector59, align 8, !tbaa !108
  br label %sw.epilog

sw.bb60:                                          ; preds = %LeafBlock7
  %15 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and61 = and i32 %15, 1
  %tobool62 = icmp ne i32 %and61, 0
  br i1 %tobool62, label %if.then63, label %sw.epilog

if.then63:                                        ; preds = %sw.bb60
  %id64 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %16 = load i8, i8* %id64, align 4, !tbaa !91
  %conv65 = zext i8 %16 to i32
  %call66 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), i32 %conv65)
  br label %sw.epilog

sw.bb68:                                          ; preds = %LeafBlock9
  %17 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and69 = and i32 %17, 1
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %sw.epilog

if.then71:                                        ; preds = %sw.bb68
  %id72 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %18 = load i8, i8* %id72, align 4, !tbaa !91
  %conv73 = zext i8 %18 to i32
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 %conv73)
  br label %sw.epilog

sw.bb76:                                          ; preds = %LeafBlock5
  %type77 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %19 = load i16, i16* %type77, align 2, !tbaa !85
  %conv78 = zext i16 %19 to i32
  %and79 = and i32 %conv78, 65280
  %cmp80 = icmp ne i32 %and79, 0
  br i1 %cmp80, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %sw.bb76
  %type82 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %20 = load i16, i16* %type82, align 2, !tbaa !85
  %conv83 = zext i16 %20 to i32
  %and84 = and i32 %conv83, 32768
  %cmp85 = icmp eq i32 %and84, 0
  br i1 %cmp85, label %if.then87, label %if.else

if.then87:                                        ; preds = %land.lhs.true
  %21 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and88 = and i32 %21, 1
  %tobool89 = icmp ne i32 %and88, 0
  br i1 %tobool89, label %if.then90, label %sw.epilog

if.then90:                                        ; preds = %if.then87
  %id91 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %22 = load i8, i8* %id91, align 4, !tbaa !91
  %conv92 = zext i8 %22 to i32
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.85, i32 0, i32 0), i32 %conv92)
  br label %sw.epilog

if.else:                                          ; preds = %land.lhs.true, %sw.bb76
  %23 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and95 = and i32 %23, 1
  %tobool96 = icmp ne i32 %and95, 0
  br i1 %tobool96, label %if.then97, label %sw.epilog

if.then97:                                        ; preds = %if.else
  %id98 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %24 = load i8, i8* %id98, align 4, !tbaa !91
  %conv99 = zext i8 %24 to i32
  %call100 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 %conv99)
  br label %sw.epilog

do.body103:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock5, %LeafBlock7, %LeafBlock9
  %25 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and104 = and i32 %25, 2
  %tobool105 = icmp ne i32 %and104, 0
  br i1 %tobool105, label %if.then106, label %return

if.then106:                                       ; preds = %do.body103
  %type107 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %26 = load i16, i16* %type107, align 2, !tbaa !85
  %conv108 = zext i16 %26 to i32
  %and109 = and i32 %conv108, 32767
  %call110 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.87, i32 0, i32 0), i32 %and109)
  br label %return

sw.epilog:                                        ; preds = %if.then97, %if.else, %if.then90, %if.then87, %if.then71, %sw.bb68, %if.then63, %sw.bb60, %if.end58, %if.end41, %if.end32, %if.end
  %chain113 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain113, %struct.list_head* %entities)
  br label %return

return:                                           ; preds = %sw.epilog, %if.then106, %do.body103, %if.then54, %do.body51, %if.then28, %do.body25, %if.then8, %do.body
  %retval.0 = phi i32 [ 0, %sw.epilog ], [ -1, %do.body ], [ -1, %if.then8 ], [ -1, %do.body25 ], [ -1, %if.then28 ], [ -1, %do.body51 ], [ -1, %if.then54 ], [ -1, %do.body103 ], [ -1, %if.then106 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity, %struct.uvc_entity* %prev) #0 {
entry:
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %sw.epilog, %entry
  %forward.0.ph = phi %struct.uvc_entity* [ %call, %sw.epilog ], [ null, %entry ]
  %found.0.ph = phi i32 [ %found.3, %sw.epilog ], [ 0, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %if.then4, %while.cond.outer
  %forward.0 = phi %struct.uvc_entity* [ %call, %if.then4 ], [ %forward.0.ph, %while.cond.outer ]
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %1 = load i8, i8* %id, align 4, !tbaa !91
  %conv = zext i8 %1 to i32
  %call = call %struct.uvc_entity* @uvc_entity_by_reference(%struct.uvc_device* %0, i32 %conv, %struct.uvc_entity* %forward.0)
  %cmp = icmp eq %struct.uvc_entity* %call, null
  br i1 %cmp, label %while.end, label %if.end

if.end:                                           ; preds = %while.cond
  %cmp2 = icmp eq %struct.uvc_entity* %call, %prev
  br i1 %cmp2, label %if.then4, label %if.end5

if.then4:                                         ; preds = %if.end
  br label %while.cond

if.end5:                                          ; preds = %if.end
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %2 = load i16, i16* %type, align 2, !tbaa !85
  %conv6 = zext i16 %2 to i32
  %and = and i32 %conv6, 32767
  %Pivot6 = icmp slt i32 %and, 257
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end5
  %Pivot = icmp slt i32 %and, 768
  br i1 %Pivot, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock
  %and.off = add i32 %and, -768
  %SwitchLeaf4 = icmp ule i32 %and.off, 2
  br i1 %SwitchLeaf4, label %sw.bb30, label %sw.epilog

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %and, 257
  br i1 %SwitchLeaf2, label %sw.bb30, label %sw.epilog

LeafBlock:                                        ; preds = %if.end5
  %SwitchLeaf = icmp eq i32 %and, 6
  br i1 %SwitchLeaf, label %sw.bb, label %sw.epilog

sw.bb:                                            ; preds = %LeafBlock
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 12
  %3 = load i8, i8* %bNrInPins, align 8, !tbaa !106
  %conv7 = zext i8 %3 to i32
  %cmp8 = icmp ne i32 %conv7, 1
  br i1 %cmp8, label %do.body, label %if.end17

do.body:                                          ; preds = %sw.bb
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and11 = and i32 %4, 2
  %tobool = icmp ne i32 %and11, 0
  br i1 %tobool, label %if.then12, label %cleanup

if.then12:                                        ; preds = %do.body
  %id13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %5 = load i8, i8* %id13, align 4, !tbaa !91
  %conv14 = zext i8 %5 to i32
  %call15 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.80, i32 0, i32 0), i32 %conv14)
  br label %cleanup

if.end17:                                         ; preds = %sw.bb
  %chain18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain18, %struct.list_head* %entities)
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and19 = and i32 %6, 1
  %tobool20 = icmp ne i32 %and19, 0
  br i1 %tobool20, label %if.then21, label %sw.epilog

if.then21:                                        ; preds = %if.end17
  %tobool22 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool22, label %if.end25, label %if.then23

if.then23:                                        ; preds = %if.then21
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0))
  br label %if.end25

if.end25:                                         ; preds = %if.then23, %if.then21
  %id26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %7 = load i8, i8* %id26, align 4, !tbaa !91
  %conv27 = zext i8 %7 to i32
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.89, i32 0, i32 0), i32 %conv27)
  br label %sw.epilog

sw.bb30:                                          ; preds = %LeafBlock1, %LeafBlock3
  %type31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %8 = load i16, i16* %type31, align 2, !tbaa !85
  %conv32 = zext i16 %8 to i32
  %and33 = and i32 %conv32, 65280
  %cmp34 = icmp ne i32 %and33, 0
  br i1 %cmp34, label %land.lhs.true, label %if.end52

land.lhs.true:                                    ; preds = %sw.bb30
  %type36 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %9 = load i16, i16* %type36, align 2, !tbaa !85
  %conv37 = zext i16 %9 to i32
  %and38 = and i32 %conv37, 32768
  %cmp39 = icmp eq i32 %and38, 0
  br i1 %cmp39, label %do.body42, label %if.end52

do.body42:                                        ; preds = %land.lhs.true
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and43 = and i32 %10, 2
  %tobool44 = icmp ne i32 %and43, 0
  br i1 %tobool44, label %if.then45, label %cleanup

if.then45:                                        ; preds = %do.body42
  %id46 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %11 = load i8, i8* %id46, align 4, !tbaa !91
  %conv47 = zext i8 %11 to i32
  %call48 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.90, i32 0, i32 0), i32 %conv47)
  br label %cleanup

if.end52:                                         ; preds = %land.lhs.true, %sw.bb30
  %chain53 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 1
  %entities54 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain53, %struct.list_head* %entities54)
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and55 = and i32 %12, 1
  %tobool56 = icmp ne i32 %and55, 0
  br i1 %tobool56, label %if.then57, label %sw.epilog

if.then57:                                        ; preds = %if.end52
  %tobool58 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool58, label %if.end61, label %if.then59

if.then59:                                        ; preds = %if.then57
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.88, i32 0, i32 0))
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %if.then57
  %id62 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 3
  %13 = load i8, i8* %id62, align 4, !tbaa !91
  %conv63 = zext i8 %13 to i32
  %call64 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.86, i32 0, i32 0), i32 %conv63)
  br label %sw.epilog

sw.epilog:                                        ; preds = %if.end61, %if.end52, %if.end25, %if.end17, %LeafBlock, %LeafBlock1, %LeafBlock3
  %found.3 = phi i32 [ 1, %if.end25 ], [ %found.0.ph, %if.end17 ], [ 1, %if.end61 ], [ %found.0.ph, %if.end52 ], [ %found.0.ph, %LeafBlock3 ], [ %found.0.ph, %LeafBlock1 ], [ %found.0.ph, %LeafBlock ]
  br label %while.cond.outer

while.end:                                        ; preds = %while.cond
  %tobool66 = icmp ne i32 %found.0.ph, 0
  br i1 %tobool66, label %if.then67, label %cleanup

if.then67:                                        ; preds = %while.end
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.91, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.then67, %while.end, %if.then45, %do.body42, %if.then12, %do.body
  %retval.0 = phi i32 [ -22, %if.then12 ], [ -22, %do.body ], [ -22, %if.then45 ], [ -22, %do.body42 ], [ 0, %if.then67 ], [ 0, %while.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_scan_chain_backward(%struct.uvc_video_chain* %chain, %struct.uvc_entity** %_entity) #0 {
entry:
  %0 = load %struct.uvc_entity*, %struct.uvc_entity** %_entity, align 8, !tbaa !45
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %1 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 32767
  %Pivot16 = icmp slt i32 %and, 257
  br i1 %Pivot16, label %NodeBlock, label %NodeBlock13

NodeBlock13:                                      ; preds = %entry
  %Pivot14 = icmp slt i32 %and, 512
  br i1 %Pivot14, label %LeafBlock3, label %NodeBlock11

NodeBlock11:                                      ; preds = %NodeBlock13
  %Pivot12 = icmp slt i32 %and, 768
  br i1 %Pivot12, label %LeafBlock5, label %LeafBlock8

LeafBlock8:                                       ; preds = %NodeBlock11
  %and.off9 = add i32 %and, -768
  %SwitchLeaf10 = icmp ule i32 %and.off9, 2
  br i1 %SwitchLeaf10, label %sw.bb54, label %sw.epilog

LeafBlock5:                                       ; preds = %NodeBlock11
  %and.off6 = add i32 %and, -512
  %SwitchLeaf7 = icmp ule i32 %and.off6, 2
  br i1 %SwitchLeaf7, label %sw.bb54, label %sw.epilog

LeafBlock3:                                       ; preds = %NodeBlock13
  %SwitchLeaf4 = icmp eq i32 %and, 257
  br i1 %SwitchLeaf4, label %sw.bb54, label %sw.epilog

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %and, 5
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %and.off = add i32 %and, -5
  %SwitchLeaf2 = icmp ule i32 %and.off, 1
  br i1 %SwitchLeaf2, label %sw.bb, label %sw.epilog

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %and, 4
  br i1 %SwitchLeaf, label %sw.bb2, label %sw.epilog

sw.bb:                                            ; preds = %LeafBlock1
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %2 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv1 = zext i8 %3 to i32
  br label %sw.epilog

sw.bb2:                                           ; preds = %LeafBlock
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  %4 = load i8, i8* %bNrInPins, align 8, !tbaa !106
  %conv3 = zext i8 %4 to i32
  %cmp = icmp eq i32 %conv3, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %sw.bb2
  %baSourceID5 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %5 = load i8*, i8** %baSourceID5, align 8, !tbaa !109
  %arrayidx6 = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx6, align 1, !tbaa !61
  %conv7 = zext i8 %6 to i32
  br label %sw.epilog

if.end:                                           ; preds = %sw.bb2
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and8 = and i32 %7, 1
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %if.then9, label %if.end10

if.then9:                                         ; preds = %if.end
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.92, i32 0, i32 0))
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %if.end
  %selector = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 4
  store %struct.uvc_entity* %0, %struct.uvc_entity** %selector, align 8, !tbaa !108
  br label %for.cond

for.cond:                                         ; preds = %if.end46, %if.end10
  %i.0 = phi i32 [ 0, %if.end10 ], [ %inc, %if.end46 ]
  %bNrInPins11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  %8 = load i8, i8* %bNrInPins11, align 8, !tbaa !106
  %conv12 = zext i8 %8 to i32
  %cmp13 = icmp slt i32 %i.0, %conv12
  br i1 %cmp13, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %baSourceID15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %9 = load i8*, i8** %baSourceID15, align 8, !tbaa !109
  %idxprom = sext i32 %i.0 to i64
  %arrayidx16 = getelementptr inbounds i8, i8* %9, i64 %idxprom
  %10 = load i8, i8* %arrayidx16, align 1, !tbaa !61
  %conv17 = zext i8 %10 to i32
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %11 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %call18 = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %11, i32 %conv17)
  %cmp19 = icmp eq %struct.uvc_entity* %call18, null
  br i1 %cmp19, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %type21 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 4
  %12 = load i16, i16* %type21, align 2, !tbaa !85
  %conv22 = zext i16 %12 to i32
  %and23 = and i32 %conv22, 65280
  %cmp24 = icmp ne i32 %and23, 0
  br i1 %cmp24, label %land.lhs.true, label %do.body

land.lhs.true:                                    ; preds = %lor.lhs.false
  %type26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 4
  %13 = load i16, i16* %type26, align 2, !tbaa !85
  %conv27 = zext i16 %13 to i32
  %and28 = and i32 %conv27, 32768
  %cmp29 = icmp eq i32 %and28, 0
  br i1 %cmp29, label %if.end39, label %do.body

do.body:                                          ; preds = %land.lhs.true, %lor.lhs.false, %for.body
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and32 = and i32 %14, 2
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %cleanup

if.then34:                                        ; preds = %do.body
  %id35 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 3
  %15 = load i8, i8* %id35, align 4, !tbaa !91
  %conv36 = zext i8 %15 to i32
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.93, i32 0, i32 0), i32 %conv36, i32 %i.0)
  br label %cleanup

if.end39:                                         ; preds = %land.lhs.true
  %16 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and40 = and i32 %16, 1
  %tobool41 = icmp ne i32 %and40, 0
  br i1 %tobool41, label %if.then42, label %if.end46

if.then42:                                        ; preds = %if.end39
  %id43 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 3
  %17 = load i8, i8* %id43, align 4, !tbaa !91
  %conv44 = zext i8 %17 to i32
  %call45 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.94, i32 0, i32 0), i32 %conv44)
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %if.end39
  %chain47 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call18, i32 0, i32 1
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  call void @list_add_tail(%struct.list_head* %chain47, %struct.list_head* %entities)
  %call48 = call i32 @uvc_scan_chain_forward(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %call18, %struct.uvc_entity* %0)
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %18 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and49 = and i32 %18, 1
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %if.then51, label %sw.epilog

if.then51:                                        ; preds = %for.end
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.95, i32 0, i32 0))
  br label %sw.epilog

sw.bb54:                                          ; preds = %LeafBlock3, %LeafBlock5, %LeafBlock8
  %type55 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %19 = load i16, i16* %type55, align 2, !tbaa !85
  %conv56 = zext i16 %19 to i32
  %and57 = and i32 %conv56, 65280
  %cmp58 = icmp ne i32 %and57, 0
  br i1 %cmp58, label %land.lhs.true60, label %sw.epilog

land.lhs.true60:                                  ; preds = %sw.bb54
  %type61 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %20 = load i16, i16* %type61, align 2, !tbaa !85
  %conv62 = zext i16 %20 to i32
  %and63 = and i32 %conv62, 32768
  %cmp64 = icmp eq i32 %and63, 32768
  br i1 %cmp64, label %cond.true, label %sw.epilog

cond.true:                                        ; preds = %land.lhs.true60
  %baSourceID66 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  %21 = load i8*, i8** %baSourceID66, align 8, !tbaa !109
  %arrayidx67 = getelementptr inbounds i8, i8* %21, i64 0
  %22 = load i8, i8* %arrayidx67, align 1, !tbaa !61
  %conv68 = zext i8 %22 to i32
  br label %sw.epilog

sw.epilog:                                        ; preds = %cond.true, %land.lhs.true60, %sw.bb54, %if.then51, %for.end, %if.then, %sw.bb, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock8
  %id.0 = phi i32 [ %conv7, %if.then ], [ %conv1, %sw.bb ], [ 0, %if.then51 ], [ 0, %for.end ], [ %conv68, %cond.true ], [ 0, %land.lhs.true60 ], [ 0, %sw.bb54 ], [ -22, %LeafBlock8 ], [ -22, %LeafBlock5 ], [ -22, %LeafBlock3 ], [ -22, %LeafBlock1 ], [ -22, %LeafBlock ]
  %cmp69 = icmp sle i32 %id.0, 0
  br i1 %cmp69, label %if.then71, label %if.end72

if.then71:                                        ; preds = %sw.epilog
  store %struct.uvc_entity* null, %struct.uvc_entity** %_entity, align 8, !tbaa !45
  br label %cleanup

if.end72:                                         ; preds = %sw.epilog
  %dev73 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %23 = load %struct.uvc_device*, %struct.uvc_device** %dev73, align 8, !tbaa !88
  %call74 = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %23, i32 %id.0)
  %cmp75 = icmp eq %struct.uvc_entity* %call74, null
  br i1 %cmp75, label %do.body78, label %if.end86

do.body78:                                        ; preds = %if.end72
  %24 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and79 = and i32 %24, 2
  %tobool80 = icmp ne i32 %and79, 0
  br i1 %tobool80, label %if.then81, label %cleanup

if.then81:                                        ; preds = %do.body78
  %call82 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.96, i32 0, i32 0), i32 %id.0)
  br label %cleanup

if.end86:                                         ; preds = %if.end72
  store %struct.uvc_entity* %call74, %struct.uvc_entity** %_entity, align 8, !tbaa !45
  br label %cleanup

cleanup:                                          ; preds = %if.end86, %if.then81, %do.body78, %if.then71, %if.then34, %do.body
  %retval.0 = phi i32 [ %id.0, %if.then71 ], [ 0, %if.end86 ], [ -1, %if.then34 ], [ -1, %do.body ], [ -22, %if.then81 ], [ -22, %do.body78 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %dev, i32 %id) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %list6.sink = phi %struct.list_head* [ %list6, %for.inc ], [ %entities, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %list6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr9 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %id2 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id2, align 4, !tbaa !91
  %conv = zext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv, %id
  br i1 %cmp3, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %list6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.uvc_entity* [ %2, %for.body ], [ null, %for.cond ]
  ret %struct.uvc_entity* %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_entity* @uvc_entity_by_reference(%struct.uvc_device* %dev, i32 %id, %struct.uvc_entity* %entity) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity* %entity, null
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %0 = bitcast %struct.list_head* %entities to i8*
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 0
  %1 = bitcast i8* %add.ptr to %struct.uvc_entity*
  %entity.addr.0 = select i1 %cmp, %struct.uvc_entity* %1, %struct.uvc_entity* %entity
  br label %for.cond

for.cond:                                         ; preds = %for.inc16, %entry
  %.sink = phi %struct.uvc_entity* [ %4, %for.inc16 ], [ %entity.addr.0, %entry ]
  %list18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %.sink, i32 0, i32 0
  %next19 = getelementptr inbounds %struct.list_head, %struct.list_head* %list18, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next19, align 8, !tbaa !110
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr21 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = bitcast i8* %add.ptr21 to %struct.uvc_entity*
  %list4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 0
  %entities5 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp6 = icmp ne %struct.list_head* %list4, %entities5
  br i1 %cmp6, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  br label %for.cond7

for.cond7:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 12
  %5 = load i8, i8* %bNrInPins, align 8, !tbaa !106
  %conv = zext i8 %5 to i32
  %cmp8 = icmp ult i32 %i.0, %conv
  br i1 %cmp8, label %for.body10, label %for.inc16

for.body10:                                       ; preds = %for.cond7
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 13
  %6 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i8, i8* %6, i64 %idxprom
  %7 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv11 = zext i8 %7 to i32
  %cmp12 = icmp eq i32 %conv11, %id
  br i1 %cmp12, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body10
  %inc = add i32 %i.0, 1
  br label %for.cond7

for.inc16:                                        ; preds = %for.cond7
  br label %for.cond

cleanup:                                          ; preds = %for.body10, %for.cond
  %retval.0 = phi %struct.uvc_entity* [ %4, %for.body10 ], [ null, %for.cond ]
  ret %struct.uvc_entity* %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_vendor_control(%struct.uvc_device* %dev, i8* %buffer, i32 %buflen) #0 {
entry:
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !63
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %1, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %udev2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev2, align 8, !tbaa !63
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 12
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7
  %4 = load i16, i16* %idVendor, align 8, !tbaa !111
  %conv = zext i16 %4 to i32
  %SwitchLeaf = icmp eq i32 %conv, 1133
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup

sw.bb:                                            ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 1
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv3 = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv3, 65
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb
  %arrayidx5 = getelementptr inbounds i8, i8* %buffer, i64 2
  %6 = load i8, i8* %arrayidx5, align 1, !tbaa !61
  %conv6 = zext i8 %6 to i32
  %cmp7 = icmp ne i32 %conv6, 1
  br i1 %cmp7, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %cmp9 = icmp sge i32 %buflen, 22
  br i1 %cmp9, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.end
  %arrayidx11 = getelementptr inbounds i8, i8* %buffer, i64 21
  %7 = load i8, i8* %arrayidx11, align 1, !tbaa !61
  %conv12 = zext i8 %7 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.end
  %cond = phi i32 [ %conv12, %cond.true ], [ 0, %if.end ]
  %add = add i32 25, %cond
  %cmp13 = icmp uge i32 %buflen, %add
  br i1 %cmp13, label %cond.true15, label %cond.end20

cond.true15:                                      ; preds = %cond.end
  %add16 = add i32 22, %cond
  %idxprom = zext i32 %add16 to i64
  %arrayidx17 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom
  %8 = load i8, i8* %arrayidx17, align 1, !tbaa !61
  %conv18 = zext i8 %8 to i32
  br label %cond.end20

cond.end20:                                       ; preds = %cond.true15, %cond.end
  %cond21 = phi i32 [ %conv18, %cond.true15 ], [ 0, %cond.end ]
  %add22 = add i32 25, %cond
  %mul = mul i32 2, %cond21
  %add23 = add i32 %add22, %mul
  %cmp24 = icmp ult i32 %buflen, %add23
  br i1 %cmp24, label %do.body, label %if.end30

do.body:                                          ; preds = %cond.end20
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %9, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then27, label %cleanup

if.then27:                                        ; preds = %do.body
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %10 = load i32, i32* %devnum, align 8, !tbaa !117
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %11 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv28 = zext i8 %11 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i32 0, i32 0), i32 %10, i32 %conv28)
  br label %cleanup

if.end30:                                         ; preds = %cond.end20
  %arrayidx31 = getelementptr inbounds i8, i8* %buffer, i64 3
  %12 = load i8, i8* %arrayidx31, align 1, !tbaa !61
  %add32 = add i32 %cond, 1
  %mul33 = mul i32 2, %cond21
  %call34 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext 6, i8 zeroext %12, i32 %add32, i32 %mul33)
  %cmp35 = icmp eq %struct.uvc_entity* %call34, null
  br i1 %cmp35, label %cleanup, label %if.end38

if.end38:                                         ; preds = %if.end30
  %cmp39 = icmp uge i64 16, 64
  %13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension = bitcast %union.anon.63* %13 to %struct.anon.69*
  %guidExtensionCode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %arrayidx42 = getelementptr inbounds i8, i8* %buffer, i64 4
  br i1 %cmp39, label %if.then41, label %if.else

if.then41:                                        ; preds = %if.end38
  %call43 = call i8* @__memcpy(i8* %arraydecay, i8* %arrayidx42, i64 16)
  br label %if.end48

if.else:                                          ; preds = %if.end38
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arrayidx42, i64 16, i32 1, i1 false)
  br label %if.end48

if.end48:                                         ; preds = %if.else, %if.then41
  %__ret.0 = phi i8* [ %call43, %if.then41 ], [ %arraydecay, %if.else ]
  %arrayidx49 = getelementptr inbounds i8, i8* %buffer, i64 20
  %14 = load i8, i8* %arrayidx49, align 1, !tbaa !61
  %15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension50 = bitcast %union.anon.63* %15 to %struct.anon.69*
  %bNumControls = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension50, i32 0, i32 1
  store i8 %14, i8* %bNumControls, align 8, !tbaa !61
  %conv52 = zext i32 %cond to i64
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 13
  %16 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %arrayidx54 = getelementptr inbounds i8, i8* %buffer, i64 22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %arrayidx54, i64 %conv52, i32 1, i1 false)
  %add56 = add i32 22, %cond
  %idxprom57 = zext i32 %add56 to i64
  %arrayidx58 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom57
  %17 = load i8, i8* %arrayidx58, align 1, !tbaa !61
  %18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension59 = bitcast %union.anon.63* %18 to %struct.anon.69*
  %bControlSize = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension59, i32 0, i32 2
  store i8 %17, i8* %bControlSize, align 1, !tbaa !61
  %19 = bitcast %struct.uvc_entity* %call34 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %19, i64 456
  %20 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension60 = bitcast %union.anon.63* %20 to %struct.anon.69*
  %bmControls = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension60, i32 0, i32 3
  store i8* %add.ptr, i8** %bmControls, align 8, !tbaa !61
  %21 = bitcast %struct.uvc_entity* %call34 to i8*
  %add.ptr61 = getelementptr inbounds i8, i8* %21, i64 456
  %idx.ext = zext i32 %cond21 to i64
  %add.ptr62 = getelementptr inbounds i8, i8* %add.ptr61, i64 %idx.ext
  %22 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension63 = bitcast %union.anon.63* %22 to %struct.anon.69*
  %bmControlsType = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension63, i32 0, i32 4
  store i8* %add.ptr62, i8** %bmControlsType, align 8, !tbaa !61
  %mul65 = mul i32 2, %cond21
  %conv66 = zext i32 %mul65 to i64
  %23 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 11
  %extension68 = bitcast %union.anon.63* %23 to %struct.anon.69*
  %bmControls69 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension68, i32 0, i32 3
  %24 = load i8*, i8** %bmControls69, align 8, !tbaa !61
  %add70 = add i32 23, %cond
  %idxprom71 = zext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom71
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %24, i8* %arrayidx72, i64 %conv66, i32 1, i1 false)
  %add74 = add i32 24, %cond
  %mul75 = mul i32 2, %cond21
  %add76 = add i32 %add74, %mul75
  %idxprom77 = zext i32 %add76 to i64
  %arrayidx78 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom77
  %25 = load i8, i8* %arrayidx78, align 1, !tbaa !61
  %conv79 = zext i8 %25 to i32
  %cmp80 = icmp ne i32 %conv79, 0
  br i1 %cmp80, label %if.then82, label %if.else91

if.then82:                                        ; preds = %if.end48
  %add83 = add i32 24, %cond
  %mul84 = mul i32 2, %cond21
  %add85 = add i32 %add83, %mul84
  %idxprom86 = zext i32 %add85 to i64
  %arrayidx87 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom86
  %26 = load i8, i8* %arrayidx87, align 1, !tbaa !61
  %conv88 = zext i8 %26 to i32
  %name = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 5
  %arraydecay89 = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0
  %call90 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv88, i8* %arraydecay89, i64 64)
  br label %if.end97

if.else91:                                        ; preds = %if.end48
  %name92 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 5
  %arraydecay93 = getelementptr inbounds [64 x i8], [64 x i8]* %name92, i32 0, i32 0
  %arrayidx94 = getelementptr inbounds i8, i8* %buffer, i64 3
  %27 = load i8, i8* %arrayidx94, align 1, !tbaa !61
  %conv95 = zext i8 %27 to i32
  %call96 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay93, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i32 %conv95)
  br label %if.end97

if.end97:                                         ; preds = %if.else91, %if.then82
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call34, i32 0, i32 0
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %entities)
  br label %cleanup

cleanup:                                          ; preds = %if.end97, %if.end30, %if.then27, %do.body, %lor.lhs.false, %sw.bb, %entry
  %retval.0 = phi i32 [ -12, %if.end30 ], [ 1, %if.end97 ], [ 0, %lor.lhs.false ], [ 0, %sw.bb ], [ 0, %if.then27 ], [ 0, %do.body ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_standard_control(%struct.uvc_device* %dev, i8* %buffer, i32 %buflen) #0 {
entry:
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !63
  %intf2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %1 = load %struct.usb_interface*, %struct.usb_interface** %intf2, align 8, !tbaa !62
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %1, i32 0, i32 1
  %2 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 2
  %3 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %3 to i32
  %Pivot10 = icmp slt i32 %conv, 4
  br i1 %Pivot10, label %NodeBlock1, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %conv, 5
  br i1 %Pivot8, label %sw.bb317, label %NodeBlock5

NodeBlock5:                                       ; preds = %NodeBlock7
  %Pivot6 = icmp slt i32 %conv, 6
  br i1 %Pivot6, label %sw.bb384, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock5
  %SwitchLeaf4 = icmp eq i32 %conv, 6
  br i1 %SwitchLeaf4, label %sw.bb484, label %do.body596

NodeBlock1:                                       ; preds = %entry
  %Pivot2 = icmp slt i32 %conv, 2
  br i1 %Pivot2, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock1
  %Pivot = icmp slt i32 %conv, 3
  br i1 %Pivot, label %sw.bb37, label %sw.bb238

LeafBlock:                                        ; preds = %NodeBlock1
  %SwitchLeaf = icmp eq i32 %conv, 1
  br i1 %SwitchLeaf, label %sw.bb, label %do.body596

sw.bb:                                            ; preds = %LeafBlock
  %cmp = icmp sge i32 %buflen, 12
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %sw.bb
  %arrayidx4 = getelementptr inbounds i8, i8* %buffer, i64 11
  %4 = load i8, i8* %arrayidx4, align 1, !tbaa !61
  %conv5 = zext i8 %4 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.bb
  %cond = phi i32 [ %conv5, %cond.true ], [ 0, %sw.bb ]
  %cmp6 = icmp slt i32 %buflen, 12
  %add = add i32 12, %cond
  %cmp8 = icmp ult i32 %buflen, %add
  %or.cond = or i1 %cmp6, %cmp8
  br i1 %or.cond, label %do.body, label %if.end12

do.body:                                          ; preds = %cond.end
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %5, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then10, label %cleanup

if.then10:                                        ; preds = %do.body
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %6 = load i32, i32* %devnum, align 8, !tbaa !117
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %7 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv11 = zext i8 %7 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.20, i32 0, i32 0), i32 %6, i32 %conv11)
  br label %cleanup

if.end12:                                         ; preds = %cond.end
  %arrayidx13 = getelementptr inbounds i8, i8* %buffer, i64 3
  %call14 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx13)
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  store i16 %call14, i16* %uvc_version, align 8, !tbaa !118
  %arrayidx15 = getelementptr inbounds i8, i8* %buffer, i64 7
  %call16 = call i32 @get_unaligned_le32(i8* %arrayidx15)
  %clock_frequency = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 12
  store i32 %call16, i32* %clock_frequency, align 4, !tbaa !119
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end12
  %i.0 = phi i32 [ 0, %if.end12 ], [ %inc, %for.inc ]
  %cmp17 = icmp ult i32 %i.0, %cond
  br i1 %cmp17, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %add19 = add i32 12, %i.0
  %idxprom = zext i32 %add19 to i64
  %arrayidx20 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom
  %8 = load i8, i8* %arrayidx20, align 1, !tbaa !61
  %conv21 = zext i8 %8 to i32
  %call22 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %0, i32 %conv21)
  %cmp23 = icmp eq %struct.usb_interface* %call22, null
  br i1 %cmp23, label %do.body26, label %if.end35

do.body26:                                        ; preds = %for.body
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and27 = and i32 %9, 2
  %tobool28 = icmp ne i32 %and27, 0
  br i1 %tobool28, label %if.then29, label %for.inc

if.then29:                                        ; preds = %do.body26
  %devnum30 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %10 = load i32, i32* %devnum30, align 8, !tbaa !117
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.21, i32 0, i32 0), i32 %10, i32 %i.0)
  br label %for.inc

if.end35:                                         ; preds = %for.body
  call void @uvc_parse_streaming(%struct.uvc_device* %dev, %struct.usb_interface* %call22)
  br label %for.inc

for.inc:                                          ; preds = %if.end35, %if.then29, %do.body26
  %inc = add i32 %i.0, 1
  br label %for.cond

sw.bb37:                                          ; preds = %NodeBlock
  %cmp38 = icmp slt i32 %buflen, 8
  br i1 %cmp38, label %do.body41, label %if.end53

do.body41:                                        ; preds = %sw.bb37
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and42 = and i32 %11, 2
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %cleanup

if.then44:                                        ; preds = %do.body41
  %devnum45 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %12 = load i32, i32* %devnum45, align 8, !tbaa !117
  %desc46 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber47 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc46, i32 0, i32 2
  %13 = load i8, i8* %bInterfaceNumber47, align 2, !tbaa !44
  %conv48 = zext i8 %13 to i32
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i32 0, i32 0), i32 %12, i32 %conv48)
  br label %cleanup

if.end53:                                         ; preds = %sw.bb37
  %arrayidx54 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call55 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx54)
  %conv56 = zext i16 %call55 to i32
  %and57 = and i32 %conv56, 65280
  %cmp58 = icmp eq i32 %and57, 0
  br i1 %cmp58, label %do.body61, label %if.end76

do.body61:                                        ; preds = %if.end53
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and62 = and i32 %14, 2
  %tobool63 = icmp ne i32 %and62, 0
  br i1 %tobool63, label %if.then64, label %cleanup

if.then64:                                        ; preds = %do.body61
  %devnum65 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %15 = load i32, i32* %devnum65, align 8, !tbaa !117
  %desc66 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber67 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc66, i32 0, i32 2
  %16 = load i8, i8* %bInterfaceNumber67, align 2, !tbaa !44
  %conv68 = zext i8 %16 to i32
  %arrayidx69 = getelementptr inbounds i8, i8* %buffer, i64 3
  %17 = load i8, i8* %arrayidx69, align 1, !tbaa !61
  %conv70 = zext i8 %17 to i32
  %conv71 = zext i16 %call55 to i32
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([101 x i8], [101 x i8]* @.str.23, i32 0, i32 0), i32 %15, i32 %conv68, i32 %conv70, i32 %conv71)
  br label %cleanup

if.end76:                                         ; preds = %if.end53
  %conv77 = zext i16 %call55 to i32
  %cmp78 = icmp eq i32 %conv77, 513
  br i1 %cmp78, label %if.then80, label %if.else

if.then80:                                        ; preds = %if.end76
  %cmp81 = icmp sge i32 %buflen, 15
  br i1 %cmp81, label %cond.true83, label %if.end113

cond.true83:                                      ; preds = %if.then80
  %arrayidx84 = getelementptr inbounds i8, i8* %buffer, i64 14
  %18 = load i8, i8* %arrayidx84, align 1, !tbaa !61
  %conv85 = zext i8 %18 to i32
  br label %if.end113

if.else:                                          ; preds = %if.end76
  %conv89 = zext i16 %call55 to i32
  %cmp90 = icmp eq i32 %conv89, 514
  br i1 %cmp90, label %if.then92, label %if.end113

if.then92:                                        ; preds = %if.else
  %cmp93 = icmp sge i32 %buflen, 9
  br i1 %cmp93, label %cond.true95, label %cond.end99

cond.true95:                                      ; preds = %if.then92
  %arrayidx96 = getelementptr inbounds i8, i8* %buffer, i64 8
  %19 = load i8, i8* %arrayidx96, align 1, !tbaa !61
  %conv97 = zext i8 %19 to i32
  br label %cond.end99

cond.end99:                                       ; preds = %cond.true95, %if.then92
  %cond100 = phi i32 [ %conv97, %cond.true95 ], [ 0, %if.then92 ]
  %add101 = add i32 10, %cond100
  %cmp102 = icmp uge i32 %buflen, %add101
  br i1 %cmp102, label %cond.true104, label %if.end113

cond.true104:                                     ; preds = %cond.end99
  %add105 = add i32 9, %cond100
  %idxprom106 = zext i32 %add105 to i64
  %arrayidx107 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom106
  %20 = load i8, i8* %arrayidx107, align 1, !tbaa !61
  %conv108 = zext i8 %20 to i32
  br label %if.end113

if.end113:                                        ; preds = %cond.true104, %cond.end99, %if.else, %cond.true83, %if.then80
  %p.1 = phi i32 [ 0, %if.then80 ], [ 0, %cond.true83 ], [ 0, %if.else ], [ %conv108, %cond.true104 ], [ 0, %cond.end99 ]
  %n.1 = phi i32 [ %conv85, %cond.true83 ], [ 0, %if.then80 ], [ 0, %if.else ], [ %cond100, %cond.end99 ], [ %cond100, %cond.true104 ]
  %len.1 = phi i32 [ 15, %if.then80 ], [ 15, %cond.true83 ], [ 8, %if.else ], [ 10, %cond.end99 ], [ 10, %cond.true104 ]
  %add114 = add i32 %len.1, %n.1
  %add115 = add i32 %add114, %p.1
  %cmp116 = icmp ult i32 %buflen, %add115
  br i1 %cmp116, label %do.body119, label %if.end131

do.body119:                                       ; preds = %if.end113
  %21 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and120 = and i32 %21, 2
  %tobool121 = icmp ne i32 %and120, 0
  br i1 %tobool121, label %if.then122, label %cleanup

if.then122:                                       ; preds = %do.body119
  %devnum123 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %22 = load i32, i32* %devnum123, align 8, !tbaa !117
  %desc124 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber125 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc124, i32 0, i32 2
  %23 = load i8, i8* %bInterfaceNumber125, align 2, !tbaa !44
  %conv126 = zext i8 %23 to i32
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.22, i32 0, i32 0), i32 %22, i32 %conv126)
  br label %cleanup

if.end131:                                        ; preds = %if.end113
  %conv132 = zext i16 %call55 to i32
  %conv133 = trunc i32 %conv132 to i16
  %arrayidx134 = getelementptr inbounds i8, i8* %buffer, i64 3
  %24 = load i8, i8* %arrayidx134, align 1, !tbaa !61
  %add135 = add i32 %n.1, %p.1
  %call136 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv133, i8 zeroext %24, i32 1, i32 %add135)
  %cmp137 = icmp eq %struct.uvc_entity* %call136, null
  br i1 %cmp137, label %cleanup, label %if.end140

if.end140:                                        ; preds = %if.end131
  %type141 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 4
  %25 = load i16, i16* %type141, align 2, !tbaa !85
  %conv142 = zext i16 %25 to i32
  %and143 = and i32 %conv142, 32767
  %cmp144 = icmp eq i32 %and143, 513
  br i1 %cmp144, label %if.then146, label %if.else162

if.then146:                                       ; preds = %if.end140
  %conv147 = trunc i32 %n.1 to i8
  %26 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera = bitcast %union.anon.63* %26 to %struct.anon.64*
  %bControlSize = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera, i32 0, i32 3
  store i8 %conv147, i8* %bControlSize, align 2, !tbaa !61
  %27 = bitcast %struct.uvc_entity* %call136 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %27, i64 456
  %28 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera148 = bitcast %union.anon.63* %28 to %struct.anon.64*
  %bmControls = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera148, i32 0, i32 4
  store i8* %add.ptr, i8** %bmControls, align 8, !tbaa !61
  %arrayidx149 = getelementptr inbounds i8, i8* %buffer, i64 8
  %call150 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx149)
  %29 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera151 = bitcast %union.anon.63* %29 to %struct.anon.64*
  %wObjectiveFocalLengthMin = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera151, i32 0, i32 0
  store i16 %call150, i16* %wObjectiveFocalLengthMin, align 8, !tbaa !61
  %arrayidx152 = getelementptr inbounds i8, i8* %buffer, i64 10
  %call153 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx152)
  %30 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera154 = bitcast %union.anon.63* %30 to %struct.anon.64*
  %wObjectiveFocalLengthMax = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera154, i32 0, i32 1
  store i16 %call153, i16* %wObjectiveFocalLengthMax, align 2, !tbaa !61
  %arrayidx155 = getelementptr inbounds i8, i8* %buffer, i64 12
  %call156 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx155)
  %31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera157 = bitcast %union.anon.63* %31 to %struct.anon.64*
  %wOcularFocalLength = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera157, i32 0, i32 2
  store i16 %call156, i16* %wOcularFocalLength, align 4, !tbaa !61
  %conv158 = zext i32 %n.1 to i64
  %32 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %camera159 = bitcast %union.anon.63* %32 to %struct.anon.64*
  %bmControls160 = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera159, i32 0, i32 4
  %33 = load i8*, i8** %bmControls160, align 8, !tbaa !61
  %arrayidx161 = getelementptr inbounds i8, i8* %buffer, i64 15
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %arrayidx161, i64 %conv158, i32 1, i1 false)
  br label %if.end196

if.else162:                                       ; preds = %if.end140
  %type163 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 4
  %34 = load i16, i16* %type163, align 2, !tbaa !85
  %conv164 = zext i16 %34 to i32
  %and165 = and i32 %conv164, 32767
  %cmp166 = icmp eq i32 %and165, 514
  br i1 %cmp166, label %if.then168, label %if.end196

if.then168:                                       ; preds = %if.else162
  %conv169 = trunc i32 %n.1 to i8
  %35 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media = bitcast %union.anon.63* %35 to %struct.anon.65*
  %bControlSize170 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media, i32 0, i32 0
  store i8 %conv169, i8* %bControlSize170, align 8, !tbaa !61
  %36 = bitcast %struct.uvc_entity* %call136 to i8*
  %add.ptr171 = getelementptr inbounds i8, i8* %36, i64 456
  %37 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media172 = bitcast %union.anon.63* %37 to %struct.anon.65*
  %bmControls173 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media172, i32 0, i32 1
  store i8* %add.ptr171, i8** %bmControls173, align 8, !tbaa !61
  %conv174 = trunc i32 %p.1 to i8
  %38 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media175 = bitcast %union.anon.63* %38 to %struct.anon.65*
  %bTransportModeSize = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media175, i32 0, i32 2
  store i8 %conv174, i8* %bTransportModeSize, align 8, !tbaa !61
  %39 = bitcast %struct.uvc_entity* %call136 to i8*
  %add.ptr176 = getelementptr inbounds i8, i8* %39, i64 456
  %idx.ext = zext i32 %n.1 to i64
  %add.ptr177 = getelementptr inbounds i8, i8* %add.ptr176, i64 %idx.ext
  %40 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media178 = bitcast %union.anon.63* %40 to %struct.anon.65*
  %bmTransportModes = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media178, i32 0, i32 3
  store i8* %add.ptr177, i8** %bmTransportModes, align 8, !tbaa !61
  %conv180 = zext i32 %n.1 to i64
  %41 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media182 = bitcast %union.anon.63* %41 to %struct.anon.65*
  %bmControls183 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media182, i32 0, i32 1
  %42 = load i8*, i8** %bmControls183, align 8, !tbaa !61
  %arrayidx184 = getelementptr inbounds i8, i8* %buffer, i64 9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %arrayidx184, i64 %conv180, i32 1, i1 false)
  %conv187 = zext i32 %p.1 to i64
  %43 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 11
  %media189 = bitcast %union.anon.63* %43 to %struct.anon.65*
  %bmTransportModes190 = getelementptr inbounds %struct.anon.65, %struct.anon.65* %media189, i32 0, i32 3
  %44 = load i8*, i8** %bmTransportModes190, align 8, !tbaa !61
  %add191 = add i32 10, %n.1
  %idxprom192 = zext i32 %add191 to i64
  %arrayidx193 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %arrayidx193, i64 %conv187, i32 1, i1 false)
  br label %if.end196

if.end196:                                        ; preds = %if.then168, %if.else162, %if.then146
  %arrayidx197 = getelementptr inbounds i8, i8* %buffer, i64 7
  %45 = load i8, i8* %arrayidx197, align 1, !tbaa !61
  %conv198 = zext i8 %45 to i32
  %cmp199 = icmp ne i32 %conv198, 0
  br i1 %cmp199, label %if.then201, label %if.else205

if.then201:                                       ; preds = %if.end196
  %arrayidx202 = getelementptr inbounds i8, i8* %buffer, i64 7
  %46 = load i8, i8* %arrayidx202, align 1, !tbaa !61
  %conv203 = zext i8 %46 to i32
  %name = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 5
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %name, i32 0, i32 0
  %call204 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv203, i8* %arraydecay, i64 64)
  br label %if.end237

if.else205:                                       ; preds = %if.end196
  %type206 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 4
  %47 = load i16, i16* %type206, align 2, !tbaa !85
  %conv207 = zext i16 %47 to i32
  %and208 = and i32 %conv207, 32767
  %cmp209 = icmp eq i32 %and208, 513
  br i1 %cmp209, label %if.then211, label %if.else217

if.then211:                                       ; preds = %if.else205
  %name212 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 5
  %arraydecay213 = getelementptr inbounds [64 x i8], [64 x i8]* %name212, i32 0, i32 0
  %arrayidx214 = getelementptr inbounds i8, i8* %buffer, i64 3
  %48 = load i8, i8* %arrayidx214, align 1, !tbaa !61
  %conv215 = zext i8 %48 to i32
  %call216 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay213, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i32 0, i32 0), i32 %conv215)
  br label %if.end237

if.else217:                                       ; preds = %if.else205
  %type218 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 4
  %49 = load i16, i16* %type218, align 2, !tbaa !85
  %conv219 = zext i16 %49 to i32
  %and220 = and i32 %conv219, 32767
  %cmp221 = icmp eq i32 %and220, 514
  %name224 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 5
  %arraydecay225 = getelementptr inbounds [64 x i8], [64 x i8]* %name224, i32 0, i32 0
  %arrayidx226 = getelementptr inbounds i8, i8* %buffer, i64 3
  %50 = load i8, i8* %arrayidx226, align 1, !tbaa !61
  %conv227 = zext i8 %50 to i32
  br i1 %cmp221, label %if.then223, label %if.else229

if.then223:                                       ; preds = %if.else217
  %call228 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay225, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.25, i32 0, i32 0), i32 %conv227)
  br label %if.end237

if.else229:                                       ; preds = %if.else217
  %call234 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay225, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i32 0, i32 0), i32 %conv227)
  br label %if.end237

if.end237:                                        ; preds = %if.else229, %if.then223, %if.then211, %if.then201
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call136, i32 0, i32 0
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %entities)
  br label %cleanup

sw.bb238:                                         ; preds = %NodeBlock
  %cmp239 = icmp slt i32 %buflen, 9
  br i1 %cmp239, label %do.body242, label %if.end254

do.body242:                                       ; preds = %sw.bb238
  %51 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and243 = and i32 %51, 2
  %tobool244 = icmp ne i32 %and243, 0
  br i1 %tobool244, label %if.then245, label %cleanup

if.then245:                                       ; preds = %do.body242
  %devnum246 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %52 = load i32, i32* %devnum246, align 8, !tbaa !117
  %desc247 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber248 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc247, i32 0, i32 2
  %53 = load i8, i8* %bInterfaceNumber248, align 2, !tbaa !44
  %conv249 = zext i8 %53 to i32
  %call250 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.27, i32 0, i32 0), i32 %52, i32 %conv249)
  br label %cleanup

if.end254:                                        ; preds = %sw.bb238
  %arrayidx255 = getelementptr inbounds i8, i8* %buffer, i64 4
  %call256 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx255)
  %conv257 = zext i16 %call256 to i32
  %and258 = and i32 %conv257, 65280
  %cmp259 = icmp eq i32 %and258, 0
  br i1 %cmp259, label %do.body262, label %if.end277

do.body262:                                       ; preds = %if.end254
  %54 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and263 = and i32 %54, 2
  %tobool264 = icmp ne i32 %and263, 0
  br i1 %tobool264, label %if.then265, label %cleanup

if.then265:                                       ; preds = %do.body262
  %devnum266 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %55 = load i32, i32* %devnum266, align 8, !tbaa !117
  %desc267 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber268 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc267, i32 0, i32 2
  %56 = load i8, i8* %bInterfaceNumber268, align 2, !tbaa !44
  %conv269 = zext i8 %56 to i32
  %arrayidx270 = getelementptr inbounds i8, i8* %buffer, i64 3
  %57 = load i8, i8* %arrayidx270, align 1, !tbaa !61
  %conv271 = zext i8 %57 to i32
  %conv272 = zext i16 %call256 to i32
  %call273 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str.28, i32 0, i32 0), i32 %55, i32 %conv269, i32 %conv271, i32 %conv272)
  br label %cleanup

if.end277:                                        ; preds = %if.end254
  %conv278 = zext i16 %call256 to i32
  %or = or i32 %conv278, 32768
  %conv279 = trunc i32 %or to i16
  %arrayidx280 = getelementptr inbounds i8, i8* %buffer, i64 3
  %58 = load i8, i8* %arrayidx280, align 1, !tbaa !61
  %call281 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv279, i8 zeroext %58, i32 1, i32 0)
  %cmp282 = icmp eq %struct.uvc_entity* %call281, null
  br i1 %cmp282, label %cleanup, label %if.end285

if.end285:                                        ; preds = %if.end277
  %cmp288 = icmp uge i64 1, 64
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call281, i32 0, i32 13
  %59 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %arrayidx291 = getelementptr inbounds i8, i8* %buffer, i64 7
  br i1 %cmp288, label %if.then290, label %if.else293

if.then290:                                       ; preds = %if.end285
  %call292 = call i8* @__memcpy(i8* %59, i8* %arrayidx291, i64 1)
  br label %if.end296

if.else293:                                       ; preds = %if.end285
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %59, i8* %arrayidx291, i64 1, i32 1, i1 false)
  br label %if.end296

if.end296:                                        ; preds = %if.else293, %if.then290
  %__ret287.0 = phi i8* [ %call292, %if.then290 ], [ %59, %if.else293 ]
  %arrayidx298 = getelementptr inbounds i8, i8* %buffer, i64 8
  %60 = load i8, i8* %arrayidx298, align 1, !tbaa !61
  %conv299 = zext i8 %60 to i32
  %cmp300 = icmp ne i32 %conv299, 0
  br i1 %cmp300, label %if.then302, label %if.else308

if.then302:                                       ; preds = %if.end296
  %arrayidx303 = getelementptr inbounds i8, i8* %buffer, i64 8
  %61 = load i8, i8* %arrayidx303, align 1, !tbaa !61
  %conv304 = zext i8 %61 to i32
  %name305 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call281, i32 0, i32 5
  %arraydecay306 = getelementptr inbounds [64 x i8], [64 x i8]* %name305, i32 0, i32 0
  %call307 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv304, i8* %arraydecay306, i64 64)
  br label %if.end314

if.else308:                                       ; preds = %if.end296
  %name309 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call281, i32 0, i32 5
  %arraydecay310 = getelementptr inbounds [64 x i8], [64 x i8]* %name309, i32 0, i32 0
  %arrayidx311 = getelementptr inbounds i8, i8* %buffer, i64 3
  %62 = load i8, i8* %arrayidx311, align 1, !tbaa !61
  %conv312 = zext i8 %62 to i32
  %call313 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay310, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i32 0, i32 0), i32 %conv312)
  br label %if.end314

if.end314:                                        ; preds = %if.else308, %if.then302
  %list315 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call281, i32 0, i32 0
  %entities316 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list315, %struct.list_head* %entities316)
  br label %cleanup

sw.bb317:                                         ; preds = %NodeBlock7
  %cmp318 = icmp sge i32 %buflen, 5
  br i1 %cmp318, label %cond.true320, label %cond.end324

cond.true320:                                     ; preds = %sw.bb317
  %arrayidx321 = getelementptr inbounds i8, i8* %buffer, i64 4
  %63 = load i8, i8* %arrayidx321, align 1, !tbaa !61
  %conv322 = zext i8 %63 to i32
  br label %cond.end324

cond.end324:                                      ; preds = %cond.true320, %sw.bb317
  %cond325 = phi i32 [ %conv322, %cond.true320 ], [ 0, %sw.bb317 ]
  %cmp326 = icmp slt i32 %buflen, 5
  %add329 = add i32 6, %cond325
  %cmp330 = icmp ult i32 %buflen, %add329
  %or.cond11 = or i1 %cmp326, %cmp330
  br i1 %or.cond11, label %do.body333, label %if.end345

do.body333:                                       ; preds = %cond.end324
  %64 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and334 = and i32 %64, 2
  %tobool335 = icmp ne i32 %and334, 0
  br i1 %tobool335, label %if.then336, label %cleanup

if.then336:                                       ; preds = %do.body333
  %devnum337 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %65 = load i32, i32* %devnum337, align 8, !tbaa !117
  %desc338 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber339 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc338, i32 0, i32 2
  %66 = load i8, i8* %bInterfaceNumber339, align 2, !tbaa !44
  %conv340 = zext i8 %66 to i32
  %call341 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.30, i32 0, i32 0), i32 %65, i32 %conv340)
  br label %cleanup

if.end345:                                        ; preds = %cond.end324
  %arrayidx346 = getelementptr inbounds i8, i8* %buffer, i64 2
  %67 = load i8, i8* %arrayidx346, align 1, !tbaa !61
  %conv347 = zext i8 %67 to i16
  %arrayidx348 = getelementptr inbounds i8, i8* %buffer, i64 3
  %68 = load i8, i8* %arrayidx348, align 1, !tbaa !61
  %add349 = add i32 %cond325, 1
  %call350 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv347, i8 zeroext %68, i32 %add349, i32 0)
  %cmp351 = icmp eq %struct.uvc_entity* %call350, null
  br i1 %cmp351, label %cleanup, label %if.end354

if.end354:                                        ; preds = %if.end345
  %conv356 = zext i32 %cond325 to i64
  %baSourceID358 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call350, i32 0, i32 13
  %69 = load i8*, i8** %baSourceID358, align 8, !tbaa !109
  %arrayidx359 = getelementptr inbounds i8, i8* %buffer, i64 5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %arrayidx359, i64 %conv356, i32 1, i1 false)
  %add361 = add i32 5, %cond325
  %idxprom362 = zext i32 %add361 to i64
  %arrayidx363 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom362
  %70 = load i8, i8* %arrayidx363, align 1, !tbaa !61
  %conv364 = zext i8 %70 to i32
  %cmp365 = icmp ne i32 %conv364, 0
  br i1 %cmp365, label %if.then367, label %if.else375

if.then367:                                       ; preds = %if.end354
  %add368 = add i32 5, %cond325
  %idxprom369 = zext i32 %add368 to i64
  %arrayidx370 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom369
  %71 = load i8, i8* %arrayidx370, align 1, !tbaa !61
  %conv371 = zext i8 %71 to i32
  %name372 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call350, i32 0, i32 5
  %arraydecay373 = getelementptr inbounds [64 x i8], [64 x i8]* %name372, i32 0, i32 0
  %call374 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv371, i8* %arraydecay373, i64 64)
  br label %if.end381

if.else375:                                       ; preds = %if.end354
  %name376 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call350, i32 0, i32 5
  %arraydecay377 = getelementptr inbounds [64 x i8], [64 x i8]* %name376, i32 0, i32 0
  %arrayidx378 = getelementptr inbounds i8, i8* %buffer, i64 3
  %72 = load i8, i8* %arrayidx378, align 1, !tbaa !61
  %conv379 = zext i8 %72 to i32
  %call380 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay377, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.31, i32 0, i32 0), i32 %conv379)
  br label %if.end381

if.end381:                                        ; preds = %if.else375, %if.then367
  %list382 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call350, i32 0, i32 0
  %entities383 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list382, %struct.list_head* %entities383)
  br label %cleanup

sw.bb384:                                         ; preds = %NodeBlock5
  %cmp385 = icmp sge i32 %buflen, 8
  br i1 %cmp385, label %cond.true387, label %cond.end391

cond.true387:                                     ; preds = %sw.bb384
  %arrayidx388 = getelementptr inbounds i8, i8* %buffer, i64 7
  %73 = load i8, i8* %arrayidx388, align 1, !tbaa !61
  %conv389 = zext i8 %73 to i32
  br label %cond.end391

cond.end391:                                      ; preds = %cond.true387, %sw.bb384
  %cond392 = phi i32 [ %conv389, %cond.true387 ], [ 0, %sw.bb384 ]
  %uvc_version393 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  %74 = load i16, i16* %uvc_version393, align 8, !tbaa !118
  %conv394 = zext i16 %74 to i32
  %cmp395 = icmp sge i32 %conv394, 272
  %75 = zext i1 %cmp395 to i64
  %cond397 = select i1 %cmp395, i32 10, i32 9
  %add398 = add i32 %cond397, %cond392
  %cmp399 = icmp ult i32 %buflen, %add398
  br i1 %cmp399, label %do.body402, label %if.end414

do.body402:                                       ; preds = %cond.end391
  %76 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and403 = and i32 %76, 2
  %tobool404 = icmp ne i32 %and403, 0
  br i1 %tobool404, label %if.then405, label %cleanup

if.then405:                                       ; preds = %do.body402
  %devnum406 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %77 = load i32, i32* %devnum406, align 8, !tbaa !117
  %desc407 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber408 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc407, i32 0, i32 2
  %78 = load i8, i8* %bInterfaceNumber408, align 2, !tbaa !44
  %conv409 = zext i8 %78 to i32
  %call410 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.32, i32 0, i32 0), i32 %77, i32 %conv409)
  br label %cleanup

if.end414:                                        ; preds = %cond.end391
  %arrayidx415 = getelementptr inbounds i8, i8* %buffer, i64 2
  %79 = load i8, i8* %arrayidx415, align 1, !tbaa !61
  %conv416 = zext i8 %79 to i16
  %arrayidx417 = getelementptr inbounds i8, i8* %buffer, i64 3
  %80 = load i8, i8* %arrayidx417, align 1, !tbaa !61
  %call418 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv416, i8 zeroext %80, i32 2, i32 %cond392)
  %cmp419 = icmp eq %struct.uvc_entity* %call418, null
  br i1 %cmp419, label %cleanup, label %if.end422

if.end422:                                        ; preds = %if.end414
  %cmp425 = icmp uge i64 1, 64
  %baSourceID428 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 13
  %81 = load i8*, i8** %baSourceID428, align 8, !tbaa !109
  %arrayidx429 = getelementptr inbounds i8, i8* %buffer, i64 4
  br i1 %cmp425, label %if.then427, label %if.else431

if.then427:                                       ; preds = %if.end422
  %call430 = call i8* @__memcpy(i8* %81, i8* %arrayidx429, i64 1)
  br label %if.end434

if.else431:                                       ; preds = %if.end422
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %arrayidx429, i64 1, i32 1, i1 false)
  br label %if.end434

if.end434:                                        ; preds = %if.else431, %if.then427
  %__ret424.0 = phi i8* [ %call430, %if.then427 ], [ %81, %if.else431 ]
  %arrayidx436 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call437 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx436)
  %82 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 11
  %processing = bitcast %union.anon.63* %82 to %struct.anon.67*
  %wMaxMultiplier = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing, i32 0, i32 0
  store i16 %call437, i16* %wMaxMultiplier, align 8, !tbaa !61
  %arrayidx438 = getelementptr inbounds i8, i8* %buffer, i64 7
  %83 = load i8, i8* %arrayidx438, align 1, !tbaa !61
  %84 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 11
  %processing439 = bitcast %union.anon.63* %84 to %struct.anon.67*
  %bControlSize440 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing439, i32 0, i32 1
  store i8 %83, i8* %bControlSize440, align 2, !tbaa !61
  %85 = bitcast %struct.uvc_entity* %call418 to i8*
  %add.ptr441 = getelementptr inbounds i8, i8* %85, i64 456
  %86 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 11
  %processing442 = bitcast %union.anon.63* %86 to %struct.anon.67*
  %bmControls443 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing442, i32 0, i32 2
  store i8* %add.ptr441, i8** %bmControls443, align 8, !tbaa !61
  %conv445 = zext i32 %cond392 to i64
  %87 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 11
  %processing447 = bitcast %union.anon.63* %87 to %struct.anon.67*
  %bmControls448 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing447, i32 0, i32 2
  %88 = load i8*, i8** %bmControls448, align 8, !tbaa !61
  %arrayidx449 = getelementptr inbounds i8, i8* %buffer, i64 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %arrayidx449, i64 %conv445, i32 1, i1 false)
  %uvc_version451 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 11
  %89 = load i16, i16* %uvc_version451, align 8, !tbaa !118
  %conv452 = zext i16 %89 to i32
  %cmp453 = icmp sge i32 %conv452, 272
  br i1 %cmp453, label %if.then455, label %if.end460

if.then455:                                       ; preds = %if.end434
  %add456 = add i32 9, %cond392
  %idxprom457 = zext i32 %add456 to i64
  %arrayidx458 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom457
  %90 = load i8, i8* %arrayidx458, align 1, !tbaa !61
  %91 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 11
  %processing459 = bitcast %union.anon.63* %91 to %struct.anon.67*
  %bmVideoStandards = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing459, i32 0, i32 3
  store i8 %90, i8* %bmVideoStandards, align 8, !tbaa !61
  br label %if.end460

if.end460:                                        ; preds = %if.then455, %if.end434
  %add461 = add i32 8, %cond392
  %idxprom462 = zext i32 %add461 to i64
  %arrayidx463 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom462
  %92 = load i8, i8* %arrayidx463, align 1, !tbaa !61
  %conv464 = zext i8 %92 to i32
  %cmp465 = icmp ne i32 %conv464, 0
  br i1 %cmp465, label %if.then467, label %if.else475

if.then467:                                       ; preds = %if.end460
  %add468 = add i32 8, %cond392
  %idxprom469 = zext i32 %add468 to i64
  %arrayidx470 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom469
  %93 = load i8, i8* %arrayidx470, align 1, !tbaa !61
  %conv471 = zext i8 %93 to i32
  %name472 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 5
  %arraydecay473 = getelementptr inbounds [64 x i8], [64 x i8]* %name472, i32 0, i32 0
  %call474 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv471, i8* %arraydecay473, i64 64)
  br label %if.end481

if.else475:                                       ; preds = %if.end460
  %name476 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 5
  %arraydecay477 = getelementptr inbounds [64 x i8], [64 x i8]* %name476, i32 0, i32 0
  %arrayidx478 = getelementptr inbounds i8, i8* %buffer, i64 3
  %94 = load i8, i8* %arrayidx478, align 1, !tbaa !61
  %conv479 = zext i8 %94 to i32
  %call480 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay477, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i32 %conv479)
  br label %if.end481

if.end481:                                        ; preds = %if.else475, %if.then467
  %list482 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call418, i32 0, i32 0
  %entities483 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list482, %struct.list_head* %entities483)
  br label %cleanup

sw.bb484:                                         ; preds = %LeafBlock3
  %cmp485 = icmp sge i32 %buflen, 22
  br i1 %cmp485, label %cond.true487, label %cond.end491

cond.true487:                                     ; preds = %sw.bb484
  %arrayidx488 = getelementptr inbounds i8, i8* %buffer, i64 21
  %95 = load i8, i8* %arrayidx488, align 1, !tbaa !61
  %conv489 = zext i8 %95 to i32
  br label %cond.end491

cond.end491:                                      ; preds = %cond.true487, %sw.bb484
  %cond492 = phi i32 [ %conv489, %cond.true487 ], [ 0, %sw.bb484 ]
  %add493 = add i32 24, %cond492
  %cmp494 = icmp uge i32 %buflen, %add493
  br i1 %cmp494, label %cond.true496, label %cond.end502

cond.true496:                                     ; preds = %cond.end491
  %add497 = add i32 22, %cond492
  %idxprom498 = zext i32 %add497 to i64
  %arrayidx499 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom498
  %96 = load i8, i8* %arrayidx499, align 1, !tbaa !61
  %conv500 = zext i8 %96 to i32
  br label %cond.end502

cond.end502:                                      ; preds = %cond.true496, %cond.end491
  %cond503 = phi i32 [ %conv500, %cond.true496 ], [ 0, %cond.end491 ]
  %add504 = add i32 24, %cond492
  %add505 = add i32 %add504, %cond503
  %cmp506 = icmp ult i32 %buflen, %add505
  br i1 %cmp506, label %do.body509, label %if.end521

do.body509:                                       ; preds = %cond.end502
  %97 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and510 = and i32 %97, 2
  %tobool511 = icmp ne i32 %and510, 0
  br i1 %tobool511, label %if.then512, label %cleanup

if.then512:                                       ; preds = %do.body509
  %devnum513 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %98 = load i32, i32* %devnum513, align 8, !tbaa !117
  %desc514 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %2, i32 0, i32 0
  %bInterfaceNumber515 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc514, i32 0, i32 2
  %99 = load i8, i8* %bInterfaceNumber515, align 2, !tbaa !44
  %conv516 = zext i8 %99 to i32
  %call517 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.18, i32 0, i32 0), i32 %98, i32 %conv516)
  br label %cleanup

if.end521:                                        ; preds = %cond.end502
  %arrayidx522 = getelementptr inbounds i8, i8* %buffer, i64 2
  %100 = load i8, i8* %arrayidx522, align 1, !tbaa !61
  %conv523 = zext i8 %100 to i16
  %arrayidx524 = getelementptr inbounds i8, i8* %buffer, i64 3
  %101 = load i8, i8* %arrayidx524, align 1, !tbaa !61
  %add525 = add i32 %cond492, 1
  %call526 = call %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %conv523, i8 zeroext %101, i32 %add525, i32 %cond503)
  %cmp527 = icmp eq %struct.uvc_entity* %call526, null
  br i1 %cmp527, label %cleanup, label %if.end530

if.end530:                                        ; preds = %if.end521
  %cmp533 = icmp uge i64 16, 64
  %102 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 11
  %extension = bitcast %union.anon.63* %102 to %struct.anon.69*
  %guidExtensionCode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 0
  %arraydecay536 = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %arrayidx537 = getelementptr inbounds i8, i8* %buffer, i64 4
  br i1 %cmp533, label %if.then535, label %if.else539

if.then535:                                       ; preds = %if.end530
  %call538 = call i8* @__memcpy(i8* %arraydecay536, i8* %arrayidx537, i64 16)
  br label %if.end544

if.else539:                                       ; preds = %if.end530
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay536, i8* %arrayidx537, i64 16, i32 1, i1 false)
  br label %if.end544

if.end544:                                        ; preds = %if.else539, %if.then535
  %__ret532.0 = phi i8* [ %call538, %if.then535 ], [ %arraydecay536, %if.else539 ]
  %arrayidx546 = getelementptr inbounds i8, i8* %buffer, i64 20
  %103 = load i8, i8* %arrayidx546, align 1, !tbaa !61
  %104 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 11
  %extension547 = bitcast %union.anon.63* %104 to %struct.anon.69*
  %bNumControls = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension547, i32 0, i32 1
  store i8 %103, i8* %bNumControls, align 8, !tbaa !61
  %conv549 = zext i32 %cond492 to i64
  %baSourceID551 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 13
  %105 = load i8*, i8** %baSourceID551, align 8, !tbaa !109
  %arrayidx552 = getelementptr inbounds i8, i8* %buffer, i64 22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %105, i8* %arrayidx552, i64 %conv549, i32 1, i1 false)
  %add554 = add i32 22, %cond492
  %idxprom555 = zext i32 %add554 to i64
  %arrayidx556 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom555
  %106 = load i8, i8* %arrayidx556, align 1, !tbaa !61
  %107 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 11
  %extension557 = bitcast %union.anon.63* %107 to %struct.anon.69*
  %bControlSize558 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension557, i32 0, i32 2
  store i8 %106, i8* %bControlSize558, align 1, !tbaa !61
  %108 = bitcast %struct.uvc_entity* %call526 to i8*
  %add.ptr559 = getelementptr inbounds i8, i8* %108, i64 456
  %109 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 11
  %extension560 = bitcast %union.anon.63* %109 to %struct.anon.69*
  %bmControls561 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension560, i32 0, i32 3
  store i8* %add.ptr559, i8** %bmControls561, align 8, !tbaa !61
  %conv563 = zext i32 %cond503 to i64
  %110 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 11
  %extension565 = bitcast %union.anon.63* %110 to %struct.anon.69*
  %bmControls566 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension565, i32 0, i32 3
  %111 = load i8*, i8** %bmControls566, align 8, !tbaa !61
  %add567 = add i32 23, %cond492
  %idxprom568 = zext i32 %add567 to i64
  %arrayidx569 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom568
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %arrayidx569, i64 %conv563, i32 1, i1 false)
  %add571 = add i32 23, %cond492
  %add572 = add i32 %add571, %cond503
  %idxprom573 = zext i32 %add572 to i64
  %arrayidx574 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom573
  %112 = load i8, i8* %arrayidx574, align 1, !tbaa !61
  %conv575 = zext i8 %112 to i32
  %cmp576 = icmp ne i32 %conv575, 0
  br i1 %cmp576, label %if.then578, label %if.else587

if.then578:                                       ; preds = %if.end544
  %add579 = add i32 23, %cond492
  %add580 = add i32 %add579, %cond503
  %idxprom581 = zext i32 %add580 to i64
  %arrayidx582 = getelementptr inbounds i8, i8* %buffer, i64 %idxprom581
  %113 = load i8, i8* %arrayidx582, align 1, !tbaa !61
  %conv583 = zext i8 %113 to i32
  %name584 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 5
  %arraydecay585 = getelementptr inbounds [64 x i8], [64 x i8]* %name584, i32 0, i32 0
  %call586 = call i32 @usb_string(%struct.usb_device* %0, i32 %conv583, i8* %arraydecay585, i64 64)
  br label %if.end593

if.else587:                                       ; preds = %if.end544
  %name588 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 5
  %arraydecay589 = getelementptr inbounds [64 x i8], [64 x i8]* %name588, i32 0, i32 0
  %arrayidx590 = getelementptr inbounds i8, i8* %buffer, i64 3
  %114 = load i8, i8* %arrayidx590, align 1, !tbaa !61
  %conv591 = zext i8 %114 to i32
  %call592 = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay589, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.19, i32 0, i32 0), i32 %conv591)
  br label %if.end593

if.end593:                                        ; preds = %if.else587, %if.then578
  %list594 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call526, i32 0, i32 0
  %entities595 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  call void @list_add_tail(%struct.list_head* %list594, %struct.list_head* %entities595)
  br label %cleanup

do.body596:                                       ; preds = %LeafBlock, %LeafBlock3
  %115 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and597 = and i32 %115, 2
  %tobool598 = icmp ne i32 %and597, 0
  br i1 %tobool598, label %if.then599, label %cleanup

if.then599:                                       ; preds = %do.body596
  %arrayidx600 = getelementptr inbounds i8, i8* %buffer, i64 2
  %116 = load i8, i8* %arrayidx600, align 1, !tbaa !61
  %conv601 = zext i8 %116 to i32
  %call602 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i32 0, i32 0), i32 %conv601)
  br label %cleanup

cleanup:                                          ; preds = %if.then599, %do.body596, %if.end593, %if.end521, %if.then512, %do.body509, %if.end481, %if.end414, %if.then405, %do.body402, %if.end381, %if.end345, %if.then336, %do.body333, %if.end314, %if.end277, %if.then265, %do.body262, %if.then245, %do.body242, %if.end237, %if.end131, %if.then122, %do.body119, %if.then64, %do.body61, %if.then44, %do.body41, %for.cond, %if.then10, %do.body
  %retval.0 = phi i32 [ -22, %if.then10 ], [ -22, %do.body ], [ -22, %if.then44 ], [ -22, %do.body41 ], [ 0, %if.then64 ], [ 0, %do.body61 ], [ -22, %if.then122 ], [ -22, %do.body119 ], [ -12, %if.end131 ], [ -22, %if.then245 ], [ -22, %do.body242 ], [ 0, %if.then265 ], [ 0, %do.body262 ], [ -12, %if.end277 ], [ -22, %if.then336 ], [ -22, %do.body333 ], [ -12, %if.end345 ], [ -22, %if.then405 ], [ -22, %do.body402 ], [ -12, %if.end414 ], [ -22, %if.then512 ], [ -22, %do.body509 ], [ -12, %if.end521 ], [ 0, %do.body596 ], [ 0, %if.then599 ], [ 0, %for.cond ], [ 0, %if.end593 ], [ 0, %if.end481 ], [ 0, %if.end381 ], [ 0, %if.end314 ], [ 0, %if.end237 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_is_int_in(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %call = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.rhs, label %land.end

land.rhs:                                         ; preds = %entry
  %call1 = call i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd)
  %tobool2 = icmp ne i32 %call1, 0
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %0 = phi i1 [ false, %entry ], [ %tobool2, %land.rhs ]
  %land.ext = zext i1 %0 to i32
  ret i32 %land.ext
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bmAttributes = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 3
  %0 = load i8, i8* %bmAttributes, align 1, !tbaa !120
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 3
  %cmp = icmp eq i32 %and, 3
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_dir_in(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 2
  %0 = load i8, i8* %bEndpointAddress, align 1, !tbaa !83
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 128
  %cmp = icmp eq i32 %and, 128
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @get_unaligned_le16(i8* %p) #1 {
entry:
  %0 = bitcast i8* %p to i16*
  %call = call zeroext i16 @__le16_to_cpup(i16* %0)
  ret i16 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_unaligned_le32(i8* %p) #1 {
entry:
  %0 = bitcast i8* %p to i32*
  %call = call i32 @__le32_to_cpup(i32* %0)
  ret i32 %call
}

declare %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device*, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_parse_streaming(%struct.uvc_device* %dev, %struct.usb_interface* %intf) #0 {
entry:
  %interval = alloca i32*, align 8
  %altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %0 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting, align 8, !tbaa !121
  %arrayidx = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %0, i64 0
  %extra = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 2
  %1 = load i8*, i8** %extra, align 8, !tbaa !76
  %extralen = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 1
  %2 = load i32, i32* %extralen, align 4, !tbaa !77
  %3 = bitcast i32** %interval to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %4 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %4, i32 0, i32 0
  %bInterfaceSubClass = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 6
  %5 = load i8, i8* %bInterfaceSubClass, align 2, !tbaa !40
  %conv = zext i8 %5 to i32
  %cmp = icmp ne i32 %conv, 2
  br i1 %cmp, label %do.body, label %if.end7

do.body:                                          ; preds = %entry
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %6, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %cleanup398

if.then2:                                         ; preds = %do.body
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 0
  %8 = load i32, i32* %devnum, align 8, !tbaa !117
  %altsetting3 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %9 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting3, align 8, !tbaa !121
  %arrayidx4 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %9, i64 0
  %desc5 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx4, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc5, i32 0, i32 2
  %10 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv6 = zext i8 %10 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.35, i32 0, i32 0), i32 %8, i32 %conv6)
  br label %cleanup398

if.end7:                                          ; preds = %entry
  %11 = bitcast %struct.uvc_device* %dev to i8*
  %call8 = call i32 @usb_driver_claim_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf, i8* %11)
  %tobool9 = icmp ne i32 %call8, 0
  br i1 %tobool9, label %do.body11, label %if.end26

do.body11:                                        ; preds = %if.end7
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and12 = and i32 %12, 2
  %tobool13 = icmp ne i32 %and12, 0
  br i1 %tobool13, label %if.then14, label %cleanup398

if.then14:                                        ; preds = %do.body11
  %udev15 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %13 = load %struct.usb_device*, %struct.usb_device** %udev15, align 8, !tbaa !63
  %devnum16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 0
  %14 = load i32, i32* %devnum16, align 8, !tbaa !117
  %altsetting17 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %15 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting17, align 8, !tbaa !121
  %arrayidx18 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %15, i64 0
  %desc19 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx18, i32 0, i32 0
  %bInterfaceNumber20 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc19, i32 0, i32 2
  %16 = load i8, i8* %bInterfaceNumber20, align 2, !tbaa !44
  %conv21 = zext i8 %16 to i32
  %call22 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.36, i32 0, i32 0), i32 %14, i32 %conv21)
  br label %cleanup398

if.end26:                                         ; preds = %if.end7
  %call27 = call i8* @kzalloc(i64 1928, i32 208)
  %17 = bitcast i8* %call27 to %struct.uvc_streaming*
  %cmp28 = icmp eq %struct.uvc_streaming* %17, null
  br i1 %cmp28, label %if.then30, label %do.body32

if.then30:                                        ; preds = %if.end26
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf)
  br label %cleanup398

do.body32:                                        ; preds = %if.end26
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 16
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.37, i32 0, i32 0), %struct.lock_class_key* @uvc_parse_streaming.__key)
  %dev35 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 1
  store %struct.uvc_device* %dev, %struct.uvc_device** %dev35, align 8, !tbaa !102
  %call36 = call %struct.usb_interface* @usb_get_intf(%struct.usb_interface* %intf)
  %intf37 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 5
  store %struct.usb_interface* %call36, %struct.usb_interface** %intf37, align 8, !tbaa !46
  %cur_altsetting38 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 1
  %18 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting38, align 8, !tbaa !38
  %desc39 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %18, i32 0, i32 0
  %bInterfaceNumber40 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc39, i32 0, i32 2
  %19 = load i8, i8* %bInterfaceNumber40, align 2, !tbaa !44
  %conv41 = zext i8 %19 to i32
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 6
  store i32 %conv41, i32* %intfnum, align 8, !tbaa !122
  %cmp42 = icmp eq i32 %2, 0
  br i1 %cmp42, label %if.then44, label %if.end81

if.then44:                                        ; preds = %do.body32
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then44
  %i.0 = phi i32 [ 0, %if.then44 ], [ %inc, %for.inc ]
  %buflen.0 = phi i32 [ %2, %if.then44 ], [ %buflen.1, %for.inc ]
  %buffer.0 = phi i8* [ %1, %if.then44 ], [ %buffer.1, %for.inc ]
  %desc45 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc45, i32 0, i32 4
  %20 = load i8, i8* %bNumEndpoints, align 4, !tbaa !78
  %conv46 = zext i8 %20 to i32
  %cmp47 = icmp ult i32 %i.0, %conv46
  br i1 %cmp47, label %for.body, label %if.end81

for.body:                                         ; preds = %for.cond
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %21 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !79
  %idxprom = zext i32 %i.0 to i64
  %arrayidx49 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %21, i64 %idxprom
  %extralen50 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 7
  %22 = load i32, i32* %extralen50, align 8, !tbaa !123
  %cmp51 = icmp eq i32 %22, 0
  br i1 %cmp51, label %NodeBlock, label %if.end54

if.end54:                                         ; preds = %for.body
  %extralen55 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 7
  %23 = load i32, i32* %extralen55, align 8, !tbaa !123
  %cmp56 = icmp sgt i32 %23, 2
  br i1 %cmp56, label %land.lhs.true, label %NodeBlock

land.lhs.true:                                    ; preds = %if.end54
  %extra58 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx49, i32 0, i32 6
  %24 = load i8*, i8** %extra58, align 8, !tbaa !124
  %arrayidx59 = getelementptr inbounds i8, i8* %24, i64 1
  %25 = load i8, i8* %arrayidx59, align 1, !tbaa !61
  %conv60 = zext i8 %25 to i32
  %cmp61 = icmp eq i32 %conv60, 36
  br i1 %cmp61, label %do.body64, label %NodeBlock

do.body64:                                        ; preds = %land.lhs.true
  %26 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and65 = and i32 %26, 2
  %tobool66 = icmp ne i32 %and65, 0
  br i1 %tobool66, label %if.then67, label %do.end71

if.then67:                                        ; preds = %do.body64
  %call68 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.38, i32 0, i32 0), i32 %i.0)
  br label %do.end71

do.end71:                                         ; preds = %if.then67, %do.body64
  %endpoint72 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %27 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint72, align 8, !tbaa !79
  %idxprom73 = zext i32 %i.0 to i64
  %arrayidx74 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %27, i64 %idxprom73
  %extra75 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx74, i32 0, i32 6
  %28 = load i8*, i8** %extra75, align 8, !tbaa !124
  %endpoint76 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 3
  %29 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint76, align 8, !tbaa !79
  %idxprom77 = zext i32 %i.0 to i64
  %arrayidx78 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %29, i64 %idxprom77
  %extralen79 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx78, i32 0, i32 7
  %30 = load i32, i32* %extralen79, align 8, !tbaa !123
  br label %NodeBlock

NodeBlock:                                        ; preds = %do.end71, %land.lhs.true, %if.end54, %for.body
  %buflen.1 = phi i32 [ %30, %do.end71 ], [ %buflen.0, %for.body ], [ %buflen.0, %land.lhs.true ], [ %buflen.0, %if.end54 ]
  %buffer.1 = phi i8* [ %28, %do.end71 ], [ %buffer.0, %for.body ], [ %buffer.0, %land.lhs.true ], [ %buffer.0, %if.end54 ]
  %cleanup.dest.slot.0 = phi i32 [ 8, %do.end71 ], [ 10, %for.body ], [ 0, %land.lhs.true ], [ 0, %if.end54 ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 10
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 8
  %or.cond = and i1 %Pivot, %SwitchLeaf
  br i1 %or.cond, label %if.end81, label %for.inc

for.inc:                                          ; preds = %NodeBlock
  %inc = add i32 %i.0, 1
  br label %for.cond

if.end81:                                         ; preds = %NodeBlock, %for.cond, %do.body32
  %buflen.3 = phi i32 [ %2, %do.body32 ], [ %buflen.0, %for.cond ], [ %buflen.1, %NodeBlock ]
  %buffer.3 = phi i8* [ %1, %do.body32 ], [ %buffer.0, %for.cond ], [ %buffer.1, %NodeBlock ]
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end81
  %buflen.4 = phi i32 [ %buflen.3, %if.end81 ], [ %sub, %while.body ]
  %buffer.4 = phi i8* [ %buffer.3, %if.end81 ], [ %add.ptr, %while.body ]
  %cmp82 = icmp sgt i32 %buflen.4, 2
  br i1 %cmp82, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %while.cond
  %arrayidx84 = getelementptr inbounds i8, i8* %buffer.4, i64 1
  %31 = load i8, i8* %arrayidx84, align 1, !tbaa !61
  %conv85 = zext i8 %31 to i32
  %cmp86 = icmp ne i32 %conv85, 36
  br i1 %cmp86, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %arrayidx88 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %32 = load i8, i8* %arrayidx88, align 1, !tbaa !61
  %conv89 = zext i8 %32 to i32
  %sub = sub nsw i32 %buflen.4, %conv89
  %arrayidx90 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %33 = load i8, i8* %arrayidx90, align 1, !tbaa !61
  %conv91 = zext i8 %33 to i32
  %idx.ext = sext i32 %conv91 to i64
  %add.ptr = getelementptr inbounds i8, i8* %buffer.4, i64 %idx.ext
  br label %while.cond

while.end:                                        ; preds = %land.rhs, %while.cond
  %cmp92 = icmp sle i32 %buflen.4, 2
  br i1 %cmp92, label %do.body95, label %if.end103

do.body95:                                        ; preds = %while.end
  %34 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and96 = and i32 %34, 2
  %tobool97 = icmp ne i32 %and96, 0
  br i1 %tobool97, label %if.then98, label %error

if.then98:                                        ; preds = %do.body95
  %call99 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.39, i32 0, i32 0))
  br label %error

if.end103:                                        ; preds = %while.end
  %arrayidx104 = getelementptr inbounds i8, i8* %buffer.4, i64 2
  %35 = load i8, i8* %arrayidx104, align 1, !tbaa !61
  %conv105 = zext i8 %35 to i32
  %Pivot7 = icmp slt i32 %conv105, 2
  br i1 %Pivot7, label %LeafBlock2, label %LeafBlock4

LeafBlock4:                                       ; preds = %if.end103
  %SwitchLeaf5 = icmp eq i32 %conv105, 2
  br i1 %SwitchLeaf5, label %sw.epilog, label %do.body108

LeafBlock2:                                       ; preds = %if.end103
  %SwitchLeaf3 = icmp eq i32 %conv105, 1
  br i1 %SwitchLeaf3, label %sw.epilog, label %do.body108

do.body108:                                       ; preds = %LeafBlock2, %LeafBlock4
  %36 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and109 = and i32 %36, 2
  %tobool110 = icmp ne i32 %and109, 0
  br i1 %tobool110, label %if.then111, label %error

if.then111:                                       ; preds = %do.body108
  %udev112 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %37 = load %struct.usb_device*, %struct.usb_device** %udev112, align 8, !tbaa !63
  %devnum113 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 0
  %38 = load i32, i32* %devnum113, align 8, !tbaa !117
  %desc114 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber115 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc114, i32 0, i32 2
  %39 = load i8, i8* %bInterfaceNumber115, align 2, !tbaa !44
  %conv116 = zext i8 %39 to i32
  %call117 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([80 x i8], [80 x i8]* @.str.40, i32 0, i32 0), i32 %38, i32 %conv116)
  br label %error

sw.epilog:                                        ; preds = %LeafBlock2, %LeafBlock4
  %.sink = phi i32 [ 1, %LeafBlock2 ], [ 2, %LeafBlock4 ]
  %size.0 = phi i32 [ 13, %LeafBlock2 ], [ 9, %LeafBlock4 ]
  %type107 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 9
  store i32 %.sink, i32* %type107, align 8, !tbaa !99
  %cmp121 = icmp sge i32 %buflen.4, 4
  br i1 %cmp121, label %cond.true, label %cond.end

cond.true:                                        ; preds = %sw.epilog
  %arrayidx123 = getelementptr inbounds i8, i8* %buffer.4, i64 3
  %40 = load i8, i8* %arrayidx123, align 1, !tbaa !61
  %conv124 = zext i8 %40 to i32
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %sw.epilog
  %cond = phi i32 [ %conv124, %cond.true ], [ 0, %sw.epilog ]
  %cmp125 = icmp uge i32 %buflen.4, %size.0
  br i1 %cmp125, label %cond.true127, label %cond.end133

cond.true127:                                     ; preds = %cond.end
  %sub128 = sub i32 %size.0, 1
  %idxprom129 = zext i32 %sub128 to i64
  %arrayidx130 = getelementptr inbounds i8, i8* %buffer.4, i64 %idxprom129
  %41 = load i8, i8* %arrayidx130, align 1, !tbaa !61
  %conv131 = zext i8 %41 to i32
  br label %cond.end133

cond.end133:                                      ; preds = %cond.true127, %cond.end
  %cond134 = phi i32 [ %conv131, %cond.true127 ], [ 0, %cond.end ]
  %mul = mul i32 %cond, %cond134
  %add = add i32 %size.0, %mul
  %cmp135 = icmp ult i32 %buflen.4, %add
  br i1 %cmp135, label %do.body138, label %if.end151

do.body138:                                       ; preds = %cond.end133
  %42 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and139 = and i32 %42, 2
  %tobool140 = icmp ne i32 %and139, 0
  br i1 %tobool140, label %if.then141, label %error

if.then141:                                       ; preds = %do.body138
  %udev142 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %43 = load %struct.usb_device*, %struct.usb_device** %udev142, align 8, !tbaa !63
  %devnum143 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %43, i32 0, i32 0
  %44 = load i32, i32* %devnum143, align 8, !tbaa !117
  %desc144 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber145 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc144, i32 0, i32 2
  %45 = load i8, i8* %bInterfaceNumber145, align 2, !tbaa !44
  %conv146 = zext i8 %45 to i32
  %call147 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.41, i32 0, i32 0), i32 %44, i32 %conv146)
  br label %error

if.end151:                                        ; preds = %cond.end133
  %conv152 = trunc i32 %cond to i8
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bNumFormats = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 0
  store i8 %conv152, i8* %bNumFormats, align 8, !tbaa !125
  %arrayidx153 = getelementptr inbounds i8, i8* %buffer.4, i64 6
  %46 = load i8, i8* %arrayidx153, align 1, !tbaa !61
  %header154 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bEndpointAddress = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header154, i32 0, i32 1
  store i8 %46, i8* %bEndpointAddress, align 1, !tbaa !126
  %arrayidx155 = getelementptr inbounds i8, i8* %buffer.4, i64 2
  %47 = load i8, i8* %arrayidx155, align 1, !tbaa !61
  %conv156 = zext i8 %47 to i32
  %cmp157 = icmp eq i32 %conv156, 1
  %arrayidx160 = getelementptr inbounds i8, i8* %buffer.4, i64 7
  %48 = load i8, i8* %arrayidx160, align 1, !tbaa !61
  %header161 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  br i1 %cmp157, label %if.then159, label %if.else

if.then159:                                       ; preds = %if.end151
  %bmInfo = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header161, i32 0, i32 5
  store i8 %48, i8* %bmInfo, align 8, !tbaa !127
  %arrayidx162 = getelementptr inbounds i8, i8* %buffer.4, i64 8
  %49 = load i8, i8* %arrayidx162, align 1, !tbaa !61
  %header163 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTerminalLink = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header163, i32 0, i32 2
  store i8 %49, i8* %bTerminalLink, align 2, !tbaa !93
  %arrayidx164 = getelementptr inbounds i8, i8* %buffer.4, i64 9
  %50 = load i8, i8* %arrayidx164, align 1, !tbaa !61
  %header165 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bStillCaptureMethod = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header165, i32 0, i32 6
  store i8 %50, i8* %bStillCaptureMethod, align 1, !tbaa !128
  %arrayidx166 = getelementptr inbounds i8, i8* %buffer.4, i64 10
  %51 = load i8, i8* %arrayidx166, align 1, !tbaa !61
  %header167 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTriggerSupport = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header167, i32 0, i32 7
  store i8 %51, i8* %bTriggerSupport, align 2, !tbaa !129
  %arrayidx168 = getelementptr inbounds i8, i8* %buffer.4, i64 11
  %52 = load i8, i8* %arrayidx168, align 1, !tbaa !61
  %header169 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bTriggerUsage = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header169, i32 0, i32 8
  store i8 %52, i8* %bTriggerUsage, align 1, !tbaa !130
  br label %if.end173

if.else:                                          ; preds = %if.end151
  %bTerminalLink172 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header161, i32 0, i32 2
  store i8 %48, i8* %bTerminalLink172, align 2, !tbaa !93
  br label %if.end173

if.end173:                                        ; preds = %if.else, %if.then159
  %conv174 = trunc i32 %cond134 to i8
  %header175 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bControlSize = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header175, i32 0, i32 3
  store i8 %conv174, i8* %bControlSize, align 1, !tbaa !131
  %idxprom176 = zext i32 %size.0 to i64
  %arrayidx177 = getelementptr inbounds i8, i8* %buffer.4, i64 %idxprom176
  %mul178 = mul i32 %cond, %cond134
  %conv179 = zext i32 %mul178 to i64
  %call180 = call i8* @kmemdup(i8* %arrayidx177, i64 %conv179, i32 208)
  %header181 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header181, i32 0, i32 4
  store i8* %call180, i8** %bmaControls, align 8, !tbaa !71
  %header182 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls183 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header182, i32 0, i32 4
  %53 = load i8*, i8** %bmaControls183, align 8, !tbaa !71
  %cmp184 = icmp eq i8* %53, null
  br i1 %cmp184, label %error, label %if.end187

if.end187:                                        ; preds = %if.end173
  %arrayidx188 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %54 = load i8, i8* %arrayidx188, align 1, !tbaa !61
  %conv189 = zext i8 %54 to i32
  %sub190 = sub nsw i32 %buflen.4, %conv189
  %arrayidx191 = getelementptr inbounds i8, i8* %buffer.4, i64 0
  %55 = load i8, i8* %arrayidx191, align 1, !tbaa !61
  %conv192 = zext i8 %55 to i32
  %idx.ext193 = sext i32 %conv192 to i64
  %add.ptr194 = getelementptr inbounds i8, i8* %buffer.4, i64 %idx.ext193
  br label %while.cond195

while.cond195:                                    ; preds = %sw.epilog261, %if.end187
  %nintervals.0 = phi i32 [ 0, %if.end187 ], [ %nintervals.3, %sw.epilog261 ]
  %nframes.0 = phi i32 [ 0, %if.end187 ], [ %nframes.1, %sw.epilog261 ]
  %nformats.0 = phi i32 [ 0, %if.end187 ], [ %nformats.1, %sw.epilog261 ]
  %_buflen.0 = phi i32 [ %sub190, %if.end187 ], [ %sub264, %sw.epilog261 ]
  %_buffer.0 = phi i8* [ %add.ptr194, %if.end187 ], [ %add.ptr268, %sw.epilog261 ]
  %cmp196 = icmp sgt i32 %_buflen.0, 2
  br i1 %cmp196, label %land.rhs198, label %while.end269

land.rhs198:                                      ; preds = %while.cond195
  %arrayidx199 = getelementptr inbounds i8, i8* %_buffer.0, i64 1
  %56 = load i8, i8* %arrayidx199, align 1, !tbaa !61
  %conv200 = zext i8 %56 to i32
  %cmp201 = icmp eq i32 %conv200, 36
  br i1 %cmp201, label %while.body204, label %while.end269

while.body204:                                    ; preds = %land.rhs198
  %arrayidx205 = getelementptr inbounds i8, i8* %_buffer.0, i64 2
  %57 = load i8, i8* %arrayidx205, align 1, !tbaa !61
  %conv206 = zext i8 %57 to i32
  %Pivot34 = icmp slt i32 %conv206, 10
  br i1 %Pivot34, label %NodeBlock17, label %NodeBlock31

NodeBlock31:                                      ; preds = %while.body204
  %Pivot32 = icmp slt i32 %conv206, 16
  br i1 %Pivot32, label %NodeBlock23, label %NodeBlock29

NodeBlock29:                                      ; preds = %NodeBlock31
  %Pivot30 = icmp slt i32 %conv206, 17
  br i1 %Pivot30, label %sw.bb207, label %NodeBlock27

NodeBlock27:                                      ; preds = %NodeBlock29
  %Pivot28 = icmp slt i32 %conv206, 18
  br i1 %Pivot28, label %sw.bb245, label %LeafBlock25

LeafBlock25:                                      ; preds = %NodeBlock27
  %SwitchLeaf26 = icmp eq i32 %conv206, 18
  br i1 %SwitchLeaf26, label %do.body214, label %sw.epilog261

NodeBlock23:                                      ; preds = %NodeBlock31
  %Pivot24 = icmp slt i32 %conv206, 12
  br i1 %Pivot24, label %LeafBlock19, label %LeafBlock21

LeafBlock21:                                      ; preds = %NodeBlock23
  %SwitchLeaf22 = icmp eq i32 %conv206, 12
  br i1 %SwitchLeaf22, label %sw.bb209, label %sw.epilog261

LeafBlock19:                                      ; preds = %NodeBlock23
  %SwitchLeaf20 = icmp eq i32 %conv206, 10
  br i1 %SwitchLeaf20, label %do.body214, label %sw.epilog261

NodeBlock17:                                      ; preds = %while.body204
  %Pivot18 = icmp slt i32 %conv206, 6
  br i1 %Pivot18, label %NodeBlock11, label %NodeBlock15

NodeBlock15:                                      ; preds = %NodeBlock17
  %Pivot16 = icmp slt i32 %conv206, 7
  br i1 %Pivot16, label %sw.bb207, label %LeafBlock13

LeafBlock13:                                      ; preds = %NodeBlock15
  %SwitchLeaf14 = icmp eq i32 %conv206, 7
  br i1 %SwitchLeaf14, label %sw.bb229, label %sw.epilog261

NodeBlock11:                                      ; preds = %NodeBlock17
  %Pivot12 = icmp slt i32 %conv206, 5
  br i1 %Pivot12, label %LeafBlock9, label %sw.bb229

LeafBlock9:                                       ; preds = %NodeBlock11
  %SwitchLeaf10 = icmp eq i32 %conv206, 4
  br i1 %SwitchLeaf10, label %sw.bb207, label %sw.epilog261

sw.bb207:                                         ; preds = %LeafBlock9, %NodeBlock15, %NodeBlock29
  %inc208 = add i32 %nformats.0, 1
  br label %sw.epilog261

sw.bb209:                                         ; preds = %LeafBlock21
  %inc210 = add i32 %nformats.0, 1
  %inc211 = add i32 %nframes.0, 1
  %inc212 = add i32 %nintervals.0, 1
  br label %sw.epilog261

do.body214:                                       ; preds = %LeafBlock19, %LeafBlock25
  %58 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and215 = and i32 %58, 2
  %tobool216 = icmp ne i32 %and215, 0
  br i1 %tobool216, label %if.then217, label %sw.epilog261

if.then217:                                       ; preds = %do.body214
  %udev218 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %59 = load %struct.usb_device*, %struct.usb_device** %udev218, align 8, !tbaa !63
  %devnum219 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %59, i32 0, i32 0
  %60 = load i32, i32* %devnum219, align 8, !tbaa !117
  %desc220 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber221 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc220, i32 0, i32 2
  %61 = load i8, i8* %bInterfaceNumber221, align 2, !tbaa !44
  %conv222 = zext i8 %61 to i32
  %arrayidx223 = getelementptr inbounds i8, i8* %_buffer.0, i64 2
  %62 = load i8, i8* %arrayidx223, align 1, !tbaa !61
  %conv224 = zext i8 %62 to i32
  %call225 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.42, i32 0, i32 0), i32 %60, i32 %conv222, i32 %conv224)
  br label %sw.epilog261

sw.bb229:                                         ; preds = %NodeBlock11, %LeafBlock13
  %inc230 = add i32 %nframes.0, 1
  %cmp231 = icmp sgt i32 %_buflen.0, 25
  br i1 %cmp231, label %if.then233, label %sw.epilog261

if.then233:                                       ; preds = %sw.bb229
  %arrayidx234 = getelementptr inbounds i8, i8* %_buffer.0, i64 25
  %63 = load i8, i8* %arrayidx234, align 1, !tbaa !61
  %conv235 = zext i8 %63 to i32
  %tobool236 = icmp ne i32 %conv235, 0
  br i1 %tobool236, label %cond.true237, label %cond.end241

cond.true237:                                     ; preds = %if.then233
  %arrayidx238 = getelementptr inbounds i8, i8* %_buffer.0, i64 25
  %64 = load i8, i8* %arrayidx238, align 1, !tbaa !61
  %conv239 = zext i8 %64 to i32
  br label %cond.end241

cond.end241:                                      ; preds = %cond.true237, %if.then233
  %cond242 = phi i32 [ %conv239, %cond.true237 ], [ 3, %if.then233 ]
  %add243 = add i32 %nintervals.0, %cond242
  br label %sw.epilog261

sw.bb245:                                         ; preds = %NodeBlock27
  %inc246 = add i32 %nframes.0, 1
  %cmp247 = icmp sgt i32 %_buflen.0, 21
  br i1 %cmp247, label %if.then249, label %sw.epilog261

if.then249:                                       ; preds = %sw.bb245
  %arrayidx250 = getelementptr inbounds i8, i8* %_buffer.0, i64 21
  %65 = load i8, i8* %arrayidx250, align 1, !tbaa !61
  %conv251 = zext i8 %65 to i32
  %tobool252 = icmp ne i32 %conv251, 0
  br i1 %tobool252, label %cond.true253, label %cond.end257

cond.true253:                                     ; preds = %if.then249
  %arrayidx254 = getelementptr inbounds i8, i8* %_buffer.0, i64 21
  %66 = load i8, i8* %arrayidx254, align 1, !tbaa !61
  %conv255 = zext i8 %66 to i32
  br label %cond.end257

cond.end257:                                      ; preds = %cond.true253, %if.then249
  %cond258 = phi i32 [ %conv255, %cond.true253 ], [ 3, %if.then249 ]
  %add259 = add i32 %nintervals.0, %cond258
  br label %sw.epilog261

sw.epilog261:                                     ; preds = %cond.end257, %sw.bb245, %cond.end241, %sw.bb229, %if.then217, %do.body214, %sw.bb209, %sw.bb207, %LeafBlock9, %LeafBlock13, %LeafBlock19, %LeafBlock21, %LeafBlock25
  %nintervals.3 = phi i32 [ %nintervals.0, %sw.bb207 ], [ %inc212, %sw.bb209 ], [ %nintervals.0, %if.then217 ], [ %nintervals.0, %do.body214 ], [ %add243, %cond.end241 ], [ %nintervals.0, %sw.bb229 ], [ %add259, %cond.end257 ], [ %nintervals.0, %sw.bb245 ], [ %nintervals.0, %LeafBlock25 ], [ %nintervals.0, %LeafBlock21 ], [ %nintervals.0, %LeafBlock19 ], [ %nintervals.0, %LeafBlock13 ], [ %nintervals.0, %LeafBlock9 ]
  %nframes.1 = phi i32 [ %nframes.0, %sw.bb207 ], [ %inc211, %sw.bb209 ], [ %nframes.0, %if.then217 ], [ %nframes.0, %do.body214 ], [ %inc230, %cond.end241 ], [ %inc230, %sw.bb229 ], [ %inc246, %cond.end257 ], [ %inc246, %sw.bb245 ], [ %nframes.0, %LeafBlock25 ], [ %nframes.0, %LeafBlock21 ], [ %nframes.0, %LeafBlock19 ], [ %nframes.0, %LeafBlock13 ], [ %nframes.0, %LeafBlock9 ]
  %nformats.1 = phi i32 [ %inc208, %sw.bb207 ], [ %inc210, %sw.bb209 ], [ %nformats.0, %if.then217 ], [ %nformats.0, %do.body214 ], [ %nformats.0, %cond.end241 ], [ %nformats.0, %sw.bb229 ], [ %nformats.0, %cond.end257 ], [ %nformats.0, %sw.bb245 ], [ %nformats.0, %LeafBlock25 ], [ %nformats.0, %LeafBlock21 ], [ %nformats.0, %LeafBlock19 ], [ %nformats.0, %LeafBlock13 ], [ %nformats.0, %LeafBlock9 ]
  %arrayidx262 = getelementptr inbounds i8, i8* %_buffer.0, i64 0
  %67 = load i8, i8* %arrayidx262, align 1, !tbaa !61
  %conv263 = zext i8 %67 to i32
  %sub264 = sub nsw i32 %_buflen.0, %conv263
  %arrayidx265 = getelementptr inbounds i8, i8* %_buffer.0, i64 0
  %68 = load i8, i8* %arrayidx265, align 1, !tbaa !61
  %conv266 = zext i8 %68 to i32
  %idx.ext267 = sext i32 %conv266 to i64
  %add.ptr268 = getelementptr inbounds i8, i8* %_buffer.0, i64 %idx.ext267
  br label %while.cond195

while.end269:                                     ; preds = %land.rhs198, %while.cond195
  %cmp270 = icmp eq i32 %nformats.0, 0
  br i1 %cmp270, label %do.body273, label %if.end286

do.body273:                                       ; preds = %while.end269
  %69 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and274 = and i32 %69, 2
  %tobool275 = icmp ne i32 %and274, 0
  br i1 %tobool275, label %if.then276, label %error

if.then276:                                       ; preds = %do.body273
  %udev277 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %70 = load %struct.usb_device*, %struct.usb_device** %udev277, align 8, !tbaa !63
  %devnum278 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %70, i32 0, i32 0
  %71 = load i32, i32* %devnum278, align 8, !tbaa !117
  %desc279 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber280 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc279, i32 0, i32 2
  %72 = load i8, i8* %bInterfaceNumber280, align 2, !tbaa !44
  %conv281 = zext i8 %72 to i32
  %call282 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.43, i32 0, i32 0), i32 %71, i32 %conv281)
  br label %error

if.end286:                                        ; preds = %while.end269
  %conv287 = zext i32 %nformats.0 to i64
  %mul288 = mul i64 %conv287, 56
  %conv289 = zext i32 %nframes.0 to i64
  %mul290 = mul i64 %conv289, 40
  %add291 = add i64 %mul288, %mul290
  %conv292 = zext i32 %nintervals.0 to i64
  %mul293 = mul i64 %conv292, 4
  %add294 = add i64 %add291, %mul293
  %conv295 = trunc i64 %add294 to i32
  %conv296 = zext i32 %conv295 to i64
  %call297 = call i8* @kzalloc(i64 %conv296, i32 208)
  %73 = bitcast i8* %call297 to %struct.uvc_format*
  %cmp298 = icmp eq %struct.uvc_format* %73, null
  br i1 %cmp298, label %error, label %if.end301

if.end301:                                        ; preds = %if.end286
  %idxprom302 = zext i32 %nformats.0 to i64
  %arrayidx303 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %73, i64 %idxprom302
  %74 = bitcast %struct.uvc_format* %arrayidx303 to %struct.uvc_frame*
  %idxprom304 = zext i32 %nframes.0 to i64
  %arrayidx305 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %74, i64 %idxprom304
  %75 = bitcast %struct.uvc_frame* %arrayidx305 to i32*
  store i32* %75, i32** %interval, align 8, !tbaa !45
  %format306 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 11
  store %struct.uvc_format* %73, %struct.uvc_format** %format306, align 8, !tbaa !70
  %nformats307 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 10
  store i32 %nformats.0, i32* %nformats307, align 4, !tbaa !132
  br label %while.cond308.outer

while.cond308.outer:                              ; preds = %if.end326, %if.end301
  %buflen.5.ph = phi i32 [ %sub330, %if.end326 ], [ %sub190, %if.end301 ]
  %buffer.5.ph = phi i8* [ %add.ptr332, %if.end326 ], [ %add.ptr194, %if.end301 ]
  %frame.0.ph = phi %struct.uvc_frame* [ %add.ptr329, %if.end326 ], [ %74, %if.end301 ]
  %format.0.ph = phi %struct.uvc_format* [ %incdec.ptr, %if.end326 ], [ %73, %if.end301 ]
  br label %while.cond308

while.cond308:                                    ; preds = %sw.epilog334, %while.cond308.outer
  %buflen.5 = phi i32 [ %sub337, %sw.epilog334 ], [ %buflen.5.ph, %while.cond308.outer ]
  %buffer.5 = phi i8* [ %add.ptr341, %sw.epilog334 ], [ %buffer.5.ph, %while.cond308.outer ]
  %cmp309 = icmp sgt i32 %buflen.5, 2
  br i1 %cmp309, label %land.rhs311, label %while.end342

land.rhs311:                                      ; preds = %while.cond308
  %arrayidx312 = getelementptr inbounds i8, i8* %buffer.5, i64 1
  %76 = load i8, i8* %arrayidx312, align 1, !tbaa !61
  %conv313 = zext i8 %76 to i32
  %cmp314 = icmp eq i32 %conv313, 36
  br i1 %cmp314, label %while.body317, label %while.end342

while.body317:                                    ; preds = %land.rhs311
  %arrayidx318 = getelementptr inbounds i8, i8* %buffer.5, i64 2
  %77 = load i8, i8* %arrayidx318, align 1, !tbaa !61
  %conv319 = zext i8 %77 to i32
  %Pivot49 = icmp slt i32 %conv319, 12
  br i1 %Pivot49, label %NodeBlock40, label %NodeBlock46

NodeBlock46:                                      ; preds = %while.body317
  %Pivot47 = icmp slt i32 %conv319, 16
  br i1 %Pivot47, label %LeafBlock42, label %LeafBlock44

LeafBlock44:                                      ; preds = %NodeBlock46
  %SwitchLeaf45 = icmp eq i32 %conv319, 16
  br i1 %SwitchLeaf45, label %sw.bb320, label %sw.epilog334

LeafBlock42:                                      ; preds = %NodeBlock46
  %SwitchLeaf43 = icmp eq i32 %conv319, 12
  br i1 %SwitchLeaf43, label %sw.bb320, label %sw.epilog334

NodeBlock40:                                      ; preds = %while.body317
  %Pivot41 = icmp slt i32 %conv319, 6
  br i1 %Pivot41, label %LeafBlock36, label %LeafBlock38

LeafBlock38:                                      ; preds = %NodeBlock40
  %SwitchLeaf39 = icmp eq i32 %conv319, 6
  br i1 %SwitchLeaf39, label %sw.bb320, label %sw.epilog334

LeafBlock36:                                      ; preds = %NodeBlock40
  %SwitchLeaf37 = icmp eq i32 %conv319, 4
  br i1 %SwitchLeaf37, label %sw.bb320, label %sw.epilog334

sw.bb320:                                         ; preds = %LeafBlock36, %LeafBlock38, %LeafBlock42, %LeafBlock44
  %frame321 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 0, i32 8
  store %struct.uvc_frame* %frame.0.ph, %struct.uvc_frame** %frame321, align 8, !tbaa !133
  %call322 = call i32 @uvc_parse_format(%struct.uvc_device* %dev, %struct.uvc_streaming* %17, %struct.uvc_format* %format.0.ph, i32** %interval, i8* %buffer.5, i32 %buflen.5)
  %cmp323 = icmp slt i32 %call322, 0
  br i1 %cmp323, label %error, label %if.end326

if.end326:                                        ; preds = %sw.bb320
  %nframes327 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 0, i32 7
  %78 = load i32, i32* %nframes327, align 4, !tbaa !135
  %idx.ext328 = zext i32 %78 to i64
  %add.ptr329 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0.ph, i64 %idx.ext328
  %incdec.ptr = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0.ph, i32 1
  %sub330 = sub nsw i32 %buflen.5, %call322
  %idx.ext331 = sext i32 %call322 to i64
  %add.ptr332 = getelementptr inbounds i8, i8* %buffer.5, i64 %idx.ext331
  br label %while.cond308.outer

sw.epilog334:                                     ; preds = %LeafBlock36, %LeafBlock38, %LeafBlock42, %LeafBlock44
  %arrayidx335 = getelementptr inbounds i8, i8* %buffer.5, i64 0
  %79 = load i8, i8* %arrayidx335, align 1, !tbaa !61
  %conv336 = zext i8 %79 to i32
  %sub337 = sub nsw i32 %buflen.5, %conv336
  %arrayidx338 = getelementptr inbounds i8, i8* %buffer.5, i64 0
  %80 = load i8, i8* %arrayidx338, align 1, !tbaa !61
  %conv339 = zext i8 %80 to i32
  %idx.ext340 = sext i32 %conv339 to i64
  %add.ptr341 = getelementptr inbounds i8, i8* %buffer.5, i64 %idx.ext340
  br label %while.cond308

while.end342:                                     ; preds = %land.rhs311, %while.cond308
  %tobool343 = icmp ne i32 %buflen.5, 0
  br i1 %tobool343, label %do.body345, label %if.end358

do.body345:                                       ; preds = %while.end342
  %81 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and346 = and i32 %81, 2
  %tobool347 = icmp ne i32 %and346, 0
  br i1 %tobool347, label %if.then348, label %if.end358

if.then348:                                       ; preds = %do.body345
  %udev349 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %82 = load %struct.usb_device*, %struct.usb_device** %udev349, align 8, !tbaa !63
  %devnum350 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %82, i32 0, i32 0
  %83 = load i32, i32* %devnum350, align 8, !tbaa !117
  %desc351 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bInterfaceNumber352 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc351, i32 0, i32 2
  %84 = load i8, i8* %bInterfaceNumber352, align 2, !tbaa !44
  %conv353 = zext i8 %84 to i32
  %call354 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([96 x i8], [96 x i8]* @.str.44, i32 0, i32 0), i32 %83, i32 %conv353, i32 %buflen.5)
  br label %if.end358

if.end358:                                        ; preds = %if.then348, %do.body345, %while.end342
  br label %for.cond359

for.cond359:                                      ; preds = %LeafBlock51, %if.end358
  %i.1 = phi i32 [ 0, %if.end358 ], [ %inc393, %LeafBlock51 ]
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 2
  %85 = load i32, i32* %num_altsetting, align 8, !tbaa !136
  %cmp360 = icmp ult i32 %i.1, %85
  br i1 %cmp360, label %for.body362, label %for.end394

for.body362:                                      ; preds = %for.cond359
  %altsetting364 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %intf, i32 0, i32 0
  %86 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting364, align 8, !tbaa !121
  %idxprom365 = zext i32 %i.1 to i64
  %arrayidx366 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %86, i64 %idxprom365
  %header367 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bEndpointAddress368 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header367, i32 0, i32 1
  %87 = load i8, i8* %bEndpointAddress368, align 1, !tbaa !126
  %call369 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx366, i8 zeroext %87)
  %cmp370 = icmp eq %struct.usb_host_endpoint* %call369, null
  br i1 %cmp370, label %LeafBlock51, label %if.end373

if.end373:                                        ; preds = %for.body362
  %desc374 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %call369, i32 0, i32 0
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc374, i32 0, i32 4
  %88 = load i16, i16* %wMaxPacketSize, align 4, !tbaa !137
  %conv375 = zext i16 %88 to i32
  %and376 = and i32 %conv375, 2047
  %conv377 = zext i16 %88 to i32
  %shr = ashr i32 %conv377, 11
  %and378 = and i32 %shr, 3
  %add379 = add nsw i32 1, %and378
  %mul380 = mul nsw i32 %and376, %add379
  %conv381 = trunc i32 %mul380 to i16
  %conv382 = zext i16 %conv381 to i32
  %maxpsize = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 7
  %89 = load i16, i16* %maxpsize, align 4, !tbaa !138
  %conv383 = zext i16 %89 to i32
  %cmp384 = icmp sgt i32 %conv382, %conv383
  br i1 %cmp384, label %if.then386, label %LeafBlock51

if.then386:                                       ; preds = %if.end373
  %maxpsize387 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 7
  store i16 %conv381, i16* %maxpsize387, align 4, !tbaa !138
  br label %LeafBlock51

LeafBlock51:                                      ; preds = %if.then386, %if.end373, %for.body362
  %cleanup.dest.slot.1 = phi i32 [ 37, %for.body362 ], [ 0, %if.then386 ], [ 0, %if.end373 ]
  %SwitchLeaf52 = icmp eq i32 %cleanup.dest.slot.1, 37
  %inc393 = add i32 %i.1, 1
  br label %for.cond359

for.end394:                                       ; preds = %for.cond359
  %list = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 0
  %streams = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 15
  call void @list_add_tail(%struct.list_head* %list, %struct.list_head* %streams)
  br label %cleanup398

error:                                            ; preds = %sw.bb320, %if.end286, %if.then276, %do.body273, %if.end173, %if.then141, %do.body138, %if.then111, %do.body108, %if.then98, %do.body95
  %ret.0 = phi i32 [ -22, %if.then98 ], [ -22, %do.body95 ], [ -22, %if.then111 ], [ -22, %do.body108 ], [ -22, %if.then141 ], [ -22, %do.body138 ], [ -12, %if.end173 ], [ -22, %if.then276 ], [ -22, %do.body273 ], [ -12, %if.end286 ], [ %call322, %sw.bb320 ]
  call void @usb_driver_release_interface(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.usb_interface* %intf)
  call void @usb_put_intf(%struct.usb_interface* %intf)
  %format395 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 11
  %90 = load %struct.uvc_format*, %struct.uvc_format** %format395, align 8, !tbaa !70
  %91 = bitcast %struct.uvc_format* %90 to i8*
  call void @kfree(i8* %91)
  %header396 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %17, i32 0, i32 8
  %bmaControls397 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header396, i32 0, i32 4
  %92 = load i8*, i8** %bmaControls397, align 8, !tbaa !71
  call void @kfree(i8* %92)
  %93 = bitcast %struct.uvc_streaming* %17 to i8*
  call void @kfree(i8* %93)
  br label %cleanup398

cleanup398:                                       ; preds = %error, %for.end394, %if.then30, %if.then14, %do.body11, %if.then2, %do.body
  %retval.0 = phi i32 [ -22, %if.then30 ], [ %ret.0, %error ], [ 0, %for.end394 ], [ -22, %if.then2 ], [ -22, %do.body ], [ -22, %if.then14 ], [ -22, %do.body11 ]
  %94 = bitcast i32** %interval to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_entity* @uvc_alloc_entity(i16 zeroext %type, i8 zeroext %id, i32 %num_pads, i32 %extra_size) #0 {
entry:
  %add = add i32 %extra_size, 23
  %and = and i32 %add, -24
  %conv = zext i16 %type to i32
  %and1 = and i32 %conv, 32768
  %tobool = icmp ne i32 %and1, 0
  %sub = sub i32 %num_pads, 1
  %cond = select i1 %tobool, i32 %num_pads, i32 %sub
  %conv2 = zext i32 %and to i64
  %add3 = add i64 456, %conv2
  %conv4 = zext i32 %num_pads to i64
  %mul = mul i64 24, %conv4
  %add5 = add i64 %add3, %mul
  %conv6 = zext i32 %cond to i64
  %add7 = add i64 %add5, %conv6
  %conv8 = trunc i64 %add7 to i32
  %conv9 = zext i32 %conv8 to i64
  %call = call i8* @kzalloc(i64 %conv9, i32 208)
  %0 = bitcast i8* %call to %struct.uvc_entity*
  %cmp = icmp eq %struct.uvc_entity* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 3
  store i8 %id, i8* %id11, align 4, !tbaa !91
  %type12 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  store i16 %type, i16* %type12, align 2, !tbaa !85
  %num_links = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 9
  store i32 0, i32* %num_links, align 4, !tbaa !139
  %num_pads13 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 8
  store i32 %num_pads, i32* %num_pads13, align 8, !tbaa !140
  %add.ptr = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i64 1
  %1 = bitcast %struct.uvc_entity* %add.ptr to i8*
  %idx.ext = zext i32 %and to i64
  %add.ptr14 = getelementptr i8, i8* %1, i64 %idx.ext
  %2 = bitcast i8* %add.ptr14 to %struct.media_pad*
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  store %struct.media_pad* %2, %struct.media_pad** %pads, align 8, !tbaa !141
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.body ]
  %cmp15 = icmp ult i32 %i.0, %cond
  br i1 %cmp15, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %pads17 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %3 = load %struct.media_pad*, %struct.media_pad** %pads17, align 8, !tbaa !141
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.media_pad, %struct.media_pad* %3, i64 %idxprom
  %flags = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx, i32 0, i32 2
  store i64 1, i64* %flags, align 8, !tbaa !142
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %type18 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %4 = load i16, i16* %type18, align 2, !tbaa !85
  %conv19 = zext i16 %4 to i32
  %and20 = and i32 %conv19, 65280
  %cmp21 = icmp ne i32 %and20, 0
  br i1 %cmp21, label %land.lhs.true, label %if.then28

land.lhs.true:                                    ; preds = %for.end
  %type23 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %5 = load i16, i16* %type23, align 2, !tbaa !85
  %conv24 = zext i16 %5 to i32
  %and25 = and i32 %conv24, 32768
  %cmp26 = icmp eq i32 %and25, 32768
  br i1 %cmp26, label %if.end34, label %if.then28

if.then28:                                        ; preds = %land.lhs.true, %for.end
  %pads29 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %6 = load %struct.media_pad*, %struct.media_pad** %pads29, align 8, !tbaa !141
  %sub30 = sub i32 %num_pads, 1
  %idxprom31 = zext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %6, i64 %idxprom31
  %flags33 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx32, i32 0, i32 2
  store i64 2, i64* %flags33, align 8, !tbaa !142
  br label %if.end34

if.end34:                                         ; preds = %if.then28, %land.lhs.true
  %conv35 = trunc i32 %cond to i8
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 12
  store i8 %conv35, i8* %bNrInPins, align 8, !tbaa !106
  %pads36 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 10
  %7 = load %struct.media_pad*, %struct.media_pad** %pads36, align 8, !tbaa !141
  %idxprom37 = zext i32 %num_pads to i64
  %arrayidx38 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %7, i64 %idxprom37
  %8 = bitcast %struct.media_pad* %arrayidx38 to i8*
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 13
  store i8* %8, i8** %baSourceID, align 8, !tbaa !109
  br label %cleanup

cleanup:                                          ; preds = %if.end34, %entry
  %retval.0 = phi %struct.uvc_entity* [ %0, %if.end34 ], [ null, %entry ]
  ret %struct.uvc_entity* %retval.0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #4

declare i32 @usb_string(%struct.usb_device*, i32, i8*, i64) #2

declare i8* @__memcpy(i8*, i8*, i64) #2

declare i32 @usb_driver_claim_interface(%struct.usb_driver*, %struct.usb_interface*, i8*) #2

declare i8* @kmemdup(i8*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_parse_format(%struct.uvc_device* %dev, %struct.uvc_streaming* %streaming, %struct.uvc_format* %format, i32** %intervals, i8* %buffer, i32 %buflen) #0 {
entry:
  %_min1 = alloca i32, align 4
  %_min2 = alloca i32, align 4
  %_max1 = alloca i32, align 4
  %_max2 = alloca i32, align 4
  %intf1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %streaming, i32 0, i32 5
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf1, align 8, !tbaa !46
  %cur_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 1
  %1 = load %struct.usb_host_interface*, %struct.usb_host_interface** %cur_altsetting, align 8, !tbaa !38
  %arrayidx = getelementptr inbounds i8, i8* %buffer, i64 2
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %type = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 0
  store i8 %2, i8* %type, align 8, !tbaa !144
  %arrayidx2 = getelementptr inbounds i8, i8* %buffer, i64 3
  %3 = load i8, i8* %arrayidx2, align 1, !tbaa !61
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 1
  store i8 %3, i8* %index, align 1, !tbaa !145
  %arrayidx3 = getelementptr inbounds i8, i8* %buffer, i64 2
  %4 = load i8, i8* %arrayidx3, align 1, !tbaa !61
  %conv = zext i8 %4 to i32
  %Pivot18 = icmp slt i32 %conv, 12
  br i1 %Pivot18, label %NodeBlock5, label %NodeBlock15

NodeBlock15:                                      ; preds = %entry
  %Pivot16 = icmp slt i32 %conv, 16
  br i1 %Pivot16, label %LeafBlock7, label %NodeBlock13

NodeBlock13:                                      ; preds = %NodeBlock15
  %Pivot14 = icmp slt i32 %conv, 18
  %SwitchLeaf10 = icmp eq i32 %conv, 16
  %or.cond = and i1 %Pivot14, %SwitchLeaf10
  br i1 %or.cond, label %sw.bb, label %do.body129

LeafBlock7:                                       ; preds = %NodeBlock15
  %SwitchLeaf8 = icmp eq i32 %conv, 12
  br i1 %SwitchLeaf8, label %sw.bb64, label %do.body129

NodeBlock5:                                       ; preds = %entry
  %Pivot6 = icmp slt i32 %conv, 6
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %NodeBlock5
  %Pivot = icmp slt i32 %conv, 10
  %SwitchLeaf2 = icmp eq i32 %conv, 6
  %or.cond36 = and i1 %Pivot, %SwitchLeaf2
  br i1 %or.cond36, label %sw.bb40, label %do.body129

LeafBlock:                                        ; preds = %NodeBlock5
  %SwitchLeaf = icmp eq i32 %conv, 4
  br i1 %SwitchLeaf, label %sw.bb, label %do.body129

sw.bb:                                            ; preds = %LeafBlock, %NodeBlock13
  %arrayidx4 = getelementptr inbounds i8, i8* %buffer, i64 2
  %5 = load i8, i8* %arrayidx4, align 1, !tbaa !61
  %conv5 = zext i8 %5 to i32
  %cmp = icmp eq i32 %conv5, 4
  %6 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 27, i32 28
  %cmp7 = icmp ult i32 %buflen, %cond
  br i1 %cmp7, label %do.body, label %if.end11

do.body:                                          ; preds = %sw.bb
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %7, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then9, label %cleanup

if.then9:                                         ; preds = %do.body
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %8 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 0
  %9 = load i32, i32* %devnum, align 8, !tbaa !117
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 2
  %10 = load i8, i8* %bInterfaceNumber, align 2, !tbaa !44
  %conv10 = zext i8 %10 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %9, i32 %conv10)
  br label %cleanup

if.end11:                                         ; preds = %sw.bb
  %arrayidx12 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call13 = call %struct.uvc_format_desc* @uvc_format_by_guid(i8* %arrayidx12)
  %cmp14 = icmp ne %struct.uvc_format_desc* %call13, null
  br i1 %cmp14, label %if.then16, label %if.else

if.then16:                                        ; preds = %if.end11
  %name = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name17 = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %call13, i32 0, i32 0
  %11 = load i8*, i8** %name17, align 8, !tbaa !146
  %call18 = call i64 @strlcpy(i8* %arraydecay, i8* %11, i64 32)
  %fcc = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %call13, i32 0, i32 2
  %12 = load i32, i32* %fcc, align 8, !tbaa !148
  br label %if.end27

if.else:                                          ; preds = %if.end11
  %arrayidx20 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.46, i32 0, i32 0), i8* %arrayidx20)
  %name22 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay23 = getelementptr inbounds [32 x i8], [32 x i8]* %name22, i32 0, i32 0
  %arrayidx24 = getelementptr inbounds i8, i8* %buffer, i64 5
  %call25 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %arraydecay23, i64 32, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i32 0, i32 0), i8* %arrayidx24)
  br label %if.end27

if.end27:                                         ; preds = %if.else, %if.then16
  %.sink = phi i32 [ 0, %if.else ], [ %12, %if.then16 ]
  %fcc26 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 %.sink, i32* %fcc26, align 4, !tbaa !149
  %arrayidx28 = getelementptr inbounds i8, i8* %buffer, i64 21
  %13 = load i8, i8* %arrayidx28, align 1, !tbaa !61
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 %13, i8* %bpp, align 2, !tbaa !150
  %arrayidx29 = getelementptr inbounds i8, i8* %buffer, i64 2
  %14 = load i8, i8* %arrayidx29, align 1, !tbaa !61
  %conv30 = zext i8 %14 to i32
  %cmp31 = icmp eq i32 %conv30, 4
  br i1 %cmp31, label %do.body145, label %if.else34

if.else34:                                        ; preds = %if.end27
  %arrayidx35 = getelementptr inbounds i8, i8* %buffer, i64 27
  %15 = load i8, i8* %arrayidx35, align 1, !tbaa !61
  %tobool36 = icmp ne i8 %15, 0
  br i1 %tobool36, label %if.then37, label %do.body145

if.then37:                                        ; preds = %if.else34
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 1, i32* %flags, align 8, !tbaa !151
  br label %do.body145

sw.bb40:                                          ; preds = %NodeBlock
  %cmp41 = icmp slt i32 %buflen, 11
  br i1 %cmp41, label %do.body44, label %if.end57

do.body44:                                        ; preds = %sw.bb40
  %16 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and45 = and i32 %16, 2
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %if.then47, label %cleanup

if.then47:                                        ; preds = %do.body44
  %udev48 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %17 = load %struct.usb_device*, %struct.usb_device** %udev48, align 8, !tbaa !63
  %devnum49 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %17, i32 0, i32 0
  %18 = load i32, i32* %devnum49, align 8, !tbaa !117
  %desc50 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber51 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc50, i32 0, i32 2
  %19 = load i8, i8* %bInterfaceNumber51, align 2, !tbaa !44
  %conv52 = zext i8 %19 to i32
  %call53 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %18, i32 %conv52)
  br label %cleanup

if.end57:                                         ; preds = %sw.bb40
  %name58 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay59 = getelementptr inbounds [32 x i8], [32 x i8]* %name58, i32 0, i32 0
  %call60 = call i64 @strlcpy(i8* %arraydecay59, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.48, i32 0, i32 0), i64 32)
  %fcc61 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 1196444237, i32* %fcc61, align 4, !tbaa !149
  %flags62 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 1, i32* %flags62, align 8, !tbaa !151
  %bpp63 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 0, i8* %bpp63, align 2, !tbaa !150
  br label %do.body145

sw.bb64:                                          ; preds = %LeafBlock7
  %cmp65 = icmp slt i32 %buflen, 9
  br i1 %cmp65, label %do.body68, label %if.end81

do.body68:                                        ; preds = %sw.bb64
  %20 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and69 = and i32 %20, 2
  %tobool70 = icmp ne i32 %and69, 0
  br i1 %tobool70, label %if.then71, label %cleanup

if.then71:                                        ; preds = %do.body68
  %udev72 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %21 = load %struct.usb_device*, %struct.usb_device** %udev72, align 8, !tbaa !63
  %devnum73 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %21, i32 0, i32 0
  %22 = load i32, i32* %devnum73, align 8, !tbaa !117
  %desc74 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber75 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc74, i32 0, i32 2
  %23 = load i8, i8* %bInterfaceNumber75, align 2, !tbaa !44
  %conv76 = zext i8 %23 to i32
  %call77 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.45, i32 0, i32 0), i32 %22, i32 %conv76)
  br label %cleanup

if.end81:                                         ; preds = %sw.bb64
  %arrayidx82 = getelementptr inbounds i8, i8* %buffer, i64 8
  %24 = load i8, i8* %arrayidx82, align 1, !tbaa !61
  %conv83 = zext i8 %24 to i32
  %and84 = and i32 %conv83, 127
  %Pivot27 = icmp slt i32 %and84, 1
  br i1 %Pivot27, label %LeafBlock20, label %NodeBlock24

NodeBlock24:                                      ; preds = %if.end81
  %Pivot25 = icmp slt i32 %and84, 2
  br i1 %Pivot25, label %sw.bb89, label %LeafBlock22

LeafBlock22:                                      ; preds = %NodeBlock24
  %SwitchLeaf23 = icmp eq i32 %and84, 2
  br i1 %SwitchLeaf23, label %sw.bb93, label %do.body97

LeafBlock20:                                      ; preds = %if.end81
  %SwitchLeaf21 = icmp eq i32 %and84, 0
  br i1 %SwitchLeaf21, label %sw.bb85, label %do.body97

sw.bb85:                                          ; preds = %LeafBlock20
  %name86 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay87 = getelementptr inbounds [32 x i8], [32 x i8]* %name86, i32 0, i32 0
  %call88 = call i64 @strlcpy(i8* %arraydecay87, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i32 0, i32 0), i64 32)
  br label %sw.epilog

sw.bb89:                                          ; preds = %NodeBlock24
  %name90 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay91 = getelementptr inbounds [32 x i8], [32 x i8]* %name90, i32 0, i32 0
  %call92 = call i64 @strlcpy(i8* %arraydecay91, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i32 0, i32 0), i64 32)
  br label %sw.epilog

sw.bb93:                                          ; preds = %LeafBlock22
  %name94 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay95 = getelementptr inbounds [32 x i8], [32 x i8]* %name94, i32 0, i32 0
  %call96 = call i64 @strlcpy(i8* %arraydecay95, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.51, i32 0, i32 0), i64 32)
  br label %sw.epilog

do.body97:                                        ; preds = %LeafBlock20, %LeafBlock22
  %25 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and98 = and i32 %25, 2
  %tobool99 = icmp ne i32 %and98, 0
  br i1 %tobool99, label %if.then100, label %cleanup

if.then100:                                       ; preds = %do.body97
  %udev101 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %26 = load %struct.usb_device*, %struct.usb_device** %udev101, align 8, !tbaa !63
  %devnum102 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %26, i32 0, i32 0
  %27 = load i32, i32* %devnum102, align 8, !tbaa !117
  %desc103 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber104 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc103, i32 0, i32 2
  %28 = load i8, i8* %bInterfaceNumber104, align 2, !tbaa !44
  %conv105 = zext i8 %28 to i32
  %arrayidx106 = getelementptr inbounds i8, i8* %buffer, i64 8
  %29 = load i8, i8* %arrayidx106, align 1, !tbaa !61
  %conv107 = zext i8 %29 to i32
  %call108 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.52, i32 0, i32 0), i32 %27, i32 %conv105, i32 %conv107)
  br label %cleanup

sw.epilog:                                        ; preds = %sw.bb93, %sw.bb89, %sw.bb85
  %name112 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay113 = getelementptr inbounds [32 x i8], [32 x i8]* %name112, i32 0, i32 0
  %arrayidx114 = getelementptr inbounds i8, i8* %buffer, i64 8
  %30 = load i8, i8* %arrayidx114, align 1, !tbaa !61
  %conv115 = zext i8 %30 to i32
  %and116 = and i32 %conv115, 128
  %tobool117 = icmp ne i32 %and116, 0
  %31 = zext i1 %tobool117 to i64
  %cond118 = select i1 %tobool117, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.54, i32 0, i32 0)
  %call119 = call i64 @strlcat(i8* %arraydecay113, i8* %cond118, i64 32)
  %fcc120 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 4
  store i32 1685288548, i32* %fcc120, align 4, !tbaa !149
  %flags121 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  store i32 3, i32* %flags121, align 8, !tbaa !151
  %bpp122 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  store i8 0, i8* %bpp122, align 2, !tbaa !150
  %frame123 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %32 = load %struct.uvc_frame*, %struct.uvc_frame** %frame123, align 8, !tbaa !133
  %arrayidx124 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %32, i64 0
  %frame125 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %33 = load %struct.uvc_frame*, %struct.uvc_frame** %frame125, align 8, !tbaa !133
  %arrayidx126 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %33, i64 0
  %34 = bitcast %struct.uvc_frame* %arrayidx126 to i8*
  call void @llvm.memset.p0i8.i64(i8* %34, i8 0, i64 40, i32 8, i1 false)
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx124, i32 0, i32 7
  store i8 1, i8* %bFrameIntervalType, align 4, !tbaa !152
  %dwDefaultFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx124, i32 0, i32 8
  store i32 1, i32* %dwDefaultFrameInterval, align 8, !tbaa !154
  %35 = load i32*, i32** %intervals, align 8, !tbaa !45
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx124, i32 0, i32 9
  store i32* %35, i32** %dwFrameInterval, align 8, !tbaa !155
  %36 = load i32*, i32** %intervals, align 8, !tbaa !45
  %incdec.ptr = getelementptr inbounds i32, i32* %36, i32 1
  store i32* %incdec.ptr, i32** %intervals, align 8, !tbaa !45
  store i32 1, i32* %36, align 4, !tbaa !2
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  store i32 1, i32* %nframes, align 4, !tbaa !135
  br label %do.body145

do.body129:                                       ; preds = %LeafBlock, %NodeBlock, %LeafBlock7, %NodeBlock13
  %37 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and130 = and i32 %37, 2
  %tobool131 = icmp ne i32 %and130, 0
  br i1 %tobool131, label %if.then132, label %cleanup

if.then132:                                       ; preds = %do.body129
  %udev133 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %38 = load %struct.usb_device*, %struct.usb_device** %udev133, align 8, !tbaa !63
  %devnum134 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %38, i32 0, i32 0
  %39 = load i32, i32* %devnum134, align 8, !tbaa !117
  %desc135 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber136 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc135, i32 0, i32 2
  %40 = load i8, i8* %bInterfaceNumber136, align 2, !tbaa !44
  %conv137 = zext i8 %40 to i32
  %arrayidx138 = getelementptr inbounds i8, i8* %buffer, i64 2
  %41 = load i8, i8* %arrayidx138, align 1, !tbaa !61
  %conv139 = zext i8 %41 to i32
  %call140 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.55, i32 0, i32 0), i32 %39, i32 %conv137, i32 %conv139)
  br label %cleanup

do.body145:                                       ; preds = %sw.epilog, %if.end57, %if.then37, %if.else34, %if.end27
  %ftype.1 = phi i8 [ 7, %if.end57 ], [ 0, %sw.epilog ], [ 5, %if.end27 ], [ 17, %if.then37 ], [ 17, %if.else34 ]
  %42 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and146 = and i32 %42, 2
  %tobool147 = icmp ne i32 %and146, 0
  br i1 %tobool147, label %if.then148, label %do.end154

if.then148:                                       ; preds = %do.body145
  %name149 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 6
  %arraydecay150 = getelementptr inbounds [32 x i8], [32 x i8]* %name149, i32 0, i32 0
  %call151 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.56, i32 0, i32 0), i8* %arraydecay150)
  br label %do.end154

do.end154:                                        ; preds = %if.then148, %do.body145
  br label %while.cond

while.cond:                                       ; preds = %do.end323, %do.end154
  %add.ptr332.sink30 = phi i8* [ %add.ptr332, %do.end323 ], [ %buffer, %do.end154 ]
  %buflen.addr.0.sink = phi i32 [ %sub328, %do.end323 ], [ %buflen, %do.end154 ]
  %arrayidx326 = getelementptr inbounds i8, i8* %add.ptr332.sink30, i64 0
  %43 = load i8, i8* %arrayidx326, align 1, !tbaa !61
  %conv327 = zext i8 %43 to i32
  %sub328 = sub nsw i32 %buflen.addr.0.sink, %conv327
  %arrayidx329 = getelementptr inbounds i8, i8* %add.ptr332.sink30, i64 0
  %44 = load i8, i8* %arrayidx329, align 1, !tbaa !61
  %conv330 = zext i8 %44 to i32
  %idx.ext331 = sext i32 %conv330 to i64
  %add.ptr332 = getelementptr inbounds i8, i8* %add.ptr332.sink30, i64 %idx.ext331
  %cmp159 = icmp sgt i32 %sub328, 2
  br i1 %cmp159, label %land.lhs.true, label %while.end

land.lhs.true:                                    ; preds = %while.cond
  %arrayidx161 = getelementptr inbounds i8, i8* %add.ptr332, i64 1
  %45 = load i8, i8* %arrayidx161, align 1, !tbaa !61
  %conv162 = zext i8 %45 to i32
  %cmp163 = icmp eq i32 %conv162, 36
  br i1 %cmp163, label %land.rhs, label %while.end

land.rhs:                                         ; preds = %land.lhs.true
  %arrayidx165 = getelementptr inbounds i8, i8* %add.ptr332, i64 2
  %46 = load i8, i8* %arrayidx165, align 1, !tbaa !61
  %conv166 = zext i8 %46 to i32
  %conv167 = zext i8 %ftype.1 to i32
  %cmp168 = icmp eq i32 %conv166, %conv167
  br i1 %cmp168, label %while.body, label %while.end

while.body:                                       ; preds = %land.rhs
  %frame170 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 8
  %47 = load %struct.uvc_frame*, %struct.uvc_frame** %frame170, align 8, !tbaa !133
  %nframes171 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  %48 = load i32, i32* %nframes171, align 4, !tbaa !135
  %idxprom = zext i32 %48 to i64
  %arrayidx172 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %47, i64 %idxprom
  %conv173 = zext i8 %ftype.1 to i32
  %cmp174 = icmp ne i32 %conv173, 17
  br i1 %cmp174, label %if.then176, label %if.else182

if.then176:                                       ; preds = %while.body
  %cmp177 = icmp sgt i32 %sub328, 25
  br i1 %cmp177, label %cond.true, label %if.end191

cond.true:                                        ; preds = %if.then176
  %arrayidx179 = getelementptr inbounds i8, i8* %add.ptr332, i64 25
  %49 = load i8, i8* %arrayidx179, align 1, !tbaa !61
  %conv180 = zext i8 %49 to i32
  br label %if.end191

if.else182:                                       ; preds = %while.body
  %cmp183 = icmp sgt i32 %sub328, 21
  br i1 %cmp183, label %cond.true185, label %if.end191

cond.true185:                                     ; preds = %if.else182
  %arrayidx186 = getelementptr inbounds i8, i8* %add.ptr332, i64 21
  %50 = load i8, i8* %arrayidx186, align 1, !tbaa !61
  %conv187 = zext i8 %50 to i32
  br label %if.end191

if.end191:                                        ; preds = %cond.true185, %if.else182, %cond.true, %if.then176
  %n.0 = phi i32 [ %conv180, %cond.true ], [ 0, %if.then176 ], [ %conv187, %cond.true185 ], [ 0, %if.else182 ]
  %tobool192 = icmp ne i32 %n.0, 0
  %n.0. = select i1 %tobool192, i32 %n.0, i32 3
  %mul = mul i32 4, %n.0.
  %add = add i32 26, %mul
  %cmp197 = icmp ult i32 %sub328, %add
  br i1 %cmp197, label %do.body200, label %if.end213

do.body200:                                       ; preds = %if.end191
  %51 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and201 = and i32 %51, 2
  %tobool202 = icmp ne i32 %and201, 0
  br i1 %tobool202, label %if.then203, label %cleanup

if.then203:                                       ; preds = %do.body200
  %udev204 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %52 = load %struct.usb_device*, %struct.usb_device** %udev204, align 8, !tbaa !63
  %devnum205 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %52, i32 0, i32 0
  %53 = load i32, i32* %devnum205, align 8, !tbaa !117
  %desc206 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber207 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc206, i32 0, i32 2
  %54 = load i8, i8* %bInterfaceNumber207, align 2, !tbaa !44
  %conv208 = zext i8 %54 to i32
  %call209 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.57, i32 0, i32 0), i32 %53, i32 %conv208)
  br label %cleanup

if.end213:                                        ; preds = %if.end191
  %arrayidx214 = getelementptr inbounds i8, i8* %add.ptr332, i64 3
  %55 = load i8, i8* %arrayidx214, align 1, !tbaa !61
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 0
  store i8 %55, i8* %bFrameIndex, align 8, !tbaa !156
  %arrayidx215 = getelementptr inbounds i8, i8* %add.ptr332, i64 4
  %56 = load i8, i8* %arrayidx215, align 1, !tbaa !61
  %bmCapabilities = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 1
  store i8 %56, i8* %bmCapabilities, align 1, !tbaa !157
  %arrayidx216 = getelementptr inbounds i8, i8* %add.ptr332, i64 5
  %call217 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx216)
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 2
  store i16 %call217, i16* %wWidth, align 2, !tbaa !158
  %arrayidx218 = getelementptr inbounds i8, i8* %add.ptr332, i64 7
  %call219 = call zeroext i16 @get_unaligned_le16(i8* %arrayidx218)
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 3
  store i16 %call219, i16* %wHeight, align 4, !tbaa !159
  %arrayidx220 = getelementptr inbounds i8, i8* %add.ptr332, i64 9
  %call221 = call i32 @get_unaligned_le32(i8* %arrayidx220)
  %dwMinBitRate = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 4
  store i32 %call221, i32* %dwMinBitRate, align 8, !tbaa !160
  %arrayidx222 = getelementptr inbounds i8, i8* %add.ptr332, i64 13
  %call223 = call i32 @get_unaligned_le32(i8* %arrayidx222)
  %dwMaxBitRate = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 5
  store i32 %call223, i32* %dwMaxBitRate, align 4, !tbaa !161
  %conv224 = zext i8 %ftype.1 to i32
  %cmp225 = icmp ne i32 %conv224, 17
  br i1 %cmp225, label %if.then227, label %if.end242

if.then227:                                       ; preds = %if.end213
  %arrayidx228 = getelementptr inbounds i8, i8* %add.ptr332, i64 17
  %call229 = call i32 @get_unaligned_le32(i8* %arrayidx228)
  br label %if.end242

if.end242:                                        ; preds = %if.then227, %if.end213
  %.sink35 = phi i32 [ %call229, %if.then227 ], [ 0, %if.end213 ]
  %.sink34 = phi i64 [ 21, %if.then227 ], [ 17, %if.end213 ]
  %.sink33 = phi i64 [ 25, %if.then227 ], [ 21, %if.end213 ]
  %dwMaxVideoFrameBufferSize236 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 6
  store i32 %.sink35, i32* %dwMaxVideoFrameBufferSize236, align 8, !tbaa !162
  %arrayidx237 = getelementptr inbounds i8, i8* %add.ptr332, i64 %.sink34
  %call238 = call i32 @get_unaligned_le32(i8* %arrayidx237)
  %dwDefaultFrameInterval239 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  store i32 %call238, i32* %dwDefaultFrameInterval239, align 8, !tbaa !154
  %arrayidx240 = getelementptr inbounds i8, i8* %add.ptr332, i64 %.sink33
  %57 = load i8, i8* %arrayidx240, align 1, !tbaa !61
  %bFrameIntervalType241 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 7
  store i8 %57, i8* %bFrameIntervalType241, align 4, !tbaa !152
  %58 = load i32*, i32** %intervals, align 8, !tbaa !45
  %dwFrameInterval243 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 9
  store i32* %58, i32** %dwFrameInterval243, align 8, !tbaa !155
  %flags244 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 5
  %59 = load i32, i32* %flags244, align 8, !tbaa !151
  %and245 = and i32 %59, 1
  %tobool246 = icmp ne i32 %and245, 0
  br i1 %tobool246, label %if.end257, label %if.then247

if.then247:                                       ; preds = %if.end242
  %bpp248 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 2
  %60 = load i8, i8* %bpp248, align 2, !tbaa !150
  %conv249 = zext i8 %60 to i32
  %wWidth250 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 2
  %61 = load i16, i16* %wWidth250, align 2, !tbaa !158
  %conv251 = zext i16 %61 to i32
  %mul252 = mul nsw i32 %conv249, %conv251
  %wHeight253 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 3
  %62 = load i16, i16* %wHeight253, align 4, !tbaa !159
  %conv254 = zext i16 %62 to i32
  %mul255 = mul nsw i32 %mul252, %conv254
  %div = sdiv i32 %mul255, 8
  %dwMaxVideoFrameBufferSize256 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 6
  store i32 %div, i32* %dwMaxVideoFrameBufferSize256, align 8, !tbaa !162
  br label %if.end257

if.end257:                                        ; preds = %if.then247, %if.end242
  br label %for.cond

for.cond:                                         ; preds = %for.body, %if.end257
  %i.0 = phi i32 [ 0, %if.end257 ], [ %inc, %for.body ]
  %cmp258 = icmp ult i32 %i.0, %n.0.
  br i1 %cmp258, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %mul260 = mul i32 4, %i.0
  %add261 = add i32 26, %mul260
  %idxprom262 = zext i32 %add261 to i64
  %arrayidx263 = getelementptr inbounds i8, i8* %add.ptr332, i64 %idxprom262
  %call264 = call i32 @get_unaligned_le32(i8* %arrayidx263)
  %tobool265 = icmp ne i32 %call264, 0
  %call264. = select i1 %tobool265, i32 %call264, i32 1
  %63 = load i32*, i32** %intervals, align 8, !tbaa !45
  %incdec.ptr270 = getelementptr inbounds i32, i32* %63, i32 1
  store i32* %incdec.ptr270, i32** %intervals, align 8, !tbaa !45
  store i32 %call264., i32* %63, align 4, !tbaa !2
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %bFrameIntervalType271 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 7
  %64 = load i8, i8* %bFrameIntervalType271, align 4, !tbaa !152
  %conv272 = zext i8 %64 to i32
  %tobool273 = icmp ne i32 %conv272, 0
  %65 = zext i1 %tobool273 to i64
  %cond274 = select i1 %tobool273, i32 1, i32 2
  %sub275 = sub i32 %n.0., %cond274
  %66 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %66) #8
  %dwFrameInterval276 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 9
  %67 = load i32*, i32** %dwFrameInterval276, align 8, !tbaa !155
  %idxprom277 = zext i32 %sub275 to i64
  %arrayidx278 = getelementptr inbounds i32, i32* %67, i64 %idxprom277
  %68 = load i32, i32* %arrayidx278, align 4, !tbaa !2
  store i32 %68, i32* %_min1, align 4, !tbaa !2
  %69 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %69) #8
  %70 = bitcast i32* %_max1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %70) #8
  %dwFrameInterval279 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 9
  %71 = load i32*, i32** %dwFrameInterval279, align 8, !tbaa !155
  %arrayidx280 = getelementptr inbounds i32, i32* %71, i64 0
  %72 = load i32, i32* %arrayidx280, align 4, !tbaa !2
  store i32 %72, i32* %_max1, align 4, !tbaa !2
  %73 = bitcast i32* %_max2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %73) #8
  %dwDefaultFrameInterval281 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  %74 = load i32, i32* %dwDefaultFrameInterval281, align 8, !tbaa !154
  store i32 %74, i32* %_max2, align 4, !tbaa !2
  %cmp282 = icmp eq i32* %_max1, %_max2
  %conv283 = zext i1 %cmp282 to i32
  %75 = load i32, i32* %_max1, align 4, !tbaa !2
  %76 = load i32, i32* %_max2, align 4, !tbaa !2
  %cmp284 = icmp ugt i32 %75, %76
  %77 = load i32, i32* %_max1, align 4
  %78 = load i32, i32* %_max2, align 4
  %cond289 = select i1 %cmp284, i32 %77, i32 %78
  %79 = bitcast i32* %_max2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %79) #8
  %80 = bitcast i32* %_max1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %80) #8
  store i32 %cond289, i32* %_min2, align 4, !tbaa !2
  %cmp290 = icmp eq i32* %_min1, %_min2
  %conv291 = zext i1 %cmp290 to i32
  %81 = load i32, i32* %_min1, align 4, !tbaa !2
  %82 = load i32, i32* %_min2, align 4, !tbaa !2
  %cmp293 = icmp ult i32 %81, %82
  %83 = load i32, i32* %_min1, align 4
  %84 = load i32, i32* %_min2, align 4
  %cond298 = select i1 %cmp293, i32 %83, i32 %84
  %85 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %85) #8
  %86 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %86) #8
  %dwDefaultFrameInterval299 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  store i32 %cond298, i32* %dwDefaultFrameInterval299, align 8, !tbaa !154
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %87 = load i32, i32* %quirks, align 8, !tbaa !10
  %and300 = and i32 %87, 512
  %tobool301 = icmp ne i32 %and300, 0
  br i1 %tobool301, label %if.then302, label %do.body308

if.then302:                                       ; preds = %for.end
  %bFrameIntervalType303 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 7
  store i8 1, i8* %bFrameIntervalType303, align 4, !tbaa !152
  %dwDefaultFrameInterval304 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  %88 = load i32, i32* %dwDefaultFrameInterval304, align 8, !tbaa !154
  %dwFrameInterval305 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 9
  %89 = load i32*, i32** %dwFrameInterval305, align 8, !tbaa !155
  %arrayidx306 = getelementptr inbounds i32, i32* %89, i64 0
  store i32 %88, i32* %arrayidx306, align 4, !tbaa !2
  br label %do.body308

do.body308:                                       ; preds = %if.then302, %for.end
  %90 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and309 = and i32 %90, 2
  %tobool310 = icmp ne i32 %and309, 0
  br i1 %tobool310, label %if.then311, label %do.end323

if.then311:                                       ; preds = %do.body308
  %wWidth312 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 2
  %91 = load i16, i16* %wWidth312, align 2, !tbaa !158
  %conv313 = zext i16 %91 to i32
  %wHeight314 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 3
  %92 = load i16, i16* %wHeight314, align 4, !tbaa !159
  %conv315 = zext i16 %92 to i32
  %dwDefaultFrameInterval316 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  %93 = load i32, i32* %dwDefaultFrameInterval316, align 8, !tbaa !154
  %div317 = udiv i32 10000000, %93
  %dwDefaultFrameInterval318 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx172, i32 0, i32 8
  %94 = load i32, i32* %dwDefaultFrameInterval318, align 8, !tbaa !154
  %div319 = udiv i32 100000000, %94
  %rem = urem i32 %div319, 10
  %call320 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.58, i32 0, i32 0), i32 %conv313, i32 %conv315, i32 %div317, i32 %rem)
  br label %do.end323

do.end323:                                        ; preds = %if.then311, %do.body308
  %nframes324 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 7
  %95 = load i32, i32* %nframes324, align 4, !tbaa !135
  %inc325 = add i32 %95, 1
  store i32 %inc325, i32* %nframes324, align 4, !tbaa !135
  br label %while.cond

while.end:                                        ; preds = %land.rhs, %land.lhs.true, %while.cond
  %cmp333 = icmp sgt i32 %sub328, 2
  br i1 %cmp333, label %land.lhs.true335, label %if.end353

land.lhs.true335:                                 ; preds = %while.end
  %arrayidx336 = getelementptr inbounds i8, i8* %add.ptr332, i64 1
  %96 = load i8, i8* %arrayidx336, align 1, !tbaa !61
  %conv337 = zext i8 %96 to i32
  %cmp338 = icmp eq i32 %conv337, 36
  br i1 %cmp338, label %land.lhs.true340, label %if.end353

land.lhs.true340:                                 ; preds = %land.lhs.true335
  %arrayidx341 = getelementptr inbounds i8, i8* %add.ptr332, i64 2
  %97 = load i8, i8* %arrayidx341, align 1, !tbaa !61
  %conv342 = zext i8 %97 to i32
  %cmp343 = icmp eq i32 %conv342, 3
  br i1 %cmp343, label %if.then345, label %if.end353

if.then345:                                       ; preds = %land.lhs.true340
  %arrayidx346 = getelementptr inbounds i8, i8* %add.ptr332, i64 0
  %98 = load i8, i8* %arrayidx346, align 1, !tbaa !61
  %conv347 = zext i8 %98 to i32
  %sub348 = sub nsw i32 %sub328, %conv347
  %arrayidx349 = getelementptr inbounds i8, i8* %add.ptr332, i64 0
  %99 = load i8, i8* %arrayidx349, align 1, !tbaa !61
  %conv350 = zext i8 %99 to i32
  %idx.ext351 = sext i32 %conv350 to i64
  %add.ptr352 = getelementptr inbounds i8, i8* %add.ptr332, i64 %idx.ext351
  br label %if.end353

if.end353:                                        ; preds = %if.then345, %land.lhs.true340, %land.lhs.true335, %while.end
  %buflen.addr.1 = phi i32 [ %sub348, %if.then345 ], [ %sub328, %land.lhs.true340 ], [ %sub328, %land.lhs.true335 ], [ %sub328, %while.end ]
  %buffer.addr.1 = phi i8* [ %add.ptr352, %if.then345 ], [ %add.ptr332, %land.lhs.true340 ], [ %add.ptr332, %land.lhs.true335 ], [ %add.ptr332, %while.end ]
  %cmp354 = icmp sgt i32 %buflen.addr.1, 2
  br i1 %cmp354, label %land.lhs.true356, label %if.end394

land.lhs.true356:                                 ; preds = %if.end353
  %arrayidx357 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 1
  %100 = load i8, i8* %arrayidx357, align 1, !tbaa !61
  %conv358 = zext i8 %100 to i32
  %cmp359 = icmp eq i32 %conv358, 36
  br i1 %cmp359, label %land.lhs.true361, label %if.end394

land.lhs.true361:                                 ; preds = %land.lhs.true356
  %arrayidx362 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 2
  %101 = load i8, i8* %arrayidx362, align 1, !tbaa !61
  %conv363 = zext i8 %101 to i32
  %cmp364 = icmp eq i32 %conv363, 13
  br i1 %cmp364, label %if.then366, label %if.end394

if.then366:                                       ; preds = %land.lhs.true361
  %cmp367 = icmp slt i32 %buflen.addr.1, 6
  br i1 %cmp367, label %do.body370, label %if.end383

do.body370:                                       ; preds = %if.then366
  %102 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and371 = and i32 %102, 2
  %tobool372 = icmp ne i32 %and371, 0
  br i1 %tobool372, label %if.then373, label %cleanup

if.then373:                                       ; preds = %do.body370
  %udev374 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %103 = load %struct.usb_device*, %struct.usb_device** %udev374, align 8, !tbaa !63
  %devnum375 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %103, i32 0, i32 0
  %104 = load i32, i32* %devnum375, align 8, !tbaa !117
  %desc376 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %1, i32 0, i32 0
  %bInterfaceNumber377 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc376, i32 0, i32 2
  %105 = load i8, i8* %bInterfaceNumber377, align 2, !tbaa !44
  %conv378 = zext i8 %105 to i32
  %call379 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.59, i32 0, i32 0), i32 %104, i32 %conv378)
  br label %cleanup

if.end383:                                        ; preds = %if.then366
  %arrayidx384 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 3
  %106 = load i8, i8* %arrayidx384, align 1, !tbaa !61
  %call385 = call i32 @uvc_colorspace(i8 zeroext %106)
  %conv386 = trunc i32 %call385 to i8
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format, i32 0, i32 3
  store i8 %conv386, i8* %colorspace, align 1, !tbaa !163
  %arrayidx387 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 0
  %107 = load i8, i8* %arrayidx387, align 1, !tbaa !61
  %conv388 = zext i8 %107 to i32
  %sub389 = sub nsw i32 %buflen.addr.1, %conv388
  %arrayidx390 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 0
  %108 = load i8, i8* %arrayidx390, align 1, !tbaa !61
  %conv391 = zext i8 %108 to i32
  %idx.ext392 = sext i32 %conv391 to i64
  %add.ptr393 = getelementptr inbounds i8, i8* %buffer.addr.1, i64 %idx.ext392
  br label %if.end394

if.end394:                                        ; preds = %if.end383, %land.lhs.true361, %land.lhs.true356, %if.end353
  %buffer.addr.2 = phi i8* [ %add.ptr393, %if.end383 ], [ %buffer.addr.1, %land.lhs.true361 ], [ %buffer.addr.1, %land.lhs.true356 ], [ %buffer.addr.1, %if.end353 ]
  %sub.ptr.lhs.cast = ptrtoint i8* %buffer.addr.2 to i64
  %sub.ptr.rhs.cast = ptrtoint i8* %buffer to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv395 = trunc i64 %sub.ptr.sub to i32
  br label %cleanup

cleanup:                                          ; preds = %if.end394, %if.then373, %do.body370, %if.then203, %do.body200, %if.then132, %do.body129, %if.then100, %do.body97, %if.then71, %do.body68, %if.then47, %do.body44, %if.then9, %do.body
  %retval.0 = phi i32 [ %conv395, %if.end394 ], [ -22, %if.then9 ], [ -22, %do.body ], [ -22, %if.then47 ], [ -22, %do.body44 ], [ -22, %if.then71 ], [ -22, %do.body68 ], [ -22, %if.then100 ], [ -22, %do.body97 ], [ -22, %if.then132 ], [ -22, %do.body129 ], [ -22, %if.then203 ], [ -22, %do.body200 ], [ -22, %if.then373 ], [ -22, %do.body370 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %alts, i8 zeroext %epaddr) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %alts, i32 0, i32 0
  %bNumEndpoints = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 4
  %0 = load i8, i8* %bNumEndpoints, align 4, !tbaa !78
  %conv = zext i8 %0 to i32
  %cmp = icmp ult i32 %i.0, %conv
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %endpoint = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %alts, i32 0, i32 3
  %1 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %endpoint, align 8, !tbaa !79
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %1, i64 %idxprom
  %desc2 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %arrayidx, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc2, i32 0, i32 2
  %2 = load i8, i8* %bEndpointAddress, align 2, !tbaa !164
  %conv3 = zext i8 %2 to i32
  %conv4 = zext i8 %epaddr to i32
  %cmp5 = icmp eq i32 %conv3, %conv4
  br i1 %cmp5, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %for.body, %for.cond
  %retval.0 = phi %struct.usb_host_endpoint* [ %arrayidx, %for.body ], [ null, %for.cond ]
  ret %struct.usb_host_endpoint* %retval.0
}

; Function Attrs: nounwind uwtable
define internal %struct.uvc_format_desc* @uvc_format_by_guid(i8* %guid) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 16
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [16 x %struct.uvc_format_desc], [16 x %struct.uvc_format_desc]* @uvc_fmts, i64 0, i64 %idxprom
  %guid1 = getelementptr inbounds %struct.uvc_format_desc, %struct.uvc_format_desc* %arrayidx, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guid1, i32 0, i32 0
  %call = call i32 @memcmp(i8* %guid, i8* %arraydecay, i64 16)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %idxprom3 = zext i32 %i.0 to i64
  %arrayidx4 = getelementptr inbounds [16 x %struct.uvc_format_desc], [16 x %struct.uvc_format_desc]* @uvc_fmts, i64 0, i64 %idxprom3
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then, %for.cond
  %retval.0 = phi %struct.uvc_format_desc* [ %arrayidx4, %if.then ], [ null, %for.cond ]
  ret %struct.uvc_format_desc* %retval.0
}

declare i64 @strlcat(i8*, i8*, i64) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #4

; Function Attrs: nounwind uwtable
define internal i32 @uvc_colorspace(i8 zeroext %primaries) #0 {
entry:
  %conv = zext i8 %primaries to i64
  %cmp = icmp ult i64 %conv, 6
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %idxprom = zext i8 %primaries to i64
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* @uvc_colorspace.colorprimaries, i64 0, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv2 = zext i8 %0 to i32
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i32 [ %conv2, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

declare i32 @memcmp(i8*, i8*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__le32_to_cpup(i32* %p) #1 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !2
  ret i32 %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @__le16_to_cpup(i16* %p) #1 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !165
  ret i16 %0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare i8* @__kmalloc(i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_clock_param_set(i8* %val, %struct.kernel_param* %kp) #0 {
entry:
  %call = call i32 @strncasecmp(i8* %val, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i32 0, i32 0), i64 6)
  %cmp = icmp eq i32 %call, 0
  %add.ptr = getelementptr inbounds i8, i8* %val, i64 6
  %add.ptr.val = select i1 %cmp, i8* %add.ptr, i8* %val
  %call1 = call i32 @strcasecmp(i8* %add.ptr.val, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i32 0, i32 0))
  %cmp2 = icmp eq i32 %call1, 0
  br i1 %cmp2, label %return.sink.split, label %if.else

if.else:                                          ; preds = %entry
  %call4 = call i32 @strcasecmp(i8* %add.ptr.val, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i32 0, i32 0))
  %cmp5 = icmp eq i32 %call4, 0
  br i1 %cmp5, label %return.sink.split, label %return

return.sink.split:                                ; preds = %if.else, %entry
  %.sink = phi i32 [ 0, %if.else ], [ 1, %entry ]
  store i32 %.sink, i32* @uvc_clock_param, align 4, !tbaa !2
  br label %return

return:                                           ; preds = %return.sink.split, %if.else
  %retval.0 = phi i32 [ -22, %if.else ], [ 0, %return.sink.split ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_clock_param_get(i8* %buffer, %struct.kernel_param* %kp) #0 {
entry:
  %0 = load i32, i32* @uvc_clock_param, align 4, !tbaa !2
  %cmp = icmp eq i32 %0, 1
  %.sink = select i1 %cmp, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i32 0, i32 0)
  %call1 = call i32 (i8*, i8*, ...) @sprintf(i8* %buffer, i8* %.sink)
  ret i32 %call1
}

declare i32 @strncasecmp(i8*, i8*, i64) #2

declare i32 @strcasecmp(i8*, i8*) #2

; Function Attrs: nounwind uwtable
define void @uvc_simplify_fraction(i32* %numerator, i32* %denominator, i32 %n_terms, i32 %threshold) #0 {
entry:
  %conv = zext i32 %n_terms to i64
  %mul = mul i64 %conv, 4
  %call = call i8* @kmalloc(i64 %mul, i32 208)
  %0 = bitcast i8* %call to i32*
  %cmp = icmp eq i32* %0, null
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %1 = load i32, i32* %numerator, align 4, !tbaa !2
  %2 = load i32, i32* %denominator, align 4, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %if.end15, %if.end
  %x.0 = phi i32 [ %1, %if.end ], [ %y.0, %if.end15 ]
  %y.0 = phi i32 [ %2, %if.end ], [ %sub, %if.end15 ]
  %n.0 = phi i32 [ 0, %if.end ], [ %inc19, %if.end15 ]
  %cmp2 = icmp ult i32 %n.0, %n_terms
  %cmp4 = icmp ne i32 %y.0, 0
  %cmp4. = select i1 %cmp2, i1 %cmp4, i1 false
  br i1 %cmp4., label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %div = udiv i32 %x.0, %y.0
  %idxprom = zext i32 %n.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 %idxprom
  store i32 %div, i32* %arrayidx, align 4, !tbaa !2
  %idxprom6 = zext i32 %n.0 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %0, i64 %idxprom6
  %3 = load i32, i32* %arrayidx7, align 4, !tbaa !2
  %cmp8 = icmp uge i32 %3, %threshold
  br i1 %cmp8, label %if.then10, label %if.end15

if.then10:                                        ; preds = %for.body
  %cmp11 = icmp ult i32 %n.0, 2
  %inc = add i32 %n.0, 1
  %inc.n.0 = select i1 %cmp11, i32 %inc, i32 %n.0
  br label %for.end

if.end15:                                         ; preds = %for.body
  %idxprom16 = zext i32 %n.0 to i64
  %arrayidx17 = getelementptr inbounds i32, i32* %0, i64 %idxprom16
  %4 = load i32, i32* %arrayidx17, align 4, !tbaa !2
  %mul18 = mul i32 %4, %y.0
  %sub = sub i32 %x.0, %mul18
  %inc19 = add i32 %n.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then10, %for.cond
  %n.2 = phi i32 [ %inc.n.0, %if.then10 ], [ %n.0, %for.cond ]
  br label %for.cond20

for.cond20:                                       ; preds = %for.body23, %for.end
  %x.1 = phi i32 [ 0, %for.end ], [ %y.1, %for.body23 ]
  %y.1 = phi i32 [ 1, %for.end ], [ %add, %for.body23 ]
  %i.0 = phi i32 [ %n.2, %for.end ], [ %dec, %for.body23 ]
  %cmp21 = icmp ugt i32 %i.0, 0
  br i1 %cmp21, label %for.body23, label %for.end29

for.body23:                                       ; preds = %for.cond20
  %sub24 = sub i32 %i.0, 1
  %idxprom25 = zext i32 %sub24 to i64
  %arrayidx26 = getelementptr inbounds i32, i32* %0, i64 %idxprom25
  %5 = load i32, i32* %arrayidx26, align 4, !tbaa !2
  %mul27 = mul i32 %5, %y.1
  %add = add i32 %mul27, %x.1
  %dec = add i32 %i.0, -1
  br label %for.cond20

for.end29:                                        ; preds = %for.cond20
  store i32 %y.1, i32* %numerator, align 4, !tbaa !2
  store i32 %x.1, i32* %denominator, align 4, !tbaa !2
  %6 = bitcast i32* %0 to i8*
  call void @kfree(i8* %6)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %for.end29, %entry
  %cleanup.dest.slot.0 = phi i32 [ 0, %for.end29 ], [ 1, %entry ]
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_fraction_to_interval(i32 %numerator, i32 %denominator) #0 {
entry:
  %cmp = icmp eq i32 %denominator, 0
  br i1 %cmp, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %div = udiv i32 %numerator, %denominator
  %cmp1 = icmp uge i32 %div, 429
  br i1 %cmp1, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  br label %while.cond

while.cond:                                       ; preds = %while.body, %if.end
  %multiplier.0 = phi i32 [ 10000000, %if.end ], [ %div4, %while.body ]
  %denominator.addr.0 = phi i32 [ %denominator, %if.end ], [ %div5, %while.body ]
  %div2 = udiv i32 -1, %multiplier.0
  %cmp3 = icmp ugt i32 %numerator, %div2
  br i1 %cmp3, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %div4 = udiv i32 %multiplier.0, 2
  %div5 = udiv i32 %denominator.addr.0, 2
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tobool = icmp ne i32 %denominator.addr.0, 0
  br i1 %tobool, label %cond.true, label %cleanup

cond.true:                                        ; preds = %while.end
  %mul = mul i32 %numerator, %multiplier.0
  %div6 = udiv i32 %mul, %denominator.addr.0
  br label %cleanup

cleanup:                                          ; preds = %cond.true, %while.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -1, %lor.lhs.false ], [ -1, %entry ], [ %div6, %cond.true ], [ 0, %while.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init() #5 section ".init.text" {
entry:
  %call = call i32 @uvc_debugfs_init()
  %call1 = call i32 @usb_register_driver(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0), %struct.module* @__this_module, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.283, i32 0, i32 0))
  %cmp = icmp slt i32 %call1, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  call void @uvc_debugfs_cleanup()
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.110, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ %call1, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

declare i32 @usb_register_driver(%struct.usb_driver*, %struct.module*, i8*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_cleanup() #5 section ".exit.text" {
entry:
  call void @usb_deregister(%struct.usb_driver* getelementptr inbounds (%struct.uvc_driver, %struct.uvc_driver* @uvc_driver, i32 0, i32 0))
  call void @uvc_debugfs_cleanup()
  ret void
}

declare void @usb_deregister(%struct.usb_driver*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_init(%struct.uvc_video_queue* %queue, i32 %type, i32 %drop_corrupted) #0 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %type2 = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue1, i32 0, i32 0
  store i32 %type, i32* %type2, align 8, !tbaa !166
  %queue3 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %io_modes = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue3, i32 0, i32 1
  store i32 19, i32* %io_modes, align 4, !tbaa !167
  %0 = bitcast %struct.uvc_video_queue* %queue to i8*
  %queue4 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %drv_priv = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue4, i32 0, i32 7
  store i8* %0, i8** %drv_priv, align 8, !tbaa !168
  %queue5 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %buf_struct_size = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue5, i32 0, i32 8
  store i32 888, i32* %buf_struct_size, align 8, !tbaa !169
  %queue6 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue6, i32 0, i32 5
  store %struct.vb2_ops* @uvc_queue_qops, %struct.vb2_ops** %ops, align 8, !tbaa !170
  %queue7 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %mem_ops = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue7, i32 0, i32 6
  store %struct.vb2_mem_ops* @vb2_vmalloc_memops, %struct.vb2_mem_ops** %mem_ops, align 8, !tbaa !171
  %queue8 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %timestamp_type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue8, i32 0, i32 9
  store i32 8192, i32* %timestamp_type, align 4, !tbaa !172
  %queue9 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_queue_init(%struct.vb2_queue* %queue9)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %do.body

do.body:                                          ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @__mutex_init(%struct.mutex* %mutex, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.6, i32 0, i32 0), %struct.lock_class_key* @uvc_queue_init.__key)
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call11 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %irqlock13 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %1 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %irqlock13, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %1 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2.7, i32 0, i32 0), %struct.lock_class_key* @uvc_queue_init.__key.1)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  call void @INIT_LIST_HEAD.8(%struct.list_head* %irqqueue)
  %tobool18 = icmp ne i32 %drop_corrupted, 0
  %2 = zext i1 %tobool18 to i64
  %cond = select i1 %tobool18, i32 2, i32 0
  %flags = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  store i32 %cond, i32* %flags, align 8, !tbaa !173
  br label %cleanup

cleanup:                                          ; preds = %do.body, %entry
  %retval.0 = phi i32 [ 0, %do.body ], [ %call, %entry ]
  ret i32 %retval.0
}

declare i32 @vb2_queue_init(%struct.vb2_queue*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

declare void @__raw_spin_lock_init(%struct.raw_spinlock*, i8*, %struct.lock_class_key*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD.8(%struct.list_head* %list) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  store %struct.list_head* %list, %struct.list_head** %next, align 8, !tbaa !65
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !74
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_queue_setup(%struct.vb2_queue* %vq, %struct.v4l2_format* %fmt, i32* %nbuffers, i32* %nplanes, i32* %sizes, i8** %alloc_ctxs) #0 {
entry:
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %1 = bitcast %struct.uvc_video_queue* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 -344
  %2 = bitcast i8* %add.ptr to %struct.uvc_streaming*
  %3 = load i32, i32* %nbuffers, align 4, !tbaa !2
  %cmp = icmp ugt i32 %3, 32
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store i32 32, i32* %nbuffers, align 4, !tbaa !2
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store i32 1, i32* %nplanes, align 4, !tbaa !2
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %4 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !174
  %arrayidx = getelementptr inbounds i32, i32* %sizes, i64 0
  store i32 %4, i32* %arrayidx, align 4, !tbaa !2
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_wait_prepare(%struct.vb2_queue* %vq) #0 {
entry:
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_wait_finish(%struct.vb2_queue* %vq) #0 {
entry:
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %vq)
  %0 = bitcast i8* %call to %struct.uvc_video_queue*
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %0, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_buffer_prepare(%struct.vb2_buffer* %vb) #0 {
entry:
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 2
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !175
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %0)
  %1 = bitcast i8* %call to %struct.uvc_video_queue*
  %2 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 0
  %3 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  %v4l2_buf = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  %type = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 1
  %4 = load i32, i32* %type, align 4, !tbaa !180
  %cmp = icmp eq i32 %4, 2
  br i1 %cmp, label %land.lhs.true, label %if.end6

land.lhs.true:                                    ; preds = %entry
  %call1 = call i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 0)
  %call2 = call i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 0)
  %cmp3 = icmp ugt i64 %call1, %call2
  br i1 %cmp3, label %do.body, label %if.end6

do.body:                                          ; preds = %land.lhs.true
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %5, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then4, label %cleanup

if.then4:                                         ; preds = %do.body
  %call5 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.10, i32 0, i32 0))
  br label %cleanup

if.end6:                                          ; preds = %land.lhs.true, %entry
  %flags = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %1, i32 0, i32 2
  %6 = load i32, i32* %flags, align 8, !tbaa !173
  %and7 = and i32 %6, 1
  %tobool8 = icmp ne i32 %and7, 0
  %lnot = xor i1 %tobool8, true
  %lnot9 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot9 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool10 = icmp ne i64 %expval, 0
  br i1 %tobool10, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.end6
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 2
  store i32 1, i32* %state, align 8, !tbaa !181
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 3
  store i32 0, i32* %error, align 4, !tbaa !183
  %call13 = call i8* @vb2_plane_vaddr(%struct.vb2_buffer* %vb, i32 0)
  %mem = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 4
  store i8* %call13, i8** %mem, align 8, !tbaa !184
  %call14 = call i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 0)
  %conv15 = trunc i64 %call14 to i32
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 5
  store i32 %conv15, i32* %length, align 8, !tbaa !185
  %v4l2_buf16 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  %type17 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf16, i32 0, i32 1
  %7 = load i32, i32* %type17, align 4, !tbaa !180
  %cmp18 = icmp eq i32 %7, 1
  br i1 %cmp18, label %if.end24, label %if.else

if.else:                                          ; preds = %if.end12
  %call21 = call i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 0)
  %conv22 = trunc i64 %call21 to i32
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.end12
  %conv22.sink = phi i32 [ %conv22, %if.else ], [ 0, %if.end12 ]
  %bytesused23 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 6
  store i32 %conv22.sink, i32* %bytesused23, align 4, !tbaa !186
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.end6, %if.then4, %do.body
  %retval.0 = phi i32 [ 0, %if.end24 ], [ -22, %if.then4 ], [ -22, %do.body ], [ -19, %if.end6 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_buffer_finish(%struct.vb2_buffer* %vb) #0 {
entry:
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 2
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !175
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %0)
  %1 = bitcast i8* %call to %struct.uvc_video_queue*
  %2 = bitcast %struct.uvc_video_queue* %1 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 -344
  %3 = bitcast i8* %add.ptr to %struct.uvc_streaming*
  %4 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr3 = getelementptr inbounds i8, i8* %4, i64 0
  %5 = bitcast i8* %add.ptr3 to %struct.uvc_buffer*
  %v4l2_buf = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 0
  call void @uvc_video_clock_update(%struct.uvc_streaming* %3, %struct.v4l2_buffer* %v4l2_buf, %struct.uvc_buffer* %5)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_buffer_queue(%struct.vb2_buffer* %vb) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %vb2_queue = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 2
  %0 = load %struct.vb2_queue*, %struct.vb2_queue** %vb2_queue, align 8, !tbaa !175
  %call = call i8* @vb2_get_drv_priv(%struct.vb2_queue* %0)
  %1 = bitcast i8* %call to %struct.uvc_video_queue*
  %2 = bitcast %struct.vb2_buffer* %vb to i8*
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 0
  %3 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %6 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %6) #8
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %1, i32 0, i32 4
  %call3 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call4 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call3)
  %flags7 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %1, i32 0, i32 2
  %8 = load i32, i32* %flags7, align 8, !tbaa !173
  %and = and i32 %8, 1
  %tobool = icmp ne i32 %and, 0
  %lnot = xor i1 %tobool, true
  %lnot8 = xor i1 %lnot, true
  %lnot9 = xor i1 %lnot8, true
  %lnot.ext = zext i1 %lnot9 to i32
  %conv10 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv10, i64 1)
  %tobool11 = icmp ne i64 %expval, 0
  br i1 %tobool11, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %queue12 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 1
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %1, i32 0, i32 5
  call void @list_add_tail.9(%struct.list_head* %queue12, %struct.list_head* %irqqueue)
  br label %if.end

if.else:                                          ; preds = %entry
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 2
  store i32 5, i32* %state, align 8, !tbaa !181
  %buf13 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %3, i32 0, i32 0
  call void @vb2_buffer_done(%struct.vb2_buffer* %buf13, i32 5)
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %irqlock14 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %1, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock14, i64 %call4)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @vb2_get_drv_priv(%struct.vb2_queue* %q) #1 {
entry:
  %drv_priv = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 7
  %0 = load i8*, i8** %drv_priv, align 8, !tbaa !187
  ret i8* %0
}

declare i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock*) #2 section ".spinlock.text"

; Function Attrs: nounwind readnone
declare i64 @llvm.expect.i64(i64, i64) #6

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail.9(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !74
  call void @__list_add(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

declare void @vb2_buffer_done(%struct.vb2_buffer*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @spin_unlock_irqrestore(%struct.spinlock* %lock, i64 %flags) #1 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

declare void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock*, i64) #2 section ".spinlock.text"

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vb2_get_plane_payload(%struct.vb2_buffer* %vb, i32 %plane_no) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 3
  %0 = load i32, i32* %num_planes, align 8, !tbaa !188
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %v4l2_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 1
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.v4l2_plane], [8 x %struct.v4l2_plane]* %v4l2_planes, i64 0, i64 %idxprom
  %bytesused = getelementptr inbounds %struct.v4l2_plane, %struct.v4l2_plane* %arrayidx, i32 0, i32 0
  %1 = load i32, i32* %bytesused, align 8, !tbaa !189
  %conv = zext i32 %1 to i64
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i64 [ %conv, %if.then ], [ 0, %entry ]
  ret i64 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @vb2_plane_size(%struct.vb2_buffer* %vb, i32 %plane_no) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 3
  %0 = load i32, i32* %num_planes, align 8, !tbaa !188
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %v4l2_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 1
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.v4l2_plane], [8 x %struct.v4l2_plane]* %v4l2_planes, i64 0, i64 %idxprom
  %length = getelementptr inbounds %struct.v4l2_plane, %struct.v4l2_plane* %arrayidx, i32 0, i32 1
  %1 = load i32, i32* %length, align 4, !tbaa !191
  %conv = zext i32 %1 to i64
  br label %return

return:                                           ; preds = %if.then, %entry
  %retval.0 = phi i64 [ %conv, %if.then ], [ 0, %entry ]
  ret i64 %retval.0
}

declare i8* @vb2_plane_vaddr(%struct.vb2_buffer*, i32) #2

declare void @mutex_lock_nested(%struct.mutex*, i32) #2

declare void @mutex_unlock(%struct.mutex*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_alloc_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_requestbuffers* %rb) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_reqbufs(%struct.vb2_queue* %queue1, %struct.v4l2_requestbuffers* %rb)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %count = getelementptr inbounds %struct.v4l2_requestbuffers, %struct.v4l2_requestbuffers* %rb, i32 0, i32 0
  %0 = load i32, i32* %count, align 4, !tbaa !192
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond = phi i32 [ %0, %cond.false ], [ %call, %entry ]
  ret i32 %cond
}

declare i32 @vb2_reqbufs(%struct.vb2_queue*, %struct.v4l2_requestbuffers*) #2

; Function Attrs: nounwind uwtable
define void @uvc_free_buffers(%struct.uvc_video_queue* %queue) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  call void @vb2_queue_release(%struct.vb2_queue* %queue1)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret void
}

declare void @vb2_queue_release(%struct.vb2_queue*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_query_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_querybuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_querybuf(%struct.vb2_queue*, %struct.v4l2_buffer*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_qbuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_qbuf(%struct.vb2_queue*, %struct.v4l2_buffer*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_dequeue_buffer(%struct.uvc_video_queue* %queue, %struct.v4l2_buffer* %buf, i32 %nonblocking) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %tobool = icmp ne i32 %nonblocking, 0
  %call = call i32 @vb2_dqbuf(%struct.vb2_queue* %queue1, %struct.v4l2_buffer* %buf, i1 zeroext %tobool)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_dqbuf(%struct.vb2_queue*, %struct.v4l2_buffer*, i1 zeroext) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_mmap(%struct.uvc_video_queue* %queue, %struct.vm_area_struct* %vma) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_mmap(%struct.vb2_queue* %queue1, %struct.vm_area_struct* %vma)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_mmap(%struct.vb2_queue*, %struct.vm_area_struct*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_poll(%struct.uvc_video_queue* %queue, %struct.file* %file, %struct.poll_table_struct* %wait) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call i32 @vb2_poll(%struct.vb2_queue* %queue1, %struct.file* %file, %struct.poll_table_struct* %wait)
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %call
}

declare i32 @vb2_poll(%struct.vb2_queue*, %struct.file*, %struct.poll_table_struct*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_allocated(%struct.uvc_video_queue* %queue) #0 {
entry:
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_busy(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  %mutex2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex2)
  ret i32 %conv
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_busy(%struct.vb2_queue* %q) #1 {
entry:
  %num_buffers = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 13
  %0 = load i32, i32* %num_buffers, align 8, !tbaa !194
  %cmp = icmp ugt i32 %0, 0
  ret i1 %cmp
}

; Function Attrs: nounwind uwtable
define i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue, i32 %enable) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %mutex = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %tobool = icmp ne i32 %enable, 0
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %queue2 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %type = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %queue2, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !166
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %call = call i32 @vb2_streamon(%struct.vb2_queue* %queue1, i32 %0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %done, label %if.end

if.end:                                           ; preds = %if.then
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 3
  store i32 0, i32* %buf_used, align 4, !tbaa !195
  br label %done

if.else:                                          ; preds = %entry
  %call7 = call i32 @vb2_streamoff(%struct.vb2_queue* %queue1, i32 %0)
  %cmp8 = icmp slt i32 %call7, 0
  br i1 %cmp8, label %done, label %do.body11

do.body11:                                        ; preds = %if.else
  %1 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %cmp12 = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp12 to i32
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call13 = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call14 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call13)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  call void @INIT_LIST_HEAD.8(%struct.list_head* %irqqueue)
  %irqlock17 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock17, i64 %call14)
  br label %done

done:                                             ; preds = %do.body11, %if.else, %if.end, %if.then
  %ret.1 = phi i32 [ %call, %if.then ], [ %call7, %if.else ], [ %call, %if.end ], [ %call7, %do.body11 ]
  %mutex19 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 1
  call void @mutex_unlock(%struct.mutex* %mutex19)
  ret i32 %ret.1
}

declare i32 @vb2_streamon(%struct.vb2_queue*, i32) #2

declare i32 @vb2_streamoff(%struct.vb2_queue*, i32) #2

; Function Attrs: nounwind uwtable
define void @uvc_queue_cancel(%struct.uvc_video_queue* %queue, i32 %disconnect) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call2 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  br label %while.cond

while.cond:                                       ; preds = %while.body, %entry
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %call5 = call i32 @list_empty.11(%struct.list_head* %irqqueue)
  %tobool = icmp ne i32 %call5, 0
  %lnot = xor i1 %tobool, true
  br i1 %lnot, label %while.body, label %while.end

while.body:                                       ; preds = %while.cond
  %irqqueue6 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue6, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %5, i64 -840
  %6 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  %queue8 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %6, i32 0, i32 1
  call void @list_del(%struct.list_head* %queue8)
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %6, i32 0, i32 2
  store i32 5, i32* %state, align 8, !tbaa !181
  %buf9 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %6, i32 0, i32 0
  call void @vb2_buffer_done(%struct.vb2_buffer* %buf9, i32 5)
  br label %while.cond

while.end:                                        ; preds = %while.cond
  %tobool10 = icmp ne i32 %disconnect, 0
  br i1 %tobool10, label %if.then, label %if.end

if.then:                                          ; preds = %while.end
  %flags11 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  %7 = load i32, i32* %flags11, align 8, !tbaa !173
  %or = or i32 %7, 1
  store i32 %or, i32* %flags11, align 8, !tbaa !173
  br label %if.end

if.end:                                           ; preds = %if.then, %while.end
  %irqlock12 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock12, i64 %call2)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.11(%struct.list_head* %head) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %cmp = icmp eq %struct.list_head* %0, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

declare void @list_del(%struct.list_head*) #2

; Function Attrs: nounwind uwtable
define %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %flags1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 2
  %0 = load i32, i32* %flags1, align 8, !tbaa !173
  %and = and i32 %0, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %do.body5

land.lhs.true:                                    ; preds = %entry
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  %1 = load i32, i32* %error, align 4, !tbaa !183
  %tobool2 = icmp ne i32 %1, 0
  br i1 %tobool2, label %if.then, label %do.body5

if.then:                                          ; preds = %land.lhs.true
  %error3 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  store i32 0, i32* %error3, align 4, !tbaa !183
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 1, i32* %state, align 8, !tbaa !181
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  store i32 0, i32* %bytesused, align 4, !tbaa !186
  %buf4 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  call void @vb2_set_plane_payload(%struct.vb2_buffer* %buf4, i32 0, i64 0)
  br label %cleanup

do.body5:                                         ; preds = %land.lhs.true, %entry
  %2 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %4 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  %call = call %struct.raw_spinlock* @spinlock_check(%struct.spinlock* %irqlock)
  %call6 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %queue9 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 1
  call void @list_del(%struct.list_head* %queue9)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %call10 = call i32 @list_empty.11(%struct.list_head* %irqqueue)
  %tobool11 = icmp ne i32 %call10, 0
  br i1 %tobool11, label %if.end15, label %if.then12

if.then12:                                        ; preds = %do.body5
  %irqqueue13 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue13, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %7 = bitcast %struct.list_head* %6 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %7, i64 -840
  %8 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  br label %if.end15

if.end15:                                         ; preds = %if.then12, %do.body5
  %nextbuf.0 = phi %struct.uvc_buffer* [ %8, %if.then12 ], [ null, %do.body5 ]
  %irqlock16 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 4
  call void @spin_unlock_irqrestore(%struct.spinlock* %irqlock16, i64 %call6)
  %error17 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  %9 = load i32, i32* %error17, align 4, !tbaa !183
  %tobool18 = icmp ne i32 %9, 0
  %10 = zext i1 %tobool18 to i64
  %cond = select i1 %tobool18, i32 5, i32 4
  %state19 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 %cond, i32* %state19, align 8, !tbaa !181
  %buf20 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %bytesused21 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %11 = load i32, i32* %bytesused21, align 4, !tbaa !186
  %conv22 = zext i32 %11 to i64
  call void @vb2_set_plane_payload(%struct.vb2_buffer* %buf20, i32 0, i64 %conv22)
  %buf23 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  call void @vb2_buffer_done(%struct.vb2_buffer* %buf23, i32 4)
  br label %cleanup

cleanup:                                          ; preds = %if.end15, %if.then
  %retval.0 = phi %struct.uvc_buffer* [ %buf, %if.then ], [ %nextbuf.0, %if.end15 ]
  ret %struct.uvc_buffer* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @vb2_set_plane_payload(%struct.vb2_buffer* %vb, i32 %plane_no, i64 %size) #1 {
entry:
  %num_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 3
  %0 = load i32, i32* %num_planes, align 8, !tbaa !188
  %cmp = icmp ult i32 %plane_no, %0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %conv = trunc i64 %size to i32
  %v4l2_planes = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %vb, i32 0, i32 1
  %idxprom = zext i32 %plane_no to i64
  %arrayidx = getelementptr inbounds [8 x %struct.v4l2_plane], [8 x %struct.v4l2_plane]* %v4l2_planes, i64 0, i64 %idxprom
  %bytesused = getelementptr inbounds %struct.v4l2_plane, %struct.v4l2_plane* %arrayidx, i32 0, i32 0
  store i32 %conv, i32* %bytesused, align 8, !tbaa !189
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_read(%struct.file* %file, i8* %data, i64 %count, i64* %ppos) #0 {
entry:
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.111, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  ret i64 -22
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_poll(%struct.file* %file, %struct.poll_table_struct* %wait) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream1, align 8, !tbaa !202
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1.33, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 18
  %call2 = call i32 @uvc_queue_poll(%struct.uvc_video_queue* %queue, %struct.file* %file, %struct.poll_table_struct* %wait)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_ioctl(%struct.file* %file, i32 %cmd, i64 %arg) #0 {
entry:
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 64
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2.20, i32 0, i32 0))
  call void @v4l_printk_ioctl(i8* null, i32 %cmd)
  %call1 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3.21, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %call2 = call i64 @video_usercopy(%struct.file* %file, i32 %cmd, i64 %arg, i64 (%struct.file*, i32, i8*)* @uvc_v4l2_do_ioctl)
  ret i64 %call2
}

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_compat_ioctl32(%struct.file* %file, i32 %cmd, i64 %arg) #0 {
entry:
  %karg = alloca %union.anon.84, align 8
  %old_fs = alloca %struct.pgprot, align 8
  %.compoundliteral = alloca %struct.pgprot, align 8
  %0 = bitcast %union.anon.84* %karg to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* %0) #8
  %conv = trunc i64 %arg to i32
  %call = call i8* @compat_ptr(i32 %conv)
  %1 = bitcast %struct.pgprot* %old_fs to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %Pivot = icmp slt i32 %cmd, -1067944672
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %SwitchLeaf2 = icmp eq i32 %cmd, -1067944672
  br i1 %SwitchLeaf2, label %sw.bb, label %cleanup

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %cmd, -1072925407
  br i1 %SwitchLeaf, label %sw.bb3, label %cleanup

sw.bb:                                            ; preds = %LeafBlock1
  %xmap = bitcast %union.anon.84* %karg to %struct.uvc_xu_control_mapping*
  %2 = bitcast i8* %call to %struct.uvc_xu_control_mapping32*
  %call1 = call i32 @uvc_v4l2_get_xu_mapping(%struct.uvc_xu_control_mapping* %xmap, %struct.uvc_xu_control_mapping32* %2)
  %conv2 = sext i32 %call1 to i64
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock
  %xqry = bitcast %union.anon.84* %karg to %struct.uvc_xu_control_query*
  %3 = bitcast i8* %call to %struct.uvc_xu_control_query32*
  %call4 = call i32 @uvc_v4l2_get_xu_query(%struct.uvc_xu_control_query* %xqry, %struct.uvc_xu_control_query32* %3)
  %conv5 = sext i32 %call4 to i64
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb
  %cmd.addr.0 = phi i32 [ -1072663263, %sw.bb3 ], [ -1067420384, %sw.bb ]
  %call6 = call %struct.thread_info* @current_thread_info()
  %addr_limit = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call6, i32 0, i32 6
  %4 = bitcast %struct.pgprot* %old_fs to i8*
  %5 = bitcast %struct.pgprot* %addr_limit to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %4, i8* %5, i64 8, i32 8, i1 false), !tbaa.struct !205
  %call7 = call %struct.thread_info* @current_thread_info()
  %addr_limit8 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call7, i32 0, i32 6
  %seg = getelementptr inbounds %struct.pgprot, %struct.pgprot* %.compoundliteral, i32 0, i32 0
  store i64 -1, i64* %seg, align 8, !tbaa !206
  %6 = bitcast %struct.pgprot* %addr_limit8 to i8*
  %7 = bitcast %struct.pgprot* %.compoundliteral to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false), !tbaa.struct !205
  %8 = ptrtoint %union.anon.84* %karg to i64
  %call9 = call i64 @uvc_v4l2_ioctl(%struct.file* %file, i32 %cmd.addr.0, i64 %8)
  %call10 = call %struct.thread_info* @current_thread_info()
  %addr_limit11 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call10, i32 0, i32 6
  %9 = bitcast %struct.pgprot* %addr_limit11 to i8*
  %10 = bitcast %struct.pgprot* %old_fs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false), !tbaa.struct !205
  %cmp = icmp slt i64 %call9, 0
  br i1 %cmp, label %cleanup, label %NodeBlock8

NodeBlock8:                                       ; preds = %sw.epilog
  %Pivot9 = icmp slt i32 %cmd.addr.0, -1067420384
  br i1 %Pivot9, label %LeafBlock4, label %LeafBlock6

LeafBlock6:                                       ; preds = %NodeBlock8
  %SwitchLeaf7 = icmp eq i32 %cmd.addr.0, -1067420384
  br i1 %SwitchLeaf7, label %sw.bb13, label %cleanup

LeafBlock4:                                       ; preds = %NodeBlock8
  %SwitchLeaf5 = icmp eq i32 %cmd.addr.0, -1072663263
  br i1 %SwitchLeaf5, label %sw.bb17, label %cleanup

sw.bb13:                                          ; preds = %LeafBlock6
  %xmap14 = bitcast %union.anon.84* %karg to %struct.uvc_xu_control_mapping*
  %11 = bitcast i8* %call to %struct.uvc_xu_control_mapping32*
  %call15 = call i32 @uvc_v4l2_put_xu_mapping(%struct.uvc_xu_control_mapping* %xmap14, %struct.uvc_xu_control_mapping32* %11)
  %conv16 = sext i32 %call15 to i64
  br label %cleanup

sw.bb17:                                          ; preds = %LeafBlock4
  %xqry18 = bitcast %union.anon.84* %karg to %struct.uvc_xu_control_query*
  %12 = bitcast i8* %call to %struct.uvc_xu_control_query32*
  %call19 = call i32 @uvc_v4l2_put_xu_query(%struct.uvc_xu_control_query* %xqry18, %struct.uvc_xu_control_query32* %12)
  %conv20 = sext i32 %call19 to i64
  br label %cleanup

cleanup:                                          ; preds = %sw.bb17, %sw.bb13, %LeafBlock4, %LeafBlock6, %sw.epilog, %LeafBlock, %LeafBlock1
  %retval.0 = phi i64 [ -515, %LeafBlock ], [ -515, %LeafBlock1 ], [ %call9, %sw.epilog ], [ %conv20, %sw.bb17 ], [ %conv16, %sw.bb13 ], [ %call9, %LeafBlock6 ], [ %call9, %LeafBlock4 ]
  %13 = bitcast %struct.pgprot* %old_fs to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  %14 = bitcast %union.anon.84* %karg to i8*
  call void @llvm.lifetime.end.p0i8(i64 96, i8* %14) #8
  ret i64 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_mmap(%struct.file* %file, %struct.vm_area_struct* %vma) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream1, align 8, !tbaa !202
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15.19, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 18
  %call2 = call i32 @uvc_queue_mmap(%struct.uvc_video_queue* %queue, %struct.vm_area_struct* %vma)
  ret i32 %call2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_open(%struct.file* %file) #0 {
entry:
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16.15, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call1 = call i8* @video_drvdata(%struct.file* %file)
  %1 = bitcast i8* %call1 to %struct.uvc_streaming*
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %2 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %state = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %2, i32 0, i32 6
  %3 = load i32, i32* %state, align 8, !tbaa !43
  %and2 = and i32 %3, 1
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %cleanup, label %if.end5

if.end5:                                          ; preds = %do.end
  %dev6 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %4 = load %struct.uvc_device*, %struct.uvc_device** %dev6, align 8, !tbaa !102
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %4, i32 0, i32 1
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %call7 = call i32 @usb_autopm_get_interface(%struct.usb_interface* %5)
  %cmp = icmp slt i32 %call7, 0
  br i1 %cmp, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.end5
  %call10 = call i8* @kzalloc.16(i64 192, i32 208)
  %6 = bitcast i8* %call10 to %struct.uvc_fh*
  %cmp11 = icmp eq %struct.uvc_fh* %6, null
  %dev13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %7 = load %struct.uvc_device*, %struct.uvc_device** %dev13, align 8, !tbaa !102
  br i1 %cmp11, label %if.then12, label %if.end15

if.then12:                                        ; preds = %if.end9
  %intf14 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %7, i32 0, i32 1
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf14, align 8, !tbaa !62
  call void @usb_autopm_put_interface(%struct.usb_interface* %8)
  br label %cleanup

if.end15:                                         ; preds = %if.end9
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %7, i32 0, i32 7
  %call17 = call i32 @atomic_add_return(i32 1, %union.anon.5* %users)
  %cmp18 = icmp eq i32 %call17, 1
  br i1 %cmp18, label %if.then19, label %if.end29

if.then19:                                        ; preds = %if.end15
  %dev20 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %9 = load %struct.uvc_device*, %struct.uvc_device** %dev20, align 8, !tbaa !102
  %call21 = call i32 @uvc_status_start(%struct.uvc_device* %9)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then23, label %if.end29

if.then23:                                        ; preds = %if.then19
  %dev24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %10 = load %struct.uvc_device*, %struct.uvc_device** %dev24, align 8, !tbaa !102
  %users25 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %10, i32 0, i32 7
  call void @atomic_dec(%union.anon.5* %users25)
  %dev26 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 1
  %11 = load %struct.uvc_device*, %struct.uvc_device** %dev26, align 8, !tbaa !102
  %intf27 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %11, i32 0, i32 1
  %12 = load %struct.usb_interface*, %struct.usb_interface** %intf27, align 8, !tbaa !62
  call void @usb_autopm_put_interface(%struct.usb_interface* %12)
  %13 = bitcast %struct.uvc_fh* %6 to i8*
  call void @kfree(i8* %13)
  br label %cleanup

if.end29:                                         ; preds = %if.then19, %if.end15
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %6, i32 0, i32 0
  %vdev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 2
  %14 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !58
  call void @v4l2_fh_init(%struct.v4l2_fh* %vfh, %struct.video_device* %14)
  %vfh30 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %6, i32 0, i32 0
  call void @v4l2_fh_add(%struct.v4l2_fh* %vfh30)
  %chain = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 3
  %15 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !92
  %chain31 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %6, i32 0, i32 1
  store %struct.uvc_video_chain* %15, %struct.uvc_video_chain** %chain31, align 8, !tbaa !207
  %stream32 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %6, i32 0, i32 2
  store %struct.uvc_streaming* %1, %struct.uvc_streaming** %stream32, align 8, !tbaa !202
  %state33 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %6, i32 0, i32 3
  store i32 0, i32* %state33, align 8, !tbaa !208
  %16 = bitcast %struct.uvc_fh* %6 to i8*
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* %16, i8** %private_data, align 8, !tbaa !196
  br label %cleanup

cleanup:                                          ; preds = %if.end29, %if.then23, %if.then12, %if.end5, %do.end
  %retval.0 = phi i32 [ -12, %if.then12 ], [ %call21, %if.then23 ], [ 0, %if.end29 ], [ -19, %do.end ], [ %call7, %if.end5 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_release(%struct.file* %file) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %stream1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %2 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream1, align 8, !tbaa !202
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %3, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17.14, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %call2 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool3 = icmp ne i32 %call2, 0
  br i1 %tobool3, label %if.then4, label %if.end6

if.then4:                                         ; preds = %do.end
  %call5 = call i32 @uvc_video_enable(%struct.uvc_streaming* %2, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 18
  call void @uvc_free_buffers(%struct.uvc_video_queue* %queue)
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %do.end
  call void @uvc_dismiss_privileges(%struct.uvc_fh* %1)
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  call void @v4l2_fh_del(%struct.v4l2_fh* %vfh)
  %vfh7 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  call void @v4l2_fh_exit(%struct.v4l2_fh* %vfh7)
  %4 = bitcast %struct.uvc_fh* %1 to i8*
  call void @kfree(i8* %4)
  %private_data8 = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* null, i8** %private_data8, align 8, !tbaa !196
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 1
  %5 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %5, i32 0, i32 7
  %call9 = call i32 @atomic_sub_return(i32 1, %union.anon.5* %users)
  %cmp = icmp eq i32 %call9, 0
  br i1 %cmp, label %if.then10, label %if.end12

if.then10:                                        ; preds = %if.end6
  %dev11 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 1
  %6 = load %struct.uvc_device*, %struct.uvc_device** %dev11, align 8, !tbaa !102
  call void @uvc_status_stop(%struct.uvc_device* %6)
  br label %if.end12

if.end12:                                         ; preds = %if.then10, %if.end6
  %dev13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 1
  %7 = load %struct.uvc_device*, %struct.uvc_device** %dev13, align 8, !tbaa !102
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %7, i32 0, i32 1
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  call void @usb_autopm_put_interface(%struct.usb_interface* %8)
  ret i32 0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_has_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !208
  %cmp = icmp eq i32 %0, 1
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal void @uvc_dismiss_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !208
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %stream = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %1 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream, align 8, !tbaa !202
  %active = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 4
  call void @atomic_dec(%union.anon.5* %active)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %state1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  store i32 0, i32* %state1, align 8, !tbaa !208
  ret void
}

declare void @v4l2_fh_del(%struct.v4l2_fh*) #2

declare void @v4l2_fh_exit(%struct.v4l2_fh*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @atomic_sub_return(i32 %i, %union.anon.5* %v) #1 {
entry:
  %sub = sub nsw i32 0, %i
  %call = call i32 @atomic_add_return(i32 %sub, %union.anon.5* %v)
  ret i32 %call
}

declare void @usb_autopm_put_interface(%struct.usb_interface*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @atomic_add_return(i32 %i, %union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32 %i, i32* %counter) #8, !srcloc !209
  %add = add nsw i32 %i, %0
  ret i32 %add
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @atomic_dec(%union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !210
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_drvdata(%struct.file* %file) #1 {
entry:
  %call = call %struct.video_device* @video_devdata(%struct.file* %file)
  %call1 = call i8* @video_get_drvdata.18(%struct.video_device* %call)
  ret i8* %call1
}

declare i32 @usb_autopm_get_interface(%struct.usb_interface*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.16(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.17(i64 %size, i32 %or)
  ret i8* %call
}

declare void @v4l2_fh_init(%struct.v4l2_fh*, %struct.video_device*) #2

declare void @v4l2_fh_add(%struct.v4l2_fh*) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.17(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare %struct.video_device* @video_devdata(%struct.file*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @video_get_drvdata.18(%struct.video_device* %vdev) #1 {
entry:
  %dev = getelementptr inbounds %struct.video_device, %struct.video_device* %vdev, i32 0, i32 2
  %call = call i8* @dev_get_drvdata(%struct.device* %dev)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @compat_ptr(i32 %uptr) #1 {
entry:
  %conv = zext i32 %uptr to i64
  %0 = inttoptr i64 %conv to i8*
  ret i8* %0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_xu_mapping(%struct.uvc_xu_control_mapping* %kp, %struct.uvc_xu_control_mapping32* %up) #0 {
entry:
  %call = call %struct.thread_info* @current_thread_info()
  %addr_limit = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call, i32 0, i32 6
  %seg = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit, i32 0, i32 0
  %0 = load i64, i64* %seg, align 8, !tbaa !211
  %1 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(%struct.uvc_xu_control_mapping32* %up, i64 88, i64 %0) #9, !srcloc !214
  %asmresult = extractvalue { i64, i64 } %1, 0
  %asmresult1 = extractvalue { i64, i64 } %1, 1
  %cmp = icmp eq i64 %asmresult, 0
  %lnot = xor i1 %cmp, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %2 = bitcast %struct.uvc_xu_control_mapping* %kp to i8*
  %3 = bitcast %struct.uvc_xu_control_mapping32* %up to i8*
  %call3 = call i32 @__copy_from_user(i8* %2, i8* %3, i32 64)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %cleanup, label %do.body

do.body:                                          ; preds = %lor.lhs.false
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 9
  %4 = bitcast i32* %menu_count to %struct.__large_struct*
  %5 = call { i32, i64 } asm sideeffect "661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xcb\0A6641:\0A\09.popsection\0A1:\09movl $2,${1:k}\0A2: 661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xca\0A6641:\0A\09.popsection\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 8\0A .long (1b) - .\0A .long (3b) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %4, i32 -14, i32 0) #8, !srcloc !215
  %asmresult6 = extractvalue { i32, i64 } %5, 0
  %asmresult7 = extractvalue { i32, i64 } %5, 1
  %conv8 = trunc i64 %asmresult7 to i32
  %menu_count9 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  store i32 %conv8, i32* %menu_count9, align 8, !tbaa !216
  %tobool11 = icmp ne i32 %asmresult6, 0
  br i1 %tobool11, label %cleanup, label %if.end

if.end:                                           ; preds = %do.body
  %reserved = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %reserved, i32 0, i32 0
  %6 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* %6, i8 0, i64 16, i32 4, i1 false)
  %menu_count12 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %7 = load i32, i32* %menu_count12, align 8, !tbaa !216
  %cmp13 = icmp eq i32 %7, 0
  br i1 %cmp13, label %if.then15, label %do.body19

if.then15:                                        ; preds = %if.end
  %menu_info = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 8
  store %struct.uvc_menu_info* null, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !218
  br label %cleanup

do.body19:                                        ; preds = %if.end
  %menu_info20 = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 8
  %8 = bitcast i32* %menu_info20 to %struct.__large_struct*
  %9 = call { i32, i64 } asm sideeffect "661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xcb\0A6641:\0A\09.popsection\0A1:\09movl $2,${1:k}\0A2: 661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xca\0A6641:\0A\09.popsection\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 8\0A .long (1b) - .\0A .long (3b) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %8, i32 -14, i32 0) #8, !srcloc !219
  %asmresult21 = extractvalue { i32, i64 } %9, 0
  %asmresult22 = extractvalue { i32, i64 } %9, 1
  %conv25 = trunc i64 %asmresult22 to i32
  %tobool27 = icmp ne i32 %asmresult21, 0
  br i1 %tobool27, label %cleanup, label %if.end29

if.end29:                                         ; preds = %do.body19
  %call30 = call i8* @compat_ptr(i32 %conv25)
  %10 = bitcast i8* %call30 to %struct.uvc_menu_info*
  %menu_count33 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %11 = load i32, i32* %menu_count33, align 8, !tbaa !216
  %conv34 = zext i32 %11 to i64
  %mul = mul i64 %conv34, 36
  %call35 = call %struct.thread_info* @current_thread_info()
  %addr_limit36 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call35, i32 0, i32 6
  %seg37 = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit36, i32 0, i32 0
  %12 = load i64, i64* %seg37, align 8, !tbaa !211
  %13 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(%struct.uvc_menu_info* %10, i64 %mul, i64 %12) #9, !srcloc !220
  %asmresult38 = extractvalue { i64, i64 } %13, 0
  %asmresult39 = extractvalue { i64, i64 } %13, 1
  %cmp41 = icmp eq i64 %asmresult38, 0
  %lnot43 = xor i1 %cmp41, true
  %lnot45 = xor i1 %lnot43, true
  %lnot.ext46 = zext i1 %lnot45 to i32
  %conv47 = sext i32 %lnot.ext46 to i64
  %expval48 = call i64 @llvm.expect.i64(i64 %conv47, i64 1)
  %tobool49 = icmp ne i64 %expval48, 0
  br i1 %tobool49, label %if.end51, label %cleanup

if.end51:                                         ; preds = %if.end29
  %menu_count52 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %14 = load i32, i32* %menu_count52, align 8, !tbaa !216
  %conv53 = zext i32 %14 to i64
  %mul54 = mul i64 %conv53, 36
  %call55 = call i8* @compat_alloc_user_space(i64 %mul54)
  %15 = bitcast i8* %call55 to %struct.uvc_menu_info*
  %cmp56 = icmp eq %struct.uvc_menu_info* %15, null
  br i1 %cmp56, label %cleanup, label %if.end59

if.end59:                                         ; preds = %if.end51
  %menu_info60 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 8
  store %struct.uvc_menu_info* %15, %struct.uvc_menu_info** %menu_info60, align 8, !tbaa !218
  %16 = bitcast %struct.uvc_menu_info* %15 to i8*
  %17 = bitcast %struct.uvc_menu_info* %10 to i8*
  %menu_count61 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %18 = load i32, i32* %menu_count61, align 8, !tbaa !216
  %conv62 = zext i32 %18 to i64
  %mul63 = mul i64 %conv62, 36
  %conv64 = trunc i64 %mul63 to i32
  %call65 = call i64 @copy_in_user(i8* %16, i8* %17, i32 %conv64)
  %tobool66 = icmp ne i64 %call65, 0
  %. = select i1 %tobool66, i32 -14, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end59, %if.end51, %if.end29, %do.body19, %if.then15, %do.body, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.then15 ], [ -14, %do.body ], [ -14, %lor.lhs.false ], [ -14, %entry ], [ -14, %do.body19 ], [ -14, %if.end29 ], [ -14, %if.end51 ], [ %., %if.end59 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_xu_query(%struct.uvc_xu_control_query* %kp, %struct.uvc_xu_control_query32* %up) #0 {
entry:
  %call = call %struct.thread_info* @current_thread_info()
  %addr_limit = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call, i32 0, i32 6
  %seg = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit, i32 0, i32 0
  %0 = load i64, i64* %seg, align 8, !tbaa !211
  %1 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(%struct.uvc_xu_control_query32* %up, i64 12, i64 %0) #9, !srcloc !221
  %asmresult = extractvalue { i64, i64 } %1, 0
  %asmresult1 = extractvalue { i64, i64 } %1, 1
  %cmp = icmp eq i64 %asmresult, 0
  %lnot = xor i1 %cmp, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %2 = bitcast %struct.uvc_xu_control_query* %kp to i8*
  %3 = bitcast %struct.uvc_xu_control_query32* %up to i8*
  %call3 = call i32 @__copy_from_user(i8* %2, i8* %3, i32 8)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %size = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %4 = load i16, i16* %size, align 4, !tbaa !222
  %conv5 = zext i16 %4 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %if.then8, label %do.body

if.then8:                                         ; preds = %if.end
  %data = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 4
  store i8* null, i8** %data, align 8, !tbaa !224
  br label %cleanup

do.body:                                          ; preds = %if.end
  %data10 = getelementptr inbounds %struct.uvc_xu_control_query32, %struct.uvc_xu_control_query32* %up, i32 0, i32 4
  %5 = bitcast i32* %data10 to %struct.__large_struct*
  %6 = call { i32, i64 } asm sideeffect "661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xcb\0A6641:\0A\09.popsection\0A1:\09movl $2,${1:k}\0A2: 661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xca\0A6641:\0A\09.popsection\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 8\0A .long (1b) - .\0A .long (3b) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %5, i32 -14, i32 0) #8, !srcloc !225
  %asmresult11 = extractvalue { i32, i64 } %6, 0
  %asmresult12 = extractvalue { i32, i64 } %6, 1
  %conv13 = trunc i64 %asmresult12 to i32
  %tobool15 = icmp ne i32 %asmresult11, 0
  br i1 %tobool15, label %cleanup, label %if.end17

if.end17:                                         ; preds = %do.body
  %call18 = call i8* @compat_ptr(i32 %conv13)
  %size21 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %7 = load i16, i16* %size21, align 4, !tbaa !222
  %conv22 = zext i16 %7 to i64
  %call23 = call %struct.thread_info* @current_thread_info()
  %addr_limit24 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call23, i32 0, i32 6
  %seg25 = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit24, i32 0, i32 0
  %8 = load i64, i64* %seg25, align 8, !tbaa !211
  %9 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(i8* %call18, i64 %conv22, i64 %8) #9, !srcloc !226
  %asmresult26 = extractvalue { i64, i64 } %9, 0
  %asmresult27 = extractvalue { i64, i64 } %9, 1
  %cmp29 = icmp eq i64 %asmresult26, 0
  %lnot31 = xor i1 %cmp29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.end39, label %cleanup

if.end39:                                         ; preds = %if.end17
  %size40 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %10 = load i16, i16* %size40, align 4, !tbaa !222
  %conv41 = zext i16 %10 to i64
  %call42 = call i8* @compat_alloc_user_space(i64 %conv41)
  %cmp43 = icmp eq i8* %call42, null
  br i1 %cmp43, label %cleanup, label %if.end46

if.end46:                                         ; preds = %if.end39
  %data47 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 4
  store i8* %call42, i8** %data47, align 8, !tbaa !224
  %size48 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %11 = load i16, i16* %size48, align 4, !tbaa !222
  %conv49 = zext i16 %11 to i32
  %call50 = call i64 @copy_in_user(i8* %call42, i8* %call18, i32 %conv49)
  %tobool51 = icmp ne i64 %call50, 0
  %. = select i1 %tobool51, i32 -14, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end46, %if.end39, %if.end17, %do.body, %if.then8, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ 0, %if.then8 ], [ -14, %lor.lhs.false ], [ -14, %entry ], [ -14, %do.body ], [ -14, %if.end17 ], [ -14, %if.end39 ], [ %., %if.end46 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.thread_info* @current_thread_info() #1 {
entry:
  %0 = call i64 asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(i64* @kernel_stack) #6, !srcloc !227
  %add = add i64 %0, 40
  %sub = sub i64 %add, 8192
  %1 = inttoptr i64 %sub to i8*
  %2 = bitcast i8* %1 to %struct.thread_info*
  ret %struct.thread_info* %2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_put_xu_mapping(%struct.uvc_xu_control_mapping* %kp, %struct.uvc_xu_control_mapping32* %up) #0 {
entry:
  %menu_info = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 8
  %0 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !218
  %call = call %struct.thread_info* @current_thread_info()
  %addr_limit = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call, i32 0, i32 6
  %seg = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit, i32 0, i32 0
  %1 = load i64, i64* %seg, align 8, !tbaa !211
  %2 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(%struct.uvc_xu_control_mapping32* %up, i64 88, i64 %1) #9, !srcloc !228
  %asmresult = extractvalue { i64, i64 } %2, 0
  %asmresult1 = extractvalue { i64, i64 } %2, 1
  %cmp = icmp eq i64 %asmresult, 0
  %lnot = xor i1 %cmp, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct.uvc_xu_control_mapping32* %up to i8*
  %4 = bitcast %struct.uvc_xu_control_mapping* %kp to i8*
  %call3 = call i32 @__copy_to_user(i8* %3, i8* %4, i32 64)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %cleanup, label %do.body

do.body:                                          ; preds = %lor.lhs.false
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %5 = load i32, i32* %menu_count, align 8, !tbaa !216
  %menu_count6 = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 9
  %6 = bitcast i32* %menu_count6 to %struct.__large_struct*
  %7 = call i32 asm sideeffect "661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xcb\0A6641:\0A\09.popsection\0A1:\09movl ${1:k},$2\0A2: 661:\0A\09.byte 0x66,0x66,0x90\0A\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (9*32+20)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09.byte 0x0f,0x01,0xca\0A6641:\0A\09.popsection\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 8\0A .long (1b) - .\0A .long (3b) - .\0A .popsection\0A", "=r,ir,*m,i,0,~{dirflag},~{fpsr},~{flags}"(i32 %5, %struct.__large_struct* %6, i32 -14, i32 0) #8, !srcloc !229
  %tobool8 = icmp ne i32 %7, 0
  br i1 %tobool8, label %cleanup, label %if.end

if.end:                                           ; preds = %do.body
  %reserved = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 10
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %reserved, i32 0, i32 0
  %8 = bitcast i32* %arraydecay to i8*
  %call9 = call i64 @__clear_user(i8* %8, i64 16)
  %tobool10 = icmp ne i64 %call9, 0
  br i1 %tobool10, label %cleanup, label %if.end12

if.end12:                                         ; preds = %if.end
  %menu_count13 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %9 = load i32, i32* %menu_count13, align 8, !tbaa !216
  %cmp14 = icmp eq i32 %9, 0
  br i1 %cmp14, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end12
  call void @might_fault()
  %menu_info18 = getelementptr inbounds %struct.uvc_xu_control_mapping32, %struct.uvc_xu_control_mapping32* %up, i32 0, i32 8
  %10 = call { i32*, i64 } asm sideeffect "call __get_user_${3:P}", "={ax},={edx},0,i,~{dirflag},~{fpsr},~{flags}"(i32* %menu_info18, i64 4) #8, !srcloc !230
  %asmresult19 = extractvalue { i32*, i64 } %10, 0
  %asmresult20 = extractvalue { i32*, i64 } %10, 1
  %11 = ptrtoint i32* %asmresult19 to i64
  %12 = trunc i64 %11 to i32
  %conv21 = trunc i64 %asmresult20 to i32
  %tobool23 = icmp ne i32 %12, 0
  br i1 %tobool23, label %cleanup, label %if.end25

if.end25:                                         ; preds = %if.end17
  %call26 = call i8* @compat_ptr(i32 %conv21)
  %13 = bitcast i8* %call26 to %struct.uvc_menu_info*
  %14 = bitcast %struct.uvc_menu_info* %13 to i8*
  %15 = bitcast %struct.uvc_menu_info* %0 to i8*
  %menu_count27 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %kp, i32 0, i32 9
  %16 = load i32, i32* %menu_count27, align 8, !tbaa !216
  %conv28 = zext i32 %16 to i64
  %mul = mul i64 %conv28, 36
  %conv29 = trunc i64 %mul to i32
  %call30 = call i64 @copy_in_user(i8* %14, i8* %15, i32 %conv29)
  %tobool31 = icmp ne i64 %call30, 0
  %. = select i1 %tobool31, i32 -14, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end25, %if.end17, %if.end12, %if.end, %do.body, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -14, %do.body ], [ -14, %lor.lhs.false ], [ -14, %entry ], [ -14, %if.end ], [ 0, %if.end12 ], [ -14, %if.end17 ], [ %., %if.end25 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_put_xu_query(%struct.uvc_xu_control_query* %kp, %struct.uvc_xu_control_query32* %up) #0 {
entry:
  %data = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 4
  %0 = load i8*, i8** %data, align 8, !tbaa !224
  %call = call %struct.thread_info* @current_thread_info()
  %addr_limit = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call, i32 0, i32 6
  %seg = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit, i32 0, i32 0
  %1 = load i64, i64* %seg, align 8, !tbaa !211
  %2 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(%struct.uvc_xu_control_query32* %up, i64 12, i64 %1) #9, !srcloc !231
  %asmresult = extractvalue { i64, i64 } %2, 0
  %asmresult1 = extractvalue { i64, i64 } %2, 1
  %cmp = icmp eq i64 %asmresult, 0
  %lnot = xor i1 %cmp, true
  %lnot2 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot2 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %lor.lhs.false, label %cleanup

lor.lhs.false:                                    ; preds = %entry
  %3 = bitcast %struct.uvc_xu_control_query32* %up to i8*
  %4 = bitcast %struct.uvc_xu_control_query* %kp to i8*
  %call3 = call i32 @__copy_to_user(i8* %3, i8* %4, i32 8)
  %tobool4 = icmp ne i32 %call3, 0
  br i1 %tobool4, label %cleanup, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %size = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %5 = load i16, i16* %size, align 4, !tbaa !222
  %conv5 = zext i16 %5 to i32
  %cmp6 = icmp eq i32 %conv5, 0
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.end
  call void @might_fault()
  %data10 = getelementptr inbounds %struct.uvc_xu_control_query32, %struct.uvc_xu_control_query32* %up, i32 0, i32 4
  %6 = call { i32*, i64 } asm sideeffect "call __get_user_${3:P}", "={ax},={edx},0,i,~{dirflag},~{fpsr},~{flags}"(i32* %data10, i64 4) #8, !srcloc !232
  %asmresult11 = extractvalue { i32*, i64 } %6, 0
  %asmresult12 = extractvalue { i32*, i64 } %6, 1
  %7 = ptrtoint i32* %asmresult11 to i64
  %8 = trunc i64 %7 to i32
  %conv13 = trunc i64 %asmresult12 to i32
  %tobool15 = icmp ne i32 %8, 0
  br i1 %tobool15, label %cleanup, label %if.end17

if.end17:                                         ; preds = %if.end9
  %call18 = call i8* @compat_ptr(i32 %conv13)
  %size21 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %9 = load i16, i16* %size21, align 4, !tbaa !222
  %conv22 = zext i16 %9 to i64
  %call23 = call %struct.thread_info* @current_thread_info()
  %addr_limit24 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %call23, i32 0, i32 6
  %seg25 = getelementptr inbounds %struct.pgprot, %struct.pgprot* %addr_limit24, i32 0, i32 0
  %10 = load i64, i64* %seg25, align 8, !tbaa !211
  %11 = call { i64, i64 } asm "add $3,$1 ; sbb $0,$0 ; cmp $1,$4 ; sbb $$0,$0", "=&r,=r,1,imr,rm,~{dirflag},~{fpsr},~{flags}"(i8* %call18, i64 %conv22, i64 %10) #9, !srcloc !233
  %asmresult26 = extractvalue { i64, i64 } %11, 0
  %asmresult27 = extractvalue { i64, i64 } %11, 1
  %cmp29 = icmp eq i64 %asmresult26, 0
  %lnot31 = xor i1 %cmp29, true
  %lnot33 = xor i1 %lnot31, true
  %lnot.ext34 = zext i1 %lnot33 to i32
  %conv35 = sext i32 %lnot.ext34 to i64
  %expval36 = call i64 @llvm.expect.i64(i64 %conv35, i64 1)
  %tobool37 = icmp ne i64 %expval36, 0
  br i1 %tobool37, label %if.end39, label %cleanup

if.end39:                                         ; preds = %if.end17
  %size40 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %kp, i32 0, i32 3
  %12 = load i16, i16* %size40, align 4, !tbaa !222
  %conv41 = zext i16 %12 to i32
  %call42 = call i64 @copy_in_user(i8* %call18, i8* %0, i32 %conv41)
  %tobool43 = icmp ne i64 %call42, 0
  %. = select i1 %tobool43, i32 -14, i32 0
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %if.end17, %if.end9, %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ -14, %lor.lhs.false ], [ -14, %entry ], [ 0, %if.end ], [ -14, %if.end9 ], [ -14, %if.end17 ], [ %., %if.end39 ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_to_user(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  call void @might_fault()
  %call = call i64 @copy_user_generic(i8* %dst, i8* %src, i32 %size)
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare void @might_fault() #2

declare i64 @copy_in_user(i8*, i8*, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i64 @copy_user_generic(i8* %to, i8* %from, i32 %len) #3 {
entry:
  %0 = call { i32, i8*, i8*, i32 } asm sideeffect "661:\0A\09call ${4:P}\0A662:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6631f - .\0A .word (3*32+16)\0A .byte 662b-661b\0A .byte 6641f-6631f\0A .long 661b - .\0A .long 6632f - .\0A .word (9*32+ 9)\0A .byte 662b-661b\0A .byte 6642f-6632f\0A.popsection\0A.pushsection .discard,\22aw\22,@progbits\0A .byte 0xff + (6641f-6631f) - (662b-661b)\0A .byte 0xff + (6642f-6632f) - (662b-661b)\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6631:\0A\09call ${5:P}\0A6641:\0A\096632:\0A\09call ${6:P}\0A6642:\0A\09.popsection", "={ax},={di},={si},={dx},i,i,i,1,2,3,~{memory},~{rcx},~{r8},~{r9},~{r10},~{r11},~{dirflag},~{fpsr},~{flags}"(i64 (i8*, i8*, i32)* @copy_user_generic_unrolled, i64 (i8*, i8*, i32)* @copy_user_generic_string, i64 (i8*, i8*, i32)* @copy_user_enhanced_fast_string, i8* %to, i8* %from, i32 %len) #8, !srcloc !234
  %asmresult = extractvalue { i32, i8*, i8*, i32 } %0, 0
  %asmresult1 = extractvalue { i32, i8*, i8*, i32 } %0, 1
  %asmresult2 = extractvalue { i32, i8*, i8*, i32 } %0, 2
  %asmresult3 = extractvalue { i32, i8*, i8*, i32 } %0, 3
  %conv = zext i32 %asmresult to i64
  ret i64 %conv
}

declare i64 @copy_user_generic_unrolled(i8*, i8*, i32) #2

declare i64 @copy_user_generic_string(i8*, i8*, i32) #2

declare i64 @copy_user_enhanced_fast_string(i8*, i8*, i32) #2

declare i64 @__clear_user(i8*, i64) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @__copy_from_user(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  call void @might_fault()
  %call = call i64 @copy_user_generic(i8* %dst, i8* %src, i32 %size)
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i8* @compat_alloc_user_space(i64) #2

declare void @v4l_printk_ioctl(i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @uvc_v4l2_do_ioctl(%struct.file* %file, i32 %cmd, i8* %arg) #0 {
entry:
  %xctrl = alloca %struct.v4l2_ext_control, align 1
  %xctrl47 = alloca %struct.v4l2_ext_control, align 1
  %input284 = alloca i8, align 1
  %input310 = alloca i32, align 4
  %probe = alloca %struct.uvc_streaming_control, align 1
  %call = call %struct.video_device* @video_devdata(%struct.file* %file)
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  %1 = bitcast i8* %0 to %struct.uvc_fh*
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 1
  %2 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain1, align 8, !tbaa !207
  %stream2 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 2
  %3 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream2, align 8, !tbaa !202
  %Pivot148 = icmp slt i32 %cmd, -1069263324
  br i1 %Pivot148, label %NodeBlock71, label %NodeBlock145

NodeBlock145:                                     ; preds = %entry
  %Pivot146 = icmp slt i32 %cmd, -1060088316
  br i1 %Pivot146, label %NodeBlock107, label %NodeBlock143

NodeBlock143:                                     ; preds = %NodeBlock145
  %Pivot144 = icmp slt i32 %cmd, 1074026003
  br i1 %Pivot144, label %NodeBlock121, label %NodeBlock141

NodeBlock141:                                     ; preds = %NodeBlock143
  %Pivot142 = icmp slt i32 %cmd, 1075074620
  br i1 %Pivot142, label %NodeBlock131, label %NodeBlock139

NodeBlock139:                                     ; preds = %NodeBlock141
  %Pivot140 = icmp slt i32 %cmd, 1075861082
  br i1 %Pivot140, label %LeafBlock133, label %NodeBlock137

NodeBlock137:                                     ; preds = %NodeBlock139
  %Pivot138 = icmp slt i32 %cmd, 1075861083
  br i1 %Pivot138, label %sw.bb748, label %LeafBlock135

LeafBlock135:                                     ; preds = %NodeBlock137
  %SwitchLeaf136 = icmp eq i32 %cmd, 1075861083
  br i1 %SwitchLeaf136, label %sw.bb756, label %do.body779

LeafBlock133:                                     ; preds = %NodeBlock139
  %SwitchLeaf134 = icmp eq i32 %cmd, 1075074620
  br i1 %SwitchLeaf134, label %cleanup787, label %do.body779

NodeBlock131:                                     ; preds = %NodeBlock141
  %Pivot132 = icmp slt i32 %cmd, 1074026052
  br i1 %Pivot132, label %LeafBlock123, label %NodeBlock129

NodeBlock129:                                     ; preds = %NodeBlock131
  %Pivot130 = icmp slt i32 %cmd, 1074288152
  br i1 %Pivot130, label %LeafBlock125, label %LeafBlock127

LeafBlock127:                                     ; preds = %NodeBlock129
  %SwitchLeaf128 = icmp eq i32 %cmd, 1074288152
  br i1 %SwitchLeaf128, label %do.body, label %do.body779

LeafBlock125:                                     ; preds = %NodeBlock129
  %SwitchLeaf126 = icmp eq i32 %cmd, 1074026052
  br i1 %SwitchLeaf126, label %sw.bb12, label %do.body779

LeafBlock123:                                     ; preds = %NodeBlock131
  %SwitchLeaf124 = icmp eq i32 %cmd, 1074026003
  br i1 %SwitchLeaf124, label %sw.bb725, label %do.body779

NodeBlock121:                                     ; preds = %NodeBlock143
  %Pivot122 = icmp slt i32 %cmd, -1060088256
  br i1 %Pivot122, label %NodeBlock111, label %NodeBlock119

NodeBlock119:                                     ; preds = %NodeBlock121
  %Pivot120 = icmp slt i32 %cmd, 1074025998
  br i1 %Pivot120, label %LeafBlock113, label %NodeBlock117

NodeBlock117:                                     ; preds = %NodeBlock119
  %Pivot118 = icmp slt i32 %cmd, 1074026002
  br i1 %Pivot118, label %LeafBlock115, label %sw.bb695

LeafBlock115:                                     ; preds = %NodeBlock117
  %SwitchLeaf116 = icmp eq i32 %cmd, 1074025998
  br i1 %SwitchLeaf116, label %do.body, label %do.body779

LeafBlock113:                                     ; preds = %NodeBlock119
  %SwitchLeaf114 = icmp eq i32 %cmd, -1060088256
  br i1 %SwitchLeaf114, label %sw.bb399, label %do.body779

NodeBlock111:                                     ; preds = %NodeBlock121
  %Pivot112 = icmp slt i32 %cmd, -1060088315
  br i1 %Pivot112, label %sw.bb421, label %LeafBlock109

LeafBlock109:                                     ; preds = %NodeBlock111
  %SwitchLeaf110 = icmp eq i32 %cmd, -1060088315
  br i1 %SwitchLeaf110, label %sw.bb403, label %do.body779

NodeBlock107:                                     ; preds = %NodeBlock145
  %Pivot108 = icmp slt i32 %cmd, -1067952625
  br i1 %Pivot108, label %NodeBlock89, label %NodeBlock105

NodeBlock105:                                     ; preds = %NodeBlock107
  %Pivot106 = icmp slt i32 %cmd, -1067420384
  br i1 %Pivot106, label %NodeBlock95, label %NodeBlock103

NodeBlock103:                                     ; preds = %NodeBlock105
  %Pivot104 = icmp slt i32 %cmd, -1060350443
  br i1 %Pivot104, label %LeafBlock97, label %NodeBlock101

NodeBlock101:                                     ; preds = %NodeBlock103
  %Pivot102 = icmp slt i32 %cmd, -1060350442
  br i1 %Pivot102, label %sw.bb595, label %LeafBlock99

LeafBlock99:                                      ; preds = %NodeBlock101
  %SwitchLeaf100 = icmp eq i32 %cmd, -1060350442
  br i1 %SwitchLeaf100, label %sw.bb598, label %do.body779

LeafBlock97:                                      ; preds = %NodeBlock103
  %SwitchLeaf98 = icmp eq i32 %cmd, -1067420384
  br i1 %SwitchLeaf98, label %sw.bb772, label %do.body779

NodeBlock95:                                      ; preds = %NodeBlock105
  %Pivot96 = icmp slt i32 %cmd, -1067952623
  br i1 %Pivot96, label %LeafBlock91, label %LeafBlock93

LeafBlock93:                                      ; preds = %NodeBlock95
  %SwitchLeaf94 = icmp eq i32 %cmd, -1067952623
  br i1 %SwitchLeaf94, label %sw.bb686, label %do.body779

LeafBlock91:                                      ; preds = %NodeBlock95
  %SwitchLeaf92 = icmp eq i32 %cmd, -1067952625
  br i1 %SwitchLeaf92, label %sw.bb678, label %do.body779

NodeBlock89:                                      ; preds = %NodeBlock107
  %Pivot90 = icmp slt i32 %cmd, -1069001168
  br i1 %Pivot90, label %NodeBlock77, label %NodeBlock87

NodeBlock87:                                      ; preds = %NodeBlock89
  %Pivot88 = icmp slt i32 %cmd, -1068476902
  br i1 %Pivot88, label %LeafBlock79, label %NodeBlock85

NodeBlock85:                                      ; preds = %NodeBlock87
  %Pivot86 = icmp slt i32 %cmd, -1067952631
  br i1 %Pivot86, label %LeafBlock81, label %LeafBlock83

LeafBlock83:                                      ; preds = %NodeBlock85
  %SwitchLeaf84 = icmp eq i32 %cmd, -1067952631
  br i1 %SwitchLeaf84, label %sw.bb669, label %do.body779

LeafBlock81:                                      ; preds = %NodeBlock85
  %SwitchLeaf82 = icmp eq i32 %cmd, -1068476902
  br i1 %SwitchLeaf82, label %sw.bb171, label %do.body779

LeafBlock79:                                      ; preds = %NodeBlock87
  %SwitchLeaf80 = icmp eq i32 %cmd, -1069001168
  br i1 %SwitchLeaf80, label %do.body, label %do.body779

NodeBlock77:                                      ; preds = %NodeBlock89
  %Pivot78 = icmp slt i32 %cmd, -1069001191
  br i1 %Pivot78, label %LeafBlock73, label %LeafBlock75

LeafBlock75:                                      ; preds = %NodeBlock77
  %SwitchLeaf76 = icmp eq i32 %cmd, -1069001191
  br i1 %SwitchLeaf76, label %do.body, label %do.body779

LeafBlock73:                                      ; preds = %NodeBlock77
  %SwitchLeaf74 = icmp eq i32 %cmd, -1069263324
  br i1 %SwitchLeaf74, label %sw.bb25, label %do.body779

NodeBlock71:                                      ; preds = %entry
  %Pivot72 = icmp slt i32 %cmd, -1072409080
  br i1 %Pivot72, label %NodeBlock31, label %NodeBlock69

NodeBlock69:                                      ; preds = %NodeBlock71
  %Pivot70 = icmp slt i32 %cmd, -1070836187
  br i1 %Pivot70, label %NodeBlock45, label %NodeBlock67

NodeBlock67:                                      ; preds = %NodeBlock69
  %Pivot68 = icmp slt i32 %cmd, -1070311871
  br i1 %Pivot68, label %NodeBlock55, label %NodeBlock65

NodeBlock65:                                      ; preds = %NodeBlock67
  %Pivot66 = icmp slt i32 %cmd, -1070311861
  br i1 %Pivot66, label %LeafBlock57, label %NodeBlock63

NodeBlock63:                                      ; preds = %NodeBlock65
  %Pivot64 = icmp slt i32 %cmd, -1069525502
  br i1 %Pivot64, label %LeafBlock59, label %LeafBlock61

LeafBlock61:                                      ; preds = %NodeBlock63
  %SwitchLeaf62 = icmp eq i32 %cmd, -1069525502
  br i1 %SwitchLeaf62, label %sw.bb360, label %do.body779

LeafBlock59:                                      ; preds = %NodeBlock63
  %SwitchLeaf60 = icmp eq i32 %cmd, -1070311861
  br i1 %SwitchLeaf60, label %sw.bb468, label %do.body779

LeafBlock57:                                      ; preds = %NodeBlock65
  %.off = add i32 %cmd, 1070311871
  %SwitchLeaf58 = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf58, label %do.body, label %do.body779

NodeBlock55:                                      ; preds = %NodeBlock67
  %Pivot56 = icmp slt i32 %cmd, -1070836166
  br i1 %Pivot56, label %LeafBlock47, label %NodeBlock53

NodeBlock53:                                      ; preds = %NodeBlock55
  %Pivot54 = icmp slt i32 %cmd, -1070836150
  br i1 %Pivot54, label %LeafBlock49, label %LeafBlock51

LeafBlock51:                                      ; preds = %NodeBlock53
  %SwitchLeaf52 = icmp eq i32 %cmd, -1070836150
  br i1 %SwitchLeaf52, label %sw.bb424, label %do.body779

LeafBlock49:                                      ; preds = %NodeBlock53
  %SwitchLeaf50 = icmp eq i32 %cmd, -1070836166
  br i1 %SwitchLeaf50, label %sw.bb616, label %do.body779

LeafBlock47:                                      ; preds = %NodeBlock55
  %SwitchLeaf48 = icmp eq i32 %cmd, -1070836187
  br i1 %SwitchLeaf48, label %sw.bb85, label %do.body779

NodeBlock45:                                      ; preds = %NodeBlock69
  %Pivot46 = icmp slt i32 %cmd, -1071622585
  br i1 %Pivot46, label %NodeBlock37, label %NodeBlock43

NodeBlock43:                                      ; preds = %NodeBlock45
  %Pivot44 = icmp slt i32 %cmd, -1071622584
  br i1 %Pivot44, label %sw.bb88, label %NodeBlock41

NodeBlock41:                                      ; preds = %NodeBlock43
  %Pivot42 = icmp slt i32 %cmd, -1071622583
  br i1 %Pivot42, label %sw.bb112, label %LeafBlock39

LeafBlock39:                                      ; preds = %NodeBlock41
  %SwitchLeaf40 = icmp eq i32 %cmd, -1071622583
  br i1 %SwitchLeaf40, label %sw.bb122, label %do.body779

NodeBlock37:                                      ; preds = %NodeBlock45
  %Pivot38 = icmp slt i32 %cmd, -1072409029
  br i1 %Pivot38, label %LeafBlock33, label %LeafBlock35

LeafBlock35:                                      ; preds = %NodeBlock37
  %SwitchLeaf36 = icmp eq i32 %cmd, -1072409029
  br i1 %SwitchLeaf36, label %cleanup787, label %do.body779

LeafBlock33:                                      ; preds = %NodeBlock37
  %SwitchLeaf34 = icmp eq i32 %cmd, -1072409080
  br i1 %SwitchLeaf34, label %sw.bb641, label %do.body779

NodeBlock31:                                      ; preds = %NodeBlock71
  %Pivot32 = icmp slt i32 %cmd, -2138548647
  br i1 %Pivot32, label %NodeBlock13, label %NodeBlock29

NodeBlock29:                                      ; preds = %NodeBlock31
  %Pivot30 = icmp slt i32 %cmd, -1073195493
  br i1 %Pivot30, label %NodeBlock19, label %NodeBlock27

NodeBlock27:                                      ; preds = %NodeBlock29
  %Pivot28 = icmp slt i32 %cmd, -1073195492
  br i1 %Pivot28, label %sw.bb28, label %NodeBlock25

NodeBlock25:                                      ; preds = %NodeBlock27
  %Pivot26 = icmp slt i32 %cmd, -1072663263
  br i1 %Pivot26, label %LeafBlock21, label %LeafBlock23

LeafBlock23:                                      ; preds = %NodeBlock25
  %SwitchLeaf24 = icmp eq i32 %cmd, -1072663263
  br i1 %SwitchLeaf24, label %sw.bb775, label %do.body779

LeafBlock21:                                      ; preds = %NodeBlock25
  %SwitchLeaf22 = icmp eq i32 %cmd, -1073195492
  br i1 %SwitchLeaf22, label %sw.bb45, label %do.body779

NodeBlock19:                                      ; preds = %NodeBlock29
  %Pivot20 = icmp slt i32 %cmd, -1073457625
  br i1 %Pivot20, label %LeafBlock15, label %LeafBlock17

LeafBlock17:                                      ; preds = %NodeBlock19
  %SwitchLeaf18 = icmp eq i32 %cmd, -1073457625
  br i1 %SwitchLeaf18, label %sw.bb309, label %do.body779

LeafBlock15:                                      ; preds = %NodeBlock19
  %SwitchLeaf16 = icmp eq i32 %cmd, -2138548647
  br i1 %SwitchLeaf16, label %sw.bb760, label %do.body779

NodeBlock13:                                      ; preds = %NodeBlock31
  %Pivot14 = icmp slt i32 %cmd, -2146937321
  br i1 %Pivot14, label %NodeBlock, label %NodeBlock11

NodeBlock11:                                      ; preds = %NodeBlock13
  %Pivot12 = icmp slt i32 %cmd, -2146937281
  br i1 %Pivot12, label %LeafBlock3, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %cmd, -2140645888
  br i1 %Pivot10, label %LeafBlock5, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %cmd, -2140645888
  br i1 %SwitchLeaf8, label %sw.bb, label %do.body779

LeafBlock5:                                       ; preds = %NodeBlock9
  %SwitchLeaf6 = icmp eq i32 %cmd, -2146937281
  br i1 %SwitchLeaf6, label %do.body, label %do.body779

LeafBlock3:                                       ; preds = %NodeBlock11
  %SwitchLeaf4 = icmp eq i32 %cmd, -2146937321
  br i1 %SwitchLeaf4, label %do.body, label %do.body779

NodeBlock:                                        ; preds = %NodeBlock13
  %Pivot = icmp slt i32 %cmd, -2147199421
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cmd, -2147199421
  br i1 %SwitchLeaf2, label %sw.bb10, label %do.body779

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cmd, -2147199450
  br i1 %SwitchLeaf, label %sw.bb283, label %do.body779

sw.bb:                                            ; preds = %LeafBlock7
  %4 = bitcast i8* %arg to %struct.v4l2_capability*
  %5 = bitcast %struct.v4l2_capability* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 104, i32 4, i1 false)
  %driver = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %driver, i32 0, i32 0
  %call3 = call i64 @strlcpy(i8* %arraydecay, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.283, i32 0, i32 0), i64 16)
  %card = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 1
  %arraydecay4 = getelementptr inbounds [32 x i8], [32 x i8]* %card, i32 0, i32 0
  %name = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 9
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %call6 = call i64 @strlcpy(i8* %arraydecay4, i8* %arraydecay5, i64 32)
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 1
  %6 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %bus_info = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 2
  %arraydecay7 = getelementptr inbounds [32 x i8], [32 x i8]* %bus_info, i32 0, i32 0
  call void @usb_make_path(%struct.usb_device* %7, i8* %arraydecay7, i64 32)
  %version = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 3
  store i32 199168, i32* %version, align 4, !tbaa !235
  %caps = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 7
  %8 = load i32, i32* %caps, align 8, !tbaa !101
  %or = or i32 -2080374784, %8
  %capabilities = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 4
  store i32 %or, i32* %capabilities, align 4, !tbaa !237
  %type = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 9
  %9 = load i32, i32* %type, align 8, !tbaa !99
  %cmp = icmp eq i32 %9, 1
  %device_caps = getelementptr inbounds %struct.v4l2_capability, %struct.v4l2_capability* %4, i32 0, i32 5
  %.sink = select i1 %cmp, i32 67108865, i32 67108866
  store i32 %.sink, i32* %device_caps, align 4, !tbaa !238
  br label %cleanup787

sw.bb10:                                          ; preds = %LeafBlock1
  %prio = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %10 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio, align 8, !tbaa !98
  %call11 = call i32 @v4l2_prio_max(%struct.v4l2_prio_state* %10)
  %11 = bitcast i8* %arg to i32*
  store i32 %call11, i32* %11, align 4, !tbaa !2
  br label %cleanup787

sw.bb12:                                          ; preds = %LeafBlock125
  %prio13 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %12 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio13, align 8, !tbaa !98
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio14 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh, i32 0, i32 3
  %13 = load i32, i32* %prio14, align 8, !tbaa !239
  %call15 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %12, i32 %13)
  %conv = sext i32 %call15 to i64
  %cmp16 = icmp slt i64 %conv, 0
  br i1 %cmp16, label %cleanup787, label %if.end19

if.end19:                                         ; preds = %sw.bb12
  %prio20 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %14 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio20, align 8, !tbaa !98
  %vfh21 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio22 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh21, i32 0, i32 3
  %15 = bitcast i8* %arg to i32*
  %16 = load i32, i32* %15, align 4, !tbaa !2
  %call23 = call i32 @v4l2_prio_change(%struct.v4l2_prio_state* %14, i32* %prio22, i32 %16)
  %conv24 = sext i32 %call23 to i64
  br label %cleanup787

sw.bb25:                                          ; preds = %LeafBlock73
  %17 = bitcast i8* %arg to %struct.v4l2_queryctrl*
  %call26 = call i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain* %2, %struct.v4l2_queryctrl* %17)
  %conv27 = sext i32 %call26 to i64
  br label %cleanup787

sw.bb28:                                          ; preds = %NodeBlock27
  %18 = bitcast i8* %arg to %struct.exception_table_entry*
  %19 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* %19) #8
  %20 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 20, i32 1, i1 false)
  %id = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %18, i32 0, i32 0
  %21 = load i32, i32* %id, align 4, !tbaa !240
  %id29 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  store i32 %21, i32* %id29, align 1, !tbaa !242
  %call30 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain* %2)
  %conv31 = sext i32 %call30 to i64
  %cmp32 = icmp slt i64 %conv31, 0
  br i1 %cmp32, label %cleanup, label %if.end35

if.end35:                                         ; preds = %sw.bb28
  %call36 = call i32 @uvc_ctrl_get(%struct.uvc_video_chain* %2, %struct.v4l2_ext_control* %xctrl)
  %conv37 = sext i32 %call36 to i64
  %call38 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  %cmp39 = icmp sge i64 %conv37, 0
  br i1 %cmp39, label %if.then41, label %cleanup

if.then41:                                        ; preds = %if.end35
  %22 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value = bitcast %struct.pgprot* %22 to i32*
  %23 = load i32, i32* %value, align 1, !tbaa !61
  %value42 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %18, i32 0, i32 1
  store i32 %23, i32* %value42, align 4, !tbaa !244
  br label %cleanup

cleanup:                                          ; preds = %if.then41, %if.end35, %sw.bb28
  %cleanup.dest.slot.0 = phi i32 [ 1, %sw.bb28 ], [ 2, %if.then41 ], [ 2, %if.end35 ]
  %ret.0 = phi i64 [ %conv31, %sw.bb28 ], [ %conv37, %if.then41 ], [ %conv37, %if.end35 ]
  %24 = bitcast %struct.v4l2_ext_control* %xctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 20, i8* %24) #8
  %SwitchLeaf151 = icmp eq i32 %cleanup.dest.slot.0, 2
  %ret.0.conv31 = select i1 %SwitchLeaf151, i64 %ret.0, i64 %conv31
  br label %cleanup787

sw.bb45:                                          ; preds = %LeafBlock21
  %25 = bitcast i8* %arg to %struct.exception_table_entry*
  %26 = bitcast %struct.v4l2_ext_control* %xctrl47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* %26) #8
  %prio48 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %27 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio48, align 8, !tbaa !98
  %vfh49 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio50 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh49, i32 0, i32 3
  %28 = load i32, i32* %prio50, align 8, !tbaa !239
  %call51 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %27, i32 %28)
  %conv52 = sext i32 %call51 to i64
  %cmp53 = icmp slt i64 %conv52, 0
  br i1 %cmp53, label %cleanup82, label %if.end56

if.end56:                                         ; preds = %sw.bb45
  %29 = bitcast %struct.v4l2_ext_control* %xctrl47 to i8*
  call void @llvm.memset.p0i8.i64(i8* %29, i8 0, i64 20, i32 1, i1 false)
  %id57 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %25, i32 0, i32 0
  %30 = load i32, i32* %id57, align 4, !tbaa !240
  %id58 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl47, i32 0, i32 0
  store i32 %30, i32* %id58, align 1, !tbaa !242
  %value59 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %25, i32 0, i32 1
  %31 = load i32, i32* %value59, align 4, !tbaa !244
  %32 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl47, i32 0, i32 3
  %value60 = bitcast %struct.pgprot* %32 to i32*
  store i32 %31, i32* %value60, align 1, !tbaa !61
  %call61 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain* %2)
  %conv62 = sext i32 %call61 to i64
  %cmp63 = icmp slt i64 %conv62, 0
  br i1 %cmp63, label %cleanup82, label %if.end66

if.end66:                                         ; preds = %if.end56
  %call67 = call i32 @uvc_ctrl_set(%struct.uvc_video_chain* %2, %struct.v4l2_ext_control* %xctrl47)
  %conv68 = sext i32 %call67 to i64
  %cmp69 = icmp slt i64 %conv68, 0
  br i1 %cmp69, label %if.then71, label %if.end73

if.then71:                                        ; preds = %if.end66
  %call72 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  br label %cleanup82

if.end73:                                         ; preds = %if.end66
  %call74 = call i32 @uvc_ctrl_commit(%struct.uvc_fh* %1, %struct.v4l2_ext_control* %xctrl47, i32 1)
  %conv75 = sext i32 %call74 to i64
  %cmp76 = icmp eq i64 %conv75, 0
  br i1 %cmp76, label %if.then78, label %cleanup82

if.then78:                                        ; preds = %if.end73
  %33 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl47, i32 0, i32 3
  %value79 = bitcast %struct.pgprot* %33 to i32*
  %34 = load i32, i32* %value79, align 1, !tbaa !61
  %value80 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %25, i32 0, i32 1
  store i32 %34, i32* %value80, align 4, !tbaa !244
  br label %cleanup82

cleanup82:                                        ; preds = %if.then78, %if.end73, %if.then71, %if.end56, %sw.bb45
  %cleanup.dest.slot.1 = phi i32 [ 1, %if.then71 ], [ 1, %sw.bb45 ], [ 1, %if.end56 ], [ 2, %if.then78 ], [ 2, %if.end73 ]
  %ret.1 = phi i64 [ %conv68, %if.then71 ], [ %conv52, %sw.bb45 ], [ %conv62, %if.end56 ], [ %conv75, %if.then78 ], [ %conv75, %if.end73 ]
  %retval.1 = phi i64 [ %conv68, %if.then71 ], [ %conv52, %sw.bb45 ], [ %conv62, %if.end56 ], [ undef, %if.then78 ], [ undef, %if.end73 ]
  %35 = bitcast %struct.v4l2_ext_control* %xctrl47 to i8*
  call void @llvm.lifetime.end.p0i8(i64 20, i8* %35) #8
  %SwitchLeaf154 = icmp eq i32 %cleanup.dest.slot.1, 2
  %ret.1.retval.1 = select i1 %SwitchLeaf154, i64 %ret.1, i64 %retval.1
  br label %cleanup787

sw.bb85:                                          ; preds = %LeafBlock47
  %36 = bitcast i8* %arg to %struct.v4l2_querymenu*
  %call86 = call i32 @uvc_query_v4l2_menu(%struct.uvc_video_chain* %2, %struct.v4l2_querymenu* %36)
  %conv87 = sext i32 %call86 to i64
  br label %cleanup787

sw.bb88:                                          ; preds = %NodeBlock43
  %37 = bitcast i8* %arg to %struct.v4l2_ext_controls*
  %controls = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %37, i32 0, i32 4
  %38 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls, align 8, !tbaa !245
  %call90 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain* %2)
  %conv91 = sext i32 %call90 to i64
  %cmp92 = icmp slt i64 %conv91, 0
  br i1 %cmp92, label %LeafBlock156, label %if.end95

if.end95:                                         ; preds = %sw.bb88
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end95
  %ctrl89.0 = phi %struct.v4l2_ext_control* [ %38, %if.end95 ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end95 ], [ %inc, %for.inc ]
  %count = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %37, i32 0, i32 1
  %39 = load i32, i32* %count, align 4, !tbaa !247
  %cmp96 = icmp ult i32 %i.0, %39
  br i1 %cmp96, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call98 = call i32 @uvc_ctrl_get(%struct.uvc_video_chain* %2, %struct.v4l2_ext_control* %ctrl89.0)
  %conv99 = sext i32 %call98 to i64
  %cmp100 = icmp slt i64 %conv99, 0
  br i1 %cmp100, label %if.then102, label %for.inc

if.then102:                                       ; preds = %for.body
  %call103 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  %error_idx = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %37, i32 0, i32 2
  store i32 %i.0, i32* %error_idx, align 8, !tbaa !248
  br label %LeafBlock156

for.inc:                                          ; preds = %for.body
  %incdec.ptr = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl89.0, i32 1
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %error_idx105 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %37, i32 0, i32 2
  store i32 0, i32* %error_idx105, align 8, !tbaa !248
  %call106 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  %conv107 = sext i32 %call106 to i64
  br label %LeafBlock156

LeafBlock156:                                     ; preds = %for.end, %if.then102, %sw.bb88
  %cleanup.dest.slot.2 = phi i32 [ 1, %if.then102 ], [ 2, %for.end ], [ 1, %sw.bb88 ]
  %ret.2 = phi i64 [ %conv99, %if.then102 ], [ %conv107, %for.end ], [ %conv91, %sw.bb88 ]
  %retval.2 = phi i64 [ %conv99, %if.then102 ], [ undef, %for.end ], [ %conv91, %sw.bb88 ]
  %SwitchLeaf157 = icmp eq i32 %cleanup.dest.slot.2, 2
  %ret.2.retval.2 = select i1 %SwitchLeaf157, i64 %ret.2, i64 %retval.2
  br label %cleanup787

sw.bb112:                                         ; preds = %NodeBlock41
  %prio113 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %40 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio113, align 8, !tbaa !98
  %vfh114 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio115 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh114, i32 0, i32 3
  %41 = load i32, i32* %prio115, align 8, !tbaa !239
  %call116 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %40, i32 %41)
  %conv117 = sext i32 %call116 to i64
  %cmp118 = icmp slt i64 %conv117, 0
  br i1 %cmp118, label %cleanup787, label %sw.bb122

sw.bb122:                                         ; preds = %sw.bb112, %LeafBlock39
  %42 = bitcast i8* %arg to %struct.v4l2_ext_controls*
  %controls125 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 4
  %43 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls125, align 8, !tbaa !245
  %call127 = call i32 @uvc_ctrl_begin(%struct.uvc_video_chain* %2)
  %conv128 = sext i32 %call127 to i64
  %cmp129 = icmp slt i64 %conv128, 0
  br i1 %cmp129, label %LeafBlock159, label %if.end132

if.end132:                                        ; preds = %sw.bb122
  br label %for.cond133

for.cond133:                                      ; preds = %for.inc150, %if.end132
  %ctrl124.0 = phi %struct.v4l2_ext_control* [ %43, %if.end132 ], [ %incdec.ptr151, %for.inc150 ]
  %i126.0 = phi i32 [ 0, %if.end132 ], [ %inc152, %for.inc150 ]
  %count134 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 1
  %44 = load i32, i32* %count134, align 4, !tbaa !247
  %cmp135 = icmp ult i32 %i126.0, %44
  br i1 %cmp135, label %for.body137, label %for.end153

for.body137:                                      ; preds = %for.cond133
  %call138 = call i32 @uvc_ctrl_set(%struct.uvc_video_chain* %2, %struct.v4l2_ext_control* %ctrl124.0)
  %conv139 = sext i32 %call138 to i64
  %cmp140 = icmp slt i64 %conv139, 0
  br i1 %cmp140, label %if.then142, label %for.inc150

if.then142:                                       ; preds = %for.body137
  %call143 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  %conv144 = zext i32 %cmd to i64
  %cmp145 = icmp eq i64 %conv144, 3223344712
  br i1 %cmp145, label %cond.true, label %cond.end

cond.true:                                        ; preds = %if.then142
  %count147 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 1
  %45 = load i32, i32* %count147, align 4, !tbaa !247
  br label %cond.end

cond.end:                                         ; preds = %cond.true, %if.then142
  %cond = phi i32 [ %45, %cond.true ], [ %i126.0, %if.then142 ]
  %error_idx148 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 2
  store i32 %cond, i32* %error_idx148, align 8, !tbaa !248
  br label %LeafBlock159

for.inc150:                                       ; preds = %for.body137
  %incdec.ptr151 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %ctrl124.0, i32 1
  %inc152 = add i32 %i126.0, 1
  br label %for.cond133

for.end153:                                       ; preds = %for.cond133
  %error_idx154 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 2
  store i32 0, i32* %error_idx154, align 8, !tbaa !248
  %conv155 = zext i32 %cmd to i64
  %cmp156 = icmp eq i64 %conv155, 3223344712
  br i1 %cmp156, label %if.then158, label %if.else163

if.then158:                                       ; preds = %for.end153
  %controls159 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 4
  %46 = load %struct.v4l2_ext_control*, %struct.v4l2_ext_control** %controls159, align 8, !tbaa !245
  %count160 = getelementptr inbounds %struct.v4l2_ext_controls, %struct.v4l2_ext_controls* %42, i32 0, i32 1
  %47 = load i32, i32* %count160, align 4, !tbaa !247
  %call161 = call i32 @uvc_ctrl_commit(%struct.uvc_fh* %1, %struct.v4l2_ext_control* %46, i32 %47)
  br label %if.end166

if.else163:                                       ; preds = %for.end153
  %call164 = call i32 @uvc_ctrl_rollback(%struct.uvc_fh* %1)
  br label %if.end166

if.end166:                                        ; preds = %if.else163, %if.then158
  %call164.sink = phi i32 [ %call164, %if.else163 ], [ %call161, %if.then158 ]
  %conv165 = sext i32 %call164.sink to i64
  br label %LeafBlock159

LeafBlock159:                                     ; preds = %if.end166, %cond.end, %sw.bb122
  %cleanup.dest.slot.3 = phi i32 [ 1, %cond.end ], [ 2, %if.end166 ], [ 1, %sw.bb122 ]
  %ret.4 = phi i64 [ %conv139, %cond.end ], [ %conv165, %if.end166 ], [ %conv128, %sw.bb122 ]
  %retval.3 = phi i64 [ %conv139, %cond.end ], [ undef, %if.end166 ], [ %conv128, %sw.bb122 ]
  %SwitchLeaf160 = icmp eq i32 %cleanup.dest.slot.3, 2
  %ret.4.retval.3 = select i1 %SwitchLeaf160, i64 %ret.4, i64 %retval.3
  br label %cleanup787

sw.bb171:                                         ; preds = %LeafBlock81
  %selector172 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %48 = load %struct.uvc_entity*, %struct.uvc_entity** %selector172, align 8, !tbaa !108
  %49 = bitcast i8* %arg to %struct.v4l2_input*
  %index173 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %49, i32 0, i32 0
  %50 = load i32, i32* %index173, align 8, !tbaa !249
  %cmp174 = icmp eq %struct.uvc_entity* %48, null
  br i1 %cmp174, label %if.then177, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb171
  %dev176 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %51 = load %struct.uvc_device*, %struct.uvc_device** %dev176, align 8, !tbaa !88
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %51, i32 0, i32 3
  %52 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %52, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then177, label %if.else209

if.then177:                                       ; preds = %lor.lhs.false, %sw.bb171
  %cmp178 = icmp ne i32 %50, 0
  br i1 %cmp178, label %LeafBlock162, label %if.end181

if.end181:                                        ; preds = %if.then177
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 2
  br label %for.cond182

for.cond182:                                      ; preds = %for.inc200, %if.end181
  %chain202.sink = phi %struct.list_head* [ %chain202, %for.inc200 ], [ %entities, %if.end181 ]
  %next203 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain202.sink, i32 0, i32 0
  %53 = load %struct.list_head*, %struct.list_head** %next203, align 8, !tbaa !45
  %54 = bitcast %struct.list_head* %53 to i8*
  %add.ptr205 = getelementptr inbounds i8, i8* %54, i64 -16
  %55 = bitcast i8* %add.ptr205 to %struct.uvc_entity*
  %chain183 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %55, i32 0, i32 1
  %entities184 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 2
  %cmp185 = icmp ne %struct.list_head* %chain183, %entities184
  br i1 %cmp185, label %for.body187, label %for.end206

for.body187:                                      ; preds = %for.cond182
  %type188 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %55, i32 0, i32 4
  %56 = load i16, i16* %type188, align 2, !tbaa !85
  %conv189 = zext i16 %56 to i32
  %and190 = and i32 %conv189, 65280
  %cmp191 = icmp ne i32 %and190, 0
  br i1 %cmp191, label %land.lhs.true, label %for.inc200

land.lhs.true:                                    ; preds = %for.body187
  %type193 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %55, i32 0, i32 4
  %57 = load i16, i16* %type193, align 2, !tbaa !85
  %conv194 = zext i16 %57 to i32
  %and195 = and i32 %conv194, 32768
  %cmp196 = icmp eq i32 %and195, 0
  br i1 %cmp196, label %for.end206, label %for.inc200

for.inc200:                                       ; preds = %land.lhs.true, %for.body187
  %chain202 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %55, i32 0, i32 1
  br label %for.cond182

for.end206:                                       ; preds = %land.lhs.true, %for.cond182
  %id207 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %55, i32 0, i32 3
  %58 = load i8, i8* %id207, align 4, !tbaa !91
  %conv208 = zext i8 %58 to i32
  br label %if.end253

if.else209:                                       ; preds = %lor.lhs.false
  %bNrInPins = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %48, i32 0, i32 12
  %59 = load i8, i8* %bNrInPins, align 8, !tbaa !106
  %conv210 = zext i8 %59 to i32
  %cmp211 = icmp ult i32 %50, %conv210
  br i1 %cmp211, label %if.then213, label %if.end253

if.then213:                                       ; preds = %if.else209
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %48, i32 0, i32 13
  %60 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %idxprom = zext i32 %50 to i64
  %arrayidx = getelementptr inbounds i8, i8* %60, i64 %idxprom
  %61 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv214 = zext i8 %61 to i32
  %entities216 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 2
  br label %for.cond220

for.cond220:                                      ; preds = %for.inc245, %if.then213
  %chain247.sink = phi %struct.list_head* [ %chain247, %for.inc245 ], [ %entities216, %if.then213 ]
  %next248 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain247.sink, i32 0, i32 0
  %62 = load %struct.list_head*, %struct.list_head** %next248, align 8, !tbaa !45
  %63 = bitcast %struct.list_head* %62 to i8*
  %add.ptr250 = getelementptr inbounds i8, i8* %63, i64 -16
  %64 = bitcast i8* %add.ptr250 to %struct.uvc_entity*
  %chain221 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %64, i32 0, i32 1
  %entities222 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 2
  %cmp223 = icmp ne %struct.list_head* %chain221, %entities222
  br i1 %cmp223, label %for.body225, label %if.end253

for.body225:                                      ; preds = %for.cond220
  %type226 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %64, i32 0, i32 4
  %65 = load i16, i16* %type226, align 2, !tbaa !85
  %conv227 = zext i16 %65 to i32
  %and228 = and i32 %conv227, 65280
  %cmp229 = icmp ne i32 %and228, 0
  br i1 %cmp229, label %land.lhs.true231, label %for.inc245

land.lhs.true231:                                 ; preds = %for.body225
  %type232 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %64, i32 0, i32 4
  %66 = load i16, i16* %type232, align 2, !tbaa !85
  %conv233 = zext i16 %66 to i32
  %and234 = and i32 %conv233, 32768
  %cmp235 = icmp eq i32 %and234, 0
  br i1 %cmp235, label %if.end238, label %for.inc245

if.end238:                                        ; preds = %land.lhs.true231
  %id239 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %64, i32 0, i32 3
  %67 = load i8, i8* %id239, align 4, !tbaa !91
  %conv240 = zext i8 %67 to i32
  %cmp241 = icmp eq i32 %conv240, %conv214
  br i1 %cmp241, label %if.end253, label %for.inc245

for.inc245:                                       ; preds = %if.end238, %land.lhs.true231, %for.body225
  %chain247 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %64, i32 0, i32 1
  br label %for.cond220

if.end253:                                        ; preds = %if.end238, %for.cond220, %if.else209, %for.end206
  %iterm.3 = phi %struct.uvc_entity* [ %55, %for.end206 ], [ null, %if.else209 ], [ %64, %for.cond220 ], [ %64, %if.end238 ]
  %pin.1 = phi i32 [ %conv208, %for.end206 ], [ 0, %if.else209 ], [ %conv214, %for.cond220 ], [ %conv214, %if.end238 ]
  %cmp254 = icmp eq %struct.uvc_entity* %iterm.3, null
  br i1 %cmp254, label %LeafBlock162, label %lor.lhs.false256

lor.lhs.false256:                                 ; preds = %if.end253
  %id257 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %iterm.3, i32 0, i32 3
  %68 = load i8, i8* %id257, align 4, !tbaa !91
  %conv258 = zext i8 %68 to i32
  %cmp259 = icmp ne i32 %conv258, %pin.1
  br i1 %cmp259, label %LeafBlock162, label %if.end262

if.end262:                                        ; preds = %lor.lhs.false256
  %69 = bitcast %struct.v4l2_input* %49 to i8*
  call void @llvm.memset.p0i8.i64(i8* %69, i8 0, i64 80, i32 8, i1 false)
  %index263 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %49, i32 0, i32 0
  store i32 %50, i32* %index263, align 8, !tbaa !249
  %name264 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %49, i32 0, i32 1
  %arraydecay265 = getelementptr inbounds [32 x i8], [32 x i8]* %name264, i32 0, i32 0
  %name266 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %iterm.3, i32 0, i32 5
  %arraydecay267 = getelementptr inbounds [64 x i8], [64 x i8]* %name266, i32 0, i32 0
  %call268 = call i64 @strlcpy(i8* %arraydecay265, i8* %arraydecay267, i64 32)
  %type269 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %iterm.3, i32 0, i32 4
  %70 = load i16, i16* %type269, align 2, !tbaa !85
  %conv270 = zext i16 %70 to i32
  %and271 = and i32 %conv270, 32767
  %cmp272 = icmp eq i32 %and271, 513
  br i1 %cmp272, label %if.then274, label %LeafBlock162

if.then274:                                       ; preds = %if.end262
  %type275 = getelementptr inbounds %struct.v4l2_input, %struct.v4l2_input* %49, i32 0, i32 2
  store i32 2, i32* %type275, align 4, !tbaa !251
  br label %LeafBlock162

LeafBlock162:                                     ; preds = %if.then274, %if.end262, %lor.lhs.false256, %if.end253, %if.then177
  %cleanup.dest.slot.4 = phi i32 [ 1, %if.then177 ], [ 1, %lor.lhs.false256 ], [ 1, %if.end253 ], [ 2, %if.then274 ], [ 2, %if.end262 ]
  %SwitchLeaf163 = icmp eq i32 %cleanup.dest.slot.4, 2
  %.195 = select i1 %SwitchLeaf163, i64 0, i64 -22
  br label %cleanup787

sw.bb283:                                         ; preds = %LeafBlock
  call void @llvm.lifetime.start.p0i8(i64 1, i8* %input284) #8
  %selector285 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %71 = load %struct.uvc_entity*, %struct.uvc_entity** %selector285, align 8, !tbaa !108
  %cmp286 = icmp eq %struct.uvc_entity* %71, null
  br i1 %cmp286, label %cleanup307.sink.split, label %lor.lhs.false288

lor.lhs.false288:                                 ; preds = %sw.bb283
  %dev289 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %72 = load %struct.uvc_device*, %struct.uvc_device** %dev289, align 8, !tbaa !88
  %quirks290 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %72, i32 0, i32 3
  %73 = load i32, i32* %quirks290, align 8, !tbaa !10
  %and291 = and i32 %73, 32
  %tobool292 = icmp ne i32 %and291, 0
  br i1 %tobool292, label %cleanup307.sink.split, label %if.end294

if.end294:                                        ; preds = %lor.lhs.false288
  %dev295 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %74 = load %struct.uvc_device*, %struct.uvc_device** %dev295, align 8, !tbaa !88
  %selector296 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %75 = load %struct.uvc_entity*, %struct.uvc_entity** %selector296, align 8, !tbaa !108
  %id297 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %75, i32 0, i32 3
  %76 = load i8, i8* %id297, align 4, !tbaa !91
  %dev298 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %77 = load %struct.uvc_device*, %struct.uvc_device** %dev298, align 8, !tbaa !88
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %77, i32 0, i32 4
  %78 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv299 = trunc i32 %78 to i8
  %call300 = call i32 @uvc_query_ctrl(%struct.uvc_device* %74, i8 zeroext -127, i8 zeroext %76, i8 zeroext %conv299, i8 zeroext 1, i8* %input284, i16 zeroext 1)
  %conv301 = sext i32 %call300 to i64
  %cmp302 = icmp slt i64 %conv301, 0
  br i1 %cmp302, label %cleanup307, label %if.end305

if.end305:                                        ; preds = %if.end294
  %79 = load i8, i8* %input284, align 1, !tbaa !61
  %conv306 = zext i8 %79 to i32
  %sub = sub nsw i32 %conv306, 1
  br label %cleanup307.sink.split

cleanup307.sink.split:                            ; preds = %if.end305, %lor.lhs.false288, %sw.bb283
  %sub.sink = phi i32 [ %sub, %if.end305 ], [ 0, %lor.lhs.false288 ], [ 0, %sw.bb283 ]
  %ret.5.ph = phi i64 [ %conv301, %if.end305 ], [ 0, %lor.lhs.false288 ], [ 0, %sw.bb283 ]
  %80 = bitcast i8* %arg to i32*
  store i32 %sub.sink, i32* %80, align 4, !tbaa !2
  br label %cleanup307

cleanup307:                                       ; preds = %cleanup307.sink.split, %if.end294
  %cleanup.dest.slot.5 = phi i32 [ 1, %if.end294 ], [ 2, %cleanup307.sink.split ]
  %ret.5 = phi i64 [ %conv301, %if.end294 ], [ %ret.5.ph, %cleanup307.sink.split ]
  %retval.5 = phi i64 [ %conv301, %if.end294 ], [ undef, %cleanup307.sink.split ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* %input284) #8
  %SwitchLeaf166 = icmp eq i32 %cleanup.dest.slot.5, 2
  %ret.5.retval.5 = select i1 %SwitchLeaf166, i64 %ret.5, i64 %retval.5
  br label %cleanup787

sw.bb309:                                         ; preds = %LeafBlock17
  %81 = bitcast i32* %input310 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %81) #8
  %82 = bitcast i8* %arg to i32*
  %83 = load i32, i32* %82, align 4, !tbaa !2
  %add = add i32 %83, 1
  store i32 %add, i32* %input310, align 4, !tbaa !2
  %prio311 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %84 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio311, align 8, !tbaa !98
  %vfh312 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio313 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh312, i32 0, i32 3
  %85 = load i32, i32* %prio313, align 8, !tbaa !239
  %call314 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %84, i32 %85)
  %conv315 = sext i32 %call314 to i64
  %cmp316 = icmp slt i64 %conv315, 0
  br i1 %cmp316, label %cleanup358, label %if.end319

if.end319:                                        ; preds = %sw.bb309
  %call320 = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %1)
  %conv321 = sext i32 %call320 to i64
  %cmp322 = icmp slt i64 %conv321, 0
  br i1 %cmp322, label %cleanup358, label %if.end325

if.end325:                                        ; preds = %if.end319
  %selector326 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %86 = load %struct.uvc_entity*, %struct.uvc_entity** %selector326, align 8, !tbaa !108
  %cmp327 = icmp eq %struct.uvc_entity* %86, null
  br i1 %cmp327, label %if.then334, label %lor.lhs.false329

lor.lhs.false329:                                 ; preds = %if.end325
  %dev330 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %87 = load %struct.uvc_device*, %struct.uvc_device** %dev330, align 8, !tbaa !88
  %quirks331 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %87, i32 0, i32 3
  %88 = load i32, i32* %quirks331, align 8, !tbaa !10
  %and332 = and i32 %88, 32
  %tobool333 = icmp ne i32 %and332, 0
  br i1 %tobool333, label %if.then334, label %if.end339

if.then334:                                       ; preds = %lor.lhs.false329, %if.end325
  %89 = load i32, i32* %input310, align 4, !tbaa !2
  %cmp335 = icmp ne i32 %89, 1
  %. = select i1 %cmp335, i32 1, i32 2
  %.193 = select i1 %cmp335, i64 -22, i64 undef
  br label %cleanup358

if.end339:                                        ; preds = %lor.lhs.false329
  %90 = load i32, i32* %input310, align 4, !tbaa !2
  %cmp340 = icmp eq i32 %90, 0
  br i1 %cmp340, label %cleanup358, label %lor.lhs.false342

lor.lhs.false342:                                 ; preds = %if.end339
  %91 = load i32, i32* %input310, align 4, !tbaa !2
  %selector343 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %92 = load %struct.uvc_entity*, %struct.uvc_entity** %selector343, align 8, !tbaa !108
  %bNrInPins344 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %92, i32 0, i32 12
  %93 = load i8, i8* %bNrInPins344, align 8, !tbaa !106
  %conv345 = zext i8 %93 to i32
  %cmp346 = icmp ugt i32 %91, %conv345
  br i1 %cmp346, label %cleanup358, label %if.end349

if.end349:                                        ; preds = %lor.lhs.false342
  %dev350 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %94 = load %struct.uvc_device*, %struct.uvc_device** %dev350, align 8, !tbaa !88
  %selector351 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 4
  %95 = load %struct.uvc_entity*, %struct.uvc_entity** %selector351, align 8, !tbaa !108
  %id352 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %95, i32 0, i32 3
  %96 = load i8, i8* %id352, align 4, !tbaa !91
  %dev353 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %2, i32 0, i32 0
  %97 = load %struct.uvc_device*, %struct.uvc_device** %dev353, align 8, !tbaa !88
  %intfnum354 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %97, i32 0, i32 4
  %98 = load i32, i32* %intfnum354, align 4, !tbaa !252
  %conv355 = trunc i32 %98 to i8
  %99 = bitcast i32* %input310 to i8*
  %call356 = call i32 @uvc_query_ctrl(%struct.uvc_device* %94, i8 zeroext 1, i8 zeroext %96, i8 zeroext %conv355, i8 zeroext 1, i8* %99, i16 zeroext 1)
  %conv357 = sext i32 %call356 to i64
  br label %cleanup358

cleanup358:                                       ; preds = %if.end349, %lor.lhs.false342, %if.end339, %if.then334, %if.end319, %sw.bb309
  %cleanup.dest.slot.6 = phi i32 [ 1, %if.end349 ], [ 1, %sw.bb309 ], [ 1, %if.end319 ], [ %., %if.then334 ], [ 1, %lor.lhs.false342 ], [ 1, %if.end339 ]
  %ret.6 = phi i64 [ %conv321, %if.end349 ], [ %conv315, %sw.bb309 ], [ %conv321, %if.end319 ], [ %conv321, %if.then334 ], [ %conv321, %lor.lhs.false342 ], [ %conv321, %if.end339 ]
  %retval.6 = phi i64 [ %conv357, %if.end349 ], [ %conv315, %sw.bb309 ], [ %conv321, %if.end319 ], [ %.193, %if.then334 ], [ -22, %lor.lhs.false342 ], [ -22, %if.end339 ]
  %100 = bitcast i32* %input310 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %100) #8
  %SwitchLeaf169 = icmp eq i32 %cleanup.dest.slot.6, 2
  %ret.6.retval.6 = select i1 %SwitchLeaf169, i64 %ret.6, i64 %retval.6
  br label %cleanup787

sw.bb360:                                         ; preds = %LeafBlock61
  %101 = bitcast i8* %arg to %struct.v4l2_fmtdesc*
  %type362 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 1
  %102 = load i32, i32* %type362, align 4, !tbaa !253
  %index364 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 0
  %103 = load i32, i32* %index364, align 4, !tbaa !255
  %type365 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 1
  %104 = load i32, i32* %type365, align 4, !tbaa !253
  %type366 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 9
  %105 = load i32, i32* %type366, align 8, !tbaa !99
  %cmp367 = icmp ne i32 %104, %105
  br i1 %cmp367, label %LeafBlock171, label %lor.lhs.false369

lor.lhs.false369:                                 ; preds = %sw.bb360
  %index370 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 0
  %106 = load i32, i32* %index370, align 4, !tbaa !255
  %nformats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 10
  %107 = load i32, i32* %nformats, align 4, !tbaa !132
  %cmp371 = icmp uge i32 %106, %107
  br i1 %cmp371, label %LeafBlock171, label %if.end374

if.end374:                                        ; preds = %lor.lhs.false369
  %108 = bitcast %struct.v4l2_fmtdesc* %101 to i8*
  call void @llvm.memset.p0i8.i64(i8* %108, i8 0, i64 64, i32 4, i1 false)
  %index375 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 0
  store i32 %103, i32* %index375, align 4, !tbaa !255
  %type376 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 1
  store i32 %102, i32* %type376, align 4, !tbaa !253
  %format377 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 11
  %109 = load %struct.uvc_format*, %struct.uvc_format** %format377, align 8, !tbaa !70
  %index378 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 0
  %110 = load i32, i32* %index378, align 4, !tbaa !255
  %idxprom379 = zext i32 %110 to i64
  %arrayidx380 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %109, i64 %idxprom379
  %flags = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 2
  store i32 0, i32* %flags, align 4, !tbaa !256
  %flags381 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx380, i32 0, i32 5
  %111 = load i32, i32* %flags381, align 8, !tbaa !151
  %and382 = and i32 %111, 1
  %tobool383 = icmp ne i32 %and382, 0
  br i1 %tobool383, label %if.then384, label %if.end387

if.then384:                                       ; preds = %if.end374
  %flags385 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 2
  %112 = load i32, i32* %flags385, align 4, !tbaa !256
  %or386 = or i32 %112, 1
  store i32 %or386, i32* %flags385, align 4, !tbaa !256
  br label %if.end387

if.end387:                                        ; preds = %if.then384, %if.end374
  %description = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 3
  %arraydecay388 = getelementptr inbounds [32 x i8], [32 x i8]* %description, i32 0, i32 0
  %name389 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx380, i32 0, i32 6
  %arraydecay390 = getelementptr inbounds [32 x i8], [32 x i8]* %name389, i32 0, i32 0
  %call391 = call i64 @strlcpy(i8* %arraydecay388, i8* %arraydecay390, i64 32)
  %description392 = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 3
  %arrayidx393 = getelementptr inbounds [32 x i8], [32 x i8]* %description392, i64 0, i64 31
  store i8 0, i8* %arrayidx393, align 1, !tbaa !61
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx380, i32 0, i32 4
  %113 = load i32, i32* %fcc, align 4, !tbaa !149
  %pixelformat = getelementptr inbounds %struct.v4l2_fmtdesc, %struct.v4l2_fmtdesc* %101, i32 0, i32 4
  store i32 %113, i32* %pixelformat, align 4, !tbaa !257
  br label %LeafBlock171

LeafBlock171:                                     ; preds = %if.end387, %lor.lhs.false369, %sw.bb360
  %cleanup.dest.slot.7 = phi i32 [ 2, %if.end387 ], [ 1, %lor.lhs.false369 ], [ 1, %sw.bb360 ]
  %SwitchLeaf172 = icmp eq i32 %cleanup.dest.slot.7, 2
  %.196 = select i1 %SwitchLeaf172, i64 0, i64 -22
  br label %cleanup787

sw.bb399:                                         ; preds = %LeafBlock113
  %114 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %114) #8
  %115 = bitcast i8* %arg to %struct.v4l2_format*
  %call400 = call i32 @uvc_v4l2_try_format(%struct.uvc_streaming* %3, %struct.v4l2_format* %115, %struct.uvc_streaming_control* %probe, %struct.uvc_format** null, %struct.uvc_frame** null)
  %conv401 = sext i32 %call400 to i64
  %116 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %116) #8
  br label %cleanup787

sw.bb403:                                         ; preds = %LeafBlock109
  %prio404 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %117 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio404, align 8, !tbaa !98
  %vfh405 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio406 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh405, i32 0, i32 3
  %118 = load i32, i32* %prio406, align 8, !tbaa !239
  %call407 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %117, i32 %118)
  %conv408 = sext i32 %call407 to i64
  %cmp409 = icmp slt i64 %conv408, 0
  br i1 %cmp409, label %cleanup787, label %if.end412

if.end412:                                        ; preds = %sw.bb403
  %call413 = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %1)
  %conv414 = sext i32 %call413 to i64
  %cmp415 = icmp slt i64 %conv414, 0
  br i1 %cmp415, label %cleanup787, label %if.end418

if.end418:                                        ; preds = %if.end412
  %119 = bitcast i8* %arg to %struct.v4l2_format*
  %call419 = call i32 @uvc_v4l2_set_format(%struct.uvc_streaming* %3, %struct.v4l2_format* %119)
  %conv420 = sext i32 %call419 to i64
  br label %cleanup787

sw.bb421:                                         ; preds = %NodeBlock111
  %120 = bitcast i8* %arg to %struct.v4l2_format*
  %call422 = call i32 @uvc_v4l2_get_format(%struct.uvc_streaming* %3, %struct.v4l2_format* %120)
  %conv423 = sext i32 %call422 to i64
  br label %cleanup787

sw.bb424:                                         ; preds = %LeafBlock51
  %121 = bitcast i8* %arg to %struct.v4l2_frmsizeenum*
  br label %for.cond427

for.cond427:                                      ; preds = %for.inc443, %sw.bb424
  %i426.0 = phi i32 [ 0, %sw.bb424 ], [ %inc444, %for.inc443 ]
  %nformats428 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 10
  %122 = load i32, i32* %nformats428, align 4, !tbaa !132
  %cmp429 = icmp ult i32 %i426.0, %122
  br i1 %cmp429, label %for.body431, label %for.end445

for.body431:                                      ; preds = %for.cond427
  %format432 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 11
  %123 = load %struct.uvc_format*, %struct.uvc_format** %format432, align 8, !tbaa !70
  %idxprom433 = sext i32 %i426.0 to i64
  %arrayidx434 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %123, i64 %idxprom433
  %fcc435 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx434, i32 0, i32 4
  %124 = load i32, i32* %fcc435, align 4, !tbaa !149
  %pixel_format = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 1
  %125 = load i32, i32* %pixel_format, align 4, !tbaa !258
  %cmp436 = icmp eq i32 %124, %125
  br i1 %cmp436, label %if.then438, label %for.inc443

if.then438:                                       ; preds = %for.body431
  %format439 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 11
  %126 = load %struct.uvc_format*, %struct.uvc_format** %format439, align 8, !tbaa !70
  %idxprom440 = sext i32 %i426.0 to i64
  %arrayidx441 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %126, i64 %idxprom440
  br label %for.end445

for.inc443:                                       ; preds = %for.body431
  %inc444 = add nsw i32 %i426.0, 1
  br label %for.cond427

for.end445:                                       ; preds = %if.then438, %for.cond427
  %format425.0 = phi %struct.uvc_format* [ %arrayidx441, %if.then438 ], [ null, %for.cond427 ]
  %cmp446 = icmp eq %struct.uvc_format* %format425.0, null
  br i1 %cmp446, label %LeafBlock174, label %if.end449

if.end449:                                        ; preds = %for.end445
  %index450 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 0
  %127 = load i32, i32* %index450, align 4, !tbaa !260
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format425.0, i32 0, i32 7
  %128 = load i32, i32* %nframes, align 4, !tbaa !135
  %cmp451 = icmp uge i32 %127, %128
  br i1 %cmp451, label %LeafBlock174, label %if.end454

if.end454:                                        ; preds = %if.end449
  %frame455 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format425.0, i32 0, i32 8
  %129 = load %struct.uvc_frame*, %struct.uvc_frame** %frame455, align 8, !tbaa !133
  %index456 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 0
  %130 = load i32, i32* %index456, align 4, !tbaa !260
  %idxprom457 = zext i32 %130 to i64
  %arrayidx458 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %129, i64 %idxprom457
  %type459 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 2
  store i32 1, i32* %type459, align 4, !tbaa !261
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx458, i32 0, i32 2
  %131 = load i16, i16* %wWidth, align 2, !tbaa !158
  %conv460 = zext i16 %131 to i32
  %132 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 3
  %discrete = bitcast %union.anon.55* %132 to %struct.exception_table_entry*
  %width = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete, i32 0, i32 0
  store i32 %conv460, i32* %width, align 4, !tbaa !61
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx458, i32 0, i32 3
  %133 = load i16, i16* %wHeight, align 4, !tbaa !159
  %conv461 = zext i16 %133 to i32
  %134 = getelementptr inbounds %struct.v4l2_frmsizeenum, %struct.v4l2_frmsizeenum* %121, i32 0, i32 3
  %discrete462 = bitcast %union.anon.55* %134 to %struct.exception_table_entry*
  %height = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete462, i32 0, i32 1
  store i32 %conv461, i32* %height, align 4, !tbaa !61
  br label %LeafBlock174

LeafBlock174:                                     ; preds = %if.end454, %if.end449, %for.end445
  %cleanup.dest.slot.8 = phi i32 [ 2, %if.end454 ], [ 1, %for.end445 ], [ 1, %if.end449 ]
  %SwitchLeaf175 = icmp eq i32 %cleanup.dest.slot.8, 2
  %.197 = select i1 %SwitchLeaf175, i64 0, i64 -22
  br label %cleanup787

sw.bb468:                                         ; preds = %LeafBlock59
  %135 = bitcast i8* %arg to %struct.v4l2_frmivalenum*
  br label %for.cond472

for.cond472:                                      ; preds = %for.inc489, %sw.bb468
  %i471.0 = phi i32 [ 0, %sw.bb468 ], [ %inc490, %for.inc489 ]
  %nformats473 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 10
  %136 = load i32, i32* %nformats473, align 4, !tbaa !132
  %cmp474 = icmp ult i32 %i471.0, %136
  br i1 %cmp474, label %for.body476, label %for.end491

for.body476:                                      ; preds = %for.cond472
  %format477 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 11
  %137 = load %struct.uvc_format*, %struct.uvc_format** %format477, align 8, !tbaa !70
  %idxprom478 = sext i32 %i471.0 to i64
  %arrayidx479 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %137, i64 %idxprom478
  %fcc480 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx479, i32 0, i32 4
  %138 = load i32, i32* %fcc480, align 4, !tbaa !149
  %pixel_format481 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 1
  %139 = load i32, i32* %pixel_format481, align 4, !tbaa !262
  %cmp482 = icmp eq i32 %138, %139
  br i1 %cmp482, label %if.then484, label %for.inc489

if.then484:                                       ; preds = %for.body476
  %format485 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 11
  %140 = load %struct.uvc_format*, %struct.uvc_format** %format485, align 8, !tbaa !70
  %idxprom486 = sext i32 %i471.0 to i64
  %arrayidx487 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %140, i64 %idxprom486
  br label %for.end491

for.inc489:                                       ; preds = %for.body476
  %inc490 = add nsw i32 %i471.0, 1
  br label %for.cond472

for.end491:                                       ; preds = %if.then484, %for.cond472
  %format469.0 = phi %struct.uvc_format* [ %arrayidx487, %if.then484 ], [ null, %for.cond472 ]
  %cmp492 = icmp eq %struct.uvc_format* %format469.0, null
  br i1 %cmp492, label %LeafBlock177, label %if.end495

if.end495:                                        ; preds = %for.end491
  br label %for.cond496

for.cond496:                                      ; preds = %for.inc523, %if.end495
  %i471.1 = phi i32 [ 0, %if.end495 ], [ %inc524, %for.inc523 ]
  %nframes497 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format469.0, i32 0, i32 7
  %141 = load i32, i32* %nframes497, align 4, !tbaa !135
  %cmp498 = icmp ult i32 %i471.1, %141
  br i1 %cmp498, label %for.body500, label %for.end525

for.body500:                                      ; preds = %for.cond496
  %frame501 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format469.0, i32 0, i32 8
  %142 = load %struct.uvc_frame*, %struct.uvc_frame** %frame501, align 8, !tbaa !133
  %idxprom502 = sext i32 %i471.1 to i64
  %arrayidx503 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %142, i64 %idxprom502
  %wWidth504 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx503, i32 0, i32 2
  %143 = load i16, i16* %wWidth504, align 2, !tbaa !158
  %conv505 = zext i16 %143 to i32
  %width506 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 2
  %144 = load i32, i32* %width506, align 4, !tbaa !264
  %cmp507 = icmp eq i32 %conv505, %144
  br i1 %cmp507, label %land.lhs.true509, label %for.inc523

land.lhs.true509:                                 ; preds = %for.body500
  %frame510 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format469.0, i32 0, i32 8
  %145 = load %struct.uvc_frame*, %struct.uvc_frame** %frame510, align 8, !tbaa !133
  %idxprom511 = sext i32 %i471.1 to i64
  %arrayidx512 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %145, i64 %idxprom511
  %wHeight513 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx512, i32 0, i32 3
  %146 = load i16, i16* %wHeight513, align 4, !tbaa !159
  %conv514 = zext i16 %146 to i32
  %height515 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 3
  %147 = load i32, i32* %height515, align 4, !tbaa !265
  %cmp516 = icmp eq i32 %conv514, %147
  br i1 %cmp516, label %if.then518, label %for.inc523

if.then518:                                       ; preds = %land.lhs.true509
  %frame519 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format469.0, i32 0, i32 8
  %148 = load %struct.uvc_frame*, %struct.uvc_frame** %frame519, align 8, !tbaa !133
  %idxprom520 = sext i32 %i471.1 to i64
  %arrayidx521 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %148, i64 %idxprom520
  br label %for.end525

for.inc523:                                       ; preds = %land.lhs.true509, %for.body500
  %inc524 = add nsw i32 %i471.1, 1
  br label %for.cond496

for.end525:                                       ; preds = %if.then518, %for.cond496
  %frame470.0 = phi %struct.uvc_frame* [ %arrayidx521, %if.then518 ], [ null, %for.cond496 ]
  %cmp526 = icmp eq %struct.uvc_frame* %frame470.0, null
  br i1 %cmp526, label %LeafBlock177, label %if.end529

if.end529:                                        ; preds = %for.end525
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 7
  %149 = load i8, i8* %bFrameIntervalType, align 4, !tbaa !152
  %tobool530 = icmp ne i8 %149, 0
  br i1 %tobool530, label %if.then531, label %if.else549

if.then531:                                       ; preds = %if.end529
  %index532 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 0
  %150 = load i32, i32* %index532, align 4, !tbaa !266
  %bFrameIntervalType533 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 7
  %151 = load i8, i8* %bFrameIntervalType533, align 4, !tbaa !152
  %conv534 = zext i8 %151 to i32
  %cmp535 = icmp uge i32 %150, %conv534
  br i1 %cmp535, label %LeafBlock177, label %if.end538

if.end538:                                        ; preds = %if.then531
  %type539 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 4
  store i32 1, i32* %type539, align 4, !tbaa !267
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 9
  %152 = load i32*, i32** %dwFrameInterval, align 8, !tbaa !155
  %index540 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 0
  %153 = load i32, i32* %index540, align 4, !tbaa !266
  %idxprom541 = zext i32 %153 to i64
  %arrayidx542 = getelementptr inbounds i32, i32* %152, i64 %idxprom541
  %154 = load i32, i32* %arrayidx542, align 4, !tbaa !2
  %155 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %discrete543 = bitcast %union.anon.56* %155 to %struct.exception_table_entry*
  %numerator = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete543, i32 0, i32 0
  store i32 %154, i32* %numerator, align 4, !tbaa !61
  %156 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %discrete544 = bitcast %union.anon.56* %156 to %struct.exception_table_entry*
  %denominator = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete544, i32 0, i32 1
  store i32 10000000, i32* %denominator, align 4, !tbaa !61
  %157 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %discrete545 = bitcast %union.anon.56* %157 to %struct.exception_table_entry*
  %numerator546 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete545, i32 0, i32 0
  %158 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %discrete547 = bitcast %union.anon.56* %158 to %struct.exception_table_entry*
  %denominator548 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %discrete547, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator546, i32* %denominator548, i32 8, i32 333)
  br label %LeafBlock177

if.else549:                                       ; preds = %if.end529
  %type550 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 4
  store i32 3, i32* %type550, align 4, !tbaa !267
  %dwFrameInterval551 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 9
  %159 = load i32*, i32** %dwFrameInterval551, align 8, !tbaa !155
  %arrayidx552 = getelementptr inbounds i32, i32* %159, i64 0
  %160 = load i32, i32* %arrayidx552, align 4, !tbaa !2
  %161 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise = bitcast %union.anon.56* %161 to %struct.v4l2_frmival_stepwise*
  %min = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise, i32 0, i32 0
  %numerator553 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %min, i32 0, i32 0
  store i32 %160, i32* %numerator553, align 4, !tbaa !61
  %162 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise554 = bitcast %union.anon.56* %162 to %struct.v4l2_frmival_stepwise*
  %min555 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise554, i32 0, i32 0
  %denominator556 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %min555, i32 0, i32 1
  store i32 10000000, i32* %denominator556, align 4, !tbaa !61
  %dwFrameInterval557 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 9
  %163 = load i32*, i32** %dwFrameInterval557, align 8, !tbaa !155
  %arrayidx558 = getelementptr inbounds i32, i32* %163, i64 1
  %164 = load i32, i32* %arrayidx558, align 4, !tbaa !2
  %165 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise559 = bitcast %union.anon.56* %165 to %struct.v4l2_frmival_stepwise*
  %max = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise559, i32 0, i32 1
  %numerator560 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %max, i32 0, i32 0
  store i32 %164, i32* %numerator560, align 4, !tbaa !61
  %166 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise561 = bitcast %union.anon.56* %166 to %struct.v4l2_frmival_stepwise*
  %max562 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise561, i32 0, i32 1
  %denominator563 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %max562, i32 0, i32 1
  store i32 10000000, i32* %denominator563, align 4, !tbaa !61
  %dwFrameInterval564 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame470.0, i32 0, i32 9
  %167 = load i32*, i32** %dwFrameInterval564, align 8, !tbaa !155
  %arrayidx565 = getelementptr inbounds i32, i32* %167, i64 2
  %168 = load i32, i32* %arrayidx565, align 4, !tbaa !2
  %169 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise566 = bitcast %union.anon.56* %169 to %struct.v4l2_frmival_stepwise*
  %step = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise566, i32 0, i32 2
  %numerator567 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %step, i32 0, i32 0
  store i32 %168, i32* %numerator567, align 4, !tbaa !61
  %170 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise568 = bitcast %union.anon.56* %170 to %struct.v4l2_frmival_stepwise*
  %step569 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise568, i32 0, i32 2
  %denominator570 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %step569, i32 0, i32 1
  store i32 10000000, i32* %denominator570, align 4, !tbaa !61
  %171 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise571 = bitcast %union.anon.56* %171 to %struct.v4l2_frmival_stepwise*
  %min572 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise571, i32 0, i32 0
  %numerator573 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %min572, i32 0, i32 0
  %172 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise574 = bitcast %union.anon.56* %172 to %struct.v4l2_frmival_stepwise*
  %min575 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise574, i32 0, i32 0
  %denominator576 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %min575, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator573, i32* %denominator576, i32 8, i32 333)
  %173 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise577 = bitcast %union.anon.56* %173 to %struct.v4l2_frmival_stepwise*
  %max578 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise577, i32 0, i32 1
  %numerator579 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %max578, i32 0, i32 0
  %174 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise580 = bitcast %union.anon.56* %174 to %struct.v4l2_frmival_stepwise*
  %max581 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise580, i32 0, i32 1
  %denominator582 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %max581, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator579, i32* %denominator582, i32 8, i32 333)
  %175 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise583 = bitcast %union.anon.56* %175 to %struct.v4l2_frmival_stepwise*
  %step584 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise583, i32 0, i32 2
  %numerator585 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %step584, i32 0, i32 0
  %176 = getelementptr inbounds %struct.v4l2_frmivalenum, %struct.v4l2_frmivalenum* %135, i32 0, i32 5
  %stepwise586 = bitcast %union.anon.56* %176 to %struct.v4l2_frmival_stepwise*
  %step587 = getelementptr inbounds %struct.v4l2_frmival_stepwise, %struct.v4l2_frmival_stepwise* %stepwise586, i32 0, i32 2
  %denominator588 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %step587, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator585, i32* %denominator588, i32 8, i32 333)
  br label %LeafBlock177

LeafBlock177:                                     ; preds = %if.else549, %if.end538, %if.then531, %for.end525, %for.end491
  %cleanup.dest.slot.9 = phi i32 [ 1, %for.end491 ], [ 1, %for.end525 ], [ 1, %if.then531 ], [ 2, %if.else549 ], [ 2, %if.end538 ]
  %SwitchLeaf178 = icmp eq i32 %cleanup.dest.slot.9, 2
  %.198 = select i1 %SwitchLeaf178, i64 0, i64 -22
  br label %cleanup787

sw.bb595:                                         ; preds = %NodeBlock101
  %177 = bitcast i8* %arg to %struct.v4l2_streamparm*
  %call596 = call i32 @uvc_v4l2_get_streamparm(%struct.uvc_streaming* %3, %struct.v4l2_streamparm* %177)
  %conv597 = sext i32 %call596 to i64
  br label %cleanup787

sw.bb598:                                         ; preds = %LeafBlock99
  %prio599 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %178 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio599, align 8, !tbaa !98
  %vfh600 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio601 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh600, i32 0, i32 3
  %179 = load i32, i32* %prio601, align 8, !tbaa !239
  %call602 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %178, i32 %179)
  %conv603 = sext i32 %call602 to i64
  %cmp604 = icmp slt i64 %conv603, 0
  br i1 %cmp604, label %cleanup787, label %if.end607

if.end607:                                        ; preds = %sw.bb598
  %call608 = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %1)
  %conv609 = sext i32 %call608 to i64
  %cmp610 = icmp slt i64 %conv609, 0
  br i1 %cmp610, label %cleanup787, label %if.end613

if.end613:                                        ; preds = %if.end607
  %180 = bitcast i8* %arg to %struct.v4l2_streamparm*
  %call614 = call i32 @uvc_v4l2_set_streamparm(%struct.uvc_streaming* %3, %struct.v4l2_streamparm* %180)
  %conv615 = sext i32 %call614 to i64
  br label %cleanup787

sw.bb616:                                         ; preds = %LeafBlock49
  %181 = bitcast i8* %arg to %struct.v4l2_cropcap*
  %type617 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 0
  %182 = load i32, i32* %type617, align 4, !tbaa !268
  %type618 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 9
  %183 = load i32, i32* %type618, align 8, !tbaa !99
  %cmp619 = icmp ne i32 %182, %183
  br i1 %cmp619, label %LeafBlock180, label %if.end622

if.end622:                                        ; preds = %sw.bb616
  %bounds = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 1
  %left = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %bounds, i32 0, i32 0
  store i32 0, i32* %left, align 4, !tbaa !272
  %bounds623 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 1
  %top = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %bounds623, i32 0, i32 1
  store i32 0, i32* %top, align 4, !tbaa !273
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %cur_frame = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 15
  %184 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !274
  %wWidth624 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %184, i32 0, i32 2
  %185 = load i16, i16* %wWidth624, align 2, !tbaa !158
  %conv625 = zext i16 %185 to i32
  %bounds626 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 1
  %width627 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %bounds626, i32 0, i32 2
  store i32 %conv625, i32* %width627, align 4, !tbaa !275
  %cur_frame628 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 15
  %186 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame628, align 8, !tbaa !274
  %wHeight629 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %186, i32 0, i32 3
  %187 = load i16, i16* %wHeight629, align 4, !tbaa !159
  %conv630 = zext i16 %187 to i32
  %bounds631 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 1
  %height632 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %bounds631, i32 0, i32 3
  store i32 %conv630, i32* %height632, align 4, !tbaa !276
  %mutex633 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex633)
  %defrect = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 2
  %bounds634 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 1
  %188 = bitcast %struct.usb3_lpm_parameters* %defrect to i8*
  %189 = bitcast %struct.usb3_lpm_parameters* %bounds634 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %188, i8* %189, i64 16, i32 4, i1 false), !tbaa.struct !277
  %pixelaspect = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 3
  %numerator635 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %pixelaspect, i32 0, i32 0
  store i32 1, i32* %numerator635, align 4, !tbaa !278
  %pixelaspect636 = getelementptr inbounds %struct.v4l2_cropcap, %struct.v4l2_cropcap* %181, i32 0, i32 3
  %denominator637 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %pixelaspect636, i32 0, i32 1
  store i32 1, i32* %denominator637, align 4, !tbaa !279
  br label %LeafBlock180

LeafBlock180:                                     ; preds = %if.end622, %sw.bb616
  %cleanup.dest.slot.10 = phi i32 [ 2, %if.end622 ], [ 1, %sw.bb616 ]
  %SwitchLeaf181 = icmp eq i32 %cleanup.dest.slot.10, 2
  %.199 = select i1 %SwitchLeaf181, i64 0, i64 -22
  br label %cleanup787

sw.bb641:                                         ; preds = %LeafBlock33
  %prio642 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %190 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio642, align 8, !tbaa !98
  %vfh643 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio644 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh643, i32 0, i32 3
  %191 = load i32, i32* %prio644, align 8, !tbaa !239
  %call645 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %190, i32 %191)
  %conv646 = sext i32 %call645 to i64
  %cmp647 = icmp slt i64 %conv646, 0
  br i1 %cmp647, label %cleanup787, label %if.end650

if.end650:                                        ; preds = %sw.bb641
  %call651 = call i32 @uvc_acquire_privileges(%struct.uvc_fh* %1)
  %conv652 = sext i32 %call651 to i64
  %cmp653 = icmp slt i64 %conv652, 0
  br i1 %cmp653, label %cleanup787, label %if.end656

if.end656:                                        ; preds = %if.end650
  %mutex657 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex657, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 18
  %192 = bitcast i8* %arg to %struct.v4l2_requestbuffers*
  %call658 = call i32 @uvc_alloc_buffers(%struct.uvc_video_queue* %queue, %struct.v4l2_requestbuffers* %192)
  %conv659 = sext i32 %call658 to i64
  %mutex660 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex660)
  %cmp661 = icmp slt i64 %conv659, 0
  br i1 %cmp661, label %cleanup787, label %if.end664

if.end664:                                        ; preds = %if.end656
  %cmp665 = icmp eq i64 %conv659, 0
  br i1 %cmp665, label %if.then667, label %cleanup787

if.then667:                                       ; preds = %if.end664
  call void @uvc_dismiss_privileges(%struct.uvc_fh* %1)
  br label %cleanup787

sw.bb669:                                         ; preds = %LeafBlock83
  %193 = bitcast i8* %arg to %struct.v4l2_buffer*
  %call670 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool671 = icmp ne i32 %call670, 0
  br i1 %tobool671, label %if.end673, label %cleanup787

if.end673:                                        ; preds = %sw.bb669
  %queue674 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 18
  %call675 = call i32 @uvc_query_buffer(%struct.uvc_video_queue* %queue674, %struct.v4l2_buffer* %193)
  %conv676 = sext i32 %call675 to i64
  br label %cleanup787

sw.bb678:                                         ; preds = %LeafBlock91
  %call679 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool680 = icmp ne i32 %call679, 0
  br i1 %tobool680, label %if.end682, label %cleanup787

if.end682:                                        ; preds = %sw.bb678
  %queue683 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 18
  %194 = bitcast i8* %arg to %struct.v4l2_buffer*
  %call684 = call i32 @uvc_queue_buffer(%struct.uvc_video_queue* %queue683, %struct.v4l2_buffer* %194)
  %conv685 = sext i32 %call684 to i64
  br label %cleanup787

sw.bb686:                                         ; preds = %LeafBlock93
  %call687 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool688 = icmp ne i32 %call687, 0
  br i1 %tobool688, label %if.end690, label %cleanup787

if.end690:                                        ; preds = %sw.bb686
  %queue691 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 18
  %195 = bitcast i8* %arg to %struct.v4l2_buffer*
  %f_flags = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 7
  %196 = load i32, i32* %f_flags, align 8, !tbaa !280
  %and692 = and i32 %196, 2048
  %call693 = call i32 @uvc_dequeue_buffer(%struct.uvc_video_queue* %queue691, %struct.v4l2_buffer* %195, i32 %and692)
  %conv694 = sext i32 %call693 to i64
  br label %cleanup787

sw.bb695:                                         ; preds = %NodeBlock117
  %197 = bitcast i8* %arg to i32*
  %198 = load i32, i32* %197, align 4, !tbaa !2
  %type697 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 9
  %199 = load i32, i32* %type697, align 8, !tbaa !99
  %cmp698 = icmp ne i32 %198, %199
  br i1 %cmp698, label %LeafBlock183, label %if.end701

if.end701:                                        ; preds = %sw.bb695
  %prio702 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %200 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio702, align 8, !tbaa !98
  %vfh703 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio704 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh703, i32 0, i32 3
  %201 = load i32, i32* %prio704, align 8, !tbaa !239
  %call705 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %200, i32 %201)
  %conv706 = sext i32 %call705 to i64
  %cmp707 = icmp slt i64 %conv706, 0
  br i1 %cmp707, label %LeafBlock183, label %if.end710

if.end710:                                        ; preds = %if.end701
  %call711 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool712 = icmp ne i32 %call711, 0
  br i1 %tobool712, label %if.end714, label %LeafBlock183

if.end714:                                        ; preds = %if.end710
  %mutex715 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex715, i32 0)
  %call716 = call i32 @uvc_video_enable(%struct.uvc_streaming* %3, i32 1)
  %conv717 = sext i32 %call716 to i64
  %mutex718 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex718)
  %cmp719 = icmp slt i64 %conv717, 0
  %.194 = select i1 %cmp719, i32 1, i32 2
  %conv717. = select i1 %cmp719, i64 %conv717, i64 undef
  br label %LeafBlock183

LeafBlock183:                                     ; preds = %if.end714, %if.end710, %if.end701, %sw.bb695
  %cleanup.dest.slot.11 = phi i32 [ 1, %sw.bb695 ], [ 1, %if.end701 ], [ 1, %if.end710 ], [ %.194, %if.end714 ]
  %ret.7 = phi i64 [ 0, %sw.bb695 ], [ %conv706, %if.end701 ], [ %conv706, %if.end710 ], [ %conv717, %if.end714 ]
  %retval.12 = phi i64 [ -22, %sw.bb695 ], [ %conv706, %if.end701 ], [ -16, %if.end710 ], [ %conv717., %if.end714 ]
  %SwitchLeaf184 = icmp eq i32 %cleanup.dest.slot.11, 2
  %ret.7.retval.12 = select i1 %SwitchLeaf184, i64 %ret.7, i64 %retval.12
  br label %UnifiedReturnBlock

sw.bb725:                                         ; preds = %LeafBlock123
  %202 = bitcast i8* %arg to i32*
  %203 = load i32, i32* %202, align 4, !tbaa !2
  %type727 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %3, i32 0, i32 9
  %204 = load i32, i32* %type727, align 8, !tbaa !99
  %cmp728 = icmp ne i32 %203, %204
  br i1 %cmp728, label %cleanup787, label %if.end731

if.end731:                                        ; preds = %sw.bb725
  %prio732 = getelementptr inbounds %struct.video_device, %struct.video_device* %call, i32 0, i32 8
  %205 = load %struct.v4l2_prio_state*, %struct.v4l2_prio_state** %prio732, align 8, !tbaa !98
  %vfh733 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %prio734 = getelementptr inbounds %struct.v4l2_fh, %struct.v4l2_fh* %vfh733, i32 0, i32 3
  %206 = load i32, i32* %prio734, align 8, !tbaa !239
  %call735 = call i32 @v4l2_prio_check(%struct.v4l2_prio_state* %205, i32 %206)
  %conv736 = sext i32 %call735 to i64
  %cmp737 = icmp slt i64 %conv736, 0
  br i1 %cmp737, label %cleanup787, label %if.end740

if.end740:                                        ; preds = %if.end731
  %call741 = call i32 @uvc_has_privileges(%struct.uvc_fh* %1)
  %tobool742 = icmp ne i32 %call741, 0
  br i1 %tobool742, label %if.end744, label %cleanup787

if.end744:                                        ; preds = %if.end740
  %call745 = call i32 @uvc_video_enable(%struct.uvc_streaming* %3, i32 0)
  %conv746 = sext i32 %call745 to i64
  br label %cleanup787

sw.bb748:                                         ; preds = %NodeBlock137
  %207 = bitcast i8* %arg to %struct.v4l2_event_subscription*
  %type750 = getelementptr inbounds %struct.v4l2_event_subscription, %struct.v4l2_event_subscription* %207, i32 0, i32 0
  %208 = load i32, i32* %type750, align 4, !tbaa !281
  %SwitchLeaf187 = icmp eq i32 %208, 3
  br i1 %SwitchLeaf187, label %sw.bb751, label %cleanup787

sw.bb751:                                         ; preds = %sw.bb748
  %vfh752 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %call753 = call i32 @v4l2_event_subscribe(%struct.v4l2_fh* %vfh752, %struct.v4l2_event_subscription* %207, i32 0, %struct.v4l2_subscribed_event_ops* bitcast ({ i32 (%struct.v4l2_subscribed_event.1203*, i32)*, void (%struct.v4l2_subscribed_event.1203*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)*, void (%struct.v4l2_event*, %struct.v4l2_event*)* }* @uvc_ctrl_sub_ev_ops to %struct.v4l2_subscribed_event_ops*))
  %conv754 = sext i32 %call753 to i64
  br label %cleanup787

sw.bb756:                                         ; preds = %LeafBlock135
  %vfh757 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %209 = bitcast i8* %arg to %struct.v4l2_event_subscription*
  %call758 = call i32 @v4l2_event_unsubscribe(%struct.v4l2_fh* %vfh757, %struct.v4l2_event_subscription* %209)
  %conv759 = sext i32 %call758 to i64
  br label %cleanup787

sw.bb760:                                         ; preds = %LeafBlock15
  %vfh761 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %1, i32 0, i32 0
  %210 = bitcast i8* %arg to %struct.v4l2_event*
  %f_flags762 = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 7
  %211 = load i32, i32* %f_flags762, align 8, !tbaa !280
  %and763 = and i32 %211, 2048
  %call764 = call i32 @v4l2_event_dequeue(%struct.v4l2_fh* %vfh761, %struct.v4l2_event* %210, i32 %and763)
  %conv765 = sext i32 %call764 to i64
  br label %cleanup787

do.body:                                          ; preds = %LeafBlock3, %LeafBlock5, %LeafBlock57, %LeafBlock75, %LeafBlock79, %LeafBlock115, %LeafBlock127
  %212 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and767 = and i32 %212, 64
  %tobool768 = icmp ne i32 %and767, 0
  br i1 %tobool768, label %if.then769, label %cleanup787

if.then769:                                       ; preds = %do.body
  %call770 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.5.23, i32 0, i32 0), i32 %cmd)
  br label %cleanup787

sw.bb772:                                         ; preds = %LeafBlock97
  %213 = bitcast i8* %arg to %struct.uvc_xu_control_mapping*
  %call773 = call i32 @uvc_ioctl_ctrl_map(%struct.uvc_video_chain* %2, %struct.uvc_xu_control_mapping* %213)
  %conv774 = sext i32 %call773 to i64
  br label %cleanup787

sw.bb775:                                         ; preds = %LeafBlock23
  %214 = bitcast i8* %arg to %struct.uvc_xu_control_query*
  %call776 = call i32 @uvc_xu_ctrl_query(%struct.uvc_video_chain* %2, %struct.uvc_xu_control_query* %214)
  %conv777 = sext i32 %call776 to i64
  br label %cleanup787

do.body779:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock7, %LeafBlock15, %LeafBlock17, %LeafBlock21, %LeafBlock23, %LeafBlock33, %LeafBlock35, %LeafBlock39, %LeafBlock47, %LeafBlock49, %LeafBlock51, %LeafBlock57, %LeafBlock59, %LeafBlock61, %LeafBlock73, %LeafBlock75, %LeafBlock79, %LeafBlock81, %LeafBlock83, %LeafBlock91, %LeafBlock93, %LeafBlock97, %LeafBlock99, %LeafBlock109, %LeafBlock113, %LeafBlock115, %LeafBlock123, %LeafBlock125, %LeafBlock127, %LeafBlock133, %LeafBlock135
  %215 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and780 = and i32 %215, 64
  %tobool781 = icmp ne i32 %and780, 0
  br i1 %tobool781, label %if.then782, label %cleanup787

if.then782:                                       ; preds = %do.body779
  %call783 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6.24, i32 0, i32 0), i32 %cmd)
  br label %cleanup787

cleanup787:                                       ; preds = %if.then782, %do.body779, %sw.bb775, %sw.bb772, %if.then769, %do.body, %sw.bb760, %sw.bb756, %sw.bb751, %sw.bb748, %if.end744, %if.end740, %if.end731, %sw.bb725, %if.end690, %sw.bb686, %if.end682, %sw.bb678, %if.end673, %sw.bb669, %if.then667, %if.end664, %if.end656, %if.end650, %sw.bb641, %LeafBlock180, %if.end613, %if.end607, %sw.bb598, %sw.bb595, %LeafBlock177, %LeafBlock174, %sw.bb421, %if.end418, %if.end412, %sw.bb403, %sw.bb399, %LeafBlock171, %cleanup358, %cleanup307, %LeafBlock162, %LeafBlock159, %sw.bb112, %LeafBlock156, %sw.bb85, %cleanup82, %cleanup, %sw.bb25, %if.end19, %sw.bb12, %sw.bb10, %sw.bb, %LeafBlock35, %LeafBlock133
  %retval.15 = phi i64 [ %conv765, %sw.bb760 ], [ %conv777, %sw.bb775 ], [ %conv87, %sw.bb85 ], [ %conv27, %sw.bb25 ], [ %conv685, %if.end682 ], [ %conv694, %if.end690 ], [ %conv774, %sw.bb772 ], [ %conv597, %sw.bb595 ], [ %conv615, %if.end613 ], [ %conv423, %sw.bb421 ], [ %conv420, %if.end418 ], [ %conv401, %sw.bb399 ], [ %conv24, %if.end19 ], [ %conv759, %sw.bb756 ], [ %conv, %sw.bb12 ], [ %conv117, %sw.bb112 ], [ %conv408, %sw.bb403 ], [ %conv414, %if.end412 ], [ %conv603, %sw.bb598 ], [ %conv609, %if.end607 ], [ -25, %LeafBlock133 ], [ -25, %LeafBlock35 ], [ %conv646, %sw.bb641 ], [ %conv652, %if.end650 ], [ %conv659, %if.end656 ], [ %conv676, %if.end673 ], [ -16, %sw.bb669 ], [ -16, %sw.bb678 ], [ -16, %sw.bb686 ], [ %conv746, %if.end744 ], [ -22, %sw.bb725 ], [ %conv736, %if.end731 ], [ -16, %if.end740 ], [ %conv754, %sw.bb751 ], [ -22, %sw.bb748 ], [ -25, %if.then769 ], [ -25, %do.body ], [ -25, %if.then782 ], [ -25, %do.body779 ], [ 0, %sw.bb10 ], [ 0, %sw.bb ], [ 0, %if.then667 ], [ 0, %if.end664 ], [ %ret.0.conv31, %cleanup ], [ %ret.1.retval.1, %cleanup82 ], [ %ret.2.retval.2, %LeafBlock156 ], [ %ret.4.retval.3, %LeafBlock159 ], [ %.195, %LeafBlock162 ], [ %ret.5.retval.5, %cleanup307 ], [ %ret.6.retval.6, %cleanup358 ], [ %.196, %LeafBlock171 ], [ %.197, %LeafBlock174 ], [ %.198, %LeafBlock177 ], [ %.199, %LeafBlock180 ]
  br label %UnifiedReturnBlock

UnifiedReturnBlock:                               ; preds = %cleanup787, %LeafBlock183
  %UnifiedRetVal = phi i64 [ %ret.7.retval.12, %LeafBlock183 ], [ %retval.15, %cleanup787 ]
  ret i64 %UnifiedRetVal
}

declare i64 @video_usercopy(%struct.file*, i32, i64, i64 (%struct.file*, i32, i8*)*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_make_path(%struct.usb_device* %dev, i8* %buf, i64 %size) #1 {
entry:
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 9
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !283
  %bus_name = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %0, i32 0, i32 2
  %1 = load i8*, i8** %bus_name, align 8, !tbaa !284
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buf, i64 %size, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.255, i32 0, i32 0), i8* %1, i8* %arraydecay)
  %conv = trunc i64 %size to i32
  %cmp = icmp sge i32 %call, %conv
  %.call = select i1 %cmp, i32 -1, i32 %call
  ret void
}

declare i32 @v4l2_prio_max(%struct.v4l2_prio_state*) #2

declare i32 @v4l2_prio_check(%struct.v4l2_prio_state*, i32) #2

declare i32 @v4l2_prio_change(%struct.v4l2_prio_state*, i32*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_ctrl_rollback(%struct.uvc_fh* %handle) #1 {
entry:
  %call = call i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 1, %struct.v4l2_ext_control* null, i32 0)
  ret i32 %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_ctrl_commit(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #1 {
entry:
  %call = call i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 0, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_acquire_privileges(%struct.uvc_fh* %handle) #0 {
entry:
  %state = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  %0 = load i32, i32* %state, align 8, !tbaa !208
  %cmp = icmp eq i32 %0, 1
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %stream = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %1 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream, align 8, !tbaa !202
  %active = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 4
  %call = call i32 @atomic_add_return(i32 1, %union.anon.5* %active)
  %cmp1 = icmp ne i32 %call, 1
  br i1 %cmp1, label %if.then2, label %if.end5

if.then2:                                         ; preds = %if.end
  %stream3 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 2
  %2 = load %struct.uvc_streaming*, %struct.uvc_streaming** %stream3, align 8, !tbaa !202
  %active4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %2, i32 0, i32 4
  call void @atomic_dec(%union.anon.5* %active4)
  br label %return

if.end5:                                          ; preds = %if.end
  %state6 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 3
  store i32 1, i32* %state6, align 8, !tbaa !208
  br label %return

return:                                           ; preds = %if.end5, %if.then2, %entry
  %retval.0 = phi i32 [ -16, %if.then2 ], [ 0, %if.end5 ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_try_format(%struct.uvc_streaming* %stream, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** %uvc_format, %struct.uvc_frame** %uvc_frame) #0 {
entry:
  %_min1 = alloca i16, align 2
  %_min2 = alloca i16, align 2
  %_min165 = alloca i16, align 2
  %_min266 = alloca i16, align 2
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !287
  %type1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %1 = load i32, i32* %type1, align 8, !tbaa !99
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %cleanup180, label %if.end

if.end:                                           ; preds = %entry
  %fmt2 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.60* %fmt2 to %struct.v4l2_pix_format*
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  %2 = bitcast i32* %pixelformat to i8*
  %3 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %3, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then3, label %do.end

if.then3:                                         ; preds = %if.end
  %fmt4 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix5 = bitcast %union.anon.60* %fmt4 to %struct.v4l2_pix_format*
  %pixelformat6 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix5, i32 0, i32 2
  %4 = load i32, i32* %pixelformat6, align 8, !tbaa !61
  %arrayidx = getelementptr inbounds i8, i8* %2, i64 0
  %5 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %5 to i32
  %arrayidx7 = getelementptr inbounds i8, i8* %2, i64 1
  %6 = load i8, i8* %arrayidx7, align 1, !tbaa !61
  %conv8 = zext i8 %6 to i32
  %arrayidx9 = getelementptr inbounds i8, i8* %2, i64 2
  %7 = load i8, i8* %arrayidx9, align 1, !tbaa !61
  %conv10 = zext i8 %7 to i32
  %arrayidx11 = getelementptr inbounds i8, i8* %2, i64 3
  %8 = load i8, i8* %arrayidx11, align 1, !tbaa !61
  %conv12 = zext i8 %8 to i32
  %fmt13 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix14 = bitcast %union.anon.60* %fmt13 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix14, i32 0, i32 0
  %9 = load i32, i32* %width, align 8, !tbaa !61
  %fmt15 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix16 = bitcast %union.anon.60* %fmt15 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix16, i32 0, i32 1
  %10 = load i32, i32* %height, align 4, !tbaa !61
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.8.29, i32 0, i32 0), i32 %4, i32 %conv, i32 %conv8, i32 %conv10, i32 %conv12, i32 %9, i32 %10)
  br label %do.end

do.end:                                           ; preds = %if.then3, %if.end
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %do.end
  %format.0 = phi %struct.uvc_format* [ null, %do.end ], [ %arrayidx21, %for.inc ]
  %i.0 = phi i32 [ 0, %do.end ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 10
  %11 = load i32, i32* %nformats, align 4, !tbaa !132
  %cmp18 = icmp ult i32 %i.0, %11
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format20 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 11
  %12 = load %struct.uvc_format*, %struct.uvc_format** %format20, align 8, !tbaa !70
  %idxprom = zext i32 %i.0 to i64
  %arrayidx21 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %12, i64 %idxprom
  %fcc22 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx21, i32 0, i32 4
  %13 = load i32, i32* %fcc22, align 4, !tbaa !149
  %fmt23 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix24 = bitcast %union.anon.60* %fmt23 to %struct.v4l2_pix_format*
  %pixelformat25 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix24, i32 0, i32 2
  %14 = load i32, i32* %pixelformat25, align 8, !tbaa !61
  %cmp26 = icmp eq i32 %13, %14
  br i1 %cmp26, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %format.1 = phi %struct.uvc_format* [ %arrayidx21, %for.body ], [ %format.0, %for.cond ]
  %nformats30 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 10
  %15 = load i32, i32* %nformats30, align 4, !tbaa !132
  %cmp31 = icmp eq i32 %i.0, %15
  br i1 %cmp31, label %if.then33, label %if.end38

if.then33:                                        ; preds = %for.end
  %def_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 13
  %16 = load %struct.uvc_format*, %struct.uvc_format** %def_format, align 8, !tbaa !289
  %fcc34 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %16, i32 0, i32 4
  %17 = load i32, i32* %fcc34, align 4, !tbaa !149
  %fmt35 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix36 = bitcast %union.anon.60* %fmt35 to %struct.v4l2_pix_format*
  %pixelformat37 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix36, i32 0, i32 2
  store i32 %17, i32* %pixelformat37, align 8, !tbaa !61
  br label %if.end38

if.end38:                                         ; preds = %if.then33, %for.end
  %format.2 = phi %struct.uvc_format* [ %16, %if.then33 ], [ %format.1, %for.end ]
  %fmt39 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix40 = bitcast %union.anon.60* %fmt39 to %struct.v4l2_pix_format*
  %width41 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix40, i32 0, i32 0
  %18 = load i32, i32* %width41, align 8, !tbaa !61
  %conv42 = trunc i32 %18 to i16
  %fmt43 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix44 = bitcast %union.anon.60* %fmt43 to %struct.v4l2_pix_format*
  %height45 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix44, i32 0, i32 1
  %19 = load i32, i32* %height45, align 4, !tbaa !61
  %conv46 = trunc i32 %19 to i16
  br label %for.cond47

for.cond47:                                       ; preds = %for.inc99, %if.end38
  %frame.0 = phi %struct.uvc_frame* [ null, %if.end38 ], [ %frame.1, %for.inc99 ]
  %maxd.0 = phi i32 [ -1, %if.end38 ], [ %maxd.1, %for.inc99 ]
  %i.1 = phi i32 [ 0, %if.end38 ], [ %inc100, %for.inc99 ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 7
  %20 = load i32, i32* %nframes, align 4, !tbaa !135
  %cmp48 = icmp ult i32 %i.1, %20
  br i1 %cmp48, label %for.body50, label %for.end101

for.body50:                                       ; preds = %for.cond47
  %frame51 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %21 = load %struct.uvc_frame*, %struct.uvc_frame** %frame51, align 8, !tbaa !133
  %idxprom52 = zext i32 %i.1 to i64
  %arrayidx53 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %21, i64 %idxprom52
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx53, i32 0, i32 2
  %22 = load i16, i16* %wWidth, align 2, !tbaa !158
  %frame54 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %23 = load %struct.uvc_frame*, %struct.uvc_frame** %frame54, align 8, !tbaa !133
  %idxprom55 = zext i32 %i.1 to i64
  %arrayidx56 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %23, i64 %idxprom55
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx56, i32 0, i32 3
  %24 = load i16, i16* %wHeight, align 4, !tbaa !159
  %25 = bitcast i16* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %25) #8
  store i16 %22, i16* %_min1, align 2, !tbaa !165
  %26 = bitcast i16* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %26) #8
  store i16 %conv42, i16* %_min2, align 2, !tbaa !165
  %cmp57 = icmp eq i16* %_min1, %_min2
  %conv58 = zext i1 %cmp57 to i32
  %27 = load i16, i16* %_min1, align 2, !tbaa !165
  %conv59 = zext i16 %27 to i32
  %28 = load i16, i16* %_min2, align 2, !tbaa !165
  %conv60 = zext i16 %28 to i32
  %cmp61 = icmp slt i32 %conv59, %conv60
  %29 = load i16, i16* %_min2, align 2
  %30 = load i16, i16* %_min1, align 2
  %.sink = select i1 %cmp61, i16 %30, i16 %29
  %conv64 = zext i16 %.sink to i32
  %31 = bitcast i16* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %31) #8
  %32 = bitcast i16* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %32) #8
  %33 = bitcast i16* %_min165 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %33) #8
  store i16 %24, i16* %_min165, align 2, !tbaa !165
  %34 = bitcast i16* %_min266 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* %34) #8
  store i16 %conv46, i16* %_min266, align 2, !tbaa !165
  %cmp67 = icmp eq i16* %_min165, %_min266
  %conv68 = zext i1 %cmp67 to i32
  %35 = load i16, i16* %_min165, align 2, !tbaa !165
  %conv70 = zext i16 %35 to i32
  %36 = load i16, i16* %_min266, align 2, !tbaa !165
  %conv71 = zext i16 %36 to i32
  %cmp72 = icmp slt i32 %conv70, %conv71
  %37 = load i16, i16* %_min266, align 2
  %38 = load i16, i16* %_min165, align 2
  %.sink1 = select i1 %cmp72, i16 %38, i16 %37
  %conv77 = zext i16 %.sink1 to i32
  %39 = bitcast i16* %_min266 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %39) #8
  %40 = bitcast i16* %_min165 to i8*
  call void @llvm.lifetime.end.p0i8(i64 2, i8* %40) #8
  %mul = mul nsw i32 %conv64, %conv77
  %conv80 = zext i16 %22 to i32
  %conv81 = zext i16 %24 to i32
  %mul82 = mul nsw i32 %conv80, %conv81
  %conv83 = zext i16 %conv42 to i32
  %conv84 = zext i16 %conv46 to i32
  %mul85 = mul nsw i32 %conv83, %conv84
  %add = add nsw i32 %mul82, %mul85
  %mul86 = mul i32 2, %mul
  %sub = sub i32 %add, %mul86
  %cmp87 = icmp ult i32 %sub, %maxd.0
  br i1 %cmp87, label %if.then89, label %if.end93

if.then89:                                        ; preds = %for.body50
  %frame90 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 8
  %41 = load %struct.uvc_frame*, %struct.uvc_frame** %frame90, align 8, !tbaa !133
  %idxprom91 = zext i32 %i.1 to i64
  %arrayidx92 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %41, i64 %idxprom91
  br label %if.end93

if.end93:                                         ; preds = %if.then89, %for.body50
  %frame.1 = phi %struct.uvc_frame* [ %arrayidx92, %if.then89 ], [ %frame.0, %for.body50 ]
  %maxd.1 = phi i32 [ %sub, %if.then89 ], [ %maxd.0, %for.body50 ]
  %cmp94 = icmp eq i32 %maxd.1, 0
  %. = select i1 %cmp94, i32 7, i32 0
  %SwitchLeaf = icmp eq i32 %., 7
  br i1 %SwitchLeaf, label %for.end101, label %for.inc99

for.inc99:                                        ; preds = %if.end93
  %inc100 = add i32 %i.1, 1
  br label %for.cond47

for.end101:                                       ; preds = %if.end93, %for.cond47
  %frame.2 = phi %struct.uvc_frame* [ %frame.1, %if.end93 ], [ %frame.0, %for.cond47 ]
  %cmp102 = icmp eq %struct.uvc_frame* %frame.2, null
  br i1 %cmp102, label %do.body105, label %if.end119

do.body105:                                       ; preds = %for.end101
  %42 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and106 = and i32 %42, 8
  %tobool107 = icmp ne i32 %and106, 0
  br i1 %tobool107, label %if.then108, label %cleanup180

if.then108:                                       ; preds = %do.body105
  %fmt109 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix110 = bitcast %union.anon.60* %fmt109 to %struct.v4l2_pix_format*
  %width111 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix110, i32 0, i32 0
  %43 = load i32, i32* %width111, align 8, !tbaa !61
  %fmt112 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix113 = bitcast %union.anon.60* %fmt112 to %struct.v4l2_pix_format*
  %height114 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix113, i32 0, i32 1
  %44 = load i32, i32* %height114, align 4, !tbaa !61
  %call115 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.9.30, i32 0, i32 0), i32 %43, i32 %44)
  br label %cleanup180

if.end119:                                        ; preds = %for.end101
  %dwDefaultFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 8
  %45 = load i32, i32* %dwDefaultFrameInterval, align 8, !tbaa !154
  %46 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and121 = and i32 %46, 8
  %tobool122 = icmp ne i32 %and121, 0
  br i1 %tobool122, label %if.then123, label %do.end130

if.then123:                                       ; preds = %if.end119
  %div = udiv i32 %45, 10
  %rem = urem i32 %45, 10
  %div124 = udiv i32 10000000, %45
  %div125 = udiv i32 100000000, %45
  %rem126 = urem i32 %div125, 10
  %call127 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.10.31, i32 0, i32 0), i32 %div, i32 %rem, i32 %div124, i32 %rem126)
  br label %do.end130

do.end130:                                        ; preds = %if.then123, %if.end119
  %47 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.memset.p0i8.i64(i8* %47, i8 0, i64 34, i32 1, i1 false)
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 0
  store i16 1, i16* %bmHint, align 1, !tbaa !290
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 1
  %48 = load i8, i8* %index, align 1, !tbaa !145
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 1
  store i8 %48, i8* %bFormatIndex, align 1, !tbaa !291
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 0
  %49 = load i8, i8* %bFrameIndex, align 8, !tbaa !156
  %bFrameIndex131 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 2
  store i8 %49, i8* %bFrameIndex131, align 1, !tbaa !292
  %call132 = call i32 @uvc_try_frame_interval(%struct.uvc_frame* %frame.2, i32 %45)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  store i32 %call132, i32* %dwFrameInterval, align 1, !tbaa !293
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %50 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %50, i32 0, i32 3
  %51 = load i32, i32* %quirks, align 8, !tbaa !10
  %and133 = and i32 %51, 4
  %tobool134 = icmp ne i32 %and133, 0
  br i1 %tobool134, label %if.then135, label %if.end137

if.then135:                                       ; preds = %do.end130
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %52 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !174
  %dwMaxVideoFrameSize136 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 9
  store i32 %52, i32* %dwMaxVideoFrameSize136, align 1, !tbaa !294
  br label %if.end137

if.end137:                                        ; preds = %if.then135, %do.end130
  %call138 = call i32 @uvc_probe_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe)
  %mutex139 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex139)
  %cmp140 = icmp slt i32 %call138, 0
  br i1 %cmp140, label %cleanup180, label %if.end143

if.end143:                                        ; preds = %if.end137
  %wWidth144 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 2
  %53 = load i16, i16* %wWidth144, align 2, !tbaa !158
  %conv145 = zext i16 %53 to i32
  %fmt146 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix147 = bitcast %union.anon.60* %fmt146 to %struct.v4l2_pix_format*
  %width148 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix147, i32 0, i32 0
  store i32 %conv145, i32* %width148, align 8, !tbaa !61
  %wHeight149 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 3
  %54 = load i16, i16* %wHeight149, align 4, !tbaa !159
  %conv150 = zext i16 %54 to i32
  %fmt151 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix152 = bitcast %union.anon.60* %fmt151 to %struct.v4l2_pix_format*
  %height153 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix152, i32 0, i32 1
  store i32 %conv150, i32* %height153, align 4, !tbaa !61
  %fmt154 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix155 = bitcast %union.anon.60* %fmt154 to %struct.v4l2_pix_format*
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix155, i32 0, i32 3
  store i32 1, i32* %field, align 4, !tbaa !61
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 2
  %55 = load i8, i8* %bpp, align 2, !tbaa !150
  %conv156 = zext i8 %55 to i32
  %wWidth157 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.2, i32 0, i32 2
  %56 = load i16, i16* %wWidth157, align 2, !tbaa !158
  %conv158 = zext i16 %56 to i32
  %mul159 = mul nsw i32 %conv156, %conv158
  %div160 = sdiv i32 %mul159, 8
  %fmt161 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix162 = bitcast %union.anon.60* %fmt161 to %struct.v4l2_pix_format*
  %bytesperline = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix162, i32 0, i32 4
  store i32 %div160, i32* %bytesperline, align 8, !tbaa !61
  %dwMaxVideoFrameSize163 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 9
  %57 = load i32, i32* %dwMaxVideoFrameSize163, align 1, !tbaa !294
  %fmt164 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix165 = bitcast %union.anon.60* %fmt164 to %struct.v4l2_pix_format*
  %sizeimage = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix165, i32 0, i32 5
  store i32 %57, i32* %sizeimage, align 4, !tbaa !61
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.2, i32 0, i32 3
  %58 = load i8, i8* %colorspace, align 1, !tbaa !163
  %conv166 = zext i8 %58 to i32
  %fmt167 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix168 = bitcast %union.anon.60* %fmt167 to %struct.v4l2_pix_format*
  %colorspace169 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix168, i32 0, i32 6
  store i32 %conv166, i32* %colorspace169, align 8, !tbaa !61
  %fmt170 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix171 = bitcast %union.anon.60* %fmt170 to %struct.v4l2_pix_format*
  %priv = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix171, i32 0, i32 7
  store i32 0, i32* %priv, align 4, !tbaa !61
  %cmp172 = icmp ne %struct.uvc_format** %uvc_format, null
  br i1 %cmp172, label %if.then174, label %if.end175

if.then174:                                       ; preds = %if.end143
  store %struct.uvc_format* %format.2, %struct.uvc_format** %uvc_format, align 8, !tbaa !45
  br label %if.end175

if.end175:                                        ; preds = %if.then174, %if.end143
  %cmp176 = icmp ne %struct.uvc_frame** %uvc_frame, null
  br i1 %cmp176, label %if.then178, label %cleanup180

if.then178:                                       ; preds = %if.end175
  store %struct.uvc_frame* %frame.2, %struct.uvc_frame** %uvc_frame, align 8, !tbaa !45
  br label %cleanup180

cleanup180:                                       ; preds = %if.then178, %if.end175, %if.end137, %if.then108, %do.body105, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ -22, %if.then108 ], [ -22, %do.body105 ], [ %call138, %if.end175 ], [ %call138, %if.then178 ], [ %call138, %if.end137 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_set_format(%struct.uvc_streaming* %stream, %struct.v4l2_format* %fmt) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %format = alloca %struct.uvc_format*, align 8
  %frame = alloca %struct.uvc_frame*, align 8
  %0 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.uvc_format** %format to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %2 = bitcast %struct.uvc_frame** %frame to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %3 = load i32, i32* %type, align 8, !tbaa !287
  %type1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %4 = load i32, i32* %type1, align 8, !tbaa !99
  %cmp = icmp ne i32 %3, %4
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_v4l2_try_format(%struct.uvc_streaming* %stream, %struct.v4l2_format* %fmt, %struct.uvc_streaming_control* %probe, %struct.uvc_format** %format, %struct.uvc_frame** %frame)
  %cmp2 = icmp slt i32 %call, 0
  br i1 %cmp2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call5 = call i32 @uvc_queue_allocated(%struct.uvc_video_queue* %queue)
  %tobool = icmp ne i32 %call5, 0
  br i1 %tobool, label %done, label %if.end7

if.end7:                                          ; preds = %if.end4
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %5 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  %6 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 34, i32 1, i1 false), !tbaa.struct !295
  %7 = load %struct.uvc_format*, %struct.uvc_format** %format, align 8, !tbaa !45
  %cur_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 14
  store %struct.uvc_format* %7, %struct.uvc_format** %cur_format, align 8, !tbaa !296
  %8 = load %struct.uvc_frame*, %struct.uvc_frame** %frame, align 8, !tbaa !45
  %cur_frame = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 15
  store %struct.uvc_frame* %8, %struct.uvc_frame** %cur_frame, align 8, !tbaa !274
  br label %done

done:                                             ; preds = %if.end7, %if.end4
  %ret.0 = phi i32 [ %call, %if.end7 ], [ -16, %if.end4 ]
  %mutex8 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex8)
  br label %cleanup

cleanup:                                          ; preds = %done, %if.end, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %entry ], [ %call, %if.end ]
  %9 = bitcast %struct.uvc_frame** %frame to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast %struct.uvc_format** %format to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %11 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %11) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_format(%struct.uvc_streaming* %stream, %struct.v4l2_format* %fmt) #0 {
entry:
  %type = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 0
  %0 = load i32, i32* %type, align 8, !tbaa !287
  %type1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %1 = load i32, i32* %type1, align 8, !tbaa !99
  %cmp = icmp ne i32 %0, %1
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %cur_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 14
  %2 = load %struct.uvc_format*, %struct.uvc_format** %cur_format, align 8, !tbaa !296
  %cur_frame = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 15
  %3 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !274
  %cmp2 = icmp eq %struct.uvc_format* %2, null
  %cmp3 = icmp eq %struct.uvc_frame* %3, null
  %or.cond = or i1 %cmp2, %cmp3
  br i1 %or.cond, label %done, label %if.end5

if.end5:                                          ; preds = %if.end
  %fcc = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 4
  %4 = load i32, i32* %fcc, align 4, !tbaa !149
  %fmt6 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix = bitcast %union.anon.60* %fmt6 to %struct.v4l2_pix_format*
  %pixelformat = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix, i32 0, i32 2
  store i32 %4, i32* %pixelformat, align 8, !tbaa !61
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %3, i32 0, i32 2
  %5 = load i16, i16* %wWidth, align 2, !tbaa !158
  %conv = zext i16 %5 to i32
  %fmt7 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix8 = bitcast %union.anon.60* %fmt7 to %struct.v4l2_pix_format*
  %width = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix8, i32 0, i32 0
  store i32 %conv, i32* %width, align 8, !tbaa !61
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %3, i32 0, i32 3
  %6 = load i16, i16* %wHeight, align 4, !tbaa !159
  %conv9 = zext i16 %6 to i32
  %fmt10 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix11 = bitcast %union.anon.60* %fmt10 to %struct.v4l2_pix_format*
  %height = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix11, i32 0, i32 1
  store i32 %conv9, i32* %height, align 4, !tbaa !61
  %fmt12 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix13 = bitcast %union.anon.60* %fmt12 to %struct.v4l2_pix_format*
  %field = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix13, i32 0, i32 3
  store i32 1, i32* %field, align 4, !tbaa !61
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 2
  %7 = load i8, i8* %bpp, align 2, !tbaa !150
  %conv14 = zext i8 %7 to i32
  %wWidth15 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %3, i32 0, i32 2
  %8 = load i16, i16* %wWidth15, align 2, !tbaa !158
  %conv16 = zext i16 %8 to i32
  %mul = mul nsw i32 %conv14, %conv16
  %div = sdiv i32 %mul, 8
  %fmt17 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix18 = bitcast %union.anon.60* %fmt17 to %struct.v4l2_pix_format*
  %bytesperline = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix18, i32 0, i32 4
  store i32 %div, i32* %bytesperline, align 8, !tbaa !61
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %9 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !174
  %fmt19 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix20 = bitcast %union.anon.60* %fmt19 to %struct.v4l2_pix_format*
  %sizeimage = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix20, i32 0, i32 5
  store i32 %9, i32* %sizeimage, align 4, !tbaa !61
  %colorspace = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %2, i32 0, i32 3
  %10 = load i8, i8* %colorspace, align 1, !tbaa !163
  %conv21 = zext i8 %10 to i32
  %fmt22 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix23 = bitcast %union.anon.60* %fmt22 to %struct.v4l2_pix_format*
  %colorspace24 = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix23, i32 0, i32 6
  store i32 %conv21, i32* %colorspace24, align 8, !tbaa !61
  %fmt25 = getelementptr inbounds %struct.v4l2_format, %struct.v4l2_format* %fmt, i32 0, i32 1
  %pix26 = bitcast %union.anon.60* %fmt25 to %struct.v4l2_pix_format*
  %priv = getelementptr inbounds %struct.v4l2_pix_format, %struct.v4l2_pix_format* %pix26, i32 0, i32 7
  store i32 0, i32* %priv, align 4, !tbaa !61
  br label %done

done:                                             ; preds = %if.end5, %if.end
  %ret.0 = phi i32 [ 0, %if.end5 ], [ -22, %if.end ]
  %mutex27 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex27)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_get_streamparm(%struct.uvc_streaming* %stream, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %numerator = alloca i32, align 4
  %denominator = alloca i32, align 4
  %0 = bitcast i32* %numerator to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %1 = bitcast i32* %denominator to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %type = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !297
  %type1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %3 = load i32, i32* %type1, align 8, !tbaa !99
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %4 = load i32, i32* %dwFrameInterval, align 4, !tbaa !299
  store i32 %4, i32* %numerator, align 4, !tbaa !2
  %mutex2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex2)
  store i32 10000000, i32* %denominator, align 4, !tbaa !2
  call void @uvc_simplify_fraction(i32* %numerator, i32* %denominator, i32 8, i32 333)
  %5 = bitcast %struct.v4l2_streamparm* %parm to i8*
  call void @llvm.memset.p0i8.i64(i8* %5, i8 0, i64 204, i32 4, i1 false)
  %type3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %6 = load i32, i32* %type3, align 8, !tbaa !99
  %type4 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  store i32 %6, i32* %type4, align 4, !tbaa !297
  %type5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %7 = load i32, i32* %type5, align 8, !tbaa !99
  %cmp6 = icmp eq i32 %7, 1
  %parm8 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp6, label %if.then7, label %if.else

if.then7:                                         ; preds = %if.end
  %capture = bitcast %union.anon.54* %parm8 to %struct.v4l2_captureparm*
  %capability = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture, i32 0, i32 0
  store i32 4096, i32* %capability, align 4, !tbaa !61
  %parm9 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture10 = bitcast %union.anon.54* %parm9 to %struct.v4l2_captureparm*
  %capturemode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture10, i32 0, i32 1
  store i32 0, i32* %capturemode, align 4, !tbaa !61
  %8 = load i32, i32* %numerator, align 4, !tbaa !2
  %parm11 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture12 = bitcast %union.anon.54* %parm11 to %struct.v4l2_captureparm*
  %timeperframe = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture12, i32 0, i32 2
  %numerator13 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 0
  store i32 %8, i32* %numerator13, align 4, !tbaa !61
  %9 = load i32, i32* %denominator, align 4, !tbaa !2
  %parm14 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture15 = bitcast %union.anon.54* %parm14 to %struct.v4l2_captureparm*
  %timeperframe16 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture15, i32 0, i32 2
  %denominator17 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe16, i32 0, i32 1
  store i32 %9, i32* %denominator17, align 4, !tbaa !61
  %parm18 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture19 = bitcast %union.anon.54* %parm18 to %struct.v4l2_captureparm*
  %extendedmode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture19, i32 0, i32 3
  store i32 0, i32* %extendedmode, align 4, !tbaa !61
  %parm20 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %capture21 = bitcast %union.anon.54* %parm20 to %struct.v4l2_captureparm*
  %readbuffers = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture21, i32 0, i32 4
  store i32 0, i32* %readbuffers, align 4, !tbaa !61
  br label %cleanup

if.else:                                          ; preds = %if.end
  %output = bitcast %union.anon.54* %parm8 to %struct.v4l2_captureparm*
  %capability23 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output, i32 0, i32 0
  store i32 4096, i32* %capability23, align 4, !tbaa !61
  %parm24 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output25 = bitcast %union.anon.54* %parm24 to %struct.v4l2_captureparm*
  %outputmode = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output25, i32 0, i32 1
  store i32 0, i32* %outputmode, align 4, !tbaa !61
  %10 = load i32, i32* %numerator, align 4, !tbaa !2
  %parm26 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output27 = bitcast %union.anon.54* %parm26 to %struct.v4l2_captureparm*
  %timeperframe28 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output27, i32 0, i32 2
  %numerator29 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe28, i32 0, i32 0
  store i32 %10, i32* %numerator29, align 4, !tbaa !61
  %11 = load i32, i32* %denominator, align 4, !tbaa !2
  %parm30 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  %output31 = bitcast %union.anon.54* %parm30 to %struct.v4l2_captureparm*
  %timeperframe32 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output31, i32 0, i32 2
  %denominator33 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe32, i32 0, i32 1
  store i32 %11, i32* %denominator33, align 4, !tbaa !61
  br label %cleanup

cleanup:                                          ; preds = %if.else, %if.then7, %entry
  %retval.0 = phi i32 [ -22, %entry ], [ 0, %if.else ], [ 0, %if.then7 ]
  %12 = bitcast i32* %denominator to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #8
  %13 = bitcast i32* %numerator to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %13) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_v4l2_set_streamparm(%struct.uvc_streaming* %stream, %struct.v4l2_streamparm* %parm) #0 {
entry:
  %probe = alloca %struct.uvc_streaming_control, align 1
  %timeperframe = alloca %struct.exception_table_entry, align 4
  %0 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %type = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %2 = load i32, i32* %type, align 4, !tbaa !297
  %type1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %3 = load i32, i32* %type1, align 8, !tbaa !99
  %cmp = icmp ne i32 %2, %3
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %type2 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %4 = load i32, i32* %type2, align 4, !tbaa !297
  %cmp3 = icmp eq i32 %4, 1
  %parm5 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp3, label %if.then4, label %if.else

if.then4:                                         ; preds = %if.end
  %capture = bitcast %union.anon.54* %parm5 to %struct.v4l2_captureparm*
  %timeperframe6 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture, i32 0, i32 2
  %5 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  %6 = bitcast %struct.exception_table_entry* %timeperframe6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 4, i1 false), !tbaa.struct !300
  br label %if.end9

if.else:                                          ; preds = %if.end
  %output = bitcast %union.anon.54* %parm5 to %struct.v4l2_captureparm*
  %timeperframe8 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output, i32 0, i32 2
  %7 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  %8 = bitcast %struct.exception_table_entry* %timeperframe8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %7, i8* %8, i64 8, i32 4, i1 false), !tbaa.struct !300
  br label %if.end9

if.end9:                                          ; preds = %if.else, %if.then4
  %numerator = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 0
  %9 = load i32, i32* %numerator, align 4, !tbaa !301
  %denominator = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 1
  %10 = load i32, i32* %denominator, align 4, !tbaa !302
  %call = call i32 @uvc_fraction_to_interval(i32 %9, i32 %10)
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %11, 8
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then10, label %do.end

if.then10:                                        ; preds = %if.end9
  %numerator11 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 0
  %12 = load i32, i32* %numerator11, align 4, !tbaa !301
  %denominator12 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 1
  %13 = load i32, i32* %denominator12, align 4, !tbaa !302
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.11.28, i32 0, i32 0), i32 %12, i32 %13, i32 %call)
  br label %do.end

do.end:                                           ; preds = %if.then10, %if.end9
  %mutex = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_lock_nested(%struct.mutex* %mutex, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call15 = call i32 @uvc_queue_streaming(%struct.uvc_video_queue* %queue)
  %tobool16 = icmp ne i32 %call15, 0
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %do.end
  %mutex18 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex18)
  br label %cleanup

if.end19:                                         ; preds = %do.end
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %14 = bitcast %struct.uvc_streaming_control* %probe to i8*
  %15 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 34, i32 1, i1 false), !tbaa.struct !295
  %cur_frame = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 15
  %16 = load %struct.uvc_frame*, %struct.uvc_frame** %cur_frame, align 8, !tbaa !274
  %call20 = call i32 @uvc_try_frame_interval(%struct.uvc_frame* %16, i32 %call)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  store i32 %call20, i32* %dwFrameInterval, align 1, !tbaa !293
  %call21 = call i32 @uvc_probe_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end19
  %mutex24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex24)
  br label %cleanup

if.end25:                                         ; preds = %if.end19
  %ctrl26 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %17 = bitcast %struct.uvc_streaming_control* %ctrl26 to i8*
  %18 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 34, i32 1, i1 false), !tbaa.struct !295
  %mutex27 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 16
  call void @mutex_unlock(%struct.mutex* %mutex27)
  %dwFrameInterval28 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 3
  %19 = load i32, i32* %dwFrameInterval28, align 1, !tbaa !293
  %numerator29 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 0
  store i32 %19, i32* %numerator29, align 4, !tbaa !301
  %denominator30 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 1
  store i32 10000000, i32* %denominator30, align 4, !tbaa !302
  %numerator31 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 0
  %denominator32 = getelementptr inbounds %struct.exception_table_entry, %struct.exception_table_entry* %timeperframe, i32 0, i32 1
  call void @uvc_simplify_fraction(i32* %numerator31, i32* %denominator32, i32 8, i32 333)
  %type33 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 0
  %20 = load i32, i32* %type33, align 4, !tbaa !297
  %cmp34 = icmp eq i32 %20, 1
  %parm36 = getelementptr inbounds %struct.v4l2_streamparm, %struct.v4l2_streamparm* %parm, i32 0, i32 1
  br i1 %cmp34, label %if.then35, label %if.else39

if.then35:                                        ; preds = %if.end25
  %capture37 = bitcast %union.anon.54* %parm36 to %struct.v4l2_captureparm*
  %timeperframe38 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %capture37, i32 0, i32 2
  %21 = bitcast %struct.exception_table_entry* %timeperframe38 to i8*
  %22 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 4, i1 false), !tbaa.struct !300
  br label %cleanup

if.else39:                                        ; preds = %if.end25
  %output41 = bitcast %union.anon.54* %parm36 to %struct.v4l2_captureparm*
  %timeperframe42 = getelementptr inbounds %struct.v4l2_captureparm, %struct.v4l2_captureparm* %output41, i32 0, i32 2
  %23 = bitcast %struct.exception_table_entry* %timeperframe42 to i8*
  %24 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %24, i64 8, i32 4, i1 false), !tbaa.struct !300
  br label %cleanup

cleanup:                                          ; preds = %if.else39, %if.then35, %if.then23, %if.then17, %entry
  %retval.0 = phi i32 [ -16, %if.then17 ], [ %call21, %if.then23 ], [ -22, %entry ], [ 0, %if.else39 ], [ 0, %if.then35 ]
  %25 = bitcast %struct.exception_table_entry* %timeperframe to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %25) #8
  %26 = bitcast %struct.uvc_streaming_control* %probe to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %26) #8
  ret i32 %retval.0
}

declare i32 @v4l2_event_subscribe(%struct.v4l2_fh*, %struct.v4l2_event_subscription*, i32, %struct.v4l2_subscribed_event_ops*) #2

declare i32 @v4l2_event_unsubscribe(%struct.v4l2_fh*, %struct.v4l2_event_subscription*) #2

declare i32 @v4l2_event_dequeue(%struct.v4l2_fh*, %struct.v4l2_event*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ioctl_ctrl_map(%struct.uvc_video_chain* %chain, %struct.uvc_xu_control_mapping* %xmap) #0 {
entry:
  %call = call i8* @kzalloc.16(i64 144, i32 208)
  %0 = bitcast i8* %call to %struct.uvc_control_mapping*
  %cmp = icmp eq %struct.uvc_control_mapping* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 0
  %1 = load i32, i32* %id, align 8, !tbaa !303
  %id1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 2
  store i32 %1, i32* %id1, align 8, !tbaa !304
  %cmp2 = icmp uge i64 32, 64
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name4 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 1
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name4, i32 0, i32 0
  br i1 %cmp2, label %if.then3, label %if.else

if.then3:                                         ; preds = %if.end
  %call6 = call i8* @__memcpy(i8* %arraydecay, i8* %arraydecay5, i64 32)
  br label %if.end11

if.else:                                          ; preds = %if.end
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay5, i64 32, i32 4, i1 false)
  br label %if.end11

if.end11:                                         ; preds = %if.else, %if.then3
  %__ret.0 = phi i8* [ %call6, %if.then3 ], [ %arraydecay, %if.else ]
  %cmp14 = icmp uge i64 16, 64
  %entity = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 4
  %arraydecay16 = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %entity17 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 2
  %arraydecay18 = getelementptr inbounds [16 x i8], [16 x i8]* %entity17, i32 0, i32 0
  br i1 %cmp14, label %if.then15, label %if.else20

if.then15:                                        ; preds = %if.end11
  %call19 = call i8* @__memcpy(i8* %arraydecay16, i8* %arraydecay18, i64 16)
  br label %if.end25

if.else20:                                        ; preds = %if.end11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay16, i8* %arraydecay18, i64 16, i32 4, i1 false)
  br label %if.end25

if.end25:                                         ; preds = %if.else20, %if.then15
  %__ret13.0 = phi i8* [ %call19, %if.then15 ], [ %arraydecay16, %if.else20 ]
  %selector = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 3
  %2 = load i8, i8* %selector, align 4, !tbaa !306
  %selector27 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 5
  store i8 %2, i8* %selector27, align 4, !tbaa !307
  %size28 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 4
  %3 = load i8, i8* %size28, align 1, !tbaa !308
  %size29 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 6
  store i8 %3, i8* %size29, align 1, !tbaa !309
  %offset = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 5
  %4 = load i8, i8* %offset, align 2, !tbaa !310
  %offset30 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 7
  store i8 %4, i8* %offset30, align 2, !tbaa !311
  %v4l2_type = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %5 = load i32, i32* %v4l2_type, align 8, !tbaa !312
  %v4l2_type31 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 8
  store i32 %5, i32* %v4l2_type31, align 8, !tbaa !313
  %data_type = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 7
  %6 = load i32, i32* %data_type, align 4, !tbaa !314
  %data_type32 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 9
  store i32 %6, i32* %data_type32, align 4, !tbaa !315
  %v4l2_type33 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %7 = load i32, i32* %v4l2_type33, align 8, !tbaa !312
  %Pivot4 = icmp slt i32 %7, 3
  br i1 %Pivot4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end25
  %Pivot = icmp slt i32 %7, 4
  br i1 %Pivot, label %sw.bb34, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %7, 4
  br i1 %SwitchLeaf2, label %sw.epilog, label %do.body

LeafBlock:                                        ; preds = %if.end25
  %.off = add i32 %7, -1
  %SwitchLeaf = icmp ule i32 %.off, 1
  br i1 %SwitchLeaf, label %sw.epilog, label %do.body

sw.bb34:                                          ; preds = %NodeBlock
  %menu_count = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %8 = load i32, i32* %menu_count, align 8, !tbaa !216
  %cmp35 = icmp eq i32 %8, 0
  br i1 %cmp35, label %done, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb34
  %menu_count36 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %9 = load i32, i32* %menu_count36, align 8, !tbaa !216
  %cmp37 = icmp ugt i32 %9, 32
  br i1 %cmp37, label %done, label %if.end39

if.end39:                                         ; preds = %lor.lhs.false
  %menu_count40 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %10 = load i32, i32* %menu_count40, align 8, !tbaa !216
  %conv = zext i32 %10 to i64
  %mul = mul i64 %conv, 36
  %conv41 = trunc i64 %mul to i32
  %conv42 = zext i32 %conv41 to i64
  %call43 = call i8* @kmalloc.17(i64 %conv42, i32 208)
  %11 = bitcast i8* %call43 to %struct.uvc_menu_info*
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  store %struct.uvc_menu_info* %11, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  %menu_info44 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %12 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info44, align 8, !tbaa !316
  %cmp45 = icmp eq %struct.uvc_menu_info* %12, null
  br i1 %cmp45, label %done, label %if.end48

if.end48:                                         ; preds = %if.end39
  %menu_info49 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %13 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info49, align 8, !tbaa !316
  %14 = bitcast %struct.uvc_menu_info* %13 to i8*
  %menu_info50 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 8
  %15 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info50, align 8, !tbaa !218
  %16 = bitcast %struct.uvc_menu_info* %15 to i8*
  %conv51 = zext i32 %conv41 to i64
  %call52 = call i64 @copy_from_user(i8* %14, i8* %16, i64 %conv51)
  %tobool = icmp ne i64 %call52, 0
  br i1 %tobool, label %done, label %if.end54

if.end54:                                         ; preds = %if.end48
  %menu_count55 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 9
  %17 = load i32, i32* %menu_count55, align 8, !tbaa !216
  %menu_count56 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 11
  store i32 %17, i32* %menu_count56, align 8, !tbaa !317
  br label %sw.epilog

do.body:                                          ; preds = %LeafBlock, %LeafBlock1
  %18 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %18, 4
  %tobool57 = icmp ne i32 %and, 0
  br i1 %tobool57, label %if.then58, label %done

if.then58:                                        ; preds = %do.body
  %v4l2_type59 = getelementptr inbounds %struct.uvc_xu_control_mapping, %struct.uvc_xu_control_mapping* %xmap, i32 0, i32 6
  %19 = load i32, i32* %v4l2_type59, align 8, !tbaa !312
  %call60 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.12.25, i32 0, i32 0), i32 %19)
  br label %done

sw.epilog:                                        ; preds = %if.end54, %LeafBlock, %LeafBlock1
  %call62 = call i32 @uvc_ctrl_add_mapping(%struct.uvc_video_chain* %chain, %struct.uvc_control_mapping* %0)
  br label %done

done:                                             ; preds = %sw.epilog, %if.then58, %do.body, %if.end48, %if.end39, %lor.lhs.false, %sw.bb34
  %ret.0 = phi i32 [ %call62, %sw.epilog ], [ -22, %lor.lhs.false ], [ -22, %sw.bb34 ], [ -12, %if.end39 ], [ -14, %if.end48 ], [ -25, %if.then58 ], [ -25, %do.body ]
  %menu_info63 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %0, i32 0, i32 10
  %20 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info63, align 8, !tbaa !316
  %21 = bitcast %struct.uvc_menu_info* %20 to i8*
  call void @kfree(i8* %21)
  %22 = bitcast %struct.uvc_control_mapping* %0 to i8*
  call void @kfree(i8* %22)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @copy_from_user(i8* %to, i8* %from, i64 %n) #1 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %to, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  call void @might_fault()
  %cmp = icmp eq i32 %conv, -1
  %conv2 = sext i32 %conv to i64
  %cmp3 = icmp uge i64 %conv2, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp3
  %lnot = xor i1 %1, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv7 = trunc i64 %n to i32
  %call = call i64 @_copy_from_user(i8* %to, i8* %from, i32 %conv7)
  br label %if.end24

if.else:                                          ; preds = %entry
  %tobool8 = icmp ne i32 1, 0
  %lnot9 = xor i1 %tobool8, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13.209, i32 0, i32 0), i32 66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14.210, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then16, %if.else
  %tobool17 = icmp ne i32 1, 0
  %lnot18 = xor i1 %tobool17, true
  %lnot20 = xor i1 %lnot18, true
  %lnot.ext21 = zext i1 %lnot20 to i32
  %conv22 = sext i32 %lnot.ext21 to i64
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0)
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.end ]
  ret i64 %n.addr.0
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1, i1) #7

declare i64 @_copy_from_user(i8*, i8*, i32) #2

declare void @warn_slowpath_fmt(i8*, i32, i8*, ...) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_queue_streaming(%struct.uvc_video_queue* %queue) #1 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_try_frame_interval(%struct.uvc_frame* %frame, i32 %interval) #0 {
entry:
  %bFrameIntervalType = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 7
  %0 = load i8, i8* %bFrameIntervalType, align 4, !tbaa !152
  %tobool = icmp ne i8 %0, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then
  %i.0 = phi i32 [ 0, %if.then ], [ %inc, %for.inc ]
  %best.0 = phi i32 [ -1, %if.then ], [ %cond, %for.inc ]
  %bFrameIntervalType1 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 7
  %1 = load i8, i8* %bFrameIntervalType1, align 4, !tbaa !152
  %conv = zext i8 %1 to i32
  %cmp = icmp ult i32 %i.0, %conv
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dwFrameInterval = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %2 = load i32*, i32** %dwFrameInterval, align 8, !tbaa !155
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds i32, i32* %2, i64 %idxprom
  %3 = load i32, i32* %arrayidx, align 4, !tbaa !2
  %cmp3 = icmp ugt i32 %interval, %3
  %dwFrameInterval5 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %4 = load i32*, i32** %dwFrameInterval5, align 8, !tbaa !155
  %idxprom6 = zext i32 %i.0 to i64
  %arrayidx7 = getelementptr inbounds i32, i32* %4, i64 %idxprom6
  %5 = load i32, i32* %arrayidx7, align 4, !tbaa !2
  %sub = sub i32 %interval, %5
  %sub11 = sub i32 %5, %interval
  %cond = select i1 %cmp3, i32 %sub, i32 %sub11
  %cmp12 = icmp ugt i32 %cond, %best.0
  br i1 %cmp12, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %dwFrameInterval15 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %6 = load i32*, i32** %dwFrameInterval15, align 8, !tbaa !155
  %sub16 = sub i32 %i.0, 1
  %idxprom17 = zext i32 %sub16 to i64
  %arrayidx18 = getelementptr inbounds i32, i32* %6, i64 %idxprom17
  %7 = load i32, i32* %arrayidx18, align 4, !tbaa !2
  br label %if.end32

if.else:                                          ; preds = %entry
  %dwFrameInterval19 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %8 = load i32*, i32** %dwFrameInterval19, align 8, !tbaa !155
  %arrayidx20 = getelementptr inbounds i32, i32* %8, i64 0
  %9 = load i32, i32* %arrayidx20, align 4, !tbaa !2
  %dwFrameInterval21 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %10 = load i32*, i32** %dwFrameInterval21, align 8, !tbaa !155
  %arrayidx22 = getelementptr inbounds i32, i32* %10, i64 1
  %11 = load i32, i32* %arrayidx22, align 4, !tbaa !2
  %dwFrameInterval23 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame, i32 0, i32 9
  %12 = load i32*, i32** %dwFrameInterval23, align 8, !tbaa !155
  %arrayidx24 = getelementptr inbounds i32, i32* %12, i64 2
  %13 = load i32, i32* %arrayidx24, align 4, !tbaa !2
  %sub25 = sub i32 %interval, %9
  %div = udiv i32 %13, 2
  %add = add i32 %sub25, %div
  %div26 = udiv i32 %add, %13
  %mul = mul i32 %div26, %13
  %add27 = add i32 %9, %mul
  %cmp28 = icmp ugt i32 %add27, %11
  %.add27 = select i1 %cmp28, i32 %11, i32 %add27
  br label %if.end32

if.end32:                                         ; preds = %if.else, %for.end
  %interval.addr.1 = phi i32 [ %7, %for.end ], [ %.add27, %if.else ]
  ret i32 %interval.addr.1
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_streaming(%struct.vb2_queue* %q) #1 {
entry:
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 21
  %bf.load = load i8, i8* %streaming, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define i32 @uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size) #0 {
entry:
  %call = call i32 @__uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size, i32 300)
  %conv = zext i16 %size to i32
  %cmp = icmp ne i32 %call, %conv
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %call2 = call i8* @uvc_query_name(i8 zeroext %query)
  %conv3 = zext i8 %cs to i32
  %conv4 = zext i8 %unit to i32
  %conv5 = zext i16 %size to i32
  %call6 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.114, i32 0, i32 0), i8* %call2, i32 %conv3, i32 %conv4, i32 %call, i32 %conv5)
  br label %cleanup

cleanup:                                          ; preds = %if.then, %entry
  %retval.0 = phi i32 [ -5, %if.then ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext %query, i8 zeroext %unit, i8 zeroext %intfnum, i8 zeroext %cs, i8* %data, i16 zeroext %size, i32 %timeout) #0 {
entry:
  %conv = zext i8 %query to i32
  %and = and i32 %conv, 128
  %tobool = icmp ne i32 %and, 0
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %call = call i32 @__create_pipe(%struct.usb_device* %0, i32 0)
  %or = or i32 -2147483648, %call
  %or1 = or i32 %or, 128
  %cond = select i1 %tobool, i32 %or1, i32 %or
  %conv5 = zext i8 %query to i32
  %and6 = and i32 %conv5, 128
  %tobool7 = icmp ne i32 %and6, 0
  %1 = zext i1 %tobool7 to i64
  %cond8 = select i1 %tobool7, i32 128, i32 0
  %conv9 = zext i8 33 to i32
  %or10 = or i32 %conv9, %cond8
  %conv11 = trunc i32 %or10 to i8
  %udev12 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev12, align 8, !tbaa !63
  %conv13 = zext i8 %cs to i32
  %shl = shl i32 %conv13, 8
  %conv14 = trunc i32 %shl to i16
  %conv15 = zext i8 %unit to i32
  %shl16 = shl i32 %conv15, 8
  %conv17 = zext i8 %intfnum to i32
  %or18 = or i32 %shl16, %conv17
  %conv19 = trunc i32 %or18 to i16
  %call20 = call i32 @usb_control_msg(%struct.usb_device* %2, i32 %cond, i8 zeroext %query, i8 zeroext %conv11, i16 zeroext %conv14, i16 zeroext %conv19, i8* %data, i16 zeroext %size, i32 %timeout)
  ret i32 %call20
}

; Function Attrs: nounwind uwtable
define internal i8* @uvc_query_name(i8 zeroext %query) #0 {
entry:
  %conv = zext i8 %query to i32
  %Pivot14 = icmp slt i32 %conv, 132
  br i1 %Pivot14, label %NodeBlock3, label %NodeBlock11

NodeBlock11:                                      ; preds = %entry
  %Pivot12 = icmp slt i32 %conv, 134
  br i1 %Pivot12, label %NodeBlock5, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %conv, 135
  br i1 %Pivot10, label %return, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %conv, 135
  br i1 %SwitchLeaf8, label %return, label %sw.default

NodeBlock5:                                       ; preds = %NodeBlock11
  %Pivot6 = icmp slt i32 %conv, 133
  %. = select i1 %Pivot6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14.115, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15.116, i32 0, i32 0)
  br label %return

NodeBlock3:                                       ; preds = %entry
  %Pivot4 = icmp slt i32 %conv, 130
  br i1 %Pivot4, label %NodeBlock, label %NodeBlock1

NodeBlock1:                                       ; preds = %NodeBlock3
  %Pivot2 = icmp slt i32 %conv, 131
  %.15 = select i1 %Pivot2, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.117, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13.118, i32 0, i32 0)
  br label %return

NodeBlock:                                        ; preds = %NodeBlock3
  %Pivot = icmp slt i32 %conv, 129
  br i1 %Pivot, label %LeafBlock, label %return

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %conv, 1
  br i1 %SwitchLeaf, label %return, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock7
  br label %return

return:                                           ; preds = %sw.default, %LeafBlock, %NodeBlock, %NodeBlock1, %NodeBlock5, %LeafBlock7, %NodeBlock9
  %retval.0 = phi i8* [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18.119, i32 0, i32 0), %sw.default ], [ %., %NodeBlock5 ], [ %.15, %NodeBlock1 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10.120, i32 0, i32 0), %LeafBlock ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11.121, i32 0, i32 0), %NodeBlock ], [ getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16.122, i32 0, i32 0), %NodeBlock9 ], [ getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17.123, i32 0, i32 0), %LeafBlock7 ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__create_pipe(%struct.usb_device* %dev, i32 %endpoint) #1 {
entry:
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 0
  %0 = load i32, i32* %devnum, align 8, !tbaa !117
  %shl = shl i32 %0, 8
  %shl1 = shl i32 %endpoint, 15
  %or = or i32 %shl, %shl1
  ret i32 %or
}

declare i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_probe_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe) #0 {
entry:
  %probe_min = alloca %struct.uvc_streaming_control, align 1
  %probe_max = alloca %struct.uvc_streaming_control, align 1
  %0 = bitcast %struct.uvc_streaming_control* %probe_min to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %0) #8
  %1 = bitcast %struct.uvc_streaming_control* %probe_max to i8*
  call void @llvm.lifetime.start.p0i8(i64 34, i8* %1) #8
  %call = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe, i32 1)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %done, label %if.end

if.end:                                           ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %2 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %2, i32 0, i32 3
  %3 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %3, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end11, label %if.then1

if.then1:                                         ; preds = %if.end
  %call2 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe_min, i32 1, i8 zeroext -126)
  %cmp3 = icmp slt i32 %call2, 0
  br i1 %cmp3, label %done, label %if.end5

if.end5:                                          ; preds = %if.then1
  %call6 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe_max, i32 1, i8 zeroext -125)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %done, label %if.end9

if.end9:                                          ; preds = %if.end5
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_max, i32 0, i32 6
  %4 = load i16, i16* %wCompQuality, align 1, !tbaa !318
  %wCompQuality10 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 6
  store i16 %4, i16* %wCompQuality10, align 1, !tbaa !318
  br label %if.end11

if.end11:                                         ; preds = %if.end9, %if.end
  %ret.0 = phi i32 [ %call, %if.end ], [ %call6, %if.end9 ]
  br label %for.cond

for.cond:                                         ; preds = %if.end35, %if.end11
  %i.0 = phi i32 [ 0, %if.end11 ], [ %inc, %if.end35 ]
  %ret.1 = phi i32 [ %ret.0, %if.end11 ], [ %call17, %if.end35 ]
  %cmp12 = icmp ult i32 %i.0, 2
  br i1 %cmp12, label %for.body, label %done

for.body:                                         ; preds = %for.cond
  %call13 = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe, i32 1)
  %cmp14 = icmp slt i32 %call13, 0
  br i1 %cmp14, label %done, label %if.end16

if.end16:                                         ; preds = %for.body
  %call17 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe, i32 1, i8 zeroext -127)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %done, label %if.end20

if.end20:                                         ; preds = %if.end16
  %intf = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 5
  %5 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !46
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %5, i32 0, i32 2
  %6 = load i32, i32* %num_altsetting, align 8, !tbaa !136
  %cmp21 = icmp eq i32 %6, 1
  br i1 %cmp21, label %done, label %if.end23

if.end23:                                         ; preds = %if.end20
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 10
  %7 = load i32, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !319
  %conv = trunc i32 %7 to i16
  %conv24 = zext i16 %conv to i32
  %maxpsize = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 7
  %8 = load i16, i16* %maxpsize, align 4, !tbaa !138
  %conv25 = zext i16 %8 to i32
  %cmp26 = icmp sle i32 %conv24, %conv25
  br i1 %cmp26, label %done, label %if.end29

if.end29:                                         ; preds = %if.end23
  %dev30 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %9 = load %struct.uvc_device*, %struct.uvc_device** %dev30, align 8, !tbaa !102
  %quirks31 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %9, i32 0, i32 3
  %10 = load i32, i32* %quirks31, align 8, !tbaa !10
  %and32 = and i32 %10, 2
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %done, label %if.end35

if.end35:                                         ; preds = %if.end29
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 4
  %11 = load i16, i16* %wKeyFrameRate, align 1, !tbaa !320
  %wKeyFrameRate36 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 4
  store i16 %11, i16* %wKeyFrameRate36, align 1, !tbaa !320
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 5
  %12 = load i16, i16* %wPFrameRate, align 1, !tbaa !321
  %wPFrameRate37 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 5
  store i16 %12, i16* %wPFrameRate37, align 1, !tbaa !321
  %wCompQuality38 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_max, i32 0, i32 6
  %13 = load i16, i16* %wCompQuality38, align 1, !tbaa !318
  %wCompQuality39 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 6
  store i16 %13, i16* %wCompQuality39, align 1, !tbaa !318
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe_min, i32 0, i32 7
  %14 = load i16, i16* %wCompWindowSize, align 1, !tbaa !322
  %wCompWindowSize40 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %probe, i32 0, i32 7
  store i16 %14, i16* %wCompWindowSize40, align 1, !tbaa !322
  %inc = add i32 %i.0, 1
  br label %for.cond

done:                                             ; preds = %if.end29, %if.end23, %if.end20, %if.end16, %for.body, %for.cond, %if.end5, %if.then1, %entry
  %ret.3 = phi i32 [ %call, %entry ], [ %call2, %if.then1 ], [ %call6, %if.end5 ], [ %call13, %for.body ], [ %call17, %if.end16 ], [ -28, %if.end29 ], [ %call17, %if.end20 ], [ %call17, %if.end23 ], [ %ret.1, %for.cond ]
  %15 = bitcast %struct.uvc_streaming_control* %probe_max to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %15) #8
  %16 = bitcast %struct.uvc_streaming_control* %probe_min to i8*
  call void @llvm.lifetime.end.p0i8(i64 34, i8* %16) #8
  ret i32 %ret.3
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_set_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl, i32 %probe) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 11
  %1 = load i16, i16* %uvc_version, align 8, !tbaa !118
  %conv = zext i16 %1 to i32
  %cmp = icmp sge i32 %conv, 272
  %2 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 34, i32 26
  %conv2 = trunc i32 %cond to i16
  %conv3 = zext i16 %conv2 to i64
  %call = call i8* @kzalloc.135(i64 %conv3, i32 208)
  %cmp4 = icmp eq i8* %call, null
  br i1 %cmp4, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 0
  %3 = load i16, i16* %bmHint, align 1, !tbaa !290
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %4 = bitcast i8* %arrayidx to i16*
  store i16 %3, i16* %4, align 2, !tbaa !165
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %5 = load i8, i8* %bFormatIndex, align 1, !tbaa !291
  %arrayidx6 = getelementptr inbounds i8, i8* %call, i64 2
  store i8 %5, i8* %arrayidx6, align 1, !tbaa !61
  %bFrameIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %6 = load i8, i8* %bFrameIndex, align 1, !tbaa !292
  %arrayidx7 = getelementptr inbounds i8, i8* %call, i64 3
  store i8 %6, i8* %arrayidx7, align 1, !tbaa !61
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %7 = load i32, i32* %dwFrameInterval, align 1, !tbaa !293
  %arrayidx8 = getelementptr inbounds i8, i8* %call, i64 4
  %8 = bitcast i8* %arrayidx8 to i32*
  store i32 %7, i32* %8, align 4, !tbaa !2
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 4
  %9 = load i16, i16* %wKeyFrameRate, align 1, !tbaa !320
  %arrayidx9 = getelementptr inbounds i8, i8* %call, i64 8
  %10 = bitcast i8* %arrayidx9 to i16*
  store i16 %9, i16* %10, align 2, !tbaa !165
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 5
  %11 = load i16, i16* %wPFrameRate, align 1, !tbaa !321
  %arrayidx10 = getelementptr inbounds i8, i8* %call, i64 10
  %12 = bitcast i8* %arrayidx10 to i16*
  store i16 %11, i16* %12, align 2, !tbaa !165
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  %13 = load i16, i16* %wCompQuality, align 1, !tbaa !318
  %arrayidx11 = getelementptr inbounds i8, i8* %call, i64 12
  %14 = bitcast i8* %arrayidx11 to i16*
  store i16 %13, i16* %14, align 2, !tbaa !165
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 7
  %15 = load i16, i16* %wCompWindowSize, align 1, !tbaa !322
  %arrayidx12 = getelementptr inbounds i8, i8* %call, i64 14
  %16 = bitcast i8* %arrayidx12 to i16*
  store i16 %15, i16* %16, align 2, !tbaa !165
  %wDelay = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 8
  %17 = load i16, i16* %wDelay, align 1, !tbaa !323
  %arrayidx13 = getelementptr inbounds i8, i8* %call, i64 16
  %18 = bitcast i8* %arrayidx13 to i16*
  store i16 %17, i16* %18, align 2, !tbaa !165
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %19 = load i32, i32* %dwMaxVideoFrameSize, align 1, !tbaa !294
  %arrayidx14 = getelementptr inbounds i8, i8* %call, i64 18
  call void @put_unaligned_le32(i32 %19, i8* %arrayidx14)
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %20 = load i32, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !319
  %arrayidx15 = getelementptr inbounds i8, i8* %call, i64 22
  call void @put_unaligned_le32(i32 %20, i8* %arrayidx15)
  %conv16 = zext i16 %conv2 to i32
  %cmp17 = icmp eq i32 %conv16, 34
  br i1 %cmp17, label %if.then19, label %if.end25

if.then19:                                        ; preds = %if.end
  %dwClockFrequency = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  %21 = load i32, i32* %dwClockFrequency, align 1, !tbaa !324
  %arrayidx20 = getelementptr inbounds i8, i8* %call, i64 26
  call void @put_unaligned_le32(i32 %21, i8* %arrayidx20)
  %bmFramingInfo = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  %22 = load i8, i8* %bmFramingInfo, align 1, !tbaa !325
  %arrayidx21 = getelementptr inbounds i8, i8* %call, i64 30
  store i8 %22, i8* %arrayidx21, align 1, !tbaa !61
  %bPreferedVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  %23 = load i8, i8* %bPreferedVersion, align 1, !tbaa !326
  %arrayidx22 = getelementptr inbounds i8, i8* %call, i64 31
  store i8 %23, i8* %arrayidx22, align 1, !tbaa !61
  %bMinVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  %24 = load i8, i8* %bMinVersion, align 1, !tbaa !327
  %arrayidx23 = getelementptr inbounds i8, i8* %call, i64 32
  store i8 %24, i8* %arrayidx23, align 1, !tbaa !61
  %bMaxVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 15
  %25 = load i8, i8* %bMaxVersion, align 1, !tbaa !328
  %arrayidx24 = getelementptr inbounds i8, i8* %call, i64 33
  store i8 %25, i8* %arrayidx24, align 1, !tbaa !61
  br label %if.end25

if.end25:                                         ; preds = %if.then19, %if.end
  %dev26 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %26 = load %struct.uvc_device*, %struct.uvc_device** %dev26, align 8, !tbaa !102
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %27 = load i32, i32* %intfnum, align 8, !tbaa !122
  %conv27 = trunc i32 %27 to i8
  %tobool = icmp ne i32 %probe, 0
  %28 = zext i1 %tobool to i64
  %cond28 = select i1 %tobool, i32 1, i32 2
  %conv29 = trunc i32 %cond28 to i8
  %29 = load i32, i32* @uvc_timeout_param, align 4, !tbaa !2
  %call30 = call i32 @__uvc_query_ctrl(%struct.uvc_device* %26, i8 zeroext 1, i8 zeroext 0, i8 zeroext %conv27, i8 zeroext %conv29, i8* %call, i16 zeroext %conv2, i32 %29)
  %conv31 = zext i16 %conv2 to i32
  %cmp32 = icmp ne i32 %call30, %conv31
  br i1 %cmp32, label %if.then34, label %if.end39

if.then34:                                        ; preds = %if.end25
  %tobool35 = icmp ne i32 %probe, 0
  %30 = zext i1 %tobool35 to i64
  %cond36 = select i1 %tobool35, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.130, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.131, i32 0, i32 0)
  %conv37 = zext i16 %conv2 to i32
  %call38 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.19.136, i32 0, i32 0), i8* %cond36, i32 %call30, i32 %conv37)
  br label %if.end39

if.end39:                                         ; preds = %if.then34, %if.end25
  %ret.0 = phi i32 [ -5, %if.then34 ], [ %call30, %if.end25 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %if.end39, %entry
  %retval.0 = phi i32 [ %ret.0, %if.end39 ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl, i32 %probe, i8 zeroext %query) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 11
  %1 = load i16, i16* %uvc_version, align 8, !tbaa !118
  %conv = zext i16 %1 to i32
  %cmp = icmp sge i32 %conv, 272
  %2 = zext i1 %cmp to i64
  %cond = select i1 %cmp, i32 34, i32 26
  %conv2 = trunc i32 %cond to i16
  %dev3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev3, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 3
  %4 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %4, 256
  %tobool = icmp ne i32 %and, 0
  %conv4 = zext i8 %query to i32
  %cmp5 = icmp eq i32 %conv4, 135
  %or.cond = and i1 %tobool, %cmp5
  br i1 %or.cond, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv7 = zext i16 %conv2 to i64
  %call = call i8* @kmalloc.126(i64 %conv7, i32 208)
  %cmp8 = icmp eq i8* %call, null
  br i1 %cmp8, label %cleanup, label %if.end11

if.end11:                                         ; preds = %if.end
  %dev12 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device*, %struct.uvc_device** %dev12, align 8, !tbaa !102
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %6 = load i32, i32* %intfnum, align 8, !tbaa !122
  %conv13 = trunc i32 %6 to i8
  %tobool14 = icmp ne i32 %probe, 0
  %7 = zext i1 %tobool14 to i64
  %cond15 = select i1 %tobool14, i32 1, i32 2
  %conv16 = trunc i32 %cond15 to i8
  %8 = load i32, i32* @uvc_timeout_param, align 4, !tbaa !2
  %call17 = call i32 @__uvc_query_ctrl(%struct.uvc_device* %5, i8 zeroext %query, i8 zeroext 0, i8 zeroext %conv13, i8 zeroext %conv16, i8* %call, i16 zeroext %conv2, i32 %8)
  %conv18 = zext i8 %query to i32
  %cmp19 = icmp eq i32 %conv18, 130
  %conv21 = zext i8 %query to i32
  %cmp22 = icmp eq i32 %conv21, 131
  %or.cond1 = or i1 %cmp19, %cmp22
  %cmp25 = icmp eq i32 %call17, 2
  %or.cond2 = and i1 %or.cond1, %cmp25
  br i1 %or.cond2, label %do.body, label %if.else

do.body:                                          ; preds = %if.end11
  %dev28 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %9 = load %struct.uvc_device*, %struct.uvc_device** %dev28, align 8, !tbaa !102
  %warnings = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %9, i32 0, i32 2
  %call29 = call i32 @test_and_set_bit(i32 0, i64* %warnings)
  %tobool30 = icmp ne i32 %call29, 0
  br i1 %tobool30, label %do.end, label %if.then31

if.then31:                                        ; preds = %do.body
  %call32 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.22.127, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then31, %do.body
  %10 = bitcast %struct.uvc_streaming_control* %ctrl to i8*
  call void @llvm.memset.p0i8.i64(i8* %10, i8 0, i64 34, i32 1, i1 false)
  %11 = bitcast i8* %call to i16*
  %call34 = call zeroext i16 @__le16_to_cpup.128(i16* %11)
  %wCompQuality = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  store i16 %call34, i16* %wCompQuality, align 1, !tbaa !318
  br label %out

if.else:                                          ; preds = %if.end11
  %conv35 = zext i8 %query to i32
  %cmp36 = icmp eq i32 %conv35, 135
  %cmp39 = icmp eq i32 %probe, 1
  %or.cond3 = and i1 %cmp36, %cmp39
  %conv42 = zext i16 %conv2 to i32
  %cmp43 = icmp ne i32 %call17, %conv42
  %or.cond4 = and i1 %or.cond3, %cmp43
  br i1 %or.cond4, label %do.body46, label %if.else56

do.body46:                                        ; preds = %if.else
  %dev47 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device*, %struct.uvc_device** %dev47, align 8, !tbaa !102
  %warnings48 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %12, i32 0, i32 2
  %call49 = call i32 @test_and_set_bit(i32 1, i64* %warnings48)
  %tobool50 = icmp ne i32 %call49, 0
  br i1 %tobool50, label %out, label %if.then51

if.then51:                                        ; preds = %do.body46
  %call52 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.23.129, i32 0, i32 0))
  br label %out

if.else56:                                        ; preds = %if.else
  %conv57 = zext i16 %conv2 to i32
  %cmp58 = icmp ne i32 %call17, %conv57
  br i1 %cmp58, label %if.then60, label %if.end68

if.then60:                                        ; preds = %if.else56
  %conv61 = zext i8 %query to i32
  %tobool62 = icmp ne i32 %probe, 0
  %13 = zext i1 %tobool62 to i64
  %cond63 = select i1 %tobool62, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20.130, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21.131, i32 0, i32 0)
  %conv64 = zext i16 %conv2 to i32
  %call65 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.24.132, i32 0, i32 0), i32 %conv61, i8* %cond63, i32 %call17, i32 %conv64)
  br label %out

if.end68:                                         ; preds = %if.else56
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %14 = bitcast i8* %arrayidx to i16*
  %call69 = call zeroext i16 @__le16_to_cpup.128(i16* %14)
  %bmHint = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 0
  store i16 %call69, i16* %bmHint, align 1, !tbaa !290
  %arrayidx70 = getelementptr inbounds i8, i8* %call, i64 2
  %15 = load i8, i8* %arrayidx70, align 1, !tbaa !61
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  store i8 %15, i8* %bFormatIndex, align 1, !tbaa !291
  %arrayidx71 = getelementptr inbounds i8, i8* %call, i64 3
  %16 = load i8, i8* %arrayidx71, align 1, !tbaa !61
  %bFrameIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  store i8 %16, i8* %bFrameIndex, align 1, !tbaa !292
  %arrayidx72 = getelementptr inbounds i8, i8* %call, i64 4
  %17 = bitcast i8* %arrayidx72 to i32*
  %call73 = call i32 @__le32_to_cpup.133(i32* %17)
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  store i32 %call73, i32* %dwFrameInterval, align 1, !tbaa !293
  %arrayidx74 = getelementptr inbounds i8, i8* %call, i64 8
  %18 = bitcast i8* %arrayidx74 to i16*
  %call75 = call zeroext i16 @__le16_to_cpup.128(i16* %18)
  %wKeyFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 4
  store i16 %call75, i16* %wKeyFrameRate, align 1, !tbaa !320
  %arrayidx76 = getelementptr inbounds i8, i8* %call, i64 10
  %19 = bitcast i8* %arrayidx76 to i16*
  %call77 = call zeroext i16 @__le16_to_cpup.128(i16* %19)
  %wPFrameRate = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 5
  store i16 %call77, i16* %wPFrameRate, align 1, !tbaa !321
  %arrayidx78 = getelementptr inbounds i8, i8* %call, i64 12
  %20 = bitcast i8* %arrayidx78 to i16*
  %call79 = call zeroext i16 @__le16_to_cpup.128(i16* %20)
  %wCompQuality80 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 6
  store i16 %call79, i16* %wCompQuality80, align 1, !tbaa !318
  %arrayidx81 = getelementptr inbounds i8, i8* %call, i64 14
  %21 = bitcast i8* %arrayidx81 to i16*
  %call82 = call zeroext i16 @__le16_to_cpup.128(i16* %21)
  %wCompWindowSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 7
  store i16 %call82, i16* %wCompWindowSize, align 1, !tbaa !322
  %arrayidx83 = getelementptr inbounds i8, i8* %call, i64 16
  %22 = bitcast i8* %arrayidx83 to i16*
  %call84 = call zeroext i16 @__le16_to_cpup.128(i16* %22)
  %wDelay = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 8
  store i16 %call84, i16* %wDelay, align 1, !tbaa !323
  %arrayidx85 = getelementptr inbounds i8, i8* %call, i64 18
  %call86 = call i32 @get_unaligned_le32.134(i8* %arrayidx85)
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  store i32 %call86, i32* %dwMaxVideoFrameSize, align 1, !tbaa !294
  %arrayidx87 = getelementptr inbounds i8, i8* %call, i64 22
  %call88 = call i32 @get_unaligned_le32.134(i8* %arrayidx87)
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  store i32 %call88, i32* %dwMaxPayloadTransferSize, align 1, !tbaa !319
  %conv89 = zext i16 %conv2 to i32
  %cmp90 = icmp eq i32 %conv89, 34
  br i1 %cmp90, label %if.then92, label %if.else99

if.then92:                                        ; preds = %if.end68
  %arrayidx93 = getelementptr inbounds i8, i8* %call, i64 26
  %call94 = call i32 @get_unaligned_le32.134(i8* %arrayidx93)
  %dwClockFrequency = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  store i32 %call94, i32* %dwClockFrequency, align 1, !tbaa !324
  %arrayidx95 = getelementptr inbounds i8, i8* %call, i64 30
  %23 = load i8, i8* %arrayidx95, align 1, !tbaa !61
  %bmFramingInfo = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  store i8 %23, i8* %bmFramingInfo, align 1, !tbaa !325
  %arrayidx96 = getelementptr inbounds i8, i8* %call, i64 31
  %24 = load i8, i8* %arrayidx96, align 1, !tbaa !61
  %bPreferedVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  store i8 %24, i8* %bPreferedVersion, align 1, !tbaa !326
  %arrayidx97 = getelementptr inbounds i8, i8* %call, i64 32
  %25 = load i8, i8* %arrayidx97, align 1, !tbaa !61
  %bMinVersion = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  store i8 %25, i8* %bMinVersion, align 1, !tbaa !327
  %arrayidx98 = getelementptr inbounds i8, i8* %call, i64 33
  %26 = load i8, i8* %arrayidx98, align 1, !tbaa !61
  br label %if.end106

if.else99:                                        ; preds = %if.end68
  %dev100 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %27 = load %struct.uvc_device*, %struct.uvc_device** %dev100, align 8, !tbaa !102
  %clock_frequency = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %27, i32 0, i32 12
  %28 = load i32, i32* %clock_frequency, align 4, !tbaa !119
  %dwClockFrequency101 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 11
  store i32 %28, i32* %dwClockFrequency101, align 1, !tbaa !324
  %bmFramingInfo102 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 12
  store i8 0, i8* %bmFramingInfo102, align 1, !tbaa !325
  %bPreferedVersion103 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 13
  store i8 0, i8* %bPreferedVersion103, align 1, !tbaa !326
  %bMinVersion104 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 14
  store i8 0, i8* %bMinVersion104, align 1, !tbaa !327
  br label %if.end106

if.end106:                                        ; preds = %if.else99, %if.then92
  %.sink = phi i8 [ 0, %if.else99 ], [ %26, %if.then92 ]
  %bMaxVersion105 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 15
  store i8 %.sink, i8* %bMaxVersion105, align 1, !tbaa !328
  call void @uvc_fixup_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl)
  br label %out

out:                                              ; preds = %if.end106, %if.then60, %if.then51, %do.body46, %do.end
  %ret.0 = phi i32 [ 0, %do.end ], [ -5, %if.then60 ], [ 0, %if.end106 ], [ -5, %if.then51 ], [ -5, %do.body46 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %out, %if.end, %entry
  %retval.0 = phi i32 [ %ret.0, %out ], [ -5, %entry ], [ -12, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.126(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_and_set_bit(i32 %nr, i64* %addr) #1 {
entry:
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2,$1\0A\09sbb $0,$0", "=r,=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i32 %nr, i64* %addr) #8, !srcloc !329
  ret i32 %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @__le16_to_cpup.128(i16* %p) #1 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !165
  ret i16 %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__le32_to_cpup.133(i32* %p) #1 {
entry:
  %0 = load i32, i32* %p, align 4, !tbaa !2
  ret i32 %0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @get_unaligned_le32.134(i8* %p) #1 {
entry:
  %0 = bitcast i8* %p to i32*
  %call = call i32 @__le32_to_cpup.133(i32* %0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal void @uvc_fixup_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %nformats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 10
  %0 = load i32, i32* %nformats, align 4, !tbaa !132
  %cmp = icmp ult i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 11
  %1 = load %struct.uvc_format*, %struct.uvc_format** %format1, align 8, !tbaa !70
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %1, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 1
  %2 = load i8, i8* %index, align 1, !tbaa !145
  %conv = zext i8 %2 to i32
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %3 = load i8, i8* %bFormatIndex, align 1, !tbaa !291
  %conv2 = zext i8 %3 to i32
  %cmp3 = icmp eq i32 %conv, %conv2
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %format5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 11
  %4 = load %struct.uvc_format*, %struct.uvc_format** %format5, align 8, !tbaa !70
  %idxprom6 = zext i32 %i.0 to i64
  %arrayidx7 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %4, i64 %idxprom6
  br label %for.end

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %if.then, %for.cond
  %format.0 = phi %struct.uvc_format* [ %arrayidx7, %if.then ], [ null, %for.cond ]
  %cmp8 = icmp eq %struct.uvc_format* %format.0, null
  br i1 %cmp8, label %cleanup.cont, label %if.end11

if.end11:                                         ; preds = %for.end
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc29, %if.end11
  %i.1 = phi i32 [ 0, %if.end11 ], [ %inc30, %for.inc29 ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 7
  %5 = load i32, i32* %nframes, align 4, !tbaa !135
  %cmp13 = icmp ult i32 %i.1, %5
  br i1 %cmp13, label %for.body15, label %for.end31

for.body15:                                       ; preds = %for.cond12
  %frame16 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %6 = load %struct.uvc_frame*, %struct.uvc_frame** %frame16, align 8, !tbaa !133
  %idxprom17 = zext i32 %i.1 to i64
  %arrayidx18 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %6, i64 %idxprom17
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx18, i32 0, i32 0
  %7 = load i8, i8* %bFrameIndex, align 8, !tbaa !156
  %conv19 = zext i8 %7 to i32
  %bFrameIndex20 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %8 = load i8, i8* %bFrameIndex20, align 1, !tbaa !292
  %conv21 = zext i8 %8 to i32
  %cmp22 = icmp eq i32 %conv19, %conv21
  br i1 %cmp22, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %for.body15
  %frame25 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 8
  %9 = load %struct.uvc_frame*, %struct.uvc_frame** %frame25, align 8, !tbaa !133
  %idxprom26 = zext i32 %i.1 to i64
  %arrayidx27 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %9, i64 %idxprom26
  br label %for.end31

for.inc29:                                        ; preds = %for.body15
  %inc30 = add i32 %i.1, 1
  br label %for.cond12

for.end31:                                        ; preds = %if.then24, %for.cond12
  %frame.0 = phi %struct.uvc_frame* [ %arrayidx27, %if.then24 ], [ null, %for.cond12 ]
  %cmp32 = icmp eq %struct.uvc_frame* %frame.0, null
  br i1 %cmp32, label %cleanup.cont, label %if.end35

if.end35:                                         ; preds = %for.end31
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 5
  %10 = load i32, i32* %flags, align 8, !tbaa !151
  %and = and i32 %10, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %lor.lhs.false, label %if.then41

lor.lhs.false:                                    ; preds = %if.end35
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %11 = load i32, i32* %dwMaxVideoFrameSize, align 1, !tbaa !294
  %cmp36 = icmp eq i32 %11, 0
  br i1 %cmp36, label %land.lhs.true, label %if.end43

land.lhs.true:                                    ; preds = %lor.lhs.false
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %uvc_version = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %12, i32 0, i32 11
  %13 = load i16, i16* %uvc_version, align 8, !tbaa !118
  %conv38 = zext i16 %13 to i32
  %cmp39 = icmp slt i32 %conv38, 272
  br i1 %cmp39, label %if.then41, label %if.end43

if.then41:                                        ; preds = %land.lhs.true, %if.end35
  %dwMaxVideoFrameBufferSize = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 6
  %14 = load i32, i32* %dwMaxVideoFrameBufferSize, align 8, !tbaa !162
  %dwMaxVideoFrameSize42 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  store i32 %14, i32* %dwMaxVideoFrameSize42, align 1, !tbaa !294
  br label %if.end43

if.end43:                                         ; preds = %if.then41, %land.lhs.true, %lor.lhs.false
  %flags44 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 5
  %15 = load i32, i32* %flags44, align 8, !tbaa !151
  %and45 = and i32 %15, 1
  %tobool46 = icmp ne i32 %and45, 0
  br i1 %tobool46, label %cleanup.cont, label %land.lhs.true47

land.lhs.true47:                                  ; preds = %if.end43
  %dev48 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %16 = load %struct.uvc_device*, %struct.uvc_device** %dev48, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %16, i32 0, i32 3
  %17 = load i32, i32* %quirks, align 8, !tbaa !10
  %and49 = and i32 %17, 128
  %tobool50 = icmp ne i32 %and49, 0
  br i1 %tobool50, label %land.lhs.true51, label %cleanup.cont

land.lhs.true51:                                  ; preds = %land.lhs.true47
  %intf = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 5
  %18 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !46
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %18, i32 0, i32 2
  %19 = load i32, i32* %num_altsetting, align 8, !tbaa !136
  %cmp52 = icmp ugt i32 %19, 1
  br i1 %cmp52, label %if.then54, label %cleanup.cont

if.then54:                                        ; preds = %land.lhs.true51
  %dwFrameInterval = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %20 = load i32, i32* %dwFrameInterval, align 1, !tbaa !293
  %cmp55 = icmp ugt i32 %20, 100000
  br i1 %cmp55, label %cond.true, label %cond.false

cond.true:                                        ; preds = %if.then54
  %dwFrameInterval57 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 3
  %21 = load i32, i32* %dwFrameInterval57, align 1, !tbaa !293
  br label %cond.end

cond.false:                                       ; preds = %if.then54
  %dwFrameInterval58 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 9
  %22 = load i32*, i32** %dwFrameInterval58, align 8, !tbaa !155
  %arrayidx59 = getelementptr inbounds i32, i32* %22, i64 0
  %23 = load i32, i32* %arrayidx59, align 4, !tbaa !2
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %21, %cond.true ], [ %23, %cond.false ]
  %wWidth = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 2
  %24 = load i16, i16* %wWidth, align 2, !tbaa !158
  %conv60 = zext i16 %24 to i32
  %wHeight = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.0, i32 0, i32 3
  %25 = load i16, i16* %wHeight, align 4, !tbaa !159
  %conv61 = zext i16 %25 to i32
  %mul = mul nsw i32 %conv60, %conv61
  %div = sdiv i32 %mul, 8
  %bpp = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.0, i32 0, i32 2
  %26 = load i8, i8* %bpp, align 2, !tbaa !150
  %conv62 = zext i8 %26 to i32
  %mul63 = mul nsw i32 %div, %conv62
  %div64 = udiv i32 10000000, %cond
  %add = add i32 %div64, 1
  %mul65 = mul i32 %mul63, %add
  %div66 = udiv i32 %mul65, 1000
  %dev67 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %27 = load %struct.uvc_device*, %struct.uvc_device** %dev67, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %27, i32 0, i32 0
  %28 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %28, i32 0, i32 4
  %29 = load i32, i32* %speed, align 4, !tbaa !330
  %cmp68 = icmp eq i32 %29, 3
  %div71 = udiv i32 %div66, 8
  %bandwidth.0 = select i1 %cmp68, i32 %div71, i32 %div66
  %add73 = add i32 %bandwidth.0, 12
  %cmp74 = icmp ugt i32 %add73, 1024
  %add73. = select i1 %cmp74, i32 %add73, i32 1024
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  store i32 %add73., i32* %dwMaxPayloadTransferSize, align 1, !tbaa !319
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %cond.end, %land.lhs.true51, %land.lhs.true47, %if.end43, %for.end31, %for.end
  %cleanup.dest.slot.0 = phi i32 [ 1, %for.end ], [ 1, %for.end31 ], [ 0, %cond.end ], [ 0, %land.lhs.true51 ], [ 0, %land.lhs.true47 ], [ 0, %if.end43 ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.135(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.126(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @put_unaligned_le32(i32 %val, i8* %p) #1 {
entry:
  %0 = bitcast i8* %p to i32*
  store i32 %val, i32* %0, align 4, !tbaa !2
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_video_clock_update(%struct.uvc_streaming* %stream, %struct.v4l2_buffer* %v4l2_buf, %struct.uvc_buffer* %buf) #0 {
entry:
  %ts = alloca %struct.load_weight, align 8
  %rem = alloca i32, align 4
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %coerce = alloca %struct.load_weight, align 8
  %clock1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %0 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %1 = bitcast i32* %rem to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %2 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %4 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %5) #8
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.139(%struct.spinlock* %lock)
  %call3 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call)
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 2
  %6 = load i32, i32* %count, align 4, !tbaa !331
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %7 = load i32, i32* %size, align 8, !tbaa !332
  %cmp6 = icmp ult i32 %6, %7
  br i1 %cmp6, label %done, label %if.end

if.end:                                           ; preds = %entry
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %8 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !333
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  %9 = load i32, i32* %head, align 8, !tbaa !334
  %idxprom = zext i32 %9 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %8, i64 %idxprom
  %samples8 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %10 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples8, align 8, !tbaa !333
  %head9 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  %11 = load i32, i32* %head9, align 8, !tbaa !334
  %sub = sub i32 %11, 1
  %size10 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %12 = load i32, i32* %size10, align 8, !tbaa !332
  %rem11 = urem i32 %sub, %12
  %idxprom12 = zext i32 %rem11 to i64
  %arrayidx13 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %10, i64 %idxprom12
  %pts = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  %13 = load i32, i32* %pts, align 8, !tbaa !335
  %conv14 = zext i32 %13 to i64
  %sub15 = sub i64 %conv14, 2147483648
  %conv16 = trunc i64 %sub15 to i32
  %dev_stc = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 0
  %14 = load i32, i32* %dev_stc, align 8, !tbaa !336
  %sub17 = sub i32 %14, %conv16
  %dev_stc18 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx13, i32 0, i32 0
  %15 = load i32, i32* %dev_stc18, align 8, !tbaa !336
  %sub19 = sub i32 %15, %conv16
  %cmp20 = icmp eq i32 %sub17, %sub19
  br i1 %cmp20, label %done, label %if.end23

if.end23:                                         ; preds = %if.end
  %dev_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 1
  %16 = load i16, i16* %dev_sof, align 4, !tbaa !338
  %conv24 = zext i16 %16 to i32
  %add = add nsw i32 %conv24, 2048
  %shl = shl i32 %add, 16
  %dev_sof25 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx13, i32 0, i32 1
  %17 = load i16, i16* %dev_sof25, align 4, !tbaa !338
  %conv26 = zext i16 %17 to i32
  %add27 = add nsw i32 %conv26, 2048
  %shl28 = shl i32 %add27, 16
  %cmp29 = icmp ult i32 %shl28, %shl
  %add32 = add i32 %shl28, 134217728
  %add32.shl28 = select i1 %cmp29, i32 %add32, i32 %shl28
  %sub34 = sub i32 %add32.shl28, %shl
  %conv35 = zext i32 %sub34 to i64
  %mul = mul i64 %conv35, 2147483648
  %conv36 = zext i32 %shl to i64
  %conv37 = zext i32 %sub19 to i64
  %mul38 = mul i64 %conv36, %conv37
  %add39 = add i64 %mul, %mul38
  %conv40 = zext i32 %add32.shl28 to i64
  %conv41 = zext i32 %sub17 to i64
  %mul42 = mul i64 %conv40, %conv41
  %sub43 = sub i64 %add39, %mul42
  %sub44 = sub i32 %sub19, %sub17
  %call45 = call i64 @div_u64(i64 %sub43, i32 %sub44)
  %conv46 = trunc i64 %call45 to i32
  %18 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %18, 4096
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then48, label %do.end62

if.then48:                                        ; preds = %if.end23
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %19 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %name = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %19, i32 0, i32 5
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %pts49 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  %20 = load i32, i32* %pts49, align 8, !tbaa !335
  %shr = lshr i64 %call45, 16
  %and50 = and i64 %call45, 65535
  %mul51 = mul i64 %and50, 1000000
  %call52 = call i64 @div_u64(i64 %mul51, i32 65536)
  %shr53 = lshr i32 %conv46, 16
  %conv54 = zext i32 %conv46 to i64
  %and55 = and i64 %conv54, 65535
  %mul56 = mul i64 %and55, 1000000
  %call57 = call i64 @div_u64(i64 %mul56, i32 65536)
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 5
  %21 = load i16, i16* %sof_offset, align 2, !tbaa !339
  %conv58 = zext i16 %21 to i32
  %call59 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([92 x i8], [92 x i8]* @.str.1.140, i32 0, i32 0), i8* %arraydecay, i32 %20, i64 %shr, i64 %call52, i32 %shr53, i64 %call57, i32 %sub17, i32 %sub19, i32 %shl, i32 %add32.shl28, i32 %conv58)
  br label %do.end62

do.end62:                                         ; preds = %if.then48, %if.end23
  %call63 = call zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %arrayidx)
  %conv64 = zext i16 %call63 to i32
  %add65 = add nsw i32 %conv64, 2048
  %shl66 = shl i32 %add65, 16
  %call67 = call zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %arrayidx13)
  %conv68 = zext i16 %call67 to i32
  %add69 = add nsw i32 %conv68, 2048
  %shl70 = shl i32 %add69, 16
  %cmp71 = icmp ult i32 %shl70, %shl66
  %add74 = add i32 %shl70, 134217728
  %add74.shl70 = select i1 %cmp71, i32 %add74, i32 %shl70
  %cmp76 = icmp eq i32 %shl66, %add74.shl70
  br i1 %cmp76, label %done, label %if.end79

if.end79:                                         ; preds = %do.end62
  %host_ts = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx13, i32 0, i32 2
  %host_ts80 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %22 = bitcast %struct.load_weight* %host_ts to { i64, i64 }*
  %23 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %22, i32 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %struct.load_weight* %host_ts80 to { i64, i64 }*
  %28 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %27, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %call81 = call { i64, i64 } @timespec_sub(i64 %24, i64 %26, i64 %29, i64 %31)
  %32 = bitcast %struct.load_weight* %coerce to { i64, i64 }*
  %33 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 0
  %34 = extractvalue { i64, i64 } %call81, 0
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %32, i32 0, i32 1
  %36 = extractvalue { i64, i64 } %call81, 1
  store i64 %36, i64* %35, align 8
  %37 = bitcast %struct.load_weight* %ts to i8*
  %38 = bitcast %struct.load_weight* %coerce to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 16, i32 8, i1 false), !tbaa.struct !340
  %tv_sec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %39 = load i64, i64* %tv_sec, align 8, !tbaa !341
  %add82 = add nsw i64 %39, 1
  %mul83 = mul nsw i64 %add82, 1000000000
  %tv_nsec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %40 = load i64, i64* %tv_nsec, align 8, !tbaa !342
  %add84 = add nsw i64 %mul83, %40
  %conv85 = trunc i64 %add84 to i32
  %add86 = add i32 %shl66, %add74.shl70
  %div87 = udiv i32 %add86, 2
  %sub88 = sub i32 %div87, 67108864
  %cmp89 = icmp ugt i32 %sub88, %conv46
  br i1 %cmp89, label %if.then91, label %if.else

if.then91:                                        ; preds = %if.end79
  %add92 = add i32 %conv46, 134217728
  br label %if.end99

if.else:                                          ; preds = %if.end79
  %add93 = add i32 %div87, 67108864
  %cmp94 = icmp ugt i32 %conv46, %add93
  %sub97 = sub i32 %conv46, 134217728
  %sub97.conv46 = select i1 %cmp94, i32 %sub97, i32 %conv46
  br label %if.end99

if.end99:                                         ; preds = %if.else, %if.then91
  %sof.1 = phi i32 [ %add92, %if.then91 ], [ %sub97.conv46, %if.else ]
  %sub100 = sub i32 %conv85, 1000000000
  %conv101 = zext i32 %sub100 to i64
  %conv102 = zext i32 %sof.1 to i64
  %mul103 = mul i64 %conv101, %conv102
  %conv104 = zext i32 1000000000 to i64
  %conv105 = zext i32 %add74.shl70 to i64
  %mul106 = mul i64 %conv104, %conv105
  %add107 = add i64 %mul103, %mul106
  %conv108 = zext i32 %conv85 to i64
  %conv109 = zext i32 %shl66 to i64
  %mul110 = mul i64 %conv108, %conv109
  %sub111 = sub i64 %add107, %mul110
  %sub112 = sub i32 %add74.shl70, %shl66
  %call113 = call i64 @div_u64(i64 %sub111, i32 %sub112)
  %call114 = call i64 @div_u64_rem(i64 %call113, i32 1000000000, i32* %rem)
  %conv115 = trunc i64 %call114 to i32
  %host_ts116 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %tv_sec117 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %host_ts116, i32 0, i32 0
  %41 = load i64, i64* %tv_sec117, align 8, !tbaa !343
  %sub118 = sub nsw i64 %41, 1
  %conv119 = zext i32 %conv115 to i64
  %add120 = add nsw i64 %sub118, %conv119
  %tv_sec121 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  store i64 %add120, i64* %tv_sec121, align 8, !tbaa !341
  %host_ts122 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 2
  %tv_nsec123 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %host_ts122, i32 0, i32 1
  %42 = load i64, i64* %tv_nsec123, align 8, !tbaa !344
  %43 = load i32, i32* %rem, align 4, !tbaa !2
  %conv124 = zext i32 %43 to i64
  %add125 = add nsw i64 %42, %conv124
  %tv_nsec126 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  store i64 %add125, i64* %tv_nsec126, align 8, !tbaa !342
  %tv_nsec127 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %44 = load i64, i64* %tv_nsec127, align 8, !tbaa !342
  %cmp128 = icmp sge i64 %44, 1000000000
  br i1 %cmp128, label %if.then130, label %do.body135

if.then130:                                       ; preds = %if.end99
  %tv_sec131 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %45 = load i64, i64* %tv_sec131, align 8, !tbaa !341
  %inc = add nsw i64 %45, 1
  store i64 %inc, i64* %tv_sec131, align 8, !tbaa !341
  %tv_nsec132 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %46 = load i64, i64* %tv_nsec132, align 8, !tbaa !342
  %sub133 = sub nsw i64 %46, 1000000000
  store i64 %sub133, i64* %tv_nsec132, align 8, !tbaa !342
  br label %do.body135

do.body135:                                       ; preds = %if.then130, %if.end99
  %47 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and136 = and i32 %47, 4096
  %tobool137 = icmp ne i32 %and136, 0
  br i1 %tobool137, label %if.then138, label %do.end162

if.then138:                                       ; preds = %do.body135
  %dev139 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %48 = load %struct.uvc_device*, %struct.uvc_device** %dev139, align 8, !tbaa !102
  %name140 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %48, i32 0, i32 5
  %arraydecay141 = getelementptr inbounds [32 x i8], [32 x i8]* %name140, i32 0, i32 0
  %shr142 = lshr i32 %sof.1, 16
  %conv143 = zext i32 %sof.1 to i64
  %and144 = and i64 %conv143, 65535
  %mul145 = mul i64 %and144, 1000000
  %call146 = call i64 @div_u64(i64 %mul145, i32 65536)
  %tv_sec147 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %49 = load i64, i64* %tv_sec147, align 8, !tbaa !341
  %tv_nsec148 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %50 = load i64, i64* %tv_nsec148, align 8, !tbaa !342
  %div149 = sdiv i64 %50, 1000
  %timestamp = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 5
  %tv_sec150 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp, i32 0, i32 0
  %51 = load i64, i64* %tv_sec150, align 8, !tbaa !345
  %timestamp151 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 5
  %tv_usec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp151, i32 0, i32 1
  %52 = load i64, i64* %tv_usec, align 8, !tbaa !346
  %host_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 3
  %53 = load i16, i16* %host_sof, align 8, !tbaa !347
  %conv152 = zext i16 %53 to i32
  %dev_sof153 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx, i32 0, i32 1
  %54 = load i16, i16* %dev_sof153, align 4, !tbaa !338
  %conv154 = zext i16 %54 to i32
  %host_sof155 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx13, i32 0, i32 3
  %55 = load i16, i16* %host_sof155, align 8, !tbaa !347
  %conv156 = zext i16 %55 to i32
  %dev_sof157 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx13, i32 0, i32 1
  %56 = load i16, i16* %dev_sof157, align 4, !tbaa !338
  %conv158 = zext i16 %56 to i32
  %call159 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([106 x i8], [106 x i8]* @.str.2.141, i32 0, i32 0), i8* %arraydecay141, i32 %shr142, i64 %call146, i64 %call113, i64 %49, i64 %div149, i64 %51, i64 %52, i32 %shl66, i32 %conv152, i32 %conv154, i32 %add74.shl70, i32 %conv156, i32 %conv158, i32 1000000000, i32 %conv85)
  br label %do.end162

do.end162:                                        ; preds = %if.then138, %do.body135
  %tv_sec163 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %57 = load i64, i64* %tv_sec163, align 8, !tbaa !341
  %timestamp164 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 5
  %tv_sec165 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp164, i32 0, i32 0
  store i64 %57, i64* %tv_sec165, align 8, !tbaa !345
  %tv_nsec166 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %58 = load i64, i64* %tv_nsec166, align 8, !tbaa !342
  %div167 = sdiv i64 %58, 1000
  %timestamp168 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 5
  %tv_usec169 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp168, i32 0, i32 1
  store i64 %div167, i64* %tv_usec169, align 8, !tbaa !346
  br label %done

done:                                             ; preds = %do.end162, %do.end62, %if.end, %entry
  %clock170 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %lock171 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock170, i32 0, i32 6
  call void @spin_unlock_irqrestore.142(%struct.spinlock* %lock171, i64 %call3)
  %59 = bitcast i32* %rem to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %59) #8
  %60 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %60) #8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal %struct.raw_spinlock* @spinlock_check.139(%struct.spinlock* %lock) #1 {
entry:
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %0 to %struct.raw_spinlock*
  ret %struct.raw_spinlock* %rlock
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @div_u64(i64 %dividend, i32 %divisor) #1 {
entry:
  %remainder = alloca i32, align 4
  %0 = bitcast i32* %remainder to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %0) #8
  %call = call i64 @div_u64_rem(i64 %dividend, i32 %divisor, i32* %remainder)
  %1 = bitcast i32* %remainder to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %1) #8
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal zeroext i16 @uvc_video_clock_host_sof(%struct.uvc_clock_sample* %sample) #0 {
entry:
  %host_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 3
  %0 = load i16, i16* %host_sof, align 8, !tbaa !347
  %conv = zext i16 %0 to i32
  %dev_sof = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 1
  %1 = load i16, i16* %dev_sof, align 4, !tbaa !338
  %conv1 = zext i16 %1 to i32
  %sub = sub nsw i32 %conv, %conv1
  %and = and i32 %sub, 255
  %conv2 = trunc i32 %and to i8
  %dev_sof3 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %sample, i32 0, i32 1
  %2 = load i16, i16* %dev_sof3, align 4, !tbaa !338
  %conv4 = zext i16 %2 to i32
  %conv5 = sext i8 %conv2 to i32
  %add = add nsw i32 %conv4, %conv5
  %and6 = and i32 %add, 2047
  %conv7 = trunc i32 %and6 to i16
  ret i16 %conv7
}

; Function Attrs: inlinehint nounwind uwtable
define internal { i64, i64 } @timespec_sub(i64 %lhs.coerce0, i64 %lhs.coerce1, i64 %rhs.coerce0, i64 %rhs.coerce1) #1 {
entry:
  %retval = alloca %struct.load_weight, align 8
  %lhs = alloca %struct.load_weight, align 8
  %rhs = alloca %struct.load_weight, align 8
  %ts_delta = alloca %struct.load_weight, align 8
  %0 = bitcast %struct.load_weight* %lhs to { i64, i64 }*
  %1 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 0
  store i64 %lhs.coerce0, i64* %1, align 8
  %2 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %0, i32 0, i32 1
  store i64 %lhs.coerce1, i64* %2, align 8
  %3 = bitcast %struct.load_weight* %rhs to { i64, i64 }*
  %4 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 0
  store i64 %rhs.coerce0, i64* %4, align 8
  %5 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %3, i32 0, i32 1
  store i64 %rhs.coerce1, i64* %5, align 8
  %6 = bitcast %struct.load_weight* %ts_delta to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %6) #8
  %tv_sec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %lhs, i32 0, i32 0
  %7 = load i64, i64* %tv_sec, align 8, !tbaa !341
  %tv_sec1 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %rhs, i32 0, i32 0
  %8 = load i64, i64* %tv_sec1, align 8, !tbaa !341
  %sub = sub nsw i64 %7, %8
  %tv_nsec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %lhs, i32 0, i32 1
  %9 = load i64, i64* %tv_nsec, align 8, !tbaa !342
  %tv_nsec2 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %rhs, i32 0, i32 1
  %10 = load i64, i64* %tv_nsec2, align 8, !tbaa !342
  %sub3 = sub nsw i64 %9, %10
  call void @set_normalized_timespec(%struct.load_weight* %ts_delta, i64 %sub, i64 %sub3)
  %11 = bitcast %struct.load_weight* %retval to i8*
  %12 = bitcast %struct.load_weight* %ts_delta to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 16, i32 8, i1 false), !tbaa.struct !340
  %13 = bitcast %struct.load_weight* %ts_delta to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %13) #8
  %14 = bitcast %struct.load_weight* %retval to { i64, i64 }*
  %15 = load { i64, i64 }, { i64, i64 }* %14, align 8
  ret { i64, i64 } %15
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @div_u64_rem(i64 %dividend, i32 %divisor, i32* %remainder) #1 {
entry:
  %conv = zext i32 %divisor to i64
  %rem = urem i64 %dividend, %conv
  %conv1 = trunc i64 %rem to i32
  store i32 %conv1, i32* %remainder, align 4, !tbaa !2
  %conv2 = zext i32 %divisor to i64
  %div = udiv i64 %dividend, %conv2
  ret i64 %div
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @spin_unlock_irqrestore.142(%struct.spinlock* %lock, i64 %flags) #1 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %1 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  %cmp = icmp eq i64* %__dummy, %__dummy2
  %conv = zext i1 %cmp to i32
  %2 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %2) #8
  %3 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  %4 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %4 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %rlock, i64 %flags)
  ret void
}

declare void @set_normalized_timespec(%struct.load_weight*, i64, i64) #2

; Function Attrs: nounwind uwtable
define i64 @uvc_video_stats_dump(%struct.uvc_streaming* %stream, i8* %buf, i64 %size) #0 {
entry:
  %ts = alloca %struct.load_weight, align 8
  %0 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats, i32 0, i32 1
  %stop_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 1
  %tv_sec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %stop_ts, i32 0, i32 0
  %1 = load i64, i64* %tv_sec, align 8, !tbaa !348
  %stats2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream3 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats2, i32 0, i32 1
  %start_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream3, i32 0, i32 0
  %tv_sec4 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %start_ts, i32 0, i32 0
  %2 = load i64, i64* %tv_sec4, align 8, !tbaa !349
  %sub = sub nsw i64 %1, %2
  %tv_sec5 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  store i64 %sub, i64* %tv_sec5, align 8, !tbaa !341
  %stats6 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats6, i32 0, i32 1
  %stop_ts8 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream7, i32 0, i32 1
  %tv_nsec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %stop_ts8, i32 0, i32 1
  %3 = load i64, i64* %tv_nsec, align 8, !tbaa !350
  %stats9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream10 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats9, i32 0, i32 1
  %start_ts11 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream10, i32 0, i32 0
  %tv_nsec12 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %start_ts11, i32 0, i32 1
  %4 = load i64, i64* %tv_nsec12, align 8, !tbaa !351
  %sub13 = sub nsw i64 %3, %4
  %tv_nsec14 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  store i64 %sub13, i64* %tv_nsec14, align 8, !tbaa !342
  %tv_nsec15 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %5 = load i64, i64* %tv_nsec15, align 8, !tbaa !342
  %cmp = icmp slt i64 %5, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tv_sec16 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %6 = load i64, i64* %tv_sec16, align 8, !tbaa !341
  %dec = add nsw i64 %6, -1
  store i64 %dec, i64* %tv_sec16, align 8, !tbaa !341
  %tv_nsec17 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %7 = load i64, i64* %tv_nsec17, align 8, !tbaa !342
  %add = add nsw i64 %7, 1000000000
  store i64 %add, i64* %tv_nsec17, align 8, !tbaa !342
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %tv_sec18 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %8 = load i64, i64* %tv_sec18, align 8, !tbaa !341
  %mul = mul nsw i64 %8, 1000
  %tv_nsec19 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %9 = load i64, i64* %tv_nsec19, align 8, !tbaa !342
  %div = sdiv i64 %9, 1000000
  %add20 = add nsw i64 %mul, %div
  %conv = trunc i64 %add20 to i32
  %cmp21 = icmp ne i32 %conv, 0
  br i1 %cmp21, label %if.then23, label %if.end28

if.then23:                                        ; preds = %if.end
  %stats24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream25 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats24, i32 0, i32 1
  %scr_sof_count = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream25, i32 0, i32 12
  %10 = load i32, i32* %scr_sof_count, align 8, !tbaa !352
  %mul26 = mul i32 %10, 1000
  %div27 = udiv i32 %mul26, %conv
  br label %if.end28

if.end28:                                         ; preds = %if.then23, %if.end
  %scr_sof_freq.0 = phi i32 [ %div27, %if.then23 ], [ 0, %if.end ]
  %add.ptr = getelementptr inbounds i8, i8* %buf, i64 0
  %sub29 = sub i64 %size, 0
  %stats30 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream31 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats30, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream31, i32 0, i32 2
  %11 = load i32, i32* %nb_frames, align 8, !tbaa !353
  %stats32 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream33 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats32, i32 0, i32 1
  %nb_packets = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream33, i32 0, i32 3
  %12 = load i32, i32* %nb_packets, align 4, !tbaa !354
  %stats34 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream35 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats34, i32 0, i32 1
  %nb_empty = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream35, i32 0, i32 4
  %13 = load i32, i32* %nb_empty, align 8, !tbaa !355
  %stats36 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream37 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats36, i32 0, i32 1
  %nb_errors = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream37, i32 0, i32 6
  %14 = load i32, i32* %nb_errors, align 8, !tbaa !356
  %stats38 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream39 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats38, i32 0, i32 1
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream39, i32 0, i32 5
  %15 = load i32, i32* %nb_invalid, align 4, !tbaa !357
  %call = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr, i64 %sub29, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.3.143, i32 0, i32 0), i32 %11, i32 %12, i32 %13, i32 %14, i32 %15)
  %conv40 = sext i32 %call to i64
  %add41 = add i64 0, %conv40
  %add.ptr42 = getelementptr inbounds i8, i8* %buf, i64 %add41
  %sub43 = sub i64 %size, %add41
  %stats44 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream45 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats44, i32 0, i32 1
  %nb_pts_early = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream45, i32 0, i32 8
  %16 = load i32, i32* %nb_pts_early, align 8, !tbaa !358
  %stats46 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream47 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats46, i32 0, i32 1
  %nb_pts_initial = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream47, i32 0, i32 9
  %17 = load i32, i32* %nb_pts_initial, align 4, !tbaa !359
  %stats48 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream49 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats48, i32 0, i32 1
  %nb_pts_constant = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream49, i32 0, i32 7
  %18 = load i32, i32* %nb_pts_constant, align 4, !tbaa !360
  %call50 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr42, i64 %sub43, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4.144, i32 0, i32 0), i32 %16, i32 %17, i32 %18)
  %conv51 = sext i32 %call50 to i64
  %add52 = add i64 %add41, %conv51
  %add.ptr53 = getelementptr inbounds i8, i8* %buf, i64 %add52
  %sub54 = sub i64 %size, %add52
  %stats55 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream56 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats55, i32 0, i32 1
  %nb_scr_count_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream56, i32 0, i32 10
  %19 = load i32, i32* %nb_scr_count_ok, align 8, !tbaa !361
  %stats57 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream58 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats57, i32 0, i32 1
  %nb_scr_diffs_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream58, i32 0, i32 11
  %20 = load i32, i32* %nb_scr_diffs_ok, align 4, !tbaa !362
  %call59 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr53, i64 %sub54, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5.145, i32 0, i32 0), i32 %19, i32 %20)
  %conv60 = sext i32 %call59 to i64
  %add61 = add i64 %add52, %conv60
  %add.ptr62 = getelementptr inbounds i8, i8* %buf, i64 %add61
  %sub63 = sub i64 %size, %add61
  %stats64 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream65 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats64, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream65, i32 0, i32 14
  %21 = load i32, i32* %min_sof, align 8, !tbaa !363
  %stats66 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream67 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats66, i32 0, i32 1
  %max_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream67, i32 0, i32 15
  %22 = load i32, i32* %max_sof, align 4, !tbaa !364
  %div68 = udiv i32 %scr_sof_freq.0, 1000
  %rem = urem i32 %scr_sof_freq.0, 1000
  %call69 = call i32 (i8*, i64, i8*, ...) @scnprintf(i8* %add.ptr62, i64 %sub63, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.6.146, i32 0, i32 0), i32 %21, i32 %22, i32 %div68, i32 %rem)
  %conv70 = sext i32 %call69 to i64
  %add71 = add i64 %add61, %conv70
  %23 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %23) #8
  ret i64 %add71
}

declare i32 @scnprintf(i8*, i64, i8*, ...) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_video_suspend(%struct.uvc_streaming* %stream) #0 {
entry:
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call = call i32 @uvc_queue_streaming.149(%struct.uvc_video_queue* %queue)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %return

if.end:                                           ; preds = %entry
  %frozen = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, -2
  %bf.set = or i8 %bf.clear, 1
  store i8 %bf.set, i8* %frozen, align 8
  call void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 0)
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum, align 8, !tbaa !122
  %call1 = call i32 @usb_set_interface(%struct.usb_device* %1, i32 %2, i32 0)
  br label %return

return:                                           ; preds = %if.end, %entry
  ret i32 0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_queue_streaming.149(%struct.uvc_video_queue* %queue) #1 {
entry:
  %queue1 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 0
  %call = call zeroext i1 @vb2_is_streaming.150(%struct.vb2_queue* %queue1)
  %conv = zext i1 %call to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 %free_buffers) #0 {
entry:
  call void @uvc_video_stats_stop(%struct.uvc_streaming* %stream)
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %urb1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 21
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb1, i64 0, i64 %idxprom
  %0 = load %struct.urb*, %struct.urb** %arrayidx, align 8, !tbaa !45
  %cmp2 = icmp eq %struct.urb* %0, null
  br i1 %cmp2, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  call void @usb_kill_urb(%struct.urb* %0)
  call void @usb_free_urb(%struct.urb* %0)
  %urb3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 21
  %idxprom4 = zext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb3, i64 0, i64 %idxprom4
  store %struct.urb* null, %struct.urb** %arrayidx5, align 8, !tbaa !45
  br label %for.inc

for.inc:                                          ; preds = %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tobool = icmp ne i32 %free_buffers, 0
  br i1 %tobool, label %if.then6, label %if.end7

if.then6:                                         ; preds = %for.end
  call void @uvc_free_urb_buffers(%struct.uvc_streaming* %stream)
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %for.end
  ret void
}

declare i32 @usb_set_interface(%struct.usb_device*, i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_stop(%struct.uvc_streaming* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats, i32 0, i32 1
  %stop_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 1
  call void @ktime_get_ts(%struct.load_weight* %stop_ts)
  ret void
}

declare void @usb_kill_urb(%struct.urb*) #2

declare void @usb_free_urb(%struct.urb*) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_free_urb_buffers(%struct.uvc_streaming* %stream) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, 5
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom
  %0 = load i8*, i8** %arrayidx, align 8, !tbaa !45
  %tobool = icmp ne i8* %0, null
  br i1 %tobool, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %urb_size = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %3 = load i32, i32* %urb_size, align 8, !tbaa !365
  %conv = zext i32 %3 to i64
  %urb_buffer1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom2 = zext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer1, i64 0, i64 %idxprom2
  %4 = load i8*, i8** %arrayidx3, align 8, !tbaa !45
  %urb_dma = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 23
  %idxprom4 = zext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom4
  %5 = load i64, i64* %arrayidx5, align 8, !tbaa !366
  call void @usb_free_coherent(%struct.usb_device* %2, i64 %conv, i8* %4, i64 %5)
  %urb_buffer6 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom7 = zext i32 %i.0 to i64
  %arrayidx8 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer6, i64 0, i64 %idxprom7
  store i8* null, i8** %arrayidx8, align 8, !tbaa !45
  br label %for.inc

for.inc:                                          ; preds = %if.then, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %urb_size9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  store i32 0, i32* %urb_size9, align 8, !tbaa !365
  ret void
}

declare void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #2

declare void @ktime_get_ts(%struct.load_weight*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i1 @vb2_is_streaming.150(%struct.vb2_queue* %q) #1 {
entry:
  %streaming = getelementptr inbounds %struct.vb2_queue, %struct.vb2_queue* %q, i32 0, i32 21
  %bf.load = load i8, i8* %streaming, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  ret i1 %tobool
}

; Function Attrs: nounwind uwtable
define i32 @uvc_video_resume(%struct.uvc_streaming* %stream, i32 %reset) #0 {
entry:
  %tobool = icmp ne i32 %reset, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum, align 8, !tbaa !122
  %call = call i32 @usb_set_interface(%struct.usb_device* %1, i32 %2, i32 0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %frozen = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, -2
  store i8 %bf.clear, i8* %frozen, align 8
  call void @uvc_video_clock_reset(%struct.uvc_streaming* %stream)
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %call1 = call i32 @uvc_commit_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl)
  %cmp = icmp slt i32 %call1, 0
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  br i1 %cmp, label %if.then2, label %if.end4

if.then2:                                         ; preds = %if.end
  %call3 = call i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue, i32 0)
  br label %cleanup

if.end4:                                          ; preds = %if.end
  %call6 = call i32 @uvc_queue_streaming.149(%struct.uvc_video_queue* %queue)
  %tobool7 = icmp ne i32 %call6, 0
  br i1 %tobool7, label %if.end9, label %cleanup

if.end9:                                          ; preds = %if.end4
  %call10 = call i32 @uvc_init_video(%struct.uvc_streaming* %stream, i32 16)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %if.then12, label %cleanup

if.then12:                                        ; preds = %if.end9
  %queue13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call14 = call i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue13, i32 0)
  br label %cleanup

cleanup:                                          ; preds = %if.then12, %if.end9, %if.end4, %if.then2
  %retval.0 = phi i32 [ %call1, %if.then2 ], [ 0, %if.end4 ], [ %call10, %if.then12 ], [ %call10, %if.end9 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_reset(%struct.uvc_streaming* %stream) #0 {
entry:
  %clock1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 1
  store i32 0, i32* %head, align 8, !tbaa !334
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 2
  store i32 0, i32* %count, align 4, !tbaa !331
  %last_sof = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 4
  store i16 -1, i16* %last_sof, align 4, !tbaa !367
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 5
  store i16 -1, i16* %sof_offset, align 2, !tbaa !339
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_commit_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe) #0 {
entry:
  %call = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %probe, i32 0)
  ret i32 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video(%struct.uvc_streaming* %stream, i32 %gfp_flags) #0 {
entry:
  %intf1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 5
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf1, align 8, !tbaa !46
  %sequence = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  store i32 -1, i32* %sequence, align 4, !tbaa !368
  %last_fid = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  store i8 -1, i8* %last_fid, align 8, !tbaa !369
  %bulk = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk, i32 0, i32 1
  store i32 0, i32* %header_size, align 8, !tbaa !370
  %bulk2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk2, i32 0, i32 2
  store i32 0, i32* %skip_payload, align 4, !tbaa !371
  %bulk3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk3, i32 0, i32 3
  store i32 0, i32* %payload_size, align 8, !tbaa !372
  call void @uvc_video_stats_start(%struct.uvc_streaming* %stream)
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 2
  %1 = load i32, i32* %num_altsetting, align 8, !tbaa !136
  %cmp = icmp ugt i32 %1, 1
  br i1 %cmp, label %if.then, label %if.else65

if.then:                                          ; preds = %entry
  %intfnum4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum4, align 8, !tbaa !122
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %3 = load i32, i32* %dwMaxPayloadTransferSize, align 2, !tbaa !373
  %cmp5 = icmp eq i32 %3, 0
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %4, 1024
  %tobool = icmp ne i32 %and, 0
  br i1 %cmp5, label %do.body, label %do.body8

do.body:                                          ; preds = %if.then
  br i1 %tobool, label %if.then7, label %if.end16

if.then7:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.25.153, i32 0, i32 0))
  br label %if.end16

do.body8:                                         ; preds = %if.then
  br i1 %tobool, label %if.then11, label %if.end16

if.then11:                                        ; preds = %do.body8
  %call12 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.26.154, i32 0, i32 0), i32 %3)
  br label %if.end16

if.end16:                                         ; preds = %if.then11, %do.body8, %if.then7, %do.body
  %bandwidth.0 = phi i32 [ 1, %if.then7 ], [ 1, %do.body ], [ %3, %if.then11 ], [ %3, %do.body8 ]
  br label %for.cond

for.cond:                                         ; preds = %LeafBlock, %if.end16
  %best_psize.0 = phi i32 [ -1, %if.end16 ], [ %best_psize.2, %LeafBlock ]
  %best_ep.0 = phi %struct.usb_host_endpoint* [ null, %if.end16 ], [ %best_ep.2, %LeafBlock ]
  %i.0 = phi i32 [ 0, %if.end16 ], [ %inc, %LeafBlock ]
  %altsetting.0 = phi i32 [ undef, %if.end16 ], [ %altsetting.2, %LeafBlock ]
  %num_altsetting17 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 2
  %5 = load i32, i32* %num_altsetting17, align 8, !tbaa !136
  %cmp18 = icmp ult i32 %i.0, %5
  br i1 %cmp18, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %altsetting19 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 0
  %6 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting19, align 8, !tbaa !121
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %6, i64 %idxprom
  %header = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 8
  %bEndpointAddress = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header, i32 0, i32 1
  %7 = load i8, i8* %bEndpointAddress, align 1, !tbaa !126
  %call20 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx, i8 zeroext %7)
  %cmp21 = icmp eq %struct.usb_host_endpoint* %call20, null
  br i1 %cmp21, label %LeafBlock, label %if.end23

if.end23:                                         ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %8 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %8, i32 0, i32 0
  %9 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %call24 = call i32 @uvc_endpoint_max_bpi(%struct.usb_device* %9, %struct.usb_host_endpoint* %call20)
  %cmp25 = icmp uge i32 %call24, %bandwidth.0
  %cmp26 = icmp ule i32 %call24, %best_psize.0
  %or.cond = and i1 %cmp25, %cmp26
  br i1 %or.cond, label %if.then27, label %LeafBlock

if.then27:                                        ; preds = %if.end23
  %desc = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %arrayidx, i32 0, i32 0
  %bAlternateSetting = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %desc, i32 0, i32 3
  %10 = load i8, i8* %bAlternateSetting, align 1, !tbaa !374
  %conv = zext i8 %10 to i32
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.then27, %if.end23, %for.body
  %best_psize.2 = phi i32 [ %best_psize.0, %for.body ], [ %call24, %if.then27 ], [ %best_psize.0, %if.end23 ]
  %best_ep.2 = phi %struct.usb_host_endpoint* [ %best_ep.0, %for.body ], [ %call20, %if.then27 ], [ %best_ep.0, %if.end23 ]
  %altsetting.2 = phi i32 [ %altsetting.0, %for.body ], [ %conv, %if.then27 ], [ %altsetting.0, %if.end23 ]
  %cleanup.dest.slot.0 = phi i32 [ 8, %for.body ], [ 0, %if.then27 ], [ 0, %if.end23 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 8
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %cmp30 = icmp eq %struct.usb_host_endpoint* %best_ep.0, null
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and34 = and i32 %11, 1024
  %tobool35 = icmp ne i32 %and34, 0
  br i1 %cmp30, label %do.body33, label %do.body42

do.body33:                                        ; preds = %for.end
  br i1 %tobool35, label %if.then36, label %LeafBlock2

if.then36:                                        ; preds = %do.body33
  %call37 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.27.155, i32 0, i32 0))
  br label %LeafBlock2

do.body42:                                        ; preds = %for.end
  br i1 %tobool35, label %if.then45, label %do.end49

if.then45:                                        ; preds = %do.body42
  %call46 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.28.156, i32 0, i32 0), i32 %altsetting.0, i32 %best_psize.0)
  br label %do.end49

do.end49:                                         ; preds = %if.then45, %do.body42
  %dev50 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %12 = load %struct.uvc_device*, %struct.uvc_device** %dev50, align 8, !tbaa !102
  %udev51 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %12, i32 0, i32 0
  %13 = load %struct.usb_device*, %struct.usb_device** %udev51, align 8, !tbaa !63
  %call52 = call i32 @usb_set_interface(%struct.usb_device* %13, i32 %2, i32 %altsetting.0)
  %cmp53 = icmp slt i32 %call52, 0
  br i1 %cmp53, label %LeafBlock2, label %if.end56

if.end56:                                         ; preds = %do.end49
  %call57 = call i32 @uvc_init_video_isoc(%struct.uvc_streaming* %stream, %struct.usb_host_endpoint* %best_ep.0, i32 %gfp_flags)
  br label %LeafBlock2

LeafBlock2:                                       ; preds = %if.end56, %do.end49, %if.then36, %do.body33
  %ret.0 = phi i32 [ %call57, %if.end56 ], [ undef, %if.then36 ], [ undef, %do.body33 ], [ %call52, %do.end49 ]
  %cleanup.dest.slot.1 = phi i32 [ 0, %if.end56 ], [ 1, %if.then36 ], [ 1, %do.body33 ], [ 1, %do.end49 ]
  %retval.0 = phi i32 [ undef, %if.end56 ], [ -5, %if.then36 ], [ -5, %do.body33 ], [ %call52, %do.end49 ]
  %SwitchLeaf3 = icmp eq i32 %cleanup.dest.slot.1, 0
  br i1 %SwitchLeaf3, label %if.end76, label %cleanup96

if.else65:                                        ; preds = %entry
  %altsetting66 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 0
  %14 = load %struct.usb_host_interface*, %struct.usb_host_interface** %altsetting66, align 8, !tbaa !121
  %arrayidx67 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %14, i64 0
  %header68 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 8
  %bEndpointAddress69 = getelementptr inbounds %struct.uvc_streaming_header, %struct.uvc_streaming_header* %header68, i32 0, i32 1
  %15 = load i8, i8* %bEndpointAddress69, align 1, !tbaa !126
  %call70 = call %struct.usb_host_endpoint* @uvc_find_endpoint(%struct.usb_host_interface* %arrayidx67, i8 zeroext %15)
  %cmp71 = icmp eq %struct.usb_host_endpoint* %call70, null
  br i1 %cmp71, label %cleanup96, label %if.end74

if.end74:                                         ; preds = %if.else65
  %call75 = call i32 @uvc_init_video_bulk(%struct.uvc_streaming* %stream, %struct.usb_host_endpoint* %call70, i32 %gfp_flags)
  br label %if.end76

if.end76:                                         ; preds = %if.end74, %LeafBlock2
  %ret.1 = phi i32 [ %call75, %if.end74 ], [ %ret.0, %LeafBlock2 ]
  %cmp77 = icmp slt i32 %ret.1, 0
  br i1 %cmp77, label %cleanup96, label %if.end80

if.end80:                                         ; preds = %if.end76
  br label %for.cond81

for.cond81:                                       ; preds = %for.inc93, %if.end80
  %i.1 = phi i32 [ 0, %if.end80 ], [ %inc94, %for.inc93 ]
  %cmp82 = icmp ult i32 %i.1, 5
  br i1 %cmp82, label %for.body84, label %cleanup96

for.body84:                                       ; preds = %for.cond81
  %urb = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 21
  %idxprom85 = zext i32 %i.1 to i64
  %arrayidx86 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb, i64 0, i64 %idxprom85
  %16 = load %struct.urb*, %struct.urb** %arrayidx86, align 8, !tbaa !45
  %call87 = call i32 @usb_submit_urb(%struct.urb* %16, i32 %gfp_flags)
  %cmp88 = icmp slt i32 %call87, 0
  br i1 %cmp88, label %if.then90, label %for.inc93

if.then90:                                        ; preds = %for.body84
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.29.157, i32 0, i32 0), i32 %i.1, i32 %call87)
  call void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 1)
  br label %cleanup96

for.inc93:                                        ; preds = %for.body84
  %inc94 = add i32 %i.1, 1
  br label %for.cond81

cleanup96:                                        ; preds = %if.then90, %for.cond81, %if.end76, %if.else65, %LeafBlock2
  %retval.1 = phi i32 [ %call87, %if.then90 ], [ -5, %if.else65 ], [ %ret.1, %if.end76 ], [ 0, %for.cond81 ], [ %retval.0, %LeafBlock2 ]
  ret i32 %retval.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_start(%struct.uvc_streaming* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %0 = bitcast %struct.anon.71* %stats to i8*
  call void @llvm.memset.p0i8.i64(i8* %0, i8 0, i64 152, i32 8, i1 false)
  %stats1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream2 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats1, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream2, i32 0, i32 14
  store i32 2048, i32* %min_sof, align 8, !tbaa !363
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_endpoint_max_bpi(%struct.usb_device* %dev, %struct.usb_host_endpoint* %ep) #0 {
entry:
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %0 = load i32, i32* %speed, align 4, !tbaa !330
  %Pivot = icmp slt i32 %0, 5
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %SwitchLeaf2 = icmp eq i32 %0, 5
  br i1 %SwitchLeaf2, label %sw.bb, label %sw.default

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %0, 3
  br i1 %SwitchLeaf, label %sw.bb1, label %sw.default

sw.bb:                                            ; preds = %LeafBlock1
  %ss_ep_comp = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 1
  %wBytesPerInterval = getelementptr inbounds %struct.usb_ss_ep_comp_descriptor, %struct.usb_ss_ep_comp_descriptor* %ss_ep_comp, i32 0, i32 4
  %1 = load i16, i16* %wBytesPerInterval, align 1, !tbaa !375
  %conv = zext i16 %1 to i32
  br label %cleanup

sw.bb1:                                           ; preds = %LeafBlock
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc)
  %conv2 = trunc i32 %call to i16
  %conv3 = zext i16 %conv2 to i32
  %and = and i32 %conv3, 2047
  %conv4 = zext i16 %conv2 to i32
  %shr = ashr i32 %conv4, 11
  %and5 = and i32 %shr, 3
  %add = add nsw i32 1, %and5
  %mul = mul nsw i32 %and, %add
  br label %cleanup

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1
  %desc6 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call7 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc6)
  %conv8 = trunc i32 %call7 to i16
  %conv9 = zext i16 %conv8 to i32
  %and10 = and i32 %conv9, 2047
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %sw.bb1, %sw.bb
  %retval.0 = phi i32 [ %mul, %sw.bb1 ], [ %and10, %sw.default ], [ %conv, %sw.bb ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video_isoc(%struct.uvc_streaming* %stream, %struct.usb_host_endpoint* %ep, i32 %gfp_flags) #0 {
entry:
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %call = call i32 @uvc_endpoint_max_bpi(%struct.usb_device* %1, %struct.usb_host_endpoint* %ep)
  %conv = trunc i32 %call to i16
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwMaxVideoFrameSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 9
  %2 = load i32, i32* %dwMaxVideoFrameSize, align 2, !tbaa !174
  %conv1 = zext i16 %conv to i32
  %call2 = call i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming* %stream, i32 %2, i32 %conv1, i32 %gfp_flags)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %conv to i32
  %mul = mul i32 %call2, %conv4
  br label %for.cond

for.cond:                                         ; preds = %for.end, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc40, %for.end ]
  %cmp5 = icmp ult i32 %i.0, 5
  br i1 %cmp5, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call7 = call %struct.urb* @usb_alloc_urb(i32 %call2, i32 %gfp_flags)
  %cmp8 = icmp eq %struct.urb* %call7, null
  br i1 %cmp8, label %if.then10, label %if.end11

if.then10:                                        ; preds = %for.body
  call void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 1)
  br label %cleanup

if.end11:                                         ; preds = %for.body
  %dev12 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev12, align 8, !tbaa !102
  %udev13 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev13, align 8, !tbaa !63
  %dev14 = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 8
  store %struct.usb_device* %4, %struct.usb_device** %dev14, align 8, !tbaa !376
  %5 = bitcast %struct.uvc_streaming* %stream to i8*
  %context = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 27
  store i8* %5, i8** %context, align 8, !tbaa !378
  %dev15 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %6 = load %struct.uvc_device*, %struct.uvc_device** %dev15, align 8, !tbaa !102
  %udev16 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %6, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev16, align 8, !tbaa !63
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2
  %8 = load i8, i8* %bEndpointAddress, align 2, !tbaa !164
  %conv17 = zext i8 %8 to i32
  %call18 = call i32 @__create_pipe(%struct.usb_device* %7, i32 %conv17)
  %or = or i32 0, %call18
  %or19 = or i32 %or, 128
  %pipe = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 10
  store i32 %or19, i32* %pipe, align 8, !tbaa !379
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 13
  store i32 6, i32* %transfer_flags, align 4, !tbaa !380
  %urb_dma = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 23
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom
  %9 = load i64, i64* %arrayidx, align 8, !tbaa !366
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 15
  store i64 %9, i64* %transfer_dma, align 8, !tbaa !381
  %desc20 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc20, i32 0, i32 5
  %10 = load i8, i8* %bInterval, align 2, !tbaa !382
  %conv21 = zext i8 %10 to i32
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 25
  store i32 %conv21, i32* %interval, align 8, !tbaa !383
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom22 = zext i32 %i.0 to i64
  %arrayidx23 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom22
  %11 = load i8*, i8** %arrayidx23, align 8, !tbaa !45
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 14
  store i8* %11, i8** %transfer_buffer, align 8, !tbaa !384
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 28
  store void (%struct.urb*)* @uvc_video_complete, void (%struct.urb*)** %complete, align 8, !tbaa !385
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 24
  store i32 %call2, i32* %number_of_packets, align 4, !tbaa !386
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 19
  store i32 %mul, i32* %transfer_buffer_length, align 8, !tbaa !387
  br label %for.cond24

for.cond24:                                       ; preds = %for.body27, %if.end11
  %j.0 = phi i32 [ 0, %if.end11 ], [ %inc, %for.body27 ]
  %cmp25 = icmp ult i32 %j.0, %call2
  br i1 %cmp25, label %for.body27, label %for.end

for.body27:                                       ; preds = %for.cond24
  %conv28 = zext i16 %conv to i32
  %mul29 = mul i32 %j.0, %conv28
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 29
  %idxprom30 = zext i32 %j.0 to i64
  %arrayidx31 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom30
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx31, i32 0, i32 0
  store i32 %mul29, i32* %offset, align 8, !tbaa !388
  %conv32 = zext i16 %conv to i32
  %iso_frame_desc33 = getelementptr inbounds %struct.urb, %struct.urb* %call7, i32 0, i32 29
  %idxprom34 = zext i32 %j.0 to i64
  %arrayidx35 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc33, i64 0, i64 %idxprom34
  %length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx35, i32 0, i32 1
  store i32 %conv32, i32* %length, align 4, !tbaa !390
  %inc = add i32 %j.0, 1
  br label %for.cond24

for.end:                                          ; preds = %for.cond24
  %urb36 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 21
  %idxprom37 = zext i32 %i.0 to i64
  %arrayidx38 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb36, i64 0, i64 %idxprom37
  store %struct.urb* %call7, %struct.urb** %arrayidx38, align 8, !tbaa !45
  %inc40 = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then10, %for.cond, %entry
  %retval.0 = phi i32 [ -12, %if.then10 ], [ -12, %entry ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_init_video_bulk(%struct.uvc_streaming* %stream, %struct.usb_host_endpoint* %ep, i32 %gfp_flags) #0 {
entry:
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %desc)
  %and = and i32 %call, 2047
  %conv = trunc i32 %and to i16
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %dwMaxPayloadTransferSize = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 10
  %0 = load i32, i32* %dwMaxPayloadTransferSize, align 2, !tbaa !373
  %bulk = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk, i32 0, i32 4
  store i32 %0, i32* %max_payload_size, align 4, !tbaa !391
  %conv1 = zext i16 %conv to i32
  %call2 = call i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming* %stream, i32 %0, i32 %conv1, i32 %gfp_flags)
  %cmp = icmp eq i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %conv4 = zext i16 %conv to i32
  %mul = mul i32 %call2, %conv4
  %desc5 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %call6 = call i32 @usb_endpoint_dir_in.158(%struct.usb_endpoint_descriptor* %desc5)
  %tobool = icmp ne i32 %call6, 0
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 0
  %2 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %desc8 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %ep, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc8, i32 0, i32 2
  %3 = load i8, i8* %bEndpointAddress, align 2, !tbaa !164
  %conv9 = zext i8 %3 to i32
  %call10 = call i32 @__create_pipe(%struct.usb_device* %2, i32 %conv9)
  %or = or i32 -1073741824, %call10
  %or11 = or i32 %or, 128
  %pipe.0 = select i1 %tobool, i32 %or11, i32 %or
  %type = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %4 = load i32, i32* %type, align 8, !tbaa !99
  %cmp20 = icmp eq i32 %4, 2
  %.mul = select i1 %cmp20, i32 0, i32 %mul
  br label %for.cond

for.cond:                                         ; preds = %if.end30, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %if.end30 ]
  %cmp24 = icmp ult i32 %i.0, 5
  br i1 %cmp24, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %call26 = call %struct.urb* @usb_alloc_urb(i32 0, i32 %gfp_flags)
  %cmp27 = icmp eq %struct.urb* %call26, null
  br i1 %cmp27, label %if.then29, label %if.end30

if.then29:                                        ; preds = %for.body
  call void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 1)
  br label %cleanup

if.end30:                                         ; preds = %for.body
  %dev31 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device*, %struct.uvc_device** %dev31, align 8, !tbaa !102
  %udev32 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %5, i32 0, i32 0
  %6 = load %struct.usb_device*, %struct.usb_device** %udev32, align 8, !tbaa !63
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom
  %7 = load i8*, i8** %arrayidx, align 8, !tbaa !45
  %8 = bitcast %struct.uvc_streaming* %stream to i8*
  call void @usb_fill_bulk_urb(%struct.urb* %call26, %struct.usb_device* %6, i32 %pipe.0, i8* %7, i32 %.mul, void (%struct.urb*)* @uvc_video_complete, i8* %8)
  %transfer_flags = getelementptr inbounds %struct.urb, %struct.urb* %call26, i32 0, i32 13
  store i32 4, i32* %transfer_flags, align 4, !tbaa !380
  %urb_dma = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 23
  %idxprom33 = zext i32 %i.0 to i64
  %arrayidx34 = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom33
  %9 = load i64, i64* %arrayidx34, align 8, !tbaa !366
  %transfer_dma = getelementptr inbounds %struct.urb, %struct.urb* %call26, i32 0, i32 15
  store i64 %9, i64* %transfer_dma, align 8, !tbaa !381
  %urb35 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 21
  %idxprom36 = zext i32 %i.0 to i64
  %arrayidx37 = getelementptr inbounds [5 x %struct.urb*], [5 x %struct.urb*]* %urb35, i64 0, i64 %idxprom36
  store %struct.urb* %call26, %struct.urb** %arrayidx37, align 8, !tbaa !45
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.then29, %for.cond, %entry
  %retval.0 = phi i32 [ -12, %if.then29 ], [ -12, %entry ], [ 0, %for.cond ]
  ret i32 %retval.0
}

declare i32 @usb_submit_urb(%struct.urb*, i32) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %wMaxPacketSize = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 4
  %0 = load i16, i16* %wMaxPacketSize, align 1, !tbaa !80
  %conv = zext i16 %0 to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_alloc_urb_buffers(%struct.uvc_streaming* %stream, i32 %size, i32 %psize, i32 %gfp_flags) #0 {
entry:
  %urb_size = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %0 = load i32, i32* %urb_size, align 8, !tbaa !365
  %tobool = icmp ne i32 %0, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %urb_size1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %1 = load i32, i32* %urb_size1, align 8, !tbaa !365
  %div = udiv i32 %1, %psize
  br label %cleanup

if.end:                                           ; preds = %entry
  %add = add i32 %size, %psize
  %sub = sub i32 %add, 1
  %div2 = udiv i32 %sub, %psize
  %cmp = icmp ugt i32 %div2, 32
  %.div2 = select i1 %cmp, i32 32, i32 %div2
  br label %for.cond

for.cond:                                         ; preds = %for.inc27, %if.end
  %npackets.1 = phi i32 [ %.div2, %if.end ], [ %div28, %for.inc27 ]
  %cmp5 = icmp ugt i32 %npackets.1, 1
  br i1 %cmp5, label %for.body, label %do.body30

for.body:                                         ; preds = %for.cond
  br label %for.cond6

for.cond6:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %cmp7 = icmp ult i32 %i.0, 5
  br i1 %cmp7, label %for.body8, label %for.end

for.body8:                                        ; preds = %for.cond6
  %mul = mul i32 %psize, %npackets.1
  %urb_size9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  store i32 %mul, i32* %urb_size9, align 8, !tbaa !365
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %2 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %2, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %urb_size10 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %4 = load i32, i32* %urb_size10, align 8, !tbaa !365
  %conv = zext i32 %4 to i64
  %or = or i32 %gfp_flags, 512
  %urb_dma = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 23
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [5 x i64], [5 x i64]* %urb_dma, i64 0, i64 %idxprom
  %call = call i8* @usb_alloc_coherent(%struct.usb_device* %3, i64 %conv, i32 %or, i64* %arrayidx)
  %urb_buffer = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom11 = zext i32 %i.0 to i64
  %arrayidx12 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer, i64 0, i64 %idxprom11
  store i8* %call, i8** %arrayidx12, align 8, !tbaa !45
  %urb_buffer13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 22
  %idxprom14 = zext i32 %i.0 to i64
  %arrayidx15 = getelementptr inbounds [5 x i8*], [5 x i8*]* %urb_buffer13, i64 0, i64 %idxprom14
  %5 = load i8*, i8** %arrayidx15, align 8, !tbaa !45
  %tobool16 = icmp ne i8* %5, null
  br i1 %tobool16, label %for.inc, label %if.then17

if.then17:                                        ; preds = %for.body8
  call void @uvc_free_urb_buffers(%struct.uvc_streaming* %stream)
  br label %for.end

for.inc:                                          ; preds = %for.body8
  %inc = add i32 %i.0, 1
  br label %for.cond6

for.end:                                          ; preds = %if.then17, %for.cond6
  %cmp19 = icmp eq i32 %i.0, 5
  br i1 %cmp19, label %do.body, label %for.inc27

do.body:                                          ; preds = %for.end
  %6 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %6, 1024
  %tobool22 = icmp ne i32 %and, 0
  br i1 %tobool22, label %if.then23, label %cleanup

if.then23:                                        ; preds = %do.body
  %call24 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.30.162, i32 0, i32 0), i32 5, i32 %npackets.1, i32 %psize)
  br label %cleanup

for.inc27:                                        ; preds = %for.end
  %div28 = udiv i32 %npackets.1, 2
  br label %for.cond

do.body30:                                        ; preds = %for.cond
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and31 = and i32 %7, 1024
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %cleanup

if.then33:                                        ; preds = %do.body30
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.31.163, i32 0, i32 0), i32 %psize)
  br label %cleanup

cleanup:                                          ; preds = %if.then33, %do.body30, %if.then23, %do.body, %if.then
  %retval.0 = phi i32 [ %div, %if.then ], [ %npackets.1, %if.then23 ], [ %npackets.1, %do.body ], [ 0, %if.then33 ], [ 0, %do.body30 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @usb_endpoint_dir_in.158(%struct.usb_endpoint_descriptor* %epd) #1 {
entry:
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %epd, i32 0, i32 2
  %0 = load i8, i8* %bEndpointAddress, align 1, !tbaa !83
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 128
  %cmp = icmp eq i32 %and, 128
  %conv1 = zext i1 %cmp to i32
  ret i32 %conv1
}

declare %struct.urb* @usb_alloc_urb(i32, i32) #2

; Function Attrs: nounwind uwtable
define internal void @uvc_video_complete(%struct.urb* %urb) #0 {
entry:
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %context = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  %0 = load i8*, i8** %context, align 8, !tbaa !378
  %1 = bitcast i8* %0 to %struct.uvc_streaming*
  %queue1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 18
  %status = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %2 = load i32, i32* %status, align 8, !tbaa !392
  %Pivot10 = icmp slt i32 %2, -2
  br i1 %Pivot10, label %NodeBlock, label %NodeBlock7

NodeBlock7:                                       ; preds = %entry
  %Pivot8 = icmp slt i32 %2, 0
  br i1 %Pivot8, label %LeafBlock3, label %LeafBlock5

LeafBlock5:                                       ; preds = %NodeBlock7
  %SwitchLeaf6 = icmp eq i32 %2, 0
  br i1 %SwitchLeaf6, label %do.body5, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock7
  %SwitchLeaf4 = icmp eq i32 %2, -2
  br i1 %SwitchLeaf4, label %sw.bb, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %2, -104
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %2, -104
  br i1 %SwitchLeaf2, label %sw.bb3, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %2, -108
  br i1 %SwitchLeaf, label %sw.bb3, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  %status2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %3 = load i32, i32* %status2, align 8, !tbaa !392
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32.159, i32 0, i32 0), i32 %3)
  br label %sw.bb

sw.bb:                                            ; preds = %sw.default, %LeafBlock3
  %frozen = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 17
  %bf.load = load i8, i8* %frozen, align 8
  %bf.clear = and i8 %bf.load, 1
  %bf.cast = zext i8 %bf.clear to i32
  %tobool = icmp ne i32 %bf.cast, 0
  br i1 %tobool, label %cleanup.cont, label %sw.bb3

sw.bb3:                                           ; preds = %sw.bb, %LeafBlock, %LeafBlock1
  %status4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %4 = load i32, i32* %status4, align 8, !tbaa !392
  %cmp = icmp eq i32 %4, -108
  %conv = zext i1 %cmp to i32
  call void @uvc_queue_cancel(%struct.uvc_video_queue* %queue1, i32 %conv)
  br label %cleanup.cont

do.body5:                                         ; preds = %LeafBlock5
  %5 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %5) #8
  %6 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %6) #8
  %cmp6 = icmp eq i64* %__dummy, %__dummy2
  %conv7 = zext i1 %cmp6 to i32
  %7 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %8) #8
  %irqlock = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 4
  %call8 = call %struct.raw_spinlock* @spinlock_check.139(%struct.spinlock* %irqlock)
  %call9 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call8)
  %irqqueue = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 5
  %call12 = call i32 @list_empty.160(%struct.list_head* %irqqueue)
  %tobool13 = icmp ne i32 %call12, 0
  br i1 %tobool13, label %if.end17, label %if.then14

if.then14:                                        ; preds = %do.body5
  %irqqueue15 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 5
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %irqqueue15, i32 0, i32 0
  %9 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %10 = bitcast %struct.list_head* %9 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %10, i64 -840
  %11 = bitcast i8* %add.ptr to %struct.uvc_buffer*
  br label %if.end17

if.end17:                                         ; preds = %if.then14, %do.body5
  %buf.0 = phi %struct.uvc_buffer* [ null, %do.body5 ], [ %11, %if.then14 ]
  %irqlock18 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 4
  call void @spin_unlock_irqrestore.142(%struct.spinlock* %irqlock18, i64 %call9)
  %decode = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %1, i32 0, i32 19
  %12 = load void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)*, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)** %decode, align 8, !tbaa !393
  call void %12(%struct.urb* %urb, %struct.uvc_streaming* %1, %struct.uvc_buffer* %buf.0)
  %call19 = call i32 @usb_submit_urb(%struct.urb* %urb, i32 32)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %if.then22, label %cleanup.cont

if.then22:                                        ; preds = %if.end17
  %call23 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.33.161, i32 0, i32 0), i32 %call19)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then22, %if.end17, %sw.bb3, %sw.bb
  %cleanup.dest.slot.0 = phi i32 [ 1, %sw.bb3 ], [ 1, %sw.bb ], [ 0, %if.then22 ], [ 0, %if.end17 ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_fill_bulk_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context) #1 {
entry:
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev1, align 8, !tbaa !376
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 10
  store i32 %pipe, i32* %pipe2, align 8, !tbaa !379
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  store i8* %transfer_buffer, i8** %transfer_buffer3, align 8, !tbaa !384
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %buffer_length, i32* %transfer_buffer_length, align 8, !tbaa !387
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 28
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete, align 8, !tbaa !385
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  store i8* %context, i8** %context4, align 8, !tbaa !378
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.160(%struct.list_head* %head) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %cmp = icmp eq %struct.list_head* %0, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

declare i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_video_init(%struct.uvc_streaming* %stream) #0 {
entry:
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %nformats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 10
  %0 = load i32, i32* %nformats, align 4, !tbaa !132
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.7.166, i32 0, i32 0))
  br label %cleanup

if.end:                                           ; preds = %entry
  %active = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 4
  call void @atomic_set.167(%union.anon.5* %active, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %type = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %1 = load i32, i32* %type, align 8, !tbaa !99
  %2 = load i32, i32* @uvc_no_drop_param, align 4, !tbaa !2
  %tobool = icmp ne i32 %2, 0
  %lnot = xor i1 %tobool, true
  %lnot.ext = zext i1 %lnot to i32
  %call1 = call i32 @uvc_queue_init(%struct.uvc_video_queue* %queue, i32 %1, i32 %lnot.ext)
  %tobool2 = icmp ne i32 %call1, 0
  br i1 %tobool2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %5 = load i32, i32* %intfnum, align 8, !tbaa !122
  %call5 = call i32 @usb_set_interface(%struct.usb_device* %4, i32 %5, i32 0)
  %call6 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl, i32 1, i8 zeroext -121)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %if.then8, label %if.end10

if.then8:                                         ; preds = %if.end4
  %call9 = call i32 @uvc_set_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl, i32 1)
  br label %if.end10

if.end10:                                         ; preds = %if.then8, %if.end4
  %call11 = call i32 @uvc_get_video_ctrl(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl, i32 1, i8 zeroext -127)
  %cmp12 = icmp slt i32 %call11, 0
  br i1 %cmp12, label %cleanup, label %if.end14

if.end14:                                         ; preds = %if.end10
  %nformats15 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 10
  %6 = load i32, i32* %nformats15, align 4, !tbaa !132
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end14
  %i.0 = phi i32 [ %6, %if.end14 ], [ %dec, %for.inc ]
  %format.0 = phi %struct.uvc_format* [ null, %if.end14 ], [ %arrayidx, %for.inc ]
  %cmp16 = icmp ugt i32 %i.0, 0
  br i1 %cmp16, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %format17 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 11
  %7 = load %struct.uvc_format*, %struct.uvc_format** %format17, align 8, !tbaa !70
  %sub = sub i32 %i.0, 1
  %idxprom = zext i32 %sub to i64
  %arrayidx = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %7, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %arrayidx, i32 0, i32 1
  %8 = load i8, i8* %index, align 1, !tbaa !145
  %conv = zext i8 %8 to i32
  %bFormatIndex = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  %9 = load i8, i8* %bFormatIndex, align 1, !tbaa !291
  %conv18 = zext i8 %9 to i32
  %cmp19 = icmp eq i32 %conv, %conv18
  br i1 %cmp19, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body
  %dec = add i32 %i.0, -1
  br label %for.cond

for.end:                                          ; preds = %for.body, %for.cond
  %format.1 = phi %struct.uvc_format* [ %arrayidx, %for.body ], [ %format.0, %for.cond ]
  %nframes = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 7
  %10 = load i32, i32* %nframes, align 4, !tbaa !135
  %cmp23 = icmp eq i32 %10, 0
  br i1 %cmp23, label %if.then25, label %if.end27

if.then25:                                        ; preds = %for.end
  %call26 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.8.168, i32 0, i32 0))
  br label %cleanup

if.end27:                                         ; preds = %for.end
  %nframes28 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 7
  %11 = load i32, i32* %nframes28, align 4, !tbaa !135
  br label %for.cond29

for.cond29:                                       ; preds = %for.inc44, %if.end27
  %i.1 = phi i32 [ %11, %if.end27 ], [ %dec45, %for.inc44 ]
  %frame.0 = phi %struct.uvc_frame* [ null, %if.end27 ], [ %arrayidx36, %for.inc44 ]
  %cmp30 = icmp ugt i32 %i.1, 0
  br i1 %cmp30, label %for.body32, label %for.end46

for.body32:                                       ; preds = %for.cond29
  %frame33 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 8
  %12 = load %struct.uvc_frame*, %struct.uvc_frame** %frame33, align 8, !tbaa !133
  %sub34 = sub i32 %i.1, 1
  %idxprom35 = zext i32 %sub34 to i64
  %arrayidx36 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %12, i64 %idxprom35
  %bFrameIndex = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %arrayidx36, i32 0, i32 0
  %13 = load i8, i8* %bFrameIndex, align 8, !tbaa !156
  %conv37 = zext i8 %13 to i32
  %bFrameIndex38 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  %14 = load i8, i8* %bFrameIndex38, align 1, !tbaa !292
  %conv39 = zext i8 %14 to i32
  %cmp40 = icmp eq i32 %conv37, %conv39
  br i1 %cmp40, label %for.end46, label %for.inc44

for.inc44:                                        ; preds = %for.body32
  %dec45 = add i32 %i.1, -1
  br label %for.cond29

for.end46:                                        ; preds = %for.body32, %for.cond29
  %frame.1 = phi %struct.uvc_frame* [ %arrayidx36, %for.body32 ], [ %frame.0, %for.cond29 ]
  %index47 = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %format.1, i32 0, i32 1
  %15 = load i8, i8* %index47, align 1, !tbaa !145
  %bFormatIndex48 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 1
  store i8 %15, i8* %bFormatIndex48, align 1, !tbaa !291
  %bFrameIndex49 = getelementptr inbounds %struct.uvc_frame, %struct.uvc_frame* %frame.1, i32 0, i32 0
  %16 = load i8, i8* %bFrameIndex49, align 8, !tbaa !156
  %bFrameIndex50 = getelementptr inbounds %struct.uvc_streaming_control, %struct.uvc_streaming_control* %ctrl, i32 0, i32 2
  store i8 %16, i8* %bFrameIndex50, align 1, !tbaa !292
  %def_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 13
  store %struct.uvc_format* %format.1, %struct.uvc_format** %def_format, align 8, !tbaa !289
  %cur_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 14
  store %struct.uvc_format* %format.1, %struct.uvc_format** %cur_format, align 8, !tbaa !296
  %cur_frame = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 15
  store %struct.uvc_frame* %frame.1, %struct.uvc_frame** %cur_frame, align 8, !tbaa !274
  %type51 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 9
  %17 = load i32, i32* %type51, align 8, !tbaa !99
  %cmp52 = icmp eq i32 %17, 1
  br i1 %cmp52, label %if.then54, label %if.else66

if.then54:                                        ; preds = %for.end46
  %dev55 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %18 = load %struct.uvc_device*, %struct.uvc_device** %dev55, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %18, i32 0, i32 3
  %19 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %19, 8
  %tobool56 = icmp ne i32 %and, 0
  br i1 %tobool56, label %if.then57, label %if.else

if.then57:                                        ; preds = %if.then54
  %decode = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 19
  store void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)* bitcast (void (%struct.urb*, %struct.uvc_streaming.2252*, %struct.uvc_buffer*)* @uvc_video_decode_isight to void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)*), void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)** %decode, align 8, !tbaa !393
  br label %cleanup

if.else:                                          ; preds = %if.then54
  %intf = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 5
  %20 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !46
  %num_altsetting = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %20, i32 0, i32 2
  %21 = load i32, i32* %num_altsetting, align 8, !tbaa !136
  %cmp58 = icmp ugt i32 %21, 1
  %decode61 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 19
  %uvc_video_decode_bulk.sink = select i1 %cmp58, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)* @uvc_video_decode_isoc, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)* @uvc_video_decode_bulk
  store void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)* %uvc_video_decode_bulk.sink, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)** %decode61, align 8, !tbaa !393
  br label %cleanup

if.else66:                                        ; preds = %for.end46
  %intf67 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 5
  %22 = load %struct.usb_interface*, %struct.usb_interface** %intf67, align 8, !tbaa !46
  %num_altsetting68 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %22, i32 0, i32 2
  %23 = load i32, i32* %num_altsetting68, align 8, !tbaa !136
  %cmp69 = icmp eq i32 %23, 1
  br i1 %cmp69, label %if.then71, label %if.else73

if.then71:                                        ; preds = %if.else66
  %decode72 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 19
  store void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)* @uvc_video_encode_bulk, void (%struct.urb*, %struct.uvc_streaming*, %struct.uvc_buffer*)** %decode72, align 8, !tbaa !393
  br label %cleanup

if.else73:                                        ; preds = %if.else66
  %call74 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.9.169, i32 0, i32 0))
  br label %cleanup

cleanup:                                          ; preds = %if.else73, %if.then71, %if.else, %if.then57, %if.then25, %if.end10, %if.end, %if.then
  %retval.0 = phi i32 [ -22, %if.then ], [ -22, %if.then25 ], [ -22, %if.else73 ], [ %call1, %if.end ], [ %call11, %if.end10 ], [ 0, %if.then57 ], [ 0, %if.else ], [ 0, %if.then71 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @atomic_set.167(%union.anon.5* %v, i32 %i) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  store i32 %i, i32* %counter, align 4, !tbaa !75
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_isoc(%struct.urb* %urb, %struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %entry ], [ %buf.addr.4, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 24
  %0 = load i32, i32* %number_of_packets, align 4, !tbaa !386
  %cmp = icmp slt i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom
  %status = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx, i32 0, i32 3
  %1 = load i32, i32* %status, align 4, !tbaa !394
  %cmp1 = icmp slt i32 %1, 0
  br i1 %cmp1, label %do.body, label %if.end10

do.body:                                          ; preds = %for.body
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %2, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %do.end

if.then2:                                         ; preds = %do.body
  %iso_frame_desc3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc3, i64 0, i64 %idxprom4
  %status6 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx5, i32 0, i32 3
  %3 = load i32, i32* %status6, align 4, !tbaa !394
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.268, i32 0, i32 0), i32 %3)
  br label %do.end

do.end:                                           ; preds = %if.then2, %do.body
  %cmp7 = icmp ne %struct.uvc_buffer* %buf.addr.0, null
  br i1 %cmp7, label %if.then8, label %for.inc

if.then8:                                         ; preds = %do.end
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.0, i32 0, i32 3
  store i32 1, i32* %error, align 4, !tbaa !183
  br label %for.inc

if.end10:                                         ; preds = %for.body
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %4 = load i8*, i8** %transfer_buffer, align 8, !tbaa !384
  %iso_frame_desc11 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom12 = sext i32 %i.0 to i64
  %arrayidx13 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc11, i64 0, i64 %idxprom12
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx13, i32 0, i32 0
  %5 = load i32, i32* %offset, align 8, !tbaa !388
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext
  br label %do.body14

do.body14:                                        ; preds = %do.cond23, %if.end10
  %buf.addr.1 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.end10 ], [ %buf.addr.2, %do.cond23 ]
  %iso_frame_desc15 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom16 = sext i32 %i.0 to i64
  %arrayidx17 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc15, i64 0, i64 %idxprom16
  %actual_length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx17, i32 0, i32 2
  %6 = load i32, i32* %actual_length, align 8, !tbaa !395
  %call18 = call i32 @uvc_video_decode_start(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf.addr.1, i8* %add.ptr, i32 %6)
  %cmp19 = icmp eq i32 %call18, -11
  br i1 %cmp19, label %if.then20, label %do.cond23

if.then20:                                        ; preds = %do.body14
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call21 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf.addr.1)
  br label %do.cond23

do.cond23:                                        ; preds = %if.then20, %do.body14
  %buf.addr.2 = phi %struct.uvc_buffer* [ %call21, %if.then20 ], [ %buf.addr.1, %do.body14 ]
  %cmp24 = icmp eq i32 %call18, -11
  br i1 %cmp24, label %do.body14, label %do.end25

do.end25:                                         ; preds = %do.cond23
  %cmp26 = icmp slt i32 %call18, 0
  br i1 %cmp26, label %for.inc, label %if.end28

if.end28:                                         ; preds = %do.end25
  %idx.ext29 = sext i32 %call18 to i64
  %add.ptr30 = getelementptr inbounds i8, i8* %add.ptr, i64 %idx.ext29
  %iso_frame_desc31 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom32 = sext i32 %i.0 to i64
  %arrayidx33 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc31, i64 0, i64 %idxprom32
  %actual_length34 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx33, i32 0, i32 2
  %7 = load i32, i32* %actual_length34, align 8, !tbaa !395
  %sub = sub i32 %7, %call18
  call void @uvc_video_decode_data(%struct.uvc_buffer* %buf.addr.2, i8* %add.ptr30, i32 %sub)
  %iso_frame_desc35 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom36 = sext i32 %i.0 to i64
  %arrayidx37 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc35, i64 0, i64 %idxprom36
  %actual_length38 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx37, i32 0, i32 2
  %8 = load i32, i32* %actual_length38, align 8, !tbaa !395
  call void @uvc_video_decode_end(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %add.ptr, i32 %8)
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 2
  %9 = load i32, i32* %state, align 8, !tbaa !181
  %cmp39 = icmp eq i32 %9, 3
  br i1 %cmp39, label %if.then40, label %for.inc

if.then40:                                        ; preds = %if.end28
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 5
  %10 = load i32, i32* %length, align 8, !tbaa !185
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 6
  %11 = load i32, i32* %bytesused, align 4, !tbaa !186
  %cmp41 = icmp ne i32 %10, %11
  br i1 %cmp41, label %land.lhs.true, label %if.end46

land.lhs.true:                                    ; preds = %if.then40
  %cur_format = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 14
  %12 = load %struct.uvc_format*, %struct.uvc_format** %cur_format, align 8, !tbaa !296
  %flags = getelementptr inbounds %struct.uvc_format, %struct.uvc_format* %12, i32 0, i32 5
  %13 = load i32, i32* %flags, align 8, !tbaa !151
  %and42 = and i32 %13, 1
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.end46, label %if.then44

if.then44:                                        ; preds = %land.lhs.true
  %error45 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 3
  store i32 1, i32* %error45, align 4, !tbaa !183
  br label %if.end46

if.end46:                                         ; preds = %if.then44, %land.lhs.true, %if.then40
  %queue47 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call48 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue47, %struct.uvc_buffer* %buf.addr.2)
  br label %for.inc

for.inc:                                          ; preds = %if.end46, %if.end28, %do.end25, %if.then8, %do.end
  %buf.addr.4 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.then8 ], [ %buf.addr.0, %do.end ], [ %buf.addr.2, %do.end25 ], [ %call48, %if.end46 ], [ %buf.addr.2, %if.end28 ]
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_bulk(%struct.urb* %urb, %struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %0 = load i32, i32* %actual_length, align 4, !tbaa !396
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %bulk = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk, i32 0, i32 1
  %1 = load i32, i32* %header_size, align 8, !tbaa !370
  %cmp1 = icmp eq i32 %1, 0
  br i1 %cmp1, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %2 = load i8*, i8** %transfer_buffer, align 8, !tbaa !384
  %actual_length2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %3 = load i32, i32* %actual_length2, align 4, !tbaa !396
  %bulk3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk3, i32 0, i32 3
  %4 = load i32, i32* %payload_size, align 8, !tbaa !372
  %add = add i32 %4, %3
  store i32 %add, i32* %payload_size, align 8, !tbaa !372
  %bulk4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size5 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk4, i32 0, i32 1
  %5 = load i32, i32* %header_size5, align 8, !tbaa !370
  %cmp6 = icmp eq i32 %5, 0
  br i1 %cmp6, label %land.lhs.true7, label %if.end24

land.lhs.true7:                                   ; preds = %if.end
  %bulk8 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk8, i32 0, i32 2
  %6 = load i32, i32* %skip_payload, align 4, !tbaa !371
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.end24, label %if.then9

if.then9:                                         ; preds = %land.lhs.true7
  br label %do.body

do.body:                                          ; preds = %do.cond, %if.then9
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %if.then9 ], [ %buf.addr.1, %do.cond ]
  %call = call i32 @uvc_video_decode_start(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf.addr.0, i8* %2, i32 %3)
  %cmp10 = icmp eq i32 %call, -11
  br i1 %cmp10, label %if.then11, label %do.cond

if.then11:                                        ; preds = %do.body
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call12 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue, %struct.uvc_buffer* %buf.addr.0)
  br label %do.cond

do.cond:                                          ; preds = %if.then11, %do.body
  %buf.addr.1 = phi %struct.uvc_buffer* [ %call12, %if.then11 ], [ %buf.addr.0, %do.body ]
  %cmp14 = icmp eq i32 %call, -11
  br i1 %cmp14, label %do.body, label %do.end

do.end:                                           ; preds = %do.cond
  %cmp15 = icmp slt i32 %call, 0
  %cmp16 = icmp eq %struct.uvc_buffer* %buf.addr.1, null
  %or.cond = or i1 %cmp15, %cmp16
  br i1 %or.cond, label %if.then17, label %if.else

if.then17:                                        ; preds = %do.end
  %bulk18 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload19 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk18, i32 0, i32 2
  store i32 1, i32* %skip_payload19, align 4, !tbaa !371
  br label %if.end24

if.else:                                          ; preds = %do.end
  %conv = sext i32 %call to i64
  %bulk20 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk20, i32 0, i32 0
  %arraydecay = getelementptr inbounds [256 x i8], [256 x i8]* %header, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %2, i64 %conv, i32 1, i1 false)
  %bulk21 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size22 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk21, i32 0, i32 1
  store i32 %call, i32* %header_size22, align 8, !tbaa !370
  %idx.ext = sext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext
  %sub = sub nsw i32 %3, %call
  br label %if.end24

if.end24:                                         ; preds = %if.else, %if.then17, %land.lhs.true7, %if.end
  %mem.1 = phi i8* [ %2, %land.lhs.true7 ], [ %2, %if.end ], [ %2, %if.then17 ], [ %add.ptr, %if.else ]
  %buf.addr.2 = phi %struct.uvc_buffer* [ %buf, %land.lhs.true7 ], [ %buf, %if.end ], [ %buf.addr.1, %if.else ], [ %buf.addr.1, %if.then17 ]
  %len.1 = phi i32 [ %3, %land.lhs.true7 ], [ %3, %if.end ], [ %3, %if.then17 ], [ %sub, %if.else ]
  %bulk25 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload26 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk25, i32 0, i32 2
  %7 = load i32, i32* %skip_payload26, align 4, !tbaa !371
  %tobool27 = icmp eq i32 %7, 0
  %cmp29 = icmp ne %struct.uvc_buffer* %buf.addr.2, null
  %or.cond1 = and i1 %tobool27, %cmp29
  br i1 %or.cond1, label %if.then31, label %if.end32

if.then31:                                        ; preds = %if.end24
  call void @uvc_video_decode_data(%struct.uvc_buffer* %buf.addr.2, i8* %mem.1, i32 %len.1)
  br label %if.end32

if.end32:                                         ; preds = %if.then31, %if.end24
  %actual_length33 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %8 = load i32, i32* %actual_length33, align 4, !tbaa !396
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  %9 = load i32, i32* %transfer_buffer_length, align 8, !tbaa !387
  %cmp34 = icmp ult i32 %8, %9
  br i1 %cmp34, label %if.then42, label %lor.lhs.false36

lor.lhs.false36:                                  ; preds = %if.end32
  %bulk37 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size38 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk37, i32 0, i32 3
  %10 = load i32, i32* %payload_size38, align 8, !tbaa !372
  %bulk39 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk39, i32 0, i32 4
  %11 = load i32, i32* %max_payload_size, align 4, !tbaa !391
  %cmp40 = icmp uge i32 %10, %11
  br i1 %cmp40, label %if.then42, label %cleanup.cont

if.then42:                                        ; preds = %lor.lhs.false36, %if.end32
  %bulk43 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload44 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk43, i32 0, i32 2
  %12 = load i32, i32* %skip_payload44, align 4, !tbaa !371
  %tobool45 = icmp eq i32 %12, 0
  %cmp47 = icmp ne %struct.uvc_buffer* %buf.addr.2, null
  %or.cond2 = and i1 %tobool45, %cmp47
  br i1 %or.cond2, label %if.then49, label %if.end61

if.then49:                                        ; preds = %if.then42
  %bulk50 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header51 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk50, i32 0, i32 0
  %arraydecay52 = getelementptr inbounds [256 x i8], [256 x i8]* %header51, i32 0, i32 0
  %bulk53 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size54 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk53, i32 0, i32 3
  %13 = load i32, i32* %payload_size54, align 8, !tbaa !372
  call void @uvc_video_decode_end(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf.addr.2, i8* %arraydecay52, i32 %13)
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.2, i32 0, i32 2
  %14 = load i32, i32* %state, align 8, !tbaa !181
  %cmp55 = icmp eq i32 %14, 3
  br i1 %cmp55, label %if.then57, label %if.end61

if.then57:                                        ; preds = %if.then49
  %queue58 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call59 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue58, %struct.uvc_buffer* %buf.addr.2)
  br label %if.end61

if.end61:                                         ; preds = %if.then57, %if.then49, %if.then42
  %bulk62 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size63 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk62, i32 0, i32 1
  store i32 0, i32* %header_size63, align 8, !tbaa !370
  %bulk64 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %skip_payload65 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk64, i32 0, i32 2
  store i32 0, i32* %skip_payload65, align 4, !tbaa !371
  %bulk66 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size67 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk66, i32 0, i32 3
  store i32 0, i32* %payload_size67, align 8, !tbaa !372
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.end61, %lor.lhs.false36, %land.lhs.true
  %cleanup.dest.slot.0 = phi i32 [ 1, %land.lhs.true ], [ 0, %if.end61 ], [ 0, %lor.lhs.false36 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_encode_bulk(%struct.urb* %urb, %struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %0 = load i8*, i8** %transfer_buffer, align 8, !tbaa !384
  %urb_size = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %1 = load i32, i32* %urb_size, align 8, !tbaa !365
  %cmp = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %bulk = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk, i32 0, i32 1
  %2 = load i32, i32* %header_size, align 8, !tbaa !370
  %cmp1 = icmp eq i32 %2, 0
  br i1 %cmp1, label %if.then2, label %if.end6

if.then2:                                         ; preds = %if.end
  %call = call i32 @uvc_video_encode_header(%struct.uvc_streaming* %stream, i8* %0)
  %bulk3 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size4 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk3, i32 0, i32 1
  store i32 %call, i32* %header_size4, align 8, !tbaa !370
  %bulk5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk5, i32 0, i32 3
  %3 = load i32, i32* %payload_size, align 8, !tbaa !372
  %add = add i32 %3, %call
  store i32 %add, i32* %payload_size, align 8, !tbaa !372
  %idx.ext = sext i32 %call to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  %sub = sub nsw i32 %1, %call
  br label %if.end6

if.end6:                                          ; preds = %if.then2, %if.end
  %mem.0 = phi i8* [ %add.ptr, %if.then2 ], [ %0, %if.end ]
  %len.0 = phi i32 [ %sub, %if.then2 ], [ %1, %if.end ]
  %call7 = call i32 @uvc_video_encode_data(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %mem.0, i32 %len.0)
  %bulk8 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size9 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk8, i32 0, i32 3
  %4 = load i32, i32* %payload_size9, align 8, !tbaa !372
  %add10 = add i32 %4, %call7
  store i32 %add10, i32* %payload_size9, align 8, !tbaa !372
  %sub11 = sub nsw i32 %len.0, %call7
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %5 = load i32, i32* %bytesused, align 4, !tbaa !186
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue, i32 0, i32 3
  %6 = load i32, i32* %buf_used, align 4, !tbaa !397
  %cmp12 = icmp eq i32 %5, %6
  br i1 %cmp12, label %if.then17, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end6
  %bulk13 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size14 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk13, i32 0, i32 3
  %7 = load i32, i32* %payload_size14, align 8, !tbaa !372
  %bulk15 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk15, i32 0, i32 4
  %8 = load i32, i32* %max_payload_size, align 4, !tbaa !391
  %cmp16 = icmp eq i32 %7, %8
  br i1 %cmp16, label %if.then17, label %if.end35

if.then17:                                        ; preds = %lor.lhs.false, %if.end6
  %bytesused18 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %9 = load i32, i32* %bytesused18, align 4, !tbaa !186
  %queue19 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %buf_used20 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue19, i32 0, i32 3
  %10 = load i32, i32* %buf_used20, align 4, !tbaa !397
  %cmp21 = icmp eq i32 %9, %10
  br i1 %cmp21, label %if.then22, label %if.end30

if.then22:                                        ; preds = %if.then17
  %queue23 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %buf_used24 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue23, i32 0, i32 3
  store i32 0, i32* %buf_used24, align 4, !tbaa !397
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !181
  %sequence = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  %11 = load i32, i32* %sequence, align 4, !tbaa !368
  %inc = add i32 %11, 1
  store i32 %inc, i32* %sequence, align 4, !tbaa !368
  %buf25 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %v4l2_buf = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %buf25, i32 0, i32 0
  %sequence26 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 7
  store i32 %inc, i32* %sequence26, align 8, !tbaa !398
  %queue27 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call28 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue27, %struct.uvc_buffer* %buf)
  %last_fid = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %12 = load i8, i8* %last_fid, align 8, !tbaa !369
  %conv = zext i8 %12 to i32
  %xor = xor i32 %conv, 1
  %conv29 = trunc i32 %xor to i8
  store i8 %conv29, i8* %last_fid, align 8, !tbaa !369
  br label %if.end30

if.end30:                                         ; preds = %if.then22, %if.then17
  %bulk31 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %header_size32 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk31, i32 0, i32 1
  store i32 0, i32* %header_size32, align 8, !tbaa !370
  %bulk33 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size34 = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk33, i32 0, i32 3
  store i32 0, i32* %payload_size34, align 8, !tbaa !372
  br label %if.end35

if.end35:                                         ; preds = %if.end30, %lor.lhs.false
  %urb_size36 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 24
  %13 = load i32, i32* %urb_size36, align 8, !tbaa !365
  %sub37 = sub i32 %13, %sub11
  br label %cleanup

cleanup:                                          ; preds = %if.end35, %entry
  %sub37.sink = phi i32 [ %sub37, %if.end35 ], [ 0, %entry ]
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end35 ], [ 1, %entry ]
  %transfer_buffer_length38 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %sub37.sink, i32* %transfer_buffer_length38, align 8, !tbaa !387
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_encode_header(%struct.uvc_streaming* %stream, i8* %data) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  store i8 2, i8* %arrayidx, align 1, !tbaa !61
  %last_fid = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %0 = load i8, i8* %last_fid, align 8, !tbaa !369
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 1
  %or = or i32 130, %and
  %conv1 = trunc i32 %or to i8
  %arrayidx2 = getelementptr inbounds i8, i8* %data, i64 1
  store i8 %conv1, i8* %arrayidx2, align 1, !tbaa !61
  ret i32 2
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_encode_data(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %_min1 = alloca i32, align 4
  %_min2 = alloca i32, align 4
  %_min16 = alloca i32, align 4
  %_min29 = alloca i32, align 4
  %queue1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %mem2 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %0 = load i8*, i8** %mem2, align 8, !tbaa !184
  %buf_used = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %1 = load i32, i32* %buf_used, align 4, !tbaa !195
  %idx.ext = zext i32 %1 to i64
  %add.ptr = getelementptr i8, i8* %0, i64 %idx.ext
  %2 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 %len, i32* %_min1, align 4, !tbaa !2
  %3 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %3) #8
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %4 = load i32, i32* %bytesused, align 4, !tbaa !186
  %buf_used3 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %5 = load i32, i32* %buf_used3, align 4, !tbaa !195
  %sub = sub i32 %4, %5
  store i32 %sub, i32* %_min2, align 4, !tbaa !2
  %cmp = icmp eq i32* %_min1, %_min2
  %conv = zext i1 %cmp to i32
  %6 = load i32, i32* %_min1, align 4, !tbaa !2
  %7 = load i32, i32* %_min2, align 4, !tbaa !2
  %cmp4 = icmp ult i32 %6, %7
  %8 = load i32, i32* %_min1, align 4
  %9 = load i32, i32* %_min2, align 4
  %cond = select i1 %cmp4, i32 %8, i32 %9
  %10 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %12 = bitcast i32* %_min16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %12) #8
  %bulk = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %max_payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk, i32 0, i32 4
  %13 = load i32, i32* %max_payload_size, align 4, !tbaa !391
  %bulk7 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 20
  %payload_size = getelementptr inbounds %struct.anon.70, %struct.anon.70* %bulk7, i32 0, i32 3
  %14 = load i32, i32* %payload_size, align 8, !tbaa !372
  %sub8 = sub i32 %13, %14
  store i32 %sub8, i32* %_min16, align 4, !tbaa !2
  %15 = bitcast i32* %_min29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #8
  store i32 %cond, i32* %_min29, align 4, !tbaa !2
  %cmp10 = icmp eq i32* %_min16, %_min29
  %conv11 = zext i1 %cmp10 to i32
  %16 = load i32, i32* %_min16, align 4, !tbaa !2
  %17 = load i32, i32* %_min29, align 4, !tbaa !2
  %cmp13 = icmp ult i32 %16, %17
  %18 = load i32, i32* %_min16, align 4
  %19 = load i32, i32* %_min29, align 4
  %cond18 = select i1 %cmp13, i32 %18, i32 %19
  %20 = bitcast i32* %_min29 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %20) #8
  %21 = bitcast i32* %_min16 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #8
  %conv19 = zext i32 %cond18 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %data, i8* %add.ptr, i64 %conv19, i32 1, i1 false)
  %buf_used21 = getelementptr inbounds %struct.uvc_video_queue, %struct.uvc_video_queue* %queue1, i32 0, i32 3
  %22 = load i32, i32* %buf_used21, align 4, !tbaa !195
  %add = add i32 %22, %cond18
  store i32 %add, i32* %buf_used21, align 4, !tbaa !195
  ret i32 %cond18
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_decode_start(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %ts = alloca %struct.load_weight, align 8
  %cmp = icmp slt i32 %len, 2
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %0 to i32
  %cmp1 = icmp slt i32 %conv, 2
  br i1 %cmp1, label %if.then, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %arrayidx4 = getelementptr inbounds i8, i8* %data, i64 0
  %1 = load i8, i8* %arrayidx4, align 1, !tbaa !61
  %conv5 = zext i8 %1 to i32
  %cmp6 = icmp sgt i32 %conv5, %len
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame, i32 0, i32 4
  %2 = load i32, i32* %nb_invalid, align 8, !tbaa !399
  %inc = add i32 %2, 1
  store i32 %inc, i32* %nb_invalid, align 8, !tbaa !399
  br label %cleanup102

if.end:                                           ; preds = %lor.lhs.false3
  %arrayidx8 = getelementptr inbounds i8, i8* %data, i64 1
  %3 = load i8, i8* %arrayidx8, align 1, !tbaa !61
  %conv9 = zext i8 %3 to i32
  %and = and i32 %conv9, 1
  %conv10 = trunc i32 %and to i8
  %last_fid = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %4 = load i8, i8* %last_fid, align 8, !tbaa !369
  %conv11 = zext i8 %4 to i32
  %conv12 = zext i8 %conv10 to i32
  %cmp13 = icmp ne i32 %conv11, %conv12
  br i1 %cmp13, label %if.then15, label %if.end20

if.then15:                                        ; preds = %if.end
  %sequence = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  %5 = load i32, i32* %sequence, align 4, !tbaa !368
  %inc16 = add i32 %5, 1
  store i32 %inc16, i32* %sequence, align 4, !tbaa !368
  %sequence17 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  %6 = load i32, i32* %sequence17, align 4, !tbaa !368
  %tobool = icmp ne i32 %6, 0
  br i1 %tobool, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.then15
  call void @uvc_video_stats_update(%struct.uvc_streaming* %stream)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.then15, %if.end
  call void @uvc_video_clock_decode(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len)
  call void @uvc_video_stats_decode(%struct.uvc_streaming* %stream, i8* %data, i32 %len)
  %cmp21 = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp21, label %if.then23, label %if.end25

if.then23:                                        ; preds = %if.end20
  %last_fid24 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  store i8 %conv10, i8* %last_fid24, align 8, !tbaa !369
  br label %cleanup102

if.end25:                                         ; preds = %if.end20
  %arrayidx26 = getelementptr inbounds i8, i8* %data, i64 1
  %7 = load i8, i8* %arrayidx26, align 1, !tbaa !61
  %conv27 = zext i8 %7 to i32
  %and28 = and i32 %conv27, 64
  %tobool29 = icmp ne i32 %and28, 0
  br i1 %tobool29, label %do.body, label %if.end35

do.body:                                          ; preds = %if.end25
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and31 = and i32 %8, 128
  %tobool32 = icmp ne i32 %and31, 0
  br i1 %tobool32, label %if.then33, label %do.end

if.then33:                                        ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.35.173, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then33, %do.body
  %error = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 3
  store i32 1, i32* %error, align 4, !tbaa !183
  br label %if.end35

if.end35:                                         ; preds = %do.end, %if.end25
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  %9 = load i32, i32* %state, align 8, !tbaa !181
  %cmp36 = icmp ne i32 %9, 2
  br i1 %cmp36, label %if.then38, label %if.end79

if.then38:                                        ; preds = %if.end35
  %10 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %10) #8
  %conv39 = zext i8 %conv10 to i32
  %last_fid40 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %11 = load i8, i8* %last_fid40, align 8, !tbaa !369
  %conv41 = zext i8 %11 to i32
  %cmp42 = icmp eq i32 %conv39, %conv41
  br i1 %cmp42, label %do.body45, label %if.end64

do.body45:                                        ; preds = %if.then38
  %12 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and46 = and i32 %12, 128
  %tobool47 = icmp ne i32 %and46, 0
  br i1 %tobool47, label %if.then48, label %do.end52

if.then48:                                        ; preds = %do.body45
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.36.174, i32 0, i32 0))
  br label %do.end52

do.end52:                                         ; preds = %if.then48, %do.body45
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %13 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %13, i32 0, i32 3
  %14 = load i32, i32* %quirks, align 8, !tbaa !10
  %and53 = and i32 %14, 16
  %tobool54 = icmp ne i32 %and53, 0
  br i1 %tobool54, label %land.lhs.true, label %cleanup

land.lhs.true:                                    ; preds = %do.end52
  %arrayidx55 = getelementptr inbounds i8, i8* %data, i64 1
  %15 = load i8, i8* %arrayidx55, align 1, !tbaa !61
  %conv56 = zext i8 %15 to i32
  %and57 = and i32 %conv56, 2
  %tobool58 = icmp ne i32 %and57, 0
  br i1 %tobool58, label %if.then59, label %cleanup

if.then59:                                        ; preds = %land.lhs.true
  %last_fid60 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %16 = load i8, i8* %last_fid60, align 8, !tbaa !369
  %conv61 = zext i8 %16 to i32
  %xor = xor i32 %conv61, 1
  %conv62 = trunc i32 %xor to i8
  store i8 %conv62, i8* %last_fid60, align 8, !tbaa !369
  br label %cleanup

if.end64:                                         ; preds = %if.then38
  %17 = load i32, i32* @uvc_clock_param, align 4, !tbaa !2
  %cmp65 = icmp eq i32 %17, 1
  br i1 %cmp65, label %if.then67, label %if.else

if.then67:                                        ; preds = %if.end64
  call void @ktime_get_ts(%struct.load_weight* %ts)
  br label %if.end68

if.else:                                          ; preds = %if.end64
  call void @getnstimeofday(%struct.load_weight* %ts)
  br label %if.end68

if.end68:                                         ; preds = %if.else, %if.then67
  %sequence69 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  %18 = load i32, i32* %sequence69, align 4, !tbaa !368
  %buf70 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %v4l2_buf = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %buf70, i32 0, i32 0
  %sequence71 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf, i32 0, i32 7
  store i32 %18, i32* %sequence71, align 8, !tbaa !398
  %tv_sec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 0
  %19 = load i64, i64* %tv_sec, align 8, !tbaa !341
  %buf72 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %v4l2_buf73 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %buf72, i32 0, i32 0
  %timestamp = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf73, i32 0, i32 5
  %tv_sec74 = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp, i32 0, i32 0
  store i64 %19, i64* %tv_sec74, align 8, !tbaa !400
  %tv_nsec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %ts, i32 0, i32 1
  %20 = load i64, i64* %tv_nsec, align 8, !tbaa !342
  %div = sdiv i64 %20, 1000
  %buf75 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 0
  %v4l2_buf76 = getelementptr inbounds %struct.vb2_buffer, %struct.vb2_buffer* %buf75, i32 0, i32 0
  %timestamp77 = getelementptr inbounds %struct.v4l2_buffer, %struct.v4l2_buffer* %v4l2_buf76, i32 0, i32 5
  %tv_usec = getelementptr inbounds %struct.load_weight, %struct.load_weight* %timestamp77, i32 0, i32 1
  store i64 %div, i64* %tv_usec, align 8, !tbaa !401
  %state78 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 2, i32* %state78, align 8, !tbaa !181
  br label %cleanup

cleanup:                                          ; preds = %if.end68, %if.then59, %land.lhs.true, %do.end52
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end68 ], [ 1, %if.then59 ], [ 1, %land.lhs.true ], [ 1, %do.end52 ]
  %21 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %21) #8
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end79, label %cleanup102

if.end79:                                         ; preds = %cleanup, %if.end35
  %conv80 = zext i8 %conv10 to i32
  %last_fid81 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %22 = load i8, i8* %last_fid81, align 8, !tbaa !369
  %conv82 = zext i8 %22 to i32
  %cmp83 = icmp ne i32 %conv80, %conv82
  br i1 %cmp83, label %land.lhs.true85, label %if.end98

land.lhs.true85:                                  ; preds = %if.end79
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %23 = load i32, i32* %bytesused, align 4, !tbaa !186
  %cmp86 = icmp ne i32 %23, 0
  br i1 %cmp86, label %do.body89, label %if.end98

do.body89:                                        ; preds = %land.lhs.true85
  %24 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and90 = and i32 %24, 128
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then92, label %do.end96

if.then92:                                        ; preds = %do.body89
  %call93 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.37.175, i32 0, i32 0))
  br label %do.end96

do.end96:                                         ; preds = %if.then92, %do.body89
  %state97 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state97, align 8, !tbaa !181
  br label %cleanup102

if.end98:                                         ; preds = %land.lhs.true85, %if.end79
  %last_fid99 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  store i8 %conv10, i8* %last_fid99, align 8, !tbaa !369
  %arrayidx100 = getelementptr inbounds i8, i8* %data, i64 0
  %25 = load i8, i8* %arrayidx100, align 1, !tbaa !61
  %conv101 = zext i8 %25 to i32
  br label %cleanup102

cleanup102:                                       ; preds = %if.end98, %do.end96, %cleanup, %if.then23, %if.then
  %retval.1 = phi i32 [ -22, %if.then ], [ -61, %if.then23 ], [ -11, %do.end96 ], [ %conv101, %if.end98 ], [ -61, %cleanup ]
  ret i32 %retval.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_data(%struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %_min1 = alloca i32, align 4
  %_min2 = alloca i32, align 4
  %cmp = icmp sle i32 %len, 0
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %0 = load i32, i32* %length, align 8, !tbaa !185
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %1 = load i32, i32* %bytesused, align 4, !tbaa !186
  %sub = sub i32 %0, %1
  %mem1 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %2 = load i8*, i8** %mem1, align 8, !tbaa !184
  %bytesused2 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %3 = load i32, i32* %bytesused2, align 4, !tbaa !186
  %idx.ext = zext i32 %3 to i64
  %add.ptr = getelementptr i8, i8* %2, i64 %idx.ext
  %4 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %4) #8
  store i32 %len, i32* %_min1, align 4, !tbaa !2
  %5 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %5) #8
  store i32 %sub, i32* %_min2, align 4, !tbaa !2
  %cmp3 = icmp eq i32* %_min1, %_min2
  %conv = zext i1 %cmp3 to i32
  %6 = load i32, i32* %_min1, align 4, !tbaa !2
  %7 = load i32, i32* %_min2, align 4, !tbaa !2
  %cmp4 = icmp ult i32 %6, %7
  %8 = load i32, i32* %_min1, align 4
  %9 = load i32, i32* %_min2, align 4
  %cond = select i1 %cmp4, i32 %8, i32 %9
  %10 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %10) #8
  %11 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %11) #8
  %conv6 = zext i32 %cond to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %data, i64 %conv6, i32 1, i1 false)
  %bytesused8 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %12 = load i32, i32* %bytesused8, align 4, !tbaa !186
  %add = add i32 %12, %cond
  store i32 %add, i32* %bytesused8, align 4, !tbaa !186
  %cmp9 = icmp ugt i32 %len, %sub
  br i1 %cmp9, label %do.body, label %cleanup.cont

do.body:                                          ; preds = %if.end
  %13 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %13, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then12, label %do.end

if.then12:                                        ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.271, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then12, %do.body
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !181
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %do.end, %if.end, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 0, %do.end ], [ 0, %if.end ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_decode_end(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %0 to i32
  %and = and i32 %conv, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %entry
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %1 = load i32, i32* %bytesused, align 4, !tbaa !186
  %cmp = icmp ne i32 %1, 0
  br i1 %cmp, label %do.body, label %if.end24

do.body:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and2 = and i32 %2, 128
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %do.end

if.then4:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.42.170, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then4, %do.body
  %arrayidx5 = getelementptr inbounds i8, i8* %data, i64 0
  %3 = load i8, i8* %arrayidx5, align 1, !tbaa !61
  %conv6 = zext i8 %3 to i32
  %cmp7 = icmp eq i32 %conv6, %len
  br i1 %cmp7, label %do.body10, label %if.end17

do.body10:                                        ; preds = %do.end
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and11 = and i32 %4, 128
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %if.end17

if.then13:                                        ; preds = %do.body10
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.43.171, i32 0, i32 0))
  br label %if.end17

if.end17:                                         ; preds = %if.then13, %do.body10, %do.end
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 3, i32* %state, align 8, !tbaa !181
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %5 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %5, i32 0, i32 3
  %6 = load i32, i32* %quirks, align 8, !tbaa !10
  %and18 = and i32 %6, 16
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %if.end24

if.then20:                                        ; preds = %if.end17
  %last_fid = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 26
  %7 = load i8, i8* %last_fid, align 8, !tbaa !369
  %conv21 = zext i8 %7 to i32
  %xor = xor i32 %conv21, 1
  %conv22 = trunc i32 %xor to i8
  store i8 %conv22, i8* %last_fid, align 8, !tbaa !369
  br label %if.end24

if.end24:                                         ; preds = %if.then20, %if.end17, %land.lhs.true, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_update(%struct.uvc_streaming* %stream) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame1 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats, i32 0, i32 0
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 2048
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %do.end

if.then:                                          ; preds = %entry
  %sequence = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 25
  %1 = load i32, i32* %sequence, align 4, !tbaa !368
  %first_data = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 1
  %2 = load i32, i32* %first_data, align 4, !tbaa !402
  %nb_packets = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %3 = load i32, i32* %nb_packets, align 4, !tbaa !403
  %nb_empty = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 3
  %4 = load i32, i32* %nb_empty, align 4, !tbaa !404
  %sub = sub i32 %3, %4
  %nb_packets2 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %5 = load i32, i32* %nb_packets2, align 4, !tbaa !403
  %nb_pts_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 7
  %6 = load i32, i32* %nb_pts_diffs, align 4, !tbaa !405
  %last_pts_diff = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 8
  %7 = load i32, i32* %last_pts_diff, align 4, !tbaa !406
  %nb_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 6
  %8 = load i32, i32* %nb_pts, align 4, !tbaa !407
  %has_early_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 10
  %9 = load i8, i8* %has_early_pts, align 1, !tbaa !408, !range !409
  %tobool3 = trunc i8 %9 to i1
  %10 = zext i1 %tobool3 to i64
  %cond = select i1 %tobool3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39.177, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.178, i32 0, i32 0)
  %has_initial_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 9
  %11 = load i8, i8* %has_initial_pts, align 4, !tbaa !410, !range !409
  %tobool4 = trunc i8 %11 to i1
  %12 = zext i1 %tobool4 to i64
  %cond5 = select i1 %tobool4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.39.177, i32 0, i32 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.40.178, i32 0, i32 0)
  %nb_scr_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 13
  %13 = load i32, i32* %nb_scr_diffs, align 4, !tbaa !411
  %nb_scr = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %14 = load i32, i32* %nb_scr, align 4, !tbaa !412
  %pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 11
  %15 = load i32, i32* %pts, align 4, !tbaa !413
  %scr_stc = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 15
  %16 = load i32, i32* %scr_stc, align 4, !tbaa !414
  %scr_sof = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 14
  %17 = load i16, i16* %scr_sof, align 4, !tbaa !415
  %conv = zext i16 %17 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([118 x i8], [118 x i8]* @.str.38.179, i32 0, i32 0), i32 %1, i32 %2, i32 %sub, i32 %5, i32 %6, i32 %7, i32 %8, i8* %cond, i8* %cond5, i32 %13, i32 %14, i32 %15, i32 %16, i32 %conv)
  br label %do.end

do.end:                                           ; preds = %if.then, %entry
  %stats6 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream7 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats6, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream7, i32 0, i32 2
  %18 = load i32, i32* %nb_frames, align 8, !tbaa !353
  %inc = add i32 %18, 1
  store i32 %inc, i32* %nb_frames, align 8, !tbaa !353
  %stats8 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame9 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats8, i32 0, i32 0
  %nb_packets10 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame9, i32 0, i32 2
  %19 = load i32, i32* %nb_packets10, align 8, !tbaa !416
  %stats11 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream12 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats11, i32 0, i32 1
  %nb_packets13 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream12, i32 0, i32 3
  %20 = load i32, i32* %nb_packets13, align 4, !tbaa !354
  %add = add i32 %20, %19
  store i32 %add, i32* %nb_packets13, align 4, !tbaa !354
  %stats14 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame15 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats14, i32 0, i32 0
  %nb_empty16 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame15, i32 0, i32 3
  %21 = load i32, i32* %nb_empty16, align 4, !tbaa !417
  %stats17 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream18 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats17, i32 0, i32 1
  %nb_empty19 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream18, i32 0, i32 4
  %22 = load i32, i32* %nb_empty19, align 8, !tbaa !355
  %add20 = add i32 %22, %21
  store i32 %add20, i32* %nb_empty19, align 8, !tbaa !355
  %stats21 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame22 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats21, i32 0, i32 0
  %nb_errors = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame22, i32 0, i32 5
  %23 = load i32, i32* %nb_errors, align 4, !tbaa !418
  %stats23 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream24 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats23, i32 0, i32 1
  %nb_errors25 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream24, i32 0, i32 6
  %24 = load i32, i32* %nb_errors25, align 8, !tbaa !356
  %add26 = add i32 %24, %23
  store i32 %add26, i32* %nb_errors25, align 8, !tbaa !356
  %stats27 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame28 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats27, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame28, i32 0, i32 4
  %25 = load i32, i32* %nb_invalid, align 8, !tbaa !399
  %stats29 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream30 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats29, i32 0, i32 1
  %nb_invalid31 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream30, i32 0, i32 5
  %26 = load i32, i32* %nb_invalid31, align 4, !tbaa !357
  %add32 = add i32 %26, %25
  store i32 %add32, i32* %nb_invalid31, align 4, !tbaa !357
  %has_early_pts33 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 10
  %27 = load i8, i8* %has_early_pts33, align 1, !tbaa !408, !range !409
  %tobool34 = trunc i8 %27 to i1
  br i1 %tobool34, label %if.then35, label %if.end39

if.then35:                                        ; preds = %do.end
  %stats36 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream37 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats36, i32 0, i32 1
  %nb_pts_early = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream37, i32 0, i32 8
  %28 = load i32, i32* %nb_pts_early, align 8, !tbaa !358
  %inc38 = add i32 %28, 1
  store i32 %inc38, i32* %nb_pts_early, align 8, !tbaa !358
  br label %if.end39

if.end39:                                         ; preds = %if.then35, %do.end
  %has_initial_pts40 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 9
  %29 = load i8, i8* %has_initial_pts40, align 4, !tbaa !410, !range !409
  %tobool41 = trunc i8 %29 to i1
  br i1 %tobool41, label %if.then42, label %if.end46

if.then42:                                        ; preds = %if.end39
  %stats43 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream44 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats43, i32 0, i32 1
  %nb_pts_initial = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream44, i32 0, i32 9
  %30 = load i32, i32* %nb_pts_initial, align 4, !tbaa !359
  %inc45 = add i32 %30, 1
  store i32 %inc45, i32* %nb_pts_initial, align 4, !tbaa !359
  br label %if.end46

if.end46:                                         ; preds = %if.then42, %if.end39
  %last_pts_diff47 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 8
  %31 = load i32, i32* %last_pts_diff47, align 4, !tbaa !406
  %first_data48 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 1
  %32 = load i32, i32* %first_data48, align 4, !tbaa !402
  %cmp = icmp ule i32 %31, %32
  br i1 %cmp, label %if.then50, label %if.end54

if.then50:                                        ; preds = %if.end46
  %stats51 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream52 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats51, i32 0, i32 1
  %nb_pts_constant = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream52, i32 0, i32 7
  %33 = load i32, i32* %nb_pts_constant, align 4, !tbaa !360
  %inc53 = add i32 %33, 1
  store i32 %inc53, i32* %nb_pts_constant, align 4, !tbaa !360
  br label %if.end54

if.end54:                                         ; preds = %if.then50, %if.end46
  %nb_scr55 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %34 = load i32, i32* %nb_scr55, align 4, !tbaa !412
  %nb_packets56 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 2
  %35 = load i32, i32* %nb_packets56, align 4, !tbaa !403
  %nb_empty57 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 3
  %36 = load i32, i32* %nb_empty57, align 4, !tbaa !404
  %sub58 = sub i32 %35, %36
  %cmp59 = icmp uge i32 %34, %sub58
  br i1 %cmp59, label %if.then61, label %if.end65

if.then61:                                        ; preds = %if.end54
  %stats62 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream63 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats62, i32 0, i32 1
  %nb_scr_count_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream63, i32 0, i32 10
  %37 = load i32, i32* %nb_scr_count_ok, align 8, !tbaa !361
  %inc64 = add i32 %37, 1
  store i32 %inc64, i32* %nb_scr_count_ok, align 8, !tbaa !361
  br label %if.end65

if.end65:                                         ; preds = %if.then61, %if.end54
  %nb_scr_diffs66 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 13
  %38 = load i32, i32* %nb_scr_diffs66, align 4, !tbaa !411
  %add67 = add i32 %38, 1
  %nb_scr68 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame1, i32 0, i32 12
  %39 = load i32, i32* %nb_scr68, align 4, !tbaa !412
  %cmp69 = icmp eq i32 %add67, %39
  br i1 %cmp69, label %if.then71, label %if.end75

if.then71:                                        ; preds = %if.end65
  %stats72 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream73 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats72, i32 0, i32 1
  %nb_scr_diffs_ok = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream73, i32 0, i32 11
  %40 = load i32, i32* %nb_scr_diffs_ok, align 4, !tbaa !362
  %inc74 = add i32 %40, 1
  store i32 %inc74, i32* %nb_scr_diffs_ok, align 4, !tbaa !362
  br label %if.end75

if.end75:                                         ; preds = %if.then71, %if.end65
  %stats76 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame77 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats76, i32 0, i32 0
  %41 = bitcast %struct.uvc_stats_frame* %frame77 to i8*
  call void @llvm.memset.p0i8.i64(i8* %41, i8 0, i64 60, i32 8, i1 false)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_decode(%struct.uvc_streaming* %stream, %struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %ts = alloca %struct.load_weight, align 8
  %__dummy = alloca i64, align 8
  %__dummy2 = alloca i64, align 8
  %0 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* %0) #8
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %1 to i32
  %and = and i32 %conv, 12
  %Pivot6 = icmp slt i32 %and, 8
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %and, 12
  br i1 %Pivot, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %and, 12
  br i1 %SwitchLeaf4, label %sw.epilog, label %sw.default

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %and, 8
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.default

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %and, 4
  br i1 %SwitchLeaf, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %LeafBlock, %LeafBlock1, %LeafBlock3
  %header_size.0 = phi i32 [ 2, %sw.default ], [ 12, %LeafBlock3 ], [ 6, %LeafBlock ], [ 8, %LeafBlock1 ]
  %has_pts.0 = phi i8 [ 0, %sw.default ], [ 1, %LeafBlock3 ], [ 1, %LeafBlock ], [ 0, %LeafBlock1 ]
  %has_scr.0 = phi i8 [ 0, %sw.default ], [ 1, %LeafBlock3 ], [ 0, %LeafBlock ], [ 1, %LeafBlock1 ]
  %cmp = icmp ult i32 %len, %header_size.0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %sw.epilog
  %tobool = trunc i8 %has_pts.0 to i1
  %cmp5 = icmp ne %struct.uvc_buffer* %buf, null
  %or.cond = and i1 %tobool, %cmp5
  br i1 %or.cond, label %if.then7, label %if.end9

if.then7:                                         ; preds = %if.end
  %arrayidx8 = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @get_unaligned_le32.134(i8* %arrayidx8)
  %pts = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 7
  store i32 %call, i32* %pts, align 8, !tbaa !335
  br label %if.end9

if.end9:                                          ; preds = %if.then7, %if.end
  %tobool10 = trunc i8 %has_scr.0 to i1
  br i1 %tobool10, label %if.end12, label %cleanup

if.end12:                                         ; preds = %if.end9
  %sub = sub i32 %header_size.0, 2
  %idxprom = zext i32 %sub to i64
  %arrayidx13 = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %call14 = call zeroext i16 @get_unaligned_le16.176(i8* %arrayidx13)
  %conv15 = zext i16 %call14 to i32
  %clock = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %last_sof = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock, i32 0, i32 4
  %2 = load i16, i16* %last_sof, align 4, !tbaa !419
  %conv16 = zext i16 %2 to i32
  %cmp17 = icmp eq i32 %conv15, %conv16
  br i1 %cmp17, label %cleanup, label %if.end20

if.end20:                                         ; preds = %if.end12
  %clock21 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %last_sof22 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock21, i32 0, i32 4
  store i16 %call14, i16* %last_sof22, align 4, !tbaa !419
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %call23 = call i32 @usb_get_current_frame_number(%struct.usb_device* %4)
  %conv24 = trunc i32 %call23 to i16
  call void @ktime_get_ts(%struct.load_weight* %ts)
  %clock25 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %sof_offset = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock25, i32 0, i32 5
  %5 = load i16, i16* %sof_offset, align 2, !tbaa !420
  %conv26 = zext i16 %5 to i32
  %cmp27 = icmp eq i32 %conv26, 65535
  br i1 %cmp27, label %if.then29, label %if.end44

if.then29:                                        ; preds = %if.end20
  %conv30 = zext i16 %conv24 to i32
  %conv31 = zext i16 %call14 to i32
  %sub32 = sub nsw i32 %conv30, %conv31
  %and33 = and i32 %sub32, 255
  %conv34 = trunc i32 %and33 to i16
  %conv35 = zext i16 %conv34 to i32
  %cmp36 = icmp sge i32 %conv35, 10
  %clock39 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %sof_offset40 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock39, i32 0, i32 5
  %.sink = select i1 %cmp36, i16 %conv34, i16 0
  store i16 %.sink, i16* %sof_offset40, align 2, !tbaa !420
  br label %if.end44

if.end44:                                         ; preds = %if.then29, %if.end20
  %conv45 = zext i16 %call14 to i32
  %clock46 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %sof_offset47 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock46, i32 0, i32 5
  %6 = load i16, i16* %sof_offset47, align 2, !tbaa !420
  %conv48 = zext i16 %6 to i32
  %add = add nsw i32 %conv45, %conv48
  %and49 = and i32 %add, 2047
  %conv50 = trunc i32 %and49 to i16
  %7 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %7) #8
  %8 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %8) #8
  %cmp52 = icmp eq i64* %__dummy, %__dummy2
  %conv53 = zext i1 %cmp52 to i32
  %9 = bitcast i64* %__dummy2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  %10 = bitcast i64* %__dummy to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %10) #8
  %clock54 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock54, i32 0, i32 6
  %call55 = call %struct.raw_spinlock* @spinlock_check.139(%struct.spinlock* %lock)
  %call56 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %call55)
  %clock59 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock59, i32 0, i32 0
  %11 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !421
  %clock60 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %head = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock60, i32 0, i32 1
  %12 = load i32, i32* %head, align 8, !tbaa !422
  %idxprom61 = zext i32 %12 to i64
  %arrayidx62 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %11, i64 %idxprom61
  %sub63 = sub i32 %header_size.0, 6
  %idxprom64 = zext i32 %sub63 to i64
  %arrayidx65 = getelementptr inbounds i8, i8* %data, i64 %idxprom64
  %call66 = call i32 @get_unaligned_le32.134(i8* %arrayidx65)
  %dev_stc = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 0
  store i32 %call66, i32* %dev_stc, align 8, !tbaa !336
  %dev_sof67 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 1
  store i16 %conv50, i16* %dev_sof67, align 4, !tbaa !338
  %host_sof68 = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 3
  store i16 %conv24, i16* %host_sof68, align 8, !tbaa !347
  %host_ts = getelementptr inbounds %struct.uvc_clock_sample, %struct.uvc_clock_sample* %arrayidx62, i32 0, i32 2
  %13 = bitcast %struct.load_weight* %host_ts to i8*
  %14 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 16, i32 8, i1 false), !tbaa.struct !340
  %clock69 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %head70 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock69, i32 0, i32 1
  %15 = load i32, i32* %head70, align 8, !tbaa !422
  %add71 = add i32 %15, 1
  %clock72 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock72, i32 0, i32 3
  %16 = load i32, i32* %size, align 8, !tbaa !423
  %rem = urem i32 %add71, %16
  %clock73 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %head74 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock73, i32 0, i32 1
  store i32 %rem, i32* %head74, align 8, !tbaa !422
  %clock75 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %count = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock75, i32 0, i32 2
  %17 = load i32, i32* %count, align 4, !tbaa !424
  %clock76 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %size77 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock76, i32 0, i32 3
  %18 = load i32, i32* %size77, align 8, !tbaa !423
  %cmp78 = icmp ult i32 %17, %18
  br i1 %cmp78, label %if.then80, label %if.end83

if.then80:                                        ; preds = %if.end44
  %clock81 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %count82 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock81, i32 0, i32 2
  %19 = load i32, i32* %count82, align 4, !tbaa !424
  %inc = add i32 %19, 1
  store i32 %inc, i32* %count82, align 4, !tbaa !424
  br label %if.end83

if.end83:                                         ; preds = %if.then80, %if.end44
  %clock84 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %lock85 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock84, i32 0, i32 6
  call void @spin_unlock_irqrestore.142(%struct.spinlock* %lock85, i64 %call56)
  br label %cleanup

cleanup:                                          ; preds = %if.end83, %if.end12, %if.end9, %sw.epilog
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end83 ], [ 1, %sw.epilog ], [ 1, %if.end9 ], [ 1, %if.end12 ]
  %20 = bitcast %struct.load_weight* %ts to i8*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* %20) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_stats_decode(%struct.uvc_streaming* %stream, i8* %data, i32 %len) #0 {
entry:
  %stats = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream1 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats, i32 0, i32 1
  %nb_frames = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream1, i32 0, i32 2
  %0 = load i32, i32* %nb_frames, align 8, !tbaa !353
  %cmp = icmp eq i32 %0, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %stats2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats2, i32 0, i32 0
  %nb_packets = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame, i32 0, i32 2
  %1 = load i32, i32* %nb_packets, align 8, !tbaa !416
  %cmp3 = icmp eq i32 %1, 0
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %stats4 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream5 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats4, i32 0, i32 1
  %start_ts = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream5, i32 0, i32 0
  call void @ktime_get_ts(%struct.load_weight* %start_ts)
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 1
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %2 to i32
  %and = and i32 %conv, 12
  %Pivot6 = icmp slt i32 %and, 8
  br i1 %Pivot6, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end
  %Pivot = icmp slt i32 %and, 12
  br i1 %Pivot, label %LeafBlock1, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock
  %SwitchLeaf4 = icmp eq i32 %and, 12
  br i1 %SwitchLeaf4, label %sw.epilog, label %sw.default

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %and, 8
  br i1 %SwitchLeaf2, label %sw.epilog, label %sw.default

LeafBlock:                                        ; preds = %if.end
  %SwitchLeaf = icmp eq i32 %and, 4
  br i1 %SwitchLeaf, label %sw.epilog, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %LeafBlock, %LeafBlock1, %LeafBlock3
  %has_scr.0 = phi i8 [ 0, %sw.default ], [ 1, %LeafBlock3 ], [ 0, %LeafBlock ], [ 1, %LeafBlock1 ]
  %has_pts.0 = phi i8 [ 0, %sw.default ], [ 1, %LeafBlock3 ], [ 1, %LeafBlock ], [ 0, %LeafBlock1 ]
  %header_size.0 = phi i32 [ 2, %sw.default ], [ 12, %LeafBlock3 ], [ 6, %LeafBlock ], [ 8, %LeafBlock1 ]
  %cmp8 = icmp ult i32 %len, %header_size.0
  br i1 %cmp8, label %if.then14, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.epilog
  %arrayidx10 = getelementptr inbounds i8, i8* %data, i64 0
  %3 = load i8, i8* %arrayidx10, align 1, !tbaa !61
  %conv11 = zext i8 %3 to i32
  %cmp12 = icmp ult i32 %conv11, %header_size.0
  br i1 %cmp12, label %if.then14, label %if.end17

if.then14:                                        ; preds = %lor.lhs.false, %sw.epilog
  %stats15 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame16 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats15, i32 0, i32 0
  %nb_invalid = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame16, i32 0, i32 4
  %4 = load i32, i32* %nb_invalid, align 8, !tbaa !399
  %inc = add i32 %4, 1
  store i32 %inc, i32* %nb_invalid, align 8, !tbaa !399
  br label %cleanup.cont

if.end17:                                         ; preds = %lor.lhs.false
  %tobool = trunc i8 %has_pts.0 to i1
  br i1 %tobool, label %if.then18, label %if.end20

if.then18:                                        ; preds = %if.end17
  %arrayidx19 = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @get_unaligned_le32.134(i8* %arrayidx19)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %if.end17
  %pts.0 = phi i32 [ %call, %if.then18 ], [ undef, %if.end17 ]
  %tobool21 = trunc i8 %has_scr.0 to i1
  br i1 %tobool21, label %if.then22, label %if.end29

if.then22:                                        ; preds = %if.end20
  %sub = sub i32 %header_size.0, 6
  %idxprom = zext i32 %sub to i64
  %arrayidx23 = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %call24 = call i32 @get_unaligned_le32.134(i8* %arrayidx23)
  %sub25 = sub i32 %header_size.0, 2
  %idxprom26 = zext i32 %sub25 to i64
  %arrayidx27 = getelementptr inbounds i8, i8* %data, i64 %idxprom26
  %call28 = call zeroext i16 @get_unaligned_le16.176(i8* %arrayidx27)
  br label %if.end29

if.end29:                                         ; preds = %if.then22, %if.end20
  %scr_sof.0 = phi i16 [ %call28, %if.then22 ], [ undef, %if.end20 ]
  %scr_stc.0 = phi i32 [ %call24, %if.then22 ], [ undef, %if.end20 ]
  %tobool30 = trunc i8 %has_pts.0 to i1
  br i1 %tobool30, label %land.lhs.true32, label %if.end52

land.lhs.true32:                                  ; preds = %if.end29
  %stats33 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame34 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats33, i32 0, i32 0
  %nb_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame34, i32 0, i32 6
  %5 = load i32, i32* %nb_pts, align 8, !tbaa !425
  %tobool35 = icmp ne i32 %5, 0
  br i1 %tobool35, label %if.then36, label %if.end52

if.then36:                                        ; preds = %land.lhs.true32
  %stats37 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame38 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats37, i32 0, i32 0
  %pts39 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame38, i32 0, i32 11
  %6 = load i32, i32* %pts39, align 8, !tbaa !426
  %cmp40 = icmp ne i32 %6, %pts.0
  br i1 %cmp40, label %if.then42, label %if.end52

if.then42:                                        ; preds = %if.then36
  %stats43 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame44 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats43, i32 0, i32 0
  %nb_pts_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame44, i32 0, i32 7
  %7 = load i32, i32* %nb_pts_diffs, align 4, !tbaa !427
  %inc45 = add i32 %7, 1
  store i32 %inc45, i32* %nb_pts_diffs, align 4, !tbaa !427
  %stats46 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame47 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats46, i32 0, i32 0
  %nb_packets48 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame47, i32 0, i32 2
  %8 = load i32, i32* %nb_packets48, align 8, !tbaa !416
  %stats49 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame50 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats49, i32 0, i32 0
  %last_pts_diff = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame50, i32 0, i32 8
  store i32 %8, i32* %last_pts_diff, align 8, !tbaa !428
  br label %if.end52

if.end52:                                         ; preds = %if.then42, %if.then36, %land.lhs.true32, %if.end29
  %tobool53 = trunc i8 %has_pts.0 to i1
  br i1 %tobool53, label %if.then54, label %if.end62

if.then54:                                        ; preds = %if.end52
  %stats55 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame56 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats55, i32 0, i32 0
  %nb_pts57 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame56, i32 0, i32 6
  %9 = load i32, i32* %nb_pts57, align 8, !tbaa !425
  %inc58 = add i32 %9, 1
  store i32 %inc58, i32* %nb_pts57, align 8, !tbaa !425
  %stats59 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame60 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats59, i32 0, i32 0
  %pts61 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame60, i32 0, i32 11
  store i32 %pts.0, i32* %pts61, align 8, !tbaa !426
  br label %if.end62

if.end62:                                         ; preds = %if.then54, %if.end52
  %stats63 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame64 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats63, i32 0, i32 0
  %size = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame64, i32 0, i32 0
  %10 = load i32, i32* %size, align 8, !tbaa !429
  %cmp65 = icmp eq i32 %10, 0
  br i1 %cmp65, label %if.then67, label %if.end84

if.then67:                                        ; preds = %if.end62
  %cmp68 = icmp ugt i32 %len, %header_size.0
  br i1 %cmp68, label %if.then70, label %if.end74

if.then70:                                        ; preds = %if.then67
  %tobool71 = trunc i8 %has_pts.0 to i1
  %stats72 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame73 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats72, i32 0, i32 0
  %has_initial_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame73, i32 0, i32 9
  %frombool = zext i1 %tobool71 to i8
  store i8 %frombool, i8* %has_initial_pts, align 4, !tbaa !430
  br label %if.end74

if.end74:                                         ; preds = %if.then70, %if.then67
  %cmp75 = icmp eq i32 %len, %header_size.0
  br i1 %cmp75, label %land.lhs.true77, label %if.end84

land.lhs.true77:                                  ; preds = %if.end74
  %tobool78 = trunc i8 %has_pts.0 to i1
  br i1 %tobool78, label %if.then80, label %if.end84

if.then80:                                        ; preds = %land.lhs.true77
  %stats81 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame82 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats81, i32 0, i32 0
  %has_early_pts = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame82, i32 0, i32 10
  store i8 1, i8* %has_early_pts, align 1, !tbaa !431
  br label %if.end84

if.end84:                                         ; preds = %if.then80, %land.lhs.true77, %if.end74, %if.end62
  %tobool85 = trunc i8 %has_scr.0 to i1
  br i1 %tobool85, label %land.lhs.true87, label %if.end102

land.lhs.true87:                                  ; preds = %if.end84
  %stats88 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame89 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats88, i32 0, i32 0
  %nb_scr = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame89, i32 0, i32 12
  %11 = load i32, i32* %nb_scr, align 4, !tbaa !432
  %tobool90 = icmp ne i32 %11, 0
  br i1 %tobool90, label %if.then91, label %if.end102

if.then91:                                        ; preds = %land.lhs.true87
  %stats92 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame93 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats92, i32 0, i32 0
  %scr_stc94 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame93, i32 0, i32 15
  %12 = load i32, i32* %scr_stc94, align 8, !tbaa !433
  %cmp95 = icmp ne i32 %12, %scr_stc.0
  br i1 %cmp95, label %if.then97, label %if.end102

if.then97:                                        ; preds = %if.then91
  %stats98 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame99 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats98, i32 0, i32 0
  %nb_scr_diffs = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame99, i32 0, i32 13
  %13 = load i32, i32* %nb_scr_diffs, align 8, !tbaa !434
  %inc100 = add i32 %13, 1
  store i32 %inc100, i32* %nb_scr_diffs, align 8, !tbaa !434
  br label %if.end102

if.end102:                                        ; preds = %if.then97, %if.then91, %land.lhs.true87, %if.end84
  %tobool103 = trunc i8 %has_scr.0 to i1
  br i1 %tobool103, label %if.then104, label %if.end161

if.then104:                                       ; preds = %if.end102
  %stats105 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream106 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats105, i32 0, i32 1
  %nb_frames107 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream106, i32 0, i32 2
  %14 = load i32, i32* %nb_frames107, align 8, !tbaa !353
  %cmp108 = icmp ugt i32 %14, 0
  br i1 %cmp108, label %if.then116, label %lor.lhs.false110

lor.lhs.false110:                                 ; preds = %if.then104
  %stats111 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame112 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats111, i32 0, i32 0
  %nb_scr113 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame112, i32 0, i32 12
  %15 = load i32, i32* %nb_scr113, align 4, !tbaa !432
  %cmp114 = icmp ugt i32 %15, 0
  br i1 %cmp114, label %if.then116, label %if.end124

if.then116:                                       ; preds = %lor.lhs.false110, %if.then104
  %conv117 = zext i16 %scr_sof.0 to i32
  %stats118 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream119 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats118, i32 0, i32 1
  %scr_sof120 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream119, i32 0, i32 13
  %16 = load i32, i32* %scr_sof120, align 4, !tbaa !435
  %sub121 = sub i32 %conv117, %16
  %rem = urem i32 %sub121, 2048
  %stats122 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream123 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats122, i32 0, i32 1
  %scr_sof_count = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream123, i32 0, i32 12
  %17 = load i32, i32* %scr_sof_count, align 8, !tbaa !352
  %add = add i32 %17, %rem
  store i32 %add, i32* %scr_sof_count, align 8, !tbaa !352
  br label %if.end124

if.end124:                                        ; preds = %if.then116, %lor.lhs.false110
  %conv125 = zext i16 %scr_sof.0 to i32
  %stats126 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream127 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats126, i32 0, i32 1
  %scr_sof128 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream127, i32 0, i32 13
  store i32 %conv125, i32* %scr_sof128, align 4, !tbaa !435
  %stats129 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame130 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats129, i32 0, i32 0
  %nb_scr131 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame130, i32 0, i32 12
  %18 = load i32, i32* %nb_scr131, align 4, !tbaa !432
  %inc132 = add i32 %18, 1
  store i32 %inc132, i32* %nb_scr131, align 4, !tbaa !432
  %stats133 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame134 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats133, i32 0, i32 0
  %scr_stc135 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame134, i32 0, i32 15
  store i32 %scr_stc.0, i32* %scr_stc135, align 8, !tbaa !433
  %stats136 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame137 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats136, i32 0, i32 0
  %scr_sof138 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame137, i32 0, i32 14
  store i16 %scr_sof.0, i16* %scr_sof138, align 4, !tbaa !436
  %conv139 = zext i16 %scr_sof.0 to i32
  %stats140 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream141 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats140, i32 0, i32 1
  %min_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream141, i32 0, i32 14
  %19 = load i32, i32* %min_sof, align 8, !tbaa !363
  %cmp142 = icmp ult i32 %conv139, %19
  br i1 %cmp142, label %if.then144, label %if.end149

if.then144:                                       ; preds = %if.end124
  %conv145 = zext i16 %scr_sof.0 to i32
  %stats146 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream147 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats146, i32 0, i32 1
  %min_sof148 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream147, i32 0, i32 14
  store i32 %conv145, i32* %min_sof148, align 8, !tbaa !363
  br label %if.end149

if.end149:                                        ; preds = %if.then144, %if.end124
  %conv150 = zext i16 %scr_sof.0 to i32
  %stats151 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream152 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats151, i32 0, i32 1
  %max_sof = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream152, i32 0, i32 15
  %20 = load i32, i32* %max_sof, align 4, !tbaa !364
  %cmp153 = icmp ugt i32 %conv150, %20
  br i1 %cmp153, label %if.then155, label %if.end161

if.then155:                                       ; preds = %if.end149
  %conv156 = zext i16 %scr_sof.0 to i32
  %stats157 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %stream158 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats157, i32 0, i32 1
  %max_sof159 = getelementptr inbounds %struct.uvc_stats_stream, %struct.uvc_stats_stream* %stream158, i32 0, i32 15
  store i32 %conv156, i32* %max_sof159, align 4, !tbaa !364
  br label %if.end161

if.end161:                                        ; preds = %if.then155, %if.end149, %if.end102
  %stats162 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame163 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats162, i32 0, i32 0
  %size164 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame163, i32 0, i32 0
  %21 = load i32, i32* %size164, align 8, !tbaa !429
  %cmp165 = icmp eq i32 %21, 0
  %cmp168 = icmp ugt i32 %len, %header_size.0
  %or.cond = and i1 %cmp165, %cmp168
  br i1 %or.cond, label %if.then170, label %if.end176

if.then170:                                       ; preds = %if.end161
  %stats171 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame172 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats171, i32 0, i32 0
  %nb_packets173 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame172, i32 0, i32 2
  %22 = load i32, i32* %nb_packets173, align 8, !tbaa !416
  %stats174 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame175 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats174, i32 0, i32 0
  %first_data = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame175, i32 0, i32 1
  store i32 %22, i32* %first_data, align 4, !tbaa !437
  br label %if.end176

if.end176:                                        ; preds = %if.then170, %if.end161
  %sub177 = sub i32 %len, %header_size.0
  %stats178 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame179 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats178, i32 0, i32 0
  %size180 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame179, i32 0, i32 0
  %23 = load i32, i32* %size180, align 8, !tbaa !429
  %add181 = add i32 %23, %sub177
  store i32 %add181, i32* %size180, align 8, !tbaa !429
  %stats182 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame183 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats182, i32 0, i32 0
  %nb_packets184 = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame183, i32 0, i32 2
  %24 = load i32, i32* %nb_packets184, align 8, !tbaa !416
  %inc185 = add i32 %24, 1
  store i32 %inc185, i32* %nb_packets184, align 8, !tbaa !416
  %cmp186 = icmp ugt i32 %len, %header_size.0
  br i1 %cmp186, label %if.then188, label %if.end192

if.then188:                                       ; preds = %if.end176
  %stats189 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame190 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats189, i32 0, i32 0
  %nb_empty = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame190, i32 0, i32 3
  %25 = load i32, i32* %nb_empty, align 4, !tbaa !417
  %inc191 = add i32 %25, 1
  store i32 %inc191, i32* %nb_empty, align 4, !tbaa !417
  br label %if.end192

if.end192:                                        ; preds = %if.then188, %if.end176
  %arrayidx193 = getelementptr inbounds i8, i8* %data, i64 1
  %26 = load i8, i8* %arrayidx193, align 1, !tbaa !61
  %conv194 = zext i8 %26 to i32
  %and195 = and i32 %conv194, 64
  %tobool196 = icmp ne i32 %and195, 0
  br i1 %tobool196, label %if.then197, label %cleanup.cont

if.then197:                                       ; preds = %if.end192
  %stats198 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 28
  %frame199 = getelementptr inbounds %struct.anon.71, %struct.anon.71* %stats198, i32 0, i32 0
  %nb_errors = getelementptr inbounds %struct.uvc_stats_frame, %struct.uvc_stats_frame* %frame199, i32 0, i32 5
  %27 = load i32, i32* %nb_errors, align 4, !tbaa !418
  %inc200 = add i32 %27, 1
  store i32 %inc200, i32* %nb_errors, align 4, !tbaa !418
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then197, %if.end192, %if.then14
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then14 ], [ 0, %if.then197 ], [ 0, %if.end192 ]
  ret void
}

declare void @getnstimeofday(%struct.load_weight*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @get_unaligned_le16.176(i8* %p) #1 {
entry:
  %0 = bitcast i8* %p to i16*
  %call = call zeroext i16 @__le16_to_cpup.128(i16* %0)
  ret i16 %call
}

declare i32 @usb_get_current_frame_number(%struct.usb_device*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_video_enable(%struct.uvc_streaming* %stream, i32 %enable) #0 {
entry:
  %tobool = icmp ne i32 %enable, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  call void @uvc_uninit_video(%struct.uvc_streaming* %stream, i32 1)
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %intfnum = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %2 = load i32, i32* %intfnum, align 8, !tbaa !122
  %call = call i32 @usb_set_interface(%struct.usb_device* %1, i32 %2, i32 0)
  %queue = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call1 = call i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue, i32 0)
  call void @uvc_video_clock_cleanup(%struct.uvc_streaming* %stream)
  br label %cleanup

if.end:                                           ; preds = %entry
  %call2 = call i32 @uvc_video_clock_init(%struct.uvc_streaming* %stream)
  %cmp = icmp slt i32 %call2, 0
  br i1 %cmp, label %cleanup, label %if.end4

if.end4:                                          ; preds = %if.end
  %queue5 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call6 = call i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue5, i32 1)
  %cmp7 = icmp slt i32 %call6, 0
  br i1 %cmp7, label %error_queue, label %if.end9

if.end9:                                          ; preds = %if.end4
  %ctrl = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 12
  %call10 = call i32 @uvc_commit_video(%struct.uvc_streaming* %stream, %struct.uvc_streaming_control* %ctrl)
  %cmp11 = icmp slt i32 %call10, 0
  br i1 %cmp11, label %error_commit, label %if.end13

if.end13:                                         ; preds = %if.end9
  %call14 = call i32 @uvc_init_video(%struct.uvc_streaming* %stream, i32 208)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %error_video, label %cleanup

error_video:                                      ; preds = %if.end13
  %dev18 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %3 = load %struct.uvc_device*, %struct.uvc_device** %dev18, align 8, !tbaa !102
  %udev19 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %3, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev19, align 8, !tbaa !63
  %intfnum20 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 6
  %5 = load i32, i32* %intfnum20, align 8, !tbaa !122
  %call21 = call i32 @usb_set_interface(%struct.usb_device* %4, i32 %5, i32 0)
  br label %error_commit

error_commit:                                     ; preds = %error_video, %if.end9
  %ret.0 = phi i32 [ %call14, %error_video ], [ %call10, %if.end9 ]
  %queue22 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 18
  %call23 = call i32 @uvc_queue_enable(%struct.uvc_video_queue* %queue22, i32 0)
  br label %error_queue

error_queue:                                      ; preds = %error_commit, %if.end4
  %ret.1 = phi i32 [ %ret.0, %error_commit ], [ %call6, %if.end4 ]
  call void @uvc_video_clock_cleanup(%struct.uvc_streaming* %stream)
  br label %cleanup

cleanup:                                          ; preds = %error_queue, %if.end13, %if.end, %if.then
  %retval.0 = phi i32 [ %ret.1, %error_queue ], [ 0, %if.then ], [ %call2, %if.end ], [ 0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_video_clock_cleanup(%struct.uvc_streaming* %stream) #0 {
entry:
  %clock = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock, i32 0, i32 0
  %0 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples, align 8, !tbaa !421
  %1 = bitcast %struct.uvc_clock_sample* %0 to i8*
  call void @kfree(i8* %1)
  %clock1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %samples2 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  store %struct.uvc_clock_sample* null, %struct.uvc_clock_sample** %samples2, align 8, !tbaa !421
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_video_clock_init(%struct.uvc_streaming* %stream) #0 {
entry:
  %clock1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 29
  %lock = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %call = call %struct.raw_spinlock* @spinlock_check.139(%struct.spinlock* %lock)
  %lock3 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 6
  %0 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %lock3, i32 0, i32 0
  %rlock = bitcast %union.anon.4* %0 to %struct.raw_spinlock*
  call void @__raw_spin_lock_init(%struct.raw_spinlock* %rlock, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.44.183, i32 0, i32 0), %struct.lock_class_key* @uvc_video_clock_init.__key)
  %size = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  store i32 32, i32* %size, align 8, !tbaa !332
  %size6 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 3
  %1 = load i32, i32* %size6, align 8, !tbaa !332
  %conv = zext i32 %1 to i64
  %mul = mul i64 %conv, 32
  %call7 = call i8* @kmalloc.126(i64 %mul, i32 208)
  %2 = bitcast i8* %call7 to %struct.uvc_clock_sample*
  %samples = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  store %struct.uvc_clock_sample* %2, %struct.uvc_clock_sample** %samples, align 8, !tbaa !333
  %samples8 = getelementptr inbounds %struct.uvc_clock, %struct.uvc_clock* %clock1, i32 0, i32 0
  %3 = load %struct.uvc_clock_sample*, %struct.uvc_clock_sample** %samples8, align 8, !tbaa !333
  %cmp = icmp eq %struct.uvc_clock_sample* %3, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  call void @uvc_video_clock_reset(%struct.uvc_streaming* %stream)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_add_event(%struct.v4l2_subscribed_event.1203* %sev, i32 %elems) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %ev = alloca %struct.v4l2_event, align 8
  %val = alloca i32, align 4
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 4
  %0 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !45
  %1 = bitcast %struct.v4l2_fh* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_fh*
  %3 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %3) #8
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %4 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !207
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %4, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %5 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain1, align 8, !tbaa !207
  %id = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 2
  %6 = load i32, i32* %id, align 4, !tbaa !2
  %call2 = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %5, i32 %6, %struct.uvc_control_mapping** %mapping)
  %cmp3 = icmp eq %struct.uvc_control* %call2, null
  br i1 %cmp3, label %done, label %if.end5

if.end5:                                          ; preds = %if.end
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 5
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 1
  call void @list_add_tail.186(%struct.list_head* %node, %struct.list_head* %ev_subs)
  %flags = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 3
  %8 = load i32, i32* %flags, align 8, !tbaa !2
  %and = and i32 %8, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then6, label %done

if.then6:                                         ; preds = %if.end5
  %9 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* %9) #8
  %10 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %10) #8
  store i32 0, i32* %val, align 4, !tbaa !2
  %chain7 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %11 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain7, align 8, !tbaa !207
  %12 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call8 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain* %11, %struct.uvc_control* %call2, %struct.uvc_control_mapping* %12, i32* %val)
  %cmp9 = icmp eq i32 %call8, 0
  %or = or i32 2, 1
  %or. = select i1 %cmp9, i32 %or, i32 2
  %chain12 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %13 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain12, align 8, !tbaa !207
  %14 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %15 = load i32, i32* %val, align 4, !tbaa !2
  call void @uvc_ctrl_fill_event(%struct.uvc_video_chain* %13, %struct.v4l2_event* %ev, %struct.uvc_control* %call2, %struct.uvc_control_mapping* %14, i32 %15, i32 %or.)
  %elems13 = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 7
  store i32 %elems, i32* %elems13, align 8, !tbaa !2
  %fh14 = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 4
  %16 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh14, align 8, !tbaa !45
  call void @v4l2_event_queue_fh(%struct.v4l2_fh* %16, %struct.v4l2_event* %ev)
  %17 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %17) #8
  %18 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.end.p0i8(i64 136, i8* %18) #8
  br label %done

done:                                             ; preds = %if.then6, %if.end5, %if.end
  %ret.0 = phi i32 [ -22, %if.end ], [ %call, %if.then6 ], [ %call, %if.end5 ]
  %chain16 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %19 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain16, align 8, !tbaa !207
  %ctrl_mutex17 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %19, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex17)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -512, %entry ]
  %20 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %20) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_del_event(%struct.v4l2_subscribed_event.1203* %sev) #0 {
entry:
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 4
  %0 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !45
  %1 = bitcast %struct.v4l2_fh* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_fh*
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %3 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !207
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %3, i32 0, i32 5
  call void @mutex_lock_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %sev, i32 0, i32 5
  call void @list_del(%struct.list_head* %node)
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %2, i32 0, i32 1
  %4 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain1, align 8, !tbaa !207
  %ctrl_mutex2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %4, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex2)
  ret void
}

declare void @v4l2_ctrl_replace(%struct.v4l2_event*, %struct.v4l2_event*) #2

declare void @v4l2_ctrl_merge(%struct.v4l2_event*, %struct.v4l2_event*) #2

declare i32 @mutex_lock_interruptible_nested(%struct.mutex*, i32) #2

; Function Attrs: nounwind uwtable
define internal %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %chain, i32 %v4l2_id, %struct.uvc_control_mapping** %mapping) #0 {
entry:
  %ctrl = alloca %struct.uvc_control*, align 8
  %0 = bitcast %struct.uvc_control** %ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control* null, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %and = and i32 %v4l2_id, -2147483648
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %and1 = and i32 %v4l2_id, 268435455
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain7.sink = phi %struct.list_head* [ %chain7, %for.inc ], [ %entities, %entry ]
  %next8 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain7.sink, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next8, align 8, !tbaa !45
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr10 = getelementptr inbounds i8, i8* %2, i64 -16
  %3 = bitcast i8* %add.ptr10 to %struct.uvc_entity*
  %chain3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  %entities4 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain3, %entities4
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  call void @__uvc_find_control(%struct.uvc_entity* %3, i32 %and1, %struct.uvc_control_mapping** %mapping, %struct.uvc_control** %ctrl, i32 %and)
  %4 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %tobool = icmp eq %struct.uvc_control* %4, null
  %tobool5 = icmp ne i32 %and, 0
  %or.cond = or i1 %tobool, %tobool5
  br i1 %or.cond, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %5 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %chain7 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %6 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %cmp11 = icmp ne %struct.uvc_control* %6, null
  %tobool13 = icmp ne i32 %and, 0
  %or.cond2 = or i1 %cmp11, %tobool13
  br i1 %or.cond2, label %if.end19, label %do.body

do.body:                                          ; preds = %for.end
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and15 = and i32 %7, 4
  %tobool16 = icmp ne i32 %and15, 0
  br i1 %tobool16, label %if.then17, label %if.end19

if.then17:                                        ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.6.189, i32 0, i32 0), i32 %and1)
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %do.body, %for.end
  %8 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  br label %cleanup

cleanup:                                          ; preds = %if.end19, %if.then
  %retval.0 = phi %struct.uvc_control* [ %5, %if.then ], [ %8, %if.end19 ]
  %9 = bitcast %struct.uvc_control** %ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %9) #8
  ret %struct.uvc_control* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @list_add_tail.186(%struct.list_head* %new, %struct.list_head* %head) #1 {
entry:
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 1
  %0 = load %struct.list_head*, %struct.list_head** %prev, align 8, !tbaa !74
  call void @__list_add(%struct.list_head* %new, %struct.list_head* %0, %struct.list_head* %head)
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_ctrl_get(%struct.uvc_video_chain* %chain, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, i32* %value) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %0 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %0, 2
  %cmp = icmp eq i32 %and, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %loaded = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %loaded, align 1
  %bf.lshr = lshr i8 %bf.load, 1
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end13, label %if.then1

if.then1:                                         ; preds = %if.end
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !91
  %dev2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %4 = load %struct.uvc_device*, %struct.uvc_device** %dev2, align 8, !tbaa !88
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %4, i32 0, i32 4
  %5 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv = trunc i32 %5 to i8
  %info3 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !442
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 0)
  %info4 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info4, i32 0, i32 4
  %7 = load i16, i16* %size, align 2, !tbaa !443
  %call5 = call i32 @uvc_query_ctrl(%struct.uvc_device* %1, i8 zeroext -127, i8 zeroext %3, i8 zeroext %conv, i8 zeroext %6, i8* %call, i16 zeroext %7)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.then1
  %loaded10 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load11 = load i8, i8* %loaded10, align 1
  %bf.clear12 = and i8 %bf.load11, -3
  %bf.set = or i8 %bf.clear12, 2
  store i8 %bf.set, i8* %loaded10, align 1
  br label %if.end13

if.end13:                                         ; preds = %if.end9, %if.end
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %8 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !444
  %call14 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 0)
  %call15 = call i32 %8(%struct.uvc_control_mapping* %mapping, i8 zeroext -127, i8* %call14)
  store i32 %call15, i32* %value, align 4, !tbaa !2
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %9 = load i32, i32* %v4l2_type, align 8, !tbaa !313
  %cmp16 = icmp eq i32 %9, 3
  br i1 %cmp16, label %if.then18, label %cleanup

if.then18:                                        ; preds = %if.end13
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %10 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.then18
  %menu.0 = phi %struct.uvc_menu_info* [ %10, %if.then18 ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %if.then18 ], [ %inc, %for.inc ]
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %11 = load i32, i32* %menu_count, align 8, !tbaa !317
  %cmp19 = icmp ult i32 %i.0, %11
  br i1 %cmp19, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %value21 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 0, i32 0
  %12 = load i32, i32* %value21, align 4, !tbaa !445
  %13 = load i32, i32* %value, align 4, !tbaa !2
  %cmp22 = icmp eq i32 %12, %13
  br i1 %cmp22, label %if.then24, label %for.inc

if.then24:                                        ; preds = %for.body
  store i32 %i.0, i32* %value, align 4, !tbaa !2
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 1
  br label %for.cond

cleanup:                                          ; preds = %if.then24, %for.cond, %if.end13, %if.then1, %entry
  %retval.0 = phi i32 [ -13, %entry ], [ %call5, %if.then1 ], [ 0, %if.then24 ], [ 0, %for.cond ], [ 0, %if.end13 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_fill_event(%struct.uvc_video_chain* %chain, %struct.v4l2_event* %ev, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes) #0 {
entry:
  %v4l2_ctrl = alloca %struct.v4l2_queryctrl, align 4
  %0 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 68, i8* %0) #8
  %call = call i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain* %chain, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, %struct.v4l2_queryctrl* %v4l2_ctrl)
  %reserved = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 6
  %arraydecay = getelementptr inbounds [8 x i32], [8 x i32]* %reserved, i32 0, i32 0
  %1 = bitcast i32* %arraydecay to i8*
  call void @llvm.memset.p0i8.i64(i8* %1, i8 0, i64 32, i32 4, i1 false)
  %type = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 0
  store i32 3, i32* %type, align 8, !tbaa !447
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  %2 = load i32, i32* %id, align 4, !tbaa !449
  %id1 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 5
  store i32 %2, i32* %id1, align 8, !tbaa !451
  %u = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl2 = bitcast %union.anon.82* %u to %struct.v4l2_event_ctrl*
  %3 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl2, i32 0, i32 2
  %value3 = bitcast %struct.pgprot* %3 to i32*
  store i32 %value, i32* %value3, align 8, !tbaa !61
  %u4 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl5 = bitcast %union.anon.82* %u4 to %struct.v4l2_event_ctrl*
  %changes6 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl5, i32 0, i32 0
  store i32 %changes, i32* %changes6, align 8, !tbaa !61
  %type7 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 1
  %4 = load i32, i32* %type7, align 4, !tbaa !452
  %u8 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl9 = bitcast %union.anon.82* %u8 to %struct.v4l2_event_ctrl*
  %type10 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl9, i32 0, i32 1
  store i32 %4, i32* %type10, align 4, !tbaa !61
  %flags = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %5 = load i32, i32* %flags, align 4, !tbaa !453
  %u11 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl12 = bitcast %union.anon.82* %u11 to %struct.v4l2_event_ctrl*
  %flags13 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl12, i32 0, i32 3
  store i32 %5, i32* %flags13, align 8, !tbaa !61
  %minimum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  %6 = load i32, i32* %minimum, align 4, !tbaa !454
  %u14 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl15 = bitcast %union.anon.82* %u14 to %struct.v4l2_event_ctrl*
  %minimum16 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl15, i32 0, i32 4
  store i32 %6, i32* %minimum16, align 4, !tbaa !61
  %maximum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  %7 = load i32, i32* %maximum, align 4, !tbaa !455
  %u17 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl18 = bitcast %union.anon.82* %u17 to %struct.v4l2_event_ctrl*
  %maximum19 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl18, i32 0, i32 5
  store i32 %7, i32* %maximum19, align 8, !tbaa !61
  %step = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  %8 = load i32, i32* %step, align 4, !tbaa !456
  %u20 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl21 = bitcast %union.anon.82* %u20 to %struct.v4l2_event_ctrl*
  %step22 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl21, i32 0, i32 6
  store i32 %8, i32* %step22, align 4, !tbaa !61
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  %9 = load i32, i32* %default_value, align 4, !tbaa !457
  %u23 = getelementptr inbounds %struct.v4l2_event, %struct.v4l2_event* %ev, i32 0, i32 1
  %ctrl24 = bitcast %union.anon.82* %u23 to %struct.v4l2_event_ctrl*
  %default_value25 = getelementptr inbounds %struct.v4l2_event_ctrl, %struct.v4l2_event_ctrl* %ctrl24, i32 0, i32 7
  store i32 %9, i32* %default_value25, align 8, !tbaa !61
  %10 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 68, i8* %10) #8
  ret void
}

declare void @v4l2_event_queue_fh(%struct.v4l2_fh*, %struct.v4l2_event*) #2

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain* %chain, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, %struct.v4l2_queryctrl* %v4l2_ctrl) #0 {
entry:
  %master_map = alloca %struct.uvc_control_mapping*, align 8
  %master_ctrl = alloca %struct.uvc_control*, align 8
  %val = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %master_map to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %master_map, align 8, !tbaa !45
  %1 = bitcast %struct.uvc_control** %master_ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  store %struct.uvc_control* null, %struct.uvc_control** %master_ctrl, align 8, !tbaa !45
  %2 = bitcast %struct.v4l2_queryctrl* %v4l2_ctrl to i8*
  call void @llvm.memset.p0i8.i64(i8* %2, i8 0, i64 68, i32 4, i1 false)
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %3 = load i32, i32* %id, align 8, !tbaa !304
  %id1 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  store i32 %3, i32* %id1, align 4, !tbaa !449
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %4 = load i32, i32* %v4l2_type, align 8, !tbaa !313
  %type = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 1
  store i32 %4, i32* %type, align 4, !tbaa !452
  %name = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 2
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name2 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay3 = getelementptr inbounds [32 x i8], [32 x i8]* %name2, i32 0, i32 0
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay3, i64 32)
  %flags = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  store i32 0, i32* %flags, align 4, !tbaa !453
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags4 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %5 = load i32, i32* %flags4, align 4, !tbaa !438
  %and = and i32 %5, 2
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %flags5 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %6 = load i32, i32* %flags5, align 4, !tbaa !453
  %or = or i32 %6, 64
  store i32 %or, i32* %flags5, align 4, !tbaa !453
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %info6 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags7 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info6, i32 0, i32 5
  %7 = load i32, i32* %flags7, align 4, !tbaa !438
  %and8 = and i32 %7, 1
  %tobool9 = icmp ne i32 %and8, 0
  br i1 %tobool9, label %if.end13, label %if.then10

if.then10:                                        ; preds = %if.end
  %flags11 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %8 = load i32, i32* %flags11, align 4, !tbaa !453
  %or12 = or i32 %8, 4
  store i32 %or12, i32* %flags11, align 4, !tbaa !453
  br label %if.end13

if.end13:                                         ; preds = %if.then10, %if.end
  %master_id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 12
  %9 = load i32, i32* %master_id, align 4, !tbaa !458
  %tobool14 = icmp ne i32 %9, 0
  br i1 %tobool14, label %if.then15, label %if.end17

if.then15:                                        ; preds = %if.end13
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %10 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  %master_id16 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 12
  %11 = load i32, i32* %master_id16, align 4, !tbaa !458
  call void @__uvc_find_control(%struct.uvc_entity* %10, i32 %11, %struct.uvc_control_mapping** %master_map, %struct.uvc_control** %master_ctrl, i32 0)
  br label %if.end17

if.end17:                                         ; preds = %if.then15, %if.end13
  %12 = load %struct.uvc_control*, %struct.uvc_control** %master_ctrl, align 8, !tbaa !45
  %tobool18 = icmp ne %struct.uvc_control* %12, null
  br i1 %tobool18, label %land.lhs.true, label %if.end33

land.lhs.true:                                    ; preds = %if.end17
  %13 = load %struct.uvc_control*, %struct.uvc_control** %master_ctrl, align 8, !tbaa !45
  %info19 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %13, i32 0, i32 1
  %flags20 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info19, i32 0, i32 5
  %14 = load i32, i32* %flags20, align 4, !tbaa !438
  %and21 = and i32 %14, 2
  %tobool22 = icmp ne i32 %and21, 0
  br i1 %tobool22, label %if.then23, label %if.end33

if.then23:                                        ; preds = %land.lhs.true
  %15 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %15) #8
  %16 = load %struct.uvc_control*, %struct.uvc_control** %master_ctrl, align 8, !tbaa !45
  %17 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %master_map, align 8, !tbaa !45
  %call24 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain* %chain, %struct.uvc_control* %16, %struct.uvc_control_mapping* %17, i32* %val)
  %cmp = icmp slt i32 %call24, 0
  br i1 %cmp, label %cleanup, label %if.end26

if.end26:                                         ; preds = %if.then23
  %18 = load i32, i32* %val, align 4, !tbaa !2
  %master_manual = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 13
  %19 = load i32, i32* %master_manual, align 8, !tbaa !459
  %cmp27 = icmp ne i32 %18, %19
  br i1 %cmp27, label %if.then28, label %cleanup

if.then28:                                        ; preds = %if.end26
  %flags29 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 7
  %20 = load i32, i32* %flags29, align 4, !tbaa !453
  %or30 = or i32 %20, 16
  store i32 %or30, i32* %flags29, align 4, !tbaa !453
  br label %cleanup

cleanup:                                          ; preds = %if.then28, %if.end26, %if.then23
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then23 ], [ 0, %if.then28 ], [ 0, %if.end26 ]
  %21 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %21) #8
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end33, label %cleanup99

if.end33:                                         ; preds = %cleanup, %land.lhs.true, %if.end17
  %retval.1 = phi i32 [ undef, %land.lhs.true ], [ undef, %if.end17 ], [ %call24, %cleanup ]
  %cached = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool34 = icmp ne i8 %bf.clear, 0
  br i1 %tobool34, label %if.end44, label %if.then35

if.then35:                                        ; preds = %if.end33
  %call37 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain* %chain, %struct.uvc_control* %ctrl)
  %cmp38 = icmp slt i32 %call37, 0
  %. = select i1 %cmp38, i32 1, i32 0
  %call37.retval.1 = select i1 %cmp38, i32 %call37, i32 %retval.1
  %SwitchLeaf3 = icmp eq i32 %., 0
  br i1 %SwitchLeaf3, label %if.end44, label %cleanup99

if.end44:                                         ; preds = %if.then35, %if.end33
  %info45 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags46 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info45, i32 0, i32 5
  %22 = load i32, i32* %flags46, align 4, !tbaa !438
  %and47 = and i32 %22, 32
  %tobool48 = icmp ne i32 %and47, 0
  br i1 %tobool48, label %if.then49, label %if.end52

if.then49:                                        ; preds = %if.end44
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %23 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !444
  %call50 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 5)
  %call51 = call i32 %23(%struct.uvc_control_mapping* %mapping, i8 zeroext -121, i8* %call50)
  %default_value = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  store i32 %call51, i32* %default_value, align 4, !tbaa !457
  br label %if.end52

if.end52:                                         ; preds = %if.then49, %if.end44
  %v4l2_type53 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %24 = load i32, i32* %v4l2_type53, align 8, !tbaa !313
  %Pivot10 = icmp slt i32 %24, 3
  br i1 %Pivot10, label %LeafBlock5, label %NodeBlock

NodeBlock:                                        ; preds = %if.end52
  %Pivot = icmp slt i32 %24, 4
  br i1 %Pivot, label %sw.bb, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock
  %SwitchLeaf8 = icmp eq i32 %24, 4
  br i1 %SwitchLeaf8, label %sw.bb65, label %sw.epilog

LeafBlock5:                                       ; preds = %if.end52
  %SwitchLeaf6 = icmp eq i32 %24, 2
  br i1 %SwitchLeaf6, label %sw.bb61, label %sw.epilog

sw.bb:                                            ; preds = %NodeBlock
  %minimum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum, align 4, !tbaa !454
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %25 = load i32, i32* %menu_count, align 8, !tbaa !317
  %sub = sub i32 %25, 1
  %maximum = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 %sub, i32* %maximum, align 4, !tbaa !455
  %step = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 1, i32* %step, align 4, !tbaa !456
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %26 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.bb
  %menu.0 = phi %struct.uvc_menu_info* [ %26, %sw.bb ], [ %incdec.ptr, %for.inc ]
  %i.0 = phi i32 [ 0, %sw.bb ], [ %inc, %for.inc ]
  %menu_count54 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %27 = load i32, i32* %menu_count54, align 8, !tbaa !317
  %cmp55 = icmp ult i32 %i.0, %27
  br i1 %cmp55, label %for.body, label %cleanup99

for.body:                                         ; preds = %for.cond
  %value = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 0, i32 0
  %28 = load i32, i32* %value, align 4, !tbaa !445
  %default_value56 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  %29 = load i32, i32* %default_value56, align 4, !tbaa !457
  %cmp57 = icmp eq i32 %28, %29
  br i1 %cmp57, label %if.then58, label %for.inc

if.then58:                                        ; preds = %for.body
  %default_value59 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 6
  store i32 %i.0, i32* %default_value59, align 4, !tbaa !457
  br label %cleanup99

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  %incdec.ptr = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %menu.0, i32 1
  br label %for.cond

sw.bb61:                                          ; preds = %LeafBlock5
  %minimum62 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum62, align 4, !tbaa !454
  %maximum63 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 1, i32* %maximum63, align 4, !tbaa !455
  %step64 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 1, i32* %step64, align 4, !tbaa !456
  br label %cleanup99

sw.bb65:                                          ; preds = %LeafBlock7
  %minimum66 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 0, i32* %minimum66, align 4, !tbaa !454
  %maximum67 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 0, i32* %maximum67, align 4, !tbaa !455
  %step68 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 0, i32* %step68, align 4, !tbaa !456
  br label %cleanup99

sw.epilog:                                        ; preds = %LeafBlock5, %LeafBlock7
  %info69 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags70 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info69, i32 0, i32 5
  %30 = load i32, i32* %flags70, align 4, !tbaa !438
  %and71 = and i32 %30, 4
  %tobool72 = icmp ne i32 %and71, 0
  br i1 %tobool72, label %if.then73, label %if.end78

if.then73:                                        ; preds = %sw.epilog
  %get74 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %31 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get74, align 8, !tbaa !444
  %call75 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 2)
  %call76 = call i32 %31(%struct.uvc_control_mapping* %mapping, i8 zeroext -126, i8* %call75)
  %minimum77 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 3
  store i32 %call76, i32* %minimum77, align 4, !tbaa !454
  br label %if.end78

if.end78:                                         ; preds = %if.then73, %sw.epilog
  %info79 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags80 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info79, i32 0, i32 5
  %32 = load i32, i32* %flags80, align 4, !tbaa !438
  %and81 = and i32 %32, 8
  %tobool82 = icmp ne i32 %and81, 0
  br i1 %tobool82, label %if.then83, label %if.end88

if.then83:                                        ; preds = %if.end78
  %get84 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %33 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get84, align 8, !tbaa !444
  %call85 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 3)
  %call86 = call i32 %33(%struct.uvc_control_mapping* %mapping, i8 zeroext -125, i8* %call85)
  %maximum87 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 4
  store i32 %call86, i32* %maximum87, align 4, !tbaa !455
  br label %if.end88

if.end88:                                         ; preds = %if.then83, %if.end78
  %info89 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags90 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info89, i32 0, i32 5
  %34 = load i32, i32* %flags90, align 4, !tbaa !438
  %and91 = and i32 %34, 16
  %tobool92 = icmp ne i32 %and91, 0
  br i1 %tobool92, label %if.then93, label %cleanup99

if.then93:                                        ; preds = %if.end88
  %get94 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 15
  %35 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get94, align 8, !tbaa !444
  %call95 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 4)
  %call96 = call i32 %35(%struct.uvc_control_mapping* %mapping, i8 zeroext -124, i8* %call95)
  %step97 = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 5
  store i32 %call96, i32* %step97, align 4, !tbaa !456
  br label %cleanup99

cleanup99:                                        ; preds = %if.then93, %if.end88, %sw.bb65, %sw.bb61, %if.then58, %for.cond, %if.then35, %cleanup
  %retval.3 = phi i32 [ 0, %sw.bb61 ], [ 0, %sw.bb65 ], [ 0, %for.cond ], [ 0, %if.then58 ], [ 0, %if.then93 ], [ 0, %if.end88 ], [ %call24, %cleanup ], [ %call37.retval.1, %if.then35 ]
  %36 = bitcast %struct.uvc_control** %master_ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %36) #8
  %37 = bitcast %struct.uvc_control_mapping** %master_map to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %37) #8
  ret i32 %retval.3
}

; Function Attrs: nounwind uwtable
define internal void @__uvc_find_control(%struct.uvc_entity* %entity, i32 %v4l2_id, %struct.uvc_control_mapping** %mapping, %struct.uvc_control** %control, i32 %next) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity* %entity, null
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc30, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc30 ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 14
  %0 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp1 = icmp ult i32 %i.0, %0
  br i1 %cmp1, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 15
  %1 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %1, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end3, label %for.inc30

if.end3:                                          ; preds = %for.body
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  br label %for.cond5

for.cond5:                                        ; preds = %for.inc, %if.end3
  %list26.sink = phi %struct.list_head* [ %list26, %for.inc ], [ %mappings, %if.end3 ]
  %next27 = getelementptr inbounds %struct.list_head, %struct.list_head* %list26.sink, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next27, align 8, !tbaa !45
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr29 = getelementptr inbounds i8, i8* %3, i64 0
  %4 = bitcast i8* %add.ptr29 to %struct.uvc_control_mapping*
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 0
  %info6 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %mappings7 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info6, i32 0, i32 0
  %cmp8 = icmp ne %struct.list_head* %list, %mappings7
  br i1 %cmp8, label %for.body9, label %for.inc30

for.body9:                                        ; preds = %for.cond5
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %5 = load i32, i32* %id, align 8, !tbaa !304
  %cmp10 = icmp ne i32 %5, %v4l2_id
  %tobool11 = icmp ne i32 %next, 0
  %or.cond = or i1 %cmp10, %tobool11
  br i1 %or.cond, label %if.end13, label %if.then12

if.then12:                                        ; preds = %for.body9
  store %struct.uvc_control* %arrayidx, %struct.uvc_control** %control, align 8, !tbaa !45
  store %struct.uvc_control_mapping* %4, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  br label %cleanup.cont

if.end13:                                         ; preds = %for.body9
  %6 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %cmp14 = icmp eq %struct.uvc_control_mapping* %6, null
  br i1 %cmp14, label %land.lhs.true18, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end13
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %id15 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 2
  %8 = load i32, i32* %id15, align 8, !tbaa !304
  %id16 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %9 = load i32, i32* %id16, align 8, !tbaa !304
  %cmp17 = icmp ugt i32 %8, %9
  br i1 %cmp17, label %land.lhs.true18, label %for.inc

land.lhs.true18:                                  ; preds = %lor.lhs.false, %if.end13
  %id19 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 2
  %10 = load i32, i32* %id19, align 8, !tbaa !304
  %cmp20 = icmp ugt i32 %10, %v4l2_id
  %tobool22 = icmp ne i32 %next, 0
  %or.cond2 = and i1 %cmp20, %tobool22
  br i1 %or.cond2, label %if.then23, label %for.inc

if.then23:                                        ; preds = %land.lhs.true18
  store %struct.uvc_control* %arrayidx, %struct.uvc_control** %control, align 8, !tbaa !45
  store %struct.uvc_control_mapping* %4, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  br label %for.inc

for.inc:                                          ; preds = %if.then23, %land.lhs.true18, %lor.lhs.false
  %list26 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %4, i32 0, i32 0
  br label %for.cond5

for.inc30:                                        ; preds = %for.cond5, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %if.then12, %for.cond, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then12 ], [ 1, %entry ], [ 0, %for.cond ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain* %chain, %struct.uvc_control* %ctrl) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %0 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %0, 32
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %1 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !91
  %dev1 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %4 = load %struct.uvc_device*, %struct.uvc_device** %dev1, align 8, !tbaa !88
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %4, i32 0, i32 4
  %5 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv = trunc i32 %5 to i8
  %info2 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info2, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !442
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 5)
  %info3 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 4
  %7 = load i16, i16* %size, align 2, !tbaa !443
  %call4 = call i32 @uvc_query_ctrl(%struct.uvc_device* %1, i8 zeroext -121, i8 zeroext %3, i8 zeroext %conv, i8 zeroext %6, i8* %call, i16 zeroext %7)
  %cmp = icmp slt i32 %call4, 0
  br i1 %cmp, label %cleanup, label %if.end7

if.end7:                                          ; preds = %if.then, %entry
  %info8 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags9 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info8, i32 0, i32 5
  %8 = load i32, i32* %flags9, align 4, !tbaa !438
  %and10 = and i32 %8, 4
  %tobool11 = icmp ne i32 %and10, 0
  br i1 %tobool11, label %if.then12, label %if.end29

if.then12:                                        ; preds = %if.end7
  %dev13 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %9 = load %struct.uvc_device*, %struct.uvc_device** %dev13, align 8, !tbaa !88
  %entity14 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %10 = load %struct.uvc_entity*, %struct.uvc_entity** %entity14, align 8, !tbaa !441
  %id15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %10, i32 0, i32 3
  %11 = load i8, i8* %id15, align 4, !tbaa !91
  %dev16 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %12 = load %struct.uvc_device*, %struct.uvc_device** %dev16, align 8, !tbaa !88
  %intfnum17 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %12, i32 0, i32 4
  %13 = load i32, i32* %intfnum17, align 4, !tbaa !252
  %conv18 = trunc i32 %13 to i8
  %info19 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector20 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info19, i32 0, i32 3
  %14 = load i8, i8* %selector20, align 1, !tbaa !442
  %call21 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 2)
  %info22 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size23 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info22, i32 0, i32 4
  %15 = load i16, i16* %size23, align 2, !tbaa !443
  %call24 = call i32 @uvc_query_ctrl(%struct.uvc_device* %9, i8 zeroext -126, i8 zeroext %11, i8 zeroext %conv18, i8 zeroext %14, i8* %call21, i16 zeroext %15)
  %cmp25 = icmp slt i32 %call24, 0
  br i1 %cmp25, label %cleanup, label %if.end29

if.end29:                                         ; preds = %if.then12, %if.end7
  %info30 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags31 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info30, i32 0, i32 5
  %16 = load i32, i32* %flags31, align 4, !tbaa !438
  %and32 = and i32 %16, 8
  %tobool33 = icmp ne i32 %and32, 0
  br i1 %tobool33, label %if.then34, label %if.end51

if.then34:                                        ; preds = %if.end29
  %dev35 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %17 = load %struct.uvc_device*, %struct.uvc_device** %dev35, align 8, !tbaa !88
  %entity36 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %18 = load %struct.uvc_entity*, %struct.uvc_entity** %entity36, align 8, !tbaa !441
  %id37 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %18, i32 0, i32 3
  %19 = load i8, i8* %id37, align 4, !tbaa !91
  %dev38 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %20 = load %struct.uvc_device*, %struct.uvc_device** %dev38, align 8, !tbaa !88
  %intfnum39 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %20, i32 0, i32 4
  %21 = load i32, i32* %intfnum39, align 4, !tbaa !252
  %conv40 = trunc i32 %21 to i8
  %info41 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector42 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info41, i32 0, i32 3
  %22 = load i8, i8* %selector42, align 1, !tbaa !442
  %call43 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 3)
  %info44 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size45 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info44, i32 0, i32 4
  %23 = load i16, i16* %size45, align 2, !tbaa !443
  %call46 = call i32 @uvc_query_ctrl(%struct.uvc_device* %17, i8 zeroext -125, i8 zeroext %19, i8 zeroext %conv40, i8 zeroext %22, i8* %call43, i16 zeroext %23)
  %cmp47 = icmp slt i32 %call46, 0
  br i1 %cmp47, label %cleanup, label %if.end51

if.end51:                                         ; preds = %if.then34, %if.end29
  %info52 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %flags53 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info52, i32 0, i32 5
  %24 = load i32, i32* %flags53, align 4, !tbaa !438
  %and54 = and i32 %24, 16
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %if.end90

if.then56:                                        ; preds = %if.end51
  %dev57 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %25 = load %struct.uvc_device*, %struct.uvc_device** %dev57, align 8, !tbaa !88
  %entity58 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %26 = load %struct.uvc_entity*, %struct.uvc_entity** %entity58, align 8, !tbaa !441
  %id59 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %26, i32 0, i32 3
  %27 = load i8, i8* %id59, align 4, !tbaa !91
  %dev60 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %28 = load %struct.uvc_device*, %struct.uvc_device** %dev60, align 8, !tbaa !88
  %intfnum61 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %28, i32 0, i32 4
  %29 = load i32, i32* %intfnum61, align 4, !tbaa !252
  %conv62 = trunc i32 %29 to i8
  %info63 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector64 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info63, i32 0, i32 3
  %30 = load i8, i8* %selector64, align 1, !tbaa !442
  %call65 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 4)
  %info66 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size67 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info66, i32 0, i32 4
  %31 = load i16, i16* %size67, align 2, !tbaa !443
  %call68 = call i32 @uvc_query_ctrl(%struct.uvc_device* %25, i8 zeroext -124, i8 zeroext %27, i8 zeroext %conv62, i8 zeroext %30, i8* %call65, i16 zeroext %31)
  %cmp69 = icmp slt i32 %call68, 0
  br i1 %cmp69, label %if.then71, label %if.end90

if.then71:                                        ; preds = %if.then56
  %entity72 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %32 = load %struct.uvc_entity*, %struct.uvc_entity** %entity72, align 8, !tbaa !441
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %32, i32 0, i32 4
  %33 = load i16, i16* %type, align 2, !tbaa !85
  %conv73 = zext i16 %33 to i32
  %and74 = and i32 %conv73, 32767
  %cmp75 = icmp ne i32 %and74, 6
  br i1 %cmp75, label %cleanup, label %do.body

do.body:                                          ; preds = %if.then71
  %dev79 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %34 = load %struct.uvc_device*, %struct.uvc_device** %dev79, align 8, !tbaa !88
  %warnings = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %34, i32 0, i32 2
  %call80 = call i32 @test_and_set_bit.187(i32 2, i64* %warnings)
  %tobool81 = icmp ne i32 %call80, 0
  br i1 %tobool81, label %do.end, label %if.then82

if.then82:                                        ; preds = %do.body
  %call83 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([88 x i8], [88 x i8]* @.str.7.188, i32 0, i32 0))
  br label %do.end

do.end:                                           ; preds = %if.then82, %do.body
  %call85 = call i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 4)
  %info86 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size87 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info86, i32 0, i32 4
  %35 = load i16, i16* %size87, align 2, !tbaa !443
  %conv88 = zext i16 %35 to i64
  call void @llvm.memset.p0i8.i64(i8* %call85, i8 0, i64 %conv88, i32 1, i1 false)
  br label %if.end90

if.end90:                                         ; preds = %do.end, %if.then56, %if.end51
  %cached = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.clear = and i8 %bf.load, -9
  %bf.set = or i8 %bf.clear, 8
  store i8 %bf.set, i8* %cached, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end90, %if.then71, %if.then34, %if.then12, %if.then
  %retval.0 = phi i32 [ 0, %if.end90 ], [ %call4, %if.then ], [ %call24, %if.then12 ], [ %call46, %if.then34 ], [ %call68, %if.then71 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @uvc_ctrl_data(%struct.uvc_control* %ctrl, i32 %id) #1 {
entry:
  %uvc_data = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 4
  %0 = load i8*, i8** %uvc_data, align 8, !tbaa !462
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %1 = load i16, i16* %size, align 2, !tbaa !443
  %conv = zext i16 %1 to i32
  %mul = mul nsw i32 %id, %conv
  %idx.ext = sext i32 %mul to i64
  %add.ptr = getelementptr inbounds i8, i8* %0, i64 %idx.ext
  ret i8* %add.ptr
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @test_and_set_bit.187(i32 %nr, i64* %addr) #1 {
entry:
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $2,$1\0A\09sbb $0,$0", "=r,=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i32 %nr, i64* %addr) #8, !srcloc !463
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_query_v4l2_ctrl(%struct.uvc_video_chain* %chain, %struct.v4l2_queryctrl* %v4l2_ctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %id = getelementptr inbounds %struct.v4l2_queryctrl, %struct.v4l2_queryctrl* %v4l2_ctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 4, !tbaa !449
  %call1 = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp2 = icmp eq %struct.uvc_control* %call1, null
  br i1 %cmp2, label %done, label %if.end4

if.end4:                                          ; preds = %if.end
  %2 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call5 = call i32 @__uvc_query_v4l2_ctrl(%struct.uvc_video_chain* %chain, %struct.uvc_control* %call1, %struct.uvc_control_mapping* %2, %struct.v4l2_queryctrl* %v4l2_ctrl)
  br label %done

done:                                             ; preds = %if.end4, %if.end
  %ret.0 = phi i32 [ %call5, %if.end4 ], [ -22, %if.end ]
  %ctrl_mutex6 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex6)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -512, %entry ]
  %3 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %3) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_query_v4l2_menu(%struct.uvc_video_chain* %chain, %struct.v4l2_querymenu* %query_menu) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %index1 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %1 = load i32, i32* %index1, align 1, !tbaa !464
  %id2 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  %2 = load i32, i32* %id2, align 1, !tbaa !466
  %3 = bitcast %struct.v4l2_querymenu* %query_menu to i8*
  call void @llvm.memset.p0i8.i64(i8* %3, i8 0, i64 44, i32 1, i1 false)
  %id3 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  store i32 %2, i32* %id3, align 1, !tbaa !466
  %index4 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  store i32 %1, i32* %index4, align 1, !tbaa !464
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup37, label %if.end

if.end:                                           ; preds = %entry
  %id5 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 0
  %4 = load i32, i32* %id5, align 1, !tbaa !466
  %call6 = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %chain, i32 %4, %struct.uvc_control_mapping** %mapping)
  %cmp7 = icmp eq %struct.uvc_control* %call6, null
  br i1 %cmp7, label %done, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 8
  %6 = load i32, i32* %v4l2_type, align 8, !tbaa !313
  %cmp8 = icmp ne i32 %6, 3
  br i1 %cmp8, label %done, label %if.end10

if.end10:                                         ; preds = %lor.lhs.false
  %index11 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %7 = load i32, i32* %index11, align 1, !tbaa !464
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %8, i32 0, i32 11
  %9 = load i32, i32* %menu_count, align 8, !tbaa !317
  %cmp12 = icmp uge i32 %7, %9
  br i1 %cmp12, label %done, label %if.end14

if.end14:                                         ; preds = %if.end10
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %menu_info15 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %10, i32 0, i32 10
  %11 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info15, align 8, !tbaa !316
  %index16 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 1
  %12 = load i32, i32* %index16, align 1, !tbaa !464
  %idxprom = zext i32 %12 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %11, i64 %idxprom
  %13 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %13, i32 0, i32 9
  %14 = load i32, i32* %data_type, align 4, !tbaa !315
  %cmp17 = icmp eq i32 %14, 5
  br i1 %cmp17, label %land.lhs.true, label %if.end32

land.lhs.true:                                    ; preds = %if.end14
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call6, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %15 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %15, 16
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then18, label %if.end32

if.then18:                                        ; preds = %land.lhs.true
  %cached = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call6, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool19 = icmp ne i8 %bf.clear, 0
  br i1 %tobool19, label %if.end25, label %if.then20

if.then20:                                        ; preds = %if.then18
  %call21 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain* %chain, %struct.uvc_control* %call6)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %NodeBlock, label %if.end25

if.end25:                                         ; preds = %if.then20, %if.then18
  %ret.0 = phi i32 [ %call, %if.then18 ], [ %call21, %if.then20 ]
  %16 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %16, i32 0, i32 15
  %17 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !444
  %18 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call26 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call6, i32 4)
  %call27 = call i32 %17(%struct.uvc_control_mapping* %18, i8 zeroext -124, i8* %call26)
  %value = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 0
  %19 = load i32, i32* %value, align 4, !tbaa !445
  %and28 = and i32 %call27, %19
  %tobool29 = icmp ne i32 %and28, 0
  %ret.0. = select i1 %tobool29, i32 %ret.0, i32 -22
  %. = select i1 %tobool29, i32 0, i32 2
  br label %NodeBlock

NodeBlock:                                        ; preds = %if.end25, %if.then20
  %ret.1 = phi i32 [ %call21, %if.then20 ], [ %ret.0., %if.end25 ]
  %cleanup.dest.slot.0 = phi i32 [ 2, %if.then20 ], [ %., %if.end25 ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 2
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest.slot.0, 2
  br i1 %SwitchLeaf2, label %done, label %cleanup37

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %if.end32, label %cleanup37

if.end32:                                         ; preds = %LeafBlock, %land.lhs.true, %if.end14
  %ret.2 = phi i32 [ %call, %land.lhs.true ], [ %call, %if.end14 ], [ %ret.1, %LeafBlock ]
  %20 = getelementptr inbounds %struct.v4l2_querymenu, %struct.v4l2_querymenu* %query_menu, i32 0, i32 2
  %name = bitcast %union.anon.53* %20 to [32 x i8]*
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name33 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 1
  %arraydecay34 = getelementptr inbounds [32 x i8], [32 x i8]* %name33, i32 0, i32 0
  %call35 = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay34, i64 32)
  br label %done

done:                                             ; preds = %if.end32, %LeafBlock1, %if.end10, %lor.lhs.false, %if.end
  %ret.3 = phi i32 [ %ret.2, %if.end32 ], [ %ret.1, %LeafBlock1 ], [ -22, %lor.lhs.false ], [ -22, %if.end ], [ -22, %if.end10 ]
  %ctrl_mutex36 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex36)
  br label %cleanup37

cleanup37:                                        ; preds = %done, %LeafBlock, %LeafBlock1, %entry
  %retval.0 = phi i32 [ %ret.3, %done ], [ -512, %entry ], [ undef, %LeafBlock1 ], [ undef, %LeafBlock ]
  %21 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %21) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_begin(%struct.uvc_video_chain* %chain) #0 {
entry:
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  %call = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool = icmp ne i32 %call, 0
  %0 = zext i1 %tobool to i64
  %cond = select i1 %tobool, i32 -512, i32 0
  ret i32 %cond
}

; Function Attrs: nounwind uwtable
define i32 @__uvc_ctrl_commit(%struct.uvc_fh* %handle, i32 %rollback, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %chain1 = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %0 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain1, align 8, !tbaa !207
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain6.sink = phi %struct.list_head* [ %chain6, %for.inc ], [ %entities, %entry ]
  %ret.0 = phi i32 [ 0, %entry ], [ %call, %for.inc ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain6.sink, i32 0, i32 0
  %1 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !45
  %2 = bitcast %struct.list_head* %1 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %2, i64 -16
  %3 = bitcast i8* %add.ptr9 to %struct.uvc_entity*
  %chain2 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  %entities3 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain2, %entities3
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 0
  %4 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %call = call i32 @uvc_ctrl_commit_entity(%struct.uvc_device* %4, %struct.uvc_entity* %3, i32 %rollback)
  %cmp4 = icmp slt i32 %call, 0
  br i1 %cmp4, label %done, label %for.inc

for.inc:                                          ; preds = %for.body
  %chain6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %3, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %tobool = icmp ne i32 %rollback, 0
  br i1 %tobool, label %done, label %if.then10

if.then10:                                        ; preds = %for.end
  call void @uvc_ctrl_send_events(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  br label %done

done:                                             ; preds = %if.then10, %for.end, %for.body
  %ret.1 = phi i32 [ %call, %for.body ], [ %ret.0, %if.then10 ], [ %ret.0, %for.end ]
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %0, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex)
  ret i32 %ret.1
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_commit_entity(%struct.uvc_device* %dev, %struct.uvc_entity* %entity, i32 %rollback) #0 {
entry:
  %cmp = icmp eq %struct.uvc_entity* %entity, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 14
  %0 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp1 = icmp ult i32 %i.0, %0
  br i1 %cmp1, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 15
  %1 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %1, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end3, label %for.inc

if.end3:                                          ; preds = %for.body
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %2 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %2, 128
  %tobool4 = icmp ne i32 %and, 0
  br i1 %tobool4, label %if.then9, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end3
  %info5 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %flags6 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info5, i32 0, i32 5
  %3 = load i32, i32* %flags6, align 4, !tbaa !438
  %and7 = and i32 %3, 2
  %tobool8 = icmp ne i32 %and7, 0
  br i1 %tobool8, label %if.end12, label %if.then9

if.then9:                                         ; preds = %lor.lhs.false, %if.end3
  %loaded = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load10 = load i8, i8* %loaded, align 1
  %bf.clear11 = and i8 %bf.load10, -3
  store i8 %bf.clear11, i8* %loaded, align 1
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %lor.lhs.false
  %dirty = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load13 = load i8, i8* %dirty, align 1
  %bf.clear14 = and i8 %bf.load13, 1
  %tobool15 = icmp ne i8 %bf.clear14, 0
  br i1 %tobool15, label %if.end17, label %for.inc

if.end17:                                         ; preds = %if.end12
  %tobool18 = icmp ne i32 %rollback, 0
  br i1 %tobool18, label %if.end24, label %if.then19

if.then19:                                        ; preds = %if.end17
  %entity20 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 0
  %4 = load %struct.uvc_entity*, %struct.uvc_entity** %entity20, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !91
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 4
  %6 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv = trunc i32 %6 to i8
  %info21 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info21, i32 0, i32 3
  %7 = load i8, i8* %selector, align 1, !tbaa !442
  %call = call i8* @uvc_ctrl_data(%struct.uvc_control* %arrayidx, i32 0)
  %info22 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info22, i32 0, i32 4
  %8 = load i16, i16* %size, align 2, !tbaa !443
  %call23 = call i32 @uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext 1, i8 zeroext %5, i8 zeroext %conv, i8 zeroext %7, i8* %call, i16 zeroext %8)
  br label %if.end24

if.end24:                                         ; preds = %if.then19, %if.end17
  %ret.0 = phi i32 [ %call23, %if.then19 ], [ 0, %if.end17 ]
  %tobool25 = icmp ne i32 %rollback, 0
  %cmp27 = icmp slt i32 %ret.0, 0
  %or.cond = or i1 %tobool25, %cmp27
  br i1 %or.cond, label %if.then29, label %if.end35

if.then29:                                        ; preds = %if.end24
  %info30 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %size31 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info30, i32 0, i32 4
  %9 = load i16, i16* %size31, align 2, !tbaa !443
  %conv32 = zext i16 %9 to i64
  %call33 = call i8* @uvc_ctrl_data(%struct.uvc_control* %arrayidx, i32 0)
  %call34 = call i8* @uvc_ctrl_data(%struct.uvc_control* %arrayidx, i32 1)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call33, i8* %call34, i64 %conv32, i32 1, i1 false)
  br label %if.end35

if.end35:                                         ; preds = %if.then29, %if.end24
  %dirty36 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load37 = load i8, i8* %dirty36, align 1
  %bf.clear38 = and i8 %bf.load37, -2
  store i8 %bf.clear38, i8* %dirty36, align 1
  %cmp39 = icmp slt i32 %ret.0, 0
  br i1 %cmp39, label %cleanup, label %for.inc

for.inc:                                          ; preds = %if.end35, %if.end12, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup:                                          ; preds = %if.end35, %for.cond, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %ret.0, %if.end35 ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_events(%struct.uvc_fh* %handle, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  br label %for.cond

for.cond:                                         ; preds = %if.end27, %entry
  %changes.0 = phi i32 [ 1, %entry ], [ %changes.2, %if.end27 ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc31, %if.end27 ]
  %cmp = icmp ult i32 %i.0, %xctrls_count
  br i1 %cmp, label %for.body, label %for.end32

for.body:                                         ; preds = %for.cond
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %1 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !207
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx, i32 0, i32 0
  %2 = load i32, i32* %id, align 1, !tbaa !242
  %call = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %1, i32 %2, %struct.uvc_control_mapping** %mapping)
  br label %for.cond1

for.cond1:                                        ; preds = %if.end, %for.body
  %j.0 = phi i32 [ 0, %for.body ], [ %inc, %if.end ]
  %conv = zext i32 %j.0 to i64
  %cmp2 = icmp ult i64 %conv, 2
  br i1 %cmp2, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond1
  %3 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %slave_ids = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %3, i32 0, i32 14
  %idxprom5 = zext i32 %j.0 to i64
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %slave_ids, i64 0, i64 %idxprom5
  %4 = load i32, i32* %arrayidx6, align 4, !tbaa !2
  %tobool = icmp ne i32 %4, 0
  br i1 %tobool, label %if.end, label %for.end

if.end:                                           ; preds = %for.body4
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %slave_ids7 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 14
  %idxprom8 = zext i32 %j.0 to i64
  %arrayidx9 = getelementptr inbounds [2 x i32], [2 x i32]* %slave_ids7, i64 0, i64 %idxprom8
  %6 = load i32, i32* %arrayidx9, align 4, !tbaa !2
  call void @uvc_ctrl_send_slave_event(%struct.uvc_fh* %handle, %struct.uvc_control* %call, i32 %6, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count)
  %inc = add i32 %j.0, 1
  br label %for.cond1

for.end:                                          ; preds = %for.body4, %for.cond1
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %master_id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %7, i32 0, i32 12
  %8 = load i32, i32* %master_id, align 4, !tbaa !458
  %tobool10 = icmp ne i32 %8, 0
  br i1 %tobool10, label %if.then11, label %if.end27

if.then11:                                        ; preds = %for.end
  br label %for.cond12

for.cond12:                                       ; preds = %for.inc24, %if.then11
  %j.1 = phi i32 [ 0, %if.then11 ], [ %inc25, %for.inc24 ]
  %cmp13 = icmp ult i32 %j.1, %xctrls_count
  br i1 %cmp13, label %for.body15, label %if.end27

for.body15:                                       ; preds = %for.cond12
  %idxprom16 = zext i32 %j.1 to i64
  %arrayidx17 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom16
  %id18 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx17, i32 0, i32 0
  %9 = load i32, i32* %id18, align 1, !tbaa !242
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %master_id19 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %10, i32 0, i32 12
  %11 = load i32, i32* %master_id19, align 4, !tbaa !458
  %cmp20 = icmp eq i32 %9, %11
  br i1 %cmp20, label %if.then22, label %for.inc24

if.then22:                                        ; preds = %for.body15
  %or = or i32 %changes.0, 2
  br label %if.end27

for.inc24:                                        ; preds = %for.body15
  %inc25 = add i32 %j.1, 1
  br label %for.cond12

if.end27:                                         ; preds = %if.then22, %for.cond12, %for.end
  %changes.2 = phi i32 [ %changes.0, %for.end ], [ %or, %if.then22 ], [ %changes.0, %for.cond12 ]
  %12 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %idxprom28 = zext i32 %i.0 to i64
  %arrayidx29 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom28
  %13 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx29, i32 0, i32 3
  %value = bitcast %struct.pgprot* %13 to i32*
  %14 = load i32, i32* %value, align 1, !tbaa !61
  call void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control* %call, %struct.uvc_control_mapping* %12, i32 %14, i32 %changes.2)
  %inc31 = add i32 %i.0, 1
  br label %for.cond

for.end32:                                        ; preds = %for.cond
  %15 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %15) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_slave_event(%struct.uvc_fh* %handle, %struct.uvc_control* %master, i32 %slave_id, %struct.v4l2_ext_control* %xctrls, i32 %xctrls_count) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %ctrl = alloca %struct.uvc_control*, align 8
  %val = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  store %struct.uvc_control_mapping* null, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %1 = bitcast %struct.uvc_control** %ctrl to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %1) #8
  store %struct.uvc_control* null, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %2 = bitcast i32* %val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 0, i32* %val, align 4, !tbaa !2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, %xctrls_count
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrls, i64 %idxprom
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %arrayidx, i32 0, i32 0
  %3 = load i32, i32* %id, align 1, !tbaa !242
  %cmp1 = icmp eq i32 %3, %slave_id
  br i1 %cmp1, label %cleanup, label %for.inc

for.inc:                                          ; preds = %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %master, i32 0, i32 0
  %4 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  call void @__uvc_find_control(%struct.uvc_entity* %4, i32 %slave_id, %struct.uvc_control_mapping** %mapping, %struct.uvc_control** %ctrl, i32 0)
  %5 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %cmp2 = icmp eq %struct.uvc_control* %5, null
  br i1 %cmp2, label %cleanup, label %if.end4

if.end4:                                          ; preds = %for.end
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %6 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !207
  %7 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain* %6, %struct.uvc_control* %7, %struct.uvc_control_mapping* %8, i32* %val)
  %cmp5 = icmp eq i32 %call, 0
  %or = or i32 2, 1
  %or. = select i1 %cmp5, i32 %or, i32 2
  %9 = load %struct.uvc_control*, %struct.uvc_control** %ctrl, align 8, !tbaa !45
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %11 = load i32, i32* %val, align 4, !tbaa !2
  call void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control* %9, %struct.uvc_control_mapping* %10, i32 %11, i32 %or.)
  br label %cleanup

cleanup:                                          ; preds = %if.end4, %for.end, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end4 ], [ 1, %for.body ], [ 1, %for.end ]
  %12 = bitcast i32* %val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %12) #8
  %13 = bitcast %struct.uvc_control** %ctrl to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %13) #8
  %14 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %14) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_send_event(%struct.uvc_fh* %handle, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes) #0 {
entry:
  %ev = alloca %struct.v4l2_event, align 8
  %0 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* %0) #8
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  %call = call i32 @list_empty.198(%struct.list_head* %ev_subs)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %chain = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 1
  %1 = load %struct.uvc_video_chain*, %struct.uvc_video_chain** %chain, align 8, !tbaa !207
  call void @uvc_ctrl_fill_event(%struct.uvc_video_chain* %1, %struct.v4l2_event* %ev, %struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping, i32 %value, i32 %changes)
  %ev_subs1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %node14.sink = phi %struct.list_head* [ %node14, %for.inc ], [ %ev_subs1, %if.end ]
  %next15 = getelementptr inbounds %struct.list_head, %struct.list_head* %node14.sink, i32 0, i32 0
  %2 = load %struct.list_head*, %struct.list_head** %next15, align 8, !tbaa !45
  %3 = bitcast %struct.list_head* %2 to i8*
  %add.ptr17 = getelementptr inbounds i8, i8* %3, i64 -40
  %4 = bitcast i8* %add.ptr17 to %struct.v4l2_subscribed_event.1203*
  %node = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 5
  %ev_subs2 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 1
  %cmp = icmp ne %struct.list_head* %node, %ev_subs2
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  %fh = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 4
  %5 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh, align 8, !tbaa !45
  %tobool3 = icmp ne %struct.v4l2_fh* %5, null
  br i1 %tobool3, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %fh4 = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 4
  %6 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh4, align 8, !tbaa !45
  %vfh = getelementptr inbounds %struct.uvc_fh, %struct.uvc_fh* %handle, i32 0, i32 0
  %cmp5 = icmp ne %struct.v4l2_fh* %6, %vfh
  br i1 %cmp5, label %if.then10, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true
  %flags = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 3
  %7 = load i32, i32* %flags, align 8, !tbaa !2
  %and = and i32 %7, 2
  %tobool6 = icmp ne i32 %and, 0
  %and8 = and i32 %changes, 2
  %tobool9 = icmp ne i32 %and8, 0
  %or.cond = or i1 %tobool6, %tobool9
  br i1 %or.cond, label %if.then10, label %for.inc

if.then10:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %fh11 = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 4
  %8 = load %struct.v4l2_fh*, %struct.v4l2_fh** %fh11, align 8, !tbaa !45
  call void @v4l2_event_queue_fh(%struct.v4l2_fh* %8, %struct.v4l2_event* %ev)
  br label %for.inc

for.inc:                                          ; preds = %if.then10, %lor.lhs.false, %for.body
  %node14 = getelementptr inbounds %struct.v4l2_subscribed_event.1203, %struct.v4l2_subscribed_event.1203* %4, i32 0, i32 5
  br label %for.cond

cleanup:                                          ; preds = %for.cond, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 0, %for.cond ]
  %9 = bitcast %struct.v4l2_event* %ev to i8*
  call void @llvm.lifetime.end.p0i8(i64 136, i8* %9) #8
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @list_empty.198(%struct.list_head* %head) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %head, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %cmp = icmp eq %struct.list_head* %0, %head
  %conv = zext i1 %cmp to i32
  ret i32 %conv
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_get(%struct.uvc_video_chain* %chain, %struct.v4l2_ext_control* %xctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 1, !tbaa !242
  %call = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp = icmp eq %struct.uvc_control* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %2 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %3 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value = bitcast %struct.pgprot* %3 to i32*
  %call1 = call i32 @__uvc_ctrl_get(%struct.uvc_video_chain* %chain, %struct.uvc_control* %call, %struct.uvc_control_mapping* %2, i32* %value)
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call1, %if.end ], [ -22, %entry ]
  %4 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %4) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_set(%struct.uvc_video_chain* %chain, %struct.v4l2_ext_control* %xctrl) #0 {
entry:
  %mapping = alloca %struct.uvc_control_mapping*, align 8
  %__val = alloca i32, align 4
  %__min = alloca i32, align 4
  %__max = alloca i32, align 4
  %__val61 = alloca i32, align 4
  %__min63 = alloca i32, align 4
  %__max64 = alloca i32, align 4
  %0 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* %0) #8
  %id = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 0
  %1 = load i32, i32* %id, align 1, !tbaa !242
  %call = call %struct.uvc_control* @uvc_find_control(%struct.uvc_video_chain* %chain, i32 %1, %struct.uvc_control_mapping** %mapping)
  %cmp = icmp eq %struct.uvc_control* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %2 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %2, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.end2, label %cleanup

if.end2:                                          ; preds = %if.end
  %3 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %3, i32 0, i32 8
  %4 = load i32, i32* %v4l2_type, align 8, !tbaa !313
  %Pivot4 = icmp slt i32 %4, 2
  br i1 %Pivot4, label %LeafBlock, label %NodeBlock

NodeBlock:                                        ; preds = %if.end2
  %Pivot = icmp slt i32 %4, 3
  br i1 %Pivot, label %sw.bb60, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %4, 3
  br i1 %SwitchLeaf2, label %sw.bb84, label %sw.default

LeafBlock:                                        ; preds = %if.end2
  %SwitchLeaf = icmp eq i32 %4, 1
  br i1 %SwitchLeaf, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %LeafBlock
  %cached = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load = load i8, i8* %cached, align 1
  %bf.lshr = lshr i8 %bf.load, 3
  %bf.clear = and i8 %bf.lshr, 1
  %tobool3 = icmp ne i8 %bf.clear, 0
  br i1 %tobool3, label %if.end9, label %if.then4

if.then4:                                         ; preds = %sw.bb
  %call5 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain* %chain, %struct.uvc_control* %call)
  %cmp6 = icmp slt i32 %call5, 0
  br i1 %cmp6, label %cleanup, label %if.end9

if.end9:                                          ; preds = %if.then4, %sw.bb
  %5 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %5, i32 0, i32 15
  %6 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !444
  %7 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call10 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 2)
  %call11 = call i32 %6(%struct.uvc_control_mapping* %7, i8 zeroext -126, i8* %call10)
  %8 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %get12 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %8, i32 0, i32 15
  %9 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get12, align 8, !tbaa !444
  %10 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call13 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 3)
  %call14 = call i32 %9(%struct.uvc_control_mapping* %10, i8 zeroext -125, i8* %call13)
  %11 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %get15 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %11, i32 0, i32 15
  %12 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get15, align 8, !tbaa !444
  %13 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call16 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 4)
  %call17 = call i32 %12(%struct.uvc_control_mapping* %13, i8 zeroext -124, i8* %call16)
  %cmp18 = icmp eq i32 %call17, 0
  %.call17 = select i1 %cmp18, i32 1, i32 %call17
  %14 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value21 = bitcast %struct.pgprot* %14 to i32*
  %15 = load i32, i32* %value21, align 1, !tbaa !61
  %sub = sub nsw i32 %15, %call11
  %div = udiv i32 %.call17, 2
  %add = add i32 %sub, %div
  %div22 = udiv i32 %add, %.call17
  %mul = mul i32 %div22, %.call17
  %add23 = add i32 %call11, %mul
  %16 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value24 = bitcast %struct.pgprot* %16 to i32*
  store i32 %add23, i32* %value24, align 1, !tbaa !61
  %17 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %17, i32 0, i32 9
  %18 = load i32, i32* %data_type, align 4, !tbaa !315
  %cmp25 = icmp eq i32 %18, 1
  br i1 %cmp25, label %if.then26, label %if.else

if.then26:                                        ; preds = %if.end9
  %19 = bitcast i32* %__val to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %19) #8
  %20 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value27 = bitcast %struct.pgprot* %20 to i32*
  %21 = load i32, i32* %value27, align 1, !tbaa !61
  store i32 %21, i32* %__val, align 4, !tbaa !2
  %22 = bitcast i32* %__min to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %22) #8
  store i32 %call11, i32* %__min, align 4, !tbaa !2
  %23 = bitcast i32* %__max to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %23) #8
  store i32 %call14, i32* %__max, align 4, !tbaa !2
  %cmp28 = icmp eq i32* %__val, %__min
  %conv = zext i1 %cmp28 to i32
  %cmp29 = icmp eq i32* %__val, %__max
  %conv30 = zext i1 %cmp29 to i32
  %24 = load i32, i32* %__val, align 4, !tbaa !2
  %25 = load i32, i32* %__min, align 4, !tbaa !2
  %cmp31 = icmp slt i32 %24, %25
  %26 = load i32, i32* %__min, align 4
  %27 = load i32, i32* %__val, align 4
  %cond = select i1 %cmp31, i32 %26, i32 %27
  store i32 %cond, i32* %__val, align 4, !tbaa !2
  %28 = load i32, i32* %__val, align 4, !tbaa !2
  %29 = load i32, i32* %__max, align 4, !tbaa !2
  %cmp33 = icmp sgt i32 %28, %29
  %30 = load i32, i32* %__max, align 4
  %31 = load i32, i32* %__val, align 4
  %cond38 = select i1 %cmp33, i32 %30, i32 %31
  %32 = bitcast i32* %__max to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %32) #8
  %33 = bitcast i32* %__min to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %33) #8
  %34 = bitcast i32* %__val to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %34) #8
  br label %if.end58

if.else:                                          ; preds = %if.end9
  %35 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value41 = bitcast %struct.pgprot* %35 to i32*
  %36 = load i32, i32* %value41, align 1, !tbaa !61
  %cmp44 = icmp ult i32 %36, %call11
  %call11. = select i1 %cmp44, i32 %call11, i32 %36
  %cmp51 = icmp ugt i32 %call11., %call14
  %cond56 = select i1 %cmp51, i32 %call14, i32 %call11.
  br label %if.end58

if.end58:                                         ; preds = %if.else, %if.then26
  %cond56.sink = phi i32 [ %cond38, %if.then26 ], [ %cond56, %if.else ]
  %37 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value57 = bitcast %struct.pgprot* %37 to i32*
  store i32 %cond56.sink, i32* %value57, align 1, !tbaa !61
  %38 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value59 = bitcast %struct.pgprot* %38 to i32*
  %39 = load i32, i32* %value59, align 1, !tbaa !61
  br label %sw.epilog

sw.bb60:                                          ; preds = %NodeBlock
  %40 = bitcast i32* %__val61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %40) #8
  %41 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value62 = bitcast %struct.pgprot* %41 to i32*
  %42 = load i32, i32* %value62, align 1, !tbaa !61
  store i32 %42, i32* %__val61, align 4, !tbaa !2
  %43 = bitcast i32* %__min63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %43) #8
  store i32 0, i32* %__min63, align 4, !tbaa !2
  %44 = bitcast i32* %__max64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %44) #8
  store i32 1, i32* %__max64, align 4, !tbaa !2
  %cmp65 = icmp eq i32* %__val61, %__min63
  %conv66 = zext i1 %cmp65 to i32
  %cmp67 = icmp eq i32* %__val61, %__max64
  %conv68 = zext i1 %cmp67 to i32
  %45 = load i32, i32* %__val61, align 4, !tbaa !2
  %46 = load i32, i32* %__min63, align 4, !tbaa !2
  %cmp69 = icmp slt i32 %45, %46
  %47 = load i32, i32* %__min63, align 4
  %48 = load i32, i32* %__val61, align 4
  %cond74 = select i1 %cmp69, i32 %47, i32 %48
  store i32 %cond74, i32* %__val61, align 4, !tbaa !2
  %49 = load i32, i32* %__val61, align 4, !tbaa !2
  %50 = load i32, i32* %__max64, align 4, !tbaa !2
  %cmp76 = icmp sgt i32 %49, %50
  %51 = load i32, i32* %__max64, align 4
  %52 = load i32, i32* %__val61, align 4
  %cond81 = select i1 %cmp76, i32 %51, i32 %52
  %53 = bitcast i32* %__max64 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %53) #8
  %54 = bitcast i32* %__min63 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %54) #8
  %55 = bitcast i32* %__val61 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %55) #8
  %56 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value82 = bitcast %struct.pgprot* %56 to i32*
  store i32 %cond81, i32* %value82, align 1, !tbaa !61
  %57 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value83 = bitcast %struct.pgprot* %57 to i32*
  %58 = load i32, i32* %value83, align 1, !tbaa !61
  br label %sw.epilog

sw.bb84:                                          ; preds = %LeafBlock1
  %59 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value85 = bitcast %struct.pgprot* %59 to i32*
  %60 = load i32, i32* %value85, align 1, !tbaa !61
  %cmp86 = icmp slt i32 %60, 0
  br i1 %cmp86, label %cleanup, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %sw.bb84
  %61 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value88 = bitcast %struct.pgprot* %61 to i32*
  %62 = load i32, i32* %value88, align 1, !tbaa !61
  %63 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %63, i32 0, i32 11
  %64 = load i32, i32* %menu_count, align 8, !tbaa !317
  %cmp89 = icmp uge i32 %62, %64
  br i1 %cmp89, label %cleanup, label %if.end92

if.end92:                                         ; preds = %lor.lhs.false
  %65 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %65, i32 0, i32 10
  %66 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  %67 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value93 = bitcast %struct.pgprot* %67 to i32*
  %68 = load i32, i32* %value93, align 1, !tbaa !61
  %idxprom = sext i32 %68 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %66, i64 %idxprom
  %value94 = getelementptr inbounds %struct.uvc_menu_info, %struct.uvc_menu_info* %arrayidx, i32 0, i32 0
  %69 = load i32, i32* %value94, align 4, !tbaa !445
  %70 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %data_type95 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %70, i32 0, i32 9
  %71 = load i32, i32* %data_type95, align 4, !tbaa !315
  %cmp96 = icmp eq i32 %71, 5
  br i1 %cmp96, label %land.lhs.true, label %sw.epilog

land.lhs.true:                                    ; preds = %if.end92
  %info98 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %flags99 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info98, i32 0, i32 5
  %72 = load i32, i32* %flags99, align 4, !tbaa !438
  %and100 = and i32 %72, 16
  %tobool101 = icmp ne i32 %and100, 0
  br i1 %tobool101, label %if.then102, label %sw.epilog

if.then102:                                       ; preds = %land.lhs.true
  %cached103 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load104 = load i8, i8* %cached103, align 1
  %bf.lshr105 = lshr i8 %bf.load104, 3
  %bf.clear106 = and i8 %bf.lshr105, 1
  %tobool107 = icmp ne i8 %bf.clear106, 0
  br i1 %tobool107, label %if.end114, label %if.then108

if.then108:                                       ; preds = %if.then102
  %call109 = call i32 @uvc_ctrl_populate_cache(%struct.uvc_video_chain* %chain, %struct.uvc_control* %call)
  %cmp110 = icmp slt i32 %call109, 0
  br i1 %cmp110, label %cleanup, label %if.end114

if.end114:                                        ; preds = %if.then108, %if.then102
  %73 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %get115 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %73, i32 0, i32 15
  %74 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get115, align 8, !tbaa !444
  %75 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call116 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 4)
  %call117 = call i32 %74(%struct.uvc_control_mapping* %75, i8 zeroext -124, i8* %call116)
  %and118 = and i32 %call117, %69
  %tobool119 = icmp ne i32 %and118, 0
  br i1 %tobool119, label %sw.epilog, label %cleanup

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1
  %76 = getelementptr inbounds %struct.v4l2_ext_control, %struct.v4l2_ext_control* %xctrl, i32 0, i32 3
  %value123 = bitcast %struct.pgprot* %76 to i32*
  %77 = load i32, i32* %value123, align 1, !tbaa !61
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.default, %if.end114, %land.lhs.true, %if.end92, %sw.bb60, %if.end58
  %value.0 = phi i32 [ %39, %if.end58 ], [ %77, %sw.default ], [ %58, %sw.bb60 ], [ %69, %if.end114 ], [ %69, %land.lhs.true ], [ %69, %if.end92 ]
  %loaded = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load124 = load i8, i8* %loaded, align 1
  %bf.lshr125 = lshr i8 %bf.load124, 1
  %bf.clear126 = and i8 %bf.lshr125, 1
  %tobool127 = icmp ne i8 %bf.clear126, 0
  br i1 %tobool127, label %if.end164, label %land.lhs.true128

land.lhs.true128:                                 ; preds = %sw.epilog
  %info129 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info129, i32 0, i32 4
  %78 = load i16, i16* %size, align 2, !tbaa !443
  %conv130 = zext i16 %78 to i32
  %mul131 = mul nsw i32 %conv130, 8
  %79 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %size132 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %79, i32 0, i32 6
  %80 = load i8, i8* %size132, align 1, !tbaa !309
  %conv133 = zext i8 %80 to i32
  %cmp134 = icmp ne i32 %mul131, %conv133
  br i1 %cmp134, label %if.then136, label %if.end164

if.then136:                                       ; preds = %land.lhs.true128
  %info137 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %flags138 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info137, i32 0, i32 5
  %81 = load i32, i32* %flags138, align 4, !tbaa !438
  %and139 = and i32 %81, 2
  %cmp140 = icmp eq i32 %and139, 0
  br i1 %cmp140, label %if.then142, label %if.else147

if.then142:                                       ; preds = %if.then136
  %call143 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 0)
  %info144 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %size145 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info144, i32 0, i32 4
  %82 = load i16, i16* %size145, align 2, !tbaa !443
  %conv146 = zext i16 %82 to i64
  call void @llvm.memset.p0i8.i64(i8* %call143, i8 0, i64 %conv146, i32 1, i1 false)
  br label %if.end160

if.else147:                                       ; preds = %if.then136
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %83 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 0
  %84 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  %id148 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %84, i32 0, i32 3
  %85 = load i8, i8* %id148, align 4, !tbaa !91
  %dev149 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %86 = load %struct.uvc_device*, %struct.uvc_device** %dev149, align 8, !tbaa !88
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %86, i32 0, i32 4
  %87 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv150 = trunc i32 %87 to i8
  %info151 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info151, i32 0, i32 3
  %88 = load i8, i8* %selector, align 1, !tbaa !442
  %call152 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 0)
  %info153 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %size154 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info153, i32 0, i32 4
  %89 = load i16, i16* %size154, align 2, !tbaa !443
  %call155 = call i32 @uvc_query_ctrl(%struct.uvc_device* %83, i8 zeroext -127, i8 zeroext %85, i8 zeroext %conv150, i8 zeroext %88, i8* %call152, i16 zeroext %89)
  %cmp156 = icmp slt i32 %call155, 0
  br i1 %cmp156, label %cleanup, label %if.end160

if.end160:                                        ; preds = %if.else147, %if.then142
  %loaded161 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load162 = load i8, i8* %loaded161, align 1
  %bf.clear163 = and i8 %bf.load162, -3
  %bf.set = or i8 %bf.clear163, 2
  store i8 %bf.set, i8* %loaded161, align 1
  br label %if.end164

if.end164:                                        ; preds = %if.end160, %land.lhs.true128, %sw.epilog
  %dirty = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load165 = load i8, i8* %dirty, align 1
  %bf.clear166 = and i8 %bf.load165, 1
  %tobool167 = icmp ne i8 %bf.clear166, 0
  br i1 %tobool167, label %if.end175, label %if.then168

if.then168:                                       ; preds = %if.end164
  %info169 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 1
  %size170 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info169, i32 0, i32 4
  %90 = load i16, i16* %size170, align 2, !tbaa !443
  %conv171 = zext i16 %90 to i64
  %call172 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 1)
  %call173 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 0)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %call172, i8* %call173, i64 %conv171, i32 1, i1 false)
  br label %if.end175

if.end175:                                        ; preds = %if.then168, %if.end164
  %91 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %set = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %91, i32 0, i32 16
  %92 = load void (%struct.uvc_control_mapping*, i32, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)** %set, align 8, !tbaa !467
  %93 = load %struct.uvc_control_mapping*, %struct.uvc_control_mapping** %mapping, align 8, !tbaa !45
  %call176 = call i8* @uvc_ctrl_data(%struct.uvc_control* %call, i32 0)
  call void %92(%struct.uvc_control_mapping* %93, i32 %value.0, i8* %call176)
  %dirty177 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load178 = load i8, i8* %dirty177, align 1
  %bf.clear179 = and i8 %bf.load178, -2
  %bf.set180 = or i8 %bf.clear179, 1
  store i8 %bf.set180, i8* %dirty177, align 1
  %modified = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %call, i32 0, i32 3
  %bf.load181 = load i8, i8* %modified, align 1
  %bf.clear182 = and i8 %bf.load181, -5
  %bf.set183 = or i8 %bf.clear182, 4
  store i8 %bf.set183, i8* %modified, align 1
  br label %cleanup

cleanup:                                          ; preds = %if.end175, %if.else147, %if.end114, %if.then108, %lor.lhs.false, %sw.bb84, %if.then4, %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end175 ], [ -22, %entry ], [ -13, %if.end ], [ %call5, %if.then4 ], [ -34, %lor.lhs.false ], [ -34, %sw.bb84 ], [ %call109, %if.then108 ], [ -22, %if.end114 ], [ %call155, %if.else147 ]
  %94 = bitcast %struct.uvc_control_mapping** %mapping to i8*
  call void @llvm.lifetime.end.p0i8(i64 8, i8* %94) #8
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_xu_ctrl_query(%struct.uvc_video_chain* %chain, %struct.uvc_xu_control_query* %xqry) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain10.sink = phi %struct.list_head* [ %chain10, %for.inc ], [ %entities, %entry ]
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain10.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next11, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr13 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr13 to %struct.uvc_entity*
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp3 = icmp eq i32 %and, 6
  br i1 %cmp3, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %4 = load i8, i8* %id, align 4, !tbaa !91
  %conv5 = zext i8 %4 to i32
  %unit = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %5 = load i8, i8* %unit, align 8, !tbaa !468
  %conv6 = zext i8 %5 to i32
  %cmp7 = icmp eq i32 %conv5, %conv6
  br i1 %cmp7, label %for.end, label %for.inc

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %chain10 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %land.lhs.true, %for.cond
  %id14 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %6 = load i8, i8* %id14, align 4, !tbaa !91
  %conv15 = zext i8 %6 to i32
  %unit16 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %7 = load i8, i8* %unit16, align 8, !tbaa !468
  %conv17 = zext i8 %7 to i32
  %cmp18 = icmp ne i32 %conv15, %conv17
  br i1 %cmp18, label %do.body, label %if.end26

do.body:                                          ; preds = %for.end
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and21 = and i32 %8, 4
  %tobool = icmp ne i32 %and21, 0
  br i1 %tobool, label %if.then22, label %cleanup

if.then22:                                        ; preds = %do.body
  %unit23 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %9 = load i8, i8* %unit23, align 8, !tbaa !468
  %conv24 = zext i8 %9 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.205, i32 0, i32 0), i32 %conv24)
  br label %cleanup

if.end26:                                         ; preds = %for.end
  br label %for.cond27

for.cond27:                                       ; preds = %for.inc37, %if.end26
  %i.0 = phi i32 [ 0, %if.end26 ], [ %inc, %for.inc37 ]
  %ctrl.0 = phi %struct.uvc_control* [ undef, %if.end26 ], [ %arrayidx, %for.inc37 ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 14
  %10 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp28 = icmp ult i32 %i.0, %10
  br i1 %cmp28, label %for.body30, label %for.end38

for.body30:                                       ; preds = %for.cond27
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  %11 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %11, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 2
  %12 = load i8, i8* %index, align 8, !tbaa !469
  %conv31 = zext i8 %12 to i32
  %selector = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %13 = load i8, i8* %selector, align 1, !tbaa !470
  %conv32 = zext i8 %13 to i32
  %sub = sub nsw i32 %conv32, 1
  %cmp33 = icmp eq i32 %conv31, %sub
  br i1 %cmp33, label %for.end38, label %for.inc37

for.inc37:                                        ; preds = %for.body30
  %inc = add i32 %i.0, 1
  br label %for.cond27

for.end38:                                        ; preds = %for.body30, %for.cond27
  %found.0 = phi i32 [ 1, %for.body30 ], [ 0, %for.cond27 ]
  %ctrl.1 = phi %struct.uvc_control* [ %arrayidx, %for.body30 ], [ %ctrl.0, %for.cond27 ]
  %tobool39 = icmp ne i32 %found.0, 0
  br i1 %tobool39, label %if.end51, label %do.body41

do.body41:                                        ; preds = %for.end38
  %14 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and42 = and i32 %14, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %cleanup

if.then44:                                        ; preds = %do.body41
  %15 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %extension = bitcast %union.anon.63* %15 to %struct.anon.69*
  %guidExtensionCode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %selector45 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %16 = load i8, i8* %selector45, align 1, !tbaa !470
  %conv46 = zext i8 %16 to i32
  %call47 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1.206, i32 0, i32 0), i8* %arraydecay, i32 %conv46)
  br label %cleanup

if.end51:                                         ; preds = %for.end38
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  %call52 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool53 = icmp ne i32 %call52, 0
  br i1 %tobool53, label %cleanup, label %if.end55

if.end55:                                         ; preds = %if.end51
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %17 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %call56 = call i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device* %17, %struct.uvc_control* %ctrl.1)
  %cmp57 = icmp slt i32 %call56, 0
  br i1 %cmp57, label %done, label %if.end60

if.end60:                                         ; preds = %if.end55
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.1, i32 0, i32 1
  %size61 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %18 = load i16, i16* %size61, align 2, !tbaa !443
  %query = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %19 = load i8, i8* %query, align 2, !tbaa !471
  %conv62 = zext i8 %19 to i32
  %Pivot14 = icmp slt i32 %conv62, 132
  br i1 %Pivot14, label %NodeBlock3, label %NodeBlock11

NodeBlock11:                                      ; preds = %if.end60
  %Pivot12 = icmp slt i32 %conv62, 134
  br i1 %Pivot12, label %NodeBlock5, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %conv62, 135
  br i1 %Pivot10, label %sw.epilog, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %conv62, 135
  br i1 %SwitchLeaf8, label %sw.epilog, label %done

NodeBlock5:                                       ; preds = %NodeBlock11
  %Pivot6 = icmp slt i32 %conv62, 133
  %. = select i1 %Pivot6, i16 %18, i16 2
  %.16 = select i1 %Pivot6, i32 16, i32 0
  br label %sw.epilog

NodeBlock3:                                       ; preds = %if.end60
  %Pivot4 = icmp slt i32 %conv62, 130
  br i1 %Pivot4, label %NodeBlock, label %NodeBlock1

NodeBlock1:                                       ; preds = %NodeBlock3
  %Pivot2 = icmp slt i32 %conv62, 131
  %.17 = select i1 %Pivot2, i32 4, i32 8
  br label %sw.epilog

NodeBlock:                                        ; preds = %NodeBlock3
  %Pivot = icmp slt i32 %conv62, 129
  br i1 %Pivot, label %LeafBlock, label %sw.epilog

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %conv62, 1
  br i1 %SwitchLeaf, label %sw.epilog, label %done

sw.epilog:                                        ; preds = %LeafBlock, %NodeBlock, %NodeBlock1, %NodeBlock5, %LeafBlock7, %NodeBlock9
  %size.0 = phi i16 [ %., %NodeBlock5 ], [ %18, %NodeBlock1 ], [ %18, %NodeBlock ], [ %18, %LeafBlock7 ], [ %18, %LeafBlock ], [ 1, %NodeBlock9 ]
  %reqflags.0 = phi i32 [ %.16, %NodeBlock5 ], [ %.17, %NodeBlock1 ], [ 2, %NodeBlock ], [ 32, %LeafBlock7 ], [ 1, %LeafBlock ], [ 0, %NodeBlock9 ]
  %conv70 = zext i16 %size.0 to i32
  %size71 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 3
  %20 = load i16, i16* %size71, align 4, !tbaa !222
  %conv72 = zext i16 %20 to i32
  %cmp73 = icmp ne i32 %conv70, %conv72
  br i1 %cmp73, label %done, label %if.end76

if.end76:                                         ; preds = %sw.epilog
  %tobool77 = icmp ne i32 %reqflags.0, 0
  br i1 %tobool77, label %land.lhs.true78, label %if.end83

land.lhs.true78:                                  ; preds = %if.end76
  %info79 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.1, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info79, i32 0, i32 5
  %21 = load i32, i32* %flags, align 4, !tbaa !438
  %and80 = and i32 %21, %reqflags.0
  %tobool81 = icmp ne i32 %and80, 0
  br i1 %tobool81, label %if.end83, label %done

if.end83:                                         ; preds = %land.lhs.true78, %if.end76
  %conv84 = zext i16 %size.0 to i64
  %call85 = call i8* @kmalloc.207(i64 %conv84, i32 208)
  %cmp86 = icmp eq i8* %call85, null
  br i1 %cmp86, label %done, label %if.end89

if.end89:                                         ; preds = %if.end83
  %query90 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %22 = load i8, i8* %query90, align 2, !tbaa !471
  %conv91 = zext i8 %22 to i32
  %cmp92 = icmp eq i32 %conv91, 1
  br i1 %cmp92, label %land.lhs.true94, label %if.end100

land.lhs.true94:                                  ; preds = %if.end89
  %data95 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 4
  %23 = load i8*, i8** %data95, align 8, !tbaa !224
  %conv96 = zext i16 %size.0 to i64
  %call97 = call i64 @copy_from_user.208(i8* %call85, i8* %23, i64 %conv96)
  %tobool98 = icmp ne i64 %call97, 0
  br i1 %tobool98, label %done, label %if.end100

if.end100:                                        ; preds = %land.lhs.true94, %if.end89
  %dev101 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %24 = load %struct.uvc_device*, %struct.uvc_device** %dev101, align 8, !tbaa !88
  %query102 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %25 = load i8, i8* %query102, align 2, !tbaa !471
  %unit103 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 0
  %26 = load i8, i8* %unit103, align 8, !tbaa !468
  %dev104 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %27 = load %struct.uvc_device*, %struct.uvc_device** %dev104, align 8, !tbaa !88
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %27, i32 0, i32 4
  %28 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv105 = trunc i32 %28 to i8
  %selector106 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 1
  %29 = load i8, i8* %selector106, align 1, !tbaa !470
  %call107 = call i32 @uvc_query_ctrl(%struct.uvc_device* %24, i8 zeroext %25, i8 zeroext %26, i8 zeroext %conv105, i8 zeroext %29, i8* %call85, i16 zeroext %size.0)
  %cmp108 = icmp slt i32 %call107, 0
  br i1 %cmp108, label %done, label %if.end111

if.end111:                                        ; preds = %if.end100
  %query112 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 2
  %30 = load i8, i8* %query112, align 2, !tbaa !471
  %conv113 = zext i8 %30 to i32
  %cmp114 = icmp ne i32 %conv113, 1
  br i1 %cmp114, label %land.lhs.true116, label %done

land.lhs.true116:                                 ; preds = %if.end111
  %data117 = getelementptr inbounds %struct.uvc_xu_control_query, %struct.uvc_xu_control_query* %xqry, i32 0, i32 4
  %31 = load i8*, i8** %data117, align 8, !tbaa !224
  %conv118 = zext i16 %size.0 to i32
  %call119 = call i32 @copy_to_user(i8* %31, i8* %call85, i32 %conv118)
  %tobool120 = icmp ne i32 %call119, 0
  %.call107 = select i1 %tobool120, i32 -14, i32 %call107
  br label %done

done:                                             ; preds = %land.lhs.true116, %if.end111, %if.end100, %land.lhs.true94, %if.end83, %land.lhs.true78, %sw.epilog, %LeafBlock, %LeafBlock7, %if.end55
  %data.0 = phi i8* [ null, %if.end55 ], [ null, %LeafBlock ], [ null, %LeafBlock7 ], [ null, %sw.epilog ], [ null, %land.lhs.true78 ], [ %call85, %if.end83 ], [ %call85, %land.lhs.true94 ], [ %call85, %if.end100 ], [ %call85, %land.lhs.true116 ], [ %call85, %if.end111 ]
  %ret.1 = phi i32 [ -2, %if.end55 ], [ -22, %LeafBlock ], [ -22, %LeafBlock7 ], [ -105, %sw.epilog ], [ -56, %land.lhs.true78 ], [ -12, %if.end83 ], [ -14, %land.lhs.true94 ], [ %call107, %if.end100 ], [ %call107, %if.end111 ], [ %.call107, %land.lhs.true116 ]
  call void @kfree(i8* %data.0)
  %ctrl_mutex123 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex123)
  br label %cleanup

cleanup:                                          ; preds = %done, %if.end51, %if.then44, %do.body41, %if.then22, %do.body
  %retval.0 = phi i32 [ %ret.1, %done ], [ -2, %if.then22 ], [ -2, %do.body ], [ -2, %if.then44 ], [ -2, %do.body41 ], [ -512, %if.end51 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl) #0 {
entry:
  %info = alloca %struct.uvc_control_info, align 8
  %0 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* %0) #8
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %call = call i32 @uvc_ctrl_fill_xu_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info)
  %cmp = icmp slt i32 %call, 0
  br i1 %cmp, label %cleanup, label %if.end2

if.end2:                                          ; preds = %if.end
  %call3 = call i32 @uvc_ctrl_add_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info)
  %cmp4 = icmp slt i32 %call3, 0
  br i1 %cmp4, label %do.body, label %cleanup

do.body:                                          ; preds = %if.end2
  %1 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %1, 4
  %tobool6 = icmp ne i32 %and, 0
  br i1 %tobool6, label %if.then7, label %cleanup

if.then7:                                         ; preds = %do.body
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %2 = load i8, i8* %selector, align 1, !tbaa !472
  %conv = zext i8 %2 to i32
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %3 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %3, i32 0, i32 1
  %arraydecay8 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %entity9 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %4 = load %struct.uvc_entity*, %struct.uvc_entity** %entity9, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !91
  %conv10 = zext i8 %5 to i32
  %call11 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.8.211, i32 0, i32 0), i8* %arraydecay, i32 %conv, i8* %arraydecay8, i32 %conv10)
  br label %cleanup

cleanup:                                          ; preds = %if.then7, %do.body, %if.end2, %if.end, %entry
  %retval.0 = phi i32 [ 0, %entry ], [ %call, %if.end ], [ %call3, %do.body ], [ %call3, %if.then7 ], [ %call3, %if.end2 ]
  %6 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.lifetime.end.p0i8(i64 40, i8* %6) #8
  ret i32 %retval.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.207(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @copy_from_user.208(i8* %to, i8* %from, i64 %n) #1 {
entry:
  %0 = call i64 @llvm.objectsize.i64.p0i8(i8* %to, i1 false, i1 true)
  %conv = trunc i64 %0 to i32
  call void @might_fault()
  %cmp = icmp eq i32 %conv, -1
  %conv2 = sext i32 %conv to i64
  %cmp3 = icmp uge i64 %conv2, %n
  %1 = select i1 %cmp, i1 true, i1 %cmp3
  %lnot = xor i1 %1, true
  %lnot5 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot5 to i32
  %conv6 = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv6, i64 1)
  %tobool = icmp ne i64 %expval, 0
  br i1 %tobool, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %conv7 = trunc i64 %n to i32
  %call = call i64 @_copy_from_user(i8* %to, i8* %from, i32 %conv7)
  br label %if.end24

if.else:                                          ; preds = %entry
  %tobool8 = icmp ne i32 1, 0
  %lnot9 = xor i1 %tobool8, true
  %lnot11 = xor i1 %lnot9, true
  %lnot.ext12 = zext i1 %lnot11 to i32
  %conv13 = sext i32 %lnot.ext12 to i64
  %expval14 = call i64 @llvm.expect.i64(i64 %conv13, i64 0)
  %tobool15 = icmp ne i64 %expval14, 0
  br i1 %tobool15, label %if.then16, label %if.end

if.then16:                                        ; preds = %if.else
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.13.209, i32 0, i32 0), i32 66, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14.210, i32 0, i32 0))
  br label %if.end

if.end:                                           ; preds = %if.then16, %if.else
  %tobool17 = icmp ne i32 1, 0
  %lnot18 = xor i1 %tobool17, true
  %lnot20 = xor i1 %lnot18, true
  %lnot.ext21 = zext i1 %lnot20 to i32
  %conv22 = sext i32 %lnot.ext21 to i64
  %expval23 = call i64 @llvm.expect.i64(i64 %conv22, i64 0)
  br label %if.end24

if.end24:                                         ; preds = %if.end, %if.then
  %n.addr.0 = phi i64 [ %call, %if.then ], [ %n, %if.end ]
  ret i64 %n.addr.0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i32 @copy_to_user(i8* %dst, i8* %src, i32 %size) #3 {
entry:
  call void @might_fault()
  %call = call i64 @_copy_to_user(i8* %dst, i8* %src, i32 %size)
  %conv = trunc i64 %call to i32
  ret i32 %conv
}

declare i64 @_copy_to_user(i8*, i8*, i32) #2

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_fill_xu_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  %call = call i8* @kmalloc.207(i64 2, i32 208)
  %cmp = icmp eq i8* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp uge i64 16, 64
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %entity3 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %0 = load %struct.uvc_entity*, %struct.uvc_entity** %entity3, align 8, !tbaa !441
  %1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 11
  %extension = bitcast %union.anon.63* %1 to %struct.anon.69*
  %guidExtensionCode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 0
  %arraydecay4 = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  br i1 %cmp1, label %if.then2, label %if.else

if.then2:                                         ; preds = %if.end
  %call5 = call i8* @__memcpy(i8* %arraydecay, i8* %arraydecay4, i64 16)
  br label %if.end12

if.else:                                          ; preds = %if.end
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %arraydecay, i8* %arraydecay4, i64 16, i32 8, i1 false)
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then2
  %__ret.0 = phi i8* [ %call5, %if.then2 ], [ %arraydecay, %if.else ]
  %index = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 2
  %2 = load i8, i8* %index, align 8, !tbaa !469
  %index13 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 2
  store i8 %2, i8* %index13, align 8, !tbaa !473
  %index14 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 2
  %3 = load i8, i8* %index14, align 8, !tbaa !469
  %conv = zext i8 %3 to i32
  %add = add nsw i32 %conv, 1
  %conv15 = trunc i32 %add to i8
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  store i8 %conv15, i8* %selector, align 1, !tbaa !472
  %entity16 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %4 = load %struct.uvc_entity*, %struct.uvc_entity** %entity16, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %4, i32 0, i32 3
  %5 = load i8, i8* %id, align 4, !tbaa !91
  %intfnum = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 4
  %6 = load i32, i32* %intfnum, align 4, !tbaa !252
  %conv17 = trunc i32 %6 to i8
  %selector18 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %7 = load i8, i8* %selector18, align 1, !tbaa !472
  %call19 = call i32 @uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext -123, i8 zeroext %5, i8 zeroext %conv17, i8 zeroext %7, i8* %call, i16 zeroext 2)
  %cmp20 = icmp slt i32 %call19, 0
  br i1 %cmp20, label %do.body, label %if.end30

do.body:                                          ; preds = %if.end12
  %8 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %8, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then23, label %done

if.then23:                                        ; preds = %do.body
  %entity24 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay25 = getelementptr inbounds [16 x i8], [16 x i8]* %entity24, i32 0, i32 0
  %selector26 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %9 = load i8, i8* %selector26, align 1, !tbaa !472
  %conv27 = zext i8 %9 to i32
  %call28 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9.215, i32 0, i32 0), i8* %arraydecay25, i32 %conv27, i32 %call19)
  br label %done

if.end30:                                         ; preds = %if.end12
  %10 = bitcast i8* %call to i16*
  %call31 = call zeroext i16 @__le16_to_cpup.216(i16* %10)
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  store i16 %call31, i16* %size, align 2, !tbaa !474
  %entity32 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %11 = load %struct.uvc_entity*, %struct.uvc_entity** %entity32, align 8, !tbaa !441
  %id33 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %11, i32 0, i32 3
  %12 = load i8, i8* %id33, align 4, !tbaa !91
  %intfnum34 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 4
  %13 = load i32, i32* %intfnum34, align 4, !tbaa !252
  %conv35 = trunc i32 %13 to i8
  %selector36 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %14 = load i8, i8* %selector36, align 1, !tbaa !472
  %call37 = call i32 @uvc_query_ctrl(%struct.uvc_device* %dev, i8 zeroext -122, i8 zeroext %12, i8 zeroext %conv35, i8 zeroext %14, i8* %call, i16 zeroext 1)
  %cmp38 = icmp slt i32 %call37, 0
  br i1 %cmp38, label %do.body41, label %if.end53

do.body41:                                        ; preds = %if.end30
  %15 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and42 = and i32 %15, 4
  %tobool43 = icmp ne i32 %and42, 0
  br i1 %tobool43, label %if.then44, label %done

if.then44:                                        ; preds = %do.body41
  %entity45 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay46 = getelementptr inbounds [16 x i8], [16 x i8]* %entity45, i32 0, i32 0
  %selector47 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %16 = load i8, i8* %selector47, align 1, !tbaa !472
  %conv48 = zext i8 %16 to i32
  %call49 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.217, i32 0, i32 0), i8* %arraydecay46, i32 %conv48, i32 %call37)
  br label %done

if.end53:                                         ; preds = %if.end30
  %arrayidx = getelementptr inbounds i8, i8* %call, i64 0
  %17 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv54 = zext i8 %17 to i32
  %and55 = and i32 %conv54, 1
  %tobool56 = icmp ne i32 %and55, 0
  %18 = zext i1 %tobool56 to i64
  %cond = select i1 %tobool56, i32 2, i32 0
  %or = or i32 60, %cond
  %arrayidx57 = getelementptr inbounds i8, i8* %call, i64 0
  %19 = load i8, i8* %arrayidx57, align 1, !tbaa !61
  %conv58 = zext i8 %19 to i32
  %and59 = and i32 %conv58, 2
  %tobool60 = icmp ne i32 %and59, 0
  %20 = zext i1 %tobool60 to i64
  %cond61 = select i1 %tobool60, i32 1, i32 0
  %or62 = or i32 %or, %cond61
  %arrayidx63 = getelementptr inbounds i8, i8* %call, i64 0
  %21 = load i8, i8* %arrayidx63, align 1, !tbaa !61
  %conv64 = zext i8 %21 to i32
  %and65 = and i32 %conv64, 8
  %tobool66 = icmp ne i32 %and65, 0
  %22 = zext i1 %tobool66 to i64
  %cond67 = select i1 %tobool66, i32 128, i32 0
  %or68 = or i32 %or62, %cond67
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  store i32 %or68, i32* %flags, align 4, !tbaa !475
  call void @uvc_ctrl_fixup_xu_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info)
  %23 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and70 = and i32 %23, 4
  %tobool71 = icmp ne i32 %and70, 0
  br i1 %tobool71, label %if.then72, label %done

if.then72:                                        ; preds = %if.end53
  %entity73 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 1
  %arraydecay74 = getelementptr inbounds [16 x i8], [16 x i8]* %entity73, i32 0, i32 0
  %selector75 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %24 = load i8, i8* %selector75, align 1, !tbaa !472
  %conv76 = zext i8 %24 to i32
  %size77 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 4
  %25 = load i16, i16* %size77, align 2, !tbaa !474
  %conv78 = zext i16 %25 to i32
  %flags79 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %26 = load i32, i32* %flags79, align 4, !tbaa !475
  %and80 = and i32 %26, 2
  %tobool81 = icmp ne i32 %and80, 0
  %27 = zext i1 %tobool81 to i64
  %cond82 = select i1 %tobool81, i32 1, i32 0
  %flags83 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %28 = load i32, i32* %flags83, align 4, !tbaa !475
  %and84 = and i32 %28, 1
  %tobool85 = icmp ne i32 %and84, 0
  %29 = zext i1 %tobool85 to i64
  %cond86 = select i1 %tobool85, i32 1, i32 0
  %flags87 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %30 = load i32, i32* %flags87, align 4, !tbaa !475
  %and88 = and i32 %30, 128
  %tobool89 = icmp ne i32 %and88, 0
  %31 = zext i1 %tobool89 to i64
  %cond90 = select i1 %tobool89, i32 1, i32 0
  %call91 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.11.218, i32 0, i32 0), i8* %arraydecay74, i32 %conv76, i32 %conv78, i32 %cond82, i32 %cond86, i32 %cond90)
  br label %done

done:                                             ; preds = %if.then72, %if.end53, %if.then44, %do.body41, %if.then23, %do.body
  %ret.0 = phi i32 [ %call19, %if.then23 ], [ %call19, %do.body ], [ %call37, %if.then44 ], [ %call37, %do.body41 ], [ %call37, %if.then72 ], [ %call37, %if.end53 ]
  call void @kfree(i8* %call)
  br label %cleanup

cleanup:                                          ; preds = %done, %entry
  %retval.0 = phi i32 [ %ret.0, %done ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_add_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  %info1 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %0 = bitcast %struct.uvc_control_info* %info1 to i8*
  %1 = bitcast %struct.uvc_control_info* %info to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %0, i8* %1, i64 40, i32 8, i1 false), !tbaa.struct !476
  %info2 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info2, i32 0, i32 0
  call void @INIT_LIST_HEAD.212(%struct.list_head* %mappings)
  %info3 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %size = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info3, i32 0, i32 4
  %2 = load i16, i16* %size, align 2, !tbaa !443
  %conv = zext i16 %2 to i32
  %mul = mul nsw i32 %conv, 6
  %add = add nsw i32 %mul, 1
  %conv4 = sext i32 %add to i64
  %call = call i8* @kzalloc.213(i64 %conv4, i32 208)
  %uvc_data = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 4
  store i8* %call, i8** %uvc_data, align 8, !tbaa !462
  %uvc_data5 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 4
  %3 = load i8*, i8** %uvc_data5, align 8, !tbaa !462
  %cmp = icmp eq i8* %3, null
  br i1 %cmp, label %done, label %if.end

if.end:                                           ; preds = %entry
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.clear = and i8 %bf.load, -17
  %bf.set = or i8 %bf.clear, 16
  store i8 %bf.set, i8* %initialized, align 1
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %4, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then7, label %done

if.then7:                                         ; preds = %if.end
  %info8 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info8, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %info9 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info9, i32 0, i32 3
  %5 = load i8, i8* %selector, align 1, !tbaa !442
  %conv10 = zext i8 %5 to i32
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %6 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 1
  %arraydecay11 = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %entity12 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %7 = load %struct.uvc_entity*, %struct.uvc_entity** %entity12, align 8, !tbaa !441
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %7, i32 0, i32 3
  %8 = load i8, i8* %id, align 4, !tbaa !91
  %conv13 = zext i8 %8 to i32
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.12.214, i32 0, i32 0), i8* %arraydecay, i32 %conv10, i8* %arraydecay11, i32 %conv13)
  br label %done

done:                                             ; preds = %if.then7, %if.end, %entry
  %ret.0 = phi i32 [ -12, %entry ], [ 0, %if.then7 ], [ 0, %if.end ]
  %cmp16 = icmp slt i32 %ret.0, 0
  br i1 %cmp16, label %if.then18, label %if.end20

if.then18:                                        ; preds = %done
  %uvc_data19 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 4
  %9 = load i8*, i8** %uvc_data19, align 8, !tbaa !462
  call void @kfree(i8* %9)
  br label %if.end20

if.end20:                                         ; preds = %if.then18, %done
  ret i32 %ret.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @INIT_LIST_HEAD.212(%struct.list_head* %list) #1 {
entry:
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 0
  store %struct.list_head* %list, %struct.list_head** %next, align 8, !tbaa !65
  %prev = getelementptr inbounds %struct.list_head, %struct.list_head* %list, i32 0, i32 1
  store %struct.list_head* %list, %struct.list_head** %prev, align 8, !tbaa !74
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.213(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.207(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal zeroext i16 @__le16_to_cpup.216(i16* %p) #1 {
entry:
  %0 = load i16, i16* %p, align 2, !tbaa !165
  ret i16 %0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_fixup_xu_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %conv = zext i32 %i.0 to i64
  %cmp = icmp ult i64 %conv, 3
  br i1 %cmp, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %0 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom
  %id = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx, i32 0, i32 0
  %call = call i32 @usb_match_one_id(%struct.usb_interface* %0, %struct.usb_device_id* %id)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %idxprom2 = zext i32 %i.0 to i64
  %arrayidx3 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom2
  %entity = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx3, i32 0, i32 1
  %1 = load i8, i8* %entity, align 8, !tbaa !477
  %conv4 = zext i8 %1 to i32
  %entity5 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity5, align 8, !tbaa !441
  %id6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id6, align 4, !tbaa !91
  %conv7 = zext i8 %3 to i32
  %cmp8 = icmp eq i32 %conv4, %conv7
  br i1 %cmp8, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %if.end
  %idxprom10 = zext i32 %i.0 to i64
  %arrayidx11 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom10
  %selector = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx11, i32 0, i32 2
  %4 = load i8, i8* %selector, align 1, !tbaa !479
  %conv12 = zext i8 %4 to i32
  %selector13 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 3
  %5 = load i8, i8* %selector13, align 1, !tbaa !472
  %conv14 = zext i8 %5 to i32
  %cmp15 = icmp eq i32 %conv12, %conv14
  br i1 %cmp15, label %if.then17, label %for.inc

if.then17:                                        ; preds = %land.lhs.true
  %idxprom18 = zext i32 %i.0 to i64
  %arrayidx19 = getelementptr inbounds [3 x %struct.uvc_ctrl_fixup], [3 x %struct.uvc_ctrl_fixup]* @uvc_ctrl_fixup_xu_info.fixups, i64 0, i64 %idxprom18
  %flags = getelementptr inbounds %struct.uvc_ctrl_fixup, %struct.uvc_ctrl_fixup* %arrayidx19, i32 0, i32 3
  %6 = load i8, i8* %flags, align 2, !tbaa !480
  %conv20 = zext i8 %6 to i32
  %flags21 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  store i32 %conv20, i32* %flags21, align 4, !tbaa !475
  br label %cleanup.cont

for.inc:                                          ; preds = %land.lhs.true, %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %if.then17, %for.cond
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then17 ], [ 0, %for.cond ]
  ret void
}

declare i32 @usb_match_one_id(%struct.usb_interface*, %struct.usb_device_id*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_resume_device(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc23, %entry
  %list25.sink = phi %struct.list_head* [ %list25, %for.inc23 ], [ %entities, %entry ]
  %next26 = getelementptr inbounds %struct.list_head, %struct.list_head* %list25.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next26, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr28 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr28 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup

for.body:                                         ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %for.inc, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 14
  %3 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp3 = icmp ult i32 %i.0, %3
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  %4 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %4, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %lor.lhs.false, label %for.inc

lor.lhs.false:                                    ; preds = %for.body4
  %modified = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load5 = load i8, i8* %modified, align 1
  %bf.lshr6 = lshr i8 %bf.load5, 2
  %bf.clear7 = and i8 %bf.lshr6, 1
  %tobool8 = icmp ne i8 %bf.clear7, 0
  br i1 %tobool8, label %lor.lhs.false9, label %for.inc

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %flags = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 5
  %5 = load i32, i32* %flags, align 4, !tbaa !438
  %and = and i32 %5, 64
  %cmp10 = icmp eq i32 %and, 0
  br i1 %cmp10, label %for.inc, label %if.end

if.end:                                           ; preds = %lor.lhs.false9
  %info11 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %entity12 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info11, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity12, i32 0, i32 0
  %info13 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %index = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info13, i32 0, i32 2
  %6 = load i8, i8* %index, align 8, !tbaa !481
  %conv = zext i8 %6 to i32
  %info14 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info14, i32 0, i32 3
  %7 = load i8, i8* %selector, align 1, !tbaa !442
  %conv15 = zext i8 %7 to i32
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.2.221, i32 0, i32 0), i8* %arraydecay, i32 %conv, i32 %conv15)
  %dirty = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load16 = load i8, i8* %dirty, align 1
  %bf.clear17 = and i8 %bf.load16, -2
  %bf.set = or i8 %bf.clear17, 1
  store i8 %bf.set, i8* %dirty, align 1
  br label %for.inc

for.inc:                                          ; preds = %if.end, %lor.lhs.false9, %lor.lhs.false, %for.body4
  %inc = add i32 %i.0, 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  %call18 = call i32 @uvc_ctrl_commit_entity(%struct.uvc_device* %dev, %struct.uvc_entity* %2, i32 0)
  %cmp19 = icmp slt i32 %call18, 0
  br i1 %cmp19, label %cleanup, label %for.inc23

for.inc23:                                        ; preds = %for.end
  %list25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

cleanup:                                          ; preds = %for.end, %for.cond
  %retval.0 = phi i32 [ %call18, %for.end ], [ 0, %for.cond ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_add_mapping(%struct.uvc_video_chain* %chain, %struct.uvc_control_mapping* %mapping) #0 {
entry:
  %dev1 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev1, align 8, !tbaa !88
  %id = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %1 = load i32, i32* %id, align 8, !tbaa !304
  %and = and i32 %1, -268435456
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %do.body, label %if.end6

do.body:                                          ; preds = %entry
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and2 = and i32 %2, 4
  %tobool3 = icmp ne i32 %and2, 0
  br i1 %tobool3, label %if.then4, label %cleanup107

if.then4:                                         ; preds = %do.body
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %id5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %3 = load i32, i32* %id5, align 8, !tbaa !304
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.3.224, i32 0, i32 0), i8* %arraydecay, i32 %3)
  br label %cleanup107

if.end6:                                          ; preds = %entry
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc31, %if.end6
  %chain33.sink = phi %struct.list_head* [ %chain33, %for.inc31 ], [ %entities, %if.end6 ]
  %found.0 = phi i32 [ 0, %if.end6 ], [ %found.2, %for.inc31 ]
  %ctrl.0 = phi %struct.uvc_control* [ undef, %if.end6 ], [ %ctrl.3, %for.inc31 ]
  %next34 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain33.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next34, align 8, !tbaa !45
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr36 = getelementptr inbounds i8, i8* %5, i64 -16
  %6 = bitcast i8* %add.ptr36 to %struct.uvc_entity*
  %chain7 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  %entities8 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain7, %entities8
  br i1 %cmp, label %for.body, label %for.end37

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 4
  %7 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %7 to i32
  %and9 = and i32 %conv, 32767
  %cmp10 = icmp ne i32 %and9, 6
  br i1 %cmp10, label %NodeBlock, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body
  %entity12 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 4
  %arraydecay13 = getelementptr inbounds [16 x i8], [16 x i8]* %entity12, i32 0, i32 0
  %call14 = call i32 @uvc_entity_match_guid(%struct.uvc_entity* %6, i8* %arraydecay13)
  %tobool15 = icmp ne i32 %call14, 0
  br i1 %tobool15, label %if.end17, label %NodeBlock

if.end17:                                         ; preds = %lor.lhs.false
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc, %if.end17
  %ctrl.1 = phi %struct.uvc_control* [ %ctrl.0, %if.end17 ], [ %arrayidx, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end17 ], [ %inc, %for.inc ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 14
  %8 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp19 = icmp ult i32 %i.0, %8
  br i1 %cmp19, label %for.body21, label %for.end

for.body21:                                       ; preds = %for.cond18
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 15
  %9 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %9, i64 %idxprom
  %index = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 2
  %10 = load i8, i8* %index, align 8, !tbaa !469
  %conv22 = zext i8 %10 to i32
  %selector = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 5
  %11 = load i8, i8* %selector, align 4, !tbaa !307
  %conv23 = zext i8 %11 to i32
  %sub = sub nsw i32 %conv23, 1
  %cmp24 = icmp eq i32 %conv22, %sub
  br i1 %cmp24, label %for.end, label %for.inc

for.inc:                                          ; preds = %for.body21
  %inc = add i32 %i.0, 1
  br label %for.cond18

for.end:                                          ; preds = %for.body21, %for.cond18
  %found.1 = phi i32 [ 1, %for.body21 ], [ %found.0, %for.cond18 ]
  %ctrl.2 = phi %struct.uvc_control* [ %arrayidx, %for.body21 ], [ %ctrl.1, %for.cond18 ]
  %tobool28 = icmp ne i32 %found.1, 0
  %. = select i1 %tobool28, i32 4, i32 0
  br label %NodeBlock

NodeBlock:                                        ; preds = %for.end, %lor.lhs.false, %for.body
  %found.2 = phi i32 [ %found.0, %lor.lhs.false ], [ %found.0, %for.body ], [ %found.1, %for.end ]
  %ctrl.3 = phi %struct.uvc_control* [ %ctrl.0, %lor.lhs.false ], [ %ctrl.0, %for.body ], [ %ctrl.2, %for.end ]
  %cleanup.dest.slot.0 = phi i32 [ 6, %lor.lhs.false ], [ 6, %for.body ], [ %., %for.end ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 6
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 4
  %or.cond = and i1 %Pivot, %SwitchLeaf
  br i1 %or.cond, label %for.end37, label %for.inc31

for.inc31:                                        ; preds = %NodeBlock
  %chain33 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  br label %for.cond

for.end37:                                        ; preds = %NodeBlock, %for.cond
  %found.3 = phi i32 [ %found.0, %for.cond ], [ %found.2, %NodeBlock ]
  %ctrl.4 = phi %struct.uvc_control* [ %ctrl.0, %for.cond ], [ %ctrl.3, %NodeBlock ]
  %tobool38 = icmp ne i32 %found.3, 0
  br i1 %tobool38, label %if.end40, label %cleanup107

if.end40:                                         ; preds = %for.end37
  %ctrl_mutex = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  %call41 = call i32 @mutex_lock_interruptible_nested(%struct.mutex* %ctrl_mutex, i32 0)
  %tobool42 = icmp ne i32 %call41, 0
  br i1 %tobool42, label %cleanup107, label %if.end44

if.end44:                                         ; preds = %if.end40
  %call45 = call i32 @uvc_ctrl_init_xu_ctrl(%struct.uvc_device* %0, %struct.uvc_control* %ctrl.4)
  %cmp46 = icmp slt i32 %call45, 0
  br i1 %cmp46, label %done, label %if.end49

if.end49:                                         ; preds = %if.end44
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.4, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  br label %for.cond54

for.cond54:                                       ; preds = %for.inc77, %if.end49
  %list79.sink = phi %struct.list_head* [ %list79, %for.inc77 ], [ %mappings, %if.end49 ]
  %next80 = getelementptr inbounds %struct.list_head, %struct.list_head* %list79.sink, i32 0, i32 0
  %12 = load %struct.list_head*, %struct.list_head** %next80, align 8, !tbaa !45
  %13 = bitcast %struct.list_head* %12 to i8*
  %add.ptr82 = getelementptr inbounds i8, i8* %13, i64 0
  %14 = bitcast i8* %add.ptr82 to %struct.uvc_control_mapping*
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 0
  %info55 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.4, i32 0, i32 1
  %mappings56 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info55, i32 0, i32 0
  %cmp57 = icmp ne %struct.list_head* %list, %mappings56
  br i1 %cmp57, label %for.body59, label %for.end83

for.body59:                                       ; preds = %for.cond54
  %id60 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %15 = load i32, i32* %id60, align 8, !tbaa !304
  %id61 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 2
  %16 = load i32, i32* %id61, align 8, !tbaa !304
  %cmp62 = icmp eq i32 %15, %16
  br i1 %cmp62, label %do.body65, label %for.inc77

do.body65:                                        ; preds = %for.body59
  %17 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and66 = and i32 %17, 4
  %tobool67 = icmp ne i32 %and66, 0
  br i1 %tobool67, label %if.then68, label %done

if.then68:                                        ; preds = %do.body65
  %name69 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay70 = getelementptr inbounds [32 x i8], [32 x i8]* %name69, i32 0, i32 0
  %id71 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 2
  %18 = load i32, i32* %id71, align 8, !tbaa !304
  %call72 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.4.225, i32 0, i32 0), i8* %arraydecay70, i32 %18)
  br label %done

for.inc77:                                        ; preds = %for.body59
  %list79 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %14, i32 0, i32 0
  br label %for.cond54

for.end83:                                        ; preds = %for.cond54
  %nmappings = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 8
  %call84 = call i32 @atomic_add_return.226(i32 1, %union.anon.5* %nmappings)
  %cmp85 = icmp sgt i32 %call84, 1024
  br i1 %cmp85, label %if.then87, label %if.end99

if.then87:                                        ; preds = %for.end83
  %nmappings88 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 8
  call void @atomic_dec.227(%union.anon.5* %nmappings88)
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and90 = and i32 %19, 4
  %tobool91 = icmp ne i32 %and90, 0
  br i1 %tobool91, label %if.then92, label %done

if.then92:                                        ; preds = %if.then87
  %name93 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 3
  %arraydecay94 = getelementptr inbounds [32 x i8], [32 x i8]* %name93, i32 0, i32 0
  %call95 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([75 x i8], [75 x i8]* @.str.5.228, i32 0, i32 0), i8* %arraydecay94, i32 1024)
  br label %done

if.end99:                                         ; preds = %for.end83
  %call100 = call i32 @__uvc_ctrl_add_mapping(%struct.uvc_control* %ctrl.4, %struct.uvc_control_mapping* %mapping)
  %cmp101 = icmp slt i32 %call100, 0
  br i1 %cmp101, label %if.then103, label %done

if.then103:                                       ; preds = %if.end99
  %nmappings104 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 8
  call void @atomic_dec.227(%union.anon.5* %nmappings104)
  br label %done

done:                                             ; preds = %if.then103, %if.end99, %if.then92, %if.then87, %if.then68, %do.body65, %if.end44
  %ret.0 = phi i32 [ -2, %if.end44 ], [ -17, %if.then68 ], [ -17, %do.body65 ], [ -12, %if.then92 ], [ -12, %if.then87 ], [ %call100, %if.then103 ], [ %call100, %if.end99 ]
  %ctrl_mutex106 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %ctrl_mutex106)
  br label %cleanup107

cleanup107:                                       ; preds = %done, %if.end40, %for.end37, %if.then4, %do.body
  %retval.0 = phi i32 [ %ret.0, %done ], [ -22, %if.then4 ], [ -22, %do.body ], [ -2, %for.end37 ], [ -512, %if.end40 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_entity_match_guid(%struct.uvc_entity* %entity, i8* %guid) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %Pivot8 = icmp slt i32 %and, 513
  br i1 %Pivot8, label %NodeBlock, label %NodeBlock5

NodeBlock5:                                       ; preds = %entry
  %Pivot6 = icmp slt i32 %and, 514
  br i1 %Pivot6, label %sw.bb, label %LeafBlock3

LeafBlock3:                                       ; preds = %NodeBlock5
  %SwitchLeaf4 = icmp eq i32 %and, 514
  br i1 %SwitchLeaf4, label %sw.bb2, label %return

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %and, 6
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %and, 6
  br i1 %SwitchLeaf2, label %sw.bb10, label %return

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %and, 5
  br i1 %SwitchLeaf, label %sw.bb6, label %return

sw.bb:                                            ; preds = %NodeBlock5
  %call = call i32 @memcmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_camera_guid, i32 0, i32 0), i8* %guid, i64 16)
  %cmp = icmp eq i32 %call, 0
  %conv1 = zext i1 %cmp to i32
  br label %return

sw.bb2:                                           ; preds = %LeafBlock3
  %call3 = call i32 @memcmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_media_transport_input_guid, i32 0, i32 0), i8* %guid, i64 16)
  %cmp4 = icmp eq i32 %call3, 0
  %conv5 = zext i1 %cmp4 to i32
  br label %return

sw.bb6:                                           ; preds = %LeafBlock
  %call7 = call i32 @memcmp(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @uvc_processing_guid, i32 0, i32 0), i8* %guid, i64 16)
  %cmp8 = icmp eq i32 %call7, 0
  %conv9 = zext i1 %cmp8 to i32
  br label %return

sw.bb10:                                          ; preds = %LeafBlock1
  %1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 11
  %extension = bitcast %union.anon.63* %1 to %struct.anon.69*
  %guidExtensionCode = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 0
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %guidExtensionCode, i32 0, i32 0
  %call11 = call i32 @memcmp(i8* %arraydecay, i8* %guid, i64 16)
  %cmp12 = icmp eq i32 %call11, 0
  %conv13 = zext i1 %cmp12 to i32
  br label %return

return:                                           ; preds = %sw.bb10, %sw.bb6, %sw.bb2, %sw.bb, %LeafBlock, %LeafBlock1, %LeafBlock3
  %retval.0 = phi i32 [ %conv9, %sw.bb6 ], [ %conv13, %sw.bb10 ], [ %conv1, %sw.bb ], [ %conv5, %sw.bb2 ], [ 0, %LeafBlock ], [ 0, %LeafBlock1 ], [ 0, %LeafBlock3 ]
  ret i32 %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @atomic_add_return.226(i32 %i, %union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  %0 = call i32 asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; xaddl $0, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32 %i, i32* %counter) #8, !srcloc !482
  %add = add nsw i32 %i, %0
  ret i32 %add
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @atomic_dec.227(%union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %counter, i32* %counter) #8, !srcloc !483
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @__uvc_ctrl_add_mapping(%struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping) #0 {
entry:
  %0 = bitcast %struct.uvc_control_mapping* %mapping to i8*
  %call = call i8* @kmemdup(i8* %0, i64 144, i32 208)
  %1 = bitcast i8* %call to %struct.uvc_control_mapping*
  %cmp = icmp eq %struct.uvc_control_mapping* %1, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %ev_subs = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 1
  call void @INIT_LIST_HEAD.212(%struct.list_head* %ev_subs)
  %menu_count = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 11
  %2 = load i32, i32* %menu_count, align 8, !tbaa !317
  %conv = zext i32 %2 to i64
  %mul = mul i64 36, %conv
  %conv1 = trunc i64 %mul to i32
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 10
  %3 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  %4 = bitcast %struct.uvc_menu_info* %3 to i8*
  %conv2 = zext i32 %conv1 to i64
  %call3 = call i8* @kmemdup(i8* %4, i64 %conv2, i32 208)
  %5 = bitcast i8* %call3 to %struct.uvc_menu_info*
  %menu_info4 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 10
  store %struct.uvc_menu_info* %5, %struct.uvc_menu_info** %menu_info4, align 8, !tbaa !316
  %menu_info5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 10
  %6 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info5, align 8, !tbaa !316
  %cmp6 = icmp eq %struct.uvc_menu_info* %6, null
  br i1 %cmp6, label %if.then8, label %if.end9

if.then8:                                         ; preds = %if.end
  %7 = bitcast %struct.uvc_control_mapping* %1 to i8*
  call void @kfree(i8* %7)
  br label %cleanup

if.end9:                                          ; preds = %if.end
  %get = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 15
  %8 = load i32 (%struct.uvc_control_mapping*, i8, i8*)*, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get, align 8, !tbaa !444
  %cmp10 = icmp eq i32 (%struct.uvc_control_mapping*, i8, i8*)* %8, null
  br i1 %cmp10, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end9
  %get13 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 15
  store i32 (%struct.uvc_control_mapping*, i8, i8*)* @uvc_get_le_value, i32 (%struct.uvc_control_mapping*, i8, i8*)** %get13, align 8, !tbaa !444
  br label %if.end14

if.end14:                                         ; preds = %if.then12, %if.end9
  %set = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 16
  %9 = load void (%struct.uvc_control_mapping*, i32, i8*)*, void (%struct.uvc_control_mapping*, i32, i8*)** %set, align 8, !tbaa !467
  %cmp15 = icmp eq void (%struct.uvc_control_mapping*, i32, i8*)* %9, null
  br i1 %cmp15, label %if.then17, label %if.end19

if.then17:                                        ; preds = %if.end14
  %set18 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 16
  store void (%struct.uvc_control_mapping*, i32, i8*)* @uvc_set_le_value, void (%struct.uvc_control_mapping*, i32, i8*)** %set18, align 8, !tbaa !467
  br label %if.end19

if.end19:                                         ; preds = %if.then17, %if.end14
  %list = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 0
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  call void @list_add_tail.186(%struct.list_head* %list, %struct.list_head* %mappings)
  %10 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %10, 4
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then20, label %cleanup

if.then20:                                        ; preds = %if.end19
  %name = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %1, i32 0, i32 3
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %info21 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %entity = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info21, i32 0, i32 1
  %arraydecay22 = getelementptr inbounds [16 x i8], [16 x i8]* %entity, i32 0, i32 0
  %info23 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info23, i32 0, i32 3
  %11 = load i8, i8* %selector, align 1, !tbaa !442
  %conv24 = zext i8 %11 to i32
  %call25 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.15.229, i32 0, i32 0), i8* %arraydecay, i8* %arraydecay22, i32 %conv24)
  br label %cleanup

cleanup:                                          ; preds = %if.then20, %if.end19, %if.then8, %entry
  %retval.0 = phi i32 [ -12, %if.then8 ], [ -12, %entry ], [ 0, %if.then20 ], [ 0, %if.end19 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_get_le_value(%struct.uvc_control_mapping* %mapping, i8 zeroext %query, i8* %data) #0 {
entry:
  %size = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %0 = load i8, i8* %size, align 1, !tbaa !309
  %conv = zext i8 %0 to i32
  %offset1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %1 = load i8, i8* %offset1, align 2, !tbaa !311
  %conv2 = zext i8 %1 to i32
  %div = sdiv i32 %conv2, 8
  %idx.ext = sext i32 %div to i64
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %idx.ext
  %and = and i32 %conv2, 7
  %sh_prom = zext i32 %conv to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub nsw i64 %shl, 1
  %sh_prom3 = zext i32 %and to i64
  %shl4 = shl i64 %sub, %sh_prom3
  %conv5 = trunc i64 %shl4 to i8
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %offset.0 = phi i32 [ %and, %entry ], [ %sub25, %for.body ]
  %bits.0 = phi i32 [ %conv, %entry ], [ %sub24, %for.body ]
  %data.addr.0 = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %value.0 = phi i32 [ 0, %entry ], [ %or, %for.body ]
  %mask.0 = phi i8 [ %conv5, %entry ], [ %conv28, %for.body ]
  %cmp = icmp sgt i32 %bits.0, 0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %2 = load i8, i8* %data.addr.0, align 1, !tbaa !61
  %conv7 = zext i8 %2 to i32
  %conv8 = zext i8 %mask.0 to i32
  %and9 = and i32 %conv7, %conv8
  %conv10 = trunc i32 %and9 to i8
  %cmp11 = icmp sgt i32 %offset.0, 0
  %conv13 = zext i8 %conv10 to i32
  %shr = ashr i32 %conv13, %offset.0
  %sub15 = sub nsw i32 0, %offset.0
  %shl16 = shl i32 %conv13, %sub15
  %cond = select i1 %cmp11, i32 %shr, i32 %shl16
  %or = or i32 %value.0, %cond
  %cmp17 = icmp sgt i32 %offset.0, 0
  %offset.0. = select i1 %cmp17, i32 %offset.0, i32 0
  %sub23 = sub nsw i32 8, %offset.0.
  %sub24 = sub nsw i32 %bits.0, %sub23
  %sub25 = sub nsw i32 %offset.0, 8
  %shl26 = shl i32 1, %sub24
  %sub27 = sub nsw i32 %shl26, 1
  %conv28 = trunc i32 %sub27 to i8
  %incdec.ptr = getelementptr inbounds i8, i8* %data.addr.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %data_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 9
  %3 = load i32, i32* %data_type, align 4, !tbaa !315
  %cmp29 = icmp eq i32 %3, 1
  br i1 %cmp29, label %if.then, label %if.end

if.then:                                          ; preds = %for.end
  %size31 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %4 = load i8, i8* %size31, align 1, !tbaa !309
  %conv32 = zext i8 %4 to i32
  %sub33 = sub nsw i32 %conv32, 1
  %shl34 = shl i32 1, %sub33
  %and35 = and i32 %value.0, %shl34
  %sub36 = sub nsw i32 0, %and35
  %or37 = or i32 %value.0, %sub36
  br label %if.end

if.end:                                           ; preds = %if.then, %for.end
  %value.1 = phi i32 [ %or37, %if.then ], [ %value.0, %for.end ]
  ret i32 %value.1
}

; Function Attrs: nounwind uwtable
define internal void @uvc_set_le_value(%struct.uvc_control_mapping* %mapping, i32 %value, i8* %data) #0 {
entry:
  %size = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 6
  %0 = load i8, i8* %size, align 1, !tbaa !309
  %conv = zext i8 %0 to i32
  %offset1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 7
  %1 = load i8, i8* %offset1, align 2, !tbaa !311
  %conv2 = zext i8 %1 to i32
  %v4l2_type = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping, i32 0, i32 8
  %2 = load i32, i32* %v4l2_type, align 8, !tbaa !313
  %cmp = icmp eq i32 %2, 4
  %.value = select i1 %cmp, i32 -1, i32 %value
  %div = sdiv i32 %conv2, 8
  %idx.ext = sext i32 %div to i64
  %add.ptr = getelementptr inbounds i8, i8* %data, i64 %idx.ext
  %and = and i32 %conv2, 7
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %bits.0 = phi i32 [ %conv, %entry ], [ %sub17, %for.body ]
  %data.addr.0 = phi i8* [ %add.ptr, %entry ], [ %incdec.ptr, %for.body ]
  %value.addr.1 = phi i32 [ %.value, %entry ], [ %shr, %for.body ]
  %offset.0 = phi i32 [ %and, %entry ], [ 0, %for.body ]
  %cmp4 = icmp sgt i32 %bits.0, 0
  br i1 %cmp4, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %sh_prom = zext i32 %bits.0 to i64
  %shl = shl i64 1, %sh_prom
  %sub = sub nsw i64 %shl, 1
  %sh_prom6 = zext i32 %offset.0 to i64
  %shl7 = shl i64 %sub, %sh_prom6
  %conv8 = trunc i64 %shl7 to i8
  %3 = load i8, i8* %data.addr.0, align 1, !tbaa !61
  %conv9 = zext i8 %3 to i32
  %conv10 = zext i8 %conv8 to i32
  %neg = xor i32 %conv10, -1
  %and11 = and i32 %conv9, %neg
  %shl12 = shl i32 %value.addr.1, %offset.0
  %conv13 = zext i8 %conv8 to i32
  %and14 = and i32 %shl12, %conv13
  %or = or i32 %and11, %and14
  %conv15 = trunc i32 %or to i8
  store i8 %conv15, i8* %data.addr.0, align 1, !tbaa !61
  %tobool = icmp ne i32 %offset.0, 0
  %offset.0. = select i1 %tobool, i32 %offset.0, i32 8
  %shr = ashr i32 %value.addr.1, %offset.0.
  %sub16 = sub nsw i32 8, %offset.0
  %sub17 = sub nsw i32 %bits.0, %sub16
  %incdec.ptr = getelementptr inbounds i8, i8* %data.addr.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_ctrl_init_device(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.inc60, %entry
  %list62.sink = phi %struct.list_head* [ %list62, %for.inc60 ], [ %entities, %entry ]
  %retval.0 = phi i32 [ undef, %entry ], [ %retval.1, %for.inc60 ]
  %next63 = getelementptr inbounds %struct.list_head, %struct.list_head* %list62.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next63, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr65 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr65 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %cleanup67

for.body:                                         ; preds = %for.cond
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %3 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %3 to i32
  %and = and i32 %conv, 32767
  %cmp2 = icmp eq i32 %and, 6
  br i1 %cmp2, label %if.then, label %if.else

if.then:                                          ; preds = %for.body
  %4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %extension = bitcast %union.anon.63* %4 to %struct.anon.69*
  %bmControls4 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension, i32 0, i32 3
  %5 = load i8*, i8** %bmControls4, align 8, !tbaa !61
  %6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %extension5 = bitcast %union.anon.63* %6 to %struct.anon.69*
  %bControlSize6 = getelementptr inbounds %struct.anon.69, %struct.anon.69* %extension5, i32 0, i32 2
  %7 = load i8, i8* %bControlSize6, align 1, !tbaa !61
  %conv7 = zext i8 %7 to i32
  br label %if.end30

if.else:                                          ; preds = %for.body
  %type8 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %8 = load i16, i16* %type8, align 2, !tbaa !85
  %conv9 = zext i16 %8 to i32
  %and10 = and i32 %conv9, 32767
  %cmp11 = icmp eq i32 %and10, 5
  br i1 %cmp11, label %if.then13, label %if.else18

if.then13:                                        ; preds = %if.else
  %9 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %processing = bitcast %union.anon.63* %9 to %struct.anon.67*
  %bmControls14 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing, i32 0, i32 2
  %10 = load i8*, i8** %bmControls14, align 8, !tbaa !61
  %11 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %processing15 = bitcast %union.anon.63* %11 to %struct.anon.67*
  %bControlSize16 = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing15, i32 0, i32 1
  %12 = load i8, i8* %bControlSize16, align 2, !tbaa !61
  %conv17 = zext i8 %12 to i32
  br label %if.end30

if.else18:                                        ; preds = %if.else
  %type19 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 4
  %13 = load i16, i16* %type19, align 2, !tbaa !85
  %conv20 = zext i16 %13 to i32
  %and21 = and i32 %conv20, 32767
  %cmp22 = icmp eq i32 %and21, 513
  br i1 %cmp22, label %if.then24, label %if.end30

if.then24:                                        ; preds = %if.else18
  %14 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %camera = bitcast %union.anon.63* %14 to %struct.anon.64*
  %bmControls25 = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera, i32 0, i32 4
  %15 = load i8*, i8** %bmControls25, align 8, !tbaa !61
  %16 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 11
  %camera26 = bitcast %union.anon.63* %16 to %struct.anon.64*
  %bControlSize27 = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera26, i32 0, i32 3
  %17 = load i8, i8* %bControlSize27, align 2, !tbaa !61
  %conv28 = zext i8 %17 to i32
  br label %if.end30

if.end30:                                         ; preds = %if.then24, %if.else18, %if.then13, %if.then
  %bControlSize.2 = phi i32 [ %conv7, %if.then ], [ %conv17, %if.then13 ], [ %conv28, %if.then24 ], [ 0, %if.else18 ]
  %bmControls.2 = phi i8* [ %5, %if.then ], [ %10, %if.then13 ], [ %15, %if.then24 ], [ null, %if.else18 ]
  call void @uvc_ctrl_prune_entity(%struct.uvc_device* %dev, %struct.uvc_entity* %2)
  %conv31 = zext i32 %bControlSize.2 to i64
  %call = call i64 @memweight(i8* %bmControls.2, i64 %conv31)
  %conv32 = trunc i64 %call to i32
  %cmp33 = icmp eq i32 %conv32, 0
  br i1 %cmp33, label %NodeBlock, label %if.end36

if.end36:                                         ; preds = %if.end30
  %conv37 = zext i32 %conv32 to i64
  %call38 = call i8* @kcalloc(i64 %conv37, i64 64, i32 208)
  %18 = bitcast i8* %call38 to %struct.uvc_control*
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  store %struct.uvc_control* %18, %struct.uvc_control** %controls, align 8, !tbaa !461
  %controls39 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  %19 = load %struct.uvc_control*, %struct.uvc_control** %controls39, align 8, !tbaa !461
  %cmp40 = icmp eq %struct.uvc_control* %19, null
  br i1 %cmp40, label %NodeBlock, label %if.end43

if.end43:                                         ; preds = %if.end36
  %ncontrols44 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 14
  store i32 %conv32, i32* %ncontrols44, align 8, !tbaa !460
  %controls45 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  %20 = load %struct.uvc_control*, %struct.uvc_control** %controls45, align 8, !tbaa !461
  br label %for.cond46

for.cond46:                                       ; preds = %for.inc, %if.end43
  %ctrl.0 = phi %struct.uvc_control* [ %20, %if.end43 ], [ %ctrl.1, %for.inc ]
  %i.0 = phi i32 [ 0, %if.end43 ], [ %inc, %for.inc ]
  %mul = mul i32 %bControlSize.2, 8
  %cmp47 = icmp ult i32 %i.0, %mul
  br i1 %cmp47, label %for.body49, label %NodeBlock

for.body49:                                       ; preds = %for.cond46
  %call50 = call i32 @uvc_test_bit(i8* %bmControls.2, i32 %i.0)
  %cmp51 = icmp eq i32 %call50, 0
  br i1 %cmp51, label %for.inc, label %if.end54

if.end54:                                         ; preds = %for.body49
  %entity55 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.0, i32 0, i32 0
  store %struct.uvc_entity* %2, %struct.uvc_entity** %entity55, align 8, !tbaa !441
  %conv56 = trunc i32 %i.0 to i8
  %index = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.0, i32 0, i32 2
  store i8 %conv56, i8* %index, align 8, !tbaa !469
  call void @uvc_ctrl_init_ctrl(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl.0)
  %incdec.ptr = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl.0, i32 1
  br label %for.inc

for.inc:                                          ; preds = %if.end54, %for.body49
  %ctrl.1 = phi %struct.uvc_control* [ %incdec.ptr, %if.end54 ], [ %ctrl.0, %for.body49 ]
  %inc = add i32 %i.0, 1
  br label %for.cond46

NodeBlock:                                        ; preds = %for.cond46, %if.end36, %if.end30
  %cleanup.dest.slot.0 = phi i32 [ 4, %if.end30 ], [ 1, %if.end36 ], [ 0, %for.cond46 ]
  %retval.1 = phi i32 [ %retval.0, %if.end30 ], [ -12, %if.end36 ], [ %retval.0, %for.cond46 ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 4
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest.slot.0, 4
  br i1 %SwitchLeaf2, label %for.inc60, label %cleanup67

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %for.inc60, label %cleanup67

for.inc60:                                        ; preds = %LeafBlock, %LeafBlock1
  %list62 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

cleanup67:                                        ; preds = %LeafBlock, %LeafBlock1, %for.cond
  %retval.2 = phi i32 [ 0, %for.cond ], [ %retval.1, %LeafBlock1 ], [ %retval.1, %LeafBlock ]
  ret i32 %retval.2
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_prune_entity(%struct.uvc_device* %dev, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %Pivot = icmp slt i32 %and, 513
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %entry
  %SwitchLeaf2 = icmp eq i32 %and, 513
  br i1 %SwitchLeaf2, label %sw.bb3, label %cleanup.cont

LeafBlock:                                        ; preds = %entry
  %SwitchLeaf = icmp eq i32 %and, 5
  br i1 %SwitchLeaf, label %sw.bb, label %cleanup.cont

sw.bb:                                            ; preds = %LeafBlock
  %1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 11
  %processing = bitcast %union.anon.63* %1 to %struct.anon.67*
  %bmControls = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing, i32 0, i32 2
  %2 = load i8*, i8** %bmControls, align 8, !tbaa !61
  %3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 11
  %processing1 = bitcast %union.anon.63* %3 to %struct.anon.67*
  %bControlSize = getelementptr inbounds %struct.anon.67, %struct.anon.67* %processing1, i32 0, i32 1
  br label %sw.epilog

sw.bb3:                                           ; preds = %LeafBlock1
  %4 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 11
  %camera = bitcast %union.anon.63* %4 to %struct.anon.64*
  %bmControls4 = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera, i32 0, i32 4
  %5 = load i8*, i8** %bmControls4, align 8, !tbaa !61
  %6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 11
  %camera5 = bitcast %union.anon.63* %6 to %struct.anon.64*
  %bControlSize6 = getelementptr inbounds %struct.anon.64, %struct.anon.64* %camera5, i32 0, i32 3
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb3, %sw.bb
  %bControlSize6.sink = phi i8* [ %bControlSize6, %sw.bb3 ], [ %bControlSize, %sw.bb ]
  %count.0 = phi i32 [ 3, %sw.bb ], [ 1, %sw.bb3 ]
  %blacklist.0 = phi %struct.uvc_ctrl_blacklist* [ getelementptr inbounds ([3 x %struct.uvc_ctrl_blacklist], [3 x %struct.uvc_ctrl_blacklist]* @uvc_ctrl_prune_entity.processing_blacklist, i32 0, i32 0), %sw.bb ], [ getelementptr inbounds ([1 x %struct.uvc_ctrl_blacklist], [1 x %struct.uvc_ctrl_blacklist]* @uvc_ctrl_prune_entity.camera_blacklist, i32 0, i32 0), %sw.bb3 ]
  %controls.0 = phi i8* [ %2, %sw.bb ], [ %5, %sw.bb3 ]
  %7 = load i8, i8* %bControlSize6.sink, align 2, !tbaa !61
  %conv7 = zext i8 %7 to i32
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %i.0 = phi i32 [ 0, %sw.epilog ], [ %inc, %for.inc ]
  %cmp = icmp ult i32 %i.0, %count.0
  br i1 %cmp, label %for.body, label %cleanup.cont

for.body:                                         ; preds = %for.cond
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %8 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom
  %id = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx, i32 0, i32 0
  %call = call i32 @usb_match_one_id(%struct.usb_interface* %8, %struct.usb_device_id* %id)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.end, label %for.inc

if.end:                                           ; preds = %for.body
  %idxprom9 = zext i32 %i.0 to i64
  %arrayidx10 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom9
  %index = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx10, i32 0, i32 1
  %9 = load i8, i8* %index, align 8, !tbaa !484
  %conv11 = zext i8 %9 to i32
  %mul = mul i32 8, %conv7
  %cmp12 = icmp uge i32 %conv11, %mul
  br i1 %cmp12, label %for.inc, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end
  %idxprom14 = zext i32 %i.0 to i64
  %arrayidx15 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom14
  %index16 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx15, i32 0, i32 1
  %10 = load i8, i8* %index16, align 8, !tbaa !484
  %conv17 = zext i8 %10 to i32
  %call18 = call i32 @uvc_test_bit(i8* %controls.0, i32 %conv17)
  %tobool19 = icmp ne i32 %call18, 0
  br i1 %tobool19, label %do.body, label %for.inc

do.body:                                          ; preds = %lor.lhs.false
  %11 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and22 = and i32 %11, 4
  %tobool23 = icmp ne i32 %and22, 0
  br i1 %tobool23, label %if.then24, label %do.end

if.then24:                                        ; preds = %do.body
  %id25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 3
  %12 = load i8, i8* %id25, align 4, !tbaa !91
  %conv26 = zext i8 %12 to i32
  %idxprom27 = zext i32 %i.0 to i64
  %arrayidx28 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom27
  %index29 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx28, i32 0, i32 1
  %13 = load i8, i8* %index29, align 8, !tbaa !484
  %conv30 = zext i8 %13 to i32
  %call31 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.16.232, i32 0, i32 0), i32 %conv26, i32 %conv30)
  br label %do.end

do.end:                                           ; preds = %if.then24, %do.body
  %idxprom33 = zext i32 %i.0 to i64
  %arrayidx34 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %blacklist.0, i64 %idxprom33
  %index35 = getelementptr inbounds %struct.uvc_ctrl_blacklist, %struct.uvc_ctrl_blacklist* %arrayidx34, i32 0, i32 1
  %14 = load i8, i8* %index35, align 8, !tbaa !484
  %conv36 = zext i8 %14 to i32
  call void @uvc_clear_bit(i8* %controls.0, i32 %conv36)
  br label %for.inc

for.inc:                                          ; preds = %do.end, %lor.lhs.false, %if.end, %for.body
  %inc = add i32 %i.0, 1
  br label %for.cond

cleanup.cont:                                     ; preds = %for.cond, %LeafBlock, %LeafBlock1
  %cleanup.dest.slot.0 = phi i32 [ 1, %LeafBlock ], [ 1, %LeafBlock1 ], [ 0, %for.cond ]
  ret void
}

declare i64 @memweight(i8*, i64) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kcalloc(i64 %n, i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc_array(i64 %n, i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @uvc_test_bit(i8* %data, i32 %bit) #1 {
entry:
  %shr = ashr i32 %bit, 3
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %0 to i32
  %and = and i32 %bit, 7
  %shr1 = ashr i32 %conv, %and
  %and2 = and i32 %shr1, 1
  ret i32 %and2
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_init_ctrl(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl) #0 {
entry:
  %add.ptr = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* getelementptr inbounds ([35 x %struct.uvc_control_info], [35 x %struct.uvc_control_info]* @uvc_ctrls, i32 0, i32 0), i64 35
  %add.ptr1 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* getelementptr inbounds ([27 x %struct.uvc_control_mapping], [27 x %struct.uvc_control_mapping]* @uvc_ctrl_mappings, i32 0, i32 0), i64 27
  %entity = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %0 = load %struct.uvc_entity*, %struct.uvc_entity** %entity, align 8, !tbaa !441
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %0, i32 0, i32 4
  %1 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %1 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp eq i32 %and, 6
  br i1 %cmp, label %cleanup.cont, label %if.end

if.end:                                           ; preds = %entry
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %info.0 = phi %struct.uvc_control_info* [ getelementptr inbounds ([35 x %struct.uvc_control_info], [35 x %struct.uvc_control_info]* @uvc_ctrls, i32 0, i32 0), %if.end ], [ %incdec.ptr, %for.inc ]
  %cmp3 = icmp ult %struct.uvc_control_info* %info.0, %add.ptr
  br i1 %cmp3, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %entity5 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %2 = load %struct.uvc_entity*, %struct.uvc_entity** %entity5, align 8, !tbaa !441
  %entity6 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %entity6, i32 0, i32 0
  %call = call i32 @uvc_entity_match_guid(%struct.uvc_entity* %2, i8* %arraydecay)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %land.lhs.true, label %for.inc

land.lhs.true:                                    ; preds = %for.body
  %index = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 2
  %3 = load i8, i8* %index, align 8, !tbaa !469
  %conv7 = zext i8 %3 to i32
  %index8 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 0, i32 2
  %4 = load i8, i8* %index8, align 8, !tbaa !473
  %conv9 = zext i8 %4 to i32
  %cmp10 = icmp eq i32 %conv7, %conv9
  br i1 %cmp10, label %if.then12, label %for.inc

if.then12:                                        ; preds = %land.lhs.true
  %call13 = call i32 @uvc_ctrl_add_info(%struct.uvc_device* %dev, %struct.uvc_control* %ctrl, %struct.uvc_control_info* %info.0)
  br label %for.end

for.inc:                                          ; preds = %land.lhs.true, %for.body
  %incdec.ptr = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info.0, i32 1
  br label %for.cond

for.end:                                          ; preds = %if.then12, %for.cond
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool15 = icmp ne i8 %bf.clear, 0
  br i1 %tobool15, label %if.end17, label %cleanup.cont

if.end17:                                         ; preds = %for.end
  br label %for.cond18

for.cond18:                                       ; preds = %for.inc37, %if.end17
  %mapping.0 = phi %struct.uvc_control_mapping* [ getelementptr inbounds ([27 x %struct.uvc_control_mapping], [27 x %struct.uvc_control_mapping]* @uvc_ctrl_mappings, i32 0, i32 0), %if.end17 ], [ %incdec.ptr38, %for.inc37 ]
  %cmp19 = icmp ult %struct.uvc_control_mapping* %mapping.0, %add.ptr1
  br i1 %cmp19, label %for.body21, label %cleanup.cont

for.body21:                                       ; preds = %for.cond18
  %entity22 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 0
  %5 = load %struct.uvc_entity*, %struct.uvc_entity** %entity22, align 8, !tbaa !441
  %entity23 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 4
  %arraydecay24 = getelementptr inbounds [16 x i8], [16 x i8]* %entity23, i32 0, i32 0
  %call25 = call i32 @uvc_entity_match_guid(%struct.uvc_entity* %5, i8* %arraydecay24)
  %tobool26 = icmp ne i32 %call25, 0
  br i1 %tobool26, label %land.lhs.true27, label %for.inc37

land.lhs.true27:                                  ; preds = %for.body21
  %info28 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %selector = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info28, i32 0, i32 3
  %6 = load i8, i8* %selector, align 1, !tbaa !442
  %conv29 = zext i8 %6 to i32
  %selector30 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 5
  %7 = load i8, i8* %selector30, align 4, !tbaa !307
  %conv31 = zext i8 %7 to i32
  %cmp32 = icmp eq i32 %conv29, %conv31
  br i1 %cmp32, label %if.then34, label %for.inc37

if.then34:                                        ; preds = %land.lhs.true27
  %8 = call i32 @__uvc_ctrl_add_mapping(%struct.uvc_control* %ctrl, %struct.uvc_control_mapping* %mapping.0)
  br label %for.inc37

for.inc37:                                        ; preds = %if.then34, %land.lhs.true27, %for.body21
  %incdec.ptr38 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 1
  br label %for.cond18

cleanup.cont:                                     ; preds = %for.cond18, %for.end, %entry
  %cleanup.dest.slot.0 = phi i32 [ 1, %entry ], [ 1, %for.end ], [ 0, %for.cond18 ]
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_ctrl_get_zoom(%struct.uvc_control_mapping* %mapping, i8 zeroext %query, i8* %data) #0 {
entry:
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %query to i32
  %Pivot6 = icmp slt i32 %conv, 130
  %SwitchLeaf = icmp eq i32 %conv, 129
  %or.cond = and i1 %Pivot6, %SwitchLeaf
  br i1 %or.cond, label %sw.bb, label %sw.default

sw.bb:                                            ; preds = %entry
  %conv1 = sext i8 %0 to i32
  %cmp = icmp eq i32 %conv1, 0
  br i1 %cmp, label %cleanup, label %cond.false

cond.false:                                       ; preds = %sw.bb
  %conv3 = sext i8 %0 to i32
  %cmp4 = icmp sgt i32 %conv3, 0
  %arrayidx7 = getelementptr inbounds i8, i8* %data, i64 2
  %1 = load i8, i8* %arrayidx7, align 1, !tbaa !61
  %conv8 = zext i8 %1 to i32
  %sub = sub nsw i32 0, %conv8
  %cond = select i1 %cmp4, i32 %conv8, i32 %sub
  br label %cleanup

sw.default:                                       ; preds = %entry
  %arrayidx15 = getelementptr inbounds i8, i8* %data, i64 2
  %2 = load i8, i8* %arrayidx15, align 1, !tbaa !61
  %conv16 = zext i8 %2 to i32
  br label %cleanup

cleanup:                                          ; preds = %sw.default, %cond.false, %sw.bb
  %retval.0 = phi i32 [ %conv16, %sw.default ], [ 0, %sw.bb ], [ %cond, %cond.false ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_set_zoom(%struct.uvc_control_mapping* %mapping, i32 %value, i8* %data) #0 {
entry:
  %_min1 = alloca i32, align 4
  %_min2 = alloca i32, align 4
  %cmp = icmp eq i32 %value, 0
  br i1 %cmp, label %cond.end, label %cond.false

cond.false:                                       ; preds = %entry
  %cmp1 = icmp sgt i32 %value, 0
  %0 = zext i1 %cmp1 to i64
  %cond = select i1 %cmp1, i32 1, i32 255
  br label %cond.end

cond.end:                                         ; preds = %cond.false, %entry
  %cond2 = phi i32 [ %cond, %cond.false ], [ 0, %entry ]
  %conv = trunc i32 %cond2 to i8
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 0
  store i8 %conv, i8* %arrayidx, align 1, !tbaa !61
  %1 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %1) #8
  %cmp3 = icmp slt i32 %value, 0
  %sub = sub nsw i32 0, %value
  %cond8 = select i1 %cmp3, i32 %sub, i32 %value
  %conv9 = sext i32 %cond8 to i64
  %conv10 = trunc i64 %conv9 to i32
  store i32 %conv10, i32* %_min1, align 4, !tbaa !2
  %2 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %2) #8
  store i32 255, i32* %_min2, align 4, !tbaa !2
  %cmp11 = icmp eq i32* %_min1, %_min2
  %conv12 = zext i1 %cmp11 to i32
  %3 = load i32, i32* %_min1, align 4, !tbaa !2
  %4 = load i32, i32* %_min2, align 4, !tbaa !2
  %cmp14 = icmp slt i32 %3, %4
  %5 = load i32, i32* %_min1, align 4
  %6 = load i32, i32* %_min2, align 4
  %cond19 = select i1 %cmp14, i32 %5, i32 %6
  %7 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %7) #8
  %8 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %8) #8
  %conv20 = trunc i32 %cond19 to i8
  %arrayidx21 = getelementptr inbounds i8, i8* %data, i64 2
  store i8 %conv20, i8* %arrayidx21, align 1, !tbaa !61
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kmalloc_array(i64 %n, i64 %size, i32 %flags) #1 {
entry:
  %cmp = icmp ne i64 %size, 0
  br i1 %cmp, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %entry
  %div = udiv i64 -1, %size
  %cmp1 = icmp ugt i64 %n, %div
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %land.lhs.true, %entry
  %mul = mul i64 %n, %size
  %call = call i8* @__kmalloc(i64 %mul, i32 %flags)
  br label %return

return:                                           ; preds = %if.end, %land.lhs.true
  %retval.0 = phi i8* [ %call, %if.end ], [ null, %land.lhs.true ]
  ret i8* %retval.0
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @uvc_clear_bit(i8* %data, i32 %bit) #1 {
entry:
  %and = and i32 %bit, 7
  %shl = shl i32 1, %and
  %neg = xor i32 %shl, -1
  %shr = ashr i32 %bit, 3
  %idxprom = sext i32 %shr to i64
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 %idxprom
  %0 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %0 to i32
  %and1 = and i32 %conv, %neg
  %conv2 = trunc i32 %and1 to i8
  store i8 %conv2, i8* %arrayidx, align 1, !tbaa !61
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_ctrl_cleanup_device(%struct.uvc_device* %dev) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  br label %for.cond

for.cond:                                         ; preds = %for.end, %entry
  %list8.sink = phi %struct.list_head* [ %list8, %for.end ], [ %entities, %entry ]
  %next9 = getelementptr inbounds %struct.list_head, %struct.list_head* %list8.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next9, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr11 = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr11 to %struct.uvc_entity*
  %list = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  %entities1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 13
  %cmp = icmp ne %struct.list_head* %list, %entities1
  br i1 %cmp, label %for.body, label %for.end12

for.body:                                         ; preds = %for.cond
  br label %for.cond2

for.cond2:                                        ; preds = %LeafBlock, %for.body
  %i.0 = phi i32 [ 0, %for.body ], [ %inc, %LeafBlock ]
  %ncontrols = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 14
  %3 = load i32, i32* %ncontrols, align 8, !tbaa !460
  %cmp3 = icmp ult i32 %i.0, %3
  %controls = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 15
  %4 = load %struct.uvc_control*, %struct.uvc_control** %controls, align 8, !tbaa !461
  br i1 %cmp3, label %for.body4, label %for.end

for.body4:                                        ; preds = %for.cond2
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %4, i64 %idxprom
  %initialized = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 3
  %bf.load = load i8, i8* %initialized, align 1
  %bf.lshr = lshr i8 %bf.load, 4
  %bf.clear = and i8 %bf.lshr, 1
  %tobool = icmp ne i8 %bf.clear, 0
  br i1 %tobool, label %if.end, label %LeafBlock

if.end:                                           ; preds = %for.body4
  call void @uvc_ctrl_cleanup_mappings(%struct.uvc_control* %arrayidx)
  %uvc_data = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %arrayidx, i32 0, i32 4
  %5 = load i8*, i8** %uvc_data, align 8, !tbaa !462
  call void @kfree(i8* %5)
  br label %LeafBlock

LeafBlock:                                        ; preds = %if.end, %for.body4
  %cleanup.dest.slot.0 = phi i32 [ 0, %if.end ], [ 7, %for.body4 ]
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 7
  %inc = add i32 %i.0, 1
  br label %for.cond2

for.end:                                          ; preds = %for.cond2
  %6 = bitcast %struct.uvc_control* %4 to i8*
  call void @kfree(i8* %6)
  %list8 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 0
  br label %for.cond

for.end12:                                        ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_ctrl_cleanup_mappings(%struct.uvc_control* %ctrl) #0 {
entry:
  %info = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %mappings = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info, i32 0, i32 0
  %next = getelementptr inbounds %struct.list_head, %struct.list_head* %mappings, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next, align 8, !tbaa !65
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 0
  %2 = bitcast i8* %add.ptr to %struct.uvc_control_mapping*
  br label %for.cond

for.cond:                                         ; preds = %for.body, %entry
  %.sink = phi %struct.uvc_control_mapping* [ %5, %for.body ], [ %2, %entry ]
  %mapping.0 = phi %struct.uvc_control_mapping* [ %2, %entry ], [ %5, %for.body ]
  %list10 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %.sink, i32 0, i32 0
  %next11 = getelementptr inbounds %struct.list_head, %struct.list_head* %list10, i32 0, i32 0
  %3 = load %struct.list_head*, %struct.list_head** %next11, align 8, !tbaa !486
  %4 = bitcast %struct.list_head* %3 to i8*
  %add.ptr13 = getelementptr inbounds i8, i8* %4, i64 0
  %5 = bitcast i8* %add.ptr13 to %struct.uvc_control_mapping*
  %list5 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 0
  %info6 = getelementptr inbounds %struct.uvc_control, %struct.uvc_control* %ctrl, i32 0, i32 1
  %mappings7 = getelementptr inbounds %struct.uvc_control_info, %struct.uvc_control_info* %info6, i32 0, i32 0
  %cmp = icmp ne %struct.list_head* %list5, %mappings7
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %list8 = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 0
  call void @list_del(%struct.list_head* %list8)
  %menu_info = getelementptr inbounds %struct.uvc_control_mapping, %struct.uvc_control_mapping* %mapping.0, i32 0, i32 10
  %6 = load %struct.uvc_menu_info*, %struct.uvc_menu_info** %menu_info, align 8, !tbaa !316
  %7 = bitcast %struct.uvc_menu_info* %6 to i8*
  call void @kfree(i8* %7)
  %8 = bitcast %struct.uvc_control_mapping* %mapping.0 to i8*
  call void @kfree(i8* %8)
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_status_init(%struct.uvc_device* %dev) #0 {
entry:
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 17
  %0 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !84
  %cmp = icmp eq %struct.usb_host_endpoint* %0, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  call void @uvc_input_init(%struct.uvc_device* %dev)
  %call1 = call i8* @kzalloc.237(i64 16, i32 208)
  %status = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  store i8* %call1, i8** %status, align 8, !tbaa !487
  %status2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %1 = load i8*, i8** %status2, align 8, !tbaa !487
  %cmp3 = icmp eq i8* %1, null
  br i1 %cmp3, label %cleanup, label %if.end5

if.end5:                                          ; preds = %if.end
  %call6 = call %struct.urb* @usb_alloc_urb(i32 0, i32 208)
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  store %struct.urb* %call6, %struct.urb** %int_urb, align 8, !tbaa !488
  %int_urb7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %2 = load %struct.urb*, %struct.urb** %int_urb7, align 8, !tbaa !488
  %cmp8 = icmp eq %struct.urb* %2, null
  br i1 %cmp8, label %if.then9, label %if.end11

if.then9:                                         ; preds = %if.end5
  %status10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %3 = load i8*, i8** %status10, align 8, !tbaa !487
  call void @kfree(i8* %3)
  br label %cleanup

if.end11:                                         ; preds = %if.end5
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %4 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %0, i32 0, i32 0
  %bEndpointAddress = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 2
  %5 = load i8, i8* %bEndpointAddress, align 2, !tbaa !164
  %conv = zext i8 %5 to i32
  %call12 = call i32 @__create_pipe.238(%struct.usb_device* %4, i32 %conv)
  %or = or i32 1073741824, %call12
  %or13 = or i32 %or, 128
  %desc14 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %0, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc14, i32 0, i32 5
  %6 = load i8, i8* %bInterval, align 2, !tbaa !382
  %conv15 = zext i8 %6 to i32
  %cmp16 = icmp sgt i32 %conv15, 16
  br i1 %cmp16, label %land.lhs.true, label %if.end24

land.lhs.true:                                    ; preds = %if.end11
  %udev18 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %7 = load %struct.usb_device*, %struct.usb_device** %udev18, align 8, !tbaa !63
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 4
  %8 = load i32, i32* %speed, align 4, !tbaa !330
  %cmp19 = icmp eq i32 %8, 3
  br i1 %cmp19, label %land.lhs.true21, label %if.end24

land.lhs.true21:                                  ; preds = %land.lhs.true
  %quirks = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 3
  %9 = load i32, i32* %quirks, align 8, !tbaa !10
  %and = and i32 %9, 1
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then22, label %if.end24

if.then22:                                        ; preds = %land.lhs.true21
  %call23 = call i32 @fls(i32 %conv15)
  %sub = sub nsw i32 %call23, 1
  br label %if.end24

if.end24:                                         ; preds = %if.then22, %land.lhs.true21, %land.lhs.true, %if.end11
  %interval.0 = phi i32 [ %sub, %if.then22 ], [ %conv15, %land.lhs.true21 ], [ %conv15, %land.lhs.true ], [ %conv15, %if.end11 ]
  %int_urb25 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %10 = load %struct.urb*, %struct.urb** %int_urb25, align 8, !tbaa !488
  %udev26 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %11 = load %struct.usb_device*, %struct.usb_device** %udev26, align 8, !tbaa !63
  %status27 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %12 = load i8*, i8** %status27, align 8, !tbaa !487
  %13 = bitcast %struct.uvc_device* %dev to i8*
  call void @usb_fill_int_urb(%struct.urb* %10, %struct.usb_device* %11, i32 %or13, i8* %12, i32 16, void (%struct.urb*)* @uvc_status_complete, i8* %13, i32 %interval.0)
  br label %cleanup

cleanup:                                          ; preds = %if.end24, %if.then9, %if.end, %entry
  %retval.0 = phi i32 [ -12, %if.then9 ], [ 0, %if.end24 ], [ 0, %entry ], [ -12, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal void @uvc_input_init(%struct.uvc_device* %dev) #0 {
entry:
  %call = call %struct.input_dev* @input_allocate_device()
  %cmp = icmp eq %struct.input_dev* %call, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %udev = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %0 = load %struct.usb_device*, %struct.usb_device** %udev, align 8, !tbaa !63
  %input_phys = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys, i32 0, i32 0
  call void @usb_make_path.253(%struct.usb_device* %0, i8* %arraydecay, i64 64)
  %input_phys2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay3 = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys2, i32 0, i32 0
  %call4 = call i64 @strlcat(i8* %arraydecay3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.254, i32 0, i32 0), i64 64)
  %name = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 5
  %arraydecay5 = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name6 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 0
  store i8* %arraydecay5, i8** %name6, align 8, !tbaa !489
  %input_phys7 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 21
  %arraydecay8 = getelementptr inbounds [64 x i8], [64 x i8]* %input_phys7, i32 0, i32 0
  %phys = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 1
  store i8* %arraydecay8, i8** %phys, align 8, !tbaa !492
  %udev9 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev9, align 8, !tbaa !63
  %id = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 3
  call void @usb_to_input_id(%struct.usb_device* %1, %struct.input_id* %id)
  %intf = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 1
  %2 = load %struct.usb_interface*, %struct.usb_interface** %intf, align 8, !tbaa !62
  %dev10 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %2, i32 0, i32 7
  %dev11 = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 39
  %parent = getelementptr inbounds %struct.device, %struct.device* %dev11, i32 0, i32 0
  store %struct.device* %dev10, %struct.device** %parent, align 8, !tbaa !493
  %evbit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 5
  %arraydecay12 = getelementptr inbounds [1 x i64], [1 x i64]* %evbit, i32 0, i32 0
  call void @__set_bit(i32 1, i64* %arraydecay12)
  %keybit = getelementptr inbounds %struct.input_dev, %struct.input_dev* %call, i32 0, i32 6
  %arraydecay13 = getelementptr inbounds [12 x i64], [12 x i64]* %keybit, i32 0, i32 0
  call void @__set_bit(i32 212, i64* %arraydecay13)
  %call14 = call i32 @input_register_device(%struct.input_dev* %call)
  %cmp15 = icmp slt i32 %call14, 0
  br i1 %cmp15, label %error, label %if.end17

if.end17:                                         ; preds = %if.end
  %input18 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  store %struct.input_dev* %call, %struct.input_dev** %input18, align 8, !tbaa !494
  br label %cleanup

error:                                            ; preds = %if.end
  call void @input_free_device(%struct.input_dev* %call)
  br label %cleanup

cleanup:                                          ; preds = %error, %if.end17, %entry
  %retval.0 = phi i32 [ %call14, %error ], [ 0, %if.end17 ], [ -12, %entry ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal i8* @kzalloc.237(i64 %size, i32 %flags) #1 {
entry:
  %or = or i32 %flags, 32768
  %call = call i8* @kmalloc.252(i64 %size, i32 %or)
  ret i8* %call
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @__create_pipe.238(%struct.usb_device* %dev, i32 %endpoint) #1 {
entry:
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 0
  %0 = load i32, i32* %devnum, align 8, !tbaa !117
  %shl = shl i32 %0, 8
  %shl1 = shl i32 %endpoint, 15
  %or = or i32 %shl, %shl1
  ret i32 %or
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @fls(i32 %x) #1 {
entry:
  %0 = call i32 asm "bsrl $1,$0", "=r,rm,0,~{dirflag},~{fpsr},~{flags}"(i32 %x, i32 -1) #9, !srcloc !495
  %add = add nsw i32 %0, 1
  ret i32 %add
}

; Function Attrs: nounwind uwtable
define internal void @uvc_status_complete(%struct.urb* %urb) #0 {
entry:
  %context = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  %0 = load i8*, i8** %context, align 8, !tbaa !378
  %1 = bitcast i8* %0 to %struct.uvc_device*
  %status = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %2 = load i32, i32* %status, align 8, !tbaa !392
  %Pivot14 = icmp slt i32 %2, -71
  br i1 %Pivot14, label %NodeBlock, label %NodeBlock11

NodeBlock11:                                      ; preds = %entry
  %Pivot12 = icmp slt i32 %2, -2
  br i1 %Pivot12, label %LeafBlock3, label %NodeBlock9

NodeBlock9:                                       ; preds = %NodeBlock11
  %Pivot10 = icmp slt i32 %2, 0
  br i1 %Pivot10, label %LeafBlock5, label %LeafBlock7

LeafBlock7:                                       ; preds = %NodeBlock9
  %SwitchLeaf8 = icmp eq i32 %2, 0
  br i1 %SwitchLeaf8, label %sw.epilog, label %sw.default

LeafBlock5:                                       ; preds = %NodeBlock9
  %SwitchLeaf6 = icmp eq i32 %2, -2
  br i1 %SwitchLeaf6, label %cleanup.cont, label %sw.default

LeafBlock3:                                       ; preds = %NodeBlock11
  %SwitchLeaf4 = icmp eq i32 %2, -71
  br i1 %SwitchLeaf4, label %cleanup.cont, label %sw.default

NodeBlock:                                        ; preds = %entry
  %Pivot = icmp slt i32 %2, -104
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %2, -104
  br i1 %SwitchLeaf2, label %cleanup.cont, label %sw.default

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %2, -108
  br i1 %SwitchLeaf, label %cleanup.cont, label %sw.default

sw.default:                                       ; preds = %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5, %LeafBlock7
  %status1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 12
  %3 = load i32, i32* %status1, align 8, !tbaa !392
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.2.239, i32 0, i32 0), i32 %3)
  br label %cleanup.cont

sw.epilog:                                        ; preds = %LeafBlock7
  %actual_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 20
  %4 = load i32, i32* %actual_length, align 4, !tbaa !396
  %cmp = icmp sgt i32 %4, 0
  br i1 %cmp, label %if.then, label %if.end15

if.then:                                          ; preds = %sw.epilog
  %status2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %5 = load i8*, i8** %status2, align 8, !tbaa !487
  %arrayidx = getelementptr inbounds i8, i8* %5, i64 0
  %6 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %6 to i32
  %and = and i32 %conv, 15
  %Pivot21 = icmp slt i32 %and, 2
  br i1 %Pivot21, label %LeafBlock16, label %LeafBlock18

LeafBlock18:                                      ; preds = %if.then
  %SwitchLeaf19 = icmp eq i32 %and, 2
  br i1 %SwitchLeaf19, label %sw.bb5, label %do.body

LeafBlock16:                                      ; preds = %if.then
  %SwitchLeaf17 = icmp eq i32 %and, 1
  br i1 %SwitchLeaf17, label %sw.bb3, label %do.body

sw.bb3:                                           ; preds = %LeafBlock16
  %status4 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %7 = load i8*, i8** %status4, align 8, !tbaa !487
  call void @uvc_event_control(i8* %7, i32 %4)
  br label %if.end15

sw.bb5:                                           ; preds = %LeafBlock18
  %status6 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %8 = load i8*, i8** %status6, align 8, !tbaa !487
  call void @uvc_event_streaming(%struct.uvc_device* %1, i8* %8, i32 %4)
  br label %if.end15

do.body:                                          ; preds = %LeafBlock16, %LeafBlock18
  %9 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and8 = and i32 %9, 512
  %tobool = icmp ne i32 %and8, 0
  br i1 %tobool, label %if.then9, label %if.end15

if.then9:                                         ; preds = %do.body
  %status10 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 19
  %10 = load i8*, i8** %status10, align 8, !tbaa !487
  %arrayidx11 = getelementptr inbounds i8, i8* %10, i64 0
  %11 = load i8, i8* %arrayidx11, align 1, !tbaa !61
  %conv12 = zext i8 %11 to i32
  %call13 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.3.240, i32 0, i32 0), i32 %conv12)
  br label %if.end15

if.end15:                                         ; preds = %if.then9, %do.body, %sw.bb5, %sw.bb3, %sw.epilog
  %int_ep = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %1, i32 0, i32 17
  %12 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %int_ep, align 8, !tbaa !84
  %desc = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %12, i32 0, i32 0
  %bInterval = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %desc, i32 0, i32 5
  %13 = load i8, i8* %bInterval, align 2, !tbaa !382
  %conv16 = zext i8 %13 to i32
  %interval = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 25
  store i32 %conv16, i32* %interval, align 8, !tbaa !383
  %call17 = call i32 @usb_submit_urb(%struct.urb* %urb, i32 32)
  %cmp18 = icmp slt i32 %call17, 0
  br i1 %cmp18, label %if.then20, label %cleanup.cont

if.then20:                                        ; preds = %if.end15
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.4.241, i32 0, i32 0), i32 %call17)
  br label %cleanup.cont

cleanup.cont:                                     ; preds = %if.then20, %if.end15, %sw.default, %LeafBlock, %LeafBlock1, %LeafBlock3, %LeafBlock5
  %cleanup.dest.slot.0 = phi i32 [ 1, %sw.default ], [ 1, %LeafBlock5 ], [ 1, %LeafBlock3 ], [ 1, %LeafBlock1 ], [ 1, %LeafBlock ], [ 0, %if.then20 ], [ 0, %if.end15 ]
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_fill_int_urb(%struct.urb* %urb, %struct.usb_device* %dev, i32 %pipe, i8* %transfer_buffer, i32 %buffer_length, void (%struct.urb*)* %complete_fn, i8* %context, i32 %interval) #1 {
entry:
  %dev1 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 8
  store %struct.usb_device* %dev, %struct.usb_device** %dev1, align 8, !tbaa !376
  %pipe2 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 10
  store i32 %pipe, i32* %pipe2, align 8, !tbaa !379
  %transfer_buffer3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  store i8* %transfer_buffer, i8** %transfer_buffer3, align 8, !tbaa !384
  %transfer_buffer_length = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 19
  store i32 %buffer_length, i32* %transfer_buffer_length, align 8, !tbaa !387
  %complete = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 28
  store void (%struct.urb*)* %complete_fn, void (%struct.urb*)** %complete, align 8, !tbaa !385
  %context4 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 27
  store i8* %context, i8** %context4, align 8, !tbaa !378
  %speed = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %0 = load i32, i32* %speed, align 4, !tbaa !330
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %speed5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 4
  %1 = load i32, i32* %speed5, align 4, !tbaa !330
  %cmp6 = icmp eq i32 %1, 5
  br i1 %cmp6, label %if.then, label %if.end

if.then:                                          ; preds = %lor.lhs.false, %entry
  %sub = sub nsw i32 %interval, 1
  %shl = shl i32 1, %sub
  br label %if.end

if.end:                                           ; preds = %if.then, %lor.lhs.false
  %interval.sink = phi i32 [ %shl, %if.then ], [ %interval, %lor.lhs.false ]
  %interval8 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 25
  store i32 %interval.sink, i32* %interval8, align 8, !tbaa !383
  %start_frame = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 23
  store i32 -1, i32* %start_frame, align 8, !tbaa !496
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_event_control(i8* %data, i32 %len) #0 {
entry:
  %attrs = alloca [3 x i8*], align 16
  %0 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* %0) #8
  %1 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1, i8* bitcast ([3 x i8*]* @uvc_event_control.attrs to i8*), i64 24, i32 16, i1 false)
  %cmp = icmp slt i32 %len, 6
  br i1 %cmp, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %2 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %2 to i32
  %cmp1 = icmp ne i32 %conv, 0
  br i1 %cmp1, label %do.body, label %lor.lhs.false3

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %arrayidx4 = getelementptr inbounds i8, i8* %data, i64 4
  %3 = load i8, i8* %arrayidx4, align 1, !tbaa !61
  %conv5 = zext i8 %3 to i32
  %cmp6 = icmp sgt i32 %conv5, 2
  br i1 %cmp6, label %do.body, label %do.body10

do.body:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %4 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %4, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then8, label %cleanup

if.then8:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.8.247, i32 0, i32 0))
  br label %cleanup

do.body10:                                        ; preds = %lor.lhs.false3
  %5 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and11 = and i32 %5, 512
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %cleanup

if.then13:                                        ; preds = %do.body10
  %arrayidx14 = getelementptr inbounds i8, i8* %data, i64 1
  %6 = load i8, i8* %arrayidx14, align 1, !tbaa !61
  %conv15 = zext i8 %6 to i32
  %arrayidx16 = getelementptr inbounds i8, i8* %data, i64 3
  %7 = load i8, i8* %arrayidx16, align 1, !tbaa !61
  %conv17 = zext i8 %7 to i32
  %arrayidx18 = getelementptr inbounds i8, i8* %data, i64 4
  %8 = load i8, i8* %arrayidx18, align 1, !tbaa !61
  %idxprom = zext i8 %8 to i64
  %arrayidx19 = getelementptr inbounds [3 x i8*], [3 x i8*]* %attrs, i64 0, i64 %idxprom
  %9 = load i8*, i8** %arrayidx19, align 8, !tbaa !45
  %call20 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.9.248, i32 0, i32 0), i32 %conv15, i32 %conv17, i8* %9, i32 %len)
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %do.body10, %if.then8, %do.body
  %cleanup.dest.slot.0 = phi i32 [ 1, %if.then8 ], [ 1, %do.body ], [ 0, %if.then13 ], [ 0, %do.body10 ]
  %10 = bitcast [3 x i8*]* %attrs to i8*
  call void @llvm.lifetime.end.p0i8(i64 24, i8* %10) #8
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_event_streaming(%struct.uvc_device* %dev, i8* %data, i32 %len) #0 {
entry:
  %cmp = icmp slt i32 %len, 3
  br i1 %cmp, label %do.body, label %if.end2

do.body:                                          ; preds = %entry
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 512
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then1, label %if.end37

if.then1:                                         ; preds = %do.body
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.10.242, i32 0, i32 0))
  br label %if.end37

if.end2:                                          ; preds = %entry
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %1 = load i8, i8* %arrayidx, align 1, !tbaa !61
  %conv = zext i8 %1 to i32
  %cmp3 = icmp eq i32 %conv, 0
  br i1 %cmp3, label %if.then5, label %do.body24

if.then5:                                         ; preds = %if.end2
  %cmp6 = icmp slt i32 %len, 4
  br i1 %cmp6, label %if.end37, label %do.body10

do.body10:                                        ; preds = %if.then5
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and11 = and i32 %2, 512
  %tobool12 = icmp ne i32 %and11, 0
  br i1 %tobool12, label %if.then13, label %do.end21

if.then13:                                        ; preds = %do.body10
  %arrayidx14 = getelementptr inbounds i8, i8* %data, i64 1
  %3 = load i8, i8* %arrayidx14, align 1, !tbaa !61
  %conv15 = zext i8 %3 to i32
  %arrayidx16 = getelementptr inbounds i8, i8* %data, i64 3
  %4 = load i8, i8* %arrayidx16, align 1, !tbaa !61
  %conv17 = zext i8 %4 to i32
  %tobool18 = icmp ne i32 %conv17, 0
  %5 = zext i1 %tobool18 to i64
  %cond = select i1 %tobool18, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12.243, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13.244, i32 0, i32 0)
  %call19 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.11.245, i32 0, i32 0), i32 %conv15, i8* %cond, i32 %len)
  br label %do.end21

do.end21:                                         ; preds = %if.then13, %do.body10
  %arrayidx22 = getelementptr inbounds i8, i8* %data, i64 3
  %6 = load i8, i8* %arrayidx22, align 1, !tbaa !61
  %conv23 = zext i8 %6 to i32
  call void @uvc_input_report_key(%struct.uvc_device* %dev, i32 212, i32 %conv23)
  br label %if.end37

do.body24:                                        ; preds = %if.end2
  %7 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and25 = and i32 %7, 512
  %tobool26 = icmp ne i32 %and25, 0
  br i1 %tobool26, label %if.then27, label %if.end37

if.then27:                                        ; preds = %do.body24
  %arrayidx28 = getelementptr inbounds i8, i8* %data, i64 1
  %8 = load i8, i8* %arrayidx28, align 1, !tbaa !61
  %conv29 = zext i8 %8 to i32
  %arrayidx30 = getelementptr inbounds i8, i8* %data, i64 2
  %9 = load i8, i8* %arrayidx30, align 1, !tbaa !61
  %conv31 = zext i8 %9 to i32
  %arrayidx32 = getelementptr inbounds i8, i8* %data, i64 3
  %10 = load i8, i8* %arrayidx32, align 1, !tbaa !61
  %conv33 = zext i8 %10 to i32
  %call34 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.14.246, i32 0, i32 0), i32 %conv29, i32 %conv31, i32 %conv33, i32 %len)
  br label %if.end37

if.end37:                                         ; preds = %if.then27, %do.body24, %do.end21, %if.then5, %if.then1, %do.body
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_input_report_key(%struct.uvc_device* %dev, i32 %code, i32 %value) #0 {
entry:
  %input = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %0 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !tbaa !494
  %tobool = icmp ne %struct.input_dev* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %input1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %1 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !tbaa !494
  call void @input_report_key(%struct.input_dev* %1, i32 %code, i32 %value)
  %input2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %2 = load %struct.input_dev*, %struct.input_dev** %input2, align 8, !tbaa !494
  call void @input_sync(%struct.input_dev* %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @input_report_key(%struct.input_dev* %dev, i32 %code, i32 %value) #1 {
entry:
  %tobool = icmp ne i32 %value, 0
  %lnot = xor i1 %tobool, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  call void @input_event(%struct.input_dev* %dev, i32 1, i32 %code, i32 %lnot.ext)
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @input_sync(%struct.input_dev* %dev) #1 {
entry:
  call void @input_event(%struct.input_dev* %dev, i32 0, i32 0, i32 0)
  ret void
}

declare void @input_event(%struct.input_dev*, i32, i32, i32) #2

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.252(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare %struct.input_dev* @input_allocate_device() #2

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_make_path.253(%struct.usb_device* %dev, i8* %buf, i64 %size) #1 {
entry:
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 9
  %0 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !283
  %bus_name = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %0, i32 0, i32 2
  %1 = load i8*, i8** %bus_name, align 8, !tbaa !284
  %devpath = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 1
  %arraydecay = getelementptr inbounds [16 x i8], [16 x i8]* %devpath, i32 0, i32 0
  %call = call i32 (i8*, i64, i8*, ...) @snprintf(i8* %buf, i64 %size, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.1.255, i32 0, i32 0), i8* %1, i8* %arraydecay)
  %conv = trunc i64 %size to i32
  %cmp = icmp sge i32 %call, %conv
  %.call = select i1 %cmp, i32 -1, i32 %call
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @usb_to_input_id(%struct.usb_device* %dev, %struct.input_id* %id) #1 {
entry:
  %bustype = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 0
  store i16 3, i16* %bustype, align 2, !tbaa !497
  %descriptor = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %idVendor = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor, i32 0, i32 7
  %0 = load i16, i16* %idVendor, align 8, !tbaa !111
  %vendor = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 1
  store i16 %0, i16* %vendor, align 2, !tbaa !498
  %descriptor1 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %idProduct = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor1, i32 0, i32 8
  %1 = load i16, i16* %idProduct, align 2, !tbaa !499
  %product = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 2
  store i16 %1, i16* %product, align 2, !tbaa !500
  %descriptor2 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %dev, i32 0, i32 12
  %bcdDevice = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %descriptor2, i32 0, i32 9
  %2 = load i16, i16* %bcdDevice, align 4, !tbaa !501
  %version = getelementptr inbounds %struct.input_id, %struct.input_id* %id, i32 0, i32 3
  store i16 %2, i16* %version, align 2, !tbaa !502
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define internal void @__set_bit(i32 %nr, i64* %addr) #1 {
entry:
  call void asm sideeffect "bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %addr, i32 %nr, i64* %addr) #8, !srcloc !503
  ret void
}

declare i32 @input_register_device(%struct.input_dev*) #2

declare void @input_free_device(%struct.input_dev*) #2

; Function Attrs: nounwind uwtable
define void @uvc_status_cleanup(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !488
  call void @usb_kill_urb(%struct.urb* %0)
  %int_urb1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %1 = load %struct.urb*, %struct.urb** %int_urb1, align 8, !tbaa !488
  call void @usb_free_urb(%struct.urb* %1)
  %status = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 19
  %2 = load i8*, i8** %status, align 8, !tbaa !487
  call void @kfree(i8* %2)
  call void @uvc_input_cleanup(%struct.uvc_device* %dev)
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @uvc_input_cleanup(%struct.uvc_device* %dev) #0 {
entry:
  %input = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %0 = load %struct.input_dev*, %struct.input_dev** %input, align 8, !tbaa !494
  %tobool = icmp ne %struct.input_dev* %0, null
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %input1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 20
  %1 = load %struct.input_dev*, %struct.input_dev** %input1, align 8, !tbaa !494
  call void @input_unregister_device(%struct.input_dev* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

declare void @input_unregister_device(%struct.input_dev*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_status_start(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !488
  %cmp = icmp eq %struct.urb* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %int_urb1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %1 = load %struct.urb*, %struct.urb** %int_urb1, align 8, !tbaa !488
  %call = call i32 @usb_submit_urb(%struct.urb* %1, i32 208)
  br label %return

return:                                           ; preds = %if.end, %entry
  %retval.0 = phi i32 [ %call, %if.end ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @uvc_status_stop(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !488
  call void @usb_kill_urb(%struct.urb* %0)
  ret void
}

; Function Attrs: nounwind uwtable
define i32 @uvc_status_suspend(%struct.uvc_device* %dev) #0 {
entry:
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 7
  %call = call i32 @atomic_read(%union.anon.5* %users)
  %tobool = icmp ne i32 %call, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !488
  call void @usb_kill_urb(%struct.urb* %0)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret i32 0
}

; Function Attrs: inlinehint nounwind uwtable
define internal i32 @atomic_read(%union.anon.5* %v) #1 {
entry:
  %counter = getelementptr inbounds %union.anon.5, %union.anon.5* %v, i32 0, i32 0
  %0 = load volatile i32, i32* %counter, align 4, !tbaa !2
  ret i32 %0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_status_resume(%struct.uvc_device* %dev) #0 {
entry:
  %int_urb = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %0 = load %struct.urb*, %struct.urb** %int_urb, align 8, !tbaa !488
  %cmp = icmp eq %struct.urb* %0, null
  br i1 %cmp, label %return, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %users = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 7
  %call = call i32 @atomic_read(%union.anon.5* %users)
  %cmp1 = icmp eq i32 %call, 0
  br i1 %cmp1, label %return, label %if.end

if.end:                                           ; preds = %lor.lhs.false
  %int_urb2 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %dev, i32 0, i32 18
  %1 = load %struct.urb*, %struct.urb** %int_urb2, align 8, !tbaa !488
  %call3 = call i32 @usb_submit_urb(%struct.urb* %1, i32 16)
  br label %return

return:                                           ; preds = %if.end, %lor.lhs.false, %entry
  %retval.0 = phi i32 [ %call3, %if.end ], [ 0, %lor.lhs.false ], [ 0, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @uvc_video_decode_isight(%struct.urb* %urb, %struct.uvc_streaming.2252* %stream, %struct.uvc_buffer* %buf) #0 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %buf.addr.0 = phi %struct.uvc_buffer* [ %buf, %entry ], [ %buf.addr.3, %for.inc ]
  %i.0 = phi i32 [ 0, %entry ], [ %inc, %for.inc ]
  %number_of_packets = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 24
  %0 = load i32, i32* %number_of_packets, align 4, !tbaa !386
  %cmp = icmp slt i32 %i.0, %0
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %iso_frame_desc = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom = sext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc, i64 0, i64 %idxprom
  %status = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx, i32 0, i32 3
  %1 = load i32, i32* %status, align 4, !tbaa !394
  %cmp1 = icmp slt i32 %1, 0
  br i1 %cmp1, label %do.body, label %if.end7

do.body:                                          ; preds = %for.body
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %2, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then2, label %if.end7

if.then2:                                         ; preds = %do.body
  %iso_frame_desc3 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom4 = sext i32 %i.0 to i64
  %arrayidx5 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc3, i64 0, i64 %idxprom4
  %status6 = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx5, i32 0, i32 3
  %3 = load i32, i32* %status6, align 4, !tbaa !394
  %call = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.268, i32 0, i32 0), i32 %3)
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %do.body, %for.body
  br label %do.body8

do.body8:                                         ; preds = %do.cond26, %if.end7
  %buf.addr.1 = phi %struct.uvc_buffer* [ %buf.addr.0, %if.end7 ], [ %buf.addr.2, %do.cond26 ]
  %queue = getelementptr inbounds %struct.uvc_streaming.2252, %struct.uvc_streaming.2252* %stream, i32 0, i32 18
  %transfer_buffer = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 14
  %4 = load i8*, i8** %transfer_buffer, align 8, !tbaa !384
  %iso_frame_desc9 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom10 = sext i32 %i.0 to i64
  %arrayidx11 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc9, i64 0, i64 %idxprom10
  %offset = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx11, i32 0, i32 0
  %5 = load i32, i32* %offset, align 8, !tbaa !388
  %idx.ext = zext i32 %5 to i64
  %add.ptr = getelementptr i8, i8* %4, i64 %idx.ext
  %iso_frame_desc12 = getelementptr inbounds %struct.urb, %struct.urb* %urb, i32 0, i32 29
  %idxprom13 = sext i32 %i.0 to i64
  %arrayidx14 = getelementptr inbounds [0 x %struct.usb3_lpm_parameters], [0 x %struct.usb3_lpm_parameters]* %iso_frame_desc12, i64 0, i64 %idxprom13
  %actual_length = getelementptr inbounds %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters* %arrayidx14, i32 0, i32 2
  %6 = load i32, i32* %actual_length, align 8, !tbaa !395
  %call15 = call i32 @isight_decode(%struct.uvc_buffer* %buf.addr.1, i8* %add.ptr, i32 %6)
  %cmp16 = icmp eq %struct.uvc_buffer* %buf.addr.1, null
  br i1 %cmp16, label %for.inc, label %if.end18

if.end18:                                         ; preds = %do.body8
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.1, i32 0, i32 2
  %7 = load i32, i32* %state, align 8, !tbaa !181
  %cmp19 = icmp eq i32 %7, 4
  br i1 %cmp19, label %if.then22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %if.end18
  %state20 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf.addr.1, i32 0, i32 2
  %8 = load i32, i32* %state20, align 8, !tbaa !181
  %cmp21 = icmp eq i32 %8, 5
  br i1 %cmp21, label %if.then22, label %do.cond26

if.then22:                                        ; preds = %lor.lhs.false, %if.end18
  %queue23 = getelementptr inbounds %struct.uvc_streaming.2252, %struct.uvc_streaming.2252* %stream, i32 0, i32 18
  %call24 = call %struct.uvc_buffer* @uvc_queue_next_buffer(%struct.uvc_video_queue* %queue23, %struct.uvc_buffer* %buf.addr.1)
  br label %do.cond26

do.cond26:                                        ; preds = %if.then22, %lor.lhs.false
  %buf.addr.2 = phi %struct.uvc_buffer* [ %call24, %if.then22 ], [ %buf.addr.1, %lor.lhs.false ]
  %cmp27 = icmp eq i32 %call15, -11
  br i1 %cmp27, label %do.body8, label %for.inc

for.inc:                                          ; preds = %do.cond26, %do.body8
  %buf.addr.3 = phi %struct.uvc_buffer* [ %buf.addr.1, %do.body8 ], [ %buf.addr.2, %do.cond26 ]
  %inc = add nsw i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  ret void
}

; Function Attrs: nounwind uwtable
define internal i32 @isight_decode(%struct.uvc_buffer* %buf, i8* %data, i32 %len) #0 {
entry:
  %_min1 = alloca i32, align 4
  %_min2 = alloca i32, align 4
  %cmp = icmp eq %struct.uvc_buffer* %buf, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %cmp1 = icmp uge i32 %len, 14
  br i1 %cmp1, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %if.end
  %arrayidx = getelementptr inbounds i8, i8* %data, i64 2
  %call = call i32 @memcmp(i8* %arrayidx, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @isight_decode.hdr, i32 0, i32 0), i64 12)
  %cmp2 = icmp eq i32 %call, 0
  br i1 %cmp2, label %do.body, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.end
  %cmp3 = icmp uge i32 %len, 15
  br i1 %cmp3, label %land.lhs.true4, label %if.end12

land.lhs.true4:                                   ; preds = %lor.lhs.false
  %arrayidx5 = getelementptr inbounds i8, i8* %data, i64 3
  %call6 = call i32 @memcmp(i8* %arrayidx5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @isight_decode.hdr, i32 0, i32 0), i64 12)
  %cmp7 = icmp eq i32 %call6, 0
  br i1 %cmp7, label %do.body, label %if.end12

do.body:                                          ; preds = %land.lhs.true4, %land.lhs.true
  %0 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and = and i32 %0, 128
  %tobool = icmp ne i32 %and, 0
  br i1 %tobool, label %if.then9, label %if.end12

if.then9:                                         ; preds = %do.body
  %call10 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1.269, i32 0, i32 0))
  br label %if.end12

if.end12:                                         ; preds = %if.then9, %do.body, %land.lhs.true4, %lor.lhs.false
  %is_header.0 = phi i32 [ 0, %land.lhs.true4 ], [ 0, %lor.lhs.false ], [ 1, %if.then9 ], [ 1, %do.body ]
  %state = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  %1 = load i32, i32* %state, align 8, !tbaa !181
  %cmp13 = icmp ne i32 %1, 2
  br i1 %cmp13, label %if.then14, label %if.end27

if.then14:                                        ; preds = %if.end12
  %tobool15 = icmp ne i32 %is_header.0, 0
  br i1 %tobool15, label %if.end25, label %do.body17

do.body17:                                        ; preds = %if.then14
  %2 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and18 = and i32 %2, 128
  %tobool19 = icmp ne i32 %and18, 0
  br i1 %tobool19, label %if.then20, label %cleanup

if.then20:                                        ; preds = %do.body17
  %call21 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2.270, i32 0, i32 0))
  br label %cleanup

if.end25:                                         ; preds = %if.then14
  %state26 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 2, i32* %state26, align 8, !tbaa !181
  br label %if.end27

if.end27:                                         ; preds = %if.end25, %if.end12
  %cond1 = icmp eq i32 %is_header.0, 0
  br i1 %cond1, label %if.then35, label %land.lhs.true29

land.lhs.true29:                                  ; preds = %if.end27
  %bytesused = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %3 = load i32, i32* %bytesused, align 4, !tbaa !186
  %cmp30 = icmp ne i32 %3, 0
  br i1 %cmp30, label %if.then31, label %if.end33

if.then31:                                        ; preds = %land.lhs.true29
  %state32 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 4, i32* %state32, align 8, !tbaa !181
  br label %cleanup

if.end33:                                         ; preds = %land.lhs.true29
  %tobool34 = icmp ne i32 %is_header.0, 0
  br i1 %tobool34, label %cleanup, label %if.then35

if.then35:                                        ; preds = %if.end33, %if.end27
  %length = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %4 = load i32, i32* %length, align 8, !tbaa !185
  %bytesused36 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %5 = load i32, i32* %bytesused36, align 4, !tbaa !186
  %sub = sub i32 %4, %5
  %mem37 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 4
  %6 = load i8*, i8** %mem37, align 8, !tbaa !184
  %bytesused38 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %7 = load i32, i32* %bytesused38, align 4, !tbaa !186
  %idx.ext = zext i32 %7 to i64
  %add.ptr = getelementptr i8, i8* %6, i64 %idx.ext
  %8 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %8) #8
  store i32 %len, i32* %_min1, align 4, !tbaa !2
  %9 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* %9) #8
  store i32 %sub, i32* %_min2, align 4, !tbaa !2
  %cmp39 = icmp eq i32* %_min1, %_min2
  %conv = zext i1 %cmp39 to i32
  %10 = load i32, i32* %_min1, align 4, !tbaa !2
  %11 = load i32, i32* %_min2, align 4, !tbaa !2
  %cmp40 = icmp ult i32 %10, %11
  %12 = load i32, i32* %_min1, align 4
  %13 = load i32, i32* %_min2, align 4
  %cond = select i1 %cmp40, i32 %12, i32 %13
  %14 = bitcast i32* %_min2 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %14) #8
  %15 = bitcast i32* %_min1 to i8*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* %15) #8
  %conv42 = zext i32 %cond to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %add.ptr, i8* %data, i64 %conv42, i32 1, i1 false)
  %bytesused44 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %16 = load i32, i32* %bytesused44, align 4, !tbaa !186
  %add = add i32 %16, %cond
  store i32 %add, i32* %bytesused44, align 4, !tbaa !186
  %cmp45 = icmp ugt i32 %len, %sub
  br i1 %cmp45, label %do.body53, label %lor.lhs.false47

lor.lhs.false47:                                  ; preds = %if.then35
  %bytesused48 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 6
  %17 = load i32, i32* %bytesused48, align 4, !tbaa !186
  %length49 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 5
  %18 = load i32, i32* %length49, align 8, !tbaa !185
  %cmp50 = icmp eq i32 %17, %18
  br i1 %cmp50, label %do.body53, label %cleanup

do.body53:                                        ; preds = %lor.lhs.false47, %if.then35
  %19 = load i32, i32* @uvc_trace_param, align 4, !tbaa !2
  %and54 = and i32 %19, 128
  %tobool55 = icmp ne i32 %and54, 0
  br i1 %tobool55, label %if.then56, label %do.end60

if.then56:                                        ; preds = %do.body53
  %call57 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3.271, i32 0, i32 0))
  br label %do.end60

do.end60:                                         ; preds = %if.then56, %do.body53
  %state61 = getelementptr inbounds %struct.uvc_buffer, %struct.uvc_buffer* %buf, i32 0, i32 2
  store i32 4, i32* %state61, align 8, !tbaa !181
  br label %cleanup

cleanup:                                          ; preds = %do.end60, %lor.lhs.false47, %if.end33, %if.then31, %if.then20, %do.body17, %entry
  %retval.0 = phi i32 [ -11, %if.then31 ], [ 0, %entry ], [ 0, %if.then20 ], [ 0, %do.body17 ], [ 0, %lor.lhs.false47 ], [ 0, %do.end60 ], [ 0, %if.end33 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define i32 @uvc_debugfs_init_stream(%struct.uvc_streaming* %stream) #0 {
entry:
  %dir_name = alloca [32 x i8], align 16
  %dev = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 1
  %0 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !102
  %udev1 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %0, i32 0, i32 0
  %1 = load %struct.usb_device*, %struct.usb_device** %udev1, align 8, !tbaa !63
  %2 = bitcast [32 x i8]* %dir_name to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* %2) #8
  %3 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !45
  %cmp = icmp eq %struct.dentry* %3, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %bus = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 9
  %4 = load %struct.usb_bus*, %struct.usb_bus** %bus, align 8, !tbaa !283
  %busnum = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %4, i32 0, i32 1
  %5 = load i32, i32* %busnum, align 8, !tbaa !504
  %devnum = getelementptr inbounds %struct.usb_device, %struct.usb_device* %1, i32 0, i32 0
  %6 = load i32, i32* %devnum, align 8, !tbaa !117
  %call = call i32 (i8*, i8*, ...) @sprintf(i8* %arraydecay, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.274, i32 0, i32 0), i32 %5, i32 %6)
  %arraydecay2 = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %7 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !45
  %call3 = call %struct.dentry* @debugfs_create_dir(i8* %arraydecay2, %struct.dentry* %7)
  %8 = bitcast %struct.dentry* %call3 to i8*
  %call4 = call i64 @IS_ERR_OR_NULL(i8* %8)
  %tobool = icmp ne i64 %call4, 0
  br i1 %tobool, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.end
  %arraydecay6 = getelementptr inbounds [32 x i8], [32 x i8]* %dir_name, i32 0, i32 0
  %call7 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.1.275, i32 0, i32 0), i8* %arraydecay6)
  br label %cleanup

if.end8:                                          ; preds = %if.end
  %debugfs_dir = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  store %struct.dentry* %call3, %struct.dentry** %debugfs_dir, align 8, !tbaa !505
  %debugfs_dir9 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %9 = load %struct.dentry*, %struct.dentry** %debugfs_dir9, align 8, !tbaa !505
  %10 = bitcast %struct.uvc_streaming* %stream to i8*
  %call10 = call %struct.dentry* @debugfs_create_file(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2.276, i32 0, i32 0), i16 zeroext 292, %struct.dentry* %9, i8* %10, %struct.file_operations* @uvc_debugfs_stats_fops)
  %11 = bitcast %struct.dentry* %call10 to i8*
  %call11 = call i64 @IS_ERR_OR_NULL(i8* %11)
  %tobool12 = icmp ne i64 %call11, 0
  br i1 %tobool12, label %if.then13, label %cleanup

if.then13:                                        ; preds = %if.end8
  %call14 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3.277, i32 0, i32 0))
  call void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %stream)
  br label %cleanup

cleanup:                                          ; preds = %if.then13, %if.end8, %if.then5, %entry
  %retval.0 = phi i32 [ -19, %if.then5 ], [ -19, %if.then13 ], [ -19, %entry ], [ 0, %if.end8 ]
  %12 = bitcast [32 x i8]* %dir_name to i8*
  call void @llvm.lifetime.end.p0i8(i64 32, i8* %12) #8
  ret i32 %retval.0
}

declare %struct.dentry* @debugfs_create_dir(i8*, %struct.dentry*) #2

; Function Attrs: inlinehint nounwind uwtable
define internal i64 @IS_ERR_OR_NULL(i8* %ptr) #1 {
entry:
  %tobool = icmp ne i8* %ptr, null
  br i1 %tobool, label %lor.rhs, label %lor.end

lor.rhs:                                          ; preds = %entry
  %0 = ptrtoint i8* %ptr to i64
  %cmp = icmp uge i64 %0, -4095
  %lnot = xor i1 %cmp, true
  %lnot1 = xor i1 %lnot, true
  %lnot.ext = zext i1 %lnot1 to i32
  %conv = sext i32 %lnot.ext to i64
  %expval = call i64 @llvm.expect.i64(i64 %conv, i64 0)
  %tobool2 = icmp ne i64 %expval, 0
  br label %lor.end

lor.end:                                          ; preds = %lor.rhs, %entry
  %1 = phi i1 [ true, %entry ], [ %tobool2, %lor.rhs ]
  %lor.ext = zext i1 %1 to i32
  %conv3 = sext i32 %lor.ext to i64
  ret i64 %conv3
}

declare %struct.dentry* @debugfs_create_file(i8*, i16 zeroext, %struct.dentry*, i8*, %struct.file_operations*) #2

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_cleanup_stream(%struct.uvc_streaming* %stream) #0 {
entry:
  %debugfs_dir = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %0 = load %struct.dentry*, %struct.dentry** %debugfs_dir, align 8, !tbaa !505
  %cmp = icmp eq %struct.dentry* %0, null
  br i1 %cmp, label %return, label %if.end

if.end:                                           ; preds = %entry
  %debugfs_dir1 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  %1 = load %struct.dentry*, %struct.dentry** %debugfs_dir1, align 8, !tbaa !505
  call void @debugfs_remove_recursive(%struct.dentry* %1)
  %debugfs_dir2 = getelementptr inbounds %struct.uvc_streaming, %struct.uvc_streaming* %stream, i32 0, i32 27
  store %struct.dentry* null, %struct.dentry** %debugfs_dir2, align 8, !tbaa !505
  br label %return

return:                                           ; preds = %if.end, %entry
  ret void
}

declare void @debugfs_remove_recursive(%struct.dentry*) #2

declare i64 @no_llseek(%struct.file*, i64, i32) #2

; Function Attrs: nounwind uwtable
define internal i64 @uvc_debugfs_stats_read(%struct.file* %file, i8* %user_buf, i64 %nbytes, i64* %ppos) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  %1 = bitcast i8* %0 to %struct.uvc_debugfs_buffer*
  %data = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %1, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i32 0, i32 0
  %count = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %1, i32 0, i32 0
  %2 = load i64, i64* %count, align 8, !tbaa !506
  %call = call i64 @simple_read_from_buffer(i8* %user_buf, i64 %nbytes, i64* %ppos, i8* %arraydecay, i64 %2)
  ret i64 %call
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_debugfs_stats_open(%struct.inode* %inode, %struct.file* %file) #0 {
entry:
  %i_private = getelementptr inbounds %struct.inode, %struct.inode* %inode, i32 0, i32 44
  %0 = load i8*, i8** %i_private, align 8, !tbaa !508
  %1 = bitcast i8* %0 to %struct.uvc_streaming*
  %call = call i8* @kmalloc.280(i64 1032, i32 208)
  %2 = bitcast i8* %call to %struct.uvc_debugfs_buffer*
  %cmp = icmp eq %struct.uvc_debugfs_buffer* %2, null
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %data = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %2, i32 0, i32 1
  %arraydecay = getelementptr inbounds [1024 x i8], [1024 x i8]* %data, i32 0, i32 0
  %call1 = call i64 @uvc_video_stats_dump(%struct.uvc_streaming* %1, i8* %arraydecay, i64 1024)
  %count = getelementptr inbounds %struct.uvc_debugfs_buffer, %struct.uvc_debugfs_buffer* %2, i32 0, i32 0
  store i64 %call1, i64* %count, align 8, !tbaa !506
  %3 = bitcast %struct.uvc_debugfs_buffer* %2 to i8*
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* %3, i8** %private_data, align 8, !tbaa !196
  br label %cleanup

cleanup:                                          ; preds = %if.end, %entry
  %retval.0 = phi i32 [ 0, %if.end ], [ -12, %entry ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_debugfs_stats_release(%struct.inode* %inode, %struct.file* %file) #0 {
entry:
  %private_data = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  %0 = load i8*, i8** %private_data, align 8, !tbaa !196
  call void @kfree(i8* %0)
  %private_data1 = getelementptr inbounds %struct.file, %struct.file* %file, i32 0, i32 15
  store i8* null, i8** %private_data1, align 8, !tbaa !196
  ret i32 0
}

; Function Attrs: alwaysinline nounwind uwtable
define internal i8* @kmalloc.280(i64 %size, i32 %flags) #3 {
entry:
  %call = call i8* @__kmalloc(i64 %size, i32 %flags)
  ret i8* %call
}

declare i64 @simple_read_from_buffer(i8*, i64, i64*, i8*, i64) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_debugfs_init() #0 {
entry:
  %0 = load %struct.dentry*, %struct.dentry** @usb_debug_root, align 8, !tbaa !45
  %call = call %struct.dentry* @debugfs_create_dir(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4.283, i32 0, i32 0), %struct.dentry* %0)
  %1 = bitcast %struct.dentry* %call to i8*
  %call1 = call i64 @IS_ERR_OR_NULL(i8* %1)
  %tobool = icmp ne i64 %call1, 0
  br i1 %tobool, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call2 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.5.284, i32 0, i32 0))
  br label %cleanup

if.end:                                           ; preds = %entry
  store %struct.dentry* %call, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !45
  br label %cleanup

cleanup:                                          ; preds = %if.end, %if.then
  %retval.0 = phi i32 [ -61, %if.then ], [ 0, %if.end ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define void @uvc_debugfs_cleanup() #0 {
entry:
  %0 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !45
  %cmp = icmp ne %struct.dentry* %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load %struct.dentry*, %struct.dentry** @uvc_debugfs_root_dir, align 8, !tbaa !45
  call void @debugfs_remove_recursive(%struct.dentry* %1)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define void @uvc_mc_cleanup_entity(%struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp ne i32 %and, 257
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity2 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev, i32 0, i32 0
  call void @media_entity_cleanup(%struct.media_entity* %entity2)
  br label %if.end8

if.else:                                          ; preds = %entry
  %vdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %1 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !66
  %cmp3 = icmp ne %struct.video_device* %1, null
  br i1 %cmp3, label %if.then5, label %if.end8

if.then5:                                         ; preds = %if.else
  %vdev6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %2 = load %struct.video_device*, %struct.video_device** %vdev6, align 8, !tbaa !66
  %entity7 = getelementptr inbounds %struct.video_device, %struct.video_device* %2, i32 0, i32 0
  call void @media_entity_cleanup(%struct.media_entity* %entity7)
  br label %if.end8

if.end8:                                          ; preds = %if.then5, %if.else, %if.then
  ret void
}

declare void @media_entity_cleanup(%struct.media_entity*) #2

; Function Attrs: nounwind uwtable
define i32 @uvc_mc_register_entities(%struct.uvc_video_chain* %chain) #0 {
entry:
  %entities = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %chain6.sink = phi %struct.list_head* [ %chain6, %for.inc ], [ %entities, %entry ]
  %next7 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain6.sink, i32 0, i32 0
  %0 = load %struct.list_head*, %struct.list_head** %next7, align 8, !tbaa !45
  %1 = bitcast %struct.list_head* %0 to i8*
  %add.ptr9 = getelementptr inbounds i8, i8* %1, i64 -16
  %2 = bitcast i8* %add.ptr9 to %struct.uvc_entity*
  %chain1 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  %entities2 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp = icmp ne %struct.list_head* %chain1, %entities2
  br i1 %cmp, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %call = call i32 @uvc_mc_init_entity(%struct.uvc_entity* %2)
  %cmp3 = icmp slt i32 %call, 0
  br i1 %cmp3, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %id = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 3
  %3 = load i8, i8* %id, align 4, !tbaa !91
  %conv = zext i8 %3 to i32
  %call4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.291, i32 0, i32 0), i32 %conv)
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %chain6 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %2, i32 0, i32 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %entities11 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  br label %for.cond15

for.cond15:                                       ; preds = %for.inc29, %for.end
  %chain31.sink = phi %struct.list_head* [ %chain31, %for.inc29 ], [ %entities11, %for.end ]
  %next32 = getelementptr inbounds %struct.list_head, %struct.list_head* %chain31.sink, i32 0, i32 0
  %4 = load %struct.list_head*, %struct.list_head** %next32, align 8, !tbaa !45
  %5 = bitcast %struct.list_head* %4 to i8*
  %add.ptr34 = getelementptr inbounds i8, i8* %5, i64 -16
  %6 = bitcast i8* %add.ptr34 to %struct.uvc_entity*
  %chain16 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  %entities17 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 2
  %cmp18 = icmp ne %struct.list_head* %chain16, %entities17
  br i1 %cmp18, label %for.body20, label %cleanup

for.body20:                                       ; preds = %for.cond15
  %call21 = call i32 @uvc_mc_register_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %6)
  %cmp22 = icmp slt i32 %call21, 0
  br i1 %cmp22, label %if.then24, label %for.inc29

if.then24:                                        ; preds = %for.body20
  %id25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 3
  %7 = load i8, i8* %id25, align 4, !tbaa !91
  %conv26 = zext i8 %7 to i32
  %call27 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1.292, i32 0, i32 0), i32 %conv26)
  br label %cleanup

for.inc29:                                        ; preds = %for.body20
  %chain31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %6, i32 0, i32 1
  br label %for.cond15

cleanup:                                          ; preds = %if.then24, %for.cond15, %if.then
  %retval.0 = phi i32 [ %call, %if.then ], [ %call21, %if.then24 ], [ 0, %for.cond15 ]
  ret i32 %retval.0
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_mc_init_entity(%struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp ne i32 %and, 257
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  call void @v4l2_subdev_init(%struct.v4l2_subdev* %subdev, %struct.v4l2_subdev_ops* @uvc_subdev_ops)
  %subdev2 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %name = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev2, i32 0, i32 8
  %arraydecay = getelementptr inbounds [32 x i8], [32 x i8]* %name, i32 0, i32 0
  %name3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 5
  %arraydecay4 = getelementptr inbounds [64 x i8], [64 x i8]* %name3, i32 0, i32 0
  %call = call i64 @strlcpy(i8* %arraydecay, i8* %arraydecay4, i64 32)
  %subdev5 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev5, i32 0, i32 0
  %num_pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %1 = load i32, i32* %num_pads, align 8, !tbaa !140
  %conv7 = trunc i32 %1 to i16
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %2 = load %struct.media_pad*, %struct.media_pad** %pads, align 8, !tbaa !141
  %call8 = call i32 @media_entity_init(%struct.media_entity* %entity6, i16 zeroext %conv7, %struct.media_pad* %2, i16 zeroext 0)
  br label %if.end25

if.else:                                          ; preds = %entry
  %vdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %3 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !66
  %cmp9 = icmp ne %struct.video_device* %3, null
  br i1 %cmp9, label %if.then11, label %if.end25

if.then11:                                        ; preds = %if.else
  %vdev12 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %4 = load %struct.video_device*, %struct.video_device** %vdev12, align 8, !tbaa !66
  %entity13 = getelementptr inbounds %struct.video_device, %struct.video_device* %4, i32 0, i32 0
  %num_pads14 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %5 = load i32, i32* %num_pads14, align 8, !tbaa !140
  %conv15 = trunc i32 %5 to i16
  %pads16 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %6 = load %struct.media_pad*, %struct.media_pad** %pads16, align 8, !tbaa !141
  %call17 = call i32 @media_entity_init(%struct.media_entity* %entity13, i16 zeroext %conv15, %struct.media_pad* %6, i16 zeroext 0)
  %flags = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 2
  %7 = load i32, i32* %flags, align 8, !tbaa !90
  %and18 = and i32 %7, 1
  %tobool = icmp ne i32 %and18, 0
  br i1 %tobool, label %if.then19, label %if.end25

if.then19:                                        ; preds = %if.then11
  %vdev20 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %8 = load %struct.video_device*, %struct.video_device** %vdev20, align 8, !tbaa !66
  %entity21 = getelementptr inbounds %struct.video_device, %struct.video_device* %8, i32 0, i32 0
  %flags22 = getelementptr inbounds %struct.media_entity, %struct.media_entity* %entity21, i32 0, i32 6
  %9 = load i64, i64* %flags22, align 8, !tbaa !515
  %or = or i64 %9, 1
  store i64 %or, i64* %flags22, align 8, !tbaa !515
  br label %if.end25

if.end25:                                         ; preds = %if.then19, %if.then11, %if.else, %if.then
  %ret.1 = phi i32 [ %call8, %if.then ], [ %call17, %if.then19 ], [ %call17, %if.then11 ], [ 0, %if.else ]
  ret i32 %ret.1
}

; Function Attrs: nounwind uwtable
define internal i32 @uvc_mc_register_entity(%struct.uvc_video_chain* %chain, %struct.uvc_entity* %entity) #0 {
entry:
  %type = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %0 = load i16, i16* %type, align 2, !tbaa !85
  %conv = zext i16 %0 to i32
  %and = and i32 %conv, 32767
  %cmp = icmp eq i32 %and, 257
  br i1 %cmp, label %cond.true, label %cond.false5

cond.true:                                        ; preds = %entry
  %vdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %1 = load %struct.video_device*, %struct.video_device** %vdev, align 8, !tbaa !66
  %tobool = icmp ne %struct.video_device* %1, null
  br i1 %tobool, label %cond.true2, label %cond.end7

cond.true2:                                       ; preds = %cond.true
  %vdev3 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 6
  %2 = load %struct.video_device*, %struct.video_device** %vdev3, align 8, !tbaa !66
  %entity4 = getelementptr inbounds %struct.video_device, %struct.video_device* %2, i32 0, i32 0
  br label %cond.end7

cond.false5:                                      ; preds = %entry
  %subdev = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %entity6 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev, i32 0, i32 0
  br label %cond.end7

cond.end7:                                        ; preds = %cond.false5, %cond.true2, %cond.true
  %cond8 = phi %struct.media_entity* [ %entity6, %cond.false5 ], [ %entity4, %cond.true2 ], [ null, %cond.true ]
  %cmp9 = icmp eq %struct.media_entity* %cond8, null
  br i1 %cmp9, label %cleanup70, label %if.end

if.end:                                           ; preds = %cond.end7
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %if.end
  %i.0 = phi i32 [ 0, %if.end ], [ %inc, %for.inc ]
  %retval.0 = phi i32 [ undef, %if.end ], [ %retval.1, %for.inc ]
  %num_pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 8
  %3 = load i32, i32* %num_pads, align 8, !tbaa !140
  %cmp11 = icmp ult i32 %i.0, %3
  br i1 %cmp11, label %for.body, label %for.end

for.body:                                         ; preds = %for.cond
  %pads = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 10
  %4 = load %struct.media_pad*, %struct.media_pad** %pads, align 8, !tbaa !141
  %idxprom = zext i32 %i.0 to i64
  %arrayidx = getelementptr inbounds %struct.media_pad, %struct.media_pad* %4, i64 %idxprom
  %flags13 = getelementptr inbounds %struct.media_pad, %struct.media_pad* %arrayidx, i32 0, i32 2
  %5 = load i64, i64* %flags13, align 8, !tbaa !142
  %and14 = and i64 %5, 1
  %tobool15 = icmp ne i64 %and14, 0
  br i1 %tobool15, label %if.end17, label %NodeBlock

if.end17:                                         ; preds = %for.body
  %dev = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %6 = load %struct.uvc_device*, %struct.uvc_device** %dev, align 8, !tbaa !88
  %baSourceID = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 13
  %7 = load i8*, i8** %baSourceID, align 8, !tbaa !109
  %idxprom18 = zext i32 %i.0 to i64
  %arrayidx19 = getelementptr inbounds i8, i8* %7, i64 %idxprom18
  %8 = load i8, i8* %arrayidx19, align 1, !tbaa !61
  %conv20 = zext i8 %8 to i32
  %call = call %struct.uvc_entity* @uvc_entity_by_id(%struct.uvc_device* %6, i32 %conv20)
  %cmp21 = icmp eq %struct.uvc_entity* %call, null
  br i1 %cmp21, label %NodeBlock, label %if.end24

if.end24:                                         ; preds = %if.end17
  %type25 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 4
  %9 = load i16, i16* %type25, align 2, !tbaa !85
  %conv26 = zext i16 %9 to i32
  %and27 = and i32 %conv26, 32767
  %cmp28 = icmp eq i32 %and27, 257
  br i1 %cmp28, label %cond.true30, label %cond.false39

cond.true30:                                      ; preds = %if.end24
  %vdev31 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 6
  %10 = load %struct.video_device*, %struct.video_device** %vdev31, align 8, !tbaa !66
  %tobool32 = icmp ne %struct.video_device* %10, null
  br i1 %tobool32, label %cond.true33, label %cond.end42

cond.true33:                                      ; preds = %cond.true30
  %vdev34 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 6
  %11 = load %struct.video_device*, %struct.video_device** %vdev34, align 8, !tbaa !66
  %entity35 = getelementptr inbounds %struct.video_device, %struct.video_device* %11, i32 0, i32 0
  br label %cond.end42

cond.false39:                                     ; preds = %if.end24
  %subdev40 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 7
  %entity41 = getelementptr inbounds %struct.v4l2_subdev, %struct.v4l2_subdev* %subdev40, i32 0, i32 0
  br label %cond.end42

cond.end42:                                       ; preds = %cond.false39, %cond.true33, %cond.true30
  %cond43 = phi %struct.media_entity* [ %entity41, %cond.false39 ], [ %entity35, %cond.true33 ], [ null, %cond.true30 ]
  %cmp44 = icmp eq %struct.media_entity* %cond43, null
  br i1 %cmp44, label %NodeBlock, label %if.end47

if.end47:                                         ; preds = %cond.end42
  %num_pads48 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %call, i32 0, i32 8
  %12 = load i32, i32* %num_pads48, align 8, !tbaa !140
  %sub = sub i32 %12, 1
  %conv49 = trunc i32 %sub to i8
  %conv50 = zext i8 %conv49 to i16
  %conv51 = trunc i32 %i.0 to i16
  %call52 = call i32 @media_entity_create_link(%struct.media_entity* %cond43, i16 zeroext %conv50, %struct.media_entity* %cond8, i16 zeroext %conv51, i32 3)
  %cmp53 = icmp slt i32 %call52, 0
  %. = select i1 %cmp53, i32 1, i32 0
  %call52.retval.0 = select i1 %cmp53, i32 %call52, i32 %retval.0
  br label %NodeBlock

NodeBlock:                                        ; preds = %if.end47, %cond.end42, %if.end17, %for.body
  %cleanup.dest.slot.0 = phi i32 [ 4, %for.body ], [ 1, %if.end17 ], [ 4, %cond.end42 ], [ %., %if.end47 ]
  %retval.1 = phi i32 [ %retval.0, %for.body ], [ -22, %if.end17 ], [ %retval.0, %cond.end42 ], [ %call52.retval.0, %if.end47 ]
  %Pivot = icmp slt i32 %cleanup.dest.slot.0, 4
  br i1 %Pivot, label %LeafBlock, label %LeafBlock1

LeafBlock1:                                       ; preds = %NodeBlock
  %SwitchLeaf2 = icmp eq i32 %cleanup.dest.slot.0, 4
  br i1 %SwitchLeaf2, label %for.inc, label %cleanup70

LeafBlock:                                        ; preds = %NodeBlock
  %SwitchLeaf = icmp eq i32 %cleanup.dest.slot.0, 0
  br i1 %SwitchLeaf, label %for.inc, label %cleanup70

for.inc:                                          ; preds = %LeafBlock, %LeafBlock1
  %inc = add i32 %i.0, 1
  br label %for.cond

for.end:                                          ; preds = %for.cond
  %type59 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 4
  %13 = load i16, i16* %type59, align 2, !tbaa !85
  %conv60 = zext i16 %13 to i32
  %and61 = and i32 %conv60, 32767
  %cmp62 = icmp eq i32 %and61, 257
  br i1 %cmp62, label %cleanup70, label %if.end65

if.end65:                                         ; preds = %for.end
  %dev66 = getelementptr inbounds %struct.uvc_video_chain, %struct.uvc_video_chain* %chain, i32 0, i32 0
  %14 = load %struct.uvc_device*, %struct.uvc_device** %dev66, align 8, !tbaa !88
  %vdev67 = getelementptr inbounds %struct.uvc_device, %struct.uvc_device* %14, i32 0, i32 10
  %subdev68 = getelementptr inbounds %struct.uvc_entity, %struct.uvc_entity* %entity, i32 0, i32 7
  %call69 = call i32 @v4l2_device_register_subdev(%struct.v4l2_device* %vdev67, %struct.v4l2_subdev* %subdev68)
  br label %cleanup70

cleanup70:                                        ; preds = %if.end65, %for.end, %LeafBlock, %LeafBlock1, %cond.end7
  %retval.2 = phi i32 [ %call69, %if.end65 ], [ 0, %cond.end7 ], [ 0, %for.end ], [ %retval.1, %LeafBlock1 ], [ %retval.1, %LeafBlock ]
  ret i32 %retval.2
}

declare i32 @media_entity_create_link(%struct.media_entity*, i16 zeroext, %struct.media_entity*, i16 zeroext, i32) #2

declare i32 @v4l2_device_register_subdev(%struct.v4l2_device*, %struct.v4l2_subdev*) #2

declare void @v4l2_subdev_init(%struct.v4l2_subdev*, %struct.v4l2_subdev_ops*) #2

declare i32 @media_entity_init(%struct.media_entity*, i16 zeroext, %struct.media_pad*, i16 zeroext) #2

attributes #0 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "counting-function"="mcount" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { inlinehint nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { alwaysinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.ident = !{!0, !0, !0, !0, !0, !0, !0, !0, !0}
!llvm.module.flags = !{!1}

!0 = !{!"clang version 5.0.1 (tags/RELEASE_500/final)"}
!1 = !{i32 1, !"wchar_size", i32 4}
!2 = !{!3, !3, i64 0}
!3 = !{!"int", !4, i64 0}
!4 = !{!"omnipotent char", !5, i64 0}
!5 = !{!"Simple C/C++ TBAA"}
!6 = !{!7, !9, i64 24}
!7 = !{!"usb_device_id", !8, i64 0, !8, i64 2, !8, i64 4, !8, i64 6, !8, i64 8, !4, i64 10, !4, i64 11, !4, i64 12, !4, i64 13, !4, i64 14, !4, i64 15, !4, i64 16, !9, i64 24}
!8 = !{!"short", !4, i64 0}
!9 = !{!"long", !4, i64 0}
!10 = !{!11, !3, i64 24}
!11 = !{!"uvc_device", !12, i64 0, !12, i64 8, !9, i64 16, !3, i64 24, !3, i64 28, !4, i64 32, !4, i64 64, !13, i64 68, !13, i64 72, !14, i64 80, !36, i64 1752, !8, i64 2112, !3, i64 2116, !18, i64 2120, !18, i64 2136, !18, i64 2152, !13, i64 2168, !12, i64 2176, !12, i64 2184, !12, i64 2192, !12, i64 2200, !4, i64 2208}
!12 = !{!"any pointer", !4, i64 0}
!13 = !{!"", !3, i64 0}
!14 = !{!"media_device", !12, i64 0, !15, i64 8, !4, i64 1288, !4, i64 1320, !4, i64 1360, !3, i64 1392, !3, i64 1396, !3, i64 1400, !18, i64 1408, !21, i64 1424, !20, i64 1496, !12, i64 1664}
!15 = !{!"media_devnode", !12, i64 0, !16, i64 8, !35, i64 1144, !12, i64 1248, !3, i64 1256, !9, i64 1264, !12, i64 1272}
!16 = !{!"device", !12, i64 0, !12, i64 8, !17, i64 16, !12, i64 80, !12, i64 88, !20, i64 96, !12, i64 264, !12, i64 272, !12, i64 280, !23, i64 288, !12, i64 880, !3, i64 888, !12, i64 896, !31, i64 904, !12, i64 912, !18, i64 920, !12, i64 936, !32, i64 944, !12, i64 960, !33, i64 968, !3, i64 976, !3, i64 980, !21, i64 984, !18, i64 1056, !34, i64 1072, !12, i64 1104, !12, i64 1112, !12, i64 1120, !12, i64 1128}
!17 = !{!"kobject", !12, i64 0, !18, i64 8, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !19, i64 56, !3, i64 60, !3, i64 60, !3, i64 60, !3, i64 60, !3, i64 60}
!18 = !{!"list_head", !12, i64 0, !12, i64 8}
!19 = !{!"kref", !13, i64 0}
!20 = !{!"mutex", !13, i64 0, !21, i64 8, !18, i64 80, !12, i64 96, !12, i64 104, !12, i64 112, !22, i64 120}
!21 = !{!"spinlock", !4, i64 0}
!22 = !{!"lockdep_map", !12, i64 0, !4, i64 8, !12, i64 24, !3, i64 32, !9, i64 40}
!23 = !{!"dev_pm_info", !24, i64 0, !3, i64 4, !3, i64 4, !25, i64 4, !25, i64 4, !25, i64 4, !25, i64 4, !21, i64 8, !18, i64 80, !26, i64 96, !12, i64 192, !25, i64 200, !25, i64 200, !28, i64 208, !9, i64 336, !29, i64 344, !27, i64 424, !13, i64 512, !13, i64 516, !3, i64 520, !3, i64 520, !3, i64 520, !3, i64 520, !3, i64 520, !3, i64 520, !3, i64 521, !3, i64 521, !3, i64 521, !3, i64 521, !3, i64 521, !4, i64 524, !4, i64 528, !3, i64 532, !3, i64 536, !9, i64 544, !9, i64 552, !9, i64 560, !9, i64 568, !12, i64 576, !12, i64 584}
!24 = !{!"pm_message", !3, i64 0}
!25 = !{!"_Bool", !4, i64 0}
!26 = !{!"completion", !3, i64 0, !27, i64 8}
!27 = !{!"__wait_queue_head", !21, i64 0, !18, i64 72}
!28 = !{!"timer_list", !18, i64 0, !9, i64 16, !12, i64 24, !12, i64 32, !9, i64 40, !3, i64 48, !3, i64 52, !12, i64 56, !4, i64 64, !22, i64 80}
!29 = !{!"work_struct", !30, i64 0, !18, i64 8, !12, i64 24, !22, i64 32}
!30 = !{!"", !9, i64 0}
!31 = !{!"long long", !4, i64 0}
!32 = !{!"dev_archdata", !12, i64 0, !12, i64 8}
!33 = !{!"acpi_dev_node", !12, i64 0}
!34 = !{!"klist_node", !12, i64 0, !18, i64 8, !19, i64 24}
!35 = !{!"cdev", !17, i64 0, !12, i64 64, !12, i64 72, !18, i64 80, !3, i64 96, !3, i64 100}
!36 = !{!"v4l2_device", !12, i64 0, !12, i64 8, !18, i64 16, !21, i64 32, !4, i64 104, !12, i64 144, !12, i64 152, !37, i64 160, !20, i64 176, !19, i64 344, !12, i64 352}
!37 = !{!"v4l2_prio_state", !4, i64 0}
!38 = !{!39, !12, i64 8}
!39 = !{!"usb_interface", !12, i64 0, !12, i64 8, !3, i64 16, !12, i64 24, !3, i64 32, !4, i64 36, !3, i64 40, !3, i64 40, !3, i64 40, !3, i64 40, !3, i64 40, !3, i64 40, !3, i64 40, !3, i64 40, !16, i64 48, !12, i64 1184, !13, i64 1192, !29, i64 1200}
!40 = !{!41, !4, i64 6}
!41 = !{!"usb_host_interface", !42, i64 0, !3, i64 12, !12, i64 16, !12, i64 24, !12, i64 32}
!42 = !{!"usb_interface_descriptor", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !4, i64 4, !4, i64 5, !4, i64 6, !4, i64 7, !4, i64 8}
!43 = !{!11, !4, i64 64}
!44 = !{!41, !4, i64 2}
!45 = !{!12, !12, i64 0}
!46 = !{!47, !12, i64 48}
!47 = !{!"uvc_streaming", !18, i64 0, !12, i64 16, !12, i64 24, !12, i64 32, !13, i64 40, !12, i64 48, !3, i64 56, !8, i64 60, !48, i64 64, !4, i64 88, !3, i64 92, !12, i64 96, !49, i64 104, !12, i64 144, !12, i64 152, !12, i64 160, !20, i64 168, !3, i64 336, !50, i64 344, !12, i64 1256, !52, i64 1264, !4, i64 1536, !4, i64 1576, !4, i64 1616, !3, i64 1656, !3, i64 1660, !4, i64 1664, !12, i64 1672, !53, i64 1680, !57, i64 1832}
!48 = !{!"uvc_streaming_header", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !12, i64 8, !4, i64 16, !4, i64 17, !4, i64 18, !4, i64 19}
!49 = !{!"uvc_streaming_control", !8, i64 0, !4, i64 2, !4, i64 3, !3, i64 4, !8, i64 8, !8, i64 10, !8, i64 12, !8, i64 14, !8, i64 16, !3, i64 18, !3, i64 22, !3, i64 26, !4, i64 30, !4, i64 31, !4, i64 32, !4, i64 33}
!50 = !{!"uvc_video_queue", !51, i64 0, !20, i64 648, !3, i64 816, !3, i64 820, !21, i64 824, !18, i64 896}
!51 = !{!"vb2_queue", !4, i64 0, !3, i64 4, !3, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !3, i64 56, !3, i64 60, !3, i64 64, !4, i64 68, !4, i64 72, !3, i64 328, !18, i64 336, !13, i64 352, !18, i64 360, !21, i64 376, !27, i64 448, !4, i64 536, !4, i64 600, !3, i64 632, !12, i64 640}
!52 = !{!"", !4, i64 0, !3, i64 256, !3, i64 260, !3, i64 264, !3, i64 268}
!53 = !{!"", !54, i64 0, !55, i64 64}
!54 = !{!"uvc_stats_frame", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !3, i64 32, !25, i64 36, !25, i64 37, !3, i64 40, !3, i64 44, !3, i64 48, !8, i64 52, !3, i64 56}
!55 = !{!"uvc_stats_stream", !56, i64 0, !56, i64 16, !3, i64 32, !3, i64 36, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !3, i64 60, !3, i64 64, !3, i64 68, !3, i64 72, !3, i64 76, !3, i64 80, !3, i64 84}
!56 = !{!"timespec", !9, i64 0, !9, i64 8}
!57 = !{!"uvc_clock", !12, i64 0, !3, i64 8, !3, i64 12, !3, i64 16, !8, i64 20, !8, i64 22, !21, i64 24}
!58 = !{!47, !12, i64 24}
!59 = !{i32 -2146249566, i32 -2146249527, i32 -2146249506, i32 -2146249469, i32 -2146249446, i32 -2146249576}
!60 = !{i32 -2146249142, i32 -2146249103, i32 -2146249082, i32 -2146249045, i32 -2146249022, i32 -2146249152}
!61 = !{!4, !4, i64 0}
!62 = !{!11, !12, i64 8}
!63 = !{!11, !12, i64 0}
!64 = !{!11, !12, i64 1752}
!65 = !{!18, !12, i64 0}
!66 = !{!67, !12, i64 104}
!67 = !{!"uvc_entity", !18, i64 0, !18, i64 16, !3, i64 32, !4, i64 36, !8, i64 38, !4, i64 40, !12, i64 104, !68, i64 112, !3, i64 368, !3, i64 372, !12, i64 376, !4, i64 384, !4, i64 424, !12, i64 432, !3, i64 440, !12, i64 448}
!68 = !{!"v4l2_subdev", !69, i64 0, !18, i64 128, !12, i64 144, !3, i64 152, !12, i64 160, !12, i64 168, !12, i64 176, !12, i64 184, !4, i64 192, !3, i64 224, !12, i64 232, !12, i64 240, !12, i64 248}
!69 = !{!"media_entity", !18, i64 0, !12, i64 16, !3, i64 24, !12, i64 32, !3, i64 40, !3, i64 44, !9, i64 48, !3, i64 56, !8, i64 60, !8, i64 62, !8, i64 64, !8, i64 66, !12, i64 72, !12, i64 80, !12, i64 88, !3, i64 96, !3, i64 100, !12, i64 104, !4, i64 112}
!70 = !{!47, !12, i64 96}
!71 = !{!47, !12, i64 72}
!72 = !{!9, !9, i64 0}
!73 = !{!39, !12, i64 48}
!74 = !{!18, !12, i64 8}
!75 = !{!13, !3, i64 0}
!76 = !{!41, !12, i64 16}
!77 = !{!41, !3, i64 12}
!78 = !{!41, !4, i64 4}
!79 = !{!41, !12, i64 24}
!80 = !{!81, !8, i64 4}
!81 = !{!"usb_endpoint_descriptor", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !8, i64 4, !4, i64 6, !4, i64 7, !4, i64 8}
!82 = !{!81, !4, i64 6}
!83 = !{!81, !4, i64 2}
!84 = !{!11, !12, i64 2176}
!85 = !{!67, !8, i64 38}
!86 = !{!67, !12, i64 16}
!87 = !{!67, !12, i64 24}
!88 = !{!89, !12, i64 0}
!89 = !{!"uvc_video_chain", !12, i64 0, !18, i64 8, !18, i64 24, !12, i64 40, !12, i64 48, !20, i64 56, !37, i64 224, !3, i64 240}
!90 = !{!67, !3, i64 32}
!91 = !{!67, !4, i64 36}
!92 = !{!47, !12, i64 32}
!93 = !{!47, !4, i64 66}
!94 = !{!95, !12, i64 1288}
!95 = !{!"video_device", !69, i64 0, !12, i64 128, !16, i64 136, !12, i64 1272, !12, i64 1280, !12, i64 1288, !12, i64 1296, !12, i64 1304, !12, i64 1312, !4, i64 1320, !3, i64 1352, !3, i64 1356, !3, i64 1360, !8, i64 1364, !9, i64 1368, !3, i64 1376, !21, i64 1384, !18, i64 1456, !3, i64 1472, !31, i64 1480, !31, i64 1488, !12, i64 1496, !12, i64 1504, !4, i64 1512, !4, i64 1536, !12, i64 1560}
!96 = !{!95, !12, i64 128}
!97 = !{!95, !12, i64 1496}
!98 = !{!95, !12, i64 1312}
!99 = !{!47, !4, i64 88}
!100 = !{!95, !3, i64 1356}
!101 = !{!89, !3, i64 240}
!102 = !{!47, !12, i64 16}
!103 = !{i32 -2146902480, i32 -2146902441, i32 -2146902420, i32 -2146902383, i32 -2146902360, i32 -2146902490}
!104 = !{!105, !12, i64 0}
!105 = !{!"v4l2_file_operations", !12, i64 0, !12, i64 8, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !12, i64 64, !12, i64 72, !12, i64 80}
!106 = !{!67, !4, i64 424}
!107 = !{!89, !12, i64 40}
!108 = !{!89, !12, i64 48}
!109 = !{!67, !12, i64 432}
!110 = !{!67, !12, i64 0}
!111 = !{!112, !8, i64 1280}
!112 = !{!"usb_device", !3, i64 0, !4, i64 4, !3, i64 20, !4, i64 24, !4, i64 28, !12, i64 32, !3, i64 40, !4, i64 44, !12, i64 56, !12, i64 64, !113, i64 72, !16, i64 136, !115, i64 1272, !12, i64 1296, !12, i64 1304, !12, i64 1312, !4, i64 1320, !4, i64 1448, !12, i64 1576, !8, i64 1584, !4, i64 1586, !4, i64 1587, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1588, !3, i64 1589, !3, i64 1589, !3, i64 1592, !12, i64 1600, !12, i64 1608, !12, i64 1616, !18, i64 1624, !3, i64 1640, !3, i64 1644, !13, i64 1648, !9, i64 1656, !9, i64 1664, !3, i64 1672, !3, i64 1672, !3, i64 1672, !12, i64 1680, !3, i64 1688, !4, i64 1692, !116, i64 1696, !116, i64 1712, !3, i64 1728}
!113 = !{!"usb_host_endpoint", !81, i64 0, !114, i64 9, !18, i64 16, !12, i64 32, !12, i64 40, !12, i64 48, !3, i64 56, !3, i64 60}
!114 = !{!"usb_ss_ep_comp_descriptor", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !8, i64 4}
!115 = !{!"usb_device_descriptor", !4, i64 0, !4, i64 1, !8, i64 2, !4, i64 4, !4, i64 5, !4, i64 6, !4, i64 7, !8, i64 8, !8, i64 10, !8, i64 12, !4, i64 14, !4, i64 15, !4, i64 16, !4, i64 17}
!116 = !{!"usb3_lpm_parameters", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
!117 = !{!112, !3, i64 0}
!118 = !{!11, !8, i64 2112}
!119 = !{!11, !3, i64 2116}
!120 = !{!81, !4, i64 3}
!121 = !{!39, !12, i64 0}
!122 = !{!47, !3, i64 56}
!123 = !{!113, !3, i64 56}
!124 = !{!113, !12, i64 48}
!125 = !{!47, !4, i64 64}
!126 = !{!47, !4, i64 65}
!127 = !{!47, !4, i64 80}
!128 = !{!47, !4, i64 81}
!129 = !{!47, !4, i64 82}
!130 = !{!47, !4, i64 83}
!131 = !{!47, !4, i64 67}
!132 = !{!47, !3, i64 92}
!133 = !{!134, !12, i64 48}
!134 = !{!"uvc_format", !4, i64 0, !4, i64 1, !4, i64 2, !4, i64 3, !3, i64 4, !3, i64 8, !4, i64 12, !3, i64 44, !12, i64 48}
!135 = !{!134, !3, i64 44}
!136 = !{!39, !3, i64 16}
!137 = !{!113, !8, i64 4}
!138 = !{!47, !8, i64 60}
!139 = !{!67, !3, i64 372}
!140 = !{!67, !3, i64 368}
!141 = !{!67, !12, i64 376}
!142 = !{!143, !9, i64 16}
!143 = !{!"media_pad", !12, i64 0, !8, i64 8, !9, i64 16}
!144 = !{!134, !4, i64 0}
!145 = !{!134, !4, i64 1}
!146 = !{!147, !12, i64 0}
!147 = !{!"uvc_format_desc", !12, i64 0, !4, i64 8, !3, i64 24}
!148 = !{!147, !3, i64 24}
!149 = !{!134, !3, i64 4}
!150 = !{!134, !4, i64 2}
!151 = !{!134, !3, i64 8}
!152 = !{!153, !4, i64 20}
!153 = !{!"uvc_frame", !4, i64 0, !4, i64 1, !8, i64 2, !8, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !4, i64 20, !3, i64 24, !12, i64 32}
!154 = !{!153, !3, i64 24}
!155 = !{!153, !12, i64 32}
!156 = !{!153, !4, i64 0}
!157 = !{!153, !4, i64 1}
!158 = !{!153, !8, i64 2}
!159 = !{!153, !8, i64 4}
!160 = !{!153, !3, i64 8}
!161 = !{!153, !3, i64 12}
!162 = !{!153, !3, i64 16}
!163 = !{!134, !4, i64 3}
!164 = !{!113, !4, i64 2}
!165 = !{!8, !8, i64 0}
!166 = !{!50, !4, i64 0}
!167 = !{!50, !3, i64 4}
!168 = !{!50, !12, i64 48}
!169 = !{!50, !3, i64 56}
!170 = !{!50, !12, i64 32}
!171 = !{!50, !12, i64 40}
!172 = !{!50, !3, i64 60}
!173 = !{!50, !3, i64 816}
!174 = !{!47, !3, i64 122}
!175 = !{!176, !12, i64 600}
!176 = !{!"vb2_buffer", !177, i64 0, !4, i64 88, !12, i64 600, !3, i64 608, !4, i64 612, !18, i64 616, !18, i64 632, !4, i64 648}
!177 = !{!"v4l2_buffer", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !178, i64 24, !179, i64 40, !3, i64 56, !3, i64 60, !4, i64 64, !3, i64 72, !3, i64 76, !3, i64 80}
!178 = !{!"timeval", !9, i64 0, !9, i64 8}
!179 = !{!"v4l2_timecode", !3, i64 0, !3, i64 4, !4, i64 8, !4, i64 9, !4, i64 10, !4, i64 11, !4, i64 12}
!180 = !{!176, !3, i64 4}
!181 = !{!182, !4, i64 856}
!182 = !{!"uvc_buffer", !176, i64 0, !18, i64 840, !4, i64 856, !3, i64 860, !12, i64 864, !3, i64 872, !3, i64 876, !3, i64 880}
!183 = !{!182, !3, i64 860}
!184 = !{!182, !12, i64 864}
!185 = !{!182, !3, i64 872}
!186 = !{!182, !3, i64 876}
!187 = !{!51, !12, i64 48}
!188 = !{!176, !3, i64 608}
!189 = !{!190, !3, i64 0}
!190 = !{!"v4l2_plane", !3, i64 0, !3, i64 4, !4, i64 8, !3, i64 16, !4, i64 20}
!191 = !{!190, !3, i64 4}
!192 = !{!193, !3, i64 0}
!193 = !{!"v4l2_requestbuffers", !3, i64 0, !3, i64 4, !3, i64 8, !4, i64 12}
!194 = !{!51, !3, i64 328}
!195 = !{!50, !3, i64 820}
!196 = !{!197, !12, i64 304}
!197 = !{!"file", !4, i64 0, !198, i64 16, !12, i64 32, !12, i64 40, !21, i64 48, !3, i64 120, !30, i64 128, !3, i64 136, !3, i64 140, !31, i64 144, !199, i64 152, !12, i64 248, !201, i64 256, !31, i64 288, !12, i64 296, !12, i64 304, !18, i64 312, !18, i64 328, !12, i64 344, !9, i64 352}
!198 = !{!"path", !12, i64 0, !12, i64 8}
!199 = !{!"fown_struct", !200, i64 0, !12, i64 72, !4, i64 80, !3, i64 84, !3, i64 88, !3, i64 92}
!200 = !{!"", !4, i64 0, !3, i64 8, !3, i64 12, !12, i64 16, !22, i64 24}
!201 = !{!"file_ra_state", !9, i64 0, !3, i64 8, !3, i64 12, !3, i64 16, !3, i64 20, !31, i64 24}
!202 = !{!203, !12, i64 176}
!203 = !{!"uvc_fh", !204, i64 0, !12, i64 168, !12, i64 176, !4, i64 184}
!204 = !{!"v4l2_fh", !18, i64 0, !12, i64 16, !12, i64 24, !4, i64 32, !27, i64 40, !18, i64 128, !18, i64 144, !3, i64 160, !3, i64 164}
!205 = !{i64 0, i64 8, !72}
!206 = !{!30, !9, i64 0}
!207 = !{!203, !12, i64 168}
!208 = !{!203, !4, i64 184}
!209 = !{i32 -2146207659, i32 -2146207620, i32 -2146207599, i32 -2146207562, i32 -2146207539, i32 -2146207530}
!210 = !{i32 -2146210082, i32 -2146210043, i32 -2146210022, i32 -2146209985, i32 -2146209962, i32 -2146210092}
!211 = !{!212, !9, i64 32}
!212 = !{!"thread_info", !12, i64 0, !12, i64 8, !3, i64 16, !3, i64 20, !3, i64 24, !3, i64 28, !30, i64 32, !213, i64 40, !12, i64 88, !3, i64 96, !3, i64 96}
!213 = !{!"restart_block", !12, i64 0, !4, i64 8}
!214 = !{i32 -2143316104}
!215 = !{i32 -2143305853, i32 -2143305846, i32 -2143305832, i32 -2143305830, i32 -2143306503, i32 -2143305790, i32 -2143305742, i32 -2143305676, i32 -2143305614, i32 -2143305562, i32 -2143306423, i32 -2143306398, i32 -2143305357, i32 -2143306325, i32 -2143306300, i32 -2143305097, i32 -2143305173, i32 -2143305080, i32 -2143305129, i32 -2143307027, i32 -2143306986, i32 -2143304314, i32 -2143304300, i32 -2143304298, i32 -2143304971, i32 -2143304258, i32 -2143304210, i32 -2143304144, i32 -2143304082, i32 -2143304030, i32 -2143304891, i32 -2143304866, i32 -2143303825, i32 -2143304793, i32 -2143304768, i32 -2143303565, i32 -2143303641, i32 -2143303548, i32 -2143303597, i32 -2143306954, i32 -2143306915, i32 -2143306886, i32 -2143306840, i32 -2143306815, i32 -2143303531, i32 -2143303487, i32 -2143303464, i32 -2143303431, i32 -2143303400}
!216 = !{!217, !3, i64 72}
!217 = !{!"uvc_xu_control_mapping", !3, i64 0, !4, i64 4, !4, i64 36, !4, i64 52, !4, i64 53, !4, i64 54, !3, i64 56, !3, i64 60, !12, i64 64, !3, i64 72, !4, i64 76}
!218 = !{!217, !12, i64 64}
!219 = !{i32 -2143289558, i32 -2143289551, i32 -2143289537, i32 -2143289535, i32 -2143290208, i32 -2143289495, i32 -2143289447, i32 -2143289381, i32 -2143289319, i32 -2143289267, i32 -2143290128, i32 -2143290103, i32 -2143289062, i32 -2143290030, i32 -2143290005, i32 -2143288802, i32 -2143288878, i32 -2143284724, i32 -2143288834, i32 -2143290731, i32 -2143290690, i32 -2143283958, i32 -2143283944, i32 -2143283942, i32 -2143284615, i32 -2143283902, i32 -2143283854, i32 -2143283788, i32 -2143283726, i32 -2143283674, i32 -2143284535, i32 -2143284510, i32 -2143283469, i32 -2143284437, i32 -2143284412, i32 -2143283209, i32 -2143283285, i32 -2143283192, i32 -2143283241, i32 -2143290658, i32 -2143290619, i32 -2143290590, i32 -2143290544, i32 -2143290519, i32 -2143283175, i32 -2143283131, i32 -2143283108, i32 -2143283075, i32 -2143283044}
!220 = !{i32 -2143278506}
!221 = !{i32 -2143259683}
!222 = !{!223, !8, i64 4}
!223 = !{!"uvc_xu_control_query", !4, i64 0, !4, i64 1, !4, i64 2, !8, i64 4, !12, i64 8}
!224 = !{!223, !12, i64 8}
!225 = !{i32 -2143249549, i32 -2143249542, i32 -2143249528, i32 -2143249526, i32 -2143250199, i32 -2143249486, i32 -2143249438, i32 -2143249372, i32 -2143249310, i32 -2143249258, i32 -2143250119, i32 -2143250094, i32 -2143249053, i32 -2143250021, i32 -2143249996, i32 -2143248793, i32 -2143248869, i32 -2143248776, i32 -2143248825, i32 -2143250717, i32 -2143250676, i32 -2143248010, i32 -2143247996, i32 -2143247994, i32 -2143248667, i32 -2143247954, i32 -2143247906, i32 -2143247840, i32 -2143247778, i32 -2143247726, i32 -2143248587, i32 -2143248562, i32 -2143247521, i32 -2143248489, i32 -2143248464, i32 -2143247261, i32 -2143247337, i32 -2143247244, i32 -2143247293, i32 -2143250644, i32 -2143250605, i32 -2143250576, i32 -2143250530, i32 -2143250505, i32 -2143247227, i32 -2143247183, i32 -2143247160, i32 -2143247127, i32 -2143247096}
!226 = !{i32 -2143242629}
!227 = !{i32 -2146182175}
!228 = !{i32 -2143277694}
!229 = !{i32 -2143267280, i32 -2143267273, i32 -2143267259, i32 -2143267257, i32 -2143267930, i32 -2143267217, i32 -2143267169, i32 -2143267103, i32 -2143267041, i32 -2143266989, i32 -2143267850, i32 -2143267825, i32 -2143266784, i32 -2143267752, i32 -2143267727, i32 -2143266524, i32 -2143266600, i32 -2143266507, i32 -2143266556, i32 -2143268444, i32 -2143268403, i32 -2143265741, i32 -2143265727, i32 -2143265725, i32 -2143266398, i32 -2143265685, i32 -2143265637, i32 -2143265571, i32 -2143265509, i32 -2143265457, i32 -2143266318, i32 -2143266293, i32 -2143265252, i32 -2143266220, i32 -2143266195, i32 -2143264992, i32 -2143265068, i32 -2143264975, i32 -2143265024, i32 -2143268371, i32 -2143268332, i32 -2143268303, i32 -2143268278, i32 -2143264958, i32 -2143264914, i32 -2143264891, i32 -2143264858, i32 -2143264827}
!230 = !{i32 -2143260591}
!231 = !{i32 -2143241842}
!232 = !{i32 -2143241365}
!233 = !{i32 -2143240487}
!234 = !{i32 -2144325065, i32 -2144325058, i32 -2144325042, i32 -2144325581, i32 -2144325018, i32 -2144324970, i32 -2144324904, i32 -2144324842, i32 -2144324790, i32 -2144324585, i32 -2144324537, i32 -2144324471, i32 -2144324409, i32 -2144324357, i32 -2144325465, i32 -2144325440, i32 -2144324152, i32 -2144323992, i32 -2144325342, i32 -2144325317, i32 -2144323739, i32 -2144323808, i32 -2144323722, i32 -2144323764, i32 -2144323681, i32 -2144323595, i32 -2144323637}
!235 = !{!236, !3, i64 80}
!236 = !{!"v4l2_capability", !4, i64 0, !4, i64 16, !4, i64 48, !3, i64 80, !3, i64 84, !3, i64 88, !4, i64 92}
!237 = !{!236, !3, i64 84}
!238 = !{!236, !3, i64 88}
!239 = !{!203, !4, i64 32}
!240 = !{!241, !3, i64 0}
!241 = !{!"v4l2_control", !3, i64 0, !3, i64 4}
!242 = !{!243, !3, i64 0}
!243 = !{!"v4l2_ext_control", !3, i64 0, !3, i64 4, !4, i64 8, !4, i64 12}
!244 = !{!241, !3, i64 4}
!245 = !{!246, !12, i64 24}
!246 = !{!"v4l2_ext_controls", !3, i64 0, !3, i64 4, !3, i64 8, !4, i64 12, !12, i64 24}
!247 = !{!246, !3, i64 4}
!248 = !{!246, !3, i64 8}
!249 = !{!250, !3, i64 0}
!250 = !{!"v4l2_input", !3, i64 0, !4, i64 4, !3, i64 36, !3, i64 40, !3, i64 44, !31, i64 48, !3, i64 56, !3, i64 60, !4, i64 64}
!251 = !{!250, !3, i64 36}
!252 = !{!11, !3, i64 28}
!253 = !{!254, !3, i64 4}
!254 = !{!"v4l2_fmtdesc", !3, i64 0, !3, i64 4, !3, i64 8, !4, i64 12, !3, i64 44, !4, i64 48}
!255 = !{!254, !3, i64 0}
!256 = !{!254, !3, i64 8}
!257 = !{!254, !3, i64 44}
!258 = !{!259, !3, i64 4}
!259 = !{!"v4l2_frmsizeenum", !3, i64 0, !3, i64 4, !3, i64 8, !4, i64 12, !4, i64 36}
!260 = !{!259, !3, i64 0}
!261 = !{!259, !3, i64 8}
!262 = !{!263, !3, i64 4}
!263 = !{!"v4l2_frmivalenum", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12, !3, i64 16, !4, i64 20, !4, i64 44}
!264 = !{!263, !3, i64 8}
!265 = !{!263, !3, i64 12}
!266 = !{!263, !3, i64 0}
!267 = !{!263, !3, i64 16}
!268 = !{!269, !3, i64 0}
!269 = !{!"v4l2_cropcap", !3, i64 0, !270, i64 4, !270, i64 20, !271, i64 36}
!270 = !{!"v4l2_rect", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
!271 = !{!"v4l2_fract", !3, i64 0, !3, i64 4}
!272 = !{!269, !3, i64 4}
!273 = !{!269, !3, i64 8}
!274 = !{!47, !12, i64 160}
!275 = !{!269, !3, i64 12}
!276 = !{!269, !3, i64 16}
!277 = !{i64 0, i64 4, !2, i64 4, i64 4, !2, i64 8, i64 4, !2, i64 12, i64 4, !2}
!278 = !{!269, !3, i64 36}
!279 = !{!269, !3, i64 40}
!280 = !{!197, !3, i64 136}
!281 = !{!282, !3, i64 0}
!282 = !{!"v4l2_event_subscription", !3, i64 0, !3, i64 4, !3, i64 8, !4, i64 12}
!283 = !{!112, !12, i64 64}
!284 = !{!285, !12, i64 16}
!285 = !{!"usb_bus", !12, i64 0, !3, i64 8, !12, i64 16, !4, i64 24, !4, i64 25, !4, i64 26, !3, i64 27, !3, i64 27, !3, i64 27, !3, i64 28, !3, i64 32, !286, i64 40, !12, i64 56, !12, i64 64, !18, i64 72, !3, i64 88, !3, i64 92, !3, i64 96, !3, i64 100, !12, i64 104, !3, i64 112}
!286 = !{!"usb_devmap", !4, i64 0}
!287 = !{!288, !3, i64 0}
!288 = !{!"v4l2_format", !3, i64 0, !4, i64 8}
!289 = !{!47, !12, i64 144}
!290 = !{!49, !8, i64 0}
!291 = !{!49, !4, i64 2}
!292 = !{!49, !4, i64 3}
!293 = !{!49, !3, i64 4}
!294 = !{!49, !3, i64 18}
!295 = !{i64 0, i64 2, !165, i64 2, i64 1, !61, i64 3, i64 1, !61, i64 4, i64 4, !2, i64 8, i64 2, !165, i64 10, i64 2, !165, i64 12, i64 2, !165, i64 14, i64 2, !165, i64 16, i64 2, !165, i64 18, i64 4, !2, i64 22, i64 4, !2, i64 26, i64 4, !2, i64 30, i64 1, !61, i64 31, i64 1, !61, i64 32, i64 1, !61, i64 33, i64 1, !61}
!296 = !{!47, !12, i64 152}
!297 = !{!298, !3, i64 0}
!298 = !{!"v4l2_streamparm", !3, i64 0, !4, i64 4}
!299 = !{!47, !3, i64 108}
!300 = !{i64 0, i64 4, !2, i64 4, i64 4, !2}
!301 = !{!271, !3, i64 0}
!302 = !{!271, !3, i64 4}
!303 = !{!217, !3, i64 0}
!304 = !{!305, !3, i64 32}
!305 = !{!"uvc_control_mapping", !18, i64 0, !18, i64 16, !3, i64 32, !4, i64 36, !4, i64 68, !4, i64 84, !4, i64 85, !4, i64 86, !4, i64 88, !3, i64 92, !12, i64 96, !3, i64 104, !3, i64 108, !3, i64 112, !4, i64 116, !12, i64 128, !12, i64 136}
!306 = !{!217, !4, i64 52}
!307 = !{!305, !4, i64 84}
!308 = !{!217, !4, i64 53}
!309 = !{!305, !4, i64 85}
!310 = !{!217, !4, i64 54}
!311 = !{!305, !4, i64 86}
!312 = !{!217, !3, i64 56}
!313 = !{!305, !4, i64 88}
!314 = !{!217, !3, i64 60}
!315 = !{!305, !3, i64 92}
!316 = !{!305, !12, i64 96}
!317 = !{!305, !3, i64 104}
!318 = !{!49, !8, i64 12}
!319 = !{!49, !3, i64 22}
!320 = !{!49, !8, i64 8}
!321 = !{!49, !8, i64 10}
!322 = !{!49, !8, i64 14}
!323 = !{!49, !8, i64 16}
!324 = !{!49, !3, i64 26}
!325 = !{!49, !4, i64 30}
!326 = !{!49, !4, i64 31}
!327 = !{!49, !4, i64 32}
!328 = !{!49, !4, i64 33}
!329 = !{i32 -2147062814, i32 -2147062775, i32 -2147062754, i32 -2147062717, i32 -2147062694, i32 -2147062824, i32 371902}
!330 = !{!112, !4, i64 28}
!331 = !{!57, !3, i64 12}
!332 = !{!57, !3, i64 16}
!333 = !{!57, !12, i64 0}
!334 = !{!57, !3, i64 8}
!335 = !{!182, !3, i64 880}
!336 = !{!337, !3, i64 0}
!337 = !{!"uvc_clock_sample", !3, i64 0, !8, i64 4, !56, i64 8, !8, i64 24}
!338 = !{!337, !8, i64 4}
!339 = !{!57, !8, i64 22}
!340 = !{i64 0, i64 8, !72, i64 8, i64 8, !72}
!341 = !{!56, !9, i64 0}
!342 = !{!56, !9, i64 8}
!343 = !{!337, !9, i64 8}
!344 = !{!337, !9, i64 16}
!345 = !{!177, !9, i64 24}
!346 = !{!177, !9, i64 32}
!347 = !{!337, !8, i64 24}
!348 = !{!47, !9, i64 1760}
!349 = !{!47, !9, i64 1744}
!350 = !{!47, !9, i64 1768}
!351 = !{!47, !9, i64 1752}
!352 = !{!47, !3, i64 1816}
!353 = !{!47, !3, i64 1776}
!354 = !{!47, !3, i64 1780}
!355 = !{!47, !3, i64 1784}
!356 = !{!47, !3, i64 1792}
!357 = !{!47, !3, i64 1788}
!358 = !{!47, !3, i64 1800}
!359 = !{!47, !3, i64 1804}
!360 = !{!47, !3, i64 1796}
!361 = !{!47, !3, i64 1808}
!362 = !{!47, !3, i64 1812}
!363 = !{!47, !3, i64 1824}
!364 = !{!47, !3, i64 1828}
!365 = !{!47, !3, i64 1656}
!366 = !{!31, !31, i64 0}
!367 = !{!57, !8, i64 20}
!368 = !{!47, !3, i64 1660}
!369 = !{!47, !4, i64 1664}
!370 = !{!47, !3, i64 1520}
!371 = !{!47, !3, i64 1524}
!372 = !{!47, !3, i64 1528}
!373 = !{!47, !3, i64 126}
!374 = !{!41, !4, i64 3}
!375 = !{!113, !8, i64 13}
!376 = !{!377, !12, i64 72}
!377 = !{!"urb", !19, i64 0, !12, i64 8, !13, i64 16, !13, i64 20, !3, i64 24, !18, i64 32, !18, i64 48, !12, i64 64, !12, i64 72, !12, i64 80, !3, i64 88, !3, i64 92, !3, i64 96, !3, i64 100, !12, i64 104, !31, i64 112, !12, i64 120, !3, i64 128, !3, i64 132, !3, i64 136, !3, i64 140, !12, i64 144, !31, i64 152, !3, i64 160, !3, i64 164, !3, i64 168, !3, i64 172, !12, i64 176, !12, i64 184, !4, i64 192}
!378 = !{!377, !12, i64 176}
!379 = !{!377, !3, i64 88}
!380 = !{!377, !3, i64 100}
!381 = !{!377, !31, i64 112}
!382 = !{!113, !4, i64 6}
!383 = !{!377, !3, i64 168}
!384 = !{!377, !12, i64 104}
!385 = !{!377, !12, i64 184}
!386 = !{!377, !3, i64 164}
!387 = !{!377, !3, i64 136}
!388 = !{!389, !3, i64 0}
!389 = !{!"usb_iso_packet_descriptor", !3, i64 0, !3, i64 4, !3, i64 8, !3, i64 12}
!390 = !{!389, !3, i64 4}
!391 = !{!47, !3, i64 1532}
!392 = !{!377, !3, i64 96}
!393 = !{!47, !12, i64 1256}
!394 = !{!389, !3, i64 12}
!395 = !{!389, !3, i64 8}
!396 = !{!377, !3, i64 140}
!397 = !{!47, !3, i64 1164}
!398 = !{!182, !3, i64 56}
!399 = !{!47, !3, i64 1696}
!400 = !{!182, !9, i64 24}
!401 = !{!182, !9, i64 32}
!402 = !{!54, !3, i64 4}
!403 = !{!54, !3, i64 8}
!404 = !{!54, !3, i64 12}
!405 = !{!54, !3, i64 28}
!406 = !{!54, !3, i64 32}
!407 = !{!54, !3, i64 24}
!408 = !{!54, !25, i64 37}
!409 = !{i8 0, i8 2}
!410 = !{!54, !25, i64 36}
!411 = !{!54, !3, i64 48}
!412 = !{!54, !3, i64 44}
!413 = !{!54, !3, i64 40}
!414 = !{!54, !3, i64 56}
!415 = !{!54, !8, i64 52}
!416 = !{!47, !3, i64 1688}
!417 = !{!47, !3, i64 1692}
!418 = !{!47, !3, i64 1700}
!419 = !{!47, !8, i64 1852}
!420 = !{!47, !8, i64 1854}
!421 = !{!47, !12, i64 1832}
!422 = !{!47, !3, i64 1840}
!423 = !{!47, !3, i64 1848}
!424 = !{!47, !3, i64 1844}
!425 = !{!47, !3, i64 1704}
!426 = !{!47, !3, i64 1720}
!427 = !{!47, !3, i64 1708}
!428 = !{!47, !3, i64 1712}
!429 = !{!47, !3, i64 1680}
!430 = !{!47, !25, i64 1716}
!431 = !{!47, !25, i64 1717}
!432 = !{!47, !3, i64 1724}
!433 = !{!47, !3, i64 1736}
!434 = !{!47, !3, i64 1728}
!435 = !{!47, !3, i64 1820}
!436 = !{!47, !8, i64 1732}
!437 = !{!47, !3, i64 1684}
!438 = !{!439, !3, i64 44}
!439 = !{!"uvc_control", !12, i64 0, !440, i64 8, !4, i64 48, !4, i64 49, !4, i64 49, !4, i64 49, !4, i64 49, !4, i64 49, !12, i64 56}
!440 = !{!"uvc_control_info", !18, i64 0, !4, i64 16, !4, i64 32, !4, i64 33, !8, i64 34, !3, i64 36}
!441 = !{!439, !12, i64 0}
!442 = !{!439, !4, i64 41}
!443 = !{!439, !8, i64 42}
!444 = !{!305, !12, i64 128}
!445 = !{!446, !3, i64 0}
!446 = !{!"uvc_menu_info", !3, i64 0, !4, i64 4}
!447 = !{!448, !3, i64 0}
!448 = !{!"v4l2_event", !3, i64 0, !4, i64 8, !3, i64 72, !3, i64 76, !56, i64 80, !3, i64 96, !4, i64 100}
!449 = !{!450, !3, i64 0}
!450 = !{!"v4l2_queryctrl", !3, i64 0, !3, i64 4, !4, i64 8, !3, i64 40, !3, i64 44, !3, i64 48, !3, i64 52, !3, i64 56, !4, i64 60}
!451 = !{!448, !3, i64 96}
!452 = !{!450, !3, i64 4}
!453 = !{!450, !3, i64 56}
!454 = !{!450, !3, i64 40}
!455 = !{!450, !3, i64 44}
!456 = !{!450, !3, i64 48}
!457 = !{!450, !3, i64 52}
!458 = !{!305, !3, i64 108}
!459 = !{!305, !3, i64 112}
!460 = !{!67, !3, i64 440}
!461 = !{!67, !12, i64 448}
!462 = !{!439, !12, i64 56}
!463 = !{i32 -2147061251, i32 -2147061212, i32 -2147061191, i32 -2147061154, i32 -2147061131, i32 -2147061261, i32 373465}
!464 = !{!465, !3, i64 4}
!465 = !{!"v4l2_querymenu", !3, i64 0, !3, i64 4, !4, i64 8, !3, i64 40}
!466 = !{!465, !3, i64 0}
!467 = !{!305, !12, i64 136}
!468 = !{!223, !4, i64 0}
!469 = !{!439, !4, i64 48}
!470 = !{!223, !4, i64 1}
!471 = !{!223, !4, i64 2}
!472 = !{!440, !4, i64 33}
!473 = !{!440, !4, i64 32}
!474 = !{!440, !8, i64 34}
!475 = !{!440, !3, i64 36}
!476 = !{i64 0, i64 8, !45, i64 8, i64 8, !45, i64 16, i64 16, !61, i64 32, i64 1, !61, i64 33, i64 1, !61, i64 34, i64 2, !165, i64 36, i64 4, !2}
!477 = !{!478, !4, i64 32}
!478 = !{!"uvc_ctrl_fixup", !7, i64 0, !4, i64 32, !4, i64 33, !4, i64 34}
!479 = !{!478, !4, i64 33}
!480 = !{!478, !4, i64 34}
!481 = !{!439, !4, i64 40}
!482 = !{i32 -2146164126, i32 -2146164087, i32 -2146164066, i32 -2146164029, i32 -2146164006, i32 -2146163997}
!483 = !{i32 -2146166549, i32 -2146166510, i32 -2146166489, i32 -2146166452, i32 -2146166429, i32 -2146166559}
!484 = !{!485, !4, i64 32}
!485 = !{!"uvc_ctrl_blacklist", !7, i64 0, !4, i64 32}
!486 = !{!305, !12, i64 0}
!487 = !{!11, !12, i64 2192}
!488 = !{!11, !12, i64 2184}
!489 = !{!490, !12, i64 0}
!490 = !{!"input_dev", !12, i64 0, !12, i64 8, !12, i64 16, !491, i64 24, !4, i64 32, !4, i64 40, !4, i64 48, !4, i64 144, !4, i64 152, !4, i64 160, !4, i64 168, !4, i64 176, !4, i64 184, !4, i64 200, !3, i64 208, !3, i64 212, !3, i64 216, !12, i64 224, !12, i64 232, !12, i64 240, !12, i64 248, !3, i64 256, !28, i64 264, !4, i64 392, !12, i64 400, !12, i64 408, !4, i64 416, !4, i64 512, !4, i64 520, !4, i64 528, !12, i64 536, !12, i64 544, !12, i64 552, !12, i64 560, !12, i64 568, !21, i64 576, !20, i64 648, !3, i64 816, !25, i64 820, !16, i64 824, !18, i64 1960, !18, i64 1976, !3, i64 1992, !3, i64 1996, !12, i64 2000, !25, i64 2008}
!491 = !{!"input_id", !8, i64 0, !8, i64 2, !8, i64 4, !8, i64 6}
!492 = !{!490, !12, i64 8}
!493 = !{!490, !12, i64 824}
!494 = !{!11, !12, i64 2200}
!495 = !{i32 329088}
!496 = !{!377, !3, i64 160}
!497 = !{!491, !8, i64 0}
!498 = !{!491, !8, i64 2}
!499 = !{!112, !8, i64 1282}
!500 = !{!491, !8, i64 4}
!501 = !{!112, !8, i64 1284}
!502 = !{!491, !8, i64 6}
!503 = !{i32 319366}
!504 = !{!285, !3, i64 8}
!505 = !{!47, !12, i64 1672}
!506 = !{!507, !9, i64 0}
!507 = !{!"uvc_debugfs_buffer", !9, i64 0, !4, i64 8}
!508 = !{!509, !12, i64 1024}
!509 = !{!"inode", !8, i64 0, !8, i64 2, !3, i64 4, !3, i64 8, !3, i64 12, !12, i64 16, !12, i64 24, !12, i64 32, !12, i64 40, !12, i64 48, !12, i64 56, !9, i64 64, !4, i64 72, !3, i64 76, !31, i64 80, !56, i64 88, !56, i64 104, !56, i64 120, !21, i64 136, !8, i64 208, !3, i64 212, !9, i64 216, !9, i64 224, !20, i64 232, !9, i64 400, !510, i64 408, !18, i64 424, !18, i64 440, !18, i64 456, !4, i64 472, !31, i64 488, !13, i64 496, !13, i64 500, !13, i64 504, !12, i64 512, !12, i64 520, !511, i64 528, !4, i64 960, !18, i64 976, !4, i64 992, !3, i64 1000, !3, i64 1004, !514, i64 1008, !13, i64 1016, !12, i64 1024}
!510 = !{!"hlist_node", !12, i64 0, !12, i64 8}
!511 = !{!"address_space", !12, i64 0, !512, i64 8, !21, i64 24, !3, i64 96, !513, i64 104, !18, i64 112, !20, i64 128, !9, i64 296, !9, i64 304, !12, i64 312, !9, i64 320, !12, i64 328, !21, i64 336, !18, i64 408, !12, i64 424}
!512 = !{!"radix_tree_root", !3, i64 0, !3, i64 4, !12, i64 8}
!513 = !{!"rb_root", !12, i64 0}
!514 = !{!"hlist_head", !12, i64 0}
!515 = !{!95, !9, i64 48}
