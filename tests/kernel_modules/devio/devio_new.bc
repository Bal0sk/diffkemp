; ModuleID = 'drivers/usb/core/devio.bc'
source_filename = "drivers/usb/core/devio.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.mutex = type { %struct.atomic64_t, %struct.spinlock, %struct.optimistic_spin_queue, %struct.list_head }
%struct.atomic64_t = type { i64 }
%struct.spinlock = type { %union.anon }
%union.anon = type { %struct.raw_spinlock }
%struct.raw_spinlock = type { %struct.qspinlock }
%struct.qspinlock = type { %struct.atomic_t }
%struct.atomic_t = type { i32 }
%struct.optimistic_spin_queue = type { %struct.atomic_t }
%struct.list_head = type { %struct.list_head*, %struct.list_head* }
%struct.kernel_param_ops = type { i32, i32 (i8*, %struct.kernel_param*)*, i32 (i8*, %struct.kernel_param*)*, void (i8*)* }
%struct.kernel_param = type { i8*, %struct.module*, %struct.kernel_param_ops*, i16, i8, i8, %union.anon.51 }
%struct.module = type { i32, %struct.list_head, [56 x i8], %struct.module_kobject, %struct.module_attribute*, i8*, i8*, %struct.kobject*, %struct.kernel_symbol*, i32*, i32, %struct.mutex, %struct.kernel_param*, i32, i32, %struct.kernel_symbol*, i32*, i8, %struct.kernel_symbol*, i32*, i32, i32, %struct.exception_table_entry*, i32 ()*, [40 x i8], %struct.module_layout, %struct.module_layout, %struct.mod_arch_specific, i64, i32, %struct.list_head, %struct.bug_entry*, %struct.mod_kallsyms*, %struct.mod_kallsyms, %struct.module_sect_attrs*, %struct.module_notes_attrs*, i8*, i8*, i32, i32, %struct.tracepoint**, i32, i8**, %struct.trace_event_call**, i32, %struct.trace_enum_map**, i32, %struct.list_head, %struct.list_head, void ()*, %struct.atomic_t, [12 x i8] }
%struct.module_kobject = type { %struct.kobject, %struct.module*, %struct.kobject*, %struct.module_param_attrs*, %struct.completion* }
%struct.kobject = type { i8*, %struct.list_head, %struct.kobject*, %struct.kset*, %struct.kobj_type*, %struct.kernfs_node*, %struct.kref, i8 }
%struct.kset = type { %struct.list_head, %struct.spinlock, %struct.kobject, %struct.kset_uevent_ops* }
%struct.kset_uevent_ops = type { i32 (%struct.kset*, %struct.kobject*)*, i8* (%struct.kset*, %struct.kobject*)*, i32 (%struct.kset*, %struct.kobject*, %struct.kobj_uevent_env*)* }
%struct.kobj_uevent_env = type { [3 x i8*], [32 x i8*], i32, [2048 x i8], i32 }
%struct.kobj_type = type { void (%struct.kobject*)*, %struct.sysfs_ops*, %struct.attribute**, %struct.kobj_ns_type_operations* (%struct.kobject*)*, i8* (%struct.kobject*)* }
%struct.sysfs_ops = type { i64 (%struct.kobject*, %struct.attribute*, i8*)*, i64 (%struct.kobject*, %struct.attribute*, i8*, i64)* }
%struct.attribute = type { i8*, i16 }
%struct.kobj_ns_type_operations = type { i32, i1 ()*, i8* ()*, i8* (%struct.sock*)*, i8* ()*, void (i8*)* }
%struct.sock = type opaque
%struct.kernfs_node = type { %struct.atomic_t, %struct.atomic_t, %struct.kernfs_node*, i8*, %struct.rb_node, i8*, i32, %union.anon.0, i8*, i16, i16, i32, %struct.kernfs_iattrs* }
%struct.rb_node = type { i64, %struct.rb_node*, %struct.rb_node* }
%union.anon.0 = type { %struct.kernfs_elem_attr }
%struct.kernfs_elem_attr = type { %struct.kernfs_ops*, %struct.kernfs_open_node*, i64, %struct.kernfs_node* }
%struct.kernfs_ops = type { i32 (%struct.kernfs_open_file*)*, void (%struct.kernfs_open_file*)*, i32 (%struct.seq_file*, i8*)*, i8* (%struct.seq_file*, i64*)*, i8* (%struct.seq_file*, i8*, i64*)*, void (%struct.seq_file*, i8*)*, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i64, i8, i64 (%struct.kernfs_open_file*, i8*, i64, i64)*, i32 (%struct.kernfs_open_file*, %struct.vm_area_struct*)* }
%struct.kernfs_open_file = type { %struct.kernfs_node*, %struct.file*, %struct.seq_file*, i8*, %struct.mutex, %struct.mutex, i32, %struct.list_head, i8*, i64, i8, %struct.vm_operations_struct* }
%struct.file = type { %union.anon.2, %struct.path, %struct.inode*, %struct.file_operations*, %struct.spinlock, %struct.atomic64_t, i32, i32, %struct.mutex, i64, %struct.fown_struct, %struct.cred*, %struct.file_ra_state, i64, i8*, i8*, %struct.list_head, %struct.list_head, %struct.address_space* }
%union.anon.2 = type { %struct.callback_head }
%struct.callback_head = type { %struct.callback_head*, void (%struct.callback_head*)* }
%struct.path = type { %struct.vfsmount*, %struct.dentry* }
%struct.vfsmount = type opaque
%struct.dentry = type { i32, %struct.seqcount, %struct.hlist_bl_node, %struct.dentry*, %struct.qstr, %struct.inode*, [32 x i8], %struct.lockref, %struct.dentry_operations*, %struct.super_block*, i64, i8*, %union.anon.49, %struct.list_head, %struct.list_head, %union.anon.50 }
%struct.seqcount = type { i32 }
%struct.hlist_bl_node = type { %struct.hlist_bl_node*, %struct.hlist_bl_node** }
%struct.qstr = type { %union.anon.3, i8* }
%union.anon.3 = type { i64 }
%struct.lockref = type { %union.anon.47 }
%union.anon.47 = type { i64 }
%struct.dentry_operations = type { i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.qstr*)*, i32 (%struct.dentry*, i32, i8*, %struct.qstr*)*, i32 (%struct.dentry*)*, i32 (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*)*, void (%struct.dentry*, %struct.inode*)*, i8* (%struct.dentry*, i8*, i32)*, %struct.vfsmount* (%struct.path*)*, i32 (%struct.path*, i1)*, %struct.dentry* (%struct.dentry*, %struct.inode*, i32)*, [24 x i8] }
%struct.super_block = type { %struct.list_head, i32, i8, i64, i64, %struct.file_system_type*, %struct.super_operations*, %struct.dquot_operations*, %struct.quotactl_ops*, %struct.export_operations*, i64, i64, i64, %struct.dentry*, %struct.rw_semaphore, i32, %struct.atomic_t, i8*, %struct.xattr_handler**, %struct.fscrypt_operations*, %struct.hlist_bl_head, %struct.list_head, %struct.block_device*, %struct.backing_dev_info*, %struct.mtd_info*, %struct.hlist_node, i32, %struct.quota_info, %struct.sb_writers, [32 x i8], [16 x i8], i8*, i32, i32, i32, %struct.mutex, i8*, i8*, %struct.dentry_operations*, i32, %struct.shrinker, %struct.atomic64_t, i32, %struct.workqueue_struct*, %struct.hlist_head, %struct.user_namespace*, %struct.list_lru, [56 x i8], %struct.list_lru, %struct.callback_head, %struct.work_struct, %struct.mutex, i32, [36 x i8], %struct.spinlock, %struct.list_head, %struct.spinlock, %struct.list_head, [16 x i8] }
%struct.file_system_type = type { i8*, i32, %struct.dentry* (%struct.file_system_type*, i32, i8*, i8*)*, void (%struct.super_block*)*, %struct.module*, %struct.file_system_type*, %struct.hlist_head, %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key, [3 x %struct.lock_class_key], %struct.lock_class_key, %struct.lock_class_key, %struct.lock_class_key }
%struct.lock_class_key = type {}
%struct.super_operations = type { %struct.inode* (%struct.super_block*)*, void (%struct.inode*)*, void (%struct.inode*, i32)*, i32 (%struct.inode*, %struct.writeback_control*)*, i32 (%struct.inode*)*, void (%struct.inode*)*, void (%struct.super_block*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.super_block*)*, i32 (%struct.dentry*, %struct.kstatfs*)*, i32 (%struct.super_block*, i32*, i8*)*, void (%struct.super_block*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i32 (%struct.seq_file*, %struct.dentry*)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, i64 (%struct.super_block*, i32, i8*, i64, i64)*, %struct.dquot** (%struct.inode*)*, i32 (%struct.super_block*, %struct.page*, i32)*, i64 (%struct.super_block*, %struct.shrink_control*)*, i64 (%struct.super_block*, %struct.shrink_control*)* }
%struct.writeback_control = type opaque
%struct.kstatfs = type opaque
%struct.dquot = type { %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.mutex, %struct.atomic_t, %struct.__wait_queue_head, %struct.super_block*, %struct.kqid, i64, i64, %struct.mem_dqblk }
%struct.__wait_queue_head = type { %struct.spinlock, %struct.list_head }
%struct.kqid = type { %union.anon.4, i32 }
%union.anon.4 = type { %struct.kuid_t }
%struct.kuid_t = type { i32 }
%struct.mem_dqblk = type { i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.page = type { i64, %union.anon.5, %union.anon.33, %union.anon.34, %union.anon.38, %union.anon.41, [8 x i8] }
%union.anon.5 = type { %struct.address_space* }
%union.anon.33 = type { i64 }
%union.anon.34 = type { i64 }
%union.anon.38 = type { %struct.list_head }
%union.anon.41 = type { i64 }
%struct.shrink_control = type { i32, i64, i32, %struct.mem_cgroup* }
%struct.mem_cgroup = type opaque
%struct.dquot_operations = type { i32 (%struct.dquot*)*, %struct.dquot* (%struct.super_block*, i32)*, void (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, i32)*, i64* (%struct.inode*)*, i32 (%struct.inode*, %struct.kprojid_t*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.kprojid_t = type { i32 }
%struct.quotactl_ops = type { i32 (%struct.super_block*, i32, i32, %struct.path*)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32, %struct.qc_info*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.kqid*, %struct.qc_dqblk*)*, i32 (%struct.super_block*, i64, %struct.qc_dqblk*)*, i32 (%struct.super_block*, %struct.qc_state*)*, i32 (%struct.super_block*, i32)* }
%struct.qc_info = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.qc_dqblk = type { i32, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i64, i64, i64, i64, i32 }
%struct.qc_state = type { i32, [3 x %struct.qc_type_state] }
%struct.qc_type_state = type { i32, i32, i32, i32, i32, i32, i32, i64, i64, i64 }
%struct.export_operations = type opaque
%struct.rw_semaphore = type { %struct.atomic64_t, %struct.list_head, %struct.raw_spinlock, %struct.optimistic_spin_queue, %struct.task_struct* }
%struct.task_struct = type { %struct.thread_info, i64, i8*, %struct.atomic_t, i32, i32, %struct.llist_node, i32, i32, i32, i64, %struct.task_struct*, i32, i32, i32, i32, i32, i32, %struct.sched_class*, [16 x i8], %struct.sched_entity, %struct.sched_rt_entity, %struct.task_group*, %struct.sched_dl_entity, i32, i32, i32, %struct.cpumask, %struct.sched_info, %struct.list_head, %struct.plist_node, %struct.rb_node, %struct.mm_struct*, %struct.mm_struct*, %struct.vmacache, %struct.task_rss_stat, i32, i32, i32, i32, i64, i32, i8, [3 x i8], i8, i64, %struct.restart_block, i32, i32, %struct.task_struct*, %struct.task_struct*, %struct.list_head, %struct.list_head, %struct.task_struct*, %struct.list_head, %struct.list_head, [3 x %struct.pid_link], %struct.list_head, %struct.list_head, %struct.completion*, i32*, i32*, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, %struct.task_cputime, [3 x %struct.list_head], %struct.cred*, %struct.cred*, %struct.cred*, [16 x i8], %struct.nameidata*, %struct.sysv_sem, %struct.sysv_shm, %struct.fs_struct*, %struct.files_struct*, %struct.nsproxy*, %struct.signal_struct*, %struct.sighand_struct*, %struct.sigset_t, %struct.sigset_t, %struct.sigset_t, %struct.sigpending, i64, i64, i32, %struct.callback_head*, %struct.audit_context*, %struct.kuid_t, i32, %struct.seccomp, i32, i32, %struct.spinlock, %struct.raw_spinlock, %struct.wake_q_node, %struct.rb_root, %struct.rb_node*, %struct.rt_mutex_waiter*, i8*, %struct.bio_list*, %struct.blk_plug*, %struct.reclaim_state*, %struct.backing_dev_info*, %struct.io_context*, i64, %struct.siginfo*, %struct.task_io_accounting, i64, i64, i64, %struct.nodemask_t, %struct.seqcount, i32, i32, %struct.css_set*, %struct.list_head, %struct.robust_list_head*, %struct.compat_robust_list_head*, %struct.list_head, %struct.futex_pi_state*, [2 x %struct.perf_event_context*], %struct.mutex, %struct.list_head, %struct.mempolicy*, i16, i16, %struct.tlbflush_unmap_batch, %struct.callback_head, %struct.pipe_inode_info*, %struct.page_frag, %struct.task_delay_info*, i32, i32, i64, i64, i64, i64, i64, i32, %struct.task_struct*, %struct.vm_struct*, %struct.atomic_t, [28 x i8], %struct.thread_struct }
%struct.thread_info = type { i64 }
%struct.llist_node = type { %struct.llist_node* }
%struct.sched_class = type opaque
%struct.sched_entity = type { %struct.load_weight, %struct.rb_node, %struct.list_head, i32, i64, i64, i64, i64, i64, %struct.sched_statistics, i32, %struct.sched_entity*, %struct.cfs_rq*, %struct.cfs_rq*, [32 x i8], %struct.sched_avg, [24 x i8] }
%struct.load_weight = type { i64, i32 }
%struct.sched_statistics = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.cfs_rq = type opaque
%struct.sched_avg = type { i64, i64, i32, i32, i64, i64 }
%struct.sched_rt_entity = type { %struct.list_head, i64, i64, i32, i16, i16, %struct.sched_rt_entity* }
%struct.task_group = type opaque
%struct.sched_dl_entity = type { %struct.rb_node, i64, i64, i64, i64, i64, i64, i32, i32, i32, i32, %struct.hrtimer }
%struct.hrtimer = type { %struct.timerqueue_node, i64, i32 (%struct.hrtimer*)*, %struct.hrtimer_clock_base*, i8, i8 }
%struct.timerqueue_node = type { %struct.rb_node, i64 }
%struct.hrtimer_clock_base = type { %struct.hrtimer_cpu_base*, i32, i32, %struct.timerqueue_head, i64 ()*, i64, [16 x i8] }
%struct.hrtimer_cpu_base = type { %struct.raw_spinlock, %struct.seqcount, %struct.hrtimer*, i32, i32, i32, i8, i8, i8, i64, %struct.hrtimer*, i32, i32, i32, i32, [4 x %struct.hrtimer_clock_base] }
%struct.timerqueue_head = type { %struct.rb_root, %struct.timerqueue_node* }
%struct.cpumask = type { [1 x i64] }
%struct.sched_info = type { i64, i64, i64, i64 }
%struct.plist_node = type { i32, %struct.list_head, %struct.list_head }
%struct.mm_struct = type { %struct.vm_area_struct*, %struct.rb_root, i32, i64 (%struct.file*, i64, i64, i64, i64)*, i64, i64, i64, i64, %struct.pgd_t*, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, %struct.atomic64_t, i32, %struct.spinlock, %struct.rw_semaphore, %struct.list_head, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [46 x i64], %struct.mm_rss_stat, %struct.linux_binfmt*, [1 x %struct.cpumask], %struct.mm_context_t, i64, %struct.core_state*, %struct.spinlock, %struct.kioctx_table*, %struct.user_namespace*, %struct.file*, %struct.mmu_notifier_mm*, i8, %struct.uprobes_state, %struct.atomic64_t, %struct.work_struct }
%struct.vm_area_struct = type { i64, i64, %struct.vm_area_struct*, %struct.vm_area_struct*, %struct.rb_node, i64, %struct.mm_struct*, %struct.pgprot, i64, %struct.anon.6, %struct.list_head, %struct.anon_vma*, %struct.vm_operations_struct*, i64, %struct.file*, i8*, %struct.mempolicy*, %struct.vm_userfaultfd_ctx }
%struct.pgprot = type { i64 }
%struct.anon.6 = type { %struct.rb_node, i64 }
%struct.anon_vma = type opaque
%struct.vm_userfaultfd_ctx = type {}
%struct.pgd_t = type { i64 }
%struct.mm_rss_stat = type { [4 x %struct.atomic64_t] }
%struct.linux_binfmt = type opaque
%struct.mm_context_t = type { %struct.ldt_struct*, i16, %struct.mutex, i8*, %struct.vdso_image*, %struct.atomic_t, i16, i16 }
%struct.ldt_struct = type opaque
%struct.vdso_image = type { i8*, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.core_state = type { %struct.atomic_t, %struct.core_thread, %struct.completion }
%struct.core_thread = type { %struct.task_struct*, %struct.core_thread* }
%struct.completion = type { i32, %struct.__wait_queue_head }
%struct.kioctx_table = type opaque
%struct.mmu_notifier_mm = type opaque
%struct.uprobes_state = type {}
%struct.vmacache = type { i32, [4 x %struct.vm_area_struct*] }
%struct.task_rss_stat = type { i32, [4 x i32] }
%struct.restart_block = type { i64 (%struct.restart_block*)*, %union.anon.7 }
%union.anon.7 = type { %struct.anon.8 }
%struct.anon.8 = type { i32*, i32, i32, i32, i64, i32* }
%struct.pid_link = type { %struct.hlist_node, %struct.pid* }
%struct.pid = type { %struct.atomic_t, i32, [3 x %struct.hlist_head], %struct.callback_head, [1 x %struct.upid] }
%struct.upid = type { i32, %struct.pid_namespace*, %struct.hlist_node }
%struct.pid_namespace = type opaque
%struct.prev_cputime = type { i64, i64, %struct.raw_spinlock }
%struct.task_cputime = type { i64, i64, i64 }
%struct.nameidata = type opaque
%struct.sysv_sem = type { %struct.sem_undo_list* }
%struct.sem_undo_list = type opaque
%struct.sysv_shm = type { %struct.list_head }
%struct.fs_struct = type opaque
%struct.files_struct = type opaque
%struct.nsproxy = type { %struct.atomic_t, %struct.uts_namespace*, %struct.ipc_namespace*, %struct.mnt_namespace*, %struct.pid_namespace*, %struct.net*, %struct.cgroup_namespace* }
%struct.uts_namespace = type opaque
%struct.ipc_namespace = type opaque
%struct.mnt_namespace = type opaque
%struct.net = type opaque
%struct.cgroup_namespace = type opaque
%struct.signal_struct = type { %struct.atomic_t, %struct.atomic_t, i32, %struct.list_head, %struct.__wait_queue_head, %struct.task_struct*, %struct.sigpending, i32, i32, %struct.task_struct*, i32, i32, i8, i32, %struct.list_head, %struct.hrtimer, i64, [2 x %struct.cpu_itimer], %struct.thread_group_cputimer, %struct.task_cputime, [3 x %struct.list_head], %struct.pid*, %struct.pid*, i32, %struct.tty_struct*, %struct.seqlock_t, i64, i64, i64, i64, i64, i64, %struct.prev_cputime, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %struct.task_io_accounting, i64, [16 x %struct.rlimit], %struct.pacct_struct, %struct.taskstats*, i32, %struct.tty_audit_buf*, i8, i16, i16, %struct.mm_struct*, %struct.mutex }
%struct.cpu_itimer = type { i64, i64 }
%struct.thread_group_cputimer = type { %struct.task_cputime_atomic, i8, i8 }
%struct.task_cputime_atomic = type { %struct.atomic64_t, %struct.atomic64_t, %struct.atomic64_t }
%struct.tty_struct = type opaque
%struct.seqlock_t = type { %struct.seqcount, %struct.spinlock }
%struct.rlimit = type { i64, i64 }
%struct.pacct_struct = type { i32, i64, i64, i64, i64, i64, i64 }
%struct.taskstats = type opaque
%struct.tty_audit_buf = type opaque
%struct.sighand_struct = type { %struct.atomic_t, [64 x %struct.k_sigaction], %struct.spinlock, %struct.__wait_queue_head }
%struct.k_sigaction = type { %struct.sigaction }
%struct.sigaction = type { void (i32)*, i64, void ()*, %struct.sigset_t }
%struct.sigset_t = type { [1 x i64] }
%struct.sigpending = type { %struct.list_head, %struct.sigset_t }
%struct.audit_context = type opaque
%struct.seccomp = type { i32, %struct.seccomp_filter* }
%struct.seccomp_filter = type opaque
%struct.wake_q_node = type { %struct.wake_q_node* }
%struct.rb_root = type { %struct.rb_node* }
%struct.rt_mutex_waiter = type opaque
%struct.bio_list = type opaque
%struct.blk_plug = type opaque
%struct.reclaim_state = type opaque
%struct.io_context = type opaque
%struct.siginfo = type { i32, i32, i32, %union.anon.13 }
%union.anon.13 = type { %struct.anon.17, [80 x i8] }
%struct.anon.17 = type { i32, i32, i32, i64, i64 }
%struct.task_io_accounting = type { i64, i64, i64, i64, i64, i64, i64 }
%struct.nodemask_t = type { [1 x i64] }
%struct.css_set = type opaque
%struct.robust_list_head = type opaque
%struct.compat_robust_list_head = type { %struct.compat_robust_list, i32, i32 }
%struct.compat_robust_list = type { i32 }
%struct.futex_pi_state = type opaque
%struct.perf_event_context = type opaque
%struct.mempolicy = type opaque
%struct.tlbflush_unmap_batch = type { %struct.cpumask, i8, i8 }
%struct.pipe_inode_info = type opaque
%struct.page_frag = type { %struct.page*, i32, i32 }
%struct.task_delay_info = type opaque
%struct.vm_struct = type opaque
%struct.thread_struct = type { [3 x %struct.desc_struct], i64, i64, i16, i16, i16, i16, i32, i64, i64, [4 x %struct.perf_event*], i64, i64, i64, i64, i64, i64*, i64, i32, %struct.mm_segment_t, i8, [15 x i8], %struct.fpu }
%struct.desc_struct = type { %union.anon.23 }
%union.anon.23 = type { %struct.anon.24 }
%struct.anon.24 = type { i32, i32 }
%struct.perf_event = type opaque
%struct.mm_segment_t = type { i64 }
%struct.fpu = type { i32, i8, i8, [58 x i8], %union.fpregs_state }
%union.fpregs_state = type { %struct.xregs_state, [3520 x i8] }
%struct.xregs_state = type { %struct.fxregs_state, %struct.xstate_header, [0 x i8] }
%struct.fxregs_state = type { i16, i16, i16, i16, %union.anon.26, i32, i32, [32 x i32], [64 x i32], [12 x i32], %union.anon.29 }
%union.anon.26 = type { %struct.anon.27 }
%struct.anon.27 = type { i64, i64 }
%union.anon.29 = type { [12 x i32] }
%struct.xstate_header = type { i64, i64, [6 x i64] }
%struct.xattr_handler = type opaque
%struct.fscrypt_operations = type opaque
%struct.hlist_bl_head = type { %struct.hlist_bl_node* }
%struct.block_device = type { i32, i32, %struct.inode*, %struct.super_block*, %struct.mutex, i8*, i8*, i32, i8, %struct.list_head, %struct.block_device*, i32, %struct.hd_struct*, i32, i32, %struct.gendisk*, %struct.request_queue*, %struct.backing_dev_info*, %struct.list_head, i64, i32, %struct.mutex }
%struct.hd_struct = type opaque
%struct.gendisk = type opaque
%struct.request_queue = type opaque
%struct.backing_dev_info = type opaque
%struct.mtd_info = type opaque
%struct.hlist_node = type { %struct.hlist_node*, %struct.hlist_node** }
%struct.quota_info = type { i32, %struct.mutex, [3 x %struct.inode*], [3 x %struct.mem_dqinfo], [3 x %struct.quota_format_ops*] }
%struct.mem_dqinfo = type { %struct.quota_format_type*, i32, %struct.list_head, i64, i32, i32, i64, i64, i8* }
%struct.quota_format_type = type { i32, %struct.quota_format_ops*, %struct.module*, %struct.quota_format_type* }
%struct.quota_format_ops = type { i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.super_block*, i32)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.dquot*)*, i32 (%struct.super_block*, %struct.kqid*)* }
%struct.sb_writers = type { i32, %struct.__wait_queue_head, [3 x %struct.percpu_rw_semaphore] }
%struct.percpu_rw_semaphore = type { %struct.rcu_sync, i32*, %struct.rw_semaphore, %struct.rcuwait, i32 }
%struct.rcu_sync = type { i32, i32, %struct.__wait_queue_head, i32, %struct.callback_head, i32 }
%struct.rcuwait = type { %struct.task_struct* }
%struct.shrinker = type { i64 (%struct.shrinker*, %struct.shrink_control*)*, i64 (%struct.shrinker*, %struct.shrink_control*)*, i32, i64, i64, %struct.list_head, %struct.atomic64_t* }
%struct.workqueue_struct = type opaque
%struct.hlist_head = type { %struct.hlist_node* }
%struct.user_namespace = type { %struct.uid_gid_map, %struct.uid_gid_map, %struct.uid_gid_map, %struct.atomic_t, %struct.user_namespace*, i32, %struct.kuid_t, %struct.kgid_t, %struct.ns_common, i64, %struct.work_struct, %struct.ctl_table_set, %struct.ctl_table_header*, %struct.ucounts*, [9 x i32] }
%struct.uid_gid_map = type { i32, [5 x %struct.uid_gid_extent] }
%struct.uid_gid_extent = type { i32, i32, i32 }
%struct.kgid_t = type { i32 }
%struct.ns_common = type { %struct.atomic64_t, %struct.proc_ns_operations*, i32 }
%struct.proc_ns_operations = type opaque
%struct.ctl_table_set = type { i32 (%struct.ctl_table_set*)*, %struct.ctl_dir }
%struct.ctl_dir = type { %struct.ctl_table_header, %struct.rb_root }
%struct.ctl_table_header = type { %union.anon.11, %struct.completion*, %struct.ctl_table*, %struct.ctl_table_root*, %struct.ctl_table_set*, %struct.ctl_dir*, %struct.ctl_node*, %struct.list_head }
%union.anon.11 = type { %struct.anon.12 }
%struct.anon.12 = type { %struct.ctl_table*, i32, i32, i32 }
%struct.ctl_table = type { i8*, i8*, i32, i16, %struct.ctl_table*, i32 (%struct.ctl_table*, i32, i8*, i64*, i64*)*, %struct.ctl_table_poll*, i8*, i8* }
%struct.ctl_table_poll = type { %struct.atomic_t, %struct.__wait_queue_head }
%struct.ctl_table_root = type { %struct.ctl_table_set, %struct.ctl_table_set* (%struct.ctl_table_root*)*, void (%struct.ctl_table_header*, %struct.ctl_table*, %struct.kuid_t*, %struct.kgid_t*)*, i32 (%struct.ctl_table_header*, %struct.ctl_table*)* }
%struct.ctl_node = type { %struct.rb_node, %struct.ctl_table_header* }
%struct.ucounts = type { %struct.hlist_node, %struct.user_namespace*, %struct.kuid_t, i32, [9 x %struct.atomic_t] }
%struct.list_lru = type { %struct.list_lru_node* }
%struct.list_lru_node = type { %struct.spinlock, %struct.list_lru_one, [32 x i8] }
%struct.list_lru_one = type { %struct.list_head, i64 }
%struct.work_struct = type { %struct.atomic64_t, %struct.list_head, void (%struct.work_struct*)* }
%union.anon.49 = type { %struct.list_head }
%union.anon.50 = type { %struct.hlist_node }
%struct.inode = type { i16, i16, %struct.kuid_t, %struct.kgid_t, i32, %struct.posix_acl*, %struct.posix_acl*, %struct.inode_operations*, %struct.super_block*, %struct.address_space*, i8*, i64, %union.anon.42, i32, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.spinlock, i16, i32, i64, i64, %struct.rw_semaphore, i64, i64, %struct.hlist_node, %struct.list_head, %struct.list_head, %struct.list_head, %struct.list_head, %union.anon.43, i64, %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.file_operations*, %struct.file_lock_context*, %struct.address_space, %struct.list_head, %union.anon.46, i32, i32, %struct.hlist_head, i8* }
%struct.posix_acl = type opaque
%struct.inode_operations = type { %struct.dentry* (%struct.inode*, %struct.dentry*, i32)*, i8* (%struct.dentry*, %struct.inode*, %struct.delayed_call*)*, i32 (%struct.inode*, i32)*, %struct.posix_acl* (%struct.inode*, i32)*, i32 (%struct.dentry*, i8*, i32)*, i32 (%struct.inode*, %struct.dentry*, i16, i1)*, i32 (%struct.dentry*, %struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i8*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.dentry*)*, i32 (%struct.inode*, %struct.dentry*, i16, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.inode*, %struct.dentry*, i32)*, i32 (%struct.dentry*, %struct.iattr*)*, i32 (%struct.path*, %struct.kstat*, i32, i32)*, i64 (%struct.dentry*, i8*, i64)*, i32 (%struct.inode*, %struct.fiemap_extent_info*, i64, i64)*, i32 (%struct.inode*, %struct.timespec*, i32)*, i32 (%struct.inode*, %struct.dentry*, %struct.file*, i32, i16, i32*)*, i32 (%struct.inode*, %struct.dentry*, i16)*, i32 (%struct.inode*, %struct.posix_acl*, i32)*, [24 x i8] }
%struct.delayed_call = type { void (i8*)*, i8* }
%struct.iattr = type { i32, i16, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.file* }
%struct.kstat = type { i32, i16, i32, i32, i64, i64, i64, i32, i32, %struct.kuid_t, %struct.kgid_t, i64, %struct.timespec, %struct.timespec, %struct.timespec, %struct.timespec, i64 }
%struct.fiemap_extent_info = type { i32, i32, i32, %struct.fiemap_extent* }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%union.anon.42 = type { i32 }
%struct.timespec = type { i64, i64 }
%union.anon.43 = type { %struct.callback_head }
%struct.file_lock_context = type { %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head }
%struct.address_space = type { %struct.inode*, %struct.radix_tree_root, %struct.spinlock, %struct.atomic_t, %struct.rb_root, %struct.rw_semaphore, i64, i64, i64, %struct.address_space_operations*, i64, %struct.spinlock, i32, %struct.list_head, i8* }
%struct.radix_tree_root = type { i32, %struct.radix_tree_node* }
%struct.radix_tree_node = type { i8, i8, i8, i8, %struct.radix_tree_node*, %struct.radix_tree_root*, %union.anon.1, [64 x i8*], [3 x [1 x i64]] }
%union.anon.1 = type { %struct.list_head }
%struct.address_space_operations = type { i32 (%struct.page*, %struct.writeback_control*)*, i32 (%struct.file*, %struct.page*)*, i32 (%struct.address_space*, %struct.writeback_control*)*, i32 (%struct.page*)*, i32 (%struct.file*, %struct.address_space*, %struct.list_head*, i32)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page**, i8**)*, i32 (%struct.file*, %struct.address_space*, i64, i32, i32, %struct.page*, i8*)*, i64 (%struct.address_space*, i64)*, void (%struct.page*, i32, i32)*, i32 (%struct.page*, i32)*, void (%struct.page*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.address_space*, %struct.page*, %struct.page*, i32)*, i1 (%struct.page*, i32)*, void (%struct.page*)*, i32 (%struct.page*)*, i32 (%struct.page*, i64, i64)*, void (%struct.page*, i8*, i8*)*, i32 (%struct.address_space*, %struct.page*)*, i32 (%struct.swap_info_struct*, %struct.file*, i64*)*, void (%struct.file*)* }
%struct.kiocb = type { %struct.file*, i64, void (%struct.kiocb*, i64, i64)*, i8*, i32 }
%struct.iov_iter = type { i32, i64, i64, %union.anon.30, %union.anon.31 }
%union.anon.30 = type { %struct.iovec* }
%struct.iovec = type { i8*, i64 }
%union.anon.31 = type { i64 }
%struct.swap_info_struct = type opaque
%union.anon.46 = type { %struct.pipe_inode_info* }
%struct.file_operations = type { %struct.module*, i64 (%struct.file*, i64, i32)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.file*, i8*, i64, i64*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i64 (%struct.kiocb*, %struct.iov_iter*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.dir_context*)*, i32 (%struct.file*, %struct.poll_table_struct*)*, i64 (%struct.file*, i32, i64)*, i64 (%struct.file*, i32, i64)*, i32 (%struct.file*, %struct.vm_area_struct*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i8*)*, i32 (%struct.inode*, %struct.file*)*, i32 (%struct.file*, i64, i64, i32)*, i32 (i32, %struct.file*, i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)*, i64 (%struct.file*, i64, i64, i64, i64)*, i32 (i32)*, i32 (%struct.file*, i32, %struct.file_lock*)*, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)*, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)*, i32 (%struct.file*, i64, %struct.file_lock**, i8**)*, i64 (%struct.file*, i32, i64, i64)*, void (%struct.seq_file*, %struct.file*)*, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)*, i32 (%struct.file*, i64, %struct.file*, i64, i64)*, i64 (%struct.file*, i64, i64, %struct.file*, i64)* }
%struct.dir_context = type { i32 (%struct.dir_context*, i8*, i32, i64, i64, i32)*, i64 }
%struct.poll_table_struct = type { void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, i64 }
%struct.file_lock = type { %struct.file_lock*, %struct.list_head, %struct.hlist_node, %struct.list_head, i8*, i32, i8, i32, i32, %struct.pid*, %struct.__wait_queue_head, %struct.file*, i64, i64, %struct.fasync_struct*, i64, i64, %struct.file_lock_operations*, %struct.lock_manager_operations*, %union.anon.44 }
%struct.fasync_struct = type { %struct.spinlock, i32, i32, %struct.fasync_struct*, %struct.file*, %struct.callback_head }
%struct.file_lock_operations = type { void (%struct.file_lock*, %struct.file_lock*)*, void (%struct.file_lock*)* }
%struct.lock_manager_operations = type { i32 (%struct.file_lock*, %struct.file_lock*)*, i64 (%struct.file_lock*)*, i8* (i8*)*, void (i8*)*, void (%struct.file_lock*)*, i32 (%struct.file_lock*, i32)*, i1 (%struct.file_lock*)*, i32 (%struct.file_lock*, i32, %struct.list_head*)*, void (%struct.file_lock*, i8**)* }
%union.anon.44 = type { %struct.nfs_lock_info }
%struct.nfs_lock_info = type { i32, %struct.nlm_lockowner*, %struct.list_head }
%struct.nlm_lockowner = type opaque
%struct.fown_struct = type { %struct.rwlock_t, %struct.pid*, i32, %struct.kuid_t, %struct.kuid_t, i32 }
%struct.rwlock_t = type { %struct.qrwlock }
%struct.qrwlock = type { %struct.atomic_t, %struct.qspinlock }
%struct.cred = type { %struct.atomic_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, %struct.kuid_t, %struct.kgid_t, i32, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, %struct.kernel_cap_struct, i8, %struct.key*, %struct.key*, %struct.key*, %struct.key*, i8*, %struct.user_struct*, %struct.user_namespace*, %struct.group_info*, %struct.callback_head }
%struct.kernel_cap_struct = type { [2 x i32] }
%struct.key = type { %struct.atomic_t, i32, %union.anon.52, %struct.rw_semaphore, %struct.key_user*, i8*, %union.anon.53, i64, %struct.kuid_t, %struct.kgid_t, i32, i16, i16, i64, %union.anon.54, %union.anon.56, i32 (%struct.key*, %struct.key_type*, %union.key_payload*)* }
%union.anon.52 = type { %struct.rb_node }
%struct.key_user = type opaque
%union.anon.53 = type { i64 }
%union.anon.54 = type { %struct.keyring_index_key }
%struct.keyring_index_key = type { %struct.key_type*, i8*, i64 }
%struct.key_type = type opaque
%union.anon.56 = type { %union.key_payload }
%union.key_payload = type { [4 x i8*] }
%struct.user_struct = type { %struct.atomic_t, %struct.atomic_t, %struct.atomic_t, %struct.atomic64_t, i64, i64, i64, %struct.atomic64_t, %struct.key*, %struct.key*, %struct.hlist_node, %struct.kuid_t, %struct.atomic64_t }
%struct.group_info = type { %struct.atomic_t, i32, [0 x %struct.kgid_t] }
%struct.file_ra_state = type { i64, i32, i32, i32, i32, i64 }
%struct.seq_file = type opaque
%struct.vm_operations_struct = type { void (%struct.vm_area_struct*)*, void (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*, i32)*, void (%struct.vm_fault*, i64, i64)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_fault*)*, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)*, i8* (%struct.vm_area_struct*)*, i32 (%struct.vm_area_struct*, %struct.mempolicy*)*, %struct.mempolicy* (%struct.vm_area_struct*, i64)*, %struct.page* (%struct.vm_area_struct*, i64)* }
%struct.vm_fault = type { %struct.vm_area_struct*, i32, i32, i64, i64, %struct.pmd_t*, %struct.pud_t*, %struct.pte_t, %struct.page*, %struct.mem_cgroup*, %struct.page*, %struct.pte_t*, %struct.spinlock*, %struct.page* }
%struct.pmd_t = type { i64 }
%struct.pud_t = type { i64 }
%struct.pte_t = type { i64 }
%struct.kernfs_open_node = type opaque
%struct.kernfs_iattrs = type opaque
%struct.kref = type { %struct.refcount_struct }
%struct.refcount_struct = type { %struct.atomic_t }
%struct.module_param_attrs = type opaque
%struct.module_attribute = type { %struct.attribute, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*)*, i64 (%struct.module_attribute*, %struct.module_kobject*, i8*, i64)*, void (%struct.module*, i8*)*, i32 (%struct.module*)*, void (%struct.module*)* }
%struct.kernel_symbol = type { i64, i8* }
%struct.exception_table_entry = type { i32, i32, i32 }
%struct.module_layout = type { i8*, i32, i32, i32, i32, %struct.mod_tree_node }
%struct.mod_tree_node = type { %struct.module*, %struct.latch_tree_node }
%struct.latch_tree_node = type { [2 x %struct.rb_node] }
%struct.mod_arch_specific = type {}
%struct.bug_entry = type { i32, i32, i16, i16 }
%struct.mod_kallsyms = type { %struct.elf64_sym*, i32, i8* }
%struct.elf64_sym = type { i32, i8, i8, i16, i64, i64 }
%struct.module_sect_attrs = type opaque
%struct.module_notes_attrs = type opaque
%struct.tracepoint = type { i8*, %struct.static_key, i32 ()*, void ()*, %struct.tracepoint_func* }
%struct.static_key = type { %struct.atomic_t }
%struct.tracepoint_func = type { i8*, i8*, i32 }
%struct.trace_event_call = type opaque
%struct.trace_enum_map = type opaque
%union.anon.51 = type { i8* }
%struct.usb_driver = type { i8*, i32 (%struct.usb_interface*, %struct.usb_device_id*)*, void (%struct.usb_interface*)*, i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, i32 (%struct.usb_interface*)*, %struct.usb_device_id*, %struct.usb_dynids, %struct.usbdrv_wrap, i8 }
%struct.usb_interface = type { %struct.usb_host_interface*, %struct.usb_host_interface*, i32, %struct.usb_interface_assoc_descriptor*, i32, i32, i8, %struct.device, %struct.device*, %struct.atomic_t, %struct.work_struct }
%struct.usb_host_interface = type { %struct.usb_interface_descriptor, i32, i8*, %struct.usb_host_endpoint*, i8* }
%struct.usb_interface_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.usb_host_endpoint = type <{ %struct.usb_endpoint_descriptor, %struct.usb_ss_ep_comp_descriptor, %struct.usb_ssp_isoc_ep_comp_descriptor, i8, %struct.list_head, i8*, %struct.ep_device*, i8*, i32, i32, i32, [4 x i8] }>
%struct.usb_endpoint_descriptor = type <{ i8, i8, i8, i8, i16, i8, i8, i8 }>
%struct.usb_ss_ep_comp_descriptor = type { i8, i8, i8, i8, i16 }
%struct.usb_ssp_isoc_ep_comp_descriptor = type { i8, i8, i16, i32 }
%struct.ep_device = type opaque
%struct.usb_interface_assoc_descriptor = type { i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.device = type { %struct.device*, %struct.device_private*, %struct.kobject, i8*, %struct.device_type*, %struct.mutex, %struct.bus_type*, %struct.device_driver*, i8*, i8*, %struct.dev_links_info, %struct.dev_pm_info, %struct.dev_pm_domain*, %struct.irq_domain*, %struct.list_head, i32, %struct.dma_map_ops*, i64*, i64, i64, %struct.device_dma_parameters*, %struct.list_head, %struct.dma_coherent_mem*, %struct.dev_archdata, %struct.device_node*, %struct.fwnode_handle*, i32, i32, %struct.spinlock, %struct.list_head, %struct.klist_node, %struct.class*, %struct.attribute_group**, void (%struct.device*)*, %struct.iommu_group*, %struct.iommu_fwspec*, i8 }
%struct.device_private = type opaque
%struct.device_type = type { i8*, %struct.attribute_group**, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*, %struct.kuid_t*, %struct.kgid_t*)*, void (%struct.device*)*, %struct.dev_pm_ops* }
%struct.dev_pm_ops = type { i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)* }
%struct.bus_type = type { i8*, i8*, %struct.device*, %struct.device_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.attribute_group**, i32 (%struct.device*, %struct.device_driver*)*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, i32 (%struct.device*)*, %struct.dev_pm_ops*, %struct.iommu_ops*, %struct.subsys_private*, %struct.lock_class_key }
%struct.device_attribute = type { %struct.attribute, i64 (%struct.device*, %struct.device_attribute*, i8*)*, i64 (%struct.device*, %struct.device_attribute*, i8*, i64)* }
%struct.iommu_ops = type opaque
%struct.subsys_private = type opaque
%struct.device_driver = type { i8*, %struct.bus_type*, %struct.module*, i8*, i8, i32, %struct.of_device_id*, %struct.acpi_device_id*, i32 (%struct.device*)*, i32 (%struct.device*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.attribute_group**, %struct.dev_pm_ops*, %struct.driver_private* }
%struct.of_device_id = type { [32 x i8], [32 x i8], [128 x i8], i8* }
%struct.acpi_device_id = type { [9 x i8], i64, i32, i32 }
%struct.driver_private = type opaque
%struct.dev_links_info = type { %struct.list_head, %struct.list_head, i32 }
%struct.dev_pm_info = type { %struct.pm_message, i16, %struct.spinlock, %struct.list_head, %struct.completion, %struct.wakeup_source*, i8, %struct.timer_list, i64, %struct.work_struct, %struct.__wait_queue_head, %struct.wake_irq*, %struct.atomic_t, %struct.atomic_t, i16, i32, i32, i32, i32, i32, i64, i64, i64, i64, %struct.pm_subsys_data*, void (%struct.device*, i32)*, %struct.dev_pm_qos* }
%struct.pm_message = type { i32 }
%struct.wakeup_source = type { i8*, %struct.list_head, %struct.spinlock, %struct.wake_irq*, %struct.timer_list, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i8 }
%struct.timer_list = type { %struct.hlist_node, i64, void (i64)*, i64, i32 }
%struct.wake_irq = type opaque
%struct.pm_subsys_data = type { %struct.spinlock, i32, %struct.list_head }
%struct.dev_pm_qos = type opaque
%struct.dev_pm_domain = type { %struct.dev_pm_ops, void (%struct.device*, i1)*, i32 (%struct.device*)*, void (%struct.device*)*, void (%struct.device*)* }
%struct.irq_domain = type opaque
%struct.dma_map_ops = type { i8* (%struct.device*, i64, i64*, i32, i64)*, void (%struct.device*, i64, i8*, i64, i64)*, i32 (%struct.device*, %struct.vm_area_struct*, i8*, i64, i64, i64)*, i32 (%struct.device*, %struct.sg_table*, i8*, i64, i64, i64)*, i64 (%struct.device*, %struct.page*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, i32 (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, void (%struct.device*, %struct.scatterlist*, i32, i32, i64)*, i64 (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32, i64)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, i64, i64, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, void (%struct.device*, %struct.scatterlist*, i32, i32)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 (%struct.device*, i64)*, i32 }
%struct.sg_table = type { %struct.scatterlist*, i32, i32 }
%struct.scatterlist = type { i64, i32, i32, i64, i32 }
%struct.device_dma_parameters = type { i32, i64 }
%struct.dma_coherent_mem = type opaque
%struct.dev_archdata = type { i8* }
%struct.device_node = type opaque
%struct.fwnode_handle = type { i32, %struct.fwnode_handle* }
%struct.klist_node = type { i8*, %struct.list_head, %struct.kref }
%struct.class = type { i8*, %struct.module*, %struct.class_attribute*, %struct.attribute_group**, %struct.attribute_group**, %struct.kobject*, i32 (%struct.device*, %struct.kobj_uevent_env*)*, i8* (%struct.device*, i16*)*, void (%struct.class*)*, void (%struct.device*)*, i32 (%struct.device*, i32)*, i32 (%struct.device*)*, %struct.kobj_ns_type_operations*, i8* (%struct.device*)*, %struct.dev_pm_ops*, %struct.subsys_private* }
%struct.class_attribute = type { %struct.attribute, i64 (%struct.class*, %struct.class_attribute*, i8*)*, i64 (%struct.class*, %struct.class_attribute*, i8*, i64)* }
%struct.attribute_group = type { i8*, i16 (%struct.kobject*, %struct.attribute*, i32)*, i16 (%struct.kobject*, %struct.bin_attribute*, i32)*, %struct.attribute**, %struct.bin_attribute** }
%struct.bin_attribute = type { %struct.attribute, i64, i8*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i64 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, i8*, i64, i64)*, i32 (%struct.file*, %struct.kobject*, %struct.bin_attribute*, %struct.vm_area_struct*)* }
%struct.iommu_group = type opaque
%struct.iommu_fwspec = type opaque
%struct.usb_device_id = type { i16, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i8, i64 }
%struct.usb_dynids = type { %struct.spinlock, %struct.list_head }
%struct.usbdrv_wrap = type { %struct.device_driver, i32 }
%struct.cdev = type { %struct.kobject, %struct.module*, %struct.file_operations*, %struct.list_head, i32, i32 }
%struct.notifier_block = type { i32 (%struct.notifier_block*, i64, i8*)*, %struct.notifier_block*, i32 }
%struct.usb_dev_state = type { %struct.list_head, %struct.usb_device*, %struct.file*, %struct.spinlock, %struct.list_head, %struct.list_head, %struct.list_head, %struct.__wait_queue_head, i32, %struct.pid*, %struct.cred*, i8*, i64, i32, i32, i8, i64 }
%struct.usb_device = type { i32, [16 x i8], i32, i32, i32, %struct.usb_tt*, i32, [2 x i32], %struct.usb_device*, %struct.usb_bus*, %struct.usb_host_endpoint, %struct.device, %struct.usb_device_descriptor, %struct.usb_host_bos*, %struct.usb_host_config*, %struct.usb_host_config*, [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*], i8**, i16, i8, i8, i16, i32, i8*, i8*, i8*, %struct.list_head, i32, i32, %struct.atomic_t, i64, i64, i8, %struct.wusb_dev*, i32, i32, %struct.usb2_lpm_parameters, %struct.usb3_lpm_parameters, %struct.usb3_lpm_parameters, i32 }
%struct.usb_tt = type { %struct.usb_device*, i32, i32, i8*, %struct.spinlock, %struct.list_head, %struct.work_struct }
%struct.usb_bus = type { %struct.device*, i32, i8*, i8, i8, i8, i8, i32, i32, %struct.mutex, %struct.usb_devmap, %struct.usb_device*, %struct.usb_bus*, i32, i32, i32, i32, %struct.mon_bus*, i32 }
%struct.usb_devmap = type { [2 x i64] }
%struct.mon_bus = type opaque
%struct.usb_device_descriptor = type { i8, i8, i16, i8, i8, i8, i8, i16, i16, i16, i8, i8, i8, i8 }
%struct.usb_host_bos = type { %struct.usb_bos_descriptor*, %struct.usb_ext_cap_descriptor*, %struct.usb_ss_cap_descriptor*, %struct.usb_ssp_cap_descriptor*, %struct.usb_ss_container_id_descriptor*, %struct.usb_ptm_cap_descriptor* }
%struct.usb_bos_descriptor = type <{ i8, i8, i16, i8 }>
%struct.usb_ext_cap_descriptor = type <{ i8, i8, i8, i32 }>
%struct.usb_ss_cap_descriptor = type { i8, i8, i8, i8, i16, i8, i8, i16 }
%struct.usb_ssp_cap_descriptor = type { i8, i8, i8, i8, i32, i16, i16, [1 x i32] }
%struct.usb_ss_container_id_descriptor = type { i8, i8, i8, i8, [16 x i8] }
%struct.usb_ptm_cap_descriptor = type { i8, i8, i8 }
%struct.usb_host_config = type { %struct.usb_config_descriptor, i8*, [16 x %struct.usb_interface_assoc_descriptor*], [32 x %struct.usb_interface*], [32 x %struct.usb_interface_cache*], i8*, i32 }
%struct.usb_config_descriptor = type <{ i8, i8, i16, i8, i8, i8, i8, i8 }>
%struct.usb_interface_cache = type { i32, %struct.kref, [0 x %struct.usb_host_interface] }
%struct.wusb_dev = type opaque
%struct.usb2_lpm_parameters = type { i32, i32 }
%struct.usb3_lpm_parameters = type { i32, i32, i32, i32 }
%struct.usb_memory = type { %struct.list_head, i32, i32, i32, i8*, i64, i64, %struct.usb_dev_state* }
%struct.async = type { %struct.list_head, %struct.usb_dev_state*, %struct.pid*, %struct.cred*, i32, i32, i8*, i8*, %struct.urb*, %struct.usb_memory*, i32, i32, i32, i8, i8 }
%struct.urb = type { %struct.kref, i8*, %struct.atomic_t, %struct.atomic_t, i32, %struct.list_head, %struct.list_head, %struct.usb_anchor*, %struct.usb_device*, %struct.usb_host_endpoint*, i32, i32, i32, i32, i8*, i64, %struct.scatterlist*, i32, i32, i32, i32, i8*, i64, i32, i32, i32, i32, i8*, void (%struct.urb*)*, [0 x %struct.usb_iso_packet_descriptor] }
%struct.usb_anchor = type { %struct.list_head, %struct.__wait_queue_head, %struct.spinlock, %struct.atomic_t, i8 }
%struct.usb_iso_packet_descriptor = type { i32, i32, i32, i32 }
%union.anon.58 = type { %struct.list_head* }
%union.anon.59 = type { %struct.list_head* }
%union.anon.60 = type { %struct.list_head* }
%union.anon.61 = type { %struct.list_head* }
%struct.usbdevfs_ctrltransfer32 = type { i8, i8, i16, i16, i16, i32, i32 }
%struct.usbdevfs_bulktransfer32 = type { i32, i32, i32, i32 }
%struct.usbdevfs_ctrltransfer = type { i8, i8, i16, i16, i16, i32, i8* }
%struct.usbdevfs_bulktransfer = type { i32, i32, i32, i8* }
%struct.usbdevfs_getdriver = type { i32, [256 x i8] }
%struct.usbdevfs_connectinfo = type { i32, i8 }
%struct.usbdevfs_setinterface = type { i32, i32 }
%struct.usbdevfs_urb = type { i8, i8, i32, i32, i8*, i32, i32, i32, %union.anon.62, i32, i32, i8*, [0 x %struct.usbdevfs_iso_packet_desc] }
%union.anon.62 = type { i32 }
%struct.usbdevfs_iso_packet_desc = type { i32, i32, i32 }
%struct.usbdevfs_disconnectsignal32 = type { i32, i32 }
%struct.usbdevfs_urb32 = type { i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [0 x %struct.usbdevfs_iso_packet_desc] }
%struct.usbdevfs_ioctl = type { i32, i32, i8* }
%struct.usbdevfs_ioctl32 = type { i32, i32, i32 }
%struct.__large_struct = type { [100 x i64] }
%struct.usbdevfs_disconnectsignal = type { i32, i8* }
%struct.usbdevfs_disconnect_claim = type { i32, i32, [256 x i8] }
%struct.usbdevfs_streams = type { i32, i32, [0 x i8] }
%struct.__wait_queue = type { i32, i8*, i32 (%struct.__wait_queue*, i32, i32, i8*)*, %struct.list_head }
%union.anon.63 = type { i64 }
%struct.usb_ctrlrequest = type { i8, i8, i16, i16, i16 }
%struct.anon.18 = type { i8*, i16, %union.anon.19 }
%union.anon.19 = type { %struct.anon.20 }
%struct.anon.20 = type { i8*, i8* }
%union.anon.64 = type { i8 }

@usbfs_mutex = global %struct.mutex { %struct.atomic64_t zeroinitializer, %struct.spinlock zeroinitializer, %struct.optimistic_spin_queue zeroinitializer, %struct.list_head { %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @usbfs_mutex to i8*), i64 16) to %struct.list_head*), %struct.list_head* bitcast (i8* getelementptr (i8, i8* bitcast (%struct.mutex* @usbfs_mutex to i8*), i64 16) to %struct.list_head*) } }, align 8
@__param_str_usbfs_snoop = internal constant [20 x i8] c"usbcore.usbfs_snoop\00", align 16
@param_ops_bool = external constant %struct.kernel_param_ops, align 8
@usbfs_snoop = internal global i8 0, align 1
@__param_usbfs_snoop = internal constant %struct.kernel_param { i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__param_str_usbfs_snoop, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_bool, i16 420, i8 -1, i8 0, %union.anon.51 { i8* @usbfs_snoop } }, section "__param", align 8
@__param_str_usbfs_snoop_max = internal constant [24 x i8] c"usbcore.usbfs_snoop_max\00", align 16
@param_ops_uint = external constant %struct.kernel_param_ops, align 8
@usbfs_snoop_max = internal global i32 65536, align 4
@__param_usbfs_snoop_max = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_usbfs_snoop_max, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @usbfs_snoop_max to i8*) } }, section "__param", align 8
@__param_str_usbfs_memory_mb = internal constant [24 x i8] c"usbcore.usbfs_memory_mb\00", align 16
@usbfs_memory_mb = internal global i32 16, align 4
@__param_usbfs_memory_mb = internal constant %struct.kernel_param { i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__param_str_usbfs_memory_mb, i32 0, i32 0), %struct.module* null, %struct.kernel_param_ops* @param_ops_uint, i16 420, i8 -1, i8 0, %union.anon.51 { i8* bitcast (i32* @usbfs_memory_mb to i8*) } }, section "__param", align 8
@.str = private unnamed_addr constant [6 x i8] c"usbfs\00", align 1
@usbfs_driver = global %struct.usb_driver { i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str, i32 0, i32 0), i32 (%struct.usb_interface*, %struct.usb_device_id*)* @driver_probe, void (%struct.usb_interface*)* @driver_disconnect, i32 (%struct.usb_interface*, i32, i8*)* null, i32 (%struct.usb_interface*, i32)* @driver_suspend, i32 (%struct.usb_interface*)* @driver_resume, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, i32 (%struct.usb_interface*)* null, %struct.usb_device_id* null, %struct.usb_dynids zeroinitializer, %struct.usbdrv_wrap zeroinitializer, i8 0 }, align 8
@usbdev_file_operations = constant %struct.file_operations { %struct.module* null, i64 (%struct.file*, i64, i32)* @no_seek_end_llseek, i64 (%struct.file*, i8*, i64, i64*)* @usbdev_read, i64 (%struct.file*, i8*, i64, i64*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i64 (%struct.kiocb*, %struct.iov_iter*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.dir_context*)* null, i32 (%struct.file*, %struct.poll_table_struct*)* @usbdev_poll, i64 (%struct.file*, i32, i64)* @usbdev_ioctl, i64 (%struct.file*, i32, i64)* @usbdev_compat_ioctl, i32 (%struct.file*, %struct.vm_area_struct*)* @usbdev_mmap, i32 (%struct.inode*, %struct.file*)* @usbdev_open, i32 (%struct.file*, i8*)* null, i32 (%struct.inode*, %struct.file*)* @usbdev_release, i32 (%struct.file*, i64, i64, i32)* null, i32 (i32, %struct.file*, i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.file*, %struct.page*, i32, i64, i64*, i32)* null, i64 (%struct.file*, i64, i64, i64, i64)* null, i32 (i32)* null, i32 (%struct.file*, i32, %struct.file_lock*)* null, i64 (%struct.pipe_inode_info*, %struct.file*, i64*, i64, i32)* null, i64 (%struct.file*, i64*, %struct.pipe_inode_info*, i64, i32)* null, i32 (%struct.file*, i64, %struct.file_lock**, i8**)* null, i64 (%struct.file*, i32, i64, i64)* null, void (%struct.seq_file*, %struct.file*)* null, i64 (%struct.file*, i64, %struct.file*, i64, i64, i32)* null, i32 (%struct.file*, i64, %struct.file*, i64, i64)* null, i64 (%struct.file*, i64, i64, %struct.file*, i64)* null }, align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"usb_device\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"\013Unable to register minors for usb_device\0A\00", align 1
@usb_device_cdev = internal global %struct.cdev zeroinitializer, align 8
@.str.3 = private unnamed_addr constant [37 x i8] c"\013Unable to get usb_device major %d\0A\00", align 1
@usbdev_nb = internal global %struct.notifier_block { i32 (%struct.notifier_block*, i64, i8*)* @usbdev_notify, %struct.notifier_block* null, i32 0 }, align 8
@.str.4 = private unnamed_addr constant [34 x i8] c"interface number %u out of range\0A\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"./arch/x86/include/asm/uaccess.h\00", align 1
@.str.6 = private unnamed_addr constant [38 x i8] c"Buffer overflow detected (%d < %lu)!\0A\00", align 1
@.str.7 = private unnamed_addr constant [13 x i8] c"%s: REAPURB\0A\00", align 1
@__func__.usbdev_do_ioctl = private unnamed_addr constant [16 x i8] c"usbdev_do_ioctl\00", align 1
@.str.8 = private unnamed_addr constant [19 x i8] c"%s: REAPURBNDELAY\0A\00", align 1
@.str.9 = private unnamed_addr constant [15 x i8] c"%s: REAPURB32\0A\00", align 1
@.str.10 = private unnamed_addr constant [21 x i8] c"%s: REAPURBNDELAY32\0A\00", align 1
@.str.11 = private unnamed_addr constant [13 x i8] c"%s: CONTROL\0A\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"%s: BULK\0A\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"%s: RESETEP\0A\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"%s: RESET\0A\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"%s: CLEAR_HALT\0A\00", align 1
@.str.16 = private unnamed_addr constant [15 x i8] c"%s: GETDRIVER\0A\00", align 1
@.str.17 = private unnamed_addr constant [17 x i8] c"%s: CONNECTINFO\0A\00", align 1
@.str.18 = private unnamed_addr constant [18 x i8] c"%s: SETINTERFACE\0A\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"%s: SETCONFIGURATION\0A\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"%s: SUBMITURB\0A\00", align 1
@.str.21 = private unnamed_addr constant [15 x i8] c"%s: CONTROL32\0A\00", align 1
@.str.22 = private unnamed_addr constant [12 x i8] c"%s: BULK32\0A\00", align 1
@.str.23 = private unnamed_addr constant [18 x i8] c"%s: DISCSIGNAL32\0A\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"%s: SUBMITURB32\0A\00", align 1
@.str.25 = private unnamed_addr constant [13 x i8] c"%s: IOCTL32\0A\00", align 1
@.str.26 = private unnamed_addr constant [19 x i8] c"%s: DISCARDURB %p\0A\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"%s: DISCSIGNAL\0A\00", align 1
@.str.28 = private unnamed_addr constant [20 x i8] c"%s: CLAIMINTERFACE\0A\00", align 1
@.str.29 = private unnamed_addr constant [22 x i8] c"%s: RELEASEINTERFACE\0A\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"%s: IOCTL\0A\00", align 1
@.str.31 = private unnamed_addr constant [16 x i8] c"%s: CLAIM_PORT\0A\00", align 1
@.str.32 = private unnamed_addr constant [18 x i8] c"%s: RELEASE_PORT\0A\00", align 1
@.str.33 = private unnamed_addr constant [9 x i8] c"reap %p\0A\00", align 1
@usbfs_memory_usage = internal global %struct.atomic64_t zeroinitializer, align 8
@current_task = external global %struct.task_struct*, align 8
@.str.34 = private unnamed_addr constant [83 x i8] c"control urb: bRequestType=%02x bRequest=%02x wValue=%04x wIndex=%04x wLength=%04x\0A\00", align 1
@.str.35 = private unnamed_addr constant [3 x i8] c"\017\00", align 1
@.str.36 = private unnamed_addr constant [66 x i8] c"usbfs: USBDEVFS_CONTROL failed cmd %s rqt %u rq %u len %u ret %d\0A\00", align 1
@.str.37 = private unnamed_addr constant [55 x i8] c"%s: process %i (%s) requesting ep %02x but needs %02x\0A\00", align 1
@__func__.check_ctrlrecip = private unnamed_addr constant [16 x i8] c"check_ctrlrecip\00", align 1
@.str.38 = private unnamed_addr constant [62 x i8] c"usbfs: process %d (%s) did not claim interface %u before use\0A\00", align 1
@snoop_urb.types = internal global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.42, i32 0, i32 0)], align 16
@.str.39 = private unnamed_addr constant [5 x i8] c"isoc\00", align 1
@.str.40 = private unnamed_addr constant [4 x i8] c"int\00", align 1
@.str.41 = private unnamed_addr constant [5 x i8] c"ctrl\00", align 1
@.str.42 = private unnamed_addr constant [5 x i8] c"bulk\00", align 1
@snoop_urb.dirs = internal global [2 x i8*] [i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.44, i32 0, i32 0)], align 16
@.str.43 = private unnamed_addr constant [4 x i8] c"out\00", align 1
@.str.44 = private unnamed_addr constant [3 x i8] c"in\00", align 1
@.str.45 = private unnamed_addr constant [35 x i8] c"userurb %p, ep%d %s-%s, length %u\0A\00", align 1
@.str.46 = private unnamed_addr constant [52 x i8] c"userurb %p, ep%d %s-%s, actual_length %u status %d\0A\00", align 1
@.str.47 = private unnamed_addr constant [35 x i8] c"ep%d %s-%s, length %u, timeout %d\0A\00", align 1
@.str.48 = private unnamed_addr constant [41 x i8] c"ep%d %s-%s, actual_length %u, status %d\0A\00", align 1
@.str.49 = private unnamed_addr constant [7 x i8] c"data: \00", align 1
@.str.50 = private unnamed_addr constant [22 x i8] c"./include/linux/usb.h\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"RESETEP\00", align 1
@.str.52 = private unnamed_addr constant [63 x i8] c"Process %d (%s) called USBDEVFS_%s for active endpoint 0x%02x\0A\00", align 1
@.str.53 = private unnamed_addr constant [60 x i8] c"usbfs: interface %d claimed by %s while '%s' resets device\0A\00", align 1
@.str.54 = private unnamed_addr constant [11 x i8] c"CLEAR_HALT\00", align 1
@.str.55 = private unnamed_addr constant [62 x i8] c"usbfs: interface %d claimed by %s while '%s' sets config #%d\0A\00", align 1
@.str.56 = private unnamed_addr constant [35 x i8] c"usbfs: usb_submit_urb returned %d\0A\00", align 1
@.str.57 = private unnamed_addr constant [30 x i8] c"./include/linux/scatterlist.h\00", align 1
@phys_base = external global i64, align 8
@.str.58 = private unnamed_addr constant [14 x i8] c"urb complete\0A\00", align 1
@.str.59 = private unnamed_addr constant [35 x i8] c"port %d claimed by process %d: %s\0A\00", align 1
@usbdev_vm_ops = internal global %struct.vm_operations_struct { void (%struct.vm_area_struct*)* @usbdev_vm_open, void (%struct.vm_area_struct*)* @usbdev_vm_close, i32 (%struct.vm_area_struct*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*, i32)* null, void (%struct.vm_fault*, i64, i64)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_fault*)* null, i32 (%struct.vm_area_struct*, i64, i8*, i32, i32)* null, i8* (%struct.vm_area_struct*)* null, i32 (%struct.vm_area_struct*, %struct.mempolicy*)* null, %struct.mempolicy* (%struct.vm_area_struct*, i64)* null, %struct.page* (%struct.vm_area_struct*, i64)* null }, align 8
@usbdev_open.__key = internal global %struct.lock_class_key zeroinitializer, align 1
@.str.60 = private unnamed_addr constant [10 x i8] c"&ps->wait\00", align 1
@.str.61 = private unnamed_addr constant [26 x i8] c"opened by process %d: %s\0A\00", align 1
@usb_bus_type = external global %struct.bus_type, align 8
@llvm.used = appending global [3 x i8*] [i8* bitcast (%struct.kernel_param* @__param_usbfs_snoop to i8*), i8* bitcast (%struct.kernel_param* @__param_usbfs_snoop_max to i8*), i8* bitcast (%struct.kernel_param* @__param_usbfs_memory_mb to i8*)], section "llvm.metadata"

; Function Attrs: noinline nounwind uwtable
define internal i32 @driver_probe(%struct.usb_interface*, %struct.usb_device_id*) #0 {
  ret i32 -19
}

; Function Attrs: noinline nounwind uwtable
define internal void @driver_disconnect(%struct.usb_interface*) #0 {
  %2 = call i8* @usb_get_intfdata(%struct.usb_interface* %0)
  %3 = bitcast i8* %2 to %struct.usb_dev_state*
  %4 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 0
  %5 = load %struct.usb_host_interface*, %struct.usb_host_interface** %4, align 8
  %6 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %5, i32 0, i32 0
  %7 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %6, i32 0, i32 2
  %8 = load i8, i8* %7, align 2
  %9 = zext i8 %8 to i32
  %10 = icmp ne %struct.usb_dev_state* %3, null
  br i1 %10, label %11, label %25

; <label>:11:                                     ; preds = %1
  %12 = zext i32 %9 to i64
  %13 = icmp ult i64 %12, 64
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %22

; <label>:19:                                     ; preds = %11
  %20 = zext i32 %9 to i64
  %21 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %3, i32 0, i32 12
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $1,$0", "=*m,Ir,*m,~{dirflag},~{fpsr},~{flags}"(i64* %21, i64 %20, i64* %21) #4, !srcloc !1
  br label %24

; <label>:22:                                     ; preds = %11
  %23 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7
  call void (%struct.device*, i8*, ...) @dev_warn(%struct.device* %23, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.4, i32 0, i32 0), i32 %9)
  br label %24

; <label>:24:                                     ; preds = %22, %19
  call void @usb_set_intfdata(%struct.usb_interface* %0, i8* null)
  call void @destroy_async_on_interface(%struct.usb_dev_state* %3, i32 %9)
  br label %25

; <label>:25:                                     ; preds = %1, %24
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @driver_suspend(%struct.usb_interface*, i32) #0 {
  %3 = alloca %struct.pm_message, align 4
  %4 = getelementptr inbounds %struct.pm_message, %struct.pm_message* %3, i32 0, i32 0
  store i32 %1, i32* %4, align 4
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @driver_resume(%struct.usb_interface*) #0 {
  ret i32 0
}

declare i64 @no_seek_end_llseek(%struct.file*, i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i64 @usbdev_read(%struct.file*, i8*, i64, i64*) #0 {
  %5 = alloca %struct.usb_device_descriptor, align 1
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast i8* %9 to %struct.usb_dev_state*
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 1
  %12 = load %struct.usb_device*, %struct.usb_device** %11, align 8
  %13 = load i64, i64* %3, align 8
  %14 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 11
  call void @device_lock(%struct.device* %14)
  %15 = call i32 @connected(%struct.usb_dev_state* %10)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %.critedge

; <label>:17:                                     ; preds = %4
  %18 = icmp slt i64 %13, 0
  br i1 %18, label %.critedge, label %19

; <label>:19:                                     ; preds = %17
  %20 = icmp ult i64 %13, 18
  br i1 %20, label %21, label %68

; <label>:21:                                     ; preds = %19
  %22 = icmp uge i64 18, 64
  %23 = bitcast %struct.usb_device_descriptor* %5 to i8*
  %24 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 12
  %25 = bitcast %struct.usb_device_descriptor* %24 to i8*
  br i1 %22, label %26, label %28

; <label>:26:                                     ; preds = %21
  %27 = call i8* @__memcpy(i8* %23, i8* %25, i64 18)
  br label %29

; <label>:28:                                     ; preds = %21
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %23, i8* %25, i64 18, i32 1, i1 false)
  br label %29

; <label>:29:                                     ; preds = %26, %28
  %.0 = phi i8* [ %27, %26 ], [ %23, %28 ]
  %30 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %5, i32 0, i32 2
  %31 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %5, i32 0, i32 7
  %32 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %5, i32 0, i32 8
  %33 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %5, i32 0, i32 9
  %34 = sub i64 18, %13
  %35 = trunc i64 %34 to i32
  %36 = zext i32 %35 to i64
  %37 = icmp ugt i64 %36, %2
  %38 = trunc i64 %2 to i32
  %.04 = select i1 %37, i32 %38, i32 %35
  %39 = bitcast %struct.usb_device_descriptor* %5 to i8*
  %40 = getelementptr inbounds i8, i8* %39, i64 %13
  %41 = zext i32 %.04 to i64
  %42 = call i64 @llvm.objectsize.i64.p0i8(i8* %40, i1 false) #4
  %43 = trunc i64 %42 to i32
  %44 = trunc i64 %41 to i32
  call void @kasan_check_read(i8* %40, i32 %44) #4
  call void @might_fault() #4
  %45 = icmp slt i32 %43, 0
  %46 = sext i32 %43 to i64
  %47 = icmp uge i64 %46, %41
  %48 = select i1 %45, i1 true, i1 %47
  %49 = xor i1 %48, true
  %50 = zext i1 %48 to i32
  %51 = sext i32 %50 to i64
  br i1 %48, label %52, label %55

; <label>:52:                                     ; preds = %29
  call void @check_object_size(i8* %40, i64 %41, i1 zeroext true) #4
  %53 = trunc i64 %41 to i32
  %54 = call i64 @_copy_to_user(i8* %1, i8* %40, i32 %53) #4
  br label %56

; <label>:55:                                     ; preds = %29
  call void @copy_user_overflow(i32 %43, i64 %41) #4
  br label %56

; <label>:56:                                     ; preds = %55, %52
  %.05 = phi i64 [ %54, %52 ], [ %41, %55 ]
  %57 = icmp ne i64 %.05, 0
  br i1 %57, label %.critedge, label %58

; <label>:58:                                     ; preds = %56
  %59 = zext i32 %.04 to i64
  %60 = load i64, i64* %3, align 8
  %61 = add nsw i64 %60, %59
  store i64 %61, i64* %3, align 8
  %62 = zext i32 %.04 to i64
  %63 = getelementptr inbounds i8, i8* %1, i64 %62
  %64 = zext i32 %.04 to i64
  %65 = sub i64 %2, %64
  %66 = zext i32 %.04 to i64
  %67 = add nsw i64 0, %66
  br label %68

; <label>:68:                                     ; preds = %19, %58, %160
  %.112 = phi i8* [ %.213, %160 ], [ %63, %58 ], [ %1, %19 ]
  %.19 = phi i64 [ %.210, %160 ], [ %65, %58 ], [ %2, %19 ]
  %.17 = phi i64 [ %.2, %160 ], [ %67, %58 ], [ 0, %19 ]
  %.03 = phi i64 [ %162, %160 ], [ 18, %58 ], [ 18, %19 ]
  %.02 = phi i32 [ %163, %160 ], [ 0, %58 ], [ 0, %19 ]
  %69 = icmp ne i64 %.19, 0
  br i1 %69, label %70, label %.critedge

; <label>:70:                                     ; preds = %68
  %71 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 12
  %72 = getelementptr inbounds %struct.usb_device_descriptor, %struct.usb_device_descriptor* %71, i32 0, i32 13
  %73 = load i8, i8* %72, align 1
  %74 = zext i8 %73 to i32
  %75 = icmp slt i32 %.02, %74
  br i1 %75, label %76, label %.critedge

; <label>:76:                                     ; preds = %70
  %77 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 18
  %78 = load i8**, i8*** %77, align 8
  %79 = sext i32 %.02 to i64
  %80 = getelementptr inbounds i8*, i8** %78, i64 %79
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast i8* %81 to %struct.usb_config_descriptor*
  %83 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %82, i32 0, i32 2
  %84 = load i16, i16* %83, align 1
  %85 = zext i16 %84 to i32
  %86 = load i64, i64* %3, align 8
  %87 = zext i32 %85 to i64
  %88 = add nsw i64 %.03, %87
  %89 = icmp slt i64 %86, %88
  br i1 %89, label %90, label %160

; <label>:90:                                     ; preds = %76
  %91 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 14
  %92 = load %struct.usb_host_config*, %struct.usb_host_config** %91, align 8
  %93 = sext i32 %.02 to i64
  %94 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %92, i64 %93
  %95 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %94, i32 0, i32 0
  %96 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %95, i32 0, i32 2
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = zext i32 %85 to i64
  %100 = load i64, i64* %3, align 8
  %101 = sub nsw i64 %100, %.03
  %102 = sub nsw i64 %99, %101
  %103 = trunc i64 %102 to i32
  %104 = zext i32 %103 to i64
  %105 = icmp ugt i64 %104, %.19
  %106 = trunc i64 %.19 to i32
  %. = select i1 %105, i32 %106, i32 %103
  %107 = zext i32 %98 to i64
  %108 = load i64, i64* %3, align 8
  %109 = sub nsw i64 %108, %.03
  %110 = icmp sgt i64 %107, %109
  br i1 %110, label %111, label %150

; <label>:111:                                    ; preds = %90
  %112 = load i64, i64* %3, align 8
  %113 = sub nsw i64 %112, %.03
  %114 = zext i32 %98 to i64
  %115 = sub nsw i64 %114, %113
  %116 = trunc i64 %115 to i32
  %117 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 18
  %118 = load i8**, i8*** %117, align 8
  %119 = sext i32 %.02 to i64
  %120 = getelementptr inbounds i8*, i8** %118, i64 %119
  %121 = load i8*, i8** %120, align 8
  %122 = load i64, i64* %3, align 8
  %123 = sub nsw i64 %122, %.03
  %124 = getelementptr inbounds i8, i8* %121, i64 %123
  store i32 %., i32* %6, align 4
  store i32 %116, i32* %7, align 4
  %125 = icmp eq i32* %6, %7
  %126 = zext i1 %125 to i32
  %127 = load i32, i32* %6, align 4
  %128 = load i32, i32* %7, align 4
  %129 = icmp ult i32 %127, %128
  %130 = load i32, i32* %6, align 4
  %131 = load i32, i32* %7, align 4
  %132 = select i1 %129, i32 %130, i32 %131
  %133 = zext i32 %132 to i64
  %134 = call i64 @llvm.objectsize.i64.p0i8(i8* %124, i1 false) #4
  %135 = trunc i64 %134 to i32
  %136 = trunc i64 %133 to i32
  call void @kasan_check_read(i8* %124, i32 %136) #4
  call void @might_fault() #4
  %137 = icmp slt i32 %135, 0
  %138 = sext i32 %135 to i64
  %139 = icmp uge i64 %138, %133
  %140 = select i1 %137, i1 true, i1 %139
  %141 = xor i1 %140, true
  %142 = zext i1 %140 to i32
  %143 = sext i32 %142 to i64
  br i1 %140, label %144, label %147

; <label>:144:                                    ; preds = %111
  call void @check_object_size(i8* %124, i64 %133, i1 zeroext true) #4
  %145 = trunc i64 %133 to i32
  %146 = call i64 @_copy_to_user(i8* %.112, i8* %124, i32 %145) #4
  br label %148

; <label>:147:                                    ; preds = %111
  call void @copy_user_overflow(i32 %135, i64 %133) #4
  br label %148

; <label>:148:                                    ; preds = %147, %144
  %.01 = phi i64 [ %146, %144 ], [ %133, %147 ]
  %149 = icmp ne i64 %.01, 0
  br i1 %149, label %.critedge, label %150

; <label>:150:                                    ; preds = %148, %90
  %151 = zext i32 %. to i64
  %152 = load i64, i64* %3, align 8
  %153 = add nsw i64 %152, %151
  store i64 %153, i64* %3, align 8
  %154 = zext i32 %. to i64
  %155 = getelementptr inbounds i8, i8* %.112, i64 %154
  %156 = zext i32 %. to i64
  %157 = sub i64 %.19, %156
  %158 = zext i32 %. to i64
  %159 = add nsw i64 %.17, %158
  br label %160

; <label>:160:                                    ; preds = %150, %76
  %.213 = phi i8* [ %155, %150 ], [ %.112, %76 ]
  %.210 = phi i64 [ %157, %150 ], [ %.19, %76 ]
  %.2 = phi i64 [ %159, %150 ], [ %.17, %76 ]
  %161 = zext i32 %85 to i64
  %162 = add nsw i64 %.03, %161
  %163 = add nsw i32 %.02, 1
  br label %68

.critedge:                                        ; preds = %70, %68, %148, %56, %17, %4
  %.3 = phi i64 [ -19, %4 ], [ -22, %17 ], [ -14, %56 ], [ -14, %148 ], [ %.17, %68 ], [ %.17, %70 ]
  %164 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 11
  call void @device_unlock(%struct.device* %164)
  ret i64 %.3
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbdev_poll(%struct.file*, %struct.poll_table_struct*) #0 {
  %3 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %4 to %struct.usb_dev_state*
  %6 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 7
  call void @poll_wait(%struct.file* %0, %struct.__wait_queue_head* %6, %struct.poll_table_struct* %1)
  %7 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = and i32 %8, 2
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %11, label %16

; <label>:11:                                     ; preds = %2
  %12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 5
  %13 = call i32 @list_empty(%struct.list_head* %12)
  %14 = icmp ne i32 %13, 0
  %15 = or i32 0, 260
  %. = select i1 %14, i32 0, i32 %15
  br label %16

; <label>:16:                                     ; preds = %11, %2
  %.0 = phi i32 [ 0, %2 ], [ %., %11 ]
  %17 = call i32 @connected(%struct.usb_dev_state* %5)
  %18 = icmp ne i32 %17, 0
  %19 = or i32 %.0, 16
  %.0. = select i1 %18, i32 %.0, i32 %19
  %20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 0
  %21 = call i32 @list_empty(%struct.list_head* %20)
  %22 = icmp ne i32 %21, 0
  %23 = or i32 %.0., 8
  %.2 = select i1 %22, i32 %23, i32 %.0.
  ret i32 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @usbdev_ioctl(%struct.file*, i32, i64) #0 {
  %4 = inttoptr i64 %2 to i8*
  %5 = call i64 @usbdev_do_ioctl(%struct.file* %0, i32 %1, i8* %4)
  %6 = trunc i64 %5 to i32
  %7 = sext i32 %6 to i64
  ret i64 %7
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @usbdev_compat_ioctl(%struct.file*, i32, i64) #0 {
  %4 = trunc i64 %2 to i32
  %5 = call i8* @compat_ptr(i32 %4)
  %6 = call i64 @usbdev_do_ioctl(%struct.file* %0, i32 %1, i8* %5)
  %7 = trunc i64 %6 to i32
  %8 = sext i32 %7 to i64
  ret i64 %8
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbdev_mmap(%struct.file*, %struct.vm_area_struct*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast i8* %7 to %struct.usb_dev_state*
  %9 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = add i64 %13, 64
  %15 = call i32 @usbfs_increase_memory_usage(i64 %14)
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %76, label %17

; <label>:17:                                     ; preds = %2
  %18 = call i8* @kzalloc(i64 64, i32 20971712)
  %19 = bitcast i8* %18 to %struct.usb_memory*
  %20 = icmp ne %struct.usb_memory* %19, null
  br i1 %20, label %21, label %74

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  %24 = call i8* @usb_alloc_coherent(%struct.usb_device* %23, i64 %13, i32 21103296, i64* %3)
  %25 = icmp ne i8* %24, null
  br i1 %25, label %26, label %72

; <label>:26:                                     ; preds = %21
  call void @llvm.memset.p0i8.i64(i8* %24, i8 0, i64 %13, i32 1, i1 false)
  %27 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 4
  store i8* %24, i8** %27, align 8
  %28 = load i64, i64* %3, align 8
  %29 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 5
  store i64 %28, i64* %29, align 8
  %30 = trunc i64 %13 to i32
  %31 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 3
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 7
  store %struct.usb_dev_state* %8, %struct.usb_dev_state** %32, align 8
  %33 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 6
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 1
  store i32 1, i32* %36, align 8
  %37 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 0
  call void @INIT_LIST_HEAD(%struct.list_head* %37)
  %38 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 4
  %41 = load i8*, i8** %40, align 8
  %42 = call i64 @virt_to_phys(i8* %41)
  %43 = lshr i64 %42, 12
  %44 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 7
  %45 = getelementptr inbounds %struct.pgprot, %struct.pgprot* %44, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = call i32 @remap_pfn_range(%struct.vm_area_struct* %1, i64 %39, i64 %43, i64 %13, i64 %46)
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %49, label %51

; <label>:49:                                     ; preds = %26
  %50 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 1
  call void @dec_usb_memory_use_count(%struct.usb_memory* %19, i32* %50)
  br label %76

; <label>:51:                                     ; preds = %26
  %52 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 8
  %53 = load i64, i64* %52, align 8
  %54 = or i64 %53, 16384
  store i64 %54, i64* %52, align 8
  %55 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 8
  %56 = load i64, i64* %55, align 8
  %57 = or i64 %56, 67371008
  store i64 %57, i64* %55, align 8
  %58 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 12
  store %struct.vm_operations_struct* @usbdev_vm_ops, %struct.vm_operations_struct** %58, align 8
  %59 = bitcast %struct.usb_memory* %19 to i8*
  %60 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %1, i32 0, i32 15
  store i8* %59, i8** %60, align 8
  %61 = icmp eq i64* %4, %5
  %62 = zext i1 %61 to i32
  %63 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 3
  %64 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %63, i32 0, i32 0
  %65 = bitcast %union.anon* %64 to %struct.raw_spinlock*
  %66 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %65)
  %67 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %19, i32 0, i32 0
  %68 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 6
  call void @list_add_tail(%struct.list_head* %67, %struct.list_head* %68)
  %69 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %8, i32 0, i32 3
  %70 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %69, i32 0, i32 0
  %71 = bitcast %union.anon* %70 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %71, i64 %66) #4
  br label %76

; <label>:72:                                     ; preds = %21
  %73 = bitcast %struct.usb_memory* %19 to i8*
  call void @kfree(i8* %73)
  br label %74

; <label>:74:                                     ; preds = %17, %72
  %75 = add i64 %13, 64
  call void @usbfs_decrease_memory_usage(i64 %75)
  br label %76

; <label>:76:                                     ; preds = %74, %2, %51, %49
  %.01 = phi i32 [ -11, %49 ], [ 0, %51 ], [ -12, %74 ], [ %15, %2 ]
  ret i32 %.01
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbdev_open(%struct.inode*, %struct.file*) #0 {
  %3 = alloca %struct.raw_spinlock, align 4
  %4 = call i8* @kzalloc(i64 176, i32 20971712)
  %5 = bitcast i8* %4 to %struct.usb_dev_state*
  %6 = icmp ne %struct.usb_dev_state* %5, null
  br i1 %6, label %7, label %71

; <label>:7:                                      ; preds = %2
  call void @mutex_lock(%struct.mutex* @usbfs_mutex)
  %8 = call i32 @imajor(%struct.inode* %0)
  %9 = icmp eq i32 %8, 189
  br i1 %9, label %10, label %14

; <label>:10:                                     ; preds = %7
  %11 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 13
  %12 = load i32, i32* %11, align 4
  %13 = call %struct.usb_device* @usbdev_lookup_by_devt(i32 %12)
  br label %14

; <label>:14:                                     ; preds = %10, %7
  %.01 = phi %struct.usb_device* [ %13, %10 ], [ null, %7 ]
  call void @mutex_unlock(%struct.mutex* @usbfs_mutex)
  %15 = icmp ne %struct.usb_device* %.01, null
  br i1 %15, label %16, label %71

; <label>:16:                                     ; preds = %14
  %17 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 11
  call void @device_lock(%struct.device* %17)
  %18 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %69, label %21

; <label>:21:                                     ; preds = %16
  %22 = call i32 @usb_autoresume_device(%struct.usb_device* %.01)
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %69, label %24

; <label>:24:                                     ; preds = %21
  %25 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 1
  store %struct.usb_device* %.01, %struct.usb_device** %25, align 8
  %26 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 2
  store %struct.file* %1, %struct.file** %26, align 8
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 16
  store i64 4294967295, i64* %27, align 8
  %28 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %29 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %28, i32 0, i32 0
  %30 = bitcast %union.anon* %29 to %struct.raw_spinlock*
  %31 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %32 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %31, i32 0, i32 0
  %33 = bitcast %union.anon* %32 to %struct.raw_spinlock*
  %34 = getelementptr inbounds %struct.raw_spinlock, %struct.raw_spinlock* %3, i32 0, i32 0
  %35 = getelementptr inbounds %struct.qspinlock, %struct.qspinlock* %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %35, i32 0, i32 0
  store i32 0, i32* %36, align 4
  %37 = bitcast %struct.raw_spinlock* %33 to i8*
  %38 = bitcast %struct.raw_spinlock* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 4, i32 4, i1 false)
  %39 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 0
  call void @INIT_LIST_HEAD(%struct.list_head* %39)
  %40 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 4
  call void @INIT_LIST_HEAD(%struct.list_head* %40)
  %41 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 5
  call void @INIT_LIST_HEAD(%struct.list_head* %41)
  %42 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 6
  call void @INIT_LIST_HEAD(%struct.list_head* %42)
  %43 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 7
  call void @__init_waitqueue_head(%struct.__wait_queue_head* %43, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.60, i32 0, i32 0), %struct.lock_class_key* @usbdev_open.__key)
  %44 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %45 = call %struct.pid* @task_pid(%struct.task_struct* %44)
  %46 = call %struct.pid* @get_pid(%struct.pid* %45)
  %47 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 9
  store %struct.pid* %46, %struct.pid** %47, align 8
  %48 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %49 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %48, i32 0, i32 76
  %50 = load %struct.cred*, %struct.cred** %49, align 32
  %51 = call %struct.cred* @get_cred(%struct.cred* %50)
  %52 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 10
  store %struct.cred* %51, %struct.cred** %52, align 8
  %53 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %54 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 13
  call void @security_task_getsecid(%struct.task_struct* %53, i32* %54)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !3
  %55 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 0
  %56 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 27
  call void @list_add_tail(%struct.list_head* %55, %struct.list_head* %56)
  %57 = bitcast %struct.usb_dev_state* %5 to i8*
  %58 = getelementptr inbounds %struct.file, %struct.file* %1, i32 0, i32 15
  store i8* %57, i8** %58, align 8
  %59 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 11
  call void @device_unlock(%struct.device* %59)
  %60 = load i8, i8* @usbfs_snoop, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %73

; <label>:62:                                     ; preds = %24
  %63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 11
  %64 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %65 = call i32 @task_pid_nr(%struct.task_struct* %64)
  %66 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %67 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %66, i32 0, i32 77
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %67, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %63, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.61, i32 0, i32 0), i32 %65, i8* %68)
  br label %73

; <label>:69:                                     ; preds = %21, %16
  %.0 = phi i32 [ -19, %16 ], [ %22, %21 ]
  %70 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %.01, i32 0, i32 11
  call void @device_unlock(%struct.device* %70)
  call void @usb_put_dev(%struct.usb_device* %.01)
  br label %71

; <label>:71:                                     ; preds = %14, %2, %69
  %.1 = phi i32 [ %.0, %69 ], [ -12, %2 ], [ -19, %14 ]
  %72 = bitcast %struct.usb_dev_state* %5 to i8*
  call void @kfree(i8* %72)
  br label %73

; <label>:73:                                     ; preds = %62, %24, %71
  %.02 = phi i32 [ %.1, %71 ], [ %22, %24 ], [ %22, %62 ]
  ret i32 %.02
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbdev_release(%struct.inode*, %struct.file*) #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %struct.file, %struct.file* %1, i32 0, i32 15
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.usb_dev_state*
  %7 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 1
  %8 = load %struct.usb_device*, %struct.usb_device** %7, align 8
  %9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 11
  call void @device_lock(%struct.device* %9)
  call void @usb_hub_release_all_ports(%struct.usb_device* %8, %struct.usb_dev_state* %6)
  %10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 0
  call void @list_del_init(%struct.list_head* %10)
  br label %11

; <label>:11:                                     ; preds = %25, %2
  %.01 = phi i32 [ 0, %2 ], [ %26, %25 ]
  %12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 12
  %13 = load i64, i64* %12, align 8
  %14 = icmp ne i64 %13, 0
  %15 = zext i32 %.01 to i64
  %16 = icmp ult i64 %15, 64
  %17 = select i1 %14, i1 %16, i1 false
  br i1 %17, label %18, label %27

; <label>:18:                                     ; preds = %11
  %19 = zext i32 %.01 to i64
  %20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 12
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %3, i64* %20, i64 %19) #4, !srcloc !4
  %21 = load i8, i8* %3, align 1
  %22 = trunc i8 %21 to i1
  br i1 %22, label %23, label %25

; <label>:23:                                     ; preds = %18
  %24 = call i32 @releaseintf(%struct.usb_dev_state* %6, i32 %.01)
  br label %25

; <label>:25:                                     ; preds = %18, %23
  %26 = add i32 %.01, 1
  br label %11

; <label>:27:                                     ; preds = %11
  call void @destroy_all_async(%struct.usb_dev_state* %6)
  call void @usb_autosuspend_device(%struct.usb_device* %8)
  %28 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %8, i32 0, i32 11
  call void @device_unlock(%struct.device* %28)
  call void @usb_put_dev(%struct.usb_device* %8)
  %29 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 9
  %30 = load %struct.pid*, %struct.pid** %29, align 8
  call void @put_pid(%struct.pid* %30)
  %31 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 10
  %32 = load %struct.cred*, %struct.cred** %31, align 8
  call void @put_cred(%struct.cred* %32)
  br label %33

; <label>:33:                                     ; preds = %36, %27
  %34 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %6)
  %35 = icmp ne %struct.async* %34, null
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %33
  call void @free_async(%struct.async* %34)
  br label %33

; <label>:37:                                     ; preds = %33
  %38 = bitcast %struct.usb_dev_state* %6 to i8*
  call void @kfree(i8* %38)
  ret i32 0
}

; Function Attrs: noinline nounwind uwtable
define i32 @usb_devio_init() #0 section ".init.text" {
  %1 = call i32 @register_chrdev_region(i32 198180864, i32 8192, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i32 0, i32 0))
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %3, label %5

; <label>:3:                                      ; preds = %0
  %4 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i32 0, i32 0))
  br label %11

; <label>:5:                                      ; preds = %0
  call void @cdev_init(%struct.cdev* @usb_device_cdev, %struct.file_operations* @usbdev_file_operations)
  %6 = call i32 @cdev_add(%struct.cdev* @usb_device_cdev, i32 198180864, i32 8192)
  %7 = icmp ne i32 %6, 0
  br i1 %7, label %8, label %10

; <label>:8:                                      ; preds = %5
  %9 = call i32 (i8*, ...) @printk(i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.3, i32 0, i32 0), i32 189)
  call void @unregister_chrdev_region(i32 198180864, i32 8192)
  br label %11

; <label>:10:                                     ; preds = %5
  call void @usb_register_notify(%struct.notifier_block* @usbdev_nb)
  br label %11

; <label>:11:                                     ; preds = %8, %10, %3
  %.0 = phi i32 [ %1, %3 ], [ %6, %8 ], [ %6, %10 ]
  ret i32 %.0
}

declare i32 @register_chrdev_region(i32, i32, i8*) #1

declare i32 @printk(i8*, ...) #1

declare void @cdev_init(%struct.cdev*, %struct.file_operations*) #1

declare i32 @cdev_add(%struct.cdev*, i32, i32) #1

declare void @usb_register_notify(%struct.notifier_block*) #1

declare void @unregister_chrdev_region(i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define void @usb_devio_cleanup() #0 {
  call void @usb_unregister_notify(%struct.notifier_block* @usbdev_nb)
  call void @cdev_del(%struct.cdev* @usb_device_cdev)
  call void @unregister_chrdev_region(i32 198180864, i32 8192)
  ret void
}

declare void @usb_unregister_notify(%struct.notifier_block*) #1

declare void @cdev_del(%struct.cdev*) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @usb_get_intfdata(%struct.usb_interface*) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7
  %3 = call i8* @dev_get_drvdata(%struct.device* %2)
  ret i8* %3
}

declare void @dev_warn(%struct.device*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal void @usb_set_intfdata(%struct.usb_interface*, i8*) #0 {
  %3 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7
  call void @dev_set_drvdata(%struct.device* %3, i8* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @destroy_async_on_interface(%struct.usb_dev_state*, i32) #0 {
  %3 = alloca %struct.list_head, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  call void @INIT_LIST_HEAD(%struct.list_head* %3)
  %6 = icmp eq i64* %4, %5
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.raw_spinlock*
  %11 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %10)
  %12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  %13 = getelementptr inbounds %struct.list_head, %struct.list_head* %12, i32 0, i32 0
  %14 = load %struct.list_head*, %struct.list_head** %13, align 8
  br label %15

; <label>:15:                                     ; preds = %27, %20, %2
  %.sink2 = phi %struct.list_head* [ %14, %2 ], [ %17, %20 ], [ %17, %27 ]
  %16 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink2, i32 0, i32 0
  %17 = load %struct.list_head*, %struct.list_head** %16, align 8
  %18 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  %19 = icmp ne %struct.list_head* %.sink2, %18
  br i1 %19, label %20, label %28

; <label>:20:                                     ; preds = %15
  %21 = bitcast %struct.list_head* %.sink2 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 0
  %23 = bitcast i8* %22 to %struct.async*
  %24 = getelementptr inbounds %struct.async, %struct.async* %23, i32 0, i32 5
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %1, %25
  br i1 %26, label %27, label %15

; <label>:27:                                     ; preds = %20
  call void @list_move_tail(%struct.list_head* %.sink2, %struct.list_head* %3)
  br label %15

; <label>:28:                                     ; preds = %15
  %29 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %30 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %29, i32 0, i32 0
  %31 = bitcast %union.anon* %30 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %31, i64 %11) #4
  call void @destroy_async(%struct.usb_dev_state* %0, %struct.list_head* %3)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @dev_get_drvdata(%struct.device*) #0 {
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal void @dev_set_drvdata(%struct.device*, i8*) #0 {
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 9
  store i8* %1, i8** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @INIT_LIST_HEAD(%struct.list_head*) #0 {
  %2 = alloca %union.anon.58, align 8
  %3 = bitcast %union.anon.58* %2 to %struct.list_head**
  store %struct.list_head* %0, %struct.list_head** %3, align 8
  %4 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  %5 = bitcast %struct.list_head** %4 to i8*
  %6 = bitcast %union.anon.58* %2 to [1 x i8]*
  %7 = getelementptr inbounds [1 x i8], [1 x i8]* %6, i32 0, i32 0
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast i8* %5 to i64*
  store volatile i64 %9, i64* %10, align 8
  %11 = bitcast %union.anon.58* %2 to %struct.list_head**
  %12 = load %struct.list_head*, %struct.list_head** %11, align 8
  %13 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 1
  store %struct.list_head* %0, %struct.list_head** %13, align 8
  ret void
}

declare i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock*) #1 section ".spinlock.text"

; Function Attrs: noinline nounwind uwtable
define internal void @list_move_tail(%struct.list_head*, %struct.list_head*) #0 {
  call void @__list_del_entry(%struct.list_head* %0)
  call void @list_add_tail(%struct.list_head* %0, %struct.list_head* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @destroy_async(%struct.usb_dev_state*, %struct.list_head*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = icmp eq i64* %3, %4
  %8 = zext i1 %7 to i32
  br label %9

; <label>:9:                                      ; preds = %17, %2
  %10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0
  %12 = bitcast %union.anon* %11 to %struct.raw_spinlock*
  %13 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %12)
  %14 = call i32 @list_empty(%struct.list_head* %1)
  %15 = icmp ne i32 %14, 0
  %16 = xor i1 %15, true
  br i1 %16, label %17, label %32

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0
  %19 = load %struct.list_head*, %struct.list_head** %18, align 8
  %20 = bitcast %struct.list_head* %19 to i8*
  %21 = getelementptr inbounds i8, i8* %20, i64 0
  %22 = bitcast i8* %21 to %struct.async*
  %23 = getelementptr inbounds %struct.async, %struct.async* %22, i32 0, i32 0
  call void @list_del_init(%struct.list_head* %23)
  %24 = getelementptr inbounds %struct.async, %struct.async* %22, i32 0, i32 8
  %25 = load %struct.urb*, %struct.urb** %24, align 8
  %26 = call %struct.urb* @usb_get_urb(%struct.urb* %25)
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %28 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %27, i32 0, i32 0
  %29 = bitcast %union.anon* %28 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %29, i64 %13) #4
  call void @usb_kill_urb(%struct.urb* %25)
  call void @usb_free_urb(%struct.urb* %25)
  %30 = icmp eq i64* %5, %6
  %31 = zext i1 %30 to i32
  br label %9

; <label>:32:                                     ; preds = %9
  %33 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %34 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %33, i32 0, i32 0
  %35 = bitcast %union.anon* %34 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %35, i64 %13) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #2

; Function Attrs: noinline nounwind uwtable
define internal void @__list_del_entry(%struct.list_head*) #0 {
  %2 = call zeroext i1 @__list_del_entry_valid(%struct.list_head* %0)
  br i1 %2, label %3, label %8

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 1
  %5 = load %struct.list_head*, %struct.list_head** %4, align 8
  %6 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  %7 = load %struct.list_head*, %struct.list_head** %6, align 8
  call void @__list_del(%struct.list_head* %5, %struct.list_head* %7)
  br label %8

; <label>:8:                                      ; preds = %1, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @list_add_tail(%struct.list_head*, %struct.list_head*) #0 {
  %3 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1
  %4 = load %struct.list_head*, %struct.list_head** %3, align 8
  call void @__list_add(%struct.list_head* %0, %struct.list_head* %4, %struct.list_head* %1)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @__list_del_entry_valid(%struct.list_head*) #0 {
  ret i1 true
}

; Function Attrs: noinline nounwind uwtable
define internal void @__list_del(%struct.list_head*, %struct.list_head*) #0 {
  %3 = alloca %union.anon.59, align 8
  %4 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 1
  store %struct.list_head* %0, %struct.list_head** %4, align 8
  %5 = bitcast %union.anon.59* %3 to %struct.list_head**
  store %struct.list_head* %1, %struct.list_head** %5, align 8
  %6 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  %7 = bitcast %struct.list_head** %6 to i8*
  %8 = bitcast %union.anon.59* %3 to [1 x i8]*
  %9 = getelementptr inbounds [1 x i8], [1 x i8]* %8, i32 0, i32 0
  %10 = bitcast i8* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast i8* %7 to i64*
  store volatile i64 %11, i64* %12, align 8
  %13 = bitcast %union.anon.59* %3 to %struct.list_head**
  %14 = load %struct.list_head*, %struct.list_head** %13, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @__list_add(%struct.list_head*, %struct.list_head*, %struct.list_head*) #0 {
  %4 = alloca %union.anon.60, align 8
  %5 = call zeroext i1 @__list_add_valid(%struct.list_head* %0, %struct.list_head* %1, %struct.list_head* %2)
  br i1 %5, label %6, label %20

; <label>:6:                                      ; preds = %3
  %7 = getelementptr inbounds %struct.list_head, %struct.list_head* %2, i32 0, i32 1
  store %struct.list_head* %0, %struct.list_head** %7, align 8
  %8 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  store %struct.list_head* %2, %struct.list_head** %8, align 8
  %9 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 1
  store %struct.list_head* %1, %struct.list_head** %9, align 8
  %10 = bitcast %union.anon.60* %4 to %struct.list_head**
  store %struct.list_head* %0, %struct.list_head** %10, align 8
  %11 = getelementptr inbounds %struct.list_head, %struct.list_head* %1, i32 0, i32 0
  %12 = bitcast %struct.list_head** %11 to i8*
  %13 = bitcast %union.anon.60* %4 to [1 x i8]*
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast i8* %12 to i64*
  store volatile i64 %16, i64* %17, align 8
  %18 = bitcast %union.anon.60* %4 to %struct.list_head**
  %19 = load %struct.list_head*, %struct.list_head** %18, align 8
  br label %20

; <label>:20:                                     ; preds = %3, %6
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @__list_add_valid(%struct.list_head*, %struct.list_head*, %struct.list_head*) #0 {
  ret i1 true
}

declare void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock*, i64) #1 section ".spinlock.text"

; Function Attrs: noinline nounwind uwtable
define internal i32 @list_empty(%struct.list_head*) #0 {
  %2 = alloca %union.anon.61, align 8
  %3 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  %4 = bitcast %struct.list_head** %3 to i8*
  %5 = bitcast %union.anon.61* %2 to [1 x i8]*
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0
  %7 = bitcast i8* %4 to i64*
  %8 = load volatile i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %union.anon.61* %2 to %struct.list_head**
  %11 = load %struct.list_head*, %struct.list_head** %10, align 8
  %12 = icmp eq %struct.list_head* %11, %0
  %13 = zext i1 %12 to i32
  ret i32 %13
}

; Function Attrs: noinline nounwind uwtable
define internal void @list_del_init(%struct.list_head*) #0 {
  call void @__list_del_entry(%struct.list_head* %0)
  call void @INIT_LIST_HEAD(%struct.list_head* %0)
  ret void
}

declare %struct.urb* @usb_get_urb(%struct.urb*) #1

declare void @usb_kill_urb(%struct.urb*) #1

declare void @usb_free_urb(%struct.urb*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @device_lock(%struct.device*) #0 {
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5
  call void @mutex_lock(%struct.mutex* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @connected(%struct.usb_dev_state*) #0 {
  %2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 0
  %3 = call i32 @list_empty(%struct.list_head* %2)
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %11, label %5

; <label>:5:                                      ; preds = %1
  %6 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %7 = load %struct.usb_device*, %struct.usb_device** %6, align 8
  %8 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %7, i32 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, 0
  br label %11

; <label>:11:                                     ; preds = %5, %1
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  %13 = zext i1 %12 to i32
  ret i32 %13
}

declare i8* @__memcpy(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal void @device_unlock(%struct.device*) #0 {
  %2 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 5
  call void @mutex_unlock(%struct.mutex* %2)
  ret void
}

declare void @mutex_lock(%struct.mutex*) #1

; Function Attrs: nounwind readnone
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1) #3

; Function Attrs: noinline nounwind uwtable
define internal void @kasan_check_read(i8*, i32) #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @might_fault() #0 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @check_object_size(i8*, i64, i1 zeroext) #0 {
  %4 = zext i1 %2 to i8
  ret void
}

declare i64 @_copy_to_user(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @copy_user_overflow(i32, i64) #0 {
  %3 = icmp ne i32 1, 0
  %4 = xor i1 %3, true
  %5 = xor i1 %4, true
  %6 = zext i1 %5 to i32
  %7 = sext i32 %6 to i64
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %9, label %10

; <label>:9:                                      ; preds = %2
  call void (i8*, i32, i8*, ...) @warn_slowpath_fmt(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i32 0, i32 0), i32 688, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.6, i32 0, i32 0), i32 %0, i64 %1)
  br label %10

; <label>:10:                                     ; preds = %9, %2
  %11 = icmp ne i32 1, 0
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = zext i1 %13 to i32
  %15 = sext i32 %14 to i64
  ret void
}

declare void @warn_slowpath_fmt(i8*, i32, i8*, ...) #1

declare void @mutex_unlock(%struct.mutex*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @poll_wait(%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*) #0 {
  %4 = icmp ne %struct.poll_table_struct* %2, null
  br i1 %4, label %5, label %13

; <label>:5:                                      ; preds = %3
  %6 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %2, i32 0, i32 0
  %7 = load void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)** %6, align 8
  %8 = icmp ne void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)* %7, null
  %9 = icmp ne %struct.__wait_queue_head* %1, null
  %or.cond = and i1 %8, %9
  br i1 %or.cond, label %10, label %13

; <label>:10:                                     ; preds = %5
  %11 = getelementptr inbounds %struct.poll_table_struct, %struct.poll_table_struct* %2, i32 0, i32 0
  %12 = load void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)*, void (%struct.file*, %struct.__wait_queue_head*, %struct.poll_table_struct*)** %11, align 8
  call void %12(%struct.file* %0, %struct.__wait_queue_head* %1, %struct.poll_table_struct* %2)
  br label %13

; <label>:13:                                     ; preds = %10, %5, %3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @usbdev_do_ioctl(%struct.file*, i32, i8*) #0 {
  %4 = alloca %struct.timespec, align 8
  %5 = alloca %struct.timespec, align 8
  %6 = alloca %struct.timespec, align 8
  %7 = alloca %struct.timespec, align 8
  %8 = alloca %struct.timespec, align 8
  %9 = alloca %struct.timespec, align 8
  %10 = alloca %struct.timespec, align 8
  %11 = alloca %struct.timespec, align 8
  %12 = alloca %struct.timespec, align 8
  %13 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 15
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast i8* %14 to %struct.usb_dev_state*
  %16 = call %struct.inode* @file_inode(%struct.file* %0)
  %17 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %15, i32 0, i32 1
  %18 = load %struct.usb_device*, %struct.usb_device** %17, align 8
  %19 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 7
  %20 = load i32, i32* %19, align 4
  %21 = and i32 %20, 2
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %329

; <label>:23:                                     ; preds = %3
  %24 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void @device_lock(%struct.device* %24)
  switch i32 %1, label %53 [
    i32 1074287884, label %25
    i32 1074287885, label %32
    i32 1074025740, label %39
    i32 1074025741, label %46
  ]

; <label>:25:                                     ; preds = %23
  %26 = load i8, i8* @usbfs_snoop, align 1
  %27 = trunc i8 %26 to i1
  br i1 %27, label %28, label %30

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %29, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %30

; <label>:30:                                     ; preds = %25, %28
  %31 = call i32 @proc_reapurb(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:32:                                     ; preds = %23
  %33 = load i8, i8* @usbfs_snoop, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %35, label %37

; <label>:35:                                     ; preds = %32
  %36 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %36, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %37

; <label>:37:                                     ; preds = %32, %35
  %38 = call i32 @proc_reapurbnonblock(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:39:                                     ; preds = %23
  %40 = load i8, i8* @usbfs_snoop, align 1
  %41 = trunc i8 %40 to i1
  br i1 %41, label %42, label %44

; <label>:42:                                     ; preds = %39
  %43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %43, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %44

; <label>:44:                                     ; preds = %39, %42
  %45 = call i32 @proc_reapurb_compat(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:46:                                     ; preds = %23
  %47 = load i8, i8* @usbfs_snoop, align 1
  %48 = trunc i8 %47 to i1
  br i1 %48, label %49, label %51

; <label>:49:                                     ; preds = %46
  %50 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %50, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %51

; <label>:51:                                     ; preds = %46, %49
  %52 = call i32 @proc_reapurbnonblock_compat(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:53:                                     ; preds = %23
  %54 = call i32 @connected(%struct.usb_dev_state* %15)
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %58, label %56

; <label>:56:                                     ; preds = %53
  %57 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void @device_unlock(%struct.device* %57)
  br label %329

; <label>:58:                                     ; preds = %53
  switch i32 %1, label %314 [
    i32 -1072147200, label %59
    i32 -1072147198, label %77
    i32 -2147199741, label %95
    i32 21780, label %113
    i32 -2147199723, label %120
    i32 1090802952, label %138
    i32 1074287889, label %145
    i32 -2146937596, label %152
    i32 -2147199739, label %159
    i32 -2143791862, label %166
    i32 -1072671488, label %184
    i32 -1072671486, label %203
    i32 -2146937586, label %222
    i32 -2144578294, label %229
    i32 -1072933614, label %247
    i32 21771, label %255
    i32 -2146413298, label %262
    i32 -2147199729, label %269
    i32 -2147199728, label %276
    i32 -1072671470, label %283
    i32 -2147199720, label %290
    i32 -2147199719, label %297
    i32 -2147199718, label %304
    i32 -2130160357, label %306
    i32 -2146937572, label %308
    i32 -2146937571, label %310
    i32 1074025758, label %312
  ]

; <label>:59:                                     ; preds = %58
  %60 = load i8, i8* @usbfs_snoop, align 1
  %61 = trunc i8 %60 to i1
  br i1 %61, label %62, label %64

; <label>:62:                                     ; preds = %59
  %63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %63, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %64

; <label>:64:                                     ; preds = %59, %62
  %65 = call i32 @proc_control(%struct.usb_dev_state* %15, i8* %2)
  %66 = icmp sge i32 %65, 0
  br i1 %66, label %67, label %314

; <label>:67:                                     ; preds = %64
  %68 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %69 = call { i64, i64 } @current_time(%struct.inode* %16)
  %70 = bitcast %struct.timespec* %4 to { i64, i64 }*
  %71 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %70, i32 0, i32 0
  %72 = extractvalue { i64, i64 } %69, 0
  store i64 %72, i64* %71, align 8
  %73 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %70, i32 0, i32 1
  %74 = extractvalue { i64, i64 } %69, 1
  store i64 %74, i64* %73, align 8
  %75 = bitcast %struct.timespec* %68 to i8*
  %76 = bitcast %struct.timespec* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 16, i32 8, i1 false)
  br label %314

; <label>:77:                                     ; preds = %58
  %78 = load i8, i8* @usbfs_snoop, align 1
  %79 = trunc i8 %78 to i1
  br i1 %79, label %80, label %82

; <label>:80:                                     ; preds = %77
  %81 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %81, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %82

; <label>:82:                                     ; preds = %77, %80
  %83 = call i32 @proc_bulk(%struct.usb_dev_state* %15, i8* %2)
  %84 = icmp sge i32 %83, 0
  br i1 %84, label %85, label %314

; <label>:85:                                     ; preds = %82
  %86 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %87 = call { i64, i64 } @current_time(%struct.inode* %16)
  %88 = bitcast %struct.timespec* %5 to { i64, i64 }*
  %89 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %88, i32 0, i32 0
  %90 = extractvalue { i64, i64 } %87, 0
  store i64 %90, i64* %89, align 8
  %91 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %88, i32 0, i32 1
  %92 = extractvalue { i64, i64 } %87, 1
  store i64 %92, i64* %91, align 8
  %93 = bitcast %struct.timespec* %86 to i8*
  %94 = bitcast %struct.timespec* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %93, i8* %94, i64 16, i32 8, i1 false)
  br label %314

; <label>:95:                                     ; preds = %58
  %96 = load i8, i8* @usbfs_snoop, align 1
  %97 = trunc i8 %96 to i1
  br i1 %97, label %98, label %100

; <label>:98:                                     ; preds = %95
  %99 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %99, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %100

; <label>:100:                                    ; preds = %95, %98
  %101 = call i32 @proc_resetep(%struct.usb_dev_state* %15, i8* %2)
  %102 = icmp sge i32 %101, 0
  br i1 %102, label %103, label %314

; <label>:103:                                    ; preds = %100
  %104 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %105 = call { i64, i64 } @current_time(%struct.inode* %16)
  %106 = bitcast %struct.timespec* %6 to { i64, i64 }*
  %107 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %106, i32 0, i32 0
  %108 = extractvalue { i64, i64 } %105, 0
  store i64 %108, i64* %107, align 8
  %109 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %106, i32 0, i32 1
  %110 = extractvalue { i64, i64 } %105, 1
  store i64 %110, i64* %109, align 8
  %111 = bitcast %struct.timespec* %104 to i8*
  %112 = bitcast %struct.timespec* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %111, i8* %112, i64 16, i32 8, i1 false)
  br label %314

; <label>:113:                                    ; preds = %58
  %114 = load i8, i8* @usbfs_snoop, align 1
  %115 = trunc i8 %114 to i1
  br i1 %115, label %116, label %118

; <label>:116:                                    ; preds = %113
  %117 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %117, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %118

; <label>:118:                                    ; preds = %113, %116
  %119 = call i32 @proc_resetdevice(%struct.usb_dev_state* %15)
  br label %314

; <label>:120:                                    ; preds = %58
  %121 = load i8, i8* @usbfs_snoop, align 1
  %122 = trunc i8 %121 to i1
  br i1 %122, label %123, label %125

; <label>:123:                                    ; preds = %120
  %124 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %124, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %125

; <label>:125:                                    ; preds = %120, %123
  %126 = call i32 @proc_clearhalt(%struct.usb_dev_state* %15, i8* %2)
  %127 = icmp sge i32 %126, 0
  br i1 %127, label %128, label %314

; <label>:128:                                    ; preds = %125
  %129 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %130 = call { i64, i64 } @current_time(%struct.inode* %16)
  %131 = bitcast %struct.timespec* %7 to { i64, i64 }*
  %132 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %131, i32 0, i32 0
  %133 = extractvalue { i64, i64 } %130, 0
  store i64 %133, i64* %132, align 8
  %134 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %131, i32 0, i32 1
  %135 = extractvalue { i64, i64 } %130, 1
  store i64 %135, i64* %134, align 8
  %136 = bitcast %struct.timespec* %129 to i8*
  %137 = bitcast %struct.timespec* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %136, i8* %137, i64 16, i32 8, i1 false)
  br label %314

; <label>:138:                                    ; preds = %58
  %139 = load i8, i8* @usbfs_snoop, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %141, label %143

; <label>:141:                                    ; preds = %138
  %142 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %142, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %143

; <label>:143:                                    ; preds = %138, %141
  %144 = call i32 @proc_getdriver(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:145:                                    ; preds = %58
  %146 = load i8, i8* @usbfs_snoop, align 1
  %147 = trunc i8 %146 to i1
  br i1 %147, label %148, label %150

; <label>:148:                                    ; preds = %145
  %149 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %149, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %150

; <label>:150:                                    ; preds = %145, %148
  %151 = call i32 @proc_connectinfo(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:152:                                    ; preds = %58
  %153 = load i8, i8* @usbfs_snoop, align 1
  %154 = trunc i8 %153 to i1
  br i1 %154, label %155, label %157

; <label>:155:                                    ; preds = %152
  %156 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %156, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %157

; <label>:157:                                    ; preds = %152, %155
  %158 = call i32 @proc_setintf(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:159:                                    ; preds = %58
  %160 = load i8, i8* @usbfs_snoop, align 1
  %161 = trunc i8 %160 to i1
  br i1 %161, label %162, label %164

; <label>:162:                                    ; preds = %159
  %163 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %163, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %164

; <label>:164:                                    ; preds = %159, %162
  %165 = call i32 @proc_setconfig(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:166:                                    ; preds = %58
  %167 = load i8, i8* @usbfs_snoop, align 1
  %168 = trunc i8 %167 to i1
  br i1 %168, label %169, label %171

; <label>:169:                                    ; preds = %166
  %170 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %170, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %171

; <label>:171:                                    ; preds = %166, %169
  %172 = call i32 @proc_submiturb(%struct.usb_dev_state* %15, i8* %2)
  %173 = icmp sge i32 %172, 0
  br i1 %173, label %174, label %314

; <label>:174:                                    ; preds = %171
  %175 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %176 = call { i64, i64 } @current_time(%struct.inode* %16)
  %177 = bitcast %struct.timespec* %8 to { i64, i64 }*
  %178 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %177, i32 0, i32 0
  %179 = extractvalue { i64, i64 } %176, 0
  store i64 %179, i64* %178, align 8
  %180 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %177, i32 0, i32 1
  %181 = extractvalue { i64, i64 } %176, 1
  store i64 %181, i64* %180, align 8
  %182 = bitcast %struct.timespec* %175 to i8*
  %183 = bitcast %struct.timespec* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %182, i8* %183, i64 16, i32 8, i1 false)
  br label %314

; <label>:184:                                    ; preds = %58
  %185 = load i8, i8* @usbfs_snoop, align 1
  %186 = trunc i8 %185 to i1
  br i1 %186, label %187, label %189

; <label>:187:                                    ; preds = %184
  %188 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %188, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %189

; <label>:189:                                    ; preds = %184, %187
  %190 = bitcast i8* %2 to %struct.usbdevfs_ctrltransfer32*
  %191 = call i32 @proc_control_compat(%struct.usb_dev_state* %15, %struct.usbdevfs_ctrltransfer32* %190)
  %192 = icmp sge i32 %191, 0
  br i1 %192, label %193, label %314

; <label>:193:                                    ; preds = %189
  %194 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %195 = call { i64, i64 } @current_time(%struct.inode* %16)
  %196 = bitcast %struct.timespec* %9 to { i64, i64 }*
  %197 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %196, i32 0, i32 0
  %198 = extractvalue { i64, i64 } %195, 0
  store i64 %198, i64* %197, align 8
  %199 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %196, i32 0, i32 1
  %200 = extractvalue { i64, i64 } %195, 1
  store i64 %200, i64* %199, align 8
  %201 = bitcast %struct.timespec* %194 to i8*
  %202 = bitcast %struct.timespec* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %201, i8* %202, i64 16, i32 8, i1 false)
  br label %314

; <label>:203:                                    ; preds = %58
  %204 = load i8, i8* @usbfs_snoop, align 1
  %205 = trunc i8 %204 to i1
  br i1 %205, label %206, label %208

; <label>:206:                                    ; preds = %203
  %207 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %207, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %208

; <label>:208:                                    ; preds = %203, %206
  %209 = bitcast i8* %2 to %struct.usbdevfs_bulktransfer32*
  %210 = call i32 @proc_bulk_compat(%struct.usb_dev_state* %15, %struct.usbdevfs_bulktransfer32* %209)
  %211 = icmp sge i32 %210, 0
  br i1 %211, label %212, label %314

; <label>:212:                                    ; preds = %208
  %213 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %214 = call { i64, i64 } @current_time(%struct.inode* %16)
  %215 = bitcast %struct.timespec* %10 to { i64, i64 }*
  %216 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %215, i32 0, i32 0
  %217 = extractvalue { i64, i64 } %214, 0
  store i64 %217, i64* %216, align 8
  %218 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %215, i32 0, i32 1
  %219 = extractvalue { i64, i64 } %214, 1
  store i64 %219, i64* %218, align 8
  %220 = bitcast %struct.timespec* %213 to i8*
  %221 = bitcast %struct.timespec* %10 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %220, i8* %221, i64 16, i32 8, i1 false)
  br label %314

; <label>:222:                                    ; preds = %58
  %223 = load i8, i8* @usbfs_snoop, align 1
  %224 = trunc i8 %223 to i1
  br i1 %224, label %225, label %227

; <label>:225:                                    ; preds = %222
  %226 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %226, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %227

; <label>:227:                                    ; preds = %222, %225
  %228 = call i32 @proc_disconnectsignal_compat(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:229:                                    ; preds = %58
  %230 = load i8, i8* @usbfs_snoop, align 1
  %231 = trunc i8 %230 to i1
  br i1 %231, label %232, label %234

; <label>:232:                                    ; preds = %229
  %233 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %233, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %234

; <label>:234:                                    ; preds = %229, %232
  %235 = call i32 @proc_submiturb_compat(%struct.usb_dev_state* %15, i8* %2)
  %236 = icmp sge i32 %235, 0
  br i1 %236, label %237, label %314

; <label>:237:                                    ; preds = %234
  %238 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 16
  %239 = call { i64, i64 } @current_time(%struct.inode* %16)
  %240 = bitcast %struct.timespec* %11 to { i64, i64 }*
  %241 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %240, i32 0, i32 0
  %242 = extractvalue { i64, i64 } %239, 0
  store i64 %242, i64* %241, align 8
  %243 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %240, i32 0, i32 1
  %244 = extractvalue { i64, i64 } %239, 1
  store i64 %244, i64* %243, align 8
  %245 = bitcast %struct.timespec* %238 to i8*
  %246 = bitcast %struct.timespec* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %245, i8* %246, i64 16, i32 8, i1 false)
  br label %314

; <label>:247:                                    ; preds = %58
  %248 = load i8, i8* @usbfs_snoop, align 1
  %249 = trunc i8 %248 to i1
  br i1 %249, label %250, label %252

; <label>:250:                                    ; preds = %247
  %251 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %251, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %252

; <label>:252:                                    ; preds = %247, %250
  %253 = call i32 @ptr_to_compat(i8* %2)
  %254 = call i32 @proc_ioctl_compat(%struct.usb_dev_state* %15, i32 %253)
  br label %314

; <label>:255:                                    ; preds = %58
  %256 = load i8, i8* @usbfs_snoop, align 1
  %257 = trunc i8 %256 to i1
  br i1 %257, label %258, label %260

; <label>:258:                                    ; preds = %255
  %259 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %259, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0), i8* %2)
  br label %260

; <label>:260:                                    ; preds = %255, %258
  %261 = call i32 @proc_unlinkurb(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:262:                                    ; preds = %58
  %263 = load i8, i8* @usbfs_snoop, align 1
  %264 = trunc i8 %263 to i1
  br i1 %264, label %265, label %267

; <label>:265:                                    ; preds = %262
  %266 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %266, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %267

; <label>:267:                                    ; preds = %262, %265
  %268 = call i32 @proc_disconnectsignal(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:269:                                    ; preds = %58
  %270 = load i8, i8* @usbfs_snoop, align 1
  %271 = trunc i8 %270 to i1
  br i1 %271, label %272, label %274

; <label>:272:                                    ; preds = %269
  %273 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %273, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %274

; <label>:274:                                    ; preds = %269, %272
  %275 = call i32 @proc_claiminterface(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:276:                                    ; preds = %58
  %277 = load i8, i8* @usbfs_snoop, align 1
  %278 = trunc i8 %277 to i1
  br i1 %278, label %279, label %281

; <label>:279:                                    ; preds = %276
  %280 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %280, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %281

; <label>:281:                                    ; preds = %276, %279
  %282 = call i32 @proc_releaseinterface(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:283:                                    ; preds = %58
  %284 = load i8, i8* @usbfs_snoop, align 1
  %285 = trunc i8 %284 to i1
  br i1 %285, label %286, label %288

; <label>:286:                                    ; preds = %283
  %287 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %287, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %288

; <label>:288:                                    ; preds = %283, %286
  %289 = call i32 @proc_ioctl_default(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:290:                                    ; preds = %58
  %291 = load i8, i8* @usbfs_snoop, align 1
  %292 = trunc i8 %291 to i1
  br i1 %292, label %293, label %295

; <label>:293:                                    ; preds = %290
  %294 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %294, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %295

; <label>:295:                                    ; preds = %290, %293
  %296 = call i32 @proc_claim_port(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:297:                                    ; preds = %58
  %298 = load i8, i8* @usbfs_snoop, align 1
  %299 = trunc i8 %298 to i1
  br i1 %299, label %300, label %302

; <label>:300:                                    ; preds = %297
  %301 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %301, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.usbdev_do_ioctl, i32 0, i32 0))
  br label %302

; <label>:302:                                    ; preds = %297, %300
  %303 = call i32 @proc_release_port(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:304:                                    ; preds = %58
  %305 = call i32 @proc_get_capabilities(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:306:                                    ; preds = %58
  %307 = call i32 @proc_disconnect_claim(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:308:                                    ; preds = %58
  %309 = call i32 @proc_alloc_streams(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:310:                                    ; preds = %58
  %311 = call i32 @proc_free_streams(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:312:                                    ; preds = %58
  %313 = call i32 @proc_drop_privileges(%struct.usb_dev_state* %15, i8* %2)
  br label %314

; <label>:314:                                    ; preds = %58, %118, %143, %150, %157, %164, %227, %252, %260, %267, %274, %281, %288, %295, %302, %304, %306, %308, %310, %312, %67, %64, %85, %82, %103, %100, %128, %125, %174, %171, %193, %189, %212, %208, %237, %234, %51, %44, %37, %30
  %.1 = phi i32 [ %52, %51 ], [ %45, %44 ], [ %38, %37 ], [ %31, %30 ], [ -25, %58 ], [ %313, %312 ], [ %311, %310 ], [ %309, %308 ], [ %307, %306 ], [ %305, %304 ], [ %303, %302 ], [ %296, %295 ], [ %289, %288 ], [ %282, %281 ], [ %275, %274 ], [ %268, %267 ], [ %261, %260 ], [ %254, %252 ], [ %228, %227 ], [ %165, %164 ], [ %158, %157 ], [ %151, %150 ], [ %144, %143 ], [ %119, %118 ], [ %65, %67 ], [ %65, %64 ], [ %83, %85 ], [ %83, %82 ], [ %101, %103 ], [ %101, %100 ], [ %126, %128 ], [ %126, %125 ], [ %172, %174 ], [ %172, %171 ], [ %191, %193 ], [ %191, %189 ], [ %210, %212 ], [ %210, %208 ], [ %235, %237 ], [ %235, %234 ]
  %315 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 11
  call void @device_unlock(%struct.device* %315)
  %316 = icmp sge i32 %.1, 0
  br i1 %316, label %317, label %327

; <label>:317:                                    ; preds = %314
  %318 = getelementptr inbounds %struct.inode, %struct.inode* %16, i32 0, i32 15
  %319 = call { i64, i64 } @current_time(%struct.inode* %16)
  %320 = bitcast %struct.timespec* %12 to { i64, i64 }*
  %321 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %320, i32 0, i32 0
  %322 = extractvalue { i64, i64 } %319, 0
  store i64 %322, i64* %321, align 8
  %323 = getelementptr inbounds { i64, i64 }, { i64, i64 }* %320, i32 0, i32 1
  %324 = extractvalue { i64, i64 } %319, 1
  store i64 %324, i64* %323, align 8
  %325 = bitcast %struct.timespec* %318 to i8*
  %326 = bitcast %struct.timespec* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %325, i8* %326, i64 16, i32 8, i1 false)
  br label %327

; <label>:327:                                    ; preds = %317, %314
  %328 = sext i32 %.1 to i64
  br label %329

; <label>:329:                                    ; preds = %3, %327, %56
  %.0 = phi i64 [ %328, %327 ], [ -19, %56 ], [ -1, %3 ]
  ret i64 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.inode* @file_inode(%struct.file*) #0 {
  %2 = getelementptr inbounds %struct.file, %struct.file* %0, i32 0, i32 2
  %3 = load %struct.inode*, %struct.inode** %2, align 8
  ret %struct.inode* %3
}

declare void @_dev_info(%struct.device*, i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_reapurb(%struct.usb_dev_state*, i8*) #0 {
  %3 = call %struct.async* @reap_as(%struct.usb_dev_state* %0)
  %4 = icmp ne %struct.async* %3, null
  br i1 %4, label %5, label %17

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* @usbfs_snoop, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %10 = load %struct.usb_device*, %struct.usb_device** %9, align 8
  %11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 7
  %13 = load i8*, i8** %12, align 8
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* %13)
  br label %14

; <label>:14:                                     ; preds = %5, %8
  %15 = bitcast i8* %1 to i8**
  %16 = call i32 @processcompl(%struct.async* %3, i8** %15)
  call void @free_async(%struct.async* %3)
  br label %21

; <label>:17:                                     ; preds = %2
  %18 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %19 = call i32 @signal_pending(%struct.task_struct* %18)
  %20 = icmp ne i32 %19, 0
  %. = select i1 %20, i32 -4, i32 -19
  br label %21

; <label>:21:                                     ; preds = %17, %14
  %.0 = phi i32 [ %16, %14 ], [ %., %17 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_reapurbnonblock(%struct.usb_dev_state*, i8*) #0 {
  %3 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %0)
  %4 = icmp ne %struct.async* %3, null
  br i1 %4, label %5, label %17

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* @usbfs_snoop, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %10 = load %struct.usb_device*, %struct.usb_device** %9, align 8
  %11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 7
  %13 = load i8*, i8** %12, align 8
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* %13)
  br label %14

; <label>:14:                                     ; preds = %5, %8
  %15 = bitcast i8* %1 to i8**
  %16 = call i32 @processcompl(%struct.async* %3, i8** %15)
  call void @free_async(%struct.async* %3)
  br label %21

; <label>:17:                                     ; preds = %2
  %18 = call i32 @connected(%struct.usb_dev_state* %0)
  %19 = icmp ne i32 %18, 0
  %20 = select i1 %19, i32 -11, i32 -19
  br label %21

; <label>:21:                                     ; preds = %17, %14
  %.0 = phi i32 [ %16, %14 ], [ %20, %17 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_reapurb_compat(%struct.usb_dev_state*, i8*) #0 {
  %3 = call %struct.async* @reap_as(%struct.usb_dev_state* %0)
  %4 = icmp ne %struct.async* %3, null
  br i1 %4, label %5, label %17

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* @usbfs_snoop, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %10 = load %struct.usb_device*, %struct.usb_device** %9, align 8
  %11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 7
  %13 = load i8*, i8** %12, align 8
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* %13)
  br label %14

; <label>:14:                                     ; preds = %5, %8
  %15 = bitcast i8* %1 to i8**
  %16 = call i32 @processcompl_compat(%struct.async* %3, i8** %15)
  call void @free_async(%struct.async* %3)
  br label %21

; <label>:17:                                     ; preds = %2
  %18 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %19 = call i32 @signal_pending(%struct.task_struct* %18)
  %20 = icmp ne i32 %19, 0
  %. = select i1 %20, i32 -4, i32 -19
  br label %21

; <label>:21:                                     ; preds = %17, %14
  %.0 = phi i32 [ %16, %14 ], [ %., %17 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_reapurbnonblock_compat(%struct.usb_dev_state*, i8*) #0 {
  %3 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %0)
  %4 = icmp ne %struct.async* %3, null
  br i1 %4, label %5, label %17

; <label>:5:                                      ; preds = %2
  %6 = load i8, i8* @usbfs_snoop, align 1
  %7 = trunc i8 %6 to i1
  br i1 %7, label %8, label %14

; <label>:8:                                      ; preds = %5
  %9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %10 = load %struct.usb_device*, %struct.usb_device** %9, align 8
  %11 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %10, i32 0, i32 11
  %12 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 7
  %13 = load i8*, i8** %12, align 8
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.33, i32 0, i32 0), i8* %13)
  br label %14

; <label>:14:                                     ; preds = %5, %8
  %15 = bitcast i8* %1 to i8**
  %16 = call i32 @processcompl_compat(%struct.async* %3, i8** %15)
  call void @free_async(%struct.async* %3)
  br label %21

; <label>:17:                                     ; preds = %2
  %18 = call i32 @connected(%struct.usb_dev_state* %0)
  %19 = icmp ne i32 %18, 0
  %20 = select i1 %19, i32 -11, i32 -19
  br label %21

; <label>:21:                                     ; preds = %17, %14
  %.0 = phi i32 [ %16, %14 ], [ %20, %17 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_control(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_ctrltransfer, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = bitcast %struct.usbdevfs_ctrltransfer* %3 to i8*
  %17 = call i64 @llvm.objectsize.i64.p0i8(i8* %16, i1 false) #4
  %18 = trunc i64 %17 to i32
  call void @might_fault() #4
  %19 = trunc i64 24 to i32
  call void @kasan_check_write(i8* %16, i32 %19) #4
  %20 = icmp slt i32 %18, 0
  %21 = sext i32 %18 to i64
  %22 = icmp uge i64 %21, 24
  %23 = select i1 %20, i1 true, i1 %22
  %24 = xor i1 %23, true
  %25 = zext i1 %23 to i32
  %26 = sext i32 %25 to i64
  br i1 %23, label %27, label %30

; <label>:27:                                     ; preds = %2
  call void @check_object_size(i8* %16, i64 24, i1 zeroext false) #4
  %28 = trunc i64 24 to i32
  %29 = call i64 @_copy_from_user(i8* %16, i8* %1, i32 %28) #4
  br label %31

; <label>:30:                                     ; preds = %2
  call void @copy_user_overflow(i32 %18, i64 24) #4
  br label %31

; <label>:31:                                     ; preds = %30, %27
  %.04 = phi i64 [ %29, %27 ], [ 24, %30 ]
  %32 = icmp ne i64 %.04, 0
  br i1 %32, label %265, label %33

; <label>:33:                                     ; preds = %31
  %34 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %35 = load i8, i8* %34, align 8
  %36 = zext i8 %35 to i32
  %37 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 3
  %41 = load i16, i16* %40, align 4
  %42 = zext i16 %41 to i32
  %43 = call i32 @check_ctrlrecip(%struct.usb_dev_state* %0, i32 %36, i32 %39, i32 %42)
  %44 = icmp ne i32 %43, 0
  br i1 %44, label %265, label %45

; <label>:45:                                     ; preds = %33
  %46 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %47 = load i16, i16* %46, align 2
  %48 = zext i16 %47 to i32
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %49, 4096
  br i1 %50, label %265, label %51

; <label>:51:                                     ; preds = %45
  %52 = call i32 @usbfs_increase_memory_usage(i64 4296)
  %53 = icmp ne i32 %52, 0
  br i1 %53, label %265, label %54

; <label>:54:                                     ; preds = %51
  %55 = call i64 @__get_free_pages(i32 20971712, i32 0)
  %56 = inttoptr i64 %55 to i8*
  %57 = icmp ne i8* %56, null
  br i1 %57, label %58, label %263

; <label>:58:                                     ; preds = %54
  %59 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 5
  %60 = load i32, i32* %59, align 8
  %61 = load i8, i8* @usbfs_snoop, align 1
  %62 = trunc i8 %61 to i1
  br i1 %62, label %63, label %80

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  %65 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %66 = load i8, i8* %65, align 8
  %67 = zext i8 %66 to i32
  %68 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i32
  %71 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 2
  %72 = load i16, i16* %71, align 2
  %73 = zext i16 %72 to i32
  %74 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 3
  %75 = load i16, i16* %74, align 4
  %76 = zext i16 %75 to i32
  %77 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %78 = load i16, i16* %77, align 2
  %79 = zext i16 %78 to i32
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %64, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.34, i32 0, i32 0), i32 %67, i32 %70, i32 %73, i32 %76, i32 %79)
  br label %80

; <label>:80:                                     ; preds = %58, %63
  %81 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %82 = load i8, i8* %81, align 8
  %83 = zext i8 %82 to i32
  %84 = and i32 %83, 128
  %85 = icmp ne i32 %84, 0
  %86 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %87 = load i16, i16* %86, align 2
  br i1 %85, label %88, label %182

; <label>:88:                                     ; preds = %80
  %89 = zext i16 %87 to i32
  %90 = icmp ne i32 %89, 0
  br i1 %90, label %91, label %112

; <label>:91:                                     ; preds = %88
  %92 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 6
  %93 = load i8*, i8** %92, align 8
  %94 = ptrtoint i8* %93 to i64
  %95 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %96 = load i16, i16* %95, align 2
  %97 = zext i16 %96 to i64
  %98 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %99 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %98, i32 0, i32 151
  %100 = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %99, i32 0, i32 19
  %101 = getelementptr inbounds %struct.mm_segment_t, %struct.mm_segment_t* %100, i32 0, i32 0
  %102 = load i64, i64* %101, align 8
  %103 = call zeroext i1 @__chk_range_not_ok(i64 %94, i64 %97, i64 %102)
  %104 = zext i1 %103 to i8
  %105 = trunc i8 %104 to i1
  %106 = xor i1 %105, true
  %107 = xor i1 %106, true
  %108 = xor i1 %107, true
  %109 = zext i1 %108 to i32
  %110 = sext i32 %109 to i64
  %111 = icmp ne i64 %110, 0
  br i1 %111, label %112, label %263

; <label>:112:                                    ; preds = %91, %88
  %113 = call i32 @__create_pipe(%struct.usb_device* %15, i32 0)
  %114 = or i32 -2147483648, %113
  %115 = or i32 %114, 128
  %116 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %117 = load i16, i16* %116, align 2
  %118 = zext i16 %117 to i32
  call void @snoop_urb(%struct.usb_device* %15, i8* null, i32 %115, i32 %118, i32 %60, i32 0, i8* null, i32 0)
  %119 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  call void @device_unlock(%struct.device* %119)
  %120 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 1
  %121 = load i8, i8* %120, align 1
  %122 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %123 = load i8, i8* %122, align 8
  %124 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 2
  %125 = load i16, i16* %124, align 2
  %126 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 3
  %127 = load i16, i16* %126, align 4
  %128 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %129 = load i16, i16* %128, align 2
  %130 = call i32 @usb_control_msg(%struct.usb_device* %15, i32 %115, i8 zeroext %121, i8 zeroext %123, i16 zeroext %125, i16 zeroext %127, i8* %56, i16 zeroext %129, i32 %60)
  %131 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  call void @device_lock(%struct.device* %131)
  store i32 %130, i32* %4, align 4
  store i32 0, i32* %5, align 4
  %132 = icmp eq i32* %4, %5
  %133 = zext i1 %132 to i32
  %134 = load i32, i32* %4, align 4
  %135 = load i32, i32* %5, align 4
  %136 = icmp sgt i32 %134, %135
  %137 = load i32, i32* %4, align 4
  %138 = load i32, i32* %5, align 4
  %139 = select i1 %136, i32 %137, i32 %138
  store i32 %130, i32* %6, align 4
  store i32 0, i32* %7, align 4
  %140 = icmp eq i32* %6, %7
  %141 = zext i1 %140 to i32
  %142 = load i32, i32* %6, align 4
  %143 = load i32, i32* %7, align 4
  %144 = icmp slt i32 %142, %143
  %145 = load i32, i32* %6, align 4
  %146 = load i32, i32* %7, align 4
  %147 = select i1 %144, i32 %145, i32 %146
  store i32 %130, i32* %8, align 4
  store i32 0, i32* %9, align 4
  %148 = icmp eq i32* %8, %9
  %149 = zext i1 %148 to i32
  %150 = load i32, i32* %8, align 4
  %151 = load i32, i32* %9, align 4
  %152 = icmp sgt i32 %150, %151
  %153 = load i32, i32* %8, align 4
  %154 = load i32, i32* %9, align 4
  %155 = select i1 %152, i32 %153, i32 %154
  call void @snoop_urb(%struct.usb_device* %15, i8* null, i32 %115, i32 %139, i32 %147, i32 1, i8* %56, i32 %155)
  %156 = icmp sgt i32 %130, 0
  br i1 %156, label %157, label %246

; <label>:157:                                    ; preds = %112
  %158 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %159 = load i16, i16* %158, align 2
  %160 = zext i16 %159 to i32
  %161 = icmp ne i32 %160, 0
  br i1 %161, label %162, label %246

; <label>:162:                                    ; preds = %157
  %163 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 6
  %164 = load i8*, i8** %163, align 8
  %165 = sext i32 %130 to i64
  %166 = call i64 @llvm.objectsize.i64.p0i8(i8* %56, i1 false) #4
  %167 = trunc i64 %166 to i32
  %168 = trunc i64 %165 to i32
  call void @kasan_check_read(i8* %56, i32 %168) #4
  call void @might_fault() #4
  %169 = icmp slt i32 %167, 0
  %170 = sext i32 %167 to i64
  %171 = icmp uge i64 %170, %165
  %172 = select i1 %169, i1 true, i1 %171
  %173 = xor i1 %172, true
  %174 = zext i1 %172 to i32
  %175 = sext i32 %174 to i64
  br i1 %172, label %176, label %179

; <label>:176:                                    ; preds = %162
  call void @check_object_size(i8* %56, i64 %165, i1 zeroext true) #4
  %177 = trunc i64 %165 to i32
  %178 = call i64 @_copy_to_user(i8* %164, i8* %56, i32 %177) #4
  br label %180

; <label>:179:                                    ; preds = %162
  call void @copy_user_overflow(i32 %167, i64 %165) #4
  br label %180

; <label>:180:                                    ; preds = %179, %176
  %.05 = phi i64 [ %178, %176 ], [ %165, %179 ]
  %181 = icmp ne i64 %.05, 0
  br i1 %181, label %263, label %246

; <label>:182:                                    ; preds = %80
  %183 = icmp ne i16 %87, 0
  br i1 %183, label %184, label %206

; <label>:184:                                    ; preds = %182
  %185 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 6
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %188 = load i16, i16* %187, align 2
  %189 = zext i16 %188 to i64
  %190 = call i64 @llvm.objectsize.i64.p0i8(i8* %56, i1 false) #4
  %191 = trunc i64 %190 to i32
  call void @might_fault() #4
  %192 = trunc i64 %189 to i32
  call void @kasan_check_write(i8* %56, i32 %192) #4
  %193 = icmp slt i32 %191, 0
  %194 = sext i32 %191 to i64
  %195 = icmp uge i64 %194, %189
  %196 = select i1 %193, i1 true, i1 %195
  %197 = xor i1 %196, true
  %198 = zext i1 %196 to i32
  %199 = sext i32 %198 to i64
  br i1 %196, label %200, label %203

; <label>:200:                                    ; preds = %184
  call void @check_object_size(i8* %56, i64 %189, i1 zeroext false) #4
  %201 = trunc i64 %189 to i32
  %202 = call i64 @_copy_from_user(i8* %56, i8* %186, i32 %201) #4
  br label %204

; <label>:203:                                    ; preds = %184
  call void @copy_user_overflow(i32 %191, i64 %189) #4
  br label %204

; <label>:204:                                    ; preds = %203, %200
  %.03 = phi i64 [ %202, %200 ], [ %189, %203 ]
  %205 = icmp ne i64 %.03, 0
  br i1 %205, label %263, label %206

; <label>:206:                                    ; preds = %204, %182
  %207 = call i32 @__create_pipe(%struct.usb_device* %15, i32 0)
  %208 = or i32 -2147483648, %207
  %209 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %210 = load i16, i16* %209, align 2
  %211 = zext i16 %210 to i32
  %212 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %213 = load i16, i16* %212, align 2
  %214 = zext i16 %213 to i32
  call void @snoop_urb(%struct.usb_device* %15, i8* null, i32 %208, i32 %211, i32 %60, i32 0, i8* %56, i32 %214)
  %215 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  call void @device_unlock(%struct.device* %215)
  %216 = call i32 @__create_pipe(%struct.usb_device* %15, i32 0)
  %217 = or i32 -2147483648, %216
  %218 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 1
  %219 = load i8, i8* %218, align 1
  %220 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %221 = load i8, i8* %220, align 8
  %222 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 2
  %223 = load i16, i16* %222, align 2
  %224 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 3
  %225 = load i16, i16* %224, align 4
  %226 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %227 = load i16, i16* %226, align 2
  %228 = call i32 @usb_control_msg(%struct.usb_device* %15, i32 %217, i8 zeroext %219, i8 zeroext %221, i16 zeroext %223, i16 zeroext %225, i8* %56, i16 zeroext %227, i32 %60)
  %229 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  call void @device_lock(%struct.device* %229)
  store i32 %228, i32* %10, align 4
  store i32 0, i32* %11, align 4
  %230 = icmp eq i32* %10, %11
  %231 = zext i1 %230 to i32
  %232 = load i32, i32* %10, align 4
  %233 = load i32, i32* %11, align 4
  %234 = icmp sgt i32 %232, %233
  %235 = load i32, i32* %10, align 4
  %236 = load i32, i32* %11, align 4
  %237 = select i1 %234, i32 %235, i32 %236
  store i32 %228, i32* %12, align 4
  store i32 0, i32* %13, align 4
  %238 = icmp eq i32* %12, %13
  %239 = zext i1 %238 to i32
  %240 = load i32, i32* %12, align 4
  %241 = load i32, i32* %13, align 4
  %242 = icmp slt i32 %240, %241
  %243 = load i32, i32* %12, align 4
  %244 = load i32, i32* %13, align 4
  %245 = select i1 %242, i32 %243, i32 %244
  call void @snoop_urb(%struct.usb_device* %15, i8* null, i32 %208, i32 %237, i32 %245, i32 1, i8* null, i32 0)
  br label %246

; <label>:246:                                    ; preds = %112, %157, %180, %206
  %.01 = phi i32 [ %228, %206 ], [ %130, %180 ], [ %130, %157 ], [ %130, %112 ]
  %247 = icmp slt i32 %.01, 0
  %248 = icmp ne i32 %.01, -32
  %or.cond = and i1 %247, %248
  br i1 %or.cond, label %249, label %263

; <label>:249:                                    ; preds = %246
  %250 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 11
  %251 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %252 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %251, i32 0, i32 77
  %253 = getelementptr inbounds [16 x i8], [16 x i8]* %252, i32 0, i32 0
  %254 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 0
  %255 = load i8, i8* %254, align 8
  %256 = zext i8 %255 to i32
  %257 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 1
  %258 = load i8, i8* %257, align 1
  %259 = zext i8 %258 to i32
  %260 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %3, i32 0, i32 4
  %261 = load i16, i16* %260, align 2
  %262 = zext i16 %261 to i32
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), %struct.device* %250, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.36, i32 0, i32 0), i8* %253, i32 %256, i32 %259, i32 %262, i32 %.01)
  br label %263

; <label>:263:                                    ; preds = %246, %249, %204, %180, %91, %54
  %.0 = phi i32 [ -12, %54 ], [ -22, %91 ], [ -14, %180 ], [ -14, %204 ], [ %.01, %249 ], [ %.01, %246 ]
  %264 = ptrtoint i8* %56 to i64
  call void @free_pages(i64 %264, i32 0)
  call void @usbfs_decrease_memory_usage(i64 4296)
  br label %265

; <label>:265:                                    ; preds = %51, %45, %33, %31, %263
  %.02 = phi i32 [ %.0, %263 ], [ -14, %31 ], [ %43, %33 ], [ -22, %45 ], [ %52, %51 ]
  ret i32 %.02
}

declare { i64, i64 } @current_time(%struct.inode*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_bulk(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_bulktransfer, align 8
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %6 = load %struct.usb_device*, %struct.usb_device** %5, align 8
  %7 = bitcast %struct.usbdevfs_bulktransfer* %3 to i8*
  %8 = call i64 @llvm.objectsize.i64.p0i8(i8* %7, i1 false) #4
  %9 = trunc i64 %8 to i32
  call void @might_fault() #4
  %10 = trunc i64 24 to i32
  call void @kasan_check_write(i8* %7, i32 %10) #4
  %11 = icmp slt i32 %9, 0
  %12 = sext i32 %9 to i64
  %13 = icmp uge i64 %12, 24
  %14 = select i1 %11, i1 true, i1 %13
  %15 = xor i1 %14, true
  %16 = zext i1 %14 to i32
  %17 = sext i32 %16 to i64
  br i1 %14, label %18, label %21

; <label>:18:                                     ; preds = %2
  call void @check_object_size(i8* %7, i64 24, i1 zeroext false) #4
  %19 = trunc i64 24 to i32
  %20 = call i64 @_copy_from_user(i8* %7, i8* %1, i32 %19) #4
  br label %22

; <label>:21:                                     ; preds = %2
  call void @copy_user_overflow(i32 %9, i64 24) #4
  br label %22

; <label>:22:                                     ; preds = %21, %18
  %.05 = phi i64 [ %20, %18 ], [ 24, %21 ]
  %23 = icmp ne i64 %.05, 0
  br i1 %23, label %158, label %24

; <label>:24:                                     ; preds = %22
  %25 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %26 = load %struct.usb_device*, %struct.usb_device** %25, align 8
  %27 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = call i32 @findintfep(%struct.usb_device* %26, i32 %28)
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %158, label %31

; <label>:31:                                     ; preds = %24
  %32 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %29)
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %158, label %34

; <label>:34:                                     ; preds = %31
  %35 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 0
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 128
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, 127
  %42 = call i32 @__create_pipe(%struct.usb_device* %6, i32 %41)
  %43 = or i32 -1073741824, %42
  %44 = or i32 %43, 128
  %.03 = select i1 %38, i32 %44, i32 %43
  %45 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 0
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 128
  %48 = icmp ne i32 %47, 0
  %49 = xor i1 %48, true
  %50 = zext i1 %49 to i32
  %51 = call zeroext i16 @usb_maxpacket(%struct.usb_device* %6, i32 %.03, i32 %50)
  %52 = icmp ne i16 %51, 0
  br i1 %52, label %53, label %158

; <label>:53:                                     ; preds = %34
  %54 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 1
  %55 = load i32, i32* %54, align 4
  %56 = zext i32 %55 to i64
  %57 = icmp uge i64 %56, 2147483455
  br i1 %57, label %158, label %58

; <label>:58:                                     ; preds = %53
  %59 = zext i32 %55 to i64
  %60 = add i64 %59, 192
  %61 = call i32 @usbfs_increase_memory_usage(i64 %60)
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %158, label %63

; <label>:63:                                     ; preds = %58
  %64 = zext i32 %55 to i64
  %65 = call noalias i8* @__kmalloc(i64 %64, i32 20971712) #4
  %66 = icmp ne i8* %65, null
  br i1 %66, label %67, label %155

; <label>:67:                                     ; preds = %63
  %68 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 2
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = and i32 %71, 128
  %73 = icmp ne i32 %72, 0
  %74 = icmp ne i32 %55, 0
  br i1 %73, label %75, label %125

; <label>:75:                                     ; preds = %67
  br i1 %74, label %76, label %95

; <label>:76:                                     ; preds = %75
  %77 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 3
  %78 = load i8*, i8** %77, align 8
  %79 = ptrtoint i8* %78 to i64
  %80 = zext i32 %55 to i64
  %81 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %82 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %81, i32 0, i32 151
  %83 = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %82, i32 0, i32 19
  %84 = getelementptr inbounds %struct.mm_segment_t, %struct.mm_segment_t* %83, i32 0, i32 0
  %85 = load i64, i64* %84, align 8
  %86 = call zeroext i1 @__chk_range_not_ok(i64 %79, i64 %80, i64 %85)
  %87 = zext i1 %86 to i8
  %88 = trunc i8 %87 to i1
  %89 = xor i1 %88, true
  %90 = xor i1 %89, true
  %91 = xor i1 %90, true
  %92 = zext i1 %91 to i32
  %93 = sext i32 %92 to i64
  %94 = icmp ne i64 %93, 0
  br i1 %94, label %95, label %155

; <label>:95:                                     ; preds = %76, %75
  call void @snoop_urb(%struct.usb_device* %6, i8* null, i32 %.03, i32 %55, i32 %69, i32 0, i8* null, i32 0)
  %96 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11
  call void @device_unlock(%struct.device* %96)
  %97 = call i32 @usb_bulk_msg(%struct.usb_device* %6, i32 %.03, i8* %65, i32 %55, i32* %4, i32 %69)
  %98 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11
  call void @device_lock(%struct.device* %98)
  %99 = load i32, i32* %4, align 4
  %100 = load i32, i32* %4, align 4
  call void @snoop_urb(%struct.usb_device* %6, i8* null, i32 %.03, i32 %99, i32 %97, i32 1, i8* %65, i32 %100)
  %101 = icmp eq i32 %97, 0
  %102 = load i32, i32* %4, align 4
  %103 = icmp ne i32 %102, 0
  %or.cond = and i1 %101, %103
  br i1 %or.cond, label %104, label %151

; <label>:104:                                    ; preds = %95
  %105 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 3
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %4, align 4
  %108 = sext i32 %107 to i64
  %109 = call i64 @llvm.objectsize.i64.p0i8(i8* %65, i1 false) #4
  %110 = trunc i64 %109 to i32
  %111 = trunc i64 %108 to i32
  call void @kasan_check_read(i8* %65, i32 %111) #4
  call void @might_fault() #4
  %112 = icmp slt i32 %110, 0
  %113 = sext i32 %110 to i64
  %114 = icmp uge i64 %113, %108
  %115 = select i1 %112, i1 true, i1 %114
  %116 = xor i1 %115, true
  %117 = zext i1 %115 to i32
  %118 = sext i32 %117 to i64
  br i1 %115, label %119, label %122

; <label>:119:                                    ; preds = %104
  call void @check_object_size(i8* %65, i64 %108, i1 zeroext true) #4
  %120 = trunc i64 %108 to i32
  %121 = call i64 @_copy_to_user(i8* %106, i8* %65, i32 %120) #4
  br label %123

; <label>:122:                                    ; preds = %104
  call void @copy_user_overflow(i32 %110, i64 %108) #4
  br label %123

; <label>:123:                                    ; preds = %122, %119
  %.06 = phi i64 [ %121, %119 ], [ %108, %122 ]
  %124 = icmp ne i64 %.06, 0
  br i1 %124, label %155, label %151

; <label>:125:                                    ; preds = %67
  br i1 %74, label %126, label %146

; <label>:126:                                    ; preds = %125
  %127 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %3, i32 0, i32 3
  %128 = load i8*, i8** %127, align 8
  %129 = zext i32 %55 to i64
  %130 = call i64 @llvm.objectsize.i64.p0i8(i8* %65, i1 false) #4
  %131 = trunc i64 %130 to i32
  call void @might_fault() #4
  %132 = trunc i64 %129 to i32
  call void @kasan_check_write(i8* %65, i32 %132) #4
  %133 = icmp slt i32 %131, 0
  %134 = sext i32 %131 to i64
  %135 = icmp uge i64 %134, %129
  %136 = select i1 %133, i1 true, i1 %135
  %137 = xor i1 %136, true
  %138 = zext i1 %136 to i32
  %139 = sext i32 %138 to i64
  br i1 %136, label %140, label %143

; <label>:140:                                    ; preds = %126
  call void @check_object_size(i8* %65, i64 %129, i1 zeroext false) #4
  %141 = trunc i64 %129 to i32
  %142 = call i64 @_copy_from_user(i8* %65, i8* %128, i32 %141) #4
  br label %144

; <label>:143:                                    ; preds = %126
  call void @copy_user_overflow(i32 %131, i64 %129) #4
  br label %144

; <label>:144:                                    ; preds = %143, %140
  %.02 = phi i64 [ %142, %140 ], [ %129, %143 ]
  %145 = icmp ne i64 %.02, 0
  br i1 %145, label %155, label %146

; <label>:146:                                    ; preds = %144, %125
  call void @snoop_urb(%struct.usb_device* %6, i8* null, i32 %.03, i32 %55, i32 %69, i32 0, i8* %65, i32 %55)
  %147 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11
  call void @device_unlock(%struct.device* %147)
  %148 = call i32 @usb_bulk_msg(%struct.usb_device* %6, i32 %.03, i8* %65, i32 %55, i32* %4, i32 %69)
  %149 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 11
  call void @device_lock(%struct.device* %149)
  %150 = load i32, i32* %4, align 4
  call void @snoop_urb(%struct.usb_device* %6, i8* null, i32 %.03, i32 %150, i32 %148, i32 1, i8* null, i32 0)
  br label %151

; <label>:151:                                    ; preds = %95, %123, %146
  %.01 = phi i32 [ %148, %146 ], [ %97, %123 ], [ %97, %95 ]
  %152 = icmp slt i32 %.01, 0
  %153 = load i32, i32* %4, align 4
  %154 = select i1 %152, i32 %.01, i32 %153
  br label %155

; <label>:155:                                    ; preds = %151, %144, %123, %76, %63
  %.0 = phi i32 [ -12, %63 ], [ -22, %76 ], [ -14, %123 ], [ -14, %144 ], [ %154, %151 ]
  call void @kfree(i8* %65)
  %156 = zext i32 %55 to i64
  %157 = add i64 %156, 192
  call void @usbfs_decrease_memory_usage(i64 %157)
  br label %158

; <label>:158:                                    ; preds = %58, %53, %34, %31, %24, %22, %155
  %.04 = phi i32 [ %.0, %155 ], [ -14, %22 ], [ %29, %24 ], [ %32, %31 ], [ -22, %34 ], [ -22, %53 ], [ %61, %58 ]
  ret i32 %.04
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_resetep(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !5
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %26, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = call i32 @findintfep(%struct.usb_device* %15, i32 %10)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %26, label %18

; <label>:18:                                     ; preds = %13
  %19 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %16)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %26, label %21

; <label>:21:                                     ; preds = %18
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  call void @check_reset_of_active_ep(%struct.usb_device* %23, i32 %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i32 0, i32 0))
  %24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %25 = load %struct.usb_device*, %struct.usb_device** %24, align 8
  call void @usb_reset_endpoint(%struct.usb_device* %25, i32 %10)
  br label %26

; <label>:26:                                     ; preds = %18, %13, %2, %21
  %.0 = phi i32 [ 0, %21 ], [ -14, %2 ], [ %16, %13 ], [ %19, %18 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_resetdevice(%struct.usb_dev_state*) #0 {
  %2 = alloca i8, align 1
  %3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %4 = load %struct.usb_device*, %struct.usb_device** %3, align 8
  %5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 15
  %6 = load %struct.usb_host_config*, %struct.usb_host_config** %5, align 8
  %7 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 15
  %8 = load i8, i8* %7, align 8
  %9 = trunc i8 %8 to i1
  %10 = icmp ne %struct.usb_host_config* %6, null
  %or.cond = and i1 %9, %10
  br i1 %or.cond, label %11, label %49

; <label>:11:                                     ; preds = %1, %47
  %.0 = phi i32 [ %48, %47 ], [ 0, %1 ]
  %12 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %6, i32 0, i32 0
  %13 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %12, i32 0, i32 3
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i32
  %16 = icmp slt i32 %.0, %15
  br i1 %16, label %17, label %49

; <label>:17:                                     ; preds = %11
  %18 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %6, i32 0, i32 3
  %19 = sext i32 %.0 to i64
  %20 = getelementptr inbounds [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %18, i64 0, i64 %19
  %21 = load %struct.usb_interface*, %struct.usb_interface** %20, align 8
  %22 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %21, i32 0, i32 1
  %23 = load %struct.usb_host_interface*, %struct.usb_host_interface** %22, align 8
  %24 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %23, i32 0, i32 0
  %25 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %24, i32 0, i32 2
  %26 = load i8, i8* %25, align 2
  %27 = zext i8 %26 to i32
  %28 = call i32 @usb_interface_claimed(%struct.usb_interface* %21)
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %30, label %47

; <label>:30:                                     ; preds = %17
  %31 = sext i32 %27 to i64
  %32 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 12
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %2, i64* %32, i64 %31) #4, !srcloc !4
  %33 = load i8, i8* %2, align 1
  %34 = trunc i8 %33 to i1
  br i1 %34, label %47, label %35

; <label>:35:                                     ; preds = %30
  %36 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %37 = load %struct.usb_device*, %struct.usb_device** %36, align 8
  %38 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %37, i32 0, i32 11
  %39 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %21, i32 0, i32 7
  %40 = getelementptr inbounds %struct.device, %struct.device* %39, i32 0, i32 7
  %41 = load %struct.device_driver*, %struct.device_driver** %40, align 8
  %42 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %41, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  %44 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %45 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %44, i32 0, i32 77
  %46 = getelementptr inbounds [16 x i8], [16 x i8]* %45, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @dev_warn(%struct.device* %38, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.53, i32 0, i32 0), i32 %27, i8* %43, i8* %46)
  br label %53

; <label>:47:                                     ; preds = %17, %30
  %48 = add nsw i32 %.0, 1
  br label %11

; <label>:49:                                     ; preds = %11, %1
  %50 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %51 = load %struct.usb_device*, %struct.usb_device** %50, align 8
  %52 = call i32 @usb_reset_device(%struct.usb_device* %51)
  br label %53

; <label>:53:                                     ; preds = %49, %35
  %.01 = phi i32 [ -13, %35 ], [ %52, %49 ]
  ret i32 %.01
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_clearhalt(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !6
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %35, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = call i32 @findintfep(%struct.usb_device* %15, i32 %10)
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %35, label %18

; <label>:18:                                     ; preds = %13
  %19 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %16)
  %20 = icmp ne i32 %19, 0
  br i1 %20, label %35, label %21

; <label>:21:                                     ; preds = %18
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  call void @check_reset_of_active_ep(%struct.usb_device* %23, i32 %10, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.54, i32 0, i32 0))
  %24 = and i32 %10, 128
  %25 = icmp ne i32 %24, 0
  %26 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %27 = load %struct.usb_device*, %struct.usb_device** %26, align 8
  %28 = and i32 %10, 127
  %29 = call i32 @__create_pipe(%struct.usb_device* %27, i32 %28)
  %30 = or i32 -1073741824, %29
  %31 = or i32 %30, 128
  %.01 = select i1 %25, i32 %31, i32 %30
  %32 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %33 = load %struct.usb_device*, %struct.usb_device** %32, align 8
  %34 = call i32 @usb_clear_halt(%struct.usb_device* %33, i32 %.01)
  br label %35

; <label>:35:                                     ; preds = %18, %13, %2, %21
  %.0 = phi i32 [ %34, %21 ], [ -14, %2 ], [ %16, %13 ], [ %19, %18 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_getdriver(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_getdriver, align 4
  %4 = bitcast %struct.usbdevfs_getdriver* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 260 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 260
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 260, i1 zeroext false) #4
  %16 = trunc i64 260 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 260) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.03 = phi i64 [ %17, %15 ], [ 260, %18 ]
  %20 = icmp ne i64 %.03, 0
  br i1 %20, label %60, label %21

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  %24 = getelementptr inbounds %struct.usbdevfs_getdriver, %struct.usbdevfs_getdriver* %3, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %23, i32 %25)
  %27 = icmp ne %struct.usb_interface* %26, null
  br i1 %27, label %28, label %60

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %30 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 7
  %31 = load %struct.device_driver*, %struct.device_driver** %30, align 8
  %32 = icmp ne %struct.device_driver* %31, null
  br i1 %32, label %33, label %60

; <label>:33:                                     ; preds = %28
  %34 = getelementptr inbounds %struct.usbdevfs_getdriver, %struct.usbdevfs_getdriver* %3, i32 0, i32 1
  %35 = getelementptr inbounds [256 x i8], [256 x i8]* %34, i32 0, i32 0
  %36 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %37 = getelementptr inbounds %struct.device, %struct.device* %36, i32 0, i32 7
  %38 = load %struct.device_driver*, %struct.device_driver** %37, align 8
  %39 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %38, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = call i64 @strlcpy(i8* %35, i8* %40, i64 256)
  %42 = bitcast %struct.usbdevfs_getdriver* %3 to i8*
  %43 = call i64 @llvm.objectsize.i64.p0i8(i8* %42, i1 false) #4
  %44 = trunc i64 %43 to i32
  %45 = trunc i64 260 to i32
  call void @kasan_check_read(i8* %42, i32 %45) #4
  call void @might_fault() #4
  %46 = icmp slt i32 %44, 0
  %47 = sext i32 %44 to i64
  %48 = icmp uge i64 %47, 260
  %49 = select i1 %46, i1 true, i1 %48
  %50 = xor i1 %49, true
  %51 = zext i1 %49 to i32
  %52 = sext i32 %51 to i64
  br i1 %49, label %53, label %56

; <label>:53:                                     ; preds = %33
  call void @check_object_size(i8* %42, i64 260, i1 zeroext true) #4
  %54 = trunc i64 260 to i32
  %55 = call i64 @_copy_to_user(i8* %1, i8* %42, i32 %54) #4
  br label %57

; <label>:56:                                     ; preds = %33
  call void @copy_user_overflow(i32 %44, i64 260) #4
  br label %57

; <label>:57:                                     ; preds = %56, %53
  %.02 = phi i64 [ %55, %53 ], [ 260, %56 ]
  %58 = icmp ne i64 %.02, 0
  %59 = select i1 %58, i32 -14, i32 0
  br label %60

; <label>:60:                                     ; preds = %57, %28, %21, %19
  %.01 = phi i32 [ -14, %19 ], [ %59, %57 ], [ -61, %28 ], [ -61, %21 ]
  ret i32 %.01
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_connectinfo(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_connectinfo, align 4
  %4 = bitcast %struct.usbdevfs_connectinfo* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* %4, i8 0, i64 8, i32 4, i1 false)
  %5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %6 = load %struct.usb_device*, %struct.usb_device** %5, align 8
  %7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %struct.usbdevfs_connectinfo, %struct.usbdevfs_connectinfo* %3, i32 0, i32 0
  store i32 %8, i32* %9, align 4
  %10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %11 = load %struct.usb_device*, %struct.usb_device** %10, align 8
  %12 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %11, i32 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 1
  %15 = zext i1 %14 to i32
  %16 = trunc i32 %15 to i8
  %17 = getelementptr inbounds %struct.usbdevfs_connectinfo, %struct.usbdevfs_connectinfo* %3, i32 0, i32 1
  store i8 %16, i8* %17, align 4
  %18 = bitcast %struct.usbdevfs_connectinfo* %3 to i8*
  %19 = call i64 @llvm.objectsize.i64.p0i8(i8* %18, i1 false) #4
  %20 = trunc i64 %19 to i32
  %21 = trunc i64 8 to i32
  call void @kasan_check_read(i8* %18, i32 %21) #4
  call void @might_fault() #4
  %22 = icmp slt i32 %20, 0
  %23 = sext i32 %20 to i64
  %24 = icmp uge i64 %23, 8
  %25 = select i1 %22, i1 true, i1 %24
  %26 = xor i1 %25, true
  %27 = zext i1 %25 to i32
  %28 = sext i32 %27 to i64
  br i1 %25, label %29, label %32

; <label>:29:                                     ; preds = %2
  call void @check_object_size(i8* %18, i64 8, i1 zeroext true) #4
  %30 = trunc i64 8 to i32
  %31 = call i64 @_copy_to_user(i8* %1, i8* %18, i32 %30) #4
  br label %33

; <label>:32:                                     ; preds = %2
  call void @copy_user_overflow(i32 %20, i64 8) #4
  br label %33

; <label>:33:                                     ; preds = %32, %29
  %.01 = phi i64 [ %31, %29 ], [ 8, %32 ]
  %34 = icmp ne i64 %.01, 0
  %. = select i1 %34, i32 -14, i32 0
  ret i32 %.
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_setintf(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_setinterface, align 4
  %4 = bitcast %struct.usbdevfs_setinterface* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 8 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 8
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 8, i1 zeroext false) #4
  %16 = trunc i64 8 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 8) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 8, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %36, label %21

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %3, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %23)
  %25 = icmp ne i32 %24, 0
  br i1 %25, label %36, label %26

; <label>:26:                                     ; preds = %21
  %27 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %3, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  call void @destroy_async_on_interface(%struct.usb_dev_state* %0, i32 %28)
  %29 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %30 = load %struct.usb_device*, %struct.usb_device** %29, align 8
  %31 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %3, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.usbdevfs_setinterface, %struct.usbdevfs_setinterface* %3, i32 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = call i32 @usb_set_interface(%struct.usb_device* %30, i32 %32, i32 %34)
  br label %36

; <label>:36:                                     ; preds = %21, %19, %26
  %.0 = phi i32 [ %35, %26 ], [ -14, %19 ], [ %24, %21 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_setconfig(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !7
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %77, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 15
  %17 = load %struct.usb_host_config*, %struct.usb_host_config** %16, align 8
  %18 = icmp ne %struct.usb_host_config* %17, null
  br i1 %18, label %19, label %.loopexit

; <label>:19:                                     ; preds = %13, %58
  %.0 = phi i32 [ %59, %58 ], [ 0, %13 ]
  %20 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 0
  %21 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %20, i32 0, i32 3
  %22 = load i8, i8* %21, align 4
  %23 = zext i8 %22 to i32
  %24 = icmp slt i32 %.0, %23
  br i1 %24, label %25, label %.loopexit

; <label>:25:                                     ; preds = %19
  %26 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 3
  %27 = sext i32 %.0 to i64
  %28 = getelementptr inbounds [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %26, i64 0, i64 %27
  %29 = load %struct.usb_interface*, %struct.usb_interface** %28, align 8
  %30 = call i32 @usb_interface_claimed(%struct.usb_interface* %29)
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %32, label %58

; <label>:32:                                     ; preds = %25
  %33 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %34 = load %struct.usb_device*, %struct.usb_device** %33, align 8
  %35 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %34, i32 0, i32 11
  %36 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 3
  %37 = sext i32 %.0 to i64
  %38 = getelementptr inbounds [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %36, i64 0, i64 %37
  %39 = load %struct.usb_interface*, %struct.usb_interface** %38, align 8
  %40 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %39, i32 0, i32 1
  %41 = load %struct.usb_host_interface*, %struct.usb_host_interface** %40, align 8
  %42 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %41, i32 0, i32 0
  %43 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %42, i32 0, i32 2
  %44 = load i8, i8* %43, align 2
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 3
  %47 = sext i32 %.0 to i64
  %48 = getelementptr inbounds [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %46, i64 0, i64 %47
  %49 = load %struct.usb_interface*, %struct.usb_interface** %48, align 8
  %50 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %49, i32 0, i32 7
  %51 = getelementptr inbounds %struct.device, %struct.device* %50, i32 0, i32 7
  %52 = load %struct.device_driver*, %struct.device_driver** %51, align 8
  %53 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %56 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %55, i32 0, i32 77
  %57 = getelementptr inbounds [16 x i8], [16 x i8]* %56, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @dev_warn(%struct.device* %35, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.55, i32 0, i32 0), i32 %45, i8* %54, i8* %57, i32 %10)
  br label %.loopexit

; <label>:58:                                     ; preds = %25
  %59 = add nsw i32 %.0, 1
  br label %19

.loopexit:                                        ; preds = %32, %19, %13
  %.1 = phi i32 [ 0, %13 ], [ -16, %32 ], [ 0, %19 ]
  %60 = icmp eq i32 %.1, 0
  br i1 %60, label %61, label %77

; <label>:61:                                     ; preds = %.loopexit
  %62 = icmp ne %struct.usb_host_config* %17, null
  br i1 %62, label %63, label %73

; <label>:63:                                     ; preds = %61
  %64 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %17, i32 0, i32 0
  %65 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %64, i32 0, i32 4
  %66 = load i8, i8* %65, align 1
  %67 = zext i8 %66 to i32
  %68 = icmp eq i32 %67, %10
  br i1 %68, label %69, label %73

; <label>:69:                                     ; preds = %63
  %70 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %71 = load %struct.usb_device*, %struct.usb_device** %70, align 8
  %72 = call i32 @usb_reset_configuration(%struct.usb_device* %71)
  br label %77

; <label>:73:                                     ; preds = %63, %61
  %74 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %75 = load %struct.usb_device*, %struct.usb_device** %74, align 8
  %76 = call i32 @usb_set_configuration(%struct.usb_device* %75, i32 %10)
  br label %77

; <label>:77:                                     ; preds = %.loopexit, %73, %69, %2
  %.01 = phi i32 [ -14, %2 ], [ %.1, %.loopexit ], [ %72, %69 ], [ %76, %73 ]
  ret i32 %.01
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_submiturb(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_urb, align 8
  %4 = bitcast %struct.usbdevfs_urb* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 56 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 56
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 56, i1 zeroext false) #4
  %16 = trunc i64 56 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 56) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 56, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %26, label %21

; <label>:21:                                     ; preds = %19
  %22 = bitcast i8* %1 to %struct.usbdevfs_urb*
  %23 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %22, i32 0, i32 12
  %24 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %23, i32 0, i32 0
  %25 = call i32 @proc_do_submiturb(%struct.usb_dev_state* %0, %struct.usbdevfs_urb* %3, %struct.usbdevfs_iso_packet_desc* %24, i8* %1)
  br label %26

; <label>:26:                                     ; preds = %19, %21
  %.0 = phi i32 [ %25, %21 ], [ -14, %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_control_compat(%struct.usb_dev_state*, %struct.usbdevfs_ctrltransfer32*) #0 {
  %3 = call i8* @compat_alloc_user_space(i64 24)
  %4 = bitcast i8* %3 to %struct.usbdevfs_ctrltransfer*
  %5 = bitcast %struct.usbdevfs_ctrltransfer* %4 to i8*
  %6 = bitcast %struct.usbdevfs_ctrltransfer32* %1 to i8*
  %7 = call i64 @copy_in_user(i8* %5, i8* %6, i32 12)
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %31, label %9

; <label>:9:                                      ; preds = %2
  call void @might_fault()
  %10 = getelementptr inbounds %struct.usbdevfs_ctrltransfer32, %struct.usbdevfs_ctrltransfer32* %1, i32 0, i32 6
  %11 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %10, i64 4, i8* undef) #4, !srcloc !8
  %12 = extractvalue { i32*, i64, i8* } %11, 0
  %13 = extractvalue { i32*, i64, i8* } %11, 1
  %14 = extractvalue { i32*, i64, i8* } %11, 2
  %15 = ptrtoint i32* %12 to i64
  %16 = trunc i64 %15 to i32
  %17 = trunc i64 %13 to i32
  %18 = sext i32 %16 to i64
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %31, label %20

; <label>:20:                                     ; preds = %9
  call void @might_fault()
  %21 = call i8* @compat_ptr(i32 %17)
  %22 = getelementptr inbounds %struct.usbdevfs_ctrltransfer, %struct.usbdevfs_ctrltransfer* %4, i32 0, i32 6
  %23 = call i8* asm sideeffect "call __put_user_8", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %21, i8** %22) #4, !srcloc !9
  %24 = ptrtoint i8* %23 to i64
  %25 = trunc i64 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %31, label %28

; <label>:28:                                     ; preds = %20
  %29 = bitcast %struct.usbdevfs_ctrltransfer* %4 to i8*
  %30 = call i32 @proc_control(%struct.usb_dev_state* %0, i8* %29)
  br label %31

; <label>:31:                                     ; preds = %2, %9, %20, %28
  %.0 = phi i32 [ %30, %28 ], [ -14, %20 ], [ -14, %9 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_bulk_compat(%struct.usb_dev_state*, %struct.usbdevfs_bulktransfer32*) #0 {
  %3 = call i8* @compat_alloc_user_space(i64 24)
  %4 = bitcast i8* %3 to %struct.usbdevfs_bulktransfer*
  call void @might_fault()
  %5 = getelementptr inbounds %struct.usbdevfs_bulktransfer32, %struct.usbdevfs_bulktransfer32* %1, i32 0, i32 0
  %6 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %5, i64 4, i8* undef) #4, !srcloc !10
  %7 = extractvalue { i32*, i64, i8* } %6, 0
  %8 = extractvalue { i32*, i64, i8* } %6, 1
  %9 = extractvalue { i32*, i64, i8* } %6, 2
  %10 = ptrtoint i32* %7 to i64
  %11 = trunc i64 %10 to i32
  %12 = trunc i64 %8 to i32
  %13 = sext i32 %11 to i64
  %14 = icmp ne i64 %13, 0
  br i1 %14, label %74, label %15

; <label>:15:                                     ; preds = %2
  call void @might_fault()
  %16 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %4, i32 0, i32 0
  %17 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %12, i32* %16) #4, !srcloc !11
  %18 = sext i32 %17 to i64
  %19 = icmp ne i64 %18, 0
  br i1 %19, label %74, label %20

; <label>:20:                                     ; preds = %15
  call void @might_fault()
  %21 = getelementptr inbounds %struct.usbdevfs_bulktransfer32, %struct.usbdevfs_bulktransfer32* %1, i32 0, i32 1
  %22 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %21, i64 4, i8* undef) #4, !srcloc !12
  %23 = extractvalue { i32*, i64, i8* } %22, 0
  %24 = extractvalue { i32*, i64, i8* } %22, 1
  %25 = extractvalue { i32*, i64, i8* } %22, 2
  %26 = ptrtoint i32* %23 to i64
  %27 = trunc i64 %26 to i32
  %28 = trunc i64 %24 to i32
  %29 = sext i32 %27 to i64
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %74, label %31

; <label>:31:                                     ; preds = %20
  call void @might_fault()
  %32 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %4, i32 0, i32 1
  %33 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %28, i32* %32) #4, !srcloc !13
  %34 = sext i32 %33 to i64
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %74, label %36

; <label>:36:                                     ; preds = %31
  call void @might_fault()
  %37 = getelementptr inbounds %struct.usbdevfs_bulktransfer32, %struct.usbdevfs_bulktransfer32* %1, i32 0, i32 2
  %38 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %37, i64 4, i8* undef) #4, !srcloc !14
  %39 = extractvalue { i32*, i64, i8* } %38, 0
  %40 = extractvalue { i32*, i64, i8* } %38, 1
  %41 = extractvalue { i32*, i64, i8* } %38, 2
  %42 = ptrtoint i32* %39 to i64
  %43 = trunc i64 %42 to i32
  %44 = trunc i64 %40 to i32
  %45 = sext i32 %43 to i64
  %46 = icmp ne i64 %45, 0
  br i1 %46, label %74, label %47

; <label>:47:                                     ; preds = %36
  call void @might_fault()
  %48 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %4, i32 0, i32 2
  %49 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %44, i32* %48) #4, !srcloc !15
  %50 = sext i32 %49 to i64
  %51 = icmp ne i64 %50, 0
  br i1 %51, label %74, label %52

; <label>:52:                                     ; preds = %47
  call void @might_fault()
  %53 = getelementptr inbounds %struct.usbdevfs_bulktransfer32, %struct.usbdevfs_bulktransfer32* %1, i32 0, i32 3
  %54 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %53, i64 4, i8* undef) #4, !srcloc !16
  %55 = extractvalue { i32*, i64, i8* } %54, 0
  %56 = extractvalue { i32*, i64, i8* } %54, 1
  %57 = extractvalue { i32*, i64, i8* } %54, 2
  %58 = ptrtoint i32* %55 to i64
  %59 = trunc i64 %58 to i32
  %60 = trunc i64 %56 to i32
  %61 = sext i32 %59 to i64
  %62 = icmp ne i64 %61, 0
  br i1 %62, label %74, label %63

; <label>:63:                                     ; preds = %52
  call void @might_fault()
  %64 = call i8* @compat_ptr(i32 %60)
  %65 = getelementptr inbounds %struct.usbdevfs_bulktransfer, %struct.usbdevfs_bulktransfer* %4, i32 0, i32 3
  %66 = call i8* asm sideeffect "call __put_user_8", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %64, i8** %65) #4, !srcloc !17
  %67 = ptrtoint i8* %66 to i64
  %68 = trunc i64 %67 to i32
  %69 = sext i32 %68 to i64
  %70 = icmp ne i64 %69, 0
  br i1 %70, label %74, label %71

; <label>:71:                                     ; preds = %63
  %72 = bitcast %struct.usbdevfs_bulktransfer* %4 to i8*
  %73 = call i32 @proc_bulk(%struct.usb_dev_state* %0, i8* %72)
  br label %74

; <label>:74:                                     ; preds = %2, %15, %20, %31, %36, %47, %52, %63, %71
  %.0 = phi i32 [ %73, %71 ], [ -14, %63 ], [ -14, %52 ], [ -14, %47 ], [ -14, %36 ], [ -14, %31 ], [ -14, %20 ], [ -14, %15 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_disconnectsignal_compat(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_disconnectsignal32, align 4
  %4 = bitcast %struct.usbdevfs_disconnectsignal32* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 8 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 8
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 8, i1 zeroext false) #4
  %16 = trunc i64 8 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 8) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 8, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %29, label %21

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.usbdevfs_disconnectsignal32, %struct.usbdevfs_disconnectsignal32* %3, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 8
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %struct.usbdevfs_disconnectsignal32, %struct.usbdevfs_disconnectsignal32* %3, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = call i8* @compat_ptr(i32 %26)
  %28 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 11
  store i8* %27, i8** %28, align 8
  br label %29

; <label>:29:                                     ; preds = %19, %21
  %.0 = phi i32 [ 0, %21 ], [ -14, %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_submiturb_compat(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_urb, align 8
  %4 = bitcast i8* %1 to %struct.usbdevfs_urb32*
  %5 = call i32 @get_urb32(%struct.usbdevfs_urb* %3, %struct.usbdevfs_urb32* %4)
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %12, label %7

; <label>:7:                                      ; preds = %2
  %8 = bitcast i8* %1 to %struct.usbdevfs_urb32*
  %9 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %8, i32 0, i32 12
  %10 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %9, i32 0, i32 0
  %11 = call i32 @proc_do_submiturb(%struct.usb_dev_state* %0, %struct.usbdevfs_urb* %3, %struct.usbdevfs_iso_packet_desc* %10, i8* %1)
  br label %12

; <label>:12:                                     ; preds = %2, %7
  %.0 = phi i32 [ %11, %7 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_ioctl_compat(%struct.usb_dev_state*, i32) #0 {
  %3 = alloca %struct.usbdevfs_ioctl, align 8
  %4 = zext i32 %1 to i64
  %5 = trunc i64 %4 to i32
  %6 = call i8* @compat_ptr(i32 %5)
  %7 = bitcast i8* %6 to %struct.usbdevfs_ioctl32*
  %8 = ptrtoint %struct.usbdevfs_ioctl32* %7 to i64
  %9 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %10 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %9, i32 0, i32 151
  %11 = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %10, i32 0, i32 19
  %12 = getelementptr inbounds %struct.mm_segment_t, %struct.mm_segment_t* %11, i32 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = call zeroext i1 @__chk_range_not_ok(i64 %8, i64 12, i64 %13)
  %15 = zext i1 %14 to i8
  %16 = trunc i8 %15 to i1
  %17 = xor i1 %16, true
  %18 = xor i1 %17, true
  %19 = xor i1 %18, true
  %20 = zext i1 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = icmp ne i64 %21, 0
  br i1 %22, label %23, label %56

; <label>:23:                                     ; preds = %2
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %24 = getelementptr inbounds %struct.usbdevfs_ioctl32, %struct.usbdevfs_ioctl32* %7, i32 0, i32 0
  %25 = bitcast i32* %24 to %struct.__large_struct*
  %26 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %25, i32 -14, i32 0) #4, !srcloc !19
  %27 = extractvalue { i32, i64 } %26, 0
  %28 = extractvalue { i32, i64 } %26, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %29 = trunc i64 %28 to i32
  %30 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %3, i32 0, i32 0
  store i32 %29, i32* %30, align 8
  %31 = sext i32 %27 to i64
  %32 = icmp ne i64 %31, 0
  br i1 %32, label %56, label %33

; <label>:33:                                     ; preds = %23
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %34 = getelementptr inbounds %struct.usbdevfs_ioctl32, %struct.usbdevfs_ioctl32* %7, i32 0, i32 1
  %35 = bitcast i32* %34 to %struct.__large_struct*
  %36 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %35, i32 -14, i32 0) #4, !srcloc !21
  %37 = extractvalue { i32, i64 } %36, 0
  %38 = extractvalue { i32, i64 } %36, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %39 = trunc i64 %38 to i32
  %40 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %3, i32 0, i32 1
  store i32 %39, i32* %40, align 4
  %41 = sext i32 %37 to i64
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %56, label %43

; <label>:43:                                     ; preds = %33
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %44 = getelementptr inbounds %struct.usbdevfs_ioctl32, %struct.usbdevfs_ioctl32* %7, i32 0, i32 2
  %45 = bitcast i32* %44 to %struct.__large_struct*
  %46 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %45, i32 -14, i32 0) #4, !srcloc !22
  %47 = extractvalue { i32, i64 } %46, 0
  %48 = extractvalue { i32, i64 } %46, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %49 = trunc i64 %48 to i32
  %50 = sext i32 %47 to i64
  %51 = icmp ne i64 %50, 0
  br i1 %51, label %56, label %52

; <label>:52:                                     ; preds = %43
  %53 = call i8* @compat_ptr(i32 %49)
  %54 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %3, i32 0, i32 2
  store i8* %53, i8** %54, align 8
  %55 = call i32 @proc_ioctl(%struct.usb_dev_state* %0, %struct.usbdevfs_ioctl* %3)
  br label %56

; <label>:56:                                     ; preds = %2, %23, %33, %43, %52
  %.0 = phi i32 [ %55, %52 ], [ -14, %43 ], [ -14, %33 ], [ -14, %23 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @ptr_to_compat(i8*) #0 {
  %2 = ptrtoint i8* %0 to i64
  %3 = trunc i64 %2 to i32
  ret i32 %3
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_unlinkurb(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = icmp eq i64* %3, %4
  %6 = zext i1 %5 to i32
  %7 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %8 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %7, i32 0, i32 0
  %9 = bitcast %union.anon* %8 to %struct.raw_spinlock*
  %10 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %9)
  %11 = call %struct.async* @async_getpending(%struct.usb_dev_state* %0, i8* %1)
  %12 = icmp ne %struct.async* %11, null
  br i1 %12, label %17, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0
  %16 = bitcast %union.anon* %15 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %16, i64 %10) #4
  br label %24

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %struct.async, %struct.async* %11, i32 0, i32 8
  %19 = load %struct.urb*, %struct.urb** %18, align 8
  %20 = call %struct.urb* @usb_get_urb(%struct.urb* %19)
  %21 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %22 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %21, i32 0, i32 0
  %23 = bitcast %union.anon* %22 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %23, i64 %10) #4
  call void @usb_kill_urb(%struct.urb* %19)
  call void @usb_free_urb(%struct.urb* %19)
  br label %24

; <label>:24:                                     ; preds = %17, %13
  %.0 = phi i32 [ 0, %17 ], [ -22, %13 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_disconnectsignal(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_disconnectsignal, align 8
  %4 = bitcast %struct.usbdevfs_disconnectsignal* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 16 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 16
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 16, i1 zeroext false) #4
  %16 = trunc i64 16 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 16) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 16, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %28, label %21

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.usbdevfs_disconnectsignal, %struct.usbdevfs_disconnectsignal* %3, i32 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 8
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %struct.usbdevfs_disconnectsignal, %struct.usbdevfs_disconnectsignal* %3, i32 0, i32 1
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 11
  store i8* %26, i8** %27, align 8
  br label %28

; <label>:28:                                     ; preds = %19, %21
  %.0 = phi i32 [ 0, %21 ], [ -14, %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_claiminterface(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !23
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %15, label %13

; <label>:13:                                     ; preds = %2
  %14 = call i32 @claimintf(%struct.usb_dev_state* %0, i32 %10)
  br label %15

; <label>:15:                                     ; preds = %2, %13
  %.0 = phi i32 [ %14, %13 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_releaseinterface(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !24
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %17, label %13

; <label>:13:                                     ; preds = %2
  %14 = call i32 @releaseintf(%struct.usb_dev_state* %0, i32 %10)
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %17, label %16

; <label>:16:                                     ; preds = %13
  call void @destroy_async_on_interface(%struct.usb_dev_state* %0, i32 %10)
  br label %17

; <label>:17:                                     ; preds = %13, %2, %16
  %.0 = phi i32 [ 0, %16 ], [ -14, %2 ], [ %14, %13 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_ioctl_default(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_ioctl, align 8
  %4 = bitcast %struct.usbdevfs_ioctl* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 16 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 16
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 16, i1 zeroext false) #4
  %16 = trunc i64 16 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 16) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 16, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %23, label %21

; <label>:21:                                     ; preds = %19
  %22 = call i32 @proc_ioctl(%struct.usb_dev_state* %0, %struct.usbdevfs_ioctl* %3)
  br label %23

; <label>:23:                                     ; preds = %19, %21
  %.0 = phi i32 [ %22, %21 ], [ -14, %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_claim_port(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !25
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %30, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = call i32 @usb_hub_claim_port(%struct.usb_device* %15, i32 %10, %struct.usb_dev_state* %0)
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

; <label>:18:                                     ; preds = %13
  %19 = load i8, i8* @usbfs_snoop, align 1
  %20 = trunc i8 %19 to i1
  br i1 %20, label %21, label %30

; <label>:21:                                     ; preds = %18
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  %24 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %23, i32 0, i32 11
  %25 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %26 = call i32 @task_pid_nr(%struct.task_struct* %25)
  %27 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %28 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %27, i32 0, i32 77
  %29 = getelementptr inbounds [16 x i8], [16 x i8]* %28, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %24, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.59, i32 0, i32 0), i32 %10, i32 %26, i8* %29)
  br label %30

; <label>:30:                                     ; preds = %13, %18, %21, %2
  %.0 = phi i32 [ -14, %2 ], [ %16, %21 ], [ %16, %18 ], [ %16, %13 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_release_port(%struct.usb_dev_state*, i8*) #0 {
  call void @might_fault()
  %3 = bitcast i8* %1 to i32*
  %4 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %3, i64 4, i8* undef) #4, !srcloc !26
  %5 = extractvalue { i32*, i64, i8* } %4, 0
  %6 = extractvalue { i32*, i64, i8* } %4, 1
  %7 = extractvalue { i32*, i64, i8* } %4, 2
  %8 = ptrtoint i32* %5 to i64
  %9 = trunc i64 %8 to i32
  %10 = trunc i64 %6 to i32
  %11 = sext i32 %9 to i64
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %17, label %13

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = call i32 @usb_hub_release_port(%struct.usb_device* %15, i32 %10, %struct.usb_dev_state* %0)
  br label %17

; <label>:17:                                     ; preds = %2, %13
  %.0 = phi i32 [ %16, %13 ], [ -14, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_get_capabilities(%struct.usb_dev_state*, i8*) #0 {
  %3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %4 = load %struct.usb_device*, %struct.usb_device** %3, align 8
  %5 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %4, i32 0, i32 9
  %6 = load %struct.usb_bus*, %struct.usb_bus** %5, align 8
  %7 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %6, i32 0, i32 6
  %8 = load i8, i8* %7, align 1
  %9 = lshr i8 %8, 2
  %10 = and i8 %9, 1
  %11 = zext i8 %10 to i32
  %12 = icmp ne i32 %11, 0
  %13 = or i32 117, 2
  %. = select i1 %12, i32 117, i32 %13
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %15 = load %struct.usb_device*, %struct.usb_device** %14, align 8
  %16 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %15, i32 0, i32 9
  %17 = load %struct.usb_bus*, %struct.usb_bus** %16, align 8
  %18 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %17, i32 0, i32 7
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %19, 0
  %21 = or i32 %., 8
  %.1 = select i1 %20, i32 %21, i32 %.
  call void @might_fault()
  %22 = bitcast i8* %1 to i32*
  %23 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %.1, i32* %22) #4, !srcloc !27
  %24 = sext i32 %23 to i64
  %25 = icmp ne i64 %24, 0
  %.2 = select i1 %25, i32 -14, i32 0
  ret i32 %.2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_disconnect_claim(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca %struct.usbdevfs_disconnect_claim, align 4
  %4 = bitcast %struct.usbdevfs_disconnect_claim* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 264 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 264
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 264, i1 zeroext false) #4
  %16 = trunc i64 264 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 264) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 264, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %78, label %21

; <label>:21:                                     ; preds = %19
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %23 = load %struct.usb_device*, %struct.usb_device** %22, align 8
  %24 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %23, i32 %25)
  %27 = icmp ne %struct.usb_interface* %26, null
  br i1 %27, label %28, label %78

; <label>:28:                                     ; preds = %21
  %29 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %30 = getelementptr inbounds %struct.device, %struct.device* %29, i32 0, i32 7
  %31 = load %struct.device_driver*, %struct.device_driver** %30, align 8
  %32 = icmp ne %struct.device_driver* %31, null
  br i1 %32, label %33, label %74

; <label>:33:                                     ; preds = %28
  %34 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %35 = getelementptr inbounds %struct.device, %struct.device* %34, i32 0, i32 7
  %36 = load %struct.device_driver*, %struct.device_driver** %35, align 8
  %37 = bitcast %struct.device_driver* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 -104
  %39 = bitcast i8* %38 to %struct.usb_driver*
  %40 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 15
  %41 = load i8, i8* %40, align 8
  %42 = trunc i8 %41 to i1
  br i1 %42, label %78, label %43

; <label>:43:                                     ; preds = %33
  %44 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = and i32 %45, 1
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %48, label %58

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 2
  %50 = getelementptr inbounds [256 x i8], [256 x i8]* %49, i32 0, i32 0
  %51 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %52 = getelementptr inbounds %struct.device, %struct.device* %51, i32 0, i32 7
  %53 = load %struct.device_driver*, %struct.device_driver** %52, align 8
  %54 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %53, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = call i32 @strncmp(i8* %50, i8* %55, i64 256)
  %57 = icmp ne i32 %56, 0
  br i1 %57, label %78, label %58

; <label>:58:                                     ; preds = %48, %43
  %59 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 2
  %62 = icmp ne i32 %61, 0
  br i1 %62, label %63, label %73

; <label>:63:                                     ; preds = %58
  %64 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 2
  %65 = getelementptr inbounds [256 x i8], [256 x i8]* %64, i32 0, i32 0
  %66 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %26, i32 0, i32 7
  %67 = getelementptr inbounds %struct.device, %struct.device* %66, i32 0, i32 7
  %68 = load %struct.device_driver*, %struct.device_driver** %67, align 8
  %69 = getelementptr inbounds %struct.device_driver, %struct.device_driver* %68, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  %71 = call i32 @strncmp(i8* %65, i8* %70, i64 256)
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %78, label %73

; <label>:73:                                     ; preds = %63, %58
  call void @usb_driver_release_interface(%struct.usb_driver* %39, %struct.usb_interface* %26)
  br label %74

; <label>:74:                                     ; preds = %73, %28
  %75 = getelementptr inbounds %struct.usbdevfs_disconnect_claim, %struct.usbdevfs_disconnect_claim* %3, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = call i32 @claimintf(%struct.usb_dev_state* %0, i32 %76)
  br label %78

; <label>:78:                                     ; preds = %63, %48, %33, %21, %19, %74
  %.0 = phi i32 [ %77, %74 ], [ -14, %19 ], [ -22, %21 ], [ -13, %33 ], [ -16, %48 ], [ -16, %63 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_alloc_streams(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca %struct.usb_host_endpoint**, align 8
  %6 = alloca %struct.usb_interface*, align 8
  %7 = bitcast i8* %1 to %struct.usbdevfs_streams*
  %8 = call i32 @parse_usbdevfs_streams(%struct.usb_dev_state* %0, %struct.usbdevfs_streams* %7, i32* %3, i32* %4, %struct.usb_host_endpoint*** %5, %struct.usb_interface** %6)
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %26, label %10

; <label>:10:                                     ; preds = %2
  %11 = load %struct.usb_interface*, %struct.usb_interface** %6, align 8
  %12 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %11, i32 0, i32 0
  %13 = load %struct.usb_host_interface*, %struct.usb_host_interface** %12, align 8
  %14 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %13, i64 0
  %15 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %14, i32 0, i32 0
  %16 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %15, i32 0, i32 2
  %17 = load i8, i8* %16, align 2
  %18 = zext i8 %17 to i32
  call void @destroy_async_on_interface(%struct.usb_dev_state* %0, i32 %18)
  %19 = load %struct.usb_interface*, %struct.usb_interface** %6, align 8
  %20 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %5, align 8
  %21 = load i32, i32* %4, align 4
  %22 = load i32, i32* %3, align 4
  %23 = call i32 @usb_alloc_streams(%struct.usb_interface* %19, %struct.usb_host_endpoint** %20, i32 %21, i32 %22, i32 20971712)
  %24 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %5, align 8
  %25 = bitcast %struct.usb_host_endpoint** %24 to i8*
  call void @kfree(i8* %25)
  br label %26

; <label>:26:                                     ; preds = %2, %10
  %.0 = phi i32 [ %23, %10 ], [ %8, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_free_streams(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = alloca %struct.usb_host_endpoint**, align 8
  %5 = alloca %struct.usb_interface*, align 8
  %6 = bitcast i8* %1 to %struct.usbdevfs_streams*
  %7 = call i32 @parse_usbdevfs_streams(%struct.usb_dev_state* %0, %struct.usbdevfs_streams* %6, i32* null, i32* %3, %struct.usb_host_endpoint*** %4, %struct.usb_interface** %5)
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %24, label %9

; <label>:9:                                      ; preds = %2
  %10 = load %struct.usb_interface*, %struct.usb_interface** %5, align 8
  %11 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %10, i32 0, i32 0
  %12 = load %struct.usb_host_interface*, %struct.usb_host_interface** %11, align 8
  %13 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %12, i64 0
  %14 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %13, i32 0, i32 0
  %15 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %14, i32 0, i32 2
  %16 = load i8, i8* %15, align 2
  %17 = zext i8 %16 to i32
  call void @destroy_async_on_interface(%struct.usb_dev_state* %0, i32 %17)
  %18 = load %struct.usb_interface*, %struct.usb_interface** %5, align 8
  %19 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %4, align 8
  %20 = load i32, i32* %3, align 4
  %21 = call i32 @usb_free_streams(%struct.usb_interface* %18, %struct.usb_host_endpoint** %19, i32 %20, i32 20971712)
  %22 = load %struct.usb_host_endpoint**, %struct.usb_host_endpoint*** %4, align 8
  %23 = bitcast %struct.usb_host_endpoint** %22 to i8*
  call void @kfree(i8* %23)
  br label %24

; <label>:24:                                     ; preds = %2, %9
  %.0 = phi i32 [ %21, %9 ], [ %7, %2 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_drop_privileges(%struct.usb_dev_state*, i8*) #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  %5 = call i64 @llvm.objectsize.i64.p0i8(i8* %4, i1 false) #4
  %6 = trunc i64 %5 to i32
  call void @might_fault() #4
  %7 = trunc i64 4 to i32
  call void @kasan_check_write(i8* %4, i32 %7) #4
  %8 = icmp slt i32 %6, 0
  %9 = sext i32 %6 to i64
  %10 = icmp uge i64 %9, 4
  %11 = select i1 %8, i1 true, i1 %10
  %12 = xor i1 %11, true
  %13 = zext i1 %11 to i32
  %14 = sext i32 %13 to i64
  br i1 %11, label %15, label %18

; <label>:15:                                     ; preds = %2
  call void @check_object_size(i8* %4, i64 4, i1 zeroext false) #4
  %16 = trunc i64 4 to i32
  %17 = call i64 @_copy_from_user(i8* %4, i8* %1, i32 %16) #4
  br label %19

; <label>:18:                                     ; preds = %2
  call void @copy_user_overflow(i32 %6, i64 4) #4
  br label %19

; <label>:19:                                     ; preds = %18, %15
  %.01 = phi i64 [ %17, %15 ], [ 4, %18 ]
  %20 = icmp ne i64 %.01, 0
  br i1 %20, label %28, label %21

; <label>:21:                                     ; preds = %19
  %22 = load i32, i32* %3, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 16
  %25 = load i64, i64* %24, align 8
  %26 = and i64 %25, %23
  store i64 %26, i64* %24, align 8
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 15
  store i8 1, i8* %27, align 8
  br label %28

; <label>:28:                                     ; preds = %19, %21
  %.0 = phi i32 [ 0, %21 ], [ -14, %19 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.async* @reap_as(%struct.usb_dev_state*) #0 {
  %2 = alloca %struct.__wait_queue, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %2, i32 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %2, i32 0, i32 1
  %6 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %7 = bitcast %struct.task_struct* %6 to i8*
  store i8* %7, i8** %5, align 8
  %8 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %2, i32 0, i32 2
  store i32 (%struct.__wait_queue*, i32, i32, i8*)* @default_wake_function, i32 (%struct.__wait_queue*, i32, i32, i8*)** %8, align 8
  %9 = getelementptr inbounds %struct.__wait_queue, %struct.__wait_queue* %2, i32 0, i32 3
  %10 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0
  store %struct.list_head* null, %struct.list_head** %10, align 8
  %11 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 1
  store %struct.list_head* null, %struct.list_head** %11, align 8
  %12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %13 = load %struct.usb_device*, %struct.usb_device** %12, align 8
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 7
  call void @add_wait_queue(%struct.__wait_queue_head* %14, %struct.__wait_queue* %2)
  br label %15

; <label>:15:                                     ; preds = %27, %1
  %16 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %17 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %16, i32 0, i32 1
  store volatile i64 1, i64* %17, align 8
  %18 = call %struct.async* @async_getcompleted(%struct.usb_dev_state* %0)
  %19 = icmp ne %struct.async* %18, null
  br i1 %19, label %30, label %20

; <label>:20:                                     ; preds = %15
  %21 = call i32 @connected(%struct.usb_dev_state* %0)
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %30

; <label>:23:                                     ; preds = %20
  %24 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %25 = call i32 @signal_pending(%struct.task_struct* %24)
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %30, label %27

; <label>:27:                                     ; preds = %23
  %28 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 11
  call void @device_unlock(%struct.device* %28)
  call void @schedule()
  %29 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %13, i32 0, i32 11
  call void @device_lock(%struct.device* %29)
  br label %15

; <label>:30:                                     ; preds = %23, %15, %20
  %31 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 7
  call void @remove_wait_queue(%struct.__wait_queue_head* %31, %struct.__wait_queue* %2)
  store volatile i64 0, i64* %3, align 8
  %32 = load volatile i64, i64* %3, align 8
  %33 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %34 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %33, i32 0, i32 1
  %35 = call i64 asm sideeffect "xchgq ${0:q}, $1\0A", "=r,=*m,0,*m,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i64* %34, i64 %32, i64* %34) #4, !srcloc !28
  store volatile i64 %35, i64* %3, align 8
  %36 = load volatile i64, i64* %3, align 8
  ret %struct.async* %18
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @processcompl(%struct.async*, i8**) #0 {
  %3 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %4 = load %struct.urb*, %struct.urb** %3, align 8
  %5 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.usbdevfs_urb*
  %8 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 7
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %22

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 20
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %22

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 6
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @copy_urb_data_to_user(i8* %19, %struct.urb* %4)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %87, label %22

; <label>:22:                                     ; preds = %17, %13, %2
  call void @might_fault()
  %23 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 11
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %7, i32 0, i32 2
  %26 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %24, i32* %25) #4, !srcloc !29
  %27 = sext i32 %26 to i64
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %87, label %29

; <label>:29:                                     ; preds = %22
  call void @might_fault()
  %30 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 20
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %7, i32 0, i32 6
  %33 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %31, i32* %32) #4, !srcloc !30
  %34 = sext i32 %33 to i64
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %87, label %36

; <label>:36:                                     ; preds = %29
  call void @might_fault()
  %37 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 26
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %7, i32 0, i32 9
  %40 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %38, i32* %39) #4, !srcloc !31
  %41 = sext i32 %40 to i64
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %87, label %43

; <label>:43:                                     ; preds = %36
  %44 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 9
  %45 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %44, align 8
  %46 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %45, i32 0, i32 0
  %47 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %81

; <label>:49:                                     ; preds = %43, %79
  %.01 = phi i32 [ %80, %79 ], [ 0, %43 ]
  %50 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 24
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %.01, %51
  br i1 %52, label %53, label %81

; <label>:53:                                     ; preds = %49
  call void @might_fault()
  %54 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 29
  %55 = zext i32 %.01 to i64
  %56 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %54, i64 0, i64 %55
  %57 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %56, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %7, i32 0, i32 12
  %60 = zext i32 %.01 to i64
  %61 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %59, i64 0, i64 %60
  %62 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %61, i32 0, i32 1
  %63 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %58, i32* %62) #4, !srcloc !32
  %64 = sext i32 %63 to i64
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %87, label %66

; <label>:66:                                     ; preds = %53
  call void @might_fault()
  %67 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 29
  %68 = zext i32 %.01 to i64
  %69 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %67, i64 0, i64 %68
  %70 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %7, i32 0, i32 12
  %73 = zext i32 %.01 to i64
  %74 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %72, i64 0, i64 %73
  %75 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %74, i32 0, i32 2
  %76 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %71, i32* %75) #4, !srcloc !33
  %77 = sext i32 %76 to i64
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %87, label %79

; <label>:79:                                     ; preds = %66
  %80 = add i32 %.01, 1
  br label %49

; <label>:81:                                     ; preds = %49, %43
  call void @might_fault()
  %82 = call i8* asm sideeffect "call __put_user_8", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i8* %9, i8** %1) #4, !srcloc !34
  %83 = ptrtoint i8* %82 to i64
  %84 = trunc i64 %83 to i32
  %85 = sext i32 %84 to i64
  %86 = icmp ne i64 %85, 0
  %. = select i1 %86, i32 -14, i32 0
  br label %87

; <label>:87:                                     ; preds = %17, %22, %29, %36, %53, %66, %81
  %.0 = phi i32 [ %., %81 ], [ -14, %66 ], [ -14, %53 ], [ -14, %36 ], [ -14, %29 ], [ -14, %22 ], [ -14, %17 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal void @free_async(%struct.async*) #0 {
  %2 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 2
  %3 = load %struct.pid*, %struct.pid** %2, align 8
  call void @put_pid(%struct.pid* %3)
  %4 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 3
  %5 = load %struct.cred*, %struct.cred** %4, align 8
  %6 = icmp ne %struct.cred* %5, null
  br i1 %6, label %7, label %10

; <label>:7:                                      ; preds = %1
  %8 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 3
  %9 = load %struct.cred*, %struct.cred** %8, align 8
  call void @put_cred(%struct.cred* %9)
  br label %10

; <label>:10:                                     ; preds = %1, %7, %33
  %.0 = phi i32 [ %34, %33 ], [ 0, %7 ], [ 0, %1 ]
  %11 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %12 = load %struct.urb*, %struct.urb** %11, align 8
  %13 = getelementptr inbounds %struct.urb, %struct.urb* %12, i32 0, i32 18
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %.0, %14
  %16 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %17 = load %struct.urb*, %struct.urb** %16, align 8
  %18 = getelementptr inbounds %struct.urb, %struct.urb* %17, i32 0, i32 16
  %19 = load %struct.scatterlist*, %struct.scatterlist** %18, align 8
  br i1 %15, label %20, label %35

; <label>:20:                                     ; preds = %10
  %21 = sext i32 %.0 to i64
  %22 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %19, i64 %21
  %23 = call %struct.page* @sg_page(%struct.scatterlist* %22)
  %24 = icmp ne %struct.page* %23, null
  br i1 %24, label %25, label %33

; <label>:25:                                     ; preds = %20
  %26 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %27 = load %struct.urb*, %struct.urb** %26, align 8
  %28 = getelementptr inbounds %struct.urb, %struct.urb* %27, i32 0, i32 16
  %29 = load %struct.scatterlist*, %struct.scatterlist** %28, align 8
  %30 = sext i32 %.0 to i64
  %31 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %29, i64 %30
  %32 = call i8* @sg_virt(%struct.scatterlist* %31)
  call void @kfree(i8* %32)
  br label %33

; <label>:33:                                     ; preds = %20, %25
  %34 = add nsw i32 %.0, 1
  br label %10

; <label>:35:                                     ; preds = %10
  %36 = bitcast %struct.scatterlist* %19 to i8*
  call void @kfree(i8* %36)
  %37 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 9
  %38 = load %struct.usb_memory*, %struct.usb_memory** %37, align 8
  %39 = icmp eq %struct.usb_memory* %38, null
  br i1 %39, label %40, label %45

; <label>:40:                                     ; preds = %35
  %41 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %42 = load %struct.urb*, %struct.urb** %41, align 8
  %43 = getelementptr inbounds %struct.urb, %struct.urb* %42, i32 0, i32 14
  %44 = load i8*, i8** %43, align 8
  call void @kfree(i8* %44)
  br label %51

; <label>:45:                                     ; preds = %35
  %46 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 9
  %47 = load %struct.usb_memory*, %struct.usb_memory** %46, align 8
  %48 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 9
  %49 = load %struct.usb_memory*, %struct.usb_memory** %48, align 8
  %50 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %49, i32 0, i32 2
  call void @dec_usb_memory_use_count(%struct.usb_memory* %47, i32* %50)
  br label %51

; <label>:51:                                     ; preds = %45, %40
  %52 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %53 = load %struct.urb*, %struct.urb** %52, align 8
  %54 = getelementptr inbounds %struct.urb, %struct.urb* %53, i32 0, i32 21
  %55 = load i8*, i8** %54, align 8
  call void @kfree(i8* %55)
  %56 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %57 = load %struct.urb*, %struct.urb** %56, align 8
  call void @usb_free_urb(%struct.urb* %57)
  %58 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 10
  %59 = load i32, i32* %58, align 8
  %60 = zext i32 %59 to i64
  call void @usbfs_decrease_memory_usage(i64 %60)
  %61 = bitcast %struct.async* %0 to i8*
  call void @kfree(i8* %61)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @signal_pending(%struct.task_struct*) #0 {
  %2 = call i32 @test_tsk_thread_flag(%struct.task_struct* %0, i32 2)
  %3 = icmp ne i32 %2, 0
  %4 = xor i1 %3, true
  %5 = xor i1 %4, true
  %6 = zext i1 %5 to i32
  %7 = sext i32 %6 to i64
  %8 = trunc i64 %7 to i32
  ret i32 %8
}

declare i32 @default_wake_function(%struct.__wait_queue*, i32, i32, i8*) #1

declare void @add_wait_queue(%struct.__wait_queue_head*, %struct.__wait_queue*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.async* @async_getcompleted(%struct.usb_dev_state*) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = icmp eq i64* %2, %3
  %5 = zext i1 %4 to i32
  %6 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %7 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %6, i32 0, i32 0
  %8 = bitcast %union.anon* %7 to %struct.raw_spinlock*
  %9 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %8)
  %10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 5
  %11 = call i32 @list_empty(%struct.list_head* %10)
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %21, label %13

; <label>:13:                                     ; preds = %1
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 5
  %15 = getelementptr inbounds %struct.list_head, %struct.list_head* %14, i32 0, i32 0
  %16 = load %struct.list_head*, %struct.list_head** %15, align 8
  %17 = bitcast %struct.list_head* %16 to i8*
  %18 = getelementptr inbounds i8, i8* %17, i64 0
  %19 = bitcast i8* %18 to %struct.async*
  %20 = getelementptr inbounds %struct.async, %struct.async* %19, i32 0, i32 0
  call void @list_del_init(%struct.list_head* %20)
  br label %21

; <label>:21:                                     ; preds = %13, %1
  %.0 = phi %struct.async* [ null, %1 ], [ %19, %13 ]
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %23 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %22, i32 0, i32 0
  %24 = bitcast %union.anon* %23 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %24, i64 %9) #4
  ret %struct.async* %.0
}

declare void @schedule() #1

declare void @remove_wait_queue(%struct.__wait_queue_head*, %struct.__wait_queue*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @copy_urb_data_to_user(i8*, %struct.urb*) #0 {
  %3 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 24
  %4 = load i32, i32* %3, align 4
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %9

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 19
  %8 = load i32, i32* %7, align 8
  br label %12

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 20
  %11 = load i32, i32* %10, align 4
  br label %12

; <label>:12:                                     ; preds = %9, %6
  %.0 = phi i32 [ %8, %6 ], [ %11, %9 ]
  %13 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 18
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %36

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 14
  %18 = load i8*, i8** %17, align 8
  %19 = zext i32 %.0 to i64
  %20 = call i64 @llvm.objectsize.i64.p0i8(i8* %18, i1 false) #4
  %21 = trunc i64 %20 to i32
  %22 = trunc i64 %19 to i32
  call void @kasan_check_read(i8* %18, i32 %22) #4
  call void @might_fault() #4
  %23 = icmp slt i32 %21, 0
  %24 = sext i32 %21 to i64
  %25 = icmp uge i64 %24, %19
  %26 = select i1 %23, i1 true, i1 %25
  %27 = xor i1 %26, true
  %28 = zext i1 %26 to i32
  %29 = sext i32 %28 to i64
  br i1 %26, label %30, label %33

; <label>:30:                                     ; preds = %16
  call void @check_object_size(i8* %18, i64 %19, i1 zeroext true) #4
  %31 = trunc i64 %19 to i32
  %32 = call i64 @_copy_to_user(i8* %0, i8* %18, i32 %31) #4
  br label %34

; <label>:33:                                     ; preds = %16
  call void @copy_user_overflow(i32 %21, i64 %19) #4
  br label %34

; <label>:34:                                     ; preds = %33, %30
  %.05 = phi i64 [ %32, %30 ], [ %19, %33 ]
  %35 = icmp ne i64 %.05, 0
  %. = select i1 %35, i32 -14, i32 0
  br label %70

; <label>:36:                                     ; preds = %12, %65
  %.03 = phi i8* [ %67, %65 ], [ %0, %12 ]
  %.01 = phi i32 [ %69, %65 ], [ 0, %12 ]
  %.1 = phi i32 [ %68, %65 ], [ %.0, %12 ]
  %37 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 18
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %.01, %38
  %40 = icmp ne i32 %.1, 0
  %.6 = select i1 %39, i1 %40, i1 false
  br i1 %.6, label %41, label %70

; <label>:41:                                     ; preds = %36
  %42 = icmp ugt i32 %.1, 16384
  %..1 = select i1 %42, i32 16384, i32 %.1
  %43 = getelementptr inbounds %struct.urb, %struct.urb* %1, i32 0, i32 16
  %44 = load %struct.scatterlist*, %struct.scatterlist** %43, align 8
  %45 = zext i32 %.01 to i64
  %46 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %44, i64 %45
  %47 = call i8* @sg_virt(%struct.scatterlist* %46)
  %48 = zext i32 %..1 to i64
  %49 = call i64 @llvm.objectsize.i64.p0i8(i8* %47, i1 false) #4
  %50 = trunc i64 %49 to i32
  %51 = trunc i64 %48 to i32
  call void @kasan_check_read(i8* %47, i32 %51) #4
  call void @might_fault() #4
  %52 = icmp slt i32 %50, 0
  %53 = sext i32 %50 to i64
  %54 = icmp uge i64 %53, %48
  %55 = select i1 %52, i1 true, i1 %54
  %56 = xor i1 %55, true
  %57 = zext i1 %55 to i32
  %58 = sext i32 %57 to i64
  br i1 %55, label %59, label %62

; <label>:59:                                     ; preds = %41
  call void @check_object_size(i8* %47, i64 %48, i1 zeroext true) #4
  %60 = trunc i64 %48 to i32
  %61 = call i64 @_copy_to_user(i8* %.03, i8* %47, i32 %60) #4
  br label %63

; <label>:62:                                     ; preds = %41
  call void @copy_user_overflow(i32 %50, i64 %48) #4
  br label %63

; <label>:63:                                     ; preds = %62, %59
  %.02 = phi i64 [ %61, %59 ], [ %48, %62 ]
  %64 = icmp ne i64 %.02, 0
  br i1 %64, label %70, label %65

; <label>:65:                                     ; preds = %63
  %66 = zext i32 %..1 to i64
  %67 = getelementptr inbounds i8, i8* %.03, i64 %66
  %68 = sub i32 %.1, %..1
  %69 = add i32 %.01, 1
  br label %36

; <label>:70:                                     ; preds = %36, %63, %34
  %.04 = phi i32 [ %., %34 ], [ -14, %63 ], [ 0, %36 ]
  ret i32 %.04
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 1
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @sg_virt(%struct.scatterlist*) #0 {
  %2 = call %struct.page* @sg_page(%struct.scatterlist* %0)
  %3 = ptrtoint %struct.page* %2 to i64
  %4 = sub i64 %3, -24189255811072
  %5 = sdiv exact i64 %4, 64
  %6 = shl i64 %5, 12
  %7 = add i64 %6, -131941395333120
  %8 = inttoptr i64 %7 to i8*
  %9 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr i8, i8* %8, i64 %11
  ret i8* %12
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.page* @sg_page(%struct.scatterlist*) #0 {
  %2 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = and i64 %3, -4
  %5 = inttoptr i64 %4 to %struct.page*
  ret %struct.page* %5
}

declare void @put_pid(%struct.pid*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @put_cred(%struct.cred*) #0 {
  %2 = alloca i8, align 1
  call void @validate_creds(%struct.cred* %0)
  %3 = getelementptr inbounds %struct.cred, %struct.cred* %0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %3, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; decl $0;\0A\09sete $1\0A", "=*m,=*qm,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i32* %4, i8* %2, i32* %4) #4, !srcloc !35
  %5 = load i8, i8* %2, align 1
  %6 = trunc i8 %5 to i1
  br i1 %6, label %7, label %8

; <label>:7:                                      ; preds = %1
  call void @__put_cred(%struct.cred* %0)
  br label %8

; <label>:8:                                      ; preds = %7, %1
  ret void
}

declare void @kfree(i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @dec_usb_memory_use_count(%struct.usb_memory*, i32*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 7
  %6 = load %struct.usb_dev_state*, %struct.usb_dev_state** %5, align 8
  %7 = icmp eq i64* %3, %4
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 3
  %10 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %9, i32 0, i32 0
  %11 = bitcast %union.anon* %10 to %struct.raw_spinlock*
  %12 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %11)
  %13 = load i32, i32* %1, align 4
  %14 = add nsw i32 %13, -1
  store i32 %14, i32* %1, align 4
  %15 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %41

; <label>:18:                                     ; preds = %2
  %19 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %41

; <label>:22:                                     ; preds = %18
  %23 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 0
  call void @list_del(%struct.list_head* %23)
  %24 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 3
  %25 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %24, i32 0, i32 0
  %26 = bitcast %union.anon* %25 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %26, i64 %12) #4
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 1
  %28 = load %struct.usb_device*, %struct.usb_device** %27, align 8
  %29 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 3
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 4
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 5
  %35 = load i64, i64* %34, align 8
  call void @usb_free_coherent(%struct.usb_device* %28, i64 %31, i8* %33, i64 %35)
  %36 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %0, i32 0, i32 3
  %37 = load i32, i32* %36, align 8
  %38 = zext i32 %37 to i64
  %39 = add i64 %38, 64
  call void @usbfs_decrease_memory_usage(i64 %39)
  %40 = bitcast %struct.usb_memory* %0 to i8*
  call void @kfree(i8* %40)
  br label %45

; <label>:41:                                     ; preds = %18, %2
  %42 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %6, i32 0, i32 3
  %43 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %42, i32 0, i32 0
  %44 = bitcast %union.anon* %43 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %44, i64 %12) #4
  br label %45

; <label>:45:                                     ; preds = %41, %22
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @usbfs_decrease_memory_usage(i64) #0 {
  call void @atomic64_sub(i64 %0, %struct.atomic64_t* @usbfs_memory_usage)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @validate_creds(%struct.cred*) #0 {
  ret void
}

declare void @__put_cred(%struct.cred*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @list_del(%struct.list_head*) #0 {
  call void @__list_del_entry(%struct.list_head* %0)
  %2 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 0
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 256 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %2, align 8
  %3 = getelementptr inbounds %struct.list_head, %struct.list_head* %0, i32 0, i32 1
  store %struct.list_head* bitcast (i8* getelementptr (i8, i8* inttoptr (i64 512 to i8*), i64 -2401263026318606336) to %struct.list_head*), %struct.list_head** %3, align 8
  ret void
}

declare void @usb_free_coherent(%struct.usb_device*, i64, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal void @atomic64_sub(i64, %struct.atomic64_t*) #0 {
  %3 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %1, i32 0, i32 0
  %4 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %1, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; subq $1,$0", "=*m,er,*m,~{dirflag},~{fpsr},~{flags}"(i64* %3, i64 %0, i64* %4) #4, !srcloc !36
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_tsk_thread_flag(%struct.task_struct*, i32) #0 {
  %3 = call %struct.thread_info* @task_thread_info(%struct.task_struct* %0)
  %4 = call i32 @test_ti_thread_flag(%struct.thread_info* %3, i32 %1)
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @test_ti_thread_flag(%struct.thread_info*, i32) #0 {
  %3 = alloca i8, align 1
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %struct.thread_info, %struct.thread_info* %0, i32 0, i32 0
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %3, i64* %5, i64 %4) #4, !srcloc !4
  %6 = load i8, i8* %3, align 1
  %7 = trunc i8 %6 to i1
  %8 = zext i1 %7 to i32
  ret i32 %8
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.thread_info* @task_thread_info(%struct.task_struct*) #0 {
  %2 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 0
  ret %struct.thread_info* %2
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @processcompl_compat(%struct.async*, i8**) #0 {
  %3 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 8
  %4 = load %struct.urb*, %struct.urb** %3, align 8
  %5 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 7
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast i8* %6 to %struct.usbdevfs_urb32*
  %8 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 7
  %9 = load i8*, i8** %8, align 8
  %10 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 6
  %11 = load i8*, i8** %10, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %13, label %22

; <label>:13:                                     ; preds = %2
  %14 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 20
  %15 = load i32, i32* %14, align 4
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %17, label %22

; <label>:17:                                     ; preds = %13
  %18 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 6
  %19 = load i8*, i8** %18, align 8
  %20 = call i32 @copy_urb_data_to_user(i8* %19, %struct.urb* %4)
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %87, label %22

; <label>:22:                                     ; preds = %17, %13, %2
  call void @might_fault()
  %23 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 11
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %7, i32 0, i32 2
  %26 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %24, i32* %25) #4, !srcloc !37
  %27 = sext i32 %26 to i64
  %28 = icmp ne i64 %27, 0
  br i1 %28, label %87, label %29

; <label>:29:                                     ; preds = %22
  call void @might_fault()
  %30 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 20
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %7, i32 0, i32 6
  %33 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %31, i32* %32) #4, !srcloc !38
  %34 = sext i32 %33 to i64
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %87, label %36

; <label>:36:                                     ; preds = %29
  call void @might_fault()
  %37 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 26
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %7, i32 0, i32 9
  %40 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %38, i32* %39) #4, !srcloc !39
  %41 = sext i32 %40 to i64
  %42 = icmp ne i64 %41, 0
  br i1 %42, label %87, label %43

; <label>:43:                                     ; preds = %36
  %44 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 9
  %45 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %44, align 8
  %46 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %45, i32 0, i32 0
  %47 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %46)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %49, label %81

; <label>:49:                                     ; preds = %43, %79
  %.01 = phi i32 [ %80, %79 ], [ 0, %43 ]
  %50 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 24
  %51 = load i32, i32* %50, align 4
  %52 = icmp ult i32 %.01, %51
  br i1 %52, label %53, label %81

; <label>:53:                                     ; preds = %49
  call void @might_fault()
  %54 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 29
  %55 = zext i32 %.01 to i64
  %56 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %54, i64 0, i64 %55
  %57 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %56, i32 0, i32 2
  %58 = load i32, i32* %57, align 8
  %59 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %7, i32 0, i32 12
  %60 = zext i32 %.01 to i64
  %61 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %59, i64 0, i64 %60
  %62 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %61, i32 0, i32 1
  %63 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %58, i32* %62) #4, !srcloc !40
  %64 = sext i32 %63 to i64
  %65 = icmp ne i64 %64, 0
  br i1 %65, label %87, label %66

; <label>:66:                                     ; preds = %53
  call void @might_fault()
  %67 = getelementptr inbounds %struct.urb, %struct.urb* %4, i32 0, i32 29
  %68 = zext i32 %.01 to i64
  %69 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %67, i64 0, i64 %68
  %70 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %69, i32 0, i32 3
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %7, i32 0, i32 12
  %73 = zext i32 %.01 to i64
  %74 = getelementptr inbounds [0 x %struct.usbdevfs_iso_packet_desc], [0 x %struct.usbdevfs_iso_packet_desc]* %72, i64 0, i64 %73
  %75 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %74, i32 0, i32 2
  %76 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %71, i32* %75) #4, !srcloc !41
  %77 = sext i32 %76 to i64
  %78 = icmp ne i64 %77, 0
  br i1 %78, label %87, label %79

; <label>:79:                                     ; preds = %66
  %80 = add i32 %.01, 1
  br label %49

; <label>:81:                                     ; preds = %49, %43
  call void @might_fault()
  %82 = call i32 @ptr_to_compat(i8* %9)
  %83 = bitcast i8** %1 to i32*
  %84 = call i32 asm sideeffect "call __put_user_4", "={ax},0,{cx},~{ebx},~{dirflag},~{fpsr},~{flags}"(i32 %82, i32* %83) #4, !srcloc !42
  %85 = sext i32 %84 to i64
  %86 = icmp ne i64 %85, 0
  %. = select i1 %86, i32 -14, i32 0
  br label %87

; <label>:87:                                     ; preds = %81, %66, %53, %36, %29, %22, %17
  %.0 = phi i32 [ -14, %17 ], [ -14, %22 ], [ -14, %29 ], [ -14, %36 ], [ -14, %53 ], [ -14, %66 ], [ %., %81 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @check_ctrlrecip(%struct.usb_dev_state*, i32, i32, i32) #0 {
  %5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %6 = load %struct.usb_device*, %struct.usb_device** %5, align 8
  %7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %6, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = icmp ne i32 %8, 4
  br i1 %9, label %10, label %22

; <label>:10:                                     ; preds = %4
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %12 = load %struct.usb_device*, %struct.usb_device** %11, align 8
  %13 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %12, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, 6
  br i1 %15, label %16, label %22

; <label>:16:                                     ; preds = %10
  %17 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %18 = load %struct.usb_device*, %struct.usb_device** %17, align 8
  %19 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %18, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = icmp ne i32 %20, 7
  br i1 %21, label %76, label %22

; <label>:22:                                     ; preds = %16, %10, %4
  %23 = and i32 96, %1
  %24 = icmp eq i32 64, %23
  br i1 %24, label %76, label %25

; <label>:25:                                     ; preds = %22
  %26 = icmp eq i32 %1, 161
  %27 = icmp eq i32 %2, 0
  %or.cond = and i1 %26, %27
  br i1 %or.cond, label %28, label %43

; <label>:28:                                     ; preds = %25
  %29 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %30 = load %struct.usb_device*, %struct.usb_device** %29, align 8
  %31 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %30, i32 0, i32 15
  %32 = load %struct.usb_host_config*, %struct.usb_host_config** %31, align 8
  %33 = lshr i32 %3, 8
  %34 = and i32 %3, 255
  %35 = call %struct.usb_host_interface* @usb_find_alt_setting(%struct.usb_host_config* %32, i32 %33, i32 %34)
  %36 = icmp ne %struct.usb_host_interface* %35, null
  br i1 %36, label %37, label %43

; <label>:37:                                     ; preds = %28
  %38 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %35, i32 0, i32 0
  %39 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %38, i32 0, i32 5
  %40 = load i8, i8* %39, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp eq i32 %41, 7
  br i1 %42, label %76, label %43

; <label>:43:                                     ; preds = %28, %37, %25
  %44 = and i32 %3, 255
  %45 = and i32 %1, 31
  switch i32 %45, label %76 [
    i32 2, label %46
    i32 1, label %74
  ]

; <label>:46:                                     ; preds = %43
  %47 = and i32 %44, -129
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %76, label %49

; <label>:49:                                     ; preds = %46
  %50 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %51 = load %struct.usb_device*, %struct.usb_device** %50, align 8
  %52 = call i32 @findintfep(%struct.usb_device* %51, i32 %44)
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %54, label %70

; <label>:54:                                     ; preds = %49
  %55 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %56 = load %struct.usb_device*, %struct.usb_device** %55, align 8
  %57 = xor i32 %44, 128
  %58 = call i32 @findintfep(%struct.usb_device* %56, i32 %57)
  %59 = icmp sge i32 %58, 0
  br i1 %59, label %60, label %70

; <label>:60:                                     ; preds = %54
  %61 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %62 = load %struct.usb_device*, %struct.usb_device** %61, align 8
  %63 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %62, i32 0, i32 11
  %64 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %65 = call i32 @task_pid_nr(%struct.task_struct* %64)
  %66 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %67 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %66, i32 0, i32 77
  %68 = getelementptr inbounds [16 x i8], [16 x i8]* %67, i32 0, i32 0
  %69 = xor i32 %44, 128
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %63, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @__func__.check_ctrlrecip, i32 0, i32 0), i32 %65, i8* %68, i32 %44, i32 %69)
  br label %70

; <label>:70:                                     ; preds = %54, %60, %49
  %.0 = phi i32 [ %52, %49 ], [ %58, %60 ], [ %58, %54 ]
  %71 = icmp sge i32 %.0, 0
  br i1 %71, label %72, label %76

; <label>:72:                                     ; preds = %70
  %73 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %.0)
  br label %76

; <label>:74:                                     ; preds = %43
  %75 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %44)
  br label %76

; <label>:76:                                     ; preds = %43, %74, %72, %70, %46, %37, %22, %16
  %.01 = phi i32 [ -113, %16 ], [ 0, %22 ], [ 0, %37 ], [ 0, %46 ], [ 0, %43 ], [ %75, %74 ], [ %73, %72 ], [ %.0, %70 ]
  ret i32 %.01
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbfs_increase_memory_usage(i64) #0 {
  %2 = load volatile i32, i32* @usbfs_memory_mb, align 4
  %3 = zext i32 %2 to i64
  %4 = shl i64 %3, 20
  %5 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* @usbfs_memory_usage, i32 0, i32 0
  %6 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* @usbfs_memory_usage, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; addq $1,$0", "=*m,er,*m,~{dirflag},~{fpsr},~{flags}"(i64* %5, i64 %0, i64* %6) #4, !srcloc !43
  %7 = icmp ugt i64 %4, 0
  br i1 %7, label %8, label %12

; <label>:8:                                      ; preds = %1
  %9 = call i64 @atomic64_read(%struct.atomic64_t* @usbfs_memory_usage)
  %10 = icmp ugt i64 %9, %4
  br i1 %10, label %11, label %12

; <label>:11:                                     ; preds = %8
  call void @atomic64_sub(i64 %0, %struct.atomic64_t* @usbfs_memory_usage)
  br label %12

; <label>:12:                                     ; preds = %1, %8, %11
  %.0 = phi i32 [ -12, %11 ], [ 0, %8 ], [ 0, %1 ]
  ret i32 %.0
}

declare i64 @__get_free_pages(i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @__chk_range_not_ok(i64, i64, i64) #0 {
  %4 = add i64 %0, %1
  %5 = icmp ult i64 %4, %1
  %6 = xor i1 %5, true
  %7 = xor i1 %6, true
  %8 = zext i1 %7 to i32
  %9 = sext i32 %8 to i64
  %10 = icmp ne i64 %9, 0
  br i1 %10, label %18, label %11

; <label>:11:                                     ; preds = %3
  %12 = icmp ugt i64 %4, %2
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = icmp ne i64 %16, 0
  br label %18

; <label>:18:                                     ; preds = %3, %11
  %.0 = phi i1 [ %17, %11 ], [ true, %3 ]
  ret i1 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @__create_pipe(%struct.usb_device*, i32) #0 {
  %3 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = shl i32 %4, 8
  %6 = shl i32 %1, 15
  %7 = or i32 %5, %6
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define internal void @snoop_urb(%struct.usb_device*, i8*, i32, i32, i32, i32, i8*, i32) #0 {
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = load i8, i8* @usbfs_snoop, align 1
  %12 = trunc i8 %11 to i1
  br i1 %12, label %13, label %52

; <label>:13:                                     ; preds = %8
  %14 = ashr i32 %2, 15
  %15 = and i32 %14, 15
  %16 = ashr i32 %2, 30
  %17 = and i32 %16, 3
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds [4 x i8*], [4 x i8*]* @snoop_urb.types, i64 0, i64 %18
  %20 = load i8*, i8** %19, align 8
  %21 = and i32 %2, 128
  %22 = icmp ne i32 %21, 0
  %23 = xor i1 %22, true
  %24 = xor i1 %23, true
  %25 = zext i1 %24 to i32
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds [2 x i8*], [2 x i8*]* @snoop_urb.dirs, i64 0, i64 %26
  %28 = load i8*, i8** %27, align 8
  %29 = icmp ne i8* %1, null
  %30 = icmp eq i32 %5, 0
  %31 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 11
  br i1 %29, label %32, label %35

; <label>:32:                                     ; preds = %13
  br i1 %30, label %33, label %34

; <label>:33:                                     ; preds = %32
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %31, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.45, i32 0, i32 0), i8* %1, i32 %15, i8* %20, i8* %28, i32 %3)
  br label %38

; <label>:34:                                     ; preds = %32
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %31, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.46, i32 0, i32 0), i8* %1, i32 %15, i8* %20, i8* %28, i32 %3, i32 %4)
  br label %38

; <label>:35:                                     ; preds = %13
  br i1 %30, label %36, label %37

; <label>:36:                                     ; preds = %35
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %31, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.47, i32 0, i32 0), i32 %15, i8* %20, i8* %28, i32 %3, i32 %4)
  br label %38

; <label>:37:                                     ; preds = %35
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %31, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.48, i32 0, i32 0), i32 %15, i8* %20, i8* %28, i32 %3, i32 %4)
  br label %38

; <label>:38:                                     ; preds = %36, %37, %33, %34
  store i32 %7, i32* %9, align 4
  %39 = load i32, i32* @usbfs_snoop_max, align 4
  store i32 %39, i32* %10, align 4
  %40 = icmp eq i32* %9, %10
  %41 = zext i1 %40 to i32
  %42 = load i32, i32* %9, align 4
  %43 = load i32, i32* %10, align 4
  %44 = icmp ult i32 %42, %43
  %45 = load i32, i32* %9, align 4
  %46 = load i32, i32* %10, align 4
  %47 = select i1 %44, i32 %45, i32 %46
  %48 = icmp ne i8* %6, null
  %49 = icmp ugt i32 %47, 0
  %or.cond = and i1 %48, %49
  br i1 %or.cond, label %50, label %52

; <label>:50:                                     ; preds = %38
  %51 = zext i32 %47 to i64
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 32, i32 1, i8* %6, i64 %51, i1 zeroext true)
  br label %52

; <label>:52:                                     ; preds = %8, %50, %38
  ret void
}

declare i32 @usb_control_msg(%struct.usb_device*, i32, i8 zeroext, i8 zeroext, i16 zeroext, i16 zeroext, i8*, i16 zeroext, i32) #1

declare void @dev_printk(i8*, %struct.device*, i8*, ...) #1

declare void @free_pages(i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @kasan_check_write(i8*, i32) #0 {
  ret void
}

declare i64 @_copy_from_user(i8*, i8*, i32) #1

declare %struct.usb_host_interface* @usb_find_alt_setting(%struct.usb_host_config*, i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @findintfep(%struct.usb_device*, i32) #0 {
  %3 = and i32 %1, -144
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %60, label %5

; <label>:5:                                      ; preds = %2
  %6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 15
  %7 = load %struct.usb_host_config*, %struct.usb_host_config** %6, align 8
  %8 = icmp ne %struct.usb_host_config* %7, null
  br i1 %8, label %9, label %60

; <label>:9:                                      ; preds = %5, %58
  %.03 = phi i32 [ %59, %58 ], [ 0, %5 ]
  %10 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 15
  %11 = load %struct.usb_host_config*, %struct.usb_host_config** %10, align 8
  %12 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %11, i32 0, i32 0
  %13 = getelementptr inbounds %struct.usb_config_descriptor, %struct.usb_config_descriptor* %12, i32 0, i32 3
  %14 = load i8, i8* %13, align 4
  %15 = zext i8 %14 to i32
  %16 = icmp ult i32 %.03, %15
  br i1 %16, label %17, label %60

; <label>:17:                                     ; preds = %9
  %18 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 15
  %19 = load %struct.usb_host_config*, %struct.usb_host_config** %18, align 8
  %20 = getelementptr inbounds %struct.usb_host_config, %struct.usb_host_config* %19, i32 0, i32 3
  %21 = zext i32 %.03 to i64
  %22 = getelementptr inbounds [32 x %struct.usb_interface*], [32 x %struct.usb_interface*]* %20, i64 0, i64 %21
  %23 = load %struct.usb_interface*, %struct.usb_interface** %22, align 8
  br label %24

; <label>:24:                                     ; preds = %56, %17
  %.02 = phi i32 [ 0, %17 ], [ %57, %56 ]
  %25 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %23, i32 0, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp ult i32 %.02, %26
  br i1 %27, label %28, label %58

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %23, i32 0, i32 0
  %30 = load %struct.usb_host_interface*, %struct.usb_host_interface** %29, align 8
  %31 = zext i32 %.02 to i64
  %32 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %30, i64 %31
  br label %33

; <label>:33:                                     ; preds = %54, %28
  %.01 = phi i32 [ 0, %28 ], [ %55, %54 ]
  %34 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %32, i32 0, i32 0
  %35 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %34, i32 0, i32 4
  %36 = load i8, i8* %35, align 4
  %37 = zext i8 %36 to i32
  %38 = icmp ult i32 %.01, %37
  br i1 %38, label %39, label %56

; <label>:39:                                     ; preds = %33
  %40 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %32, i32 0, i32 3
  %41 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %40, align 8
  %42 = zext i32 %.01 to i64
  %43 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %41, i64 %42
  %44 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %43, i32 0, i32 0
  %45 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %44, i32 0, i32 2
  %46 = load i8, i8* %45, align 1
  %47 = zext i8 %46 to i32
  %48 = icmp eq i32 %47, %1
  br i1 %48, label %49, label %54

; <label>:49:                                     ; preds = %39
  %50 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %32, i32 0, i32 0
  %51 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %50, i32 0, i32 2
  %52 = load i8, i8* %51, align 2
  %53 = zext i8 %52 to i32
  br label %60

; <label>:54:                                     ; preds = %39
  %55 = add i32 %.01, 1
  br label %33

; <label>:56:                                     ; preds = %33
  %57 = add i32 %.02, 1
  br label %24

; <label>:58:                                     ; preds = %24
  %59 = add i32 %.03, 1
  br label %9

; <label>:60:                                     ; preds = %9, %5, %2, %49
  %.0 = phi i32 [ %53, %49 ], [ -22, %2 ], [ -3, %5 ], [ -2, %9 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @task_pid_nr(%struct.task_struct*) #0 {
  %2 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 47
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @checkintf(%struct.usb_dev_state*, i32) #0 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %5 = load %struct.usb_device*, %struct.usb_device** %4, align 8
  %6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %5, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 7
  br i1 %8, label %27, label %9

; <label>:9:                                      ; preds = %2
  %10 = zext i32 %1 to i64
  %11 = icmp uge i64 %10, 64
  br i1 %11, label %27, label %12

; <label>:12:                                     ; preds = %9
  %13 = zext i32 %1 to i64
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 12
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %3, i64* %14, i64 %13) #4, !srcloc !4
  %15 = load i8, i8* %3, align 1
  %16 = trunc i8 %15 to i1
  br i1 %16, label %27, label %17

; <label>:17:                                     ; preds = %12
  %18 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %19 = load %struct.usb_device*, %struct.usb_device** %18, align 8
  %20 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %19, i32 0, i32 11
  %21 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %22 = call i32 @task_pid_nr(%struct.task_struct* %21)
  %23 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %24 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %23, i32 0, i32 77
  %25 = getelementptr inbounds [16 x i8], [16 x i8]* %24, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @dev_warn(%struct.device* %20, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.38, i32 0, i32 0), i32 %22, i8* %25, i32 %1)
  %26 = call i32 @claimintf(%struct.usb_dev_state* %0, i32 %1)
  br label %27

; <label>:27:                                     ; preds = %12, %9, %2, %17
  %.0 = phi i32 [ %26, %17 ], [ -113, %2 ], [ -22, %9 ], [ 0, %12 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @claimintf(%struct.usb_dev_state*, i32) #0 {
  %3 = alloca i8, align 1
  %4 = alloca i8, align 1
  %5 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %6 = load %struct.usb_device*, %struct.usb_device** %5, align 8
  %7 = zext i32 %1 to i64
  %8 = icmp uge i64 %7, 64
  br i1 %8, label %34, label %9

; <label>:9:                                      ; preds = %2
  %10 = zext i32 %1 to i64
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 12
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %4, i64* %11, i64 %10) #4, !srcloc !4
  %12 = load i8, i8* %4, align 1
  %13 = trunc i8 %12 to i1
  br i1 %13, label %34, label %14

; <label>:14:                                     ; preds = %9
  %15 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 15
  %16 = load i8, i8* %15, align 8
  %17 = trunc i8 %16 to i1
  br i1 %17, label %18, label %23

; <label>:18:                                     ; preds = %14
  %19 = zext i32 %1 to i64
  %20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 16
  call void asm sideeffect "bt $2,$1\0A\09\0A\09setc $0\0A", "=*qm,*m,Ir,~{dirflag},~{fpsr},~{flags}"(i8* %3, i64* %20, i64 %19) #4, !srcloc !4
  %21 = load i8, i8* %3, align 1
  %22 = trunc i8 %21 to i1
  br i1 %22, label %23, label %34

; <label>:23:                                     ; preds = %18, %14
  %24 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %6, i32 %1)
  %25 = icmp ne %struct.usb_interface* %24, null
  br i1 %25, label %26, label %29

; <label>:26:                                     ; preds = %23
  %27 = bitcast %struct.usb_dev_state* %0 to i8*
  %28 = call i32 @usb_driver_claim_interface(%struct.usb_driver* @usbfs_driver, %struct.usb_interface* %24, i8* %27)
  br label %29

; <label>:29:                                     ; preds = %23, %26
  %.0 = phi i32 [ %28, %26 ], [ -2, %23 ]
  %30 = icmp eq i32 %.0, 0
  br i1 %30, label %31, label %34

; <label>:31:                                     ; preds = %29
  %32 = zext i32 %1 to i64
  %33 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 12
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; bts $1,$0", "=*m,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %33, i64 %32, i64* %33) #4, !srcloc !44
  br label %34

; <label>:34:                                     ; preds = %29, %31, %18, %9, %2
  %.01 = phi i32 [ -22, %2 ], [ 0, %9 ], [ -13, %18 ], [ %.0, %31 ], [ %.0, %29 ]
  ret i32 %.01
}

declare %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device*, i32) #1

declare i32 @usb_driver_claim_interface(%struct.usb_driver*, %struct.usb_interface*, i8*) #1

; Function Attrs: noinline nounwind uwtable
define internal i64 @atomic64_read(%struct.atomic64_t*) #0 {
  %2 = alloca %union.anon.63, align 8
  %3 = getelementptr inbounds %struct.atomic64_t, %struct.atomic64_t* %0, i32 0, i32 0
  %4 = bitcast i64* %3 to i8*
  %5 = bitcast %union.anon.63* %2 to [1 x i8]*
  %6 = getelementptr inbounds [1 x i8], [1 x i8]* %5, i32 0, i32 0
  %7 = bitcast i8* %4 to i64*
  %8 = load volatile i64, i64* %7, align 8
  %9 = bitcast i8* %6 to i64*
  store i64 %8, i64* %9, align 8
  %10 = bitcast %union.anon.63* %2 to i64*
  %11 = load i64, i64* %10, align 8
  ret i64 %11
}

declare void @print_hex_dump(i8*, i8*, i32, i32, i32, i8*, i64, i1 zeroext) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @usb_maxpacket(%struct.usb_device*, i32, i32) #0 {
  %4 = ashr i32 %1, 15
  %5 = and i32 %4, 15
  %6 = icmp ne i32 %2, 0
  %7 = and i32 %1, 128
  %8 = icmp ne i32 %7, 0
  %9 = xor i1 %8, true
  %10 = xor i1 %9, true
  br i1 %6, label %11, label %27

; <label>:11:                                     ; preds = %3
  %12 = zext i1 %10 to i32
  %13 = icmp ne i32 %12, 0
  %14 = xor i1 %13, true
  %15 = xor i1 %14, true
  %16 = zext i1 %15 to i32
  %17 = sext i32 %16 to i64
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %19, label %20

; <label>:19:                                     ; preds = %11
  call void @warn_slowpath_null(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i32 0, i32 0), i32 1854)
  br label %20

; <label>:20:                                     ; preds = %19, %11
  %21 = icmp ne i32 %12, 0
  %22 = xor i1 %21, true
  %23 = xor i1 %22, true
  %24 = zext i1 %23 to i32
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 17
  br label %44

; <label>:27:                                     ; preds = %3
  %28 = xor i1 %10, true
  %29 = zext i1 %28 to i32
  %30 = icmp ne i32 %29, 0
  %31 = xor i1 %30, true
  %32 = xor i1 %31, true
  %33 = zext i1 %32 to i32
  %34 = sext i32 %33 to i64
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %36, label %37

; <label>:36:                                     ; preds = %27
  call void @warn_slowpath_null(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.50, i32 0, i32 0), i32 1857)
  br label %37

; <label>:37:                                     ; preds = %36, %27
  %38 = icmp ne i32 %29, 0
  %39 = xor i1 %38, true
  %40 = xor i1 %39, true
  %41 = zext i1 %40 to i32
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 16
  br label %44

; <label>:44:                                     ; preds = %37, %20
  %.sink2 = phi [16 x %struct.usb_host_endpoint*]* [ %43, %37 ], [ %26, %20 ]
  %45 = zext i32 %5 to i64
  %46 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %.sink2, i64 0, i64 %45
  %47 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %46, align 8
  %48 = icmp ne %struct.usb_host_endpoint* %47, null
  br i1 %48, label %49, label %53

; <label>:49:                                     ; preds = %44
  %50 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %47, i32 0, i32 0
  %51 = call i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor* %50)
  %52 = trunc i32 %51 to i16
  br label %53

; <label>:53:                                     ; preds = %44, %49
  %.0 = phi i16 [ %52, %49 ], [ 0, %44 ]
  ret i16 %.0
}

declare i32 @usb_bulk_msg(%struct.usb_device*, i32, i8*, i32, i32*, i32) #1

declare void @warn_slowpath_null(i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_maxp(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 4
  %3 = load i16, i16* %2, align 1
  %4 = zext i16 %3 to i32
  %5 = and i32 %4, 2047
  ret i32 %5
}

declare noalias i8* @__kmalloc(i64, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @check_reset_of_active_ep(%struct.usb_device*, i32, i8*) #0 {
  %4 = and i32 %1, 128
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 17
  %7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 16
  %.sink = select i1 %5, [16 x %struct.usb_host_endpoint*]* %7, [16 x %struct.usb_host_endpoint*]* %6
  %8 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %.sink, i32 0, i32 0
  %9 = and i32 %1, 15
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %8, i64 %10
  %12 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %11, align 8
  %13 = icmp ne %struct.usb_host_endpoint* %12, null
  br i1 %13, label %14, label %25

; <label>:14:                                     ; preds = %3
  %15 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %12, i32 0, i32 4
  %16 = call i32 @list_empty(%struct.list_head* %15)
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %25, label %18

; <label>:18:                                     ; preds = %14
  %19 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 11
  %20 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %21 = call i32 @task_pid_nr(%struct.task_struct* %20)
  %22 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %23 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %22, i32 0, i32 77
  %24 = getelementptr inbounds [16 x i8], [16 x i8]* %23, i32 0, i32 0
  call void (%struct.device*, i8*, ...) @dev_warn(%struct.device* %19, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.52, i32 0, i32 0), i32 %21, i8* %24, i8* %2, i32 %1)
  br label %25

; <label>:25:                                     ; preds = %18, %14, %3
  ret void
}

declare void @usb_reset_endpoint(%struct.usb_device*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_interface_claimed(%struct.usb_interface*) #0 {
  %2 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %0, i32 0, i32 7
  %3 = getelementptr inbounds %struct.device, %struct.device* %2, i32 0, i32 7
  %4 = load %struct.device_driver*, %struct.device_driver** %3, align 8
  %5 = icmp ne %struct.device_driver* %4, null
  %6 = zext i1 %5 to i32
  ret i32 %6
}

declare i32 @usb_reset_device(%struct.usb_device*) #1

declare i32 @usb_clear_halt(%struct.usb_device*, i32) #1

declare i64 @strlcpy(i8*, i8*, i64) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #2

declare i32 @usb_set_interface(%struct.usb_device*, i32, i32) #1

declare i32 @usb_reset_configuration(%struct.usb_device*) #1

declare i32 @usb_set_configuration(%struct.usb_device*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_do_submiturb(%struct.usb_dev_state*, %struct.usbdevfs_urb*, %struct.usbdevfs_iso_packet_desc*, i8*) #0 {
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, -232
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %772, label %11

; <label>:11:                                     ; preds = %4
  %12 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %13 = load i32, i32* %12, align 8
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %19

; <label>:15:                                     ; preds = %11
  %16 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %17 = load i8*, i8** %16, align 8
  %18 = icmp ne i8* %17, null
  br i1 %18, label %19, label %772

; <label>:19:                                     ; preds = %15, %11
  %20 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  %21 = load i8, i8* %20, align 8
  %22 = zext i8 %21 to i32
  %23 = icmp eq i32 %22, 2
  br i1 %23, label %24, label %30

; <label>:24:                                     ; preds = %19
  %25 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i32
  %28 = and i32 %27, -129
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %41, label %30

; <label>:30:                                     ; preds = %24, %19
  %31 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %32 = load %struct.usb_device*, %struct.usb_device** %31, align 8
  %33 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = zext i8 %34 to i32
  %36 = call i32 @findintfep(%struct.usb_device* %32, i32 %35)
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %772, label %38

; <label>:38:                                     ; preds = %30
  %39 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %36)
  %40 = icmp ne i32 %39, 0
  br i1 %40, label %772, label %41

; <label>:41:                                     ; preds = %38, %24
  %.02 = phi i32 [ -1, %24 ], [ %36, %38 ]
  %42 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %43 = load %struct.usb_device*, %struct.usb_device** %42, align 8
  %44 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = call %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device* %43, i8 zeroext %45)
  %47 = icmp ne %struct.usb_host_endpoint* %46, null
  br i1 %47, label %48, label %772

; <label>:48:                                     ; preds = %41
  %49 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = and i32 %51, 128
  %53 = icmp ne i32 %52, 0
  %54 = zext i1 %53 to i32
  %55 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  %56 = load i8, i8* %55, align 8
  %57 = zext i8 %56 to i32
  switch i32 %57, label %772 [
    i32 2, label %58
    i32 3, label %160
    i32 1, label %189
    i32 0, label %193
  ]

; <label>:58:                                     ; preds = %48
  %59 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %60 = call i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor* %59)
  %61 = icmp ne i32 %60, 0
  br i1 %61, label %62, label %772

; <label>:62:                                     ; preds = %58
  %63 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %64 = load i32, i32* %63, align 8
  %65 = icmp slt i32 %64, 8
  br i1 %65, label %772, label %66

; <label>:66:                                     ; preds = %62
  %67 = call noalias i8* @__kmalloc(i64 8, i32 20971712) #4
  %68 = bitcast i8* %67 to %struct.usb_ctrlrequest*
  %69 = icmp ne %struct.usb_ctrlrequest* %68, null
  br i1 %69, label %70, label %772

; <label>:70:                                     ; preds = %66
  %71 = bitcast %struct.usb_ctrlrequest* %68 to i8*
  %72 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %73 = load i8*, i8** %72, align 8
  %74 = call i64 @llvm.objectsize.i64.p0i8(i8* %71, i1 false) #4
  %75 = trunc i64 %74 to i32
  call void @might_fault() #4
  %76 = trunc i64 8 to i32
  call void @kasan_check_write(i8* %71, i32 %76) #4
  %77 = icmp slt i32 %75, 0
  %78 = sext i32 %75 to i64
  %79 = icmp uge i64 %78, 8
  %80 = select i1 %77, i1 true, i1 %79
  %81 = xor i1 %80, true
  %82 = zext i1 %80 to i32
  %83 = sext i32 %82 to i64
  br i1 %80, label %84, label %87

; <label>:84:                                     ; preds = %70
  call void @check_object_size(i8* %71, i64 8, i1 zeroext false) #4
  %85 = trunc i64 8 to i32
  %86 = call i64 @_copy_from_user(i8* %71, i8* %73, i32 %85) #4
  br label %88

; <label>:87:                                     ; preds = %70
  call void @copy_user_overflow(i32 %75, i64 8) #4
  br label %88

; <label>:88:                                     ; preds = %87, %84
  %.024 = phi i64 [ %86, %84 ], [ 8, %87 ]
  %89 = icmp ne i64 %.024, 0
  br i1 %89, label %755, label %90

; <label>:90:                                     ; preds = %88
  %91 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %92 = load i32, i32* %91, align 8
  %93 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 4
  %94 = load i16, i16* %93, align 2
  %95 = zext i16 %94 to i32
  %96 = add nsw i32 %95, 8
  %97 = icmp slt i32 %92, %96
  br i1 %97, label %755, label %98

; <label>:98:                                     ; preds = %90
  %99 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 0
  %100 = load i8, i8* %99, align 1
  %101 = zext i8 %100 to i32
  %102 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 3
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = call i32 @check_ctrlrecip(%struct.usb_dev_state* %0, i32 %101, i32 %104, i32 %107)
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %755, label %110

; <label>:110:                                    ; preds = %98
  %111 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 4
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr i8, i8* %116, i64 8
  store i8* %117, i8** %115, align 8
  %118 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i32
  %121 = and i32 %120, 128
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %123, label %132

; <label>:123:                                    ; preds = %110
  %124 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %125 = load i32, i32* %124, align 8
  %126 = icmp ne i32 %125, 0
  br i1 %126, label %127, label %132

; <label>:127:                                    ; preds = %123
  %128 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %129 = load i8, i8* %128, align 1
  %130 = zext i8 %129 to i32
  %131 = or i32 %130, 128
  br label %137

; <label>:132:                                    ; preds = %123, %110
  %133 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = and i32 %135, -129
  br label %137

; <label>:137:                                    ; preds = %132, %127
  %.sink27 = phi i32 [ %136, %132 ], [ %131, %127 ]
  %.sink26 = phi i8* [ %133, %132 ], [ %128, %127 ]
  %.05 = phi i32 [ 1, %127 ], [ 0, %132 ]
  %138 = trunc i32 %.sink27 to i8
  store i8 %138, i8* %.sink26, align 1
  %139 = load i8, i8* @usbfs_snoop, align 1
  %140 = trunc i8 %139 to i1
  br i1 %140, label %141, label %243

; <label>:141:                                    ; preds = %137
  %142 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %143 = load %struct.usb_device*, %struct.usb_device** %142, align 8
  %144 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %143, i32 0, i32 11
  %145 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 0
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i32
  %148 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 1
  %149 = load i8, i8* %148, align 1
  %150 = zext i8 %149 to i32
  %151 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 2
  %152 = load i16, i16* %151, align 2
  %153 = zext i16 %152 to i32
  %154 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 3
  %155 = load i16, i16* %154, align 2
  %156 = zext i16 %155 to i32
  %157 = getelementptr inbounds %struct.usb_ctrlrequest, %struct.usb_ctrlrequest* %68, i32 0, i32 4
  %158 = load i16, i16* %157, align 2
  %159 = zext i16 %158 to i32
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %144, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.34, i32 0, i32 0), i32 %147, i32 %150, i32 %153, i32 %156, i32 %159)
  br label %243

; <label>:160:                                    ; preds = %48
  %161 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %162 = call i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor* %161)
  switch i32 %162, label %165 [
    i32 0, label %772
    i32 1, label %772
    i32 3, label %163
  ]

; <label>:163:                                    ; preds = %160
  %164 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  store i8 1, i8* %164, align 8
  br label %243

; <label>:165:                                    ; preds = %160
  %166 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %167 = load i32, i32* %166, align 8
  %168 = add nsw i32 %167, 16384
  %169 = sub nsw i32 %168, 1
  %170 = sdiv i32 %169, 16384
  %171 = icmp eq i32 %170, 1
  br i1 %171, label %180, label %172

; <label>:172:                                    ; preds = %165
  %173 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %174 = load %struct.usb_device*, %struct.usb_device** %173, align 8
  %175 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %174, i32 0, i32 9
  %176 = load %struct.usb_bus*, %struct.usb_bus** %175, align 8
  %177 = getelementptr inbounds %struct.usb_bus, %struct.usb_bus* %176, i32 0, i32 7
  %178 = load i32, i32* %177, align 4
  %179 = icmp ugt i32 %170, %178
  br i1 %179, label %180, label %181

; <label>:180:                                    ; preds = %172, %165
  br label %181

; <label>:181:                                    ; preds = %180, %172
  %.03 = phi i32 [ 0, %180 ], [ %170, %172 ]
  %182 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 10
  %183 = load i32, i32* %182, align 8
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %185, label %243

; <label>:185:                                    ; preds = %181
  %186 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 8
  %187 = bitcast %union.anon.62* %186 to i32*
  %188 = load i32, i32* %187, align 4
  br label %243

; <label>:189:                                    ; preds = %48
  %190 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %191 = call i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor* %190)
  %192 = icmp ne i32 %191, 0
  br i1 %192, label %243, label %772

; <label>:193:                                    ; preds = %48
  %194 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 8
  %195 = bitcast %union.anon.62* %194 to i32*
  %196 = load i32, i32* %195, align 4
  %197 = icmp slt i32 %196, 1
  br i1 %197, label %772, label %198

; <label>:198:                                    ; preds = %193
  %199 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 8
  %200 = bitcast %union.anon.62* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = icmp sgt i32 %201, 128
  br i1 %202, label %772, label %203

; <label>:203:                                    ; preds = %198
  %204 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %205 = call i32 @usb_endpoint_xfer_isoc(%struct.usb_endpoint_descriptor* %204)
  %206 = icmp ne i32 %205, 0
  br i1 %206, label %207, label %772

; <label>:207:                                    ; preds = %203
  %208 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 8
  %209 = bitcast %union.anon.62* %208 to i32*
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = mul i64 12, %211
  %213 = trunc i64 %212 to i32
  %214 = bitcast %struct.usbdevfs_iso_packet_desc* %2 to i8*
  %215 = zext i32 %213 to i64
  %216 = call i8* @memdup_user(i8* %214, i64 %215)
  %217 = bitcast i8* %216 to %struct.usbdevfs_iso_packet_desc*
  %218 = bitcast %struct.usbdevfs_iso_packet_desc* %217 to i8*
  %219 = call zeroext i1 @IS_ERR(i8* %218)
  br i1 %219, label %220, label %224

; <label>:220:                                    ; preds = %207
  %221 = bitcast %struct.usbdevfs_iso_packet_desc* %217 to i8*
  %222 = call i64 @PTR_ERR(i8* %221)
  %223 = trunc i64 %222 to i32
  br label %755

; <label>:224:                                    ; preds = %207, %232
  %.014 = phi i32 [ %238, %232 ], [ 0, %207 ]
  %.011 = phi i32 [ %237, %232 ], [ 0, %207 ]
  %225 = icmp ult i32 %.014, %210
  %226 = zext i32 %.014 to i64
  br i1 %225, label %227, label %239

; <label>:227:                                    ; preds = %224
  %228 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %217, i64 %226
  %229 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %228, i32 0, i32 0
  %230 = load i32, i32* %229, align 4
  %231 = icmp ugt i32 %230, 49152
  br i1 %231, label %755, label %232

; <label>:232:                                    ; preds = %227
  %233 = zext i32 %.014 to i64
  %234 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %217, i64 %233
  %235 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %234, i32 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = add i32 %.011, %236
  %238 = add i32 %.014, 1
  br label %224

; <label>:239:                                    ; preds = %224
  %240 = mul i64 %226, 16
  %241 = trunc i64 %240 to i32
  %242 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  store i32 %.011, i32* %242, align 8
  br label %243

; <label>:243:                                    ; preds = %163, %189, %181, %185, %141, %137, %239
  %.021 = phi %struct.usbdevfs_iso_packet_desc* [ %217, %239 ], [ null, %137 ], [ null, %141 ], [ null, %185 ], [ null, %181 ], [ null, %189 ], [ null, %163 ]
  %.017 = phi %struct.usb_ctrlrequest* [ null, %239 ], [ %68, %137 ], [ %68, %141 ], [ null, %185 ], [ null, %181 ], [ null, %189 ], [ null, %163 ]
  %.115 = phi i32 [ %241, %239 ], [ 8, %137 ], [ 8, %141 ], [ 0, %185 ], [ 0, %181 ], [ 0, %189 ], [ 0, %163 ]
  %.16 = phi i32 [ %54, %239 ], [ %.05, %137 ], [ %.05, %141 ], [ %54, %185 ], [ %54, %181 ], [ %54, %189 ], [ %54, %163 ]
  %.14 = phi i32 [ 0, %239 ], [ 0, %137 ], [ 0, %141 ], [ %.03, %185 ], [ %.03, %181 ], [ 0, %189 ], [ 0, %163 ]
  %.01 = phi i32 [ %210, %239 ], [ 0, %137 ], [ 0, %141 ], [ 0, %185 ], [ 0, %181 ], [ 0, %189 ], [ 0, %163 ]
  %.1 = phi i32 [ 0, %239 ], [ 0, %137 ], [ 0, %141 ], [ %188, %185 ], [ 0, %181 ], [ 0, %189 ], [ 0, %163 ]
  %244 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 0
  br i1 %246, label %247, label %268

; <label>:247:                                    ; preds = %243
  %248 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %249 = load i8*, i8** %248, align 8
  %250 = ptrtoint i8* %249 to i64
  %251 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %252 = load i32, i32* %251, align 8
  %253 = sext i32 %252 to i64
  %254 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %255 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %254, i32 0, i32 151
  %256 = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %255, i32 0, i32 19
  %257 = getelementptr inbounds %struct.mm_segment_t, %struct.mm_segment_t* %256, i32 0, i32 0
  %258 = load i64, i64* %257, align 8
  %259 = call zeroext i1 @__chk_range_not_ok(i64 %250, i64 %253, i64 %258)
  %260 = zext i1 %259 to i8
  %261 = trunc i8 %260 to i1
  %262 = xor i1 %261, true
  %263 = xor i1 %262, true
  %264 = xor i1 %263, true
  %265 = zext i1 %264 to i32
  %266 = sext i32 %265 to i64
  %267 = icmp ne i64 %266, 0
  br i1 %267, label %268, label %755

; <label>:268:                                    ; preds = %247, %243
  %269 = call %struct.async* @alloc_async(i32 %.01)
  %270 = icmp ne %struct.async* %269, null
  br i1 %270, label %271, label %755

; <label>:271:                                    ; preds = %268
  %272 = call %struct.usb_memory* @find_memory_area(%struct.usb_dev_state* %0, %struct.usbdevfs_urb* %1)
  %273 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  store %struct.usb_memory* %272, %struct.usb_memory** %273, align 8
  %274 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %275 = load %struct.usb_memory*, %struct.usb_memory** %274, align 8
  %276 = bitcast %struct.usb_memory* %275 to i8*
  %277 = call zeroext i1 @IS_ERR(i8* %276)
  %278 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %279 = load %struct.usb_memory*, %struct.usb_memory** %278, align 8
  br i1 %277, label %280, label %285

; <label>:280:                                    ; preds = %271
  %281 = bitcast %struct.usb_memory* %279 to i8*
  %282 = call i64 @PTR_ERR(i8* %281)
  %283 = trunc i64 %282 to i32
  %284 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  store %struct.usb_memory* null, %struct.usb_memory** %284, align 8
  br label %755

; <label>:285:                                    ; preds = %271
  %286 = icmp ne %struct.usb_memory* %279, null
  %..14 = select i1 %286, i32 0, i32 %.14
  %287 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %288 = load i32, i32* %287, align 8
  %289 = sext i32 %288 to i64
  %290 = add i64 288, %289
  %291 = sext i32 %..14 to i64
  %292 = mul i64 %291, 32
  %293 = add i64 %290, %292
  %294 = zext i32 %.115 to i64
  %295 = add i64 %294, %293
  %296 = trunc i64 %295 to i32
  %297 = zext i32 %296 to i64
  %298 = call i32 @usbfs_increase_memory_usage(i64 %297)
  %299 = icmp ne i32 %298, 0
  br i1 %299, label %755, label %300

; <label>:300:                                    ; preds = %285
  %301 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 10
  store i32 %296, i32* %301, align 8
  %302 = icmp ne i32 %..14, 0
  br i1 %302, label %303, label %377

; <label>:303:                                    ; preds = %300
  %304 = sext i32 %..14 to i64
  %305 = mul i64 %304, 32
  %306 = call noalias i8* @__kmalloc(i64 %305, i32 20971712) #4
  %307 = bitcast i8* %306 to %struct.scatterlist*
  %308 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %309 = load %struct.urb*, %struct.urb** %308, align 8
  %310 = getelementptr inbounds %struct.urb, %struct.urb* %309, i32 0, i32 16
  store %struct.scatterlist* %307, %struct.scatterlist** %310, align 8
  %311 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %312 = load %struct.urb*, %struct.urb** %311, align 8
  %313 = getelementptr inbounds %struct.urb, %struct.urb* %312, i32 0, i32 16
  %314 = load %struct.scatterlist*, %struct.scatterlist** %313, align 8
  %315 = icmp ne %struct.scatterlist* %314, null
  br i1 %315, label %316, label %755

; <label>:316:                                    ; preds = %303
  %317 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %318 = load %struct.urb*, %struct.urb** %317, align 8
  %319 = getelementptr inbounds %struct.urb, %struct.urb* %318, i32 0, i32 18
  store i32 %..14, i32* %319, align 4
  %320 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %321 = load %struct.urb*, %struct.urb** %320, align 8
  %322 = getelementptr inbounds %struct.urb, %struct.urb* %321, i32 0, i32 16
  %323 = load %struct.scatterlist*, %struct.scatterlist** %322, align 8
  %324 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %325 = load %struct.urb*, %struct.urb** %324, align 8
  %326 = getelementptr inbounds %struct.urb, %struct.urb* %325, i32 0, i32 18
  %327 = load i32, i32* %326, align 4
  call void @sg_init_table(%struct.scatterlist* %323, i32 %327)
  %328 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %329 = load i32, i32* %328, align 8
  br label %330

; <label>:330:                                    ; preds = %374, %316
  %.112 = phi i32 [ %329, %316 ], [ %375, %374 ]
  %.010 = phi i32 [ 0, %316 ], [ %376, %374 ]
  %331 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %332 = load %struct.urb*, %struct.urb** %331, align 8
  %333 = getelementptr inbounds %struct.urb, %struct.urb* %332, i32 0, i32 18
  %334 = load i32, i32* %333, align 4
  %335 = icmp slt i32 %.010, %334
  br i1 %335, label %336, label %456

; <label>:336:                                    ; preds = %330
  %337 = icmp ugt i32 %.112, 16384
  %..112 = select i1 %337, i32 16384, i32 %.112
  %338 = zext i32 %..112 to i64
  %339 = call noalias i8* @__kmalloc(i64 %338, i32 20971712) #4
  %340 = icmp ne i8* %339, null
  br i1 %340, label %341, label %755

; <label>:341:                                    ; preds = %336
  %342 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %343 = load %struct.urb*, %struct.urb** %342, align 8
  %344 = getelementptr inbounds %struct.urb, %struct.urb* %343, i32 0, i32 16
  %345 = load %struct.scatterlist*, %struct.scatterlist** %344, align 8
  %346 = sext i32 %.010 to i64
  %347 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %345, i64 %346
  call void @sg_set_buf(%struct.scatterlist* %347, i8* %339, i32 %..112)
  %348 = icmp ne i32 %.16, 0
  br i1 %348, label %374, label %349

; <label>:349:                                    ; preds = %341
  %350 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %351 = load i8*, i8** %350, align 8
  %352 = zext i32 %..112 to i64
  %353 = call i64 @llvm.objectsize.i64.p0i8(i8* %339, i1 false) #4
  %354 = trunc i64 %353 to i32
  call void @might_fault() #4
  %355 = trunc i64 %352 to i32
  call void @kasan_check_write(i8* %339, i32 %355) #4
  %356 = icmp slt i32 %354, 0
  %357 = sext i32 %354 to i64
  %358 = icmp uge i64 %357, %352
  %359 = select i1 %356, i1 true, i1 %358
  %360 = xor i1 %359, true
  %361 = zext i1 %359 to i32
  %362 = sext i32 %361 to i64
  br i1 %359, label %363, label %366

; <label>:363:                                    ; preds = %349
  call void @check_object_size(i8* %339, i64 %352, i1 zeroext false) #4
  %364 = trunc i64 %352 to i32
  %365 = call i64 @_copy_from_user(i8* %339, i8* %351, i32 %364) #4
  br label %367

; <label>:366:                                    ; preds = %349
  call void @copy_user_overflow(i32 %354, i64 %352) #4
  br label %367

; <label>:367:                                    ; preds = %366, %363
  %.025 = phi i64 [ %365, %363 ], [ %352, %366 ]
  %368 = icmp ne i64 %.025, 0
  br i1 %368, label %755, label %369

; <label>:369:                                    ; preds = %367
  %370 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %371 = load i8*, i8** %370, align 8
  %372 = zext i32 %..112 to i64
  %373 = getelementptr i8, i8* %371, i64 %372
  store i8* %373, i8** %370, align 8
  br label %374

; <label>:374:                                    ; preds = %369, %341
  %375 = sub i32 %.112, %..112
  %376 = add nsw i32 %.010, 1
  br label %330

; <label>:377:                                    ; preds = %300
  %378 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %379 = load i32, i32* %378, align 8
  %380 = icmp sgt i32 %379, 0
  br i1 %380, label %381, label %456

; <label>:381:                                    ; preds = %377
  %382 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %383 = load %struct.usb_memory*, %struct.usb_memory** %382, align 8
  %384 = icmp ne %struct.usb_memory* %383, null
  br i1 %384, label %385, label %402

; <label>:385:                                    ; preds = %381
  %386 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %387 = load i8*, i8** %386, align 8
  %388 = ptrtoint i8* %387 to i64
  %389 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %390 = load %struct.usb_memory*, %struct.usb_memory** %389, align 8
  %391 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %390, i32 0, i32 4
  %392 = load i8*, i8** %391, align 8
  %393 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %394 = load %struct.usb_memory*, %struct.usb_memory** %393, align 8
  %395 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %394, i32 0, i32 6
  %396 = load i64, i64* %395, align 8
  %397 = sub i64 %388, %396
  %398 = getelementptr i8, i8* %392, i64 %397
  %399 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %400 = load %struct.urb*, %struct.urb** %399, align 8
  %401 = getelementptr inbounds %struct.urb, %struct.urb* %400, i32 0, i32 14
  store i8* %398, i8** %401, align 8
  br label %456

; <label>:402:                                    ; preds = %381
  %403 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %404 = load i32, i32* %403, align 8
  %405 = sext i32 %404 to i64
  %406 = call noalias i8* @__kmalloc(i64 %405, i32 20971712) #4
  %407 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %408 = load %struct.urb*, %struct.urb** %407, align 8
  %409 = getelementptr inbounds %struct.urb, %struct.urb* %408, i32 0, i32 14
  store i8* %406, i8** %409, align 8
  %410 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %411 = load %struct.urb*, %struct.urb** %410, align 8
  %412 = getelementptr inbounds %struct.urb, %struct.urb* %411, i32 0, i32 14
  %413 = load i8*, i8** %412, align 8
  %414 = icmp ne i8* %413, null
  br i1 %414, label %415, label %755

; <label>:415:                                    ; preds = %402
  %416 = icmp ne i32 %.16, 0
  br i1 %416, label %443, label %417

; <label>:417:                                    ; preds = %415
  %418 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %419 = load %struct.urb*, %struct.urb** %418, align 8
  %420 = getelementptr inbounds %struct.urb, %struct.urb* %419, i32 0, i32 14
  %421 = load i8*, i8** %420, align 8
  %422 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %423 = load i8*, i8** %422, align 8
  %424 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %425 = load i32, i32* %424, align 8
  %426 = sext i32 %425 to i64
  %427 = call i64 @llvm.objectsize.i64.p0i8(i8* %421, i1 false) #4
  %428 = trunc i64 %427 to i32
  call void @might_fault() #4
  %429 = trunc i64 %426 to i32
  call void @kasan_check_write(i8* %421, i32 %429) #4
  %430 = icmp slt i32 %428, 0
  %431 = sext i32 %428 to i64
  %432 = icmp uge i64 %431, %426
  %433 = select i1 %430, i1 true, i1 %432
  %434 = xor i1 %433, true
  %435 = zext i1 %433 to i32
  %436 = sext i32 %435 to i64
  br i1 %433, label %437, label %440

; <label>:437:                                    ; preds = %417
  call void @check_object_size(i8* %421, i64 %426, i1 zeroext false) #4
  %438 = trunc i64 %426 to i32
  %439 = call i64 @_copy_from_user(i8* %421, i8* %423, i32 %438) #4
  br label %441

; <label>:440:                                    ; preds = %417
  call void @copy_user_overflow(i32 %428, i64 %426) #4
  br label %441

; <label>:441:                                    ; preds = %440, %437
  %.019 = phi i64 [ %439, %437 ], [ %426, %440 ]
  %442 = icmp ne i64 %.019, 0
  br i1 %442, label %755, label %456

; <label>:443:                                    ; preds = %415
  %444 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  %445 = load i8, i8* %444, align 8
  %446 = zext i8 %445 to i32
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %456

; <label>:448:                                    ; preds = %443
  %449 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %450 = load %struct.urb*, %struct.urb** %449, align 8
  %451 = getelementptr inbounds %struct.urb, %struct.urb* %450, i32 0, i32 14
  %452 = load i8*, i8** %451, align 8
  %453 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %454 = load i32, i32* %453, align 8
  %455 = sext i32 %454 to i64
  call void @llvm.memset.p0i8.i64(i8* %452, i8 0, i64 %455, i32 1, i1 false)
  br label %456

; <label>:456:                                    ; preds = %377, %441, %448, %443, %385, %330
  %457 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %458 = load %struct.usb_device*, %struct.usb_device** %457, align 8
  %459 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %460 = load %struct.urb*, %struct.urb** %459, align 8
  %461 = getelementptr inbounds %struct.urb, %struct.urb* %460, i32 0, i32 8
  store %struct.usb_device* %458, %struct.usb_device** %461, align 8
  %462 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  %463 = load i8, i8* %462, align 8
  %464 = zext i8 %463 to i32
  %465 = shl i32 %464, 30
  %466 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %467 = load %struct.usb_device*, %struct.usb_device** %466, align 8
  %468 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %469 = load i8, i8* %468, align 1
  %470 = zext i8 %469 to i32
  %471 = and i32 %470, 15
  %472 = call i32 @__create_pipe(%struct.usb_device* %467, i32 %471)
  %473 = or i32 %465, %472
  %474 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 1
  %475 = load i8, i8* %474, align 1
  %476 = zext i8 %475 to i32
  %477 = and i32 %476, 128
  %478 = or i32 %473, %477
  %479 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %480 = load %struct.urb*, %struct.urb** %479, align 8
  %481 = getelementptr inbounds %struct.urb, %struct.urb* %480, i32 0, i32 10
  store i32 %478, i32* %481, align 8
  %482 = icmp ne i32 %.16, 0
  %483 = select i1 %482, i32 512, i32 0
  %484 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %485 = load i32, i32* %484, align 8
  %486 = and i32 %485, 2
  %487 = icmp ne i32 %486, 0
  %488 = or i32 %483, 2
  %. = select i1 %487, i32 %488, i32 %483
  %489 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %490 = load i32, i32* %489, align 8
  %491 = and i32 %490, 1
  %492 = icmp ne i32 %491, 0
  %493 = icmp ne i32 %.16, 0
  %or.cond = and i1 %492, %493
  %494 = or i32 %., 1
  %.3 = select i1 %or.cond, i32 %494, i32 %.
  %495 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %496 = load i32, i32* %495, align 8
  %497 = and i32 %496, 32
  %498 = icmp ne i32 %497, 0
  %499 = or i32 %.3, 32
  %..3 = select i1 %498, i32 %499, i32 %.3
  %500 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %501 = load i32, i32* %500, align 8
  %502 = and i32 %501, 64
  %503 = icmp ne i32 %502, 0
  %504 = or i32 %..3, 64
  %.5 = select i1 %503, i32 %504, i32 %..3
  %505 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %506 = load i32, i32* %505, align 8
  %507 = and i32 %506, 128
  %508 = icmp ne i32 %507, 0
  %509 = or i32 %.5, 128
  %..5 = select i1 %508, i32 %509, i32 %.5
  %510 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %511 = load %struct.urb*, %struct.urb** %510, align 8
  %512 = getelementptr inbounds %struct.urb, %struct.urb* %511, i32 0, i32 13
  store i32 %..5, i32* %512, align 4
  %513 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %514 = load i32, i32* %513, align 8
  %515 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %516 = load %struct.urb*, %struct.urb** %515, align 8
  %517 = getelementptr inbounds %struct.urb, %struct.urb* %516, i32 0, i32 19
  store i32 %514, i32* %517, align 8
  %518 = bitcast %struct.usb_ctrlrequest* %.017 to i8*
  %519 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %520 = load %struct.urb*, %struct.urb** %519, align 8
  %521 = getelementptr inbounds %struct.urb, %struct.urb* %520, i32 0, i32 21
  store i8* %518, i8** %521, align 8
  %522 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 7
  %523 = load i32, i32* %522, align 8
  %524 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %525 = load %struct.urb*, %struct.urb** %524, align 8
  %526 = getelementptr inbounds %struct.urb, %struct.urb* %525, i32 0, i32 23
  store i32 %523, i32* %526, align 8
  %527 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %528 = load %struct.urb*, %struct.urb** %527, align 8
  %529 = getelementptr inbounds %struct.urb, %struct.urb* %528, i32 0, i32 24
  store i32 %.01, i32* %529, align 4
  %530 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %531 = load %struct.urb*, %struct.urb** %530, align 8
  %532 = getelementptr inbounds %struct.urb, %struct.urb* %531, i32 0, i32 11
  store i32 %.1, i32* %532, align 4
  %533 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %534 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %533, i32 0, i32 5
  %535 = load i8, i8* %534, align 2
  %536 = icmp ne i8 %535, 0
  br i1 %536, label %537, label %578

; <label>:537:                                    ; preds = %456
  %538 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 0
  %539 = load i8, i8* %538, align 8
  %540 = zext i8 %539 to i32
  %541 = icmp eq i32 %540, 0
  br i1 %541, label %554, label %542

; <label>:542:                                    ; preds = %537
  %543 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %544 = load %struct.usb_device*, %struct.usb_device** %543, align 8
  %545 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %544, i32 0, i32 4
  %546 = load i32, i32* %545, align 4
  %547 = icmp eq i32 %546, 3
  br i1 %547, label %554, label %548

; <label>:548:                                    ; preds = %542
  %549 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %550 = load %struct.usb_device*, %struct.usb_device** %549, align 8
  %551 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %550, i32 0, i32 4
  %552 = load i32, i32* %551, align 4
  %553 = icmp uge i32 %552, 5
  br i1 %553, label %554, label %569

; <label>:554:                                    ; preds = %548, %542, %537
  store i32 15, i32* %5, align 4
  %555 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %556 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %555, i32 0, i32 5
  %557 = load i8, i8* %556, align 2
  %558 = zext i8 %557 to i32
  %559 = sub nsw i32 %558, 1
  store i32 %559, i32* %6, align 4
  %560 = icmp eq i32* %5, %6
  %561 = zext i1 %560 to i32
  %562 = load i32, i32* %5, align 4
  %563 = load i32, i32* %6, align 4
  %564 = icmp slt i32 %562, %563
  %565 = load i32, i32* %5, align 4
  %566 = load i32, i32* %6, align 4
  %567 = select i1 %564, i32 %565, i32 %566
  %568 = shl i32 1, %567
  br label %574

; <label>:569:                                    ; preds = %548
  %570 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %571 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %570, i32 0, i32 5
  %572 = load i8, i8* %571, align 2
  %573 = zext i8 %572 to i32
  br label %574

; <label>:574:                                    ; preds = %569, %554
  %.sink = phi i32 [ %573, %569 ], [ %568, %554 ]
  %575 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %576 = load %struct.urb*, %struct.urb** %575, align 8
  %577 = getelementptr inbounds %struct.urb, %struct.urb* %576, i32 0, i32 25
  store i32 %.sink, i32* %577, align 8
  br label %578

; <label>:578:                                    ; preds = %574, %456
  %579 = bitcast %struct.async* %269 to i8*
  %580 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %581 = load %struct.urb*, %struct.urb** %580, align 8
  %582 = getelementptr inbounds %struct.urb, %struct.urb* %581, i32 0, i32 27
  store i8* %579, i8** %582, align 8
  %583 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %584 = load %struct.urb*, %struct.urb** %583, align 8
  %585 = getelementptr inbounds %struct.urb, %struct.urb* %584, i32 0, i32 28
  store void (%struct.urb*)* @async_completed, void (%struct.urb*)** %585, align 8
  br label %586

; <label>:586:                                    ; preds = %588, %578
  %.7 = phi i32 [ 0, %578 ], [ %610, %588 ]
  %.213 = phi i32 [ 0, %578 ], [ %609, %588 ]
  %587 = icmp ult i32 %.7, %.01
  br i1 %587, label %588, label %611

; <label>:588:                                    ; preds = %586
  %589 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %590 = load %struct.urb*, %struct.urb** %589, align 8
  %591 = getelementptr inbounds %struct.urb, %struct.urb* %590, i32 0, i32 29
  %592 = zext i32 %.7 to i64
  %593 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %591, i64 0, i64 %592
  %594 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %593, i32 0, i32 0
  store i32 %.213, i32* %594, align 8
  %595 = zext i32 %.7 to i64
  %596 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %.021, i64 %595
  %597 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %596, i32 0, i32 0
  %598 = load i32, i32* %597, align 4
  %599 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %600 = load %struct.urb*, %struct.urb** %599, align 8
  %601 = getelementptr inbounds %struct.urb, %struct.urb* %600, i32 0, i32 29
  %602 = zext i32 %.7 to i64
  %603 = getelementptr inbounds [0 x %struct.usb_iso_packet_descriptor], [0 x %struct.usb_iso_packet_descriptor]* %601, i64 0, i64 %602
  %604 = getelementptr inbounds %struct.usb_iso_packet_descriptor, %struct.usb_iso_packet_descriptor* %603, i32 0, i32 1
  store i32 %598, i32* %604, align 4
  %605 = zext i32 %.7 to i64
  %606 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %.021, i64 %605
  %607 = getelementptr inbounds %struct.usbdevfs_iso_packet_desc, %struct.usbdevfs_iso_packet_desc* %606, i32 0, i32 0
  %608 = load i32, i32* %607, align 4
  %609 = add i32 %.213, %608
  %610 = add i32 %.7, 1
  br label %586

; <label>:611:                                    ; preds = %586
  %612 = bitcast %struct.usbdevfs_iso_packet_desc* %.021 to i8*
  call void @kfree(i8* %612)
  %613 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 1
  store %struct.usb_dev_state* %0, %struct.usb_dev_state** %613, align 8
  %614 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 7
  store i8* %3, i8** %614, align 8
  %615 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %616 = load %struct.usb_memory*, %struct.usb_memory** %615, align 8
  %617 = icmp ne %struct.usb_memory* %616, null
  br i1 %617, label %618, label %640

; <label>:618:                                    ; preds = %611
  %619 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %620 = load i8*, i8** %619, align 8
  %621 = ptrtoint i8* %620 to i64
  %622 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %623 = load %struct.urb*, %struct.urb** %622, align 8
  %624 = getelementptr inbounds %struct.urb, %struct.urb* %623, i32 0, i32 13
  %625 = load i32, i32* %624, align 4
  %626 = or i32 %625, 4
  store i32 %626, i32* %624, align 4
  %627 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %628 = load %struct.usb_memory*, %struct.usb_memory** %627, align 8
  %629 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %628, i32 0, i32 5
  %630 = load i64, i64* %629, align 8
  %631 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 9
  %632 = load %struct.usb_memory*, %struct.usb_memory** %631, align 8
  %633 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %632, i32 0, i32 6
  %634 = load i64, i64* %633, align 8
  %635 = sub i64 %621, %634
  %636 = add i64 %630, %635
  %637 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %638 = load %struct.urb*, %struct.urb** %637, align 8
  %639 = getelementptr inbounds %struct.urb, %struct.urb* %638, i32 0, i32 15
  store i64 %636, i64* %639, align 8
  br label %650

; <label>:640:                                    ; preds = %611
  %641 = icmp ne i32 %.16, 0
  br i1 %641, label %642, label %650

; <label>:642:                                    ; preds = %640
  %643 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %644 = load i32, i32* %643, align 8
  %645 = icmp sgt i32 %644, 0
  br i1 %645, label %646, label %650

; <label>:646:                                    ; preds = %642
  %647 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %648 = load i8*, i8** %647, align 8
  %649 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 6
  store i8* %648, i8** %649, align 8
  br label %650

; <label>:650:                                    ; preds = %640, %642, %646, %618
  %651 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 10
  %652 = load i32, i32* %651, align 4
  %653 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 4
  store i32 %652, i32* %653, align 8
  %654 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 5
  store i32 %.02, i32* %654, align 4
  %655 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %656 = call %struct.pid* @task_pid(%struct.task_struct* %655)
  %657 = call %struct.pid* @get_pid(%struct.pid* %656)
  %658 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 2
  store %struct.pid* %657, %struct.pid** %658, align 8
  %659 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %660 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %659, i32 0, i32 76
  %661 = load %struct.cred*, %struct.cred** %660, align 32
  %662 = call %struct.cred* @get_cred(%struct.cred* %661)
  %663 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 3
  store %struct.cred* %662, %struct.cred** %663, align 8
  %664 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %665 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 12
  call void @security_task_getsecid(%struct.task_struct* %664, i32* %665)
  %666 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %667 = load %struct.usb_device*, %struct.usb_device** %666, align 8
  %668 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 7
  %669 = load i8*, i8** %668, align 8
  %670 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %671 = load %struct.urb*, %struct.urb** %670, align 8
  %672 = getelementptr inbounds %struct.urb, %struct.urb* %671, i32 0, i32 10
  %673 = load i32, i32* %672, align 8
  %674 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %675 = load %struct.urb*, %struct.urb** %674, align 8
  %676 = getelementptr inbounds %struct.urb, %struct.urb* %675, i32 0, i32 19
  %677 = load i32, i32* %676, align 8
  call void @snoop_urb(%struct.usb_device* %667, i8* %669, i32 %673, i32 %677, i32 0, i32 0, i8* null, i32 0)
  %678 = icmp ne i32 %.16, 0
  br i1 %678, label %686, label %679

; <label>:679:                                    ; preds = %650
  %680 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %681 = load %struct.urb*, %struct.urb** %680, align 8
  %682 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %683 = load %struct.urb*, %struct.urb** %682, align 8
  %684 = getelementptr inbounds %struct.urb, %struct.urb* %683, i32 0, i32 19
  %685 = load i32, i32* %684, align 8
  call void @snoop_urb_data(%struct.urb* %681, i32 %685)
  br label %686

; <label>:686:                                    ; preds = %679, %650
  call void @async_newpending(%struct.async* %269)
  %687 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %688 = call i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor* %687)
  %689 = icmp ne i32 %688, 0
  br i1 %689, label %690, label %737

; <label>:690:                                    ; preds = %686
  %691 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %692 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %691, i32 0, i32 0
  %693 = bitcast %union.anon* %692 to %struct.raw_spinlock*
  call void @_raw_spin_lock_irq(%struct.raw_spinlock* %693) #4
  %694 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %695 = call i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor* %694)
  %696 = getelementptr inbounds %struct.usb_host_endpoint, %struct.usb_host_endpoint* %46, i32 0, i32 0
  %697 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %696, i32 0, i32 2
  %698 = load i8, i8* %697, align 2
  %699 = zext i8 %698 to i32
  %700 = and i32 %699, 128
  %701 = ashr i32 %700, 3
  %702 = or i32 %695, %701
  %703 = trunc i32 %702 to i8
  %704 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 13
  store i8 %703, i8* %704, align 4
  %705 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 3
  %706 = load i32, i32* %705, align 8
  %707 = and i32 %706, 4
  %708 = icmp ne i32 %707, 0
  br i1 %708, label %709, label %711

; <label>:709:                                    ; preds = %690
  %710 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 14
  store i8 1, i8* %710, align 1
  br label %720

; <label>:711:                                    ; preds = %690
  %712 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 13
  %713 = load i8, i8* %712, align 4
  %714 = zext i8 %713 to i32
  %715 = shl i32 1, %714
  %716 = xor i32 %715, -1
  %717 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 14
  %718 = load i32, i32* %717, align 4
  %719 = and i32 %718, %716
  store i32 %719, i32* %717, align 4
  br label %720

; <label>:720:                                    ; preds = %711, %709
  %721 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 14
  %722 = load i32, i32* %721, align 4
  %723 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 13
  %724 = load i8, i8* %723, align 4
  %725 = zext i8 %724 to i32
  %726 = shl i32 1, %725
  %727 = and i32 %722, %726
  %728 = icmp ne i32 %727, 0
  br i1 %728, label %733, label %729

; <label>:729:                                    ; preds = %720
  %730 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %731 = load %struct.urb*, %struct.urb** %730, align 8
  %732 = call i32 @usb_submit_urb(%struct.urb* %731, i32 17301536)
  br label %733

; <label>:733:                                    ; preds = %720, %729
  %.07 = phi i32 [ %732, %729 ], [ -121, %720 ]
  %734 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %735 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %734, i32 0, i32 0
  %736 = bitcast %union.anon* %735 to %struct.raw_spinlock*
  call void @__raw_spin_unlock_irq(%struct.raw_spinlock* %736) #4
  br label %741

; <label>:737:                                    ; preds = %686
  %738 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %739 = load %struct.urb*, %struct.urb** %738, align 8
  %740 = call i32 @usb_submit_urb(%struct.urb* %739, i32 20971712)
  br label %741

; <label>:741:                                    ; preds = %737, %733
  %.18 = phi i32 [ %.07, %733 ], [ %740, %737 ]
  %742 = icmp ne i32 %.18, 0
  br i1 %742, label %743, label %772

; <label>:743:                                    ; preds = %741
  %744 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %745 = load %struct.usb_device*, %struct.usb_device** %744, align 8
  %746 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %745, i32 0, i32 11
  call void (i8*, %struct.device*, i8*, ...) @dev_printk(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), %struct.device* %746, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.56, i32 0, i32 0), i32 %.18)
  %747 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %748 = load %struct.usb_device*, %struct.usb_device** %747, align 8
  %749 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 7
  %750 = load i8*, i8** %749, align 8
  %751 = getelementptr inbounds %struct.async, %struct.async* %269, i32 0, i32 8
  %752 = load %struct.urb*, %struct.urb** %751, align 8
  %753 = getelementptr inbounds %struct.urb, %struct.urb* %752, i32 0, i32 10
  %754 = load i32, i32* %753, align 8
  call void @snoop_urb(%struct.usb_device* %748, i8* %750, i32 %754, i32 0, i32 %.18, i32 1, i8* null, i32 0)
  call void @async_removepending(%struct.async* %269)
  br label %755

; <label>:755:                                    ; preds = %441, %402, %367, %336, %303, %285, %268, %247, %227, %98, %90, %88, %743, %280, %220
  %.122 = phi %struct.usbdevfs_iso_packet_desc* [ null, %220 ], [ %.021, %280 ], [ null, %743 ], [ null, %88 ], [ null, %90 ], [ null, %98 ], [ %217, %227 ], [ %.021, %247 ], [ %.021, %268 ], [ %.021, %285 ], [ %.021, %303 ], [ %.021, %336 ], [ %.021, %367 ], [ %.021, %402 ], [ %.021, %441 ]
  %.020 = phi %struct.async* [ null, %220 ], [ %269, %280 ], [ %269, %743 ], [ null, %88 ], [ null, %90 ], [ null, %98 ], [ null, %227 ], [ null, %247 ], [ %269, %268 ], [ %269, %285 ], [ %269, %303 ], [ %269, %336 ], [ %269, %367 ], [ %269, %402 ], [ %269, %441 ]
  %.118 = phi %struct.usb_ctrlrequest* [ null, %220 ], [ %.017, %280 ], [ null, %743 ], [ %68, %88 ], [ %68, %90 ], [ %68, %98 ], [ null, %227 ], [ %.017, %247 ], [ %.017, %268 ], [ %.017, %285 ], [ %.017, %303 ], [ %.017, %336 ], [ %.017, %367 ], [ %.017, %402 ], [ %.017, %441 ]
  %.29 = phi i32 [ %223, %220 ], [ %283, %280 ], [ %.18, %743 ], [ -14, %88 ], [ -22, %90 ], [ %108, %98 ], [ -22, %227 ], [ -14, %247 ], [ -12, %268 ], [ %298, %285 ], [ -12, %303 ], [ -12, %336 ], [ -14, %367 ], [ -12, %402 ], [ -14, %441 ]
  %756 = icmp ne %struct.async* %.020, null
  br i1 %756, label %757, label %767

; <label>:757:                                    ; preds = %755
  %758 = getelementptr inbounds %struct.async, %struct.async* %.020, i32 0, i32 9
  %759 = load %struct.usb_memory*, %struct.usb_memory** %758, align 8
  %760 = icmp ne %struct.usb_memory* %759, null
  br i1 %760, label %761, label %767

; <label>:761:                                    ; preds = %757
  %762 = getelementptr inbounds %struct.async, %struct.async* %.020, i32 0, i32 9
  %763 = load %struct.usb_memory*, %struct.usb_memory** %762, align 8
  %764 = getelementptr inbounds %struct.async, %struct.async* %.020, i32 0, i32 9
  %765 = load %struct.usb_memory*, %struct.usb_memory** %764, align 8
  %766 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %765, i32 0, i32 2
  call void @dec_usb_memory_use_count(%struct.usb_memory* %763, i32* %766)
  br label %767

; <label>:767:                                    ; preds = %761, %757, %755
  %768 = bitcast %struct.usbdevfs_iso_packet_desc* %.122 to i8*
  call void @kfree(i8* %768)
  %769 = bitcast %struct.usb_ctrlrequest* %.118 to i8*
  call void @kfree(i8* %769)
  %770 = icmp ne %struct.async* %.020, null
  br i1 %770, label %771, label %772

; <label>:771:                                    ; preds = %767
  call void @free_async(%struct.async* %.020)
  br label %772

; <label>:772:                                    ; preds = %767, %771, %741, %48, %203, %193, %198, %189, %160, %160, %66, %62, %58, %41, %38, %30, %15, %4
  %.023 = phi i32 [ -22, %4 ], [ -22, %15 ], [ %36, %30 ], [ %39, %38 ], [ -2, %41 ], [ -22, %58 ], [ -22, %62 ], [ -12, %66 ], [ -22, %160 ], [ -22, %160 ], [ -22, %189 ], [ -22, %198 ], [ -22, %193 ], [ -22, %203 ], [ -22, %48 ], [ 0, %741 ], [ %.29, %771 ], [ %.29, %767 ]
  ret i32 %.023
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device*, i8 zeroext) #0 {
  %3 = zext i8 %1 to i32
  %4 = and i32 %3, 128
  %5 = icmp ne i32 %4, 0
  %6 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 17
  %7 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 16
  %.sink1 = select i1 %5, [16 x %struct.usb_host_endpoint*]* %7, [16 x %struct.usb_host_endpoint*]* %6
  %8 = zext i8 %1 to i32
  %9 = and i32 %8, 15
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds [16 x %struct.usb_host_endpoint*], [16 x %struct.usb_host_endpoint*]* %.sink1, i64 0, i64 %10
  %12 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %11, align 8
  ret %struct.usb_host_endpoint* %12
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_xfer_control(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 0
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_type(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 3
  ret i32 %5
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_xfer_int(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 3
  %7 = zext i1 %6 to i32
  ret i32 %7
}

declare i8* @memdup_user(i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal zeroext i1 @IS_ERR(i8*) #0 {
  %2 = ptrtoint i8* %0 to i64
  %3 = inttoptr i64 %2 to i8*
  %4 = ptrtoint i8* %3 to i64
  %5 = icmp uge i64 %4, -4095
  %6 = xor i1 %5, true
  %7 = xor i1 %6, true
  %8 = zext i1 %7 to i32
  %9 = sext i32 %8 to i64
  %10 = icmp ne i64 %9, 0
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @PTR_ERR(i8*) #0 {
  %2 = ptrtoint i8* %0 to i64
  ret i64 %2
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.async* @alloc_async(i32) #0 {
  %2 = call i8* @kzalloc(i64 96, i32 20971712)
  %3 = bitcast i8* %2 to %struct.async*
  %4 = icmp ne %struct.async* %3, null
  br i1 %4, label %5, label %13

; <label>:5:                                      ; preds = %1
  %6 = call %struct.urb* @usb_alloc_urb(i32 %0, i32 20971712)
  %7 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 8
  store %struct.urb* %6, %struct.urb** %7, align 8
  %8 = getelementptr inbounds %struct.async, %struct.async* %3, i32 0, i32 8
  %9 = load %struct.urb*, %struct.urb** %8, align 8
  %10 = icmp ne %struct.urb* %9, null
  br i1 %10, label %13, label %11

; <label>:11:                                     ; preds = %5
  %12 = bitcast %struct.async* %3 to i8*
  call void @kfree(i8* %12)
  br label %13

; <label>:13:                                     ; preds = %5, %1, %11
  %.0 = phi %struct.async* [ null, %11 ], [ null, %1 ], [ %3, %5 ]
  ret %struct.async* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.usb_memory* @find_memory_area(%struct.usb_dev_state*, %struct.usbdevfs_urb*) #0 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 4
  %6 = load i8*, i8** %5, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = icmp eq i64* %3, %4
  %9 = zext i1 %8 to i32
  %10 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %11 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %10, i32 0, i32 0
  %12 = bitcast %union.anon* %11 to %struct.raw_spinlock*
  %13 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %12)
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 6
  br label %15

; <label>:15:                                     ; preds = %55, %2
  %.sink = phi %struct.list_head* [ %56, %55 ], [ %14, %2 ]
  %16 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %17 = load %struct.list_head*, %struct.list_head** %16, align 8
  %18 = bitcast %struct.list_head* %17 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 0
  %20 = bitcast i8* %19 to %struct.usb_memory*
  %21 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 0
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 6
  %23 = icmp ne %struct.list_head* %21, %22
  br i1 %23, label %24, label %.loopexit

; <label>:24:                                     ; preds = %15
  %25 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 6
  %26 = load i64, i64* %25, align 8
  %27 = icmp uge i64 %7, %26
  br i1 %27, label %28, label %55

; <label>:28:                                     ; preds = %24
  %29 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 6
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 3
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = add i64 %30, %33
  %35 = icmp ult i64 %7, %34
  br i1 %35, label %36, label %55

; <label>:36:                                     ; preds = %28
  %37 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %1, i32 0, i32 5
  %38 = load i32, i32* %37, align 8
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 6
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = zext i32 %43 to i64
  %45 = add i64 %41, %44
  %46 = sub i64 %45, %7
  %47 = icmp ugt i64 %39, %46
  br i1 %47, label %48, label %51

; <label>:48:                                     ; preds = %36
  %49 = call i8* @ERR_PTR(i64 -22)
  %50 = bitcast i8* %49 to %struct.usb_memory*
  br label %.loopexit

; <label>:51:                                     ; preds = %36
  %52 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %53, 1
  store i32 %54, i32* %52, align 4
  br label %.loopexit

; <label>:55:                                     ; preds = %24, %28
  %56 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %20, i32 0, i32 0
  br label %15

.loopexit:                                        ; preds = %15, %48, %51
  %.1 = phi %struct.usb_memory* [ %50, %48 ], [ %20, %51 ], [ null, %15 ]
  %57 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0
  %59 = bitcast %union.anon* %58 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %59, i64 %13) #4
  ret %struct.usb_memory* %.1
}

declare void @sg_init_table(%struct.scatterlist*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @sg_set_buf(%struct.scatterlist*, i8*, i32) #0 {
  %4 = ptrtoint i8* %1 to i64
  %5 = call i64 @__phys_addr_nodebug(i64 %4)
  %6 = lshr i64 %5, 12
  %7 = getelementptr inbounds %struct.page, %struct.page* inttoptr (i64 -24189255811072 to %struct.page*), i64 %6
  %8 = ptrtoint i8* %1 to i64
  %9 = and i64 %8, 4095
  %10 = trunc i64 %9 to i32
  call void @sg_set_page(%struct.scatterlist* %0, %struct.page* %7, i32 %2, i32 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @async_completed(%struct.urb*) #0 {
  %2 = alloca %struct.siginfo, align 8
  %3 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 27
  %4 = load i8*, i8** %3, align 8
  %5 = bitcast i8* %4 to %struct.async*
  %6 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 1
  %7 = load %struct.usb_dev_state*, %struct.usb_dev_state** %6, align 8
  %8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 3
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.raw_spinlock*
  call void @_raw_spin_lock(%struct.raw_spinlock* %10) #4
  %11 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 0
  %12 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 5
  call void @list_move_tail(%struct.list_head* %11, %struct.list_head* %12)
  %13 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 12
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  store i32 %14, i32* %15, align 4
  %16 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %19, label %41

; <label>:19:                                     ; preds = %1
  %20 = bitcast %struct.siginfo* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %20, i8 0, i64 128, i32 8, i1 false)
  %21 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 0
  store i32 %22, i32* %23, align 8
  %24 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 1
  store i32 %25, i32* %26, align 4
  %27 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 2
  store i32 -4, i32* %27, align 8
  %28 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 7
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 3
  %31 = bitcast %union.anon.13* %30 to %struct.anon.18*
  %32 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %31, i32 0, i32 0
  store i8* %29, i8** %32, align 8
  %33 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 2
  %34 = load %struct.pid*, %struct.pid** %33, align 8
  %35 = call %struct.pid* @get_pid(%struct.pid* %34)
  %36 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 3
  %37 = load %struct.cred*, %struct.cred** %36, align 8
  %38 = call %struct.cred* @get_cred(%struct.cred* %37)
  %39 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 12
  %40 = load i32, i32* %39, align 8
  br label %41

; <label>:41:                                     ; preds = %1, %19
  %.02 = phi %struct.pid* [ %35, %19 ], [ null, %1 ]
  %.01 = phi i32 [ %40, %19 ], [ 0, %1 ]
  %.0 = phi %struct.cred* [ %38, %19 ], [ null, %1 ]
  %42 = load i8, i8* @usbfs_snoop, align 1
  %43 = trunc i8 %42 to i1
  br i1 %43, label %44, label %48

; <label>:44:                                     ; preds = %41
  %45 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8
  %46 = load %struct.usb_device*, %struct.usb_device** %45, align 8
  %47 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %46, i32 0, i32 11
  call void (%struct.device*, i8*, ...) @_dev_info(%struct.device* %47, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.58, i32 0, i32 0))
  br label %48

; <label>:48:                                     ; preds = %41, %44
  %49 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 8
  %50 = load %struct.usb_device*, %struct.usb_device** %49, align 8
  %51 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 7
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 10
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 20
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  %58 = load i32, i32* %57, align 4
  call void @snoop_urb(%struct.usb_device* %50, i8* %52, i32 %54, i32 %56, i32 %58, i32 1, i8* null, i32 0)
  %59 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 13
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, 512
  %62 = icmp eq i32 %61, 512
  br i1 %62, label %63, label %66

; <label>:63:                                     ; preds = %48
  %64 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 20
  %65 = load i32, i32* %64, align 4
  call void @snoop_urb_data(%struct.urb* %0, i32 %65)
  br label %66

; <label>:66:                                     ; preds = %63, %48
  %67 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %70, label %87

; <label>:70:                                     ; preds = %66
  %71 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 13
  %72 = load i8, i8* %71, align 4
  %73 = zext i8 %72 to i32
  %74 = icmp ne i32 %73, 0
  br i1 %74, label %75, label %87

; <label>:75:                                     ; preds = %70
  %76 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  %77 = load i32, i32* %76, align 4
  %78 = icmp ne i32 %77, -104
  br i1 %78, label %79, label %87

; <label>:79:                                     ; preds = %75
  %80 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 11
  %81 = load i32, i32* %80, align 4
  %82 = icmp ne i32 %81, -2
  br i1 %82, label %83, label %87

; <label>:83:                                     ; preds = %79
  %84 = getelementptr inbounds %struct.async, %struct.async* %5, i32 0, i32 13
  %85 = load i8, i8* %84, align 4
  %86 = zext i8 %85 to i32
  call void @cancel_bulk_urbs(%struct.usb_dev_state* %7, i32 %86)
  br label %87

; <label>:87:                                     ; preds = %83, %79, %75, %70, %66
  %88 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 3
  %89 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %88, i32 0, i32 0
  %90 = bitcast %union.anon* %89 to %struct.raw_spinlock*
  call void @__raw_spin_unlock(%struct.raw_spinlock* %90) #4
  %91 = icmp ne i32 %17, 0
  br i1 %91, label %92, label %96

; <label>:92:                                     ; preds = %87
  %93 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 0
  %94 = load i32, i32* %93, align 8
  %95 = call i32 @kill_pid_info_as_cred(i32 %94, %struct.siginfo* %2, %struct.pid* %.02, %struct.cred* %.0, i32 %.01)
  call void @put_pid(%struct.pid* %.02)
  call void @put_cred(%struct.cred* %.0)
  br label %96

; <label>:96:                                     ; preds = %92, %87
  %97 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %7, i32 0, i32 7
  call void @__wake_up(%struct.__wait_queue_head* %97, i32 3, i32 1, i8* null)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.pid* @get_pid(%struct.pid*) #0 {
  %2 = icmp ne %struct.pid* %0, null
  br i1 %2, label %3, label %6

; <label>:3:                                      ; preds = %1
  %4 = getelementptr inbounds %struct.pid, %struct.pid* %0, i32 0, i32 0
  %5 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %4, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %5, i32* %5) #4, !srcloc !45
  br label %6

; <label>:6:                                      ; preds = %3, %1
  ret %struct.pid* %0
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.pid* @task_pid(%struct.task_struct*) #0 {
  %2 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %0, i32 0, i32 56
  %3 = getelementptr inbounds [3 x %struct.pid_link], [3 x %struct.pid_link]* %2, i64 0, i64 0
  %4 = getelementptr inbounds %struct.pid_link, %struct.pid_link* %3, i32 0, i32 1
  %5 = load %struct.pid*, %struct.pid** %4, align 8
  ret %struct.pid* %5
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.cred* @get_cred(%struct.cred*) #0 {
  call void @validate_creds(%struct.cred* %0)
  %2 = call %struct.cred* @get_new_cred(%struct.cred* %0)
  ret %struct.cred* %2
}

declare void @security_task_getsecid(%struct.task_struct*, i32*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @snoop_urb_data(%struct.urb*, i32) #0 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  store i32 %1, i32* %3, align 4
  %5 = load i32, i32* @usbfs_snoop_max, align 4
  store i32 %5, i32* %4, align 4
  %6 = icmp eq i32* %3, %4
  %7 = zext i1 %6 to i32
  %8 = load i32, i32* %3, align 4
  %9 = load i32, i32* %4, align 4
  %10 = icmp ult i32 %8, %9
  %11 = load i32, i32* %3, align 4
  %12 = load i32, i32* %4, align 4
  %13 = select i1 %10, i32 %11, i32 %12
  %14 = load i8, i8* @usbfs_snoop, align 1
  %15 = trunc i8 %14 to i1
  %.not = xor i1 %15, true
  %16 = icmp eq i32 %13, 0
  %or.cond = or i1 %.not, %16
  br i1 %or.cond, label %.loopexit, label %17

; <label>:17:                                     ; preds = %2
  %18 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 18
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %25

; <label>:21:                                     ; preds = %17
  %22 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 14
  %23 = load i8*, i8** %22, align 8
  %24 = zext i32 %13 to i64
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 32, i32 1, i8* %23, i64 %24, i1 zeroext true)
  br label %.loopexit

; <label>:25:                                     ; preds = %17, %30
  %.01 = phi i32 [ %38, %30 ], [ %13, %17 ]
  %.0 = phi i32 [ %39, %30 ], [ 0, %17 ]
  %26 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 18
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %.0, %27
  %29 = icmp ne i32 %.01, 0
  %. = select i1 %28, i1 %29, i1 false
  br i1 %., label %30, label %.loopexit

; <label>:30:                                     ; preds = %25
  %31 = icmp ugt i32 %.01, 16384
  %..01 = select i1 %31, i32 16384, i32 %.01
  %32 = getelementptr inbounds %struct.urb, %struct.urb* %0, i32 0, i32 16
  %33 = load %struct.scatterlist*, %struct.scatterlist** %32, align 8
  %34 = sext i32 %.0 to i64
  %35 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %33, i64 %34
  %36 = call i8* @sg_virt(%struct.scatterlist* %35)
  %37 = sext i32 %..01 to i64
  call void @print_hex_dump(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.49, i32 0, i32 0), i32 0, i32 32, i32 1, i8* %36, i64 %37, i1 zeroext true)
  %38 = sub i32 %.01, %..01
  %39 = add nsw i32 %.0, 1
  br label %25

.loopexit:                                        ; preds = %25, %2, %21
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @async_newpending(%struct.async*) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 1
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %4, align 8
  %6 = icmp eq i64* %2, %3
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.raw_spinlock*
  %11 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %10)
  %12 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 4
  call void @list_add_tail(%struct.list_head* %12, %struct.list_head* %13)
  %14 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %15 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %14, i32 0, i32 0
  %16 = bitcast %union.anon* %15 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %16, i64 %11) #4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_xfer_bulk(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 3
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 3
  %6 = icmp eq i32 %5, 2
  %7 = zext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @usb_endpoint_num(%struct.usb_endpoint_descriptor*) #0 {
  %2 = getelementptr inbounds %struct.usb_endpoint_descriptor, %struct.usb_endpoint_descriptor* %0, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = zext i8 %3 to i32
  %5 = and i32 %4, 15
  ret i32 %5
}

declare i32 @usb_submit_urb(%struct.urb*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal void @async_removepending(%struct.async*) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 1
  %5 = load %struct.usb_dev_state*, %struct.usb_dev_state** %4, align 8
  %6 = icmp eq i64* %2, %3
  %7 = zext i1 %6 to i32
  %8 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %9 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %8, i32 0, i32 0
  %10 = bitcast %union.anon* %9 to %struct.raw_spinlock*
  %11 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %10)
  %12 = getelementptr inbounds %struct.async, %struct.async* %0, i32 0, i32 0
  call void @list_del_init(%struct.list_head* %12)
  %13 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %5, i32 0, i32 3
  %14 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %13, i32 0, i32 0
  %15 = bitcast %union.anon* %14 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %15, i64 %11) #4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @kzalloc(i64, i32) #0 {
  %3 = or i32 %1, 32768
  %4 = call noalias i8* @__kmalloc(i64 %0, i32 %3) #4
  ret i8* %4
}

declare %struct.urb* @usb_alloc_urb(i32, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @ERR_PTR(i64) #0 {
  %2 = inttoptr i64 %0 to i8*
  ret i8* %2
}

; Function Attrs: noinline nounwind uwtable
define internal void @sg_set_page(%struct.scatterlist*, %struct.page*, i32, i32) #0 {
  call void @sg_assign_page(%struct.scatterlist* %0, %struct.page* %1)
  %5 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 1
  store i32 %3, i32* %5, align 8
  %6 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 2
  store i32 %2, i32* %6, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @__phys_addr_nodebug(i64) #0 {
  %2 = sub i64 %0, -2147483648
  %3 = icmp ugt i64 %0, %2
  %4 = load i64, i64* @phys_base, align 8
  %5 = select i1 %3, i64 %4, i64 131939247849472
  %6 = add i64 %2, %5
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define internal void @sg_assign_page(%struct.scatterlist*, %struct.page*) #0 {
  %3 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 3
  %6 = ptrtoint %struct.page* %1 to i64
  %7 = and i64 %6, 3
  %8 = icmp ne i64 %7, 0
  %9 = xor i1 %8, true
  %10 = xor i1 %9, true
  %11 = zext i1 %10 to i32
  %12 = sext i32 %11 to i64
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %16

; <label>:14:                                     ; preds = %2
  call void asm sideeffect "1:\09ud2\0A.pushsection __bug_table,\22a\22\0A2:\09.long 1b - 2b, ${0:c} - 2b\0A\09.word ${1:c}, 0\0A\09.org 2b+${2:c}\0A.popsection", "i,i,i,~{dirflag},~{fpsr},~{flags}"(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.57, i32 0, i32 0), i32 90, i64 12) #4, !srcloc !46
  br label %15

; <label>:15:                                     ; preds = %15, %14
  br label %15

; <label>:16:                                     ; preds = %2
  %17 = ptrtoint %struct.page* %1 to i64
  %18 = or i64 %5, %17
  %19 = getelementptr inbounds %struct.scatterlist, %struct.scatterlist* %0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @cancel_bulk_urbs(%struct.usb_dev_state*, i32) #0 {
  %3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  br label %4

; <label>:4:                                      ; preds = %26, %2
  %.sink = phi %struct.list_head* [ %27, %26 ], [ %3, %2 ]
  %5 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %5, align 8
  %7 = bitcast %struct.list_head* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to %struct.async*
  %10 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  %12 = icmp ne %struct.list_head* %10, %11
  br i1 %12, label %13, label %28

; <label>:13:                                     ; preds = %4
  %14 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 13
  %15 = load i8, i8* %14, align 4
  %16 = zext i8 %15 to i32
  %17 = icmp eq i32 %16, %1
  br i1 %17, label %18, label %26

; <label>:18:                                     ; preds = %13
  %19 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 14
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i32
  %22 = icmp ne i32 %21, 1
  br i1 %22, label %.preheader, label %23

; <label>:23:                                     ; preds = %18
  %24 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 14
  store i8 2, i8* %24, align 1
  %25 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 13
  store i8 0, i8* %25, align 4
  br label %26

; <label>:26:                                     ; preds = %13, %23
  %27 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 0
  br label %4

; <label>:28:                                     ; preds = %4
  %29 = shl i32 1, %1
  %30 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 14
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %31, %29
  store i32 %32, i32* %30, align 4
  br label %.preheader

.preheader:                                       ; preds = %28, %18, %48
  %33 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  br label %34

; <label>:34:                                     ; preds = %60, %.preheader
  %.sink7 = phi %struct.list_head* [ %61, %60 ], [ %33, %.preheader ]
  %35 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink7, i32 0, i32 0
  %36 = load %struct.list_head*, %struct.list_head** %35, align 8
  %37 = bitcast %struct.list_head* %36 to i8*
  %38 = getelementptr inbounds i8, i8* %37, i64 0
  %39 = bitcast i8* %38 to %struct.async*
  %40 = getelementptr inbounds %struct.async, %struct.async* %39, i32 0, i32 0
  %41 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  %42 = icmp ne %struct.list_head* %40, %41
  br i1 %42, label %43, label %62

; <label>:43:                                     ; preds = %34
  %44 = getelementptr inbounds %struct.async, %struct.async* %39, i32 0, i32 14
  %45 = load i8, i8* %44, align 1
  %46 = zext i8 %45 to i32
  %47 = icmp eq i32 %46, 2
  br i1 %47, label %48, label %60

; <label>:48:                                     ; preds = %43
  %49 = getelementptr inbounds %struct.async, %struct.async* %39, i32 0, i32 14
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %struct.async, %struct.async* %39, i32 0, i32 8
  %51 = load %struct.urb*, %struct.urb** %50, align 8
  %52 = call %struct.urb* @usb_get_urb(%struct.urb* %51)
  %53 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %54 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %53, i32 0, i32 0
  %55 = bitcast %union.anon* %54 to %struct.raw_spinlock*
  call void @__raw_spin_unlock(%struct.raw_spinlock* %55) #4
  %56 = call i32 @usb_unlink_urb(%struct.urb* %51)
  call void @usb_free_urb(%struct.urb* %51)
  %57 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 3
  %58 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %57, i32 0, i32 0
  %59 = bitcast %union.anon* %58 to %struct.raw_spinlock*
  call void @_raw_spin_lock(%struct.raw_spinlock* %59) #4
  br label %.preheader

; <label>:60:                                     ; preds = %43
  %61 = getelementptr inbounds %struct.async, %struct.async* %39, i32 0, i32 0
  br label %34

; <label>:62:                                     ; preds = %34
  ret void
}

declare i32 @kill_pid_info_as_cred(i32, %struct.siginfo*, %struct.pid*, %struct.cred*, i32) #1

declare void @__wake_up(%struct.__wait_queue_head*, i32, i32, i8*) #1

declare void @_raw_spin_lock(%struct.raw_spinlock*) #1 section ".spinlock.text"

declare i32 @usb_unlink_urb(%struct.urb*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @__raw_spin_unlock(%struct.raw_spinlock*) #0 {
  call void @do_raw_spin_unlock(%struct.raw_spinlock* %0)
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !47
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @do_raw_spin_unlock(%struct.raw_spinlock*) #0 {
  %2 = getelementptr inbounds %struct.raw_spinlock, %struct.raw_spinlock* %0, i32 0, i32 0
  call void @queued_spin_unlock(%struct.qspinlock* %2)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @queued_spin_unlock(%struct.qspinlock*) #0 {
  call void @native_queued_spin_unlock(%struct.qspinlock* %0)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @native_queued_spin_unlock(%struct.qspinlock*) #0 {
  %2 = alloca %union.anon.64, align 1
  %3 = trunc i8 0 to i1
  br i1 %3, label %4, label %5

; <label>:4:                                      ; preds = %1
  call void @__compiletime_assert_17()
  br label %5

; <label>:5:                                      ; preds = %1, %4
  %6 = trunc i8 0 to i1
  %7 = zext i1 %6 to i32
  %8 = mul nsw i32 2, %7
  %9 = sub nsw i32 1, %8
  %10 = zext i32 %9 to i64
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !48
  %11 = bitcast %union.anon.64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %11, i8 0, i64 1, i32 1, i1 false)
  %12 = bitcast %struct.qspinlock* %0 to i8*
  %13 = bitcast %union.anon.64* %2 to [1 x i8]*
  %14 = getelementptr inbounds [1 x i8], [1 x i8]* %13, i32 0, i32 0
  %15 = load i8, i8* %14, align 1
  store volatile i8 %15, i8* %12, align 1
  %16 = bitcast %union.anon.64* %2 to i8*
  %17 = load i8, i8* %16, align 1
  ret void
}

declare void @__compiletime_assert_17() #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.cred* @get_new_cred(%struct.cred*) #0 {
  %2 = getelementptr inbounds %struct.cred, %struct.cred* %0, i32 0, i32 0
  %3 = getelementptr inbounds %struct.atomic_t, %struct.atomic_t* %2, i32 0, i32 0
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; incl $0", "=*m,*m,~{dirflag},~{fpsr},~{flags}"(i32* %3, i32* %3) #4, !srcloc !45
  ret %struct.cred* %0
}

declare void @_raw_spin_lock_irq(%struct.raw_spinlock*) #1 section ".spinlock.text"

; Function Attrs: noinline nounwind uwtable
define internal void @__raw_spin_unlock_irq(%struct.raw_spinlock*) #0 {
  call void @do_raw_spin_unlock(%struct.raw_spinlock* %0)
  call void @arch_local_irq_enable()
  call void asm sideeffect "", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !49
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @arch_local_irq_enable() #0 {
  call void @native_irq_enable()
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @native_irq_enable() #0 {
  call void asm sideeffect "sti", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !50
  ret void
}

declare i8* @compat_alloc_user_space(i64) #1

declare i64 @copy_in_user(i8*, i8*, i32) #1

; Function Attrs: noinline nounwind uwtable
define internal i8* @compat_ptr(i32) #0 {
  %2 = zext i32 %0 to i64
  %3 = inttoptr i64 %2 to i8*
  ret i8* %3
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @get_urb32(%struct.usbdevfs_urb*, %struct.usbdevfs_urb32*) #0 {
  %3 = ptrtoint %struct.usbdevfs_urb32* %1 to i64
  %4 = call %struct.task_struct* asm "movq %gs:${1:P},$0", "=r,im,~{dirflag},~{fpsr},~{flags}"(%struct.task_struct** @current_task) #3, !srcloc !2
  %5 = getelementptr inbounds %struct.task_struct, %struct.task_struct* %4, i32 0, i32 151
  %6 = getelementptr inbounds %struct.thread_struct, %struct.thread_struct* %5, i32 0, i32 19
  %7 = getelementptr inbounds %struct.mm_segment_t, %struct.mm_segment_t* %6, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = call zeroext i1 @__chk_range_not_ok(i64 %3, i64 44, i64 %8)
  %10 = zext i1 %9 to i8
  %11 = trunc i8 %10 to i1
  %12 = xor i1 %11, true
  %13 = xor i1 %12, true
  %14 = xor i1 %13, true
  %15 = zext i1 %14 to i32
  %16 = sext i32 %15 to i64
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %18, label %142

; <label>:18:                                     ; preds = %2
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %19 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 0
  %20 = bitcast i8* %19 to %struct.__large_struct*
  %21 = call { i32, i64 } asm sideeffect "\0A1:\09movb $2,${1:b}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorb ${1:b},${1:b}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=q,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %20, i32 -14, i32 0) #4, !srcloc !51
  %22 = extractvalue { i32, i64 } %21, 0
  %23 = extractvalue { i32, i64 } %21, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %24 = trunc i64 %23 to i8
  %25 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 0
  store i8 %24, i8* %25, align 8
  %26 = sext i32 %22 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %142, label %28

; <label>:28:                                     ; preds = %18
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %29 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 1
  %30 = bitcast i8* %29 to %struct.__large_struct*
  %31 = call { i32, i64 } asm sideeffect "\0A1:\09movb $2,${1:b}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorb ${1:b},${1:b}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=q,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %30, i32 -14, i32 0) #4, !srcloc !52
  %32 = extractvalue { i32, i64 } %31, 0
  %33 = extractvalue { i32, i64 } %31, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %34 = trunc i64 %33 to i8
  %35 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 1
  store i8 %34, i8* %35, align 1
  %36 = sext i32 %32 to i64
  %37 = icmp ne i64 %36, 0
  br i1 %37, label %142, label %38

; <label>:38:                                     ; preds = %28
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %39 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 2
  %40 = bitcast i32* %39 to %struct.__large_struct*
  %41 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %40, i32 -14, i32 0) #4, !srcloc !53
  %42 = extractvalue { i32, i64 } %41, 0
  %43 = extractvalue { i32, i64 } %41, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %44 = trunc i64 %43 to i32
  %45 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 2
  store i32 %44, i32* %45, align 4
  %46 = sext i32 %42 to i64
  %47 = icmp ne i64 %46, 0
  br i1 %47, label %142, label %48

; <label>:48:                                     ; preds = %38
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %49 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 3
  %50 = bitcast i32* %49 to %struct.__large_struct*
  %51 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %50, i32 -14, i32 0) #4, !srcloc !54
  %52 = extractvalue { i32, i64 } %51, 0
  %53 = extractvalue { i32, i64 } %51, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %54 = trunc i64 %53 to i32
  %55 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 3
  store i32 %54, i32* %55, align 8
  %56 = sext i32 %52 to i64
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %142, label %58

; <label>:58:                                     ; preds = %48
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %59 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 5
  %60 = bitcast i32* %59 to %struct.__large_struct*
  %61 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %60, i32 -14, i32 0) #4, !srcloc !55
  %62 = extractvalue { i32, i64 } %61, 0
  %63 = extractvalue { i32, i64 } %61, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 5
  store i32 %64, i32* %65, align 8
  %66 = sext i32 %62 to i64
  %67 = icmp ne i64 %66, 0
  br i1 %67, label %142, label %68

; <label>:68:                                     ; preds = %58
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %69 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 6
  %70 = bitcast i32* %69 to %struct.__large_struct*
  %71 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %70, i32 -14, i32 0) #4, !srcloc !56
  %72 = extractvalue { i32, i64 } %71, 0
  %73 = extractvalue { i32, i64 } %71, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %74 = trunc i64 %73 to i32
  %75 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 6
  store i32 %74, i32* %75, align 4
  %76 = sext i32 %72 to i64
  %77 = icmp ne i64 %76, 0
  br i1 %77, label %142, label %78

; <label>:78:                                     ; preds = %68
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %79 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 7
  %80 = bitcast i32* %79 to %struct.__large_struct*
  %81 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %80, i32 -14, i32 0) #4, !srcloc !57
  %82 = extractvalue { i32, i64 } %81, 0
  %83 = extractvalue { i32, i64 } %81, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %84 = trunc i64 %83 to i32
  %85 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 7
  store i32 %84, i32* %85, align 8
  %86 = sext i32 %82 to i64
  %87 = icmp ne i64 %86, 0
  br i1 %87, label %142, label %88

; <label>:88:                                     ; preds = %78
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %89 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 8
  %90 = bitcast i32* %89 to %struct.__large_struct*
  %91 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %90, i32 -14, i32 0) #4, !srcloc !58
  %92 = extractvalue { i32, i64 } %91, 0
  %93 = extractvalue { i32, i64 } %91, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %94 = trunc i64 %93 to i32
  %95 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 8
  %96 = bitcast %union.anon.62* %95 to i32*
  store i32 %94, i32* %96, align 4
  %97 = sext i32 %92 to i64
  %98 = icmp ne i64 %97, 0
  br i1 %98, label %142, label %99

; <label>:99:                                     ; preds = %88
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %100 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 9
  %101 = bitcast i32* %100 to %struct.__large_struct*
  %102 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %101, i32 -14, i32 0) #4, !srcloc !59
  %103 = extractvalue { i32, i64 } %102, 0
  %104 = extractvalue { i32, i64 } %102, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %105 = trunc i64 %104 to i32
  %106 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 9
  store i32 %105, i32* %106, align 8
  %107 = sext i32 %103 to i64
  %108 = icmp ne i64 %107, 0
  br i1 %108, label %142, label %109

; <label>:109:                                    ; preds = %99
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %110 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 10
  %111 = bitcast i32* %110 to %struct.__large_struct*
  %112 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %111, i32 -14, i32 0) #4, !srcloc !60
  %113 = extractvalue { i32, i64 } %112, 0
  %114 = extractvalue { i32, i64 } %112, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %115 = trunc i64 %114 to i32
  %116 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 10
  store i32 %115, i32* %116, align 4
  %117 = sext i32 %113 to i64
  %118 = icmp ne i64 %117, 0
  br i1 %118, label %142, label %119

; <label>:119:                                    ; preds = %109
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %120 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 4
  %121 = bitcast i32* %120 to %struct.__large_struct*
  %122 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %121, i32 -14, i32 0) #4, !srcloc !61
  %123 = extractvalue { i32, i64 } %122, 0
  %124 = extractvalue { i32, i64 } %122, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %125 = trunc i64 %124 to i32
  %126 = sext i32 %123 to i64
  %127 = icmp ne i64 %126, 0
  br i1 %127, label %142, label %128

; <label>:128:                                    ; preds = %119
  %129 = call i8* @compat_ptr(i32 %125)
  %130 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 4
  store i8* %129, i8** %130, align 8
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xcb\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !18
  %131 = getelementptr inbounds %struct.usbdevfs_urb32, %struct.usbdevfs_urb32* %1, i32 0, i32 11
  %132 = bitcast i32* %131 to %struct.__large_struct*
  %133 = call { i32, i64 } asm sideeffect "\0A1:\09movl $2,${1:k}\0A2:\0A.section .fixup,\22ax\22\0A3:\09mov $3,$0\0A\09xorl ${1:k},${1:k}\0A\09jmp 2b\0A.previous\0A .pushsection \22__ex_table\22,\22a\22\0A .balign 4\0A .long (1b) - .\0A .long (3b) - .\0A .long (ex_handler_default) - .\0A .popsection\0A", "=r,=r,*m,i,0,~{dirflag},~{fpsr},~{flags}"(%struct.__large_struct* %132, i32 -14, i32 0) #4, !srcloc !62
  %134 = extractvalue { i32, i64 } %133, 0
  %135 = extractvalue { i32, i64 } %133, 1
  call void asm sideeffect "661:\0A\09\0A662:\0A.skip -(((6651f-6641f)-(662b-661b)) > 0) * ((6651f-6641f)-(662b-661b)),0x90\0A663:\0A.pushsection .altinstructions,\22a\22\0A .long 661b - .\0A .long 6641f - .\0A .word ( 9*32+20)\0A .byte 663b-661b\0A .byte 6651f-6641f\0A .byte 663b-662b\0A.popsection\0A.pushsection .altinstr_replacement, \22ax\22\0A6641:\0A\09.byte 0x0f,0x01,0xca\0A6651:\0A\09.popsection", "~{memory},~{dirflag},~{fpsr},~{flags}"() #4, !srcloc !20
  %136 = trunc i64 %135 to i32
  %137 = sext i32 %134 to i64
  %138 = icmp ne i64 %137, 0
  br i1 %138, label %142, label %139

; <label>:139:                                    ; preds = %128
  %140 = call i8* @compat_ptr(i32 %136)
  %141 = getelementptr inbounds %struct.usbdevfs_urb, %struct.usbdevfs_urb* %0, i32 0, i32 11
  store i8* %140, i8** %141, align 8
  br label %142

; <label>:142:                                    ; preds = %128, %119, %2, %18, %28, %38, %48, %58, %68, %78, %88, %99, %109, %139
  %.0 = phi i32 [ 0, %139 ], [ -14, %109 ], [ -14, %99 ], [ -14, %88 ], [ -14, %78 ], [ -14, %68 ], [ -14, %58 ], [ -14, %48 ], [ -14, %38 ], [ -14, %28 ], [ -14, %18 ], [ -14, %2 ], [ -14, %119 ], [ -14, %128 ]
  ret i32 %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @proc_ioctl(%struct.usb_dev_state*, %struct.usbdevfs_ioctl*) #0 {
  %3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 15
  %4 = load i8, i8* %3, align 8
  %5 = trunc i8 %4 to i1
  br i1 %5, label %142, label %6

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = ashr i32 %8, 16
  %10 = and i32 %9, 16383
  %11 = icmp sgt i32 %10, 0
  br i1 %11, label %12, label %46

; <label>:12:                                     ; preds = %6
  %13 = sext i32 %10 to i64
  %14 = call noalias i8* @__kmalloc(i64 %13, i32 20971712) #4
  %15 = icmp eq i8* %14, null
  br i1 %15, label %142, label %16

; <label>:16:                                     ; preds = %12
  %17 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = ashr i32 %18, 30
  %20 = and i32 %19, 3
  %21 = and i32 %20, 1
  %22 = icmp ne i32 %21, 0
  br i1 %22, label %23, label %44

; <label>:23:                                     ; preds = %16
  %24 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %10 to i64
  %27 = call i64 @llvm.objectsize.i64.p0i8(i8* %14, i1 false) #4
  %28 = trunc i64 %27 to i32
  call void @might_fault() #4
  %29 = trunc i64 %26 to i32
  call void @kasan_check_write(i8* %14, i32 %29) #4
  %30 = icmp slt i32 %28, 0
  %31 = sext i32 %28 to i64
  %32 = icmp uge i64 %31, %26
  %33 = select i1 %30, i1 true, i1 %32
  %34 = xor i1 %33, true
  %35 = zext i1 %33 to i32
  %36 = sext i32 %35 to i64
  br i1 %33, label %37, label %40

; <label>:37:                                     ; preds = %23
  call void @check_object_size(i8* %14, i64 %26, i1 zeroext false) #4
  %38 = trunc i64 %26 to i32
  %39 = call i64 @_copy_from_user(i8* %14, i8* %25, i32 %38) #4
  br label %41

; <label>:40:                                     ; preds = %23
  call void @copy_user_overflow(i32 %28, i64 %26) #4
  br label %41

; <label>:41:                                     ; preds = %40, %37
  %.05 = phi i64 [ %39, %37 ], [ %26, %40 ]
  %42 = icmp ne i64 %.05, 0
  br i1 %42, label %43, label %46

; <label>:43:                                     ; preds = %41
  call void @kfree(i8* %14)
  br label %142

; <label>:44:                                     ; preds = %16
  %45 = sext i32 %10 to i64
  call void @llvm.memset.p0i8.i64(i8* %14, i8 0, i64 %45, i32 1, i1 false)
  br label %46

; <label>:46:                                     ; preds = %44, %41, %6
  %.03 = phi i8* [ null, %6 ], [ %14, %41 ], [ %14, %44 ]
  %47 = call i32 @connected(%struct.usb_dev_state* %0)
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %50, label %49

; <label>:49:                                     ; preds = %46
  call void @kfree(i8* %.03)
  br label %142

; <label>:50:                                     ; preds = %46
  %51 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %52 = load %struct.usb_device*, %struct.usb_device** %51, align 8
  %53 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %52, i32 0, i32 3
  %54 = load i32, i32* %53, align 8
  %55 = icmp ne i32 %54, 7
  br i1 %55, label %111, label %56

; <label>:56:                                     ; preds = %50
  %57 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %58 = load %struct.usb_device*, %struct.usb_device** %57, align 8
  %59 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 0
  %60 = load i32, i32* %59, align 8
  %61 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %58, i32 %60)
  %62 = icmp ne %struct.usb_interface* %61, null
  br i1 %62, label %63, label %111

; <label>:63:                                     ; preds = %56
  %64 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 1
  %65 = load i32, i32* %64, align 4
  switch i32 %65, label %86 [
    i32 21782, label %66
    i32 21783, label %78
  ]

; <label>:66:                                     ; preds = %63
  %67 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %68 = getelementptr inbounds %struct.device, %struct.device* %67, i32 0, i32 7
  %69 = load %struct.device_driver*, %struct.device_driver** %68, align 8
  %70 = icmp ne %struct.device_driver* %69, null
  br i1 %70, label %71, label %111

; <label>:71:                                     ; preds = %66
  %72 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %73 = getelementptr inbounds %struct.device, %struct.device* %72, i32 0, i32 7
  %74 = load %struct.device_driver*, %struct.device_driver** %73, align 8
  %75 = bitcast %struct.device_driver* %74 to i8*
  %76 = getelementptr inbounds i8, i8* %75, i64 -104
  %77 = bitcast i8* %76 to %struct.usb_driver*
  call void @usb_driver_release_interface(%struct.usb_driver* %77, %struct.usb_interface* %61)
  br label %111

; <label>:78:                                     ; preds = %63
  %79 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %80 = getelementptr inbounds %struct.device, %struct.device* %79, i32 0, i32 7
  %81 = load %struct.device_driver*, %struct.device_driver** %80, align 8
  %82 = icmp ne %struct.device_driver* %81, null
  br i1 %82, label %111, label %83

; <label>:83:                                     ; preds = %78
  %84 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %85 = call i32 @device_attach(%struct.device* %84)
  br label %111

; <label>:86:                                     ; preds = %63
  %87 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %88 = getelementptr inbounds %struct.device, %struct.device* %87, i32 0, i32 7
  %89 = load %struct.device_driver*, %struct.device_driver** %88, align 8
  %90 = icmp ne %struct.device_driver* %89, null
  br i1 %90, label %91, label %98

; <label>:91:                                     ; preds = %86
  %92 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %61, i32 0, i32 7
  %93 = getelementptr inbounds %struct.device, %struct.device* %92, i32 0, i32 7
  %94 = load %struct.device_driver*, %struct.device_driver** %93, align 8
  %95 = bitcast %struct.device_driver* %94 to i8*
  %96 = getelementptr inbounds i8, i8* %95, i64 -104
  %97 = bitcast i8* %96 to %struct.usb_driver*
  br label %98

; <label>:98:                                     ; preds = %91, %86
  %.0 = phi %struct.usb_driver* [ %97, %91 ], [ null, %86 ]
  %99 = icmp eq %struct.usb_driver* %.0, null
  br i1 %99, label %111, label %100

; <label>:100:                                    ; preds = %98
  %101 = getelementptr inbounds %struct.usb_driver, %struct.usb_driver* %.0, i32 0, i32 3
  %102 = load i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32, i8*)** %101, align 8
  %103 = icmp eq i32 (%struct.usb_interface*, i32, i8*)* %102, null
  br i1 %103, label %111, label %104

; <label>:104:                                    ; preds = %100
  %105 = getelementptr inbounds %struct.usb_driver, %struct.usb_driver* %.0, i32 0, i32 3
  %106 = load i32 (%struct.usb_interface*, i32, i8*)*, i32 (%struct.usb_interface*, i32, i8*)** %105, align 8
  %107 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = call i32 %106(%struct.usb_interface* %61, i32 %108, i8* %.03)
  %110 = icmp eq i32 %109, -515
  %. = select i1 %110, i32 -25, i32 %109
  br label %111

; <label>:111:                                    ; preds = %56, %104, %100, %98, %83, %78, %71, %66, %50
  %.6 = phi i32 [ -113, %50 ], [ -22, %56 ], [ 0, %71 ], [ -61, %66 ], [ %85, %83 ], [ -16, %78 ], [ %., %104 ], [ -25, %100 ], [ -25, %98 ]
  %112 = icmp sge i32 %.6, 0
  br i1 %112, label %113, label %141

; <label>:113:                                    ; preds = %111
  %114 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 1
  %115 = load i32, i32* %114, align 4
  %116 = ashr i32 %115, 30
  %117 = and i32 %116, 3
  %118 = and i32 %117, 2
  %119 = icmp ne i32 %118, 0
  %120 = icmp sgt i32 %10, 0
  %or.cond = and i1 %119, %120
  br i1 %or.cond, label %121, label %141

; <label>:121:                                    ; preds = %113
  %122 = getelementptr inbounds %struct.usbdevfs_ioctl, %struct.usbdevfs_ioctl* %1, i32 0, i32 2
  %123 = load i8*, i8** %122, align 8
  %124 = sext i32 %10 to i64
  %125 = call i64 @llvm.objectsize.i64.p0i8(i8* %.03, i1 false) #4
  %126 = trunc i64 %125 to i32
  %127 = trunc i64 %124 to i32
  call void @kasan_check_read(i8* %.03, i32 %127) #4
  call void @might_fault() #4
  %128 = icmp slt i32 %126, 0
  %129 = sext i32 %126 to i64
  %130 = icmp uge i64 %129, %124
  %131 = select i1 %128, i1 true, i1 %130
  %132 = xor i1 %131, true
  %133 = zext i1 %131 to i32
  %134 = sext i32 %133 to i64
  br i1 %131, label %135, label %138

; <label>:135:                                    ; preds = %121
  call void @check_object_size(i8* %.03, i64 %124, i1 zeroext true) #4
  %136 = trunc i64 %124 to i32
  %137 = call i64 @_copy_to_user(i8* %123, i8* %.03, i32 %136) #4
  br label %139

; <label>:138:                                    ; preds = %121
  call void @copy_user_overflow(i32 %126, i64 %124) #4
  br label %139

; <label>:139:                                    ; preds = %138, %135
  %.01 = phi i64 [ %137, %135 ], [ %124, %138 ]
  %140 = icmp ne i64 %.01, 0
  %..6 = select i1 %140, i32 -14, i32 %.6
  br label %141

; <label>:141:                                    ; preds = %139, %113, %111
  %.7 = phi i32 [ %.6, %113 ], [ %.6, %111 ], [ %..6, %139 ]
  call void @kfree(i8* %.03)
  br label %142

; <label>:142:                                    ; preds = %12, %2, %141, %49, %43
  %.04 = phi i32 [ -14, %43 ], [ %.7, %141 ], [ -19, %49 ], [ -13, %2 ], [ -12, %12 ]
  ret i32 %.04
}

declare void @usb_driver_release_interface(%struct.usb_driver*, %struct.usb_interface*) #1

declare i32 @device_attach(%struct.device*) #1

; Function Attrs: noinline nounwind uwtable
define internal %struct.async* @async_getpending(%struct.usb_dev_state*, i8*) #0 {
  %3 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  br label %4

; <label>:4:                                      ; preds = %13, %2
  %.sink = phi %struct.list_head* [ %3, %2 ], [ %17, %13 ]
  %5 = getelementptr inbounds %struct.list_head, %struct.list_head* %.sink, i32 0, i32 0
  %6 = load %struct.list_head*, %struct.list_head** %5, align 8
  %7 = bitcast %struct.list_head* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  %9 = bitcast i8* %8 to %struct.async*
  %10 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 0
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  %12 = icmp ne %struct.list_head* %10, %11
  br i1 %12, label %13, label %19

; <label>:13:                                     ; preds = %4
  %14 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 7
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, %1
  %17 = getelementptr inbounds %struct.async, %struct.async* %9, i32 0, i32 0
  br i1 %16, label %18, label %4

; <label>:18:                                     ; preds = %13
  call void @list_del_init(%struct.list_head* %17)
  br label %19

; <label>:19:                                     ; preds = %4, %18
  %.0 = phi %struct.async* [ %9, %18 ], [ null, %4 ]
  ret %struct.async* %.0
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @releaseintf(%struct.usb_dev_state*, i32) #0 {
  %3 = alloca i8, align 1
  %4 = zext i32 %1 to i64
  %5 = icmp uge i64 %4, 64
  br i1 %5, label %17, label %6

; <label>:6:                                      ; preds = %2
  %7 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %8 = load %struct.usb_device*, %struct.usb_device** %7, align 8
  %9 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %8, i32 %1)
  %10 = icmp ne %struct.usb_interface* %9, null
  br i1 %10, label %11, label %17

; <label>:11:                                     ; preds = %6
  %12 = zext i32 %1 to i64
  %13 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 12
  call void asm sideeffect ".pushsection .smp_locks,\22a\22\0A.balign 4\0A.long 671f - .\0A.popsection\0A671:\0A\09lock; btr $2, $0;\0A\09setc $1\0A", "=*m,=*qm,Ir,*m,~{memory},~{dirflag},~{fpsr},~{flags}"(i64* %13, i8* %3, i64 %12, i64* %13) #4, !srcloc !63
  %14 = load i8, i8* %3, align 1
  %15 = trunc i8 %14 to i1
  br i1 %15, label %16, label %17

; <label>:16:                                     ; preds = %11
  call void @usb_driver_release_interface(%struct.usb_driver* @usbfs_driver, %struct.usb_interface* %9)
  br label %17

; <label>:17:                                     ; preds = %6, %16, %11, %2
  %.01 = phi i32 [ -22, %2 ], [ -2, %6 ], [ 0, %16 ], [ -22, %11 ]
  ret i32 %.01
}

declare i32 @usb_hub_claim_port(%struct.usb_device*, i32, %struct.usb_dev_state*) #1

declare i32 @usb_hub_release_port(%struct.usb_device*, i32, %struct.usb_dev_state*) #1

declare i32 @strncmp(i8*, i8*, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @parse_usbdevfs_streams(%struct.usb_dev_state*, %struct.usbdevfs_streams*, i32*, i32*, %struct.usb_host_endpoint***, %struct.usb_interface**) #0 {
  call void @might_fault()
  %7 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %1, i32 0, i32 0
  %8 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %7, i64 4, i8* undef) #4, !srcloc !64
  %9 = extractvalue { i32*, i64, i8* } %8, 0
  %10 = extractvalue { i32*, i64, i8* } %8, 1
  %11 = extractvalue { i32*, i64, i8* } %8, 2
  %12 = ptrtoint i32* %9 to i64
  %13 = trunc i64 %12 to i32
  %14 = trunc i64 %10 to i32
  %15 = sext i32 %13 to i64
  %16 = icmp ne i64 %15, 0
  br i1 %16, label %98, label %17

; <label>:17:                                     ; preds = %6
  call void @might_fault()
  %18 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %1, i32 0, i32 1
  %19 = call { i32*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i32* %18, i64 4, i8* undef) #4, !srcloc !65
  %20 = extractvalue { i32*, i64, i8* } %19, 0
  %21 = extractvalue { i32*, i64, i8* } %19, 1
  %22 = extractvalue { i32*, i64, i8* } %19, 2
  %23 = ptrtoint i32* %20 to i64
  %24 = trunc i64 %23 to i32
  %25 = trunc i64 %21 to i32
  %26 = sext i32 %24 to i64
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %98, label %28

; <label>:28:                                     ; preds = %17
  %29 = icmp ult i32 %25, 1
  %30 = icmp ugt i32 %25, 30
  %or.cond = or i1 %29, %30
  br i1 %or.cond, label %98, label %31

; <label>:31:                                     ; preds = %28
  %32 = icmp ne i32* %2, null
  br i1 %32, label %33, label %36

; <label>:33:                                     ; preds = %31
  %34 = icmp ult i32 %14, 2
  %35 = icmp ugt i32 %14, 65536
  %or.cond5 = or i1 %34, %35
  br i1 %or.cond5, label %98, label %36

; <label>:36:                                     ; preds = %33, %31
  %37 = zext i32 %25 to i64
  %38 = mul i64 %37, 8
  %39 = call noalias i8* @__kmalloc(i64 %38, i32 20971712) #4
  %40 = bitcast i8* %39 to %struct.usb_host_endpoint**
  %41 = icmp ne %struct.usb_host_endpoint** %40, null
  br i1 %41, label %42, label %98

; <label>:42:                                     ; preds = %36, %90
  %.04 = phi i32 [ %91, %90 ], [ 0, %36 ]
  %.03 = phi %struct.usb_interface* [ %.1, %90 ], [ null, %36 ]
  %.0 = phi i8* [ %51, %90 ], [ undef, %36 ]
  %43 = icmp ult i32 %.04, %25
  br i1 %43, label %44, label %92

; <label>:44:                                     ; preds = %42
  call void @might_fault()
  %45 = getelementptr inbounds %struct.usbdevfs_streams, %struct.usbdevfs_streams* %1, i32 0, i32 2
  %46 = zext i32 %.04 to i64
  %47 = getelementptr inbounds [0 x i8], [0 x i8]* %45, i64 0, i64 %46
  %48 = call { i8*, i64, i8* } asm sideeffect "call __get_user_${4:P}", "={ax},={rdx},={rsp},0,i,2,~{dirflag},~{fpsr},~{flags}"(i8* %47, i64 1, i8* %.0) #4, !srcloc !66
  %49 = extractvalue { i8*, i64, i8* } %48, 0
  %50 = extractvalue { i8*, i64, i8* } %48, 1
  %51 = extractvalue { i8*, i64, i8* } %48, 2
  %52 = ptrtoint i8* %49 to i64
  %53 = trunc i64 %52 to i32
  %54 = trunc i64 %50 to i8
  %55 = sext i32 %53 to i64
  %56 = icmp ne i64 %55, 0
  br i1 %56, label %96, label %57

; <label>:57:                                     ; preds = %44
  %58 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %59 = load %struct.usb_device*, %struct.usb_device** %58, align 8
  %60 = call %struct.usb_host_endpoint* @ep_to_host_endpoint(%struct.usb_device* %59, i8 zeroext %54)
  %61 = zext i32 %.04 to i64
  %62 = getelementptr inbounds %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %40, i64 %61
  store %struct.usb_host_endpoint* %60, %struct.usb_host_endpoint** %62, align 8
  %63 = zext i32 %.04 to i64
  %64 = getelementptr inbounds %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %40, i64 %63
  %65 = load %struct.usb_host_endpoint*, %struct.usb_host_endpoint** %64, align 8
  %66 = icmp ne %struct.usb_host_endpoint* %65, null
  br i1 %66, label %67, label %96

; <label>:67:                                     ; preds = %57
  %68 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %69 = load %struct.usb_device*, %struct.usb_device** %68, align 8
  %70 = zext i8 %54 to i32
  %71 = call i32 @findintfep(%struct.usb_device* %69, i32 %70)
  %72 = icmp slt i32 %71, 0
  br i1 %72, label %96, label %73

; <label>:73:                                     ; preds = %67
  %74 = icmp eq i32 %.04, 0
  br i1 %74, label %75, label %82

; <label>:75:                                     ; preds = %73
  %76 = call i32 @checkintf(%struct.usb_dev_state* %0, i32 %71)
  %77 = icmp slt i32 %76, 0
  br i1 %77, label %96, label %78

; <label>:78:                                     ; preds = %75
  %79 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 1
  %80 = load %struct.usb_device*, %struct.usb_device** %79, align 8
  %81 = call %struct.usb_interface* @usb_ifnum_to_if(%struct.usb_device* %80, i32 %71)
  br label %90

; <label>:82:                                     ; preds = %73
  %83 = getelementptr inbounds %struct.usb_interface, %struct.usb_interface* %.03, i32 0, i32 0
  %84 = load %struct.usb_host_interface*, %struct.usb_host_interface** %83, align 8
  %85 = getelementptr inbounds %struct.usb_host_interface, %struct.usb_host_interface* %84, i32 0, i32 0
  %86 = getelementptr inbounds %struct.usb_interface_descriptor, %struct.usb_interface_descriptor* %85, i32 0, i32 2
  %87 = load i8, i8* %86, align 2
  %88 = zext i8 %87 to i32
  %89 = icmp ne i32 %71, %88
  br i1 %89, label %96, label %90

; <label>:90:                                     ; preds = %78, %82
  %.1 = phi %struct.usb_interface* [ %81, %78 ], [ %.03, %82 ]
  %91 = add i32 %.04, 1
  br label %42

; <label>:92:                                     ; preds = %42
  %93 = icmp ne i32* %2, null
  br i1 %93, label %94, label %95

; <label>:94:                                     ; preds = %92
  store i32 %14, i32* %2, align 4
  br label %95

; <label>:95:                                     ; preds = %94, %92
  store i32 %25, i32* %3, align 4
  store %struct.usb_host_endpoint** %40, %struct.usb_host_endpoint*** %4, align 8
  store %struct.usb_interface* %.03, %struct.usb_interface** %5, align 8
  br label %98

; <label>:96:                                     ; preds = %82, %75, %67, %57, %44
  %.02 = phi i32 [ -14, %44 ], [ -22, %57 ], [ %71, %67 ], [ %76, %75 ], [ -22, %82 ]
  %97 = bitcast %struct.usb_host_endpoint** %40 to i8*
  call void @kfree(i8* %97)
  br label %98

; <label>:98:                                     ; preds = %36, %33, %28, %6, %17, %96, %95
  %.01 = phi i32 [ %.02, %96 ], [ 0, %95 ], [ -14, %17 ], [ -14, %6 ], [ -22, %28 ], [ -22, %33 ], [ -12, %36 ]
  ret i32 %.01
}

declare i32 @usb_alloc_streams(%struct.usb_interface*, %struct.usb_host_endpoint**, i32, i32, i32) #1

declare i32 @usb_free_streams(%struct.usb_interface*, %struct.usb_host_endpoint**, i32, i32) #1

declare i8* @usb_alloc_coherent(%struct.usb_device*, i64, i32, i64*) #1

declare i32 @remap_pfn_range(%struct.vm_area_struct*, i64, i64, i64, i64) #1

; Function Attrs: noinline nounwind uwtable
define internal i64 @virt_to_phys(i8*) #0 {
  %2 = ptrtoint i8* %0 to i64
  %3 = call i64 @__phys_addr_nodebug(i64 %2)
  ret i64 %3
}

; Function Attrs: noinline nounwind uwtable
define internal void @usbdev_vm_open(%struct.vm_area_struct*) #0 {
  %2 = alloca i64, align 8
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15
  %5 = load i8*, i8** %4, align 8
  %6 = bitcast i8* %5 to %struct.usb_memory*
  %7 = icmp eq i64* %2, %3
  %8 = zext i1 %7 to i32
  %9 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %6, i32 0, i32 7
  %10 = load %struct.usb_dev_state*, %struct.usb_dev_state** %9, align 8
  %11 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %10, i32 0, i32 3
  %12 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %11, i32 0, i32 0
  %13 = bitcast %union.anon* %12 to %struct.raw_spinlock*
  %14 = call i64 @_raw_spin_lock_irqsave(%struct.raw_spinlock* %13)
  %15 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %6, i32 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %6, i32 0, i32 7
  %19 = load %struct.usb_dev_state*, %struct.usb_dev_state** %18, align 8
  %20 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %19, i32 0, i32 3
  %21 = getelementptr inbounds %struct.spinlock, %struct.spinlock* %20, i32 0, i32 0
  %22 = bitcast %union.anon* %21 to %struct.raw_spinlock*
  call void @_raw_spin_unlock_irqrestore(%struct.raw_spinlock* %22, i64 %14) #4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal void @usbdev_vm_close(%struct.vm_area_struct*) #0 {
  %2 = getelementptr inbounds %struct.vm_area_struct, %struct.vm_area_struct* %0, i32 0, i32 15
  %3 = load i8*, i8** %2, align 8
  %4 = bitcast i8* %3 to %struct.usb_memory*
  %5 = getelementptr inbounds %struct.usb_memory, %struct.usb_memory* %4, i32 0, i32 1
  call void @dec_usb_memory_use_count(%struct.usb_memory* %4, i32* %5)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @imajor(%struct.inode*) #0 {
  %2 = getelementptr inbounds %struct.inode, %struct.inode* %0, i32 0, i32 13
  %3 = load i32, i32* %2, align 4
  %4 = lshr i32 %3, 20
  ret i32 %4
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.usb_device* @usbdev_lookup_by_devt(i32) #0 {
  %2 = zext i32 %0 to i64
  %3 = inttoptr i64 %2 to i8*
  %4 = call %struct.device* @bus_find_device(%struct.bus_type* @usb_bus_type, %struct.device* null, i8* %3, i32 (%struct.device*, i8*)* @match_devt)
  %5 = icmp ne %struct.device* %4, null
  %6 = bitcast %struct.device* %4 to i8*
  %7 = getelementptr inbounds i8, i8* %6, i64 -152
  %8 = bitcast i8* %7 to %struct.usb_device*
  %.0 = select i1 %5, %struct.usb_device* %8, %struct.usb_device* null
  ret %struct.usb_device* %.0
}

declare i32 @usb_autoresume_device(%struct.usb_device*) #1

declare void @__init_waitqueue_head(%struct.__wait_queue_head*, i8*, %struct.lock_class_key*) #1

declare void @usb_put_dev(%struct.usb_device*) #1

declare %struct.device* @bus_find_device(%struct.bus_type*, %struct.device*, i8*, i32 (%struct.device*, i8*)*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @match_devt(%struct.device*, i8*) #0 {
  %3 = getelementptr inbounds %struct.device, %struct.device* %0, i32 0, i32 26
  %4 = load i32, i32* %3, align 8
  %5 = ptrtoint i8* %1 to i64
  %6 = trunc i64 %5 to i32
  %7 = icmp eq i32 %4, %6
  %8 = zext i1 %7 to i32
  ret i32 %8
}

declare void @usb_hub_release_all_ports(%struct.usb_device*, %struct.usb_dev_state*) #1

; Function Attrs: noinline nounwind uwtable
define internal void @destroy_all_async(%struct.usb_dev_state*) #0 {
  %2 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %0, i32 0, i32 4
  call void @destroy_async(%struct.usb_dev_state* %0, %struct.list_head* %2)
  ret void
}

declare void @usb_autosuspend_device(%struct.usb_device*) #1

; Function Attrs: noinline nounwind uwtable
define internal i32 @usbdev_notify(%struct.notifier_block*, i64, i8*) #0 {
  %cond = icmp eq i64 %1, 2
  br i1 %cond, label %4, label %6

; <label>:4:                                      ; preds = %3
  %5 = bitcast i8* %2 to %struct.usb_device*
  call void @usbdev_remove(%struct.usb_device* %5)
  br label %6

; <label>:6:                                      ; preds = %3, %4
  ret i32 1
}

; Function Attrs: noinline nounwind uwtable
define internal void @usbdev_remove(%struct.usb_device*) #0 {
  %2 = alloca %struct.siginfo, align 8
  br label %3

; <label>:3:                                      ; preds = %8, %20, %1
  %4 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 27
  %5 = call i32 @list_empty(%struct.list_head* %4)
  %6 = icmp ne i32 %5, 0
  %7 = xor i1 %6, true
  br i1 %7, label %8, label %41

; <label>:8:                                      ; preds = %3
  %9 = getelementptr inbounds %struct.usb_device, %struct.usb_device* %0, i32 0, i32 27
  %10 = getelementptr inbounds %struct.list_head, %struct.list_head* %9, i32 0, i32 0
  %11 = load %struct.list_head*, %struct.list_head** %10, align 8
  %12 = bitcast %struct.list_head* %11 to i8*
  %13 = getelementptr inbounds i8, i8* %12, i64 0
  %14 = bitcast i8* %13 to %struct.usb_dev_state*
  call void @destroy_all_async(%struct.usb_dev_state* %14)
  %15 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 7
  call void @__wake_up(%struct.__wait_queue_head* %15, i32 3, i32 0, i8* null)
  %16 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 0
  call void @list_del_init(%struct.list_head* %16)
  %17 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 8
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %20, label %3

; <label>:20:                                     ; preds = %8
  %21 = bitcast %struct.siginfo* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* %21, i8 0, i64 128, i32 8, i1 false)
  %22 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 8
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 0
  store i32 %23, i32* %24, align 8
  %25 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 1
  store i32 32, i32* %25, align 4
  %26 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 2
  store i32 -4, i32* %26, align 8
  %27 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 11
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.siginfo, %struct.siginfo* %2, i32 0, i32 3
  %30 = bitcast %union.anon.13* %29 to %struct.anon.18*
  %31 = getelementptr inbounds %struct.anon.18, %struct.anon.18* %30, i32 0, i32 0
  store i8* %28, i8** %31, align 8
  %32 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 9
  %35 = load %struct.pid*, %struct.pid** %34, align 8
  %36 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 10
  %37 = load %struct.cred*, %struct.cred** %36, align 8
  %38 = getelementptr inbounds %struct.usb_dev_state, %struct.usb_dev_state* %14, i32 0, i32 13
  %39 = load i32, i32* %38, align 8
  %40 = call i32 @kill_pid_info_as_cred(i32 %33, %struct.siginfo* %2, %struct.pid* %35, %struct.cred* %37, i32 %39)
  br label %3

; <label>:41:                                     ; preds = %3
  ret void
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone }
attributes #4 = { nounwind }

!llvm.ident = !{!0}

!0 = !{!"clang version 4.0.1 (tags/RELEASE_401/final)"}
!1 = !{i32 -2147036511, i32 -2147036472, i32 -2147036451, i32 -2147036414, i32 -2147036391, i32 -2147036521}
!2 = !{i32 -2146800491}
!3 = !{i32 -2142959879}
!4 = !{i32 415949, i32 415960, i32 -2147027197}
!5 = !{i32 -2142951745}
!6 = !{i32 -2142950891}
!7 = !{i32 -2142949683}
!8 = !{i32 -2142929247}
!9 = !{i32 -2142927439}
!10 = !{i32 -2142926941}
!11 = !{i32 -2142925403}
!12 = !{i32 -2142920647}
!13 = !{i32 -2142919091}
!14 = !{i32 -2142918389}
!15 = !{i32 -2142916761}
!16 = !{i32 -2142916031}
!17 = !{i32 -2142914225}
!18 = !{i32 -2144299427, i32 -2144299420, i32 -2144299404, i32 -2144299388, i32 -2144299099, i32 -2144299752, i32 -2144299093, i32 -2144299045, i32 -2144298981, i32 -2144298919, i32 -2144298862, i32 -2144298806, i32 -2144299672, i32 -2144299647, i32 -2144298478, i32 -2144298551, i32 -2144298464, i32 -2144298510}
!19 = !{i32 -2142835822, i32 -2142835802, i32 -2142835761, i32 -2142835740, i32 -2142835701, i32 -2142835672, i32 -2142835626, i32 -2142835601, i32 -2142835329, i32 -2142835285, i32 -2142835262, i32 -2142835229, i32 -2142835198, i32 -2142835142}
!20 = !{i32 -2144301057, i32 -2144301050, i32 -2144301034, i32 -2144301018, i32 -2144300729, i32 -2144301382, i32 -2144300723, i32 -2144300675, i32 -2144300611, i32 -2144300549, i32 -2144300492, i32 -2144300436, i32 -2144301302, i32 -2144301277, i32 -2144300108, i32 -2144300181, i32 -2144300094, i32 -2144300140}
!21 = !{i32 -2142830991, i32 -2142830971, i32 -2142830930, i32 -2142830909, i32 -2142830870, i32 -2142830841, i32 -2142830795, i32 -2142830770, i32 -2142830492, i32 -2142830448, i32 -2142830425, i32 -2142830392, i32 -2142830361, i32 -2142830305}
!22 = !{i32 -2142826252, i32 -2142826232, i32 -2142826191, i32 -2142826170, i32 -2142826131, i32 -2142826102, i32 -2142826056, i32 -2142826031, i32 -2142825759, i32 -2142825715, i32 -2142825692, i32 -2142825659, i32 -2142825628, i32 -2142825572}
!23 = !{i32 -2142843412}
!24 = !{i32 -2142842555}
!25 = !{i32 -2142824317}
!26 = !{i32 -2142823140}
!27 = !{i32 -2142821309}
!28 = !{i32 -2142929916}
!29 = !{i32 -2142941871}
!30 = !{i32 -2142940089}
!31 = !{i32 -2142938284}
!32 = !{i32 -2142936233}
!33 = !{i32 -2142934133}
!34 = !{i32 -2142931920}
!35 = !{i32 -2146535750, i32 -2146535711, i32 -2146535690, i32 -2146535653, i32 -2146535630, i32 -2146535621, i32 -2146535577}
!36 = !{i32 -2146513971, i32 -2146513932, i32 -2146513911, i32 -2146513874, i32 -2146513851, i32 -2146513981}
!37 = !{i32 -2142854185}
!38 = !{i32 -2142852400}
!39 = !{i32 -2142850592}
!40 = !{i32 -2142848538}
!41 = !{i32 -2142846435}
!42 = !{i32 -2142844595}
!43 = !{i32 -2146514183, i32 -2146514144, i32 -2146514123, i32 -2146514086, i32 -2146514063, i32 -2146514193}
!44 = !{i32 -2147037257, i32 -2147037218, i32 -2147037197, i32 -2147037160, i32 -2147037137, i32 -2147037267}
!45 = !{i32 -2146536752, i32 -2146536713, i32 -2146536692, i32 -2146536655, i32 -2146536632, i32 -2146536762}
!46 = !{i32 -2143504026, i32 -2143504001, i32 -2143503731, i32 -2143503934, i32 -2143503903, i32 -2143503873}
!47 = !{i32 -2146256284}
!48 = !{i32 -2146284259}
!49 = !{i32 -2146255457}
!50 = !{i32 1111018}
!51 = !{i32 -2142912054, i32 -2142912034, i32 -2142911993, i32 -2142911972, i32 -2142911933, i32 -2142911904, i32 -2142911858, i32 -2142911833, i32 -2142911561, i32 -2142911517, i32 -2142911494, i32 -2142911461, i32 -2142911430, i32 -2142911374}
!52 = !{i32 -2142907275, i32 -2142907255, i32 -2142907214, i32 -2142907193, i32 -2142907154, i32 -2142907125, i32 -2142907079, i32 -2142907054, i32 -2142906778, i32 -2142906734, i32 -2142906711, i32 -2142906678, i32 -2142906647, i32 -2142906591}
!53 = !{i32 -2142900840, i32 -2142900820, i32 -2142900779, i32 -2142900758, i32 -2142900719, i32 -2142900690, i32 -2142900644, i32 -2142900619, i32 -2142900345, i32 -2142900301, i32 -2142900278, i32 -2142900245, i32 -2142900214, i32 -2142900158}
!54 = !{i32 -2142896092, i32 -2142896072, i32 -2142896031, i32 -2142896010, i32 -2142895971, i32 -2142895942, i32 -2142895896, i32 -2142895871, i32 -2142895598, i32 -2142895554, i32 -2142895531, i32 -2142895498, i32 -2142895467, i32 -2142895411}
!55 = !{i32 -2142891197, i32 -2142891177, i32 -2142891136, i32 -2142891115, i32 -2142891076, i32 -2142891047, i32 -2142891001, i32 -2142890976, i32 -2142890695, i32 -2142890651, i32 -2142890628, i32 -2142890595, i32 -2142890564, i32 -2142890508}
!56 = !{i32 -2142886262, i32 -2142886242, i32 -2142886201, i32 -2142886180, i32 -2142886141, i32 -2142886112, i32 -2142886066, i32 -2142886041, i32 -2142885760, i32 -2142885716, i32 -2142885693, i32 -2142885660, i32 -2142885629, i32 -2142885573}
!57 = !{i32 -2142881365, i32 -2142881345, i32 -2142881304, i32 -2142881283, i32 -2142881244, i32 -2142881215, i32 -2142881169, i32 -2142881144, i32 -2142880865, i32 -2142880821, i32 -2142880798, i32 -2142880765, i32 -2142880734, i32 -2142880678}
!58 = !{i32 -2142876364, i32 -2142876344, i32 -2142876303, i32 -2142876282, i32 -2142876243, i32 -2142876214, i32 -2142876168, i32 -2142876143, i32 -2142875858, i32 -2142875814, i32 -2142875791, i32 -2142875758, i32 -2142875727, i32 -2142875671}
!59 = !{i32 -2142871447, i32 -2142871427, i32 -2142871386, i32 -2142871365, i32 -2142871326, i32 -2142871297, i32 -2142871251, i32 -2142871226, i32 -2142870947, i32 -2142870903, i32 -2142870880, i32 -2142870847, i32 -2142870816, i32 -2142870760}
!60 = !{i32 -2142866674, i32 -2142866654, i32 -2142866613, i32 -2142866592, i32 -2142866553, i32 -2142866524, i32 -2142866478, i32 -2142866453, i32 -2142866180, i32 -2142866136, i32 -2142866113, i32 -2142866080, i32 -2142866049, i32 -2142865993}
!61 = !{i32 -2142861925, i32 -2142861905, i32 -2142861864, i32 -2142861843, i32 -2142861804, i32 -2142861775, i32 -2142861729, i32 -2142861704, i32 -2142861430, i32 -2142861386, i32 -2142861363, i32 -2142861330, i32 -2142861299, i32 -2142861243}
!62 = !{i32 -2142857086, i32 -2142857066, i32 -2142857025, i32 -2142857004, i32 -2142856965, i32 -2142856936, i32 -2142856890, i32 -2142856865, i32 -2142856586, i32 -2142856542, i32 -2142856519, i32 -2142856486, i32 -2142856455, i32 -2142856399}
!63 = !{i32 -2147028937, i32 -2147028898, i32 -2147028877, i32 -2147028840, i32 -2147028817, i32 -2147028808, i32 -2147028754}
!64 = !{i32 -2142964013}
!65 = !{i32 -2142963183}
!66 = !{i32 -2142962178}
